{"version":3,"sources":["node_modules/browser-pack/_prelude.js","package.json","src/LocalReader/ArchiveParser.js","src/LocalReader/DataReader.js","src/LocalReader/FileTypes.js","src/LocalReader/LocalReader.ts","src/LocalReader/PersistantStore.js","src/Logger.js","src/MapFileList.js","src/T3DLib.js","src/dataRenderer/DataRenderer.js","src/dataRenderer/EnvironmentRenderer.js","src/dataRenderer/HavokRenderer.js","src/dataRenderer/PropertiesRenderer.js","src/dataRenderer/SingleModelRenderer.js","src/dataRenderer/StringRenderer.js","src/dataRenderer/TerrainRenderer.js","src/dataRenderer/ZoneRenderer.js","src/format/chunks/AllFormats.js","src/format/chunks/amsp.js","src/format/chunks/anim-0.js","src/format/chunks/anim-1.js","src/format/chunks/area.js","src/format/chunks/armf.js","src/format/chunks/asnd.js","src/format/chunks/audi.js","src/format/chunks/bidx.js","src/format/chunks/bkck.js","src/format/chunks/bloc.js","src/format/chunks/cdhs.js","src/format/chunks/cg15.js","src/format/chunks/cnfg.js","src/format/chunks/coll.js","src/format/chunks/comp.js","src/format/chunks/cscn.js","src/format/chunks/cube.js","src/format/chunks/data.js","src/format/chunks/dcal.js","src/format/chunks/dx9s.js","src/format/chunks/edit.js","src/format/chunks/env.js","src/format/chunks/eula.js","src/format/chunks/exp.js","src/format/chunks/expa.js","src/format/chunks/fall.js","src/format/chunks/game.js","src/format/chunks/geom.js","src/format/chunks/gr2s.js","src/format/chunks/grmt.js","src/format/chunks/havk.js","src/format/chunks/icon.js","src/format/chunks/laye.js","src/format/chunks/lght.js","src/format/chunks/mach.js","src/format/chunks/main-0.js","src/format/chunks/main-1.js","src/format/chunks/mfst-0.js","src/format/chunks/mfst-1.js","src/format/chunks/modl.js","src/format/chunks/mras.js","src/format/chunks/msn.js","src/format/chunks/nm15.js","src/format/chunks/nmex.js","src/format/chunks/obs.js","src/format/chunks/occ.js","src/format/chunks/octm.js","src/format/chunks/pack.js","src/format/chunks/parm.js","src/format/chunks/pgtb.js","src/format/chunks/phys-0.js","src/format/chunks/phys-1.js","src/format/chunks/pnvm.js","src/format/chunks/ppsh.js","src/format/chunks/prp2.js","src/format/chunks/prps.js","src/format/chunks/ps3s.js","src/format/chunks/pvsh.js","src/format/chunks/reso.js","src/format/chunks/rive.js","src/format/chunks/root.js","src/format/chunks/seqn.js","src/format/chunks/shad.js","src/format/chunks/shex.js","src/format/chunks/shor.js","src/format/chunks/skel.js","src/format/chunks/snd.js","src/format/chunks/sppa.js","src/format/chunks/surf.js","src/format/chunks/tkac.js","src/format/chunks/tlfs.js","src/format/chunks/tool.js","src/format/chunks/trn.js","src/format/chunks/trni.js","src/format/chunks/txtm.js","src/format/chunks/txtp.js","src/format/chunks/txtv.js","src/format/chunks/upda.js","src/format/chunks/updb.js","src/format/chunks/vari.js","src/format/chunks/watr.js","src/format/chunks/xbxs.js","src/format/chunks/xshd.js","src/format/chunks/zon2.js","src/format/file/GW2Chunk.js","src/format/file/GW2File.js","src/util/Logs.js","src/util/MaterialUtils.js","src/util/MathUtils.js","src/util/ParserUtils.js","src/util/RenderUtils.js","src/util/TerrainShader.js"],"names":["f","exports","module","define","amd","window","global","self","this","T3D","r","e","n","t","o","i","c","require","u","a","Error","code","p","call","length","1","name","version","scripts","build","lint","lint:fix","format","format:check","dependencies","DataStream.js","vblob","web-worker","devDependencies","browserify","eslint","gulp","gulp-sourcemaps","gulp-uglify","gulplog","prettier","tsify","typescript","uglify-es","vinyl-buffer","vinyl-source-stream","main","useTabs","trailingComma","tabWidth","printWidth","MathUtils","parseANDatHeader","ds","header","readUint8","magic","readString","headerSize","readUint32","seek","position","chunkSize","crc","mftOffset","arr32To64","mftSize","flags","Logger","log","TYPE_DEBUG","TYPE_ERROR","parseMFTTable","nbOfEntries","fullTable","item","readUint16","table","mftIndexOffset","offset","mftIndexSize","size","parseMFTIndex","indexTable","id","mftIndex","getFilePart","file","process","fs","fd","openSync","buffer","Buffer","alloc","readLen","readSync","DataStream","endianness","LITTLE_ENDIAN","closeSync","len","Promise","resolve","reject","reader","FileReader","onerror","onload","fileEvent","target","result","readAsArrayBuffer","slice","readArchive","_a","archiveHeader","apply","_d","sent","_b","mftData","_c","metaTable","error_1","DataReader","settings","_settings","_workerPool","_workerLoad","_inflateCallbacks","workersNb","_startWorker","workerPath","prototype","inflate","mftId","isImage","capLength","_this","arrayBuffer","byteLength","TYPE_WARNING","concat","push","workerId","_getBestWorkerIndex","postMessage","path","worker","Worker","selfWorkerId","onmessage","message_event","data","split","_i","callback","dxtType","imageWidth","imageHeight","indexOf","Math","min","GW2File","FileTypes","getFileType","first4","readCString","type","globalThis","ArchiveParser","PersistantStore","MapFileList","LocalReader","_dataReader","_persistantStore","_file","undefined","_indexTable","_fileMetaTable","noIndexedDB","openArchive","getFileIndex","baseId","getFileMeta","readFile","raw","fileLength","extractLength","meta","compressed","then","data_1","readFileList","oldFileList","persistantList","getLastListing","lastListing","array","complete","persistantId","key","index","iterateList","Object","keys","map","Number","taskArray","task","persistantNeedsUpdate","this_1","_needsScan","scan","race","taskId_1","_readFileType","scanResult","fileType","change","floor","TYPE_PROGRESS","putListing","res","all","_persistantData","getFileList","readMapList","fileList","maps","reduce","category","entry","fileName","temporaryStore","fileList_1","getMapList","mapArray","reversedIndex","getReverseIndex","filter","found","fileMap","find","toString","maps_1","sort","b","localeCompare","typeList","reverseBaseIdList","baseIds","baseIdList","reversed","loadFile","persistantData","metaData","_fileTypeCache","fileBuffer","_dbConnection","_getConnection","request","indexedDB","open","onblocked","onupgradeneeded","event","db","currentVersion","oldVersion","createObjectStore","autoIncrement","currentTarget","transaction","objectStore","createIndex","unique","onsuccess","isReady","listing","isComplete","store","put","filename","openCursor","IDBKeyRange","only","cursor","value","primaryKey","TYPE_MESSAGE","logFunctions","Array","arguments","argArr","argsToArr","unshift","severity","max","shift","args","console","error","warn","debug","numErrors","_version","t3dtoolsWorker","concurrentTasks","navigator","hardwareConcurrency","GW2Chunk","DataRenderer","EnvironmentRenderer","HavokRenderer","PropertiesRenderer","SingleModelRenderer","TerrainRenderer","ZoneRenderer","StringRenderer","MaterialUtils","ParserUtils","RenderUtils","getLocalReader","lrInstance","getFileListAsync","localReader","returnObj","result_1","fileEntry","getMapListAsync","searchAll","restoreOuput","returnArray","elt","findIndex","array_1","j","renderMapContentsAsync","renderers","logger","runAllRenderers","context","parseInt","mapFile","runRenderer","renderClass","assign","bind","cb","rendererName","renderAsync","getContextValue","clazz","propName","defaultValue","output","hasWebGL","return_context","WebGLRenderingContext","canvas","document","createElement","names","getContext","getParameter","gl","formats","THREE","getOutput","otherClass","inflatedData","fileId","rawData","uarr","Uint8Array","rawStrings","String","fromCharCode","subarray","rawString","join","imageHeigth","image","width","height","_super","__extends","getMat","tex","MeshBasicMaterial","side","BackSide","fog","depthWrite","loadTextureWithFallback","targetMatIndices","materialArray","fallbackFilename","hazeColorAsInt","writeMat","mat","forEach","loadFallback","TextureLoader","load","loadLocalTexture","setTimeout","getHazeColor","environmentChunkData","hazes","dataGlobal","haze","farColor","parseLights","lights","ambientLight","hasLight","lighting","backlightIntensity","backlightColor","light","dirLightData","color","Color","directionalLight","DirectionalLight","getHex","intensity","set","direction","normalize","lightDir","AmbientLight","ambientTotal","g","parseSkybox","parameterChunkData","skyCubeTexture","skyBox","skyModeTex","texPathNE","texPathSW","texPathT","bounds","rect","mapW","abs","mapD","visible","skyGeometry","BoxGeometry","boxSize","faceVertexUvs","vecs","idx","face","vec2","x","y","uvsNeedUpdate","Mesh","getChunk","hazeColor","lastP","seed","meshes","renderModels","models","title","MeshNormalMaterial","DoubleSide","parseAllModels","getCollisionsForAnimation","animation","collisions","ret","collisionIndices","collision","round","animationFromGeomIndex","geometryIndex","geometries","animations","havokChunkData","renderMesh","propGeomIndex","l","model","pos","translate","rot","rotate","scale","mesh","parseHavokMesh","rotation","order","seedRandom","sin","clone","geom","Geometry","vertices","v","Vector3","indices","f1","f2","f3","faces","Face3","computeFaceNormals","boundingBox","boundsMax","propModels","zoneModels","obsModels","mdl","renderZoneModelsCB","LogsUtils","showUnmaterialized","meshCache","textureCache","propertiesChunkData","props","propArray","propAnimArray","propInstanceArray","propMetaArray","prop","propSize","transforms","modelsList","renderModel","getFileIdsAsync","progress","modelName","getMeshesForFilename","_isCached","boundingSphere","placeModelOnScene","instancedMesh","getInstancedMesh","instancedIndex","setMatrixAt","getMatrixForProp","transform","propData","matrix","Matrix4","makeRotationFromEuler","Euler","setPosition","isCached","strings","end","entryHeaderDef","entryIndex","readStruct","decryptionOffset","bitsPerSymbol","readUCS2String","recid","language","TerrainShader","drawWater","material","wireframe","opacity","transparent","renderRect","parseNumChunks","terrainData","numChunksD_1","sqrt","dims","chunkArray","numChunksD_2","loadPagedImageCallback","infaltedBuffer","terrainTiles","pimgDS","pimgTableDataChunk","pimgData","mapRect","parameterData","maxAnisotropy","anisotropy","xChunks","yChunks","allMaterials","materials","allTextures","texFileArray","dx","dy","cdx","cdy","allMats","customMaterial","MeshLambertMaterial","flatShading","chunkTextures","strippedPages","page","layer","coord","matName","chunkTex","wrapS","RepeatWrapping","wrapT","stepChunk","cx","cy","water","pct","chunkIndex","pageX","pageY","chunkTextureIndices","loResMaterial","texIndexArray","pageOffetX","pageOffetY","fileNames","gi","textureFileName","pageTexName","pageTexName2","near","far","envOutput","uniforms","UniformsUtils","merge","UniformsLib","uvScale","Vector2","texturePicker","texturePicker2","texture1","texture2","texture3","texture4","ShaderMaterial","fragmentShader","getFragmentShader","vertexShader","getVertexShader","chunkGeo","PlaneBufferGeometry","chunkW","cn","getAttribute","heightMapArray","chunk","mS","identity","elements","applyMatrix4","computeVertexNormals","SceneUtils","createMultiMaterialObject","PI","globalOffsetX","chunkOffsetX","globalOffsetY","chunkOffsetY","z","px","py","x1","x2","y1","y2","updateMatrix","updateMatrixWorld","renderChunk","pagedImageId","pagedImage","terrainChunk","fileIds","texture","renderZone","zone","zoneDefs","renderZoneCallback","zoneDef","zd","token","defToken","modelGroups","getModelGroups","groupKeys","stepModels","group","meshGroups","instanceIdx","meshIdx","materialFlags","move","mg","geometry","readVerts","verts","Float32Array","readIndices","getIndex","Uint32Array","readUVs","uvs","readNormals","normals","writeVerts","stride","i_1","writeIndices","strideIndices","i_2","writeUvs","uvStride","i_3","writeNormals","normalStride","i_4","meshGroup","mergedGeom","BufferGeometry","setAttribute","BufferAttribute","setIndex","buffersNeedUpdate","mapX","mapY","zoneRect","vertRect","encodeData","zdx","linearPos","flag","zoneDefLayer","layerDefArray","modelX","modelY","modelZ_1","raycaster_1","Raycaster","intersections","intersectObject","distance","modelFilename","modelArray","rotRangeX","rotRangeY","rotRangeZ","scaleRange","fadeRange","zoneChunkData","zones","zoneArray","zoneDefArray","lastPct","stepZone","definitionArray","GRMT","DX9S","TOOL","XBXS","UPDB","PS3S","UPDA","MRAS","XSHD","PPSH","PVSH","SPPA","CDHS","PGTB","DATA","txtm","txtp","txtv","vari","AMSP","BKCK","BIDX","ASND","CSCN","havk","shad","area","audi","bloc","cg15","cube","env","laye","lght","msn","nm15","nmex","obs","occ","octm","parm","phys","pnvm","prp2","reso","rive","tlfs","shex","shor","snd","surf","zon2","trn","trni","watr","edit","dcal","exp","pack","MODL","ANIM","COLL","GR2S","ROOT","GAME","ICON","SKEL","PRPS","GEOM","EXPA","PHYS","MFST","ARMF","TKAC","comp","Main","anim","eula","mach","fall","seqn","cnfg","mfst","Utils","versions","29","DspDataV29","getArrayReader","BussDynamicDataV29","getQWordReader","BussDataV29","getPointerReader","EnvelopePointDataV29","EnvelopeDataV29","RangeDataV29","RandomParamDataV29","DynamicParamDataV29","AttenuationDataV29","CategoryDynamicDataV29","CategoryDataV29","MaterialDataV29","MusicConditionDataV29","FileNameDataV29","getFileNameReader","MusicPlaylistDataV29","PropertyDataV29","ReverbDataV29","ScriptRefDataV29","SnapshotDataV29","MusicExternalDataV29","getString16Reader","AudioSettingsDataV29","HandlerDataV29","MetaSoundDataV29","TriggerMarkerDataV29","TriggerKeyDataV29","__root","ScriptFileDataV29","28","DspDataV28","BussDynamicDataV28","BussDataV28","EnvelopePointDataV28","EnvelopeDataV28","RangeDataV28","RandomParamDataV28","DynamicParamDataV28","AttenuationDataV28","CategoryDynamicDataV28","CategoryDataV28","MaterialDataV28","MusicConditionDataV28","FileNameDataV28","MusicPlaylistDataV28","PropertyDataV28","ReverbDataV28","ScriptRefDataV28","SnapshotDataV28","AudioSettingsDataV28","HandlerDataV28","MetaSoundDataV28","TriggerMarkerDataV28","TriggerKeyDataV28","ScriptFileDataV28","27","DspDataV27","BussDynamicDataV27","BussDataV27","EnvelopePointDataV27","EnvelopeDataV27","RangeDataV27","RandomParamDataV27","DynamicParamDataV27","AttenuationDataV27","CategoryDynamicDataV27","CategoryDataV27","MaterialDataV27","MusicConditionDataV27","FileNameDataV27","MusicPlaylistDataV27","PropertyDataV27","ReverbDataV27","ScriptRefDataV27","SnapshotDataV27","AudioSettingsDataV27","HandlerDataV27","MetaSoundDataV27","TriggerMarkerDataV27","TriggerKeyDataV27","ScriptFileDataV27","26","DspDataV26","BussDynamicDataV26","BussDataV26","EnvelopePointDataV26","EnvelopeDataV26","RangeDataV26","RandomParamDataV26","DynamicParamDataV26","AttenuationDataV26","CategoryDynamicDataV26","CategoryDataV26","MaterialDataV26","MusicConditionDataV26","FileNameDataV26","MusicPlaylistDataV26","ReverbDataV26","SnapshotDataV26","AudioSettingsDataV26","HandlerDataV26","MetaSoundDataV26","ScriptRefDataV26","TriggerMarkerDataV26","TriggerKeyDataV26","ScriptFileDataV26","25","DspDataV25","BussDynamicDataV25","BussDataV25","EnvelopePointDataV25","EnvelopeDataV25","RangeDataV25","RandomParamDataV25","DynamicParamDataV25","AttenuationDataV25","CategoryDynamicDataV25","CategoryDataV25","MaterialDataV25","MusicConditionDataV25","FileNameDataV25","MusicPlaylistDataV25","ReverbDataV25","SnapshotDataV25","AudioSettingsDataV25","HandlerDataV25","MetaSoundDataV25","ScriptRefDataV25","TriggerMarkerDataV25","TriggerKeyDataV25","ScriptFileDataV25","24","DspDataV24","BussDynamicDataV24","BussDataV24","EnvelopePointDataV24","EnvelopeDataV24","RangeDataV24","RandomParamDataV24","DynamicParamDataV24","AttenuationDataV24","CategoryDynamicDataV24","CategoryDataV24","MusicConditionDataV24","FileNameDataV24","MusicPlaylistDataV24","ReverbDataV24","SnapshotDataV24","AudioSettingsDataV24","HandlerDataV24","MetaSoundDataV24","ScriptRefDataV24","TriggerMarkerDataV24","TriggerKeyDataV24","ScriptFileDataV24","23","DspDataV23","BussDynamicDataV23","BussDataV23","EnvelopePointDataV23","EnvelopeDataV23","RangeDataV23","RandomParamDataV23","DynamicParamDataV23","AttenuationDataV23","CategoryDynamicDataV23","CategoryDataV23","MusicConditionDataV23","FileNameDataV23","MusicPlaylistDataV23","ReverbDataV23","SnapshotDataV23","AudioSettingsDataV23","HandlerDataV23","MetaSoundDataV23","ScriptRefDataV23","TriggerMarkerDataV23","TriggerKeyDataV23","ScriptFileDataV23","22","DspDataV22","BussDynamicDataV22","BussDataV22","EnvelopePointDataV22","EnvelopeDataV22","RangeDataV22","RandomParamDataV22","DynamicParamDataV22","AttenuationDataV22","CategoryDynamicDataV22","CategoryDataV22","MusicConditionDataV22","FileNameDataV22","MusicPlaylistDataV22","ReverbDataV22","SnapshotDataV22","AudioSettingsDataV22","HandlerDataV22","MetaSoundDataV22","ScriptRefDataV22","TriggerMarkerDataV22","TriggerKeyDataV22","ScriptFileDataV22","21","DspDataV21","BussDynamicDataV21","BussDataV21","EnvelopePointDataV21","EnvelopeDataV21","RangeDataV21","RandomParamDataV21","DynamicParamDataV21","AttenuationDataV21","CategoryDynamicDataV21","CategoryDataV21","MusicConditionDataV21","FileNameDataV21","MusicPlaylistDataV21","ReverbDataV21","SnapshotDataV21","AudioSettingsDataV21","HandlerDataV21","MetaSoundDataV21","ScriptRefDataV21","TriggerMarkerDataV21","TriggerKeyDataV21","ScriptFileDataV21","20","DspDataV20","BussDynamicDataV20","BussDataV20","EnvelopePointDataV20","EnvelopeDataV20","RangeDataV20","RandomParamDataV20","DynamicParamDataV20","AttenuationDataV20","CategoryDynamicDataV20","CategoryDataV20","ReverbDataV20","SnapshotDataV20","AudioSettingsDataV20","HandlerDataV20","FileNameDataV20","MetaSoundDataV20","ScriptRefDataV20","TriggerMarkerDataV20","TriggerKeyDataV20","ScriptFileDataV20","19","DspDataV19","BussDynamicDataV19","BussDataV19","EnvelopePointDataV19","EnvelopeDataV19","RangeDataV19","RandomParamDataV19","DynamicParamDataV19","AttenuationDataV19","CategoryDynamicDataV19","CategoryDataV19","ReverbDataV19","SnapshotDataV19","AudioSettingsDataV19","HandlerDataV19","FileNameDataV19","MetaSoundDataV19","ScriptRefDataV19","TriggerMarkerDataV19","TriggerKeyDataV19","ScriptFileDataV19","18","DspDataV18","BussDynamicDataV18","BussDataV18","EnvelopePointDataV18","EnvelopeDataV18","RangeDataV18","RandomParamDataV18","DynamicParamDataV18","AttenuationDataV18","CategoryDynamicDataV18","CategoryDataV18","ReverbDataV18","SnapshotDataV18","AudioSettingsDataV18","HandlerDataV18","FileNameDataV18","MetaSoundDataV18","ScriptRefDataV18","TriggerMarkerDataV18","TriggerKeyDataV18","ScriptFileDataV18","17","DspDataV17","BussDynamicDataV17","BussDataV17","EnvelopePointDataV17","EnvelopeDataV17","RangeDataV17","RandomParamDataV17","DynamicParamDataV17","AttenuationDataV17","CategoryDynamicDataV17","CategoryDataV17","ReverbDataV17","SnapshotDataV17","AudioSettingsDataV17","HandlerDataV17","FileNameDataV17","MetaSoundDataV17","ScriptRefDataV17","TriggerMarkerDataV17","TriggerKeyDataV17","ScriptFileDataV17","16","DspDataV16","BussDynamicDataV16","BussDataV16","EnvelopePointDataV16","EnvelopeDataV16","RangeDataV16","RandomParamDataV16","DynamicParamDataV16","AttenuationDataV16","CategoryDynamicDataV16","CategoryDataV16","ReverbDataV16","SnapshotDataV16","AudioSettingsDataV16","HandlerDataV16","FileNameDataV16","MetaSoundDataV16","ScriptRefDataV16","TriggerMarkerDataV16","TriggerKeyDataV16","ScriptFileDataV16","15","DspDataV15","BussDynamicDataV15","BussDataV15","EnvelopePointDataV15","EnvelopeDataV15","RangeDataV15","RandomParamDataV15","DynamicParamDataV15","AttenuationDataV15","CategoryDynamicDataV15","CategoryDataV15","ReverbDataV15","SnapshotDataV15","AudioSettingsDataV15","HandlerDataV15","FileNameDataV15","MetaSoundDataV15","ScriptRefDataV15","TriggerMarkerDataV15","TriggerKeyDataV15","ScriptFileDataV15","14","DspDataV14","BussDynamicDataV14","BussDataV14","EnvelopePointDataV14","EnvelopeDataV14","RangeDataV14","RandomParamDataV14","DynamicParamDataV14","AttenuationDataV14","CategoryDynamicDataV14","CategoryDataV14","ReverbDataV14","SnapshotDataV14","AudioSettingsDataV14","HandlerDataV14","FileNameDataV14","MetaSoundDataV14","ScriptRefDataV14","TriggerMarkerDataV14","TriggerKeyDataV14","ScriptFileDataV14","13","DspDataV13","BussDynamicDataV13","BussDataV13","EnvelopePointDataV13","EnvelopeDataV13","RangeDataV13","RandomParamDataV13","DynamicParamDataV13","AttenuationDataV13","CategoryDynamicDataV13","CategoryDataV13","ReverbDataV13","SnapshotDataV13","AudioSettingsDataV13","HandlerDataV13","FileNameDataV13","MetaSoundDataV13","ScriptRefDataV13","TriggerMarkerDataV13","TriggerKeyDataV13","ScriptFileDataV13","12","DspDataV12","BussDynamicDataV12","BussDataV12","EnvelopePointDataV12","EnvelopeDataV12","RangeDataV12","RandomParamDataV12","DynamicParamDataV12","AttenuationDataV12","CategoryDynamicDataV12","CategoryDataV12","ReverbDataV12","SnapshotDataV12","AudioSettingsDataV12","HandlerDataV12","FileNameDataV12","MetaSoundDataV12","ScriptRefDataV12","TriggerMarkerDataV12","TriggerKeyDataV12","ScriptFileDataV12","11","DspDataV11","BussDynamicDataV11","BussDataV11","EnvelopePointDataV11","EnvelopeDataV11","RangeDataV11","RandomParamDataV11","DynamicParamDataV11","AttenuationDataV11","CategoryDynamicDataV11","CategoryDataV11","ReverbDataV11","SnapshotDataV11","AudioSettingsDataV11","HandlerDataV11","FileNameDataV11","MetaSoundDataV11","ScriptRefDataV11","TriggerMarkerDataV11","TriggerKeyDataV11","ScriptFileDataV11","10","DspDataV10","BussDynamicDataV10","BussDataV10","EnvelopePointDataV10","EnvelopeDataV10","RangeDataV10","RandomParamDataV10","DynamicParamDataV10","AttenuationDataV10","CategoryDynamicDataV10","CategoryDataV10","ReverbDataV10","SnapshotDataV10","AudioSettingsDataV10","HandlerDataV10","FileNameDataV10","MetaSoundDataV10","ScriptRefDataV10","TriggerMarkerDataV10","TriggerKeyDataV10","ScriptFileDataV10","9","DspDataV9","BussDynamicDataV9","BussDataV9","EnvelopePointDataV9","EnvelopeDataV9","RangeDataV9","RandomParamDataV9","DynamicParamDataV9","AttenuationDataV9","CategoryDynamicDataV9","CategoryDataV9","ReverbDataV9","SnapshotDataV9","AudioSettingsDataV9","HandlerDataV9","FileNameDataV9","MetaSoundDataV9","ScriptRefDataV9","TriggerMarkerDataV9","TriggerKeyDataV9","ScriptFileDataV9","8","DspDataV8","BussDynamicDataV8","BussDataV8","EnvelopePointDataV8","EnvelopeDataV8","RangeDataV8","RandomParamDataV8","DynamicParamDataV8","AttenuationDataV8","CategoryDynamicDataV8","CategoryDataV8","ReverbDataV8","SnapshotDataV8","AudioSettingsDataV8","HandlerDataV8","FileNameDataV8","MetaSoundDataV8","ScriptRefDataV8","TriggerMarkerDataV8","TriggerKeyDataV8","ScriptFileDataV8","7","DspDataV7","BussDynamicDataV7","BussDataV7","EnvelopePointDataV7","EnvelopeDataV7","RangeDataV7","RandomParamDataV7","DynamicParamDataV7","AttenuationDataV7","CategoryDynamicDataV7","CategoryDataV7","SnapshotDataV7","AudioSettingsDataV7","HandlerDataV7","FileNameDataV7","MetaSoundDataV7","ScriptRefDataV7","TriggerMarkerDataV7","TriggerKeyDataV7","ScriptFileDataV7","6","DspDataV6","BussDynamicDataV6","BussDataV6","EnvelopePointDataV6","EnvelopeDataV6","RangeDataV6","RandomParamDataV6","DynamicParamDataV6","AttenuationDataV6","CategoryDataV6","SnapshotDataV6","AudioSettingsDataV6","HandlerDataV6","FileNameDataV6","MetaSoundDataV6","ScriptRefDataV6","TriggerMarkerDataV6","TriggerKeyDataV6","ScriptFileDataV6","5","EnvelopePointDataV5","EnvelopeDataV5","RangeDataV5","RandomParamDataV5","DynamicParamDataV5","AttenuationDataV5","CategoryDataV5","DspDataV5","BussDataV5","SnapshotDataV5","AudioSettingsDataV5","HandlerDataV5","FileNameDataV5","MetaSoundDataV5","ScriptRefDataV5","TriggerMarkerDataV5","TriggerKeyDataV5","ScriptFileDataV5","4","VolumeGroupDataV4","EnvelopePointDataV4","EnvelopeDataV4","RangeDataV4","RandomParamDataV4","DynamicParamDataV4","AttenuationDataV4","CategoryDataV4","AudioSettingsDataV4","HandlerDataV4","DspDataV4","FileNameDataV4","MetaSoundDataV4","ScriptRefDataV4","TriggerMarkerDataV4","TriggerKeyDataV4","ScriptFileDataV4","3","VolumeGroupDataV3","EnvelopePointDataV3","EnvelopeDataV3","RangeDataV3","RandomParamDataV3","DynamicParamDataV3","AttenuationDataV3","CategoryDataV3","AudioSettingsDataV3","HandlerDataV3","DspDataV3","FileNameDataV3","MetaSoundDataV3","ScriptRefDataV3","TriggerMarkerDataV3","TriggerKeyDataV3","ScriptFileDataV3","2","VolumeGroupDataV2","EnvelopePointDataV2","EnvelopeDataV2","RangeDataV2","RandomParamDataV2","DynamicParamDataV2","AttenuationDataV2","CategoryDataV2","AudioSettingsDataV2","HandlerDataV2","DspDataV2","FileNameDataV2","MetaSoundDataV2","ScriptRefDataV2","TriggerMarkerDataV2","TriggerKeyDataV2","ScriptFileDataV2","EnvelopePointDataV1","EnvelopeDataV1","RangeDataV1","RandomParamDataV1","DynamicParamDataV1","AttenuationDataV1","CategoryDataV1","VolumeGroupDataV1","AudioSettingsDataV1","HandlerDataV1","DspDataV1","FileNameDataV1","MetaSoundDataV1","ScriptRefDataV1","TriggerMarkerDataV1","TriggerKeyDataV1","ScriptFileDataV1","0","HandlerDataV0","EnvelopePointDataV0","EnvelopeDataV0","RangeDataV0","RandomParamDataV0","DynamicParamDataV0","AttenuationDataV0","DspDataV0","FileNameDataV0","MetaSoundDataV0","ScriptRefDataV0","TriggerMarkerDataV0","TriggerKeyDataV0","ScriptFileDataV0","PackGrannyAnimationTypeV1","ModelAnimationLodV25","ModelVisTrackDataV33","ModelTrackTypeDataV25","ModelUVAnimationV25","ModelCloudAnimV25","ModelMatConstAnimV25","ModelLightAnimationV25","ModelAnimPropertyDataV25","ModelTokenMapAnimV25","ModelBoneConstraintAnimV25","ModelAnchorAnimV25","ModelStreakAnimV25","ModelLightningAnimV25","ModelWindAnimationV25","ModelAnimationDataV33","ModelCompoundAnimationDataV25","ModelAnimationImportSequenceV25","ModelAnimationImportDataV33","ModelFileAnimationBankV25","getRefArrayReader","ModelFileAnimationV25","PackGrannyAnimationTypeV0","ModelAnimationLodV24","ModelVisTrackDataV32","ModelTrackTypeDataV24","ModelUVAnimationV24","ModelCloudAnimV24","ModelMatConstAnimV24","ModelLightAnimationV24","ModelAnimPropertyDataV24","ModelTokenMapAnimV24","ModelBoneConstraintAnimV24","ModelAnchorAnimV24","ModelStreakAnimV24","ModelLightningAnimV24","ModelWindAnimationV24","ModelAnimationDataV32","ModelCompoundAnimationDataV24","ModelAnimationImportSequenceV24","ModelAnimationImportDataV32","ModelFileAnimationBankV24","ModelFileAnimationV24","ModelVisTrackDataV31","ModelTrackTypeDataV23","ModelUVAnimationV23","ModelCloudAnimV23","ModelMatConstAnimV23","ModelLightAnimationV23","ModelAnimPropertyDataV23","ModelTokenMapAnimV23","ModelBoneConstraintAnimV23","ModelAnchorAnimV23","ModelStreakAnimV23","ModelLightningAnimV23","ModelWindAnimationV23","ModelAnimationDataV31","ModelCompoundAnimationDataV23","ModelAnimationImportSequenceV23","ModelAnimationImportDataV31","ModelFileAnimationBankV23","ModelVisTrackDataV30","ModelTrackTypeDataV22","ModelUVAnimationV22","ModelCloudAnimV22","ModelMatConstAnimV22","ModelLightAnimationV22","ModelAnimPropertyDataV22","ModelTokenMapAnimV22","ModelBoneConstraintAnimV22","ModelAnchorAnimV22","ModelStreakAnimV22","ModelLightningAnimV22","ModelWindAnimationV22","ModelAnimationDataV30","ModelCompoundAnimationDataV22","ModelAnimationImportSequenceV22","ModelAnimationImportDataV30","ModelFileAnimationBankV22","ModelVisTrackDataV29","ModelTrackTypeDataV21","ModelUVAnimationV21","ModelCloudAnimV21","ModelMatConstAnimV21","ModelLightAnimationV21","ModelAnimPropertyDataV21","ModelTokenMapAnimV21","ModelBoneConstraintAnimV21","ModelAnchorAnimV21","ModelStreakAnimV21","ModelLightningAnimV21","ModelWindAnimationV21","ModelAnimationDataV29","ModelCompoundAnimationDataV21","ModelAnimationImportSequenceV21","ModelAnimationImportDataV29","ModelFileAnimationBankV21","ModelVisTrackDataV28","ModelTrackTypeDataV20","ModelUVAnimationV20","ModelCloudAnimV20","ModelMatConstAnimV20","ModelLightAnimationV20","ModelAnimPropertyDataV20","ModelTokenMapAnimV20","ModelBoneConstraintAnimV20","ModelAnchorAnimV20","ModelStreakAnimV20","ModelLightningAnimV20","ModelAnimationDataV28","ModelCompoundAnimationDataV20","ModelAnimationImportSequenceV20","ModelAnimationImportDataV28","ModelFileAnimationBankV20","ModelVisTrackDataV27","ModelTrackTypeDataV19","ModelUVAnimationV19","ModelCloudAnimV19","ModelMatConstAnimV19","ModelLightAnimationV19","ModelAnimPropertyDataV19","ModelTokenMapAnimV19","ModelBoneConstraintAnimV19","ModelAnchorAnimV19","ModelStreakAnimV19","ModelAnimationDataV27","ModelCompoundAnimationDataV19","ModelAnimationImportSequenceV19","ModelAnimationImportDataV27","ModelFileAnimationBankV19","ModelVisTrackDataV26","ModelTrackTypeDataV18","ModelUVAnimationV18","ModelCloudAnimV18","ModelMatConstAnimV18","ModelLightAnimationV18","ModelAnimPropertyDataV18","ModelTokenMapAnimV18","ModelBoneConstraintAnimV18","ModelAnchorAnimV18","ModelStreakAnimV18","ModelAnimationDataV26","ModelCompoundAnimationDataV18","ModelAnimationImportSequenceV18","ModelAnimationImportDataV26","ModelFileAnimationBankV18","ModelVisTrackDataV25","ModelTrackTypeDataV17","ModelUVAnimationV17","ModelCloudAnimV17","ModelMatConstAnimV17","ModelLightAnimationV17","ModelAnimPropertyDataV17","ModelTokenMapAnimV17","ModelBoneConstraintAnimV17","ModelAnchorAnimV17","ModelStreakAnimV17","ModelAnimationDataV25","ModelCompoundAnimationDataV17","ModelAnimationImportSequenceV17","ModelAnimationImportDataV25","ModelFileAnimationBankV17","ModelVisTrackDataV24","ModelTrackTypeDataV16","ModelUVAnimationV16","ModelCloudAnimV16","ModelMatConstAnimV16","ModelLightAnimationV16","ModelAnimPropertyDataV16","ModelTokenMapAnimV16","ModelBoneConstraintAnimV16","ModelAnchorAnimV16","ModelStreakAnimV16","ModelAnimationDataV24","ModelCompoundAnimationDataV16","ModelAnimationImportDataV24","ModelFileAnimationBankV16","ModelVisTrackDataV23","ModelTrackTypeDataV15","ModelUVAnimationV15","ModelCloudAnimV15","ModelMatConstAnimV15","ModelLightAnimationV15","ModelAnimPropertyDataV15","ModelTokenMapAnimV15","ModelBoneConstraintAnimV15","ModelAnimationDataV23","ModelCompoundAnimationDataV15","ModelAnimationImportDataV23","ModelFileAnimationBankV15","ModelVisTrackDataV22","ModelTrackTypeDataV14","ModelUVAnimationV14","ModelCloudAnimV14","ModelMatConstAnimV14","ModelLightAnimationV14","ModelAnimPropertyDataV14","ModelTokenMapAnimV14","ModelAnimationDataV22","ModelCompoundAnimationDataV14","ModelAnimationImportDataV22","ModelFileAnimationBankV14","ModelVisTrackDataV21","ModelTrackTypeDataV13","ModelUVAnimationV13","ModelCloudAnimV13","ModelMatConstAnimV13","ModelLightAnimationV13","ModelAnimPropertyDataV13","ModelTokenMapAnimV13","ModelAnimationDataV21","ModelCompoundAnimationDataV13","ModelAnimationImportDataV21","ModelFileAnimationBankV13","ModelVisTrackDataV20","ModelTrackTypeDataV12","ModelUVAnimationV12","ModelCloudAnimV12","ModelMatConstAnimV12","ModelLightAnimationV12","ModelAnimPropertyDataV12","ModelTokenMapAnimV12","ModelAnimationDataV20","ModelCompoundAnimationDataV12","ModelAnimationImportDataV20","ModelFileAnimationBankV12","ModelVisTrackDataV19","ModelTrackTypeDataV11","ModelUVAnimationV11","ModelCloudAnimV11","ModelMatConstAnimV11","ModelLightAnimationV11","ModelAnimPropertyDataV11","ModelAnimationDataV19","ModelCompoundAnimationDataV11","ModelAnimationImportDataV19","ModelFileAnimationBankV11","ModelVisTrackDataV18","ModelTrackTypeDataV10","ModelUVAnimationV10","ModelCloudAnimV10","ModelMatConstAnimV10","ModelLightAnimationV10","ModelAnimPropertyDataV10","ModelAnimationDataV18","ModelCompoundAnimationDataV10","ModelAnimationImportDataV18","ModelFileAnimationBankV10","ModelVisTrackDataV17","ModelTrackTypeDataV9","ModelUVAnimationV9","ModelCloudAnimV9","ModelMatConstAnimV9","ModelLightAnimationV9","ModelAnimationDataV17","ModelCompoundAnimationDataV9","ModelAnimationImportDataV17","ModelFileAnimationBankV9","ModelVisTrackDataV16","ModelTrackTypeDataV8","ModelUVAnimationV8","ModelCloudAnimV8","ModelMatConstAnimV8","ModelLightAnimationV8","ModelAnimationDataV16","ModelCompoundAnimationDataV8","ModelAnimationImportDataV16","ModelFileAnimationBankV8","ModelVisTrackDataV15","ModelTrackTypeDataV7","ModelUVAnimationV7","ModelCloudAnimV7","ModelMatConstAnimV7","ModelLightAnimationV7","ModelAnimationDataV15","ModelCompoundAnimationDataV7","ModelAnimationImportDataV15","ModelFileAnimationBankV7","ModelVisTrackDataV14","ModelTrackTypeDataV6","ModelUVAnimationV6","ModelCloudAnimV6","ModelMatConstAnimV6","ModelLightAnimationV6","ModelAnimationDataV14","ModelCompoundAnimationDataV6","ModelAnimationImportDataV14","ModelFileAnimationBankV6","ModelVisTrackDataV13","ModelTrackTypeDataV5","ModelUVAnimationV5","ModelLightAnimationV5","ModelAnimationDataV13","ModelCompoundAnimationDataV5","ModelAnimationImportDataV13","ModelFileAnimationBankV5","ModelVisTrackDataV12","ModelTrackTypeDataV4","ModelUVAnimationV4","ModelLightAnimationV4","ModelAnimationDataV12","ModelCompoundAnimationDataV4","ModelAnimationImportDataV12","ModelFileAnimationBankV4","ModelVisTrackDataV11","ModelTrackTypeDataV3","ModelUVAnimationV3","ModelLightAnimationV3","ModelAnimationDataV11","ModelCompoundAnimationDataV3","ModelAnimationImportDataV11","ModelFileAnimationBankV3","ModelVisTrackDataV10","ModelUVTransformV2","ModelUVAnimationV2","ModelAnimationDataV10","ModelCompoundAnimationDataV2","ModelAnimationImportDataV10","ModelFileAnimationBankV2","ModelVisTrackDataV9","ModelUVTransformV1","ModelUVAnimationV1","ModelAnimationDataV9","ModelCompoundAnimationDataV1","ModelAnimationImportDataV9","ModelFileAnimationV1","ModelVisTrackDataV8","ModelUVTransformV0","ModelUVAnimationV0","ModelAnimationDataV8","ModelCompoundAnimationDataV0","ModelAnimationImportDataV8","ModelFileAnimationV0","SceneKeyframeV2","SceneMotionV2","SceneActionPointV2","SceneAnimationEventV2","SceneAnimationV2","SceneTransformV2","ScenePoseV2","SceneImportSequenceV2","SceneAnimationImportV2","SceneFileAnimationV2","SceneKeyframeV1","SceneMotionV1","SceneActionPointV1","SceneAnimationEventV1","SceneAnimationV1","SceneAnimationImportV1","SceneFileAnimationV1","SceneKeyframeV0","SceneMotionV0","SceneActionPointV0","SceneAnimationV0","SceneAnimationImportV0","SceneFileAnimationV0","PackEmoteTimingV3","PackEmoteAnimationV3","PackEmoteAnimationsV3","PackEmoteTimingV2","PackEmoteAnimationV2","PackEmoteAnimationsV2","PackEmoteTimingV1","PackEmoteAnimationV1","PackEmoteAnimationsV1","PackEmoteTimingV0","PackEmoteAnimationV0","PackEmoteAnimationsV0","PackMapAreaPolygonV4","PackMapAreaPortalV4","PackMapAreaVolumeV4","PackMapAreaV4","PackMapAreaToolV4","PackMapAreasV4","PackMapAreaPolygonV3","PackMapAreaPortalV3","PackMapAreaVolumeV3","PackMapAreaV3","PackMapAreaToolV3","PackMapAreasV3","PackMapAreaPolygonV2","PackMapAreaPortalV2","PackMapAreaVolumeV2","PackMapAreaV2","PackMapAreaToolV2","PackMapAreasV2","PackMapAreaPolygonV1","PackMapAreaPortalV1","PackMapAreaVolumeV1","PackMapAreaV1","PackMapAreasV1","PackMapAreaV0","PackMapPortalV0","PackMapAreasV0","PackAssetManifestFile","PackAssetExtraFile","PackAssetRootManifest","PackAssetRootManifestV0","ReservedWaveformDataV2","WaveformDataV2","WaveformDataV1","WaveformDataV0","PackMapAudioRegion","PackMapAudioRegionTool","PackMapAudioDep","MapAudio","BankFileNameDataV0","BankLanguageDataV0","BankIndexDataV0","AsndFileDataV2","ReservedBankDataV2","BankFileDataV2","AsndFileDataV1","BankFileDataV1","AsndFileDataV0","BankFileDataV0","PackMapBlockRecord","PackMapBlock","PackVsGenParams","PackVertexShaderKey","PackShaderCache","PackVertexShaderKeyV0","PackShaderCacheV0","PackMapCoarseNavGraphNodeV0","PackMapCoarseNavGraphConnectionEdgeV0","PackMapCoarseNavGraphConnectionV0","PackMapCoarseNavGraphNodeConnectionsV0","PackMapCoarseNavGraphSectionV0","PackMapCoarseNavGraphV0","PackAnimAimIKBoneV0","PackAnimAimIKConfigV0","PackAnimIKRaycastTargetV0","PackAnimIKChainV0","PackAnimIKChainGroupV0","PackAnimConfigV0","ModelCollisionKeyFrameV10","ModelCollisionAnimatedObjectV10","ModelCollisionAnimationV10","ModelCollisionMeshV10","ModelCollisionBoxV10","ModelCollisionSphereV10","ModelCollisionCapsuleV10","ModelCollisionSurfaceV10","ModelFileCollisionV10","ModelCollisionKeyFrameV9","ModelCollisionAnimatedObjectV9","ModelCollisionAnimationV9","ModelCollisionMeshV9","ModelCollisionBoxV9","ModelCollisionSphereV9","ModelCollisionCapsuleV9","ModelCollisionSurfaceV9","ModelFileCollisionV9","ModelCollisionMeshV8","ModelCollisionCloudV8","ModelCollisionCubeV8","ModelCollisionSphereV8","ModelCollisionCapsuleV8","ModelCollisionSurfaceV8","ModelFileCollisionV8","ModelCollisionMeshV1","ModelCollisionCloudV1","ModelCollisionCubeV1","ModelCollisionSphereV1","ModelCollisionSurfaceV1","ModelFileCollisionV1","ModelCollisionMeshV0","ModelCollisionCloudV0","ModelCollisionCubeV0","ModelCollisionSphereV0","ModelCollisionSurfaceV0","ModelFileCollisionV0","PackCompositeBlitRectSetV19","PackCompositeBoneScaleParamV19","PackCompositeBoneScaleRegionV19","PackCompositeMorphWeightV19","PackCompositeBoneScaleV19","PackCompositeBoneScaleFileV19","PackCompositeFileDataV19","PackCompositeSkinPatternV19","PackCompositeSkinStyleV19","PackCompositeColorV19","PackCompositeVariantComponentV19","PackCompositeVariantV19","PackCompositeAnimOverrideV19","PackCompositeRaceDataV19","PackCompositeV19","PackCompositeBlitRectSetV18","PackCompositeBoneScaleParamV18","PackCompositeBoneScaleRegionV18","PackCompositeMorphWeightV18","PackCompositeBoneScaleV18","PackCompositeBoneScaleFileV18","PackCompositeFileDataV18","PackCompositeSkinPatternV18","PackCompositeSkinStyleV18","PackCompositeColorV18","PackCompositeVariantComponentV18","PackCompositeVariantV18","PackCompositeAnimOverrideV18","PackCompositeRaceDataV18","PackCompositeV18","PackCompositeBlitRectSetV17","PackCompositeBoneScaleParamV17","PackCompositeBoneScaleRegionV17","PackCompositeMorphWeightV17","PackCompositeBoneScaleV17","PackCompositeBoneScaleFileV17","PackCompositeFileDataV17","PackCompositeSkinPatternV17","PackCompositeSkinStyleV17","PackCompositeColorV17","PackCompositeVariantComponentV17","PackCompositeVariantV17","PackCompositeAnimOverrideV17","PackCompositeRaceDataV17","PackCompositeV17","PackCompositeBlitRectSetV16","PackCompositeBoneScaleParamV16","PackCompositeBoneScaleRegionV16","PackCompositeMorphWeightV16","PackCompositeBoneScaleV16","PackCompositeBoneScaleFileV16","PackCompositeFileDataV16","PackCompositeSkinPatternV16","PackCompositeColorV16","PackCompositeVariantComponentV16","PackCompositeVariantV16","PackCompositeAnimOverrideV16","PackCompositeRaceDataV16","PackCompositeV16","PackCompositeBlitRectSetV15","PackCompositeBoneScaleParamV15","PackCompositeBoneScaleRegionV15","PackCompositeMorphWeightV15","PackCompositeBoneScaleV15","PackCompositeBoneScaleFileV15","PackCompositeFileDataV15","PackCompositeSkinPatternV15","PackCompositeColorV15","PackCompositeVariantComponentV15","PackCompositeVariantV15","PackCompositeAnimOverrideV15","PackCompositeRaceDataV15","PackCompositeV15","PackCompositeBlitRectSetV14","PackCompositeBoneScaleParamV14","PackCompositeBoneScaleRegionV14","PackCompositeMorphWeightV14","PackCompositeBoneScaleV14","PackCompositeBoneScaleFileV14","PackCompositeFileDataV14","PackCompositeSkinPatternV14","PackCompositeColorV14","PackCompositeVariantComponentV14","PackCompositeVariantV14","PackCompositeRaceDataV14","PackCompositeV14","PackCompositeBlitRectSetV13","PackCompositeBoneScaleParamV13","PackCompositeBoneScaleRegionV13","PackCompositeMorphWeightV13","PackCompositeBoneScaleV13","PackCompositeBoneScaleFileV13","PackCompositeFileDataV13","PackCompositeSkinPatternV13","PackCompositeColorV13","PackCompositeVariantComponentV13","PackCompositeVariantV13","PackCompositeRaceDataV13","PackCompositeV13","PackCompositeBlitRectSetV12","PackCompositeBoneScaleParamV12","PackCompositeBoneScaleRegionV12","PackCompositeMorphWeightV12","PackCompositeBoneScaleV12","PackCompositeBoneScaleFileV12","PackCompositeFileDataV12","PackCompositeSkinPatternV12","PackCompositeColorV12","PackCompositeVariantComponentV12","PackCompositeVariantV12","PackCompositeRaceDataV12","PackCompositeV12","PackCompositeBlitRectSetV11","PackCompositeBoneScaleParamV11","PackCompositeBoneScaleRegionV11","PackCompositeBoneScaleV11","PackCompositeFileDataV11","PackCompositeSkinPatternV11","PackCompositeColorV11","PackCompositeVariantComponentV11","PackCompositeVariantV11","PackCompositeRaceDataV11","PackCompositeV11","PackCompositeBlitRectSetV10","PackCompositeFileDataV10","PackCompositeSkinPatternV10","PackCompositeColorV10","PackCompositeVariantComponentV10","PackCompositeVariantV10","PackCompositeRaceDataV10","PackCompositeV10","PackCompositeBlitRectSetV9","PackCompositeFileDataV9","PackCompositeSkinPatternV9","PackCompositeColorV9","PackCompositeVariantComponentV9","PackCompositeVariantV9","PackCompositeRaceDataV9","PackCompositeV9","PackCompositeBlitRectSetV8","PackCompositeFileDataV8","PackCompositeSkinPatternV8","PackCompositeColorV8","PackCompositeVariantComponentV8","PackCompositeVariantV8","PackCompositeRaceDataV8","PackCompositeV8","PackCompositeBlitRectSetV7","PackCompositeFileDataV7","PackCompositeSkinPatternV7","PackCompositeColorV7","PackCompositeVariantComponentV7","PackCompositeVariantV7","PackCompositeRaceDataV7","PackCompositeV7","PackCompositeBlitRectSetV6","PackCompositeFileDataV6","PackCompositeSkinPatternV6","PackCompositeColorV6","PackCompositeVariantComponentV6","PackCompositeVariantV6","PackCompositeRaceDataV6","PackCompositeV6","PackCompositeBlitRectSetV5","PackCompositeFileDataV5","PackCompositeSkinPatternV5","PackCompositeColorV5","PackCompositeVariantComponentV5","PackCompositeVariantV5","PackCompositeRaceDataV5","PackCompositeV5","PackCompositeBlitRectSetV4","PackCompositeFileDataV4","PackCompositeSkinPatternV4","PackCompositeColorV4","PackCompositeVariantComponentV4","PackCompositeVariantV4","PackCompositeRaceDataV4","PackCompositeV4","PackCompositeBlitRectSetV3","PackCompositeFileDataV3","PackCompositeSkinPatternV3","PackCompositeColorV3","PackCompositeVariantComponentV3","PackCompositeVariantV3","PackCompositeRaceDataV3","PackCompositeV3","PackCompositeBlitRectSetV2","PackCompositeFileDataV2","PackCompositeSkinPatternV2","PackCompositeColorV2","PackCompositeVariantComponentV2","PackCompositeVariantV2","PackCompositeRaceDataV2","PackCompositeV2","PackCompositeBlitRectSetV1","PackCompositeFileDataV1","PackCompositeSkinPatternV1","PackCompositeColorV1","PackCompositeVariantComponentV1","PackCompositeVariantV1","PackCompositeRaceDataV1","PackCompositeV1","PackCompositeBlitRectSetV0","PackCompositeFileDataV0","PackCompositeSkinPatternV0","PackCompositeColorV0","PackCompositeVariantComponentV0","PackCompositeVariantV0","PackCompositeRaceDataV0","PackCompositeV0","36","PropertyDataV36","CurveKeyDataV36","FlagKeyDataV36","TriggerKeyDataV36","TrackDataV36","TrackGroupDataV36","SequenceDataV36","ColorDefDataV36","AmbientLightDataV36","FileNameRefDataV36","ScriptDataV36","TextEntryDataV36","TextResourceDataV36","SpeciesResourceDataV36","ResourceDataV36","SceneDataV36","35","PropertyDataV35","CurveKeyDataV35","FlagKeyDataV35","TriggerKeyDataV35","TrackDataV35","TrackGroupDataV35","SequenceDataV35","ColorDefDataV35","AmbientLightDataV35","FileNameRefDataV35","ScriptDataV35","TextEntryDataV35","TextResourceDataV35","SpeciesResourceDataV35","ResourceDataV35","SceneDataV35","34","PropertyDataV34","CurveKeyDataV34","FlagKeyDataV34","TriggerKeyDataV34","TrackDataV34","TrackGroupDataV34","SequenceDataV34","ColorDefDataV34","AmbientLightDataV34","FileNameRefDataV34","ScriptDataV34","TextEntryDataV34","TextResourceDataV34","SpeciesResourceDataV34","ResourceDataV34","SceneDataV34","33","PropertyDataV33","CurveKeyDataV33","FlagKeyDataV33","TriggerKeyDataV33","TrackDataV33","TrackGroupDataV33","SequenceDataV33","ColorDefDataV33","AmbientLightDataV33","FileNameRefDataV33","ScriptDataV33","TextEntryDataV33","TextResourceDataV33","ResourceDataV33","SceneDataV33","32","PropertyDataV32","CurveKeyDataV32","FlagKeyDataV32","TriggerKeyDataV32","TrackDataV32","TrackGroupDataV32","SequenceDataV32","ColorDefDataV32","AmbientLightDataV32","FileNameRefDataV32","ScriptDataV32","TextEntryDataV32","TextResourceDataV32","ResourceDataV32","SceneDataV32","31","PropertyDataV31","CurveKeyDataV31","FlagKeyDataV31","TriggerKeyDataV31","TrackDataV31","TrackGroupDataV31","SequenceDataV31","ColorDefDataV31","AmbientLightDataV31","FileNameRefDataV31","ScriptDataV31","TextEntryDataV31","TextResourceDataV31","ResourceDataV31","SceneDataV31","30","PropertyDataV30","CurveKeyDataV30","FlagKeyDataV30","TriggerKeyDataV30","TrackDataV30","TrackGroupDataV30","SequenceDataV30","ColorDefDataV30","AmbientLightDataV30","FileNameRefDataV30","ScriptDataV30","TextEntryDataV30","TextResourceDataV30","ResourceDataV30","SceneDataV30","CurveKeyDataV29","FlagKeyDataV29","TrackDataV29","TrackGroupDataV29","SequenceDataV29","ColorDefDataV29","AmbientLightDataV29","FileNameRefDataV29","ScriptDataV29","TextEntryDataV29","TextResourceDataV29","ResourceDataV29","SceneDataV29","CurveKeyDataV28","FlagKeyDataV28","TrackDataV28","TrackGroupDataV28","SequenceDataV28","ColorDefDataV28","AmbientLightDataV28","FileNameRefDataV28","ScriptDataV28","TextEntryDataV28","TextResourceDataV28","ResourceDataV28","SceneDataV28","CurveKeyDataV27","FlagKeyDataV27","TrackDataV27","TrackGroupDataV27","SequenceDataV27","ColorDefDataV27","AmbientLightDataV27","FileNameRefDataV27","ScriptDataV27","TextEntryDataV27","TextResourceDataV27","ResourceDataV27","SceneDataV27","PropertyDataV26","CurveKeyDataV26","FlagKeyDataV26","TrackDataV26","TrackGroupDataV26","SequenceDataV26","ColorDefDataV26","AmbientLightDataV26","FileNameRefDataV26","ScriptDataV26","TextEntryDataV26","TextResourceDataV26","ResourceDataV26","SceneDataV26","PropertyDataV25","CurveKeyDataV25","FlagKeyDataV25","TrackDataV25","TrackGroupDataV25","SequenceDataV25","ColorDefDataV25","AmbientLightDataV25","FileNameRefDataV25","ScriptDataV25","TextEntryDataV25","TextResourceDataV25","ResourceDataV25","SceneDataV25","PropertyDataV24","CurveKeyDataV24","FlagKeyDataV24","TrackDataV24","TrackGroupDataV24","SequenceDataV24","ColorDefDataV24","AmbientLightDataV24","FileNameRefDataV24","ScriptDataV24","TextEntryDataV24","TextResourceDataV24","ResourceDataV24","SceneDataV24","PropertyDataV23","CurveKeyDataV23","FlagKeyDataV23","TrackDataV23","TrackGroupDataV23","SequenceDataV23","ColorDefDataV23","AmbientLightDataV23","FileNameRefDataV23","ScriptDataV23","TextEntryDataV23","TextResourceDataV23","ResourceDataV23","SceneDataV23","PropertyDataV22","CurveKeyDataV22","FlagKeyDataV22","TrackDataV22","TrackGroupDataV22","SequenceDataV22","ColorDefDataV22","AmbientLightDataV22","FileNameRefDataV22","ScriptDataV22","TextEntryDataV22","TextResourceDataV22","ResourceDataV22","SceneDataV22","PropertyDataV21","CurveKeyDataV21","FlagKeyDataV21","TrackDataV21","TrackGroupDataV21","SequenceDataV21","ColorDefDataV21","AmbientLightDataV21","FileNameRefDataV21","ScriptDataV21","TextEntryDataV21","TextResourceDataV21","ResourceDataV21","SceneDataV21","PropertyDataV20","CurveKeyDataV20","FlagKeyDataV20","TrackDataV20","TrackGroupDataV20","SequenceDataV20","ColorDefDataV20","AmbientLightDataV20","FileNameRefDataV20","ScriptDataV20","TextEntryDataV20","TextResourceDataV20","ResourceDataV20","SceneDataV20","PropertyDataV19","CurveKeyDataV19","FlagKeyDataV19","TrackDataV19","TrackGroupDataV19","SequenceDataV19","ColorDefDataV19","AmbientLightDataV19","FileNameRefDataV19","ScriptDataV19","TextEntryDataV19","TextResourceDataV19","ResourceDataV19","SceneDataV19","PropertyDataV18","CurveKeyDataV18","FlagKeyDataV18","TrackDataV18","TrackGroupDataV18","SequenceDataV18","ColorDefDataV18","AmbientLightDataV18","FileNameRefDataV18","ScriptDataV18","TextEntryDataV18","TextResourceDataV18","ResourceDataV18","SceneDataV18","PropertyDataV17","CurveKeyDataV17","FlagKeyDataV17","TrackDataV17","TrackGroupDataV17","SequenceDataV17","ColorDefDataV17","AmbientLightDataV17","FileNameRefDataV17","ScriptDataV17","TextEntryDataV17","TextResourceDataV17","ResourceDataV17","SceneDataV17","PropertyDataV16","CurveKeyDataV16","FlagKeyDataV16","TrackDataV16","TrackGroupDataV16","SequenceDataV16","ColorDefDataV16","AmbientLightDataV16","FileNameRefDataV16","ScriptDataV16","TextEntryDataV16","TextResourceDataV16","ResourceDataV16","SceneDataV16","PropertyDataV15","CurveKeyDataV15","FlagKeyDataV15","TrackDataV15","TrackGroupDataV15","SequenceDataV15","ColorDefDataV15","AmbientLightDataV15","FileNameRefDataV15","ScriptDataV15","TextEntryDataV15","TextResourceDataV15","ResourceDataV15","SceneDataV15","PropertyDataV14","CurveKeyDataV14","FlagKeyDataV14","TrackDataV14","TrackGroupDataV14","SequenceDataV14","ColorDefDataV14","AmbientLightDataV14","FileNameRefDataV14","ScriptDataV14","TextEntryDataV14","TextResourceDataV14","ResourceDataV14","SceneDataV14","PropertyDataV13","CurveKeyDataV13","FlagKeyDataV13","TrackDataV13","TrackGroupDataV13","SequenceDataV13","ColorDefDataV13","AmbientLightDataV13","FileNameRefDataV13","ScriptDataV13","TextEntryDataV13","TextResourceDataV13","ResourceDataV13","SceneDataV13","PropertyDataV12","CurveKeyDataV12","FlagKeyDataV12","TrackDataV12","TrackGroupDataV12","SequenceDataV12","ColorDefDataV12","AmbientLightDataV12","FileNameRefDataV12","ScriptDataV12","TextEntryDataV12","TextResourceDataV12","ResourceDataV12","SceneDataV12","PropertyDataV11","CurveKeyDataV11","FlagKeyDataV11","TrackDataV11","TrackGroupDataV11","SequenceDataV11","ColorDefDataV11","AmbientLightDataV11","FileNameRefDataV11","ScriptDataV11","TextEntryDataV11","TextResourceDataV11","ResourceDataV11","SceneDataV11","PropertyDataV10","CurveKeyDataV10","FlagKeyDataV10","TrackDataV10","TrackGroupDataV10","SequenceDataV10","ColorDefDataV10","AmbientLightDataV10","FileNameRefDataV10","ScriptDataV10","TextEntryDataV10","TextResourceDataV10","ResourceDataV10","SceneDataV10","PropertyDataV9","CurveKeyDataV9","FlagKeyDataV9","TrackDataV9","TrackGroupDataV9","SequenceDataV9","ColorDefDataV9","AmbientLightDataV9","FileNameRefDataV9","ScriptDataV9","TextEntryDataV9","TextResourceDataV9","ResourceDataV9","SceneDataV9","PropertyDataV8","CurveKeyDataV8","FlagKeyDataV8","TrackDataV8","TrackGroupDataV8","SequenceDataV8","ColorDefDataV8","AmbientLightDataV8","FileNameRefDataV8","ScriptDataV8","TextEntryDataV8","TextResourceDataV8","ResourceDataV8","SceneDataV8","PropertyDataV7","CurveKeyDataV7","FlagKeyDataV7","TrackDataV7","TrackGroupDataV7","SequenceDataV7","ColorDefDataV7","AmbientLightDataV7","ScriptDataV7","TextEntryDataV7","TextResourceDataV7","ResourceDataV7","SceneDataV7","PropertyDataV6","CurveKeyDataV6","FlagKeyDataV6","TrackDataV6","TrackGroupDataV6","SequenceDataV6","ColorDefDataV6","AmbientLightDataV6","ScriptDataV6","TextEntryDataV6","TextResourceDataV6","ResourceDataV6","SceneDataV6","PropertyDataV5","CurveKeyDataV5","FlagKeyDataV5","TrackDataV5","TrackGroupDataV5","SequenceDataV5","ColorDefDataV5","AmbientLightDataV5","ScriptDataV5","TextEntryDataV5","TextResourceDataV5","ResourceDataV5","SceneDataV5","PropertyDataV4","CurveKeyDataV4","FlagKeyDataV4","TrackDataV4","TrackGroupDataV4","SequenceDataV4","ColorDefDataV4","AmbientLightDataV4","ScriptDataV4","TextEntryDataV4","TextResourceDataV4","ResourceDataV4","SceneDataV4","PropertyDataV3","CurveKeyDataV3","FlagKeyDataV3","TrackDataV3","TrackGroupDataV3","SequenceDataV3","ColorDefDataV3","AmbientLightDataV3","ScriptDataV3","TextEntryDataV3","TextResourceDataV3","ResourceDataV3","SceneDataV3","PropertyDataV2","CurveKeyDataV2","FlagKeyDataV2","TrackDataV2","TrackGroupDataV2","SequenceDataV2","ColorDefDataV2","AmbientLightDataV2","ScriptDataV2","TextEntryDataV2","TextResourceDataV2","ResourceDataV2","SceneDataV2","PropertyDataV1","CurveKeyDataV1","FlagKeyDataV1","TrackDataV1","TrackGroupDataV1","SequenceDataV1","ColorDefDataV1","AmbientLightDataV1","ScriptDataV1","TextEntryDataV1","TextResourceDataV1","ResourceDataV1","SceneDataV1","PropertyDataV0","CurveKeyDataV0","FlagKeyDataV0","TrackDataV0","TrackGroupDataV0","SequenceDataV0","ColorDefDataV0","AmbientLightDataV0","TextEntryDataV0","TextResourceDataV0","ResourceDataV0","SceneDataV0","PackMapCubeMapSampleV3","PackMapCubeMapParamsV3","PackMapCubeMapV3","PackMapCubeMapSampleV2","PackMapCubeMapParamsV2","PackMapCubeMapV2","PackMapCubeMapSampleV1","PackMapCubeMapParamsV1","PackMapCubeMapV1","PackMapCubeMapSampleV0","PackMapCubeMapParamsV0","PackMapCubeMapV0","PagedImageLayerDataV3","PagedImagePageDataV3","PagedImageTableDataV3","PagedImageLayerDataV2","PagedImagePageDataV2","PagedImageTableDataV2","PagedImageLayerDataV1","PagedImagePageDataV1","PagedImageTableDataV1","PagedImageEmbeddedPageDataV0","PagedImageEmbeddedPagesDataV0","PackMapDecalVertexV8","PackMapDecalV9","PackMapDecalsV9","PackMapDecalVertexV7","PackMapDecalV8","PackMapDecalsV8","PackMapDecalVertexV6","PackMapDecalV7","PackMapDecalsV7","PackMapDecalVertexV5","PackMapDecalV6","PackMapDecalsV6","PackMapDecalVertexV4","PackMapDecalV5","PackMapDecalsV5","PackMapDecalV4","PackMapDecalsV4","PackMapDecalV3","PackMapDecalsV3","PackMapDecalV2","PackMapDecalsV2","PackMapDecalV1","PackMapDecalsV1","AmatDx9SamplerV11","AmatDx9ShaderV11","AmatDx9EffectV11","AmatDx9PassV11","AmatDx9TechniqueV11","getStringReader","AmatDx9MaterialV11","AmatDx9SamplerV10","AmatDx9ShaderV10","AmatDx9EffectV10","AmatDx9PassV10","AmatDx9TechniqueV10","AmatDx9MaterialV10","AmatDx9SamplerV9","AmatDx9ShaderV9","AmatDx9EffectV9","AmatDx9PassV9","AmatDx9TechniqueV9","AmatDx9MaterialV9","AmatDx9SamplerV8","AmatDx9ShaderV8","AmatDx9EffectV8","AmatDx9PassV8","AmatDx9TechniqueV8","AmatDx9MaterialV8","AmatDx9SamplerV7","AmatDx9ShaderV7","AmatDx9EffectV7","AmatDx9PassV7","AmatDx9TechniqueV7","AmatDx9MaterialV7","AmatDx9SamplerV6","AmatDx9ShaderV6","AmatDx9EffectV6","AmatDx9PassV6","AmatDx9TechniqueV6","AmatDx9MaterialV6","AmatDx9SamplerV5","AmatDx9ShaderV5","AmatDx9EffectV5","AmatDx9PassV5","AmatDx9TechniqueV5","AmatDx9MaterialV5","AmatDx9SamplerV4","AmatDx9ShaderV4","AmatDx9EffectV4","AmatDx9PassV4","AmatDx9TechniqueV4","AmatDx9MaterialV4","AmatDx9SamplerV3","AmatDx9ShaderV3","AmatDx9EffectV3","AmatDx9PassV3","AmatDx9TechniqueV3","AmatDx9MaterialV3","AmatDx9SamplerV2","AmatDx9ShaderV2","AmatDx9EffectV2","AmatDx9PassV2","AmatDx9TechniqueV2","AmatDx9MaterialV2","AmatDx9SamplerV1","AmatDx9ShaderV1","AmatDx9RenderStatesV1","AmatDx9PassV1","AmatDx9TechniqueV1","AmatDx9MaterialV1","AmatDx9SamplerV0","AmatDx9ShaderV0","AmatDx9PassV0","AmatDx9TechniqueV0","AmatDx9MaterialV0","MapEditLayerItem","MapEditLayers","PackMapEditAnnotation","PackMapEditAnnotations","PackMapEditDirtyChunks","MapEditCamLocations","PackMapEditSurfacePoly","PackMapEditSurfaceRoadNode","PackMapEditSurfaceRoad","PackMapEditNavmeshGenPropMode","PackMapEditNavMeshData","MapEditSnapPoint","MapEditMeasureSpan","MapEditData","MapEditRegion","75","PackMapEnvDataLightV75","PackMapEnvDataLightingV75","PackMapEnvDataLightingCharV46","PackMapEnvDataLightingCharGroupV46","PackMapEnvDataLayerAttributesV75","PackMapEnvDataLayerV75","PackMapEnvDataCloudsV75","PackMapEnvDataColoredLightRingsV46","PackMapEnvDataEffectExV46","PackMapEnvDataEffectV75","PackMapEnvDataHazeV75","PackMapEnvDataPFieldV75","PackMapEnvDataPFieldCutoutV46","PackMapEnvDataSkyV75","PackMapEnvLensFlareAtomV46","PackMapEnvLensFlareTextureV46","PackMapEnvDataShaderConstantV46","PackMapEnvLensFlareV46","PackMapEnvDataSkyCardAttributesExV46","PackMapEnvDataSkyCardAttributesV75","PackMapEnvDataShaderTextureV46","PackEnvDataSkyCardAnimationV46","PackMapEnvDataSkycardFlipbookV46","PackMapEnvDataSkyCardMaterialV46","PackMapEnvDataSkyCardExV46","PackMapEnvDataSkyCardV75","PackMapEnvDataSkyCardsV75","PackMapEnvDataSpawnModelDataV46","PackMapEnvDataSpawnListV46","PackMapEnvDataSpawnGroupsV46","PackMapEnvDataWaterV75","PackMapEnvDataWindV75","PackMapEnvDataAudioV46","PackMapEnvDataBaseEx2V46","PackMapEnvDataBaseExV46","PackMapEnvDataShapeV46","PackMapEnvDataLocalV75","PackMapEnvDataSkyModeTexV75","PackMapEnvDataGlobalV75","PackMapEnvironmentV75","74","PackMapEnvDataLightV74","PackMapEnvDataLightingV74","PackMapEnvDataLightingCharV45","PackMapEnvDataLightingCharGroupV45","PackMapEnvDataLayerAttributesV74","PackMapEnvDataLayerV74","PackMapEnvDataCloudsV74","PackMapEnvDataColoredLightRingsV45","PackMapEnvDataEffectV74","PackMapEnvDataHazeV74","PackMapEnvDataPFieldV74","PackMapEnvDataPFieldCutoutV45","PackMapEnvDataSkyV74","PackMapEnvDataSkyCardAttributesV74","PackMapEnvDataSkyCardV74","PackMapEnvDataSkyCardsV74","PackMapEnvDataSpawnModelDataV45","PackMapEnvDataSpawnListV45","PackMapEnvDataSpawnGroupsV45","PackMapEnvDataWaterV74","PackMapEnvDataWindV74","PackMapEnvDataAudioV45","PackMapEnvDataShapeV45","PackMapEnvDataLocalV74","PackMapEnvDataSkyModeTexV74","PackMapEnvDataGlobalV74","PackMapEnvironmentV74","73","PackMapEnvDataLightV73","PackMapEnvDataLightingV73","PackMapEnvDataLightingCharV44","PackMapEnvDataLightingCharGroupV44","PackMapEnvDataLayerAttributesV73","PackMapEnvDataLayerV73","PackMapEnvDataCloudsV73","PackMapEnvDataColoredLightRingsV44","PackMapEnvDataEffectV73","PackMapEnvDataHazeV73","PackMapEnvDataPFieldV73","PackMapEnvDataPFieldCutoutV44","PackMapEnvDataSkyV73","PackMapEnvDataSkyCardAttributesV73","PackMapEnvDataSkyCardV73","PackMapEnvDataSkyCardsV73","PackMapEnvDataSpawnModelDataV44","PackMapEnvDataSpawnListV44","PackMapEnvDataSpawnGroupsV44","PackMapEnvDataWaterV73","PackMapEnvDataWindV73","PackMapEnvDataAudioV44","PackMapEnvDataShapeV44","PackMapEnvDataLocalV73","PackMapEnvDataSkyModeTexV73","PackMapEnvDataGlobalV73","PackMapEnvironmentV73","72","PackMapEnvDataLightV72","PackMapEnvDataLightingV72","PackMapEnvDataLightingCharV43","PackMapEnvDataLightingCharGroupV43","PackMapEnvDataLayerAttributesV72","PackMapEnvDataLayerV72","PackMapEnvDataCloudsV72","PackMapEnvDataColoredLightRingsV43","PackMapEnvDataEffectV72","PackMapEnvDataHazeV72","PackMapEnvDataPFieldV72","PackMapEnvDataPFieldCutoutV43","PackMapEnvDataSkyV72","PackMapEnvDataSkyCardAttributesV72","PackMapEnvDataSkyCardV72","PackMapEnvDataSkyCardsV72","PackMapEnvDataSpawnModelDataV43","PackMapEnvDataSpawnListV43","PackMapEnvDataSpawnGroupsV43","PackMapEnvDataWaterV72","PackMapEnvDataWindV72","PackMapEnvDataShapeV43","PackMapEnvDataLocalV72","PackMapEnvDataSkyModeTexV72","PackMapEnvDataGlobalV72","PackMapEnvironmentV72","71","PackMapEnvDataLightV71","PackMapEnvDataLightingV71","PackMapEnvDataLightingCharV42","PackMapEnvDataLightingCharGroupV42","PackMapEnvDataLayerAttributesV71","PackMapEnvDataLayerV71","PackMapEnvDataCloudsV71","PackMapEnvDataColoredLightRingsV42","PackMapEnvDataEffectV71","PackMapEnvDataHazeV71","PackMapEnvDataPFieldV71","PackMapEnvDataPFieldCutoutV42","PackMapEnvDataSkyV71","PackMapEnvDataSkyCardAttributesV71","PackMapEnvDataSkyCardV71","PackMapEnvDataSkyCardsV71","PackMapEnvDataSpawnModelDataV42","PackMapEnvDataSpawnListV42","PackMapEnvDataSpawnGroupsV42","PackMapEnvDataWaterV71","PackMapEnvDataWindV71","PackMapEnvDataShapeV42","PackMapEnvDataLocalV71","PackMapEnvDataSkyModeTexV71","PackMapEnvDataGlobalV71","PackMapEnvironmentV71","70","PackMapEnvDataLightV70","PackMapEnvDataLightingV70","PackMapEnvDataLightingCharV41","PackMapEnvDataLightingCharGroupV41","PackMapEnvDataLayerAttributesV70","PackMapEnvDataLayerV70","PackMapEnvDataCloudsV70","PackMapEnvDataColoredLightRingsV41","PackMapEnvDataEffectV70","PackMapEnvDataHazeV70","PackMapEnvDataPFieldV70","PackMapEnvDataPFieldCutoutV41","PackMapEnvDataSkyV70","PackMapEnvDataSkyCardAttributesV70","PackMapEnvDataSkyCardV70","PackMapEnvDataSkyCardsV70","PackMapEnvDataSpawnModelDataV41","PackMapEnvDataSpawnListV41","PackMapEnvDataSpawnGroupsV41","PackMapEnvDataWaterV70","PackMapEnvDataWindV70","PackMapEnvDataShapeV41","PackMapEnvDataLocalV70","PackMapEnvDataSkyModeTexV70","PackMapEnvDataGlobalV70","PackMapEnvironmentV70","69","PackMapEnvDataLightV69","PackMapEnvDataLightingV69","PackMapEnvDataLightingCharV40","PackMapEnvDataLightingCharGroupV40","PackMapEnvDataLayerAttributesV69","PackMapEnvDataLayerV69","PackMapEnvDataCloudsV69","PackMapEnvDataColoredLightRingsV40","PackMapEnvDataEffectV69","PackMapEnvDataHazeV69","PackMapEnvDataPFieldV69","PackMapEnvDataPFieldCutoutV40","PackMapEnvDataSkyV69","PackMapEnvDataSkyCardAttributesV69","PackMapEnvDataSkyCardV69","PackMapEnvDataSkyCardsV69","PackMapEnvDataSpawnModelDataV40","PackMapEnvDataSpawnListV40","PackMapEnvDataSpawnGroupsV40","PackMapEnvDataWaterV69","PackMapEnvDataWindV69","PackMapEnvDataShapeV40","PackMapEnvDataLocalV69","PackMapEnvDataSkyModeTexV69","PackMapEnvDataGlobalV69","PackMapEnvironmentV69","68","PackMapEnvDataLightV68","PackMapEnvDataLightingV68","PackMapEnvDataLightingCharV39","PackMapEnvDataLightingCharGroupV39","PackMapEnvDataLayerAttributesV68","PackMapEnvDataLayerV68","PackMapEnvDataCloudsV68","PackMapEnvDataColoredLightRingsV39","PackMapEnvDataEffectV68","PackMapEnvDataHazeV68","PackMapEnvDataPFieldV68","PackMapEnvDataPFieldCutoutV39","PackMapEnvDataSkyV68","PackMapEnvDataSkyCardAttributesV68","PackMapEnvDataSkyCardV68","PackMapEnvDataSkyCardsV68","PackMapEnvDataSpawnModelDataV39","PackMapEnvDataSpawnListV39","PackMapEnvDataSpawnGroupsV39","PackMapEnvDataWaterV68","PackMapEnvDataWindV68","PackMapEnvDataShapeV39","PackMapEnvDataLocalV68","PackMapEnvDataSkyModeTexV68","PackMapEnvDataGlobalV68","PackMapEnvironmentV68","67","PackMapEnvDataLightV67","PackMapEnvDataLightingV67","PackMapEnvDataLightingCharV38","PackMapEnvDataLightingCharGroupV38","PackMapEnvDataLayerAttributesV67","PackMapEnvDataLayerV67","PackMapEnvDataCloudsV67","PackMapEnvDataColoredLightRingsV38","PackMapEnvDataEffectV67","PackMapEnvDataHazeV67","PackMapEnvDataPFieldV67","PackMapEnvDataPFieldCutoutV38","PackMapEnvDataSkyV67","PackMapEnvDataSkyCardAttributesV67","PackMapEnvDataSkyCardV67","PackMapEnvDataSkyCardsV67","PackMapEnvDataSpawnModelDataV38","PackMapEnvDataSpawnListV38","PackMapEnvDataSpawnGroupsV38","PackMapEnvDataWaterV67","PackMapEnvDataWindV67","PackMapEnvDataShapeV38","PackMapEnvDataLocalV67","PackMapEnvDataSkyModeTexV67","PackMapEnvDataGlobalV67","PackMapEnvironmentV67","66","PackMapEnvDataLightV66","PackMapEnvDataLightingV66","PackMapEnvDataLightingCharV37","PackMapEnvDataLightingCharGroupV37","PackMapEnvDataLayerAttributesV66","PackMapEnvDataLayerV66","PackMapEnvDataCloudsV66","PackMapEnvDataColoredLightRingsV37","PackMapEnvDataEffectV66","PackMapEnvDataHazeV66","PackMapEnvDataPFieldV66","PackMapEnvDataPFieldCutoutV37","PackMapEnvDataSkyV66","PackMapEnvDataSkyCardAttributesV66","PackMapEnvDataSkyCardV66","PackMapEnvDataSkyCardsV66","PackMapEnvDataSpawnModelDataV37","PackMapEnvDataSpawnListV37","PackMapEnvDataSpawnGroupsV37","PackMapEnvDataWaterV66","PackMapEnvDataWindV66","PackMapEnvDataShapeV37","PackMapEnvDataLocalV66","PackMapEnvDataSkyModeTexV66","PackMapEnvDataGlobalV66","PackMapEnvironmentV66","65","PackMapEnvDataLightV65","PackMapEnvDataLightingV65","PackMapEnvDataLightingCharV36","PackMapEnvDataLightingCharGroupV36","PackMapEnvDataLayerAttributesV65","PackMapEnvDataLayerV65","PackMapEnvDataCloudsV65","PackMapEnvDataColoredLightRingsV36","PackMapEnvDataEffectV65","PackMapEnvDataHazeV65","PackMapEnvDataPFieldV65","PackMapEnvDataPFieldCutoutV36","PackMapEnvDataSkyV65","PackMapEnvDataSkyCardAttributesV65","PackMapEnvDataSkyCardV65","PackMapEnvDataSkyCardsV65","PackMapEnvDataSpawnModelDataV36","PackMapEnvDataSpawnListV36","PackMapEnvDataSpawnGroupsV36","PackMapEnvDataWaterV65","PackMapEnvDataWindV65","PackMapEnvDataLocalV65","PackMapEnvDataSkyModeTexV65","PackMapEnvDataGlobalV65","PackMapEnvironmentV65","64","PackMapEnvDataLightV64","PackMapEnvDataLightingV64","PackMapEnvDataLightingCharV35","PackMapEnvDataLightingCharGroupV35","PackMapEnvDataLayerAttributesV64","PackMapEnvDataLayerV64","PackMapEnvDataCloudsV64","PackMapEnvDataColoredLightRingsV35","PackMapEnvDataEffectV64","PackMapEnvDataHazeV64","PackMapEnvDataPFieldV64","PackMapEnvDataPFieldCutoutV35","PackMapEnvDataSkyV64","PackMapEnvDataSkyCardAttributesV64","PackMapEnvDataSkyCardV64","PackMapEnvDataSkyCardsV64","PackMapEnvDataSpawnModelDataV35","PackMapEnvDataSpawnListV35","PackMapEnvDataSpawnGroupsV35","PackMapEnvDataWaterV64","PackMapEnvDataWindV64","PackMapEnvDataLocalV64","PackMapEnvDataSkyModeTexV64","PackMapEnvDataGlobalV64","PackMapEnvironmentV64","63","PackMapEnvDataLightV63","PackMapEnvDataLightingV63","PackMapEnvDataLightingCharV34","PackMapEnvDataLightingCharGroupV34","PackMapEnvDataLayerAttributesV63","PackMapEnvDataLayerV63","PackMapEnvDataCloudsV63","PackMapEnvDataColoredLightRingsV34","PackMapEnvDataEffectV63","PackMapEnvDataHazeV63","PackMapEnvDataPFieldV63","PackMapEnvDataPFieldCutoutV34","PackMapEnvDataSkyV63","PackMapEnvDataSkyCardAttributesV63","PackMapEnvDataSkyCardV63","PackMapEnvDataSkyCardsV63","PackMapEnvDataSpawnModelDataV34","PackMapEnvDataSpawnListV34","PackMapEnvDataSpawnGroupsV34","PackMapEnvDataWaterV63","PackMapEnvDataWindV63","PackMapEnvDataLocalV63","PackMapEnvDataSkyModeTexV63","PackMapEnvDataGlobalV63","PackMapEnvironmentV63","62","PackMapEnvDataLightV62","PackMapEnvDataLightingV62","PackMapEnvDataLightingCharV33","PackMapEnvDataLightingCharGroupV33","PackMapEnvDataLayerAttributesV62","PackMapEnvDataLayerV62","PackMapEnvDataCloudsV62","PackMapEnvDataColoredLightRingsV33","PackMapEnvDataEffectV62","PackMapEnvDataHazeV62","PackMapEnvDataPFieldV62","PackMapEnvDataPFieldCutoutV33","PackMapEnvDataSkyV62","PackMapEnvDataSkyCardAttributesV62","PackMapEnvDataSkyCardV62","PackMapEnvDataSkyCardsV62","PackMapEnvDataSpawnModelDataV33","PackMapEnvDataSpawnListV33","PackMapEnvDataSpawnGroupsV33","PackMapEnvDataWaterV62","PackMapEnvDataWindV62","PackMapEnvDataLocalV62","PackMapEnvDataSkyModeTexV62","PackMapEnvDataGlobalV62","PackMapEnvironmentV62","61","PackMapEnvDataLightV61","PackMapEnvDataLightingV61","PackMapEnvDataLightingCharV32","PackMapEnvDataLightingCharGroupV32","PackMapEnvDataLayerAttributesV61","PackMapEnvDataLayerV61","PackMapEnvDataCloudsV61","PackMapEnvDataColoredLightRingsV32","PackMapEnvDataEffectV61","PackMapEnvDataHazeV61","PackMapEnvDataPFieldV61","PackMapEnvDataPFieldCutoutV32","PackMapEnvDataSkyV61","PackMapEnvDataSkyCardAttributesV61","PackMapEnvDataSkyCardV61","PackMapEnvDataSkyCardsV61","PackMapEnvDataSpawnModelDataV32","PackMapEnvDataSpawnListV32","PackMapEnvDataSpawnGroupsV32","PackMapEnvDataWaterV61","PackMapEnvDataWindV61","PackMapEnvDataLocalV61","PackMapEnvDataSkyModeTexV61","PackMapEnvDataGlobalV61","PackMapEnvironmentV61","60","PackMapEnvDataLightV60","PackMapEnvDataLightingV60","PackMapEnvDataLightingCharV31","PackMapEnvDataLightingCharGroupV31","PackMapEnvDataLayerAttributesV60","PackMapEnvDataLayerV60","PackMapEnvDataCloudsV60","PackMapEnvDataColoredLightRingsV31","PackMapEnvDataEffectV60","PackMapEnvDataHazeV60","PackMapEnvDataPFieldV60","PackMapEnvDataPFieldCutoutV31","PackMapEnvDataSkyV60","PackMapEnvDataSkyCardAttributesV60","PackMapEnvDataSkyCardV60","PackMapEnvDataSkyCardsV60","PackMapEnvDataSpawnModelDataV31","PackMapEnvDataSpawnListV31","PackMapEnvDataSpawnGroupsV31","PackMapEnvDataWaterV60","PackMapEnvDataWindV60","PackMapEnvDataLocalV60","PackMapEnvDataSkyModeTexV60","PackMapEnvDataGlobalV60","PackMapEnvironmentV60","59","PackMapEnvDataLightV59","PackMapEnvDataLightingV59","PackMapEnvDataLightingCharV30","PackMapEnvDataLightingCharGroupV30","PackMapEnvDataLayerAttributesV59","PackMapEnvDataLayerV59","PackMapEnvDataCloudsV59","PackMapEnvDataColoredLightRingsV30","PackMapEnvDataEffectV59","PackMapEnvDataHazeV59","PackMapEnvDataPFieldV59","PackMapEnvDataPFieldCutoutV30","PackMapEnvDataSkyV59","PackMapEnvDataSkyCardAttributesV59","PackMapEnvDataSkyCardV59","PackMapEnvDataSkyCardsV59","PackMapEnvDataSpawnModelDataV30","PackMapEnvDataSpawnListV30","PackMapEnvDataSpawnGroupsV30","PackMapEnvDataWaterV59","PackMapEnvDataWindV59","PackMapEnvDataLocalV59","PackMapEnvDataSkyModeTexV59","PackMapEnvDataGlobalV59","PackMapEnvironmentV59","58","PackMapEnvDataLightV58","PackMapEnvDataLightingV58","PackMapEnvDataLightingCharV29","PackMapEnvDataLightingCharGroupV29","PackMapEnvDataLayerAttributesV58","PackMapEnvDataLayerV58","PackMapEnvDataCloudsV58","PackMapEnvDataColoredLightRingsV29","PackMapEnvDataEffectV58","PackMapEnvDataHazeV58","PackMapEnvDataPFieldV58","PackMapEnvDataPFieldCutoutV29","PackMapEnvDataSkyV58","PackMapEnvDataSkyCardAttributesV58","PackMapEnvDataSkyCardV58","PackMapEnvDataSkyCardsV58","PackMapEnvDataSpawnModelDataV29","PackMapEnvDataSpawnListV29","PackMapEnvDataSpawnGroupsV29","PackMapEnvDataWaterV58","PackMapEnvDataWindV58","PackMapEnvDataLocalV58","PackMapEnvDataSkyModeTexV58","PackMapEnvDataGlobalV58","PackMapEnvironmentV58","57","PackMapEnvDataLightV57","PackMapEnvDataLightingV57","PackMapEnvDataLightingCharV28","PackMapEnvDataLightingCharGroupV28","PackMapEnvDataLayerAttributesV57","PackMapEnvDataLayerV57","PackMapEnvDataCloudsV57","PackMapEnvDataColoredLightRingsV28","PackMapEnvDataEffectV57","PackMapEnvDataHazeV57","PackMapEnvDataPFieldV57","PackMapEnvDataPFieldCutoutV28","PackMapEnvDataSkyV57","PackMapEnvDataSkyCardAttributesV57","PackMapEnvDataSkyCardV57","PackMapEnvDataSkyCardsV57","PackMapEnvDataSpawnModelDataV28","PackMapEnvDataSpawnListV28","PackMapEnvDataSpawnGroupsV28","PackMapEnvDataWaterV57","PackMapEnvDataWindV57","PackMapEnvDataLocalV57","PackMapEnvDataSkyModeTexV57","PackMapEnvDataGlobalV57","PackMapEnvironmentV57","56","PackMapEnvDataLightV56","PackMapEnvDataLightingV56","PackMapEnvDataLightingCharV27","PackMapEnvDataLightingCharGroupV27","PackMapEnvDataLayerAttributesV56","PackMapEnvDataLayerV56","PackMapEnvDataCloudsV56","PackMapEnvDataColoredLightRingsV27","PackMapEnvDataEffectV56","PackMapEnvDataHazeV56","PackMapEnvDataPFieldV56","PackMapEnvDataPFieldCutoutV27","PackMapEnvDataSkyV56","PackMapEnvDataSkyCardAttributesV56","PackMapEnvDataSkyCardV56","PackMapEnvDataSkyCardsV56","PackMapEnvDataSpawnModelDataV27","PackMapEnvDataSpawnListV27","PackMapEnvDataSpawnGroupsV27","PackMapEnvDataWaterV56","PackMapEnvDataWindV56","PackMapEnvDataLocalV56","PackMapEnvDataSkyModeTexV56","PackMapEnvDataGlobalV56","PackMapEnvironmentV56","55","PackMapEnvDataLightV55","PackMapEnvDataLightingV55","PackMapEnvDataLightingCharV26","PackMapEnvDataLightingCharGroupV26","PackMapEnvDataLayerAttributesV55","PackMapEnvDataLayerV55","PackMapEnvDataCloudsV55","PackMapEnvDataColoredLightRingsV26","PackMapEnvDataEffectV55","PackMapEnvDataHazeV55","PackMapEnvDataPFieldV55","PackMapEnvDataPFieldCutoutV26","PackMapEnvDataSkyV55","PackMapEnvDataSkyCardAttributesV55","PackMapEnvDataSkyCardV55","PackMapEnvDataSkyCardsV55","PackMapEnvDataSpawnModelDataV26","PackMapEnvDataSpawnListV26","PackMapEnvDataSpawnGroupsV26","PackMapEnvDataWaterV55","PackMapEnvDataWindV55","PackMapEnvDataLocalV55","PackMapEnvDataSkyModeTexV55","PackMapEnvDataGlobalV55","PackMapEnvironmentV55","54","PackMapEnvDataLightV54","PackMapEnvDataLightingV54","PackMapEnvDataLightingCharV25","PackMapEnvDataLightingCharGroupV25","PackMapEnvDataLayerAttributesV54","PackMapEnvDataLayerV54","PackMapEnvDataCloudsV54","PackMapEnvDataColoredLightRingsV25","PackMapEnvDataEffectV54","PackMapEnvDataHazeV54","PackMapEnvDataPFieldV54","PackMapEnvDataPFieldCutoutV25","PackMapEnvDataSkyV54","PackMapEnvDataSkyCardAttributesV54","PackMapEnvDataSkyCardV54","PackMapEnvDataSkyCardsV54","PackMapEnvDataWaterV54","PackMapEnvDataWindV54","PackMapEnvDataLocalV54","PackMapEnvDataSkyModeTexV54","PackMapEnvDataGlobalV54","PackMapEnvironmentV54","53","PackMapEnvDataLightV53","PackMapEnvDataLightingV53","PackMapEnvDataLightingCharV24","PackMapEnvDataLightingCharGroupV24","PackMapEnvDataLayerAttributesV53","PackMapEnvDataLayerV53","PackMapEnvDataCloudsV53","PackMapEnvDataColoredLightRingsV24","PackMapEnvDataEffectV53","PackMapEnvDataHazeV53","PackMapEnvDataPFieldV53","PackMapEnvDataPFieldCutoutV24","PackMapEnvDataSkyV53","PackMapEnvDataSkyCardAttributesV53","PackMapEnvDataSkyCardV53","PackMapEnvDataSkyCardsV53","PackMapEnvDataWaterV53","PackMapEnvDataWindV53","PackMapEnvDataLocalV53","PackMapEnvDataSkyModeTexV53","PackMapEnvDataGlobalV53","PackMapEnvironmentV53","52","PackMapEnvDataLightV52","PackMapEnvDataLightingV52","PackMapEnvDataLightingCharV23","PackMapEnvDataLightingCharGroupV23","PackMapEnvDataLayerAttributesV52","PackMapEnvDataLayerV52","PackMapEnvDataCloudsV52","PackMapEnvDataColoredLightRingsV23","PackMapEnvDataEffectV52","PackMapEnvDataHazeV52","PackMapEnvDataPFieldV52","PackMapEnvDataPFieldCutoutV23","PackMapEnvDataSkyV52","PackMapEnvDataSkyCardAttributesV52","PackMapEnvDataSkyCardV52","PackMapEnvDataSkyCardsV52","PackMapEnvDataWaterV52","PackMapEnvDataWindV52","PackMapEnvDataLocalV52","PackMapEnvDataSkyModeTexV52","PackMapEnvDataGlobalV52","PackMapEnvironmentV52","51","PackMapEnvDataLightV51","PackMapEnvDataLightingV51","PackMapEnvDataLightingCharV22","PackMapEnvDataLightingCharGroupV22","PackMapEnvDataLayerAttributesV51","PackMapEnvDataLayerV51","PackMapEnvDataCloudsV51","PackMapEnvDataColoredLightRingsV22","PackMapEnvDataEffectV51","PackMapEnvDataHazeV51","PackMapEnvDataPFieldV51","PackMapEnvDataPFieldCutoutV22","PackMapEnvDataSkyV51","PackMapEnvDataSkyCardAttributesV51","PackMapEnvDataSkyCardV51","PackMapEnvDataSkyCardsV51","PackMapEnvDataWaterV51","PackMapEnvDataWindV51","PackMapEnvDataLocalV51","PackMapEnvDataSkyModeTexV51","PackMapEnvDataGlobalV51","PackMapEnvironmentV51","50","PackMapEnvDataLightV50","PackMapEnvDataLightingV50","PackMapEnvDataLightingCharV21","PackMapEnvDataLightingCharGroupV21","PackMapEnvDataLayerAttributesV50","PackMapEnvDataLayerV50","PackMapEnvDataCloudsV50","PackMapEnvDataColoredLightRingsV21","PackMapEnvDataEffectV50","PackMapEnvDataHazeV50","PackMapEnvDataPFieldV50","PackMapEnvDataPFieldCutoutV21","PackMapEnvDataSkyV50","PackMapEnvDataSkyCardAttributesV50","PackMapEnvDataSkyCardV50","PackMapEnvDataSkyCardsV50","PackMapEnvDataWaterV50","PackMapEnvDataWindV50","PackMapEnvDataLocalV50","PackMapEnvDataSkyModeTexV50","PackMapEnvDataGlobalV50","PackMapEnvironmentV50","49","PackMapEnvDataLightV49","PackMapEnvDataLightingV49","PackMapEnvDataLightingCharV20","PackMapEnvDataLightingCharGroupV20","PackMapEnvDataLayerAttributesV49","PackMapEnvDataLayerV49","PackMapEnvDataCloudsV49","PackMapEnvDataColoredLightRingsV20","PackMapEnvDataEffectV49","PackMapEnvDataHazeV49","PackMapEnvDataPFieldV49","PackMapEnvDataPFieldCutoutV20","PackMapEnvDataSkyV49","PackMapEnvDataSkyCardAttributesV49","PackMapEnvDataSkyCardV49","PackMapEnvDataSkyCardsV49","PackMapEnvDataWaterV49","PackMapEnvDataWindV49","PackMapEnvDataLocalV49","PackMapEnvDataSkyModeTexV49","PackMapEnvDataGlobalV49","PackMapEnvironmentV49","48","PackMapEnvDataLightV48","PackMapEnvDataLightingV48","PackMapEnvDataLightingCharV19","PackMapEnvDataLayerAttributesV48","PackMapEnvDataLayerV48","PackMapEnvDataCloudsV48","PackMapEnvDataColoredLightRingsV19","PackMapEnvDataEffectV48","PackMapEnvDataHazeV48","PackMapEnvDataPFieldV48","PackMapEnvDataPFieldCutoutV19","PackMapEnvDataSkyV48","PackMapEnvDataSkyCardAttributesV48","PackMapEnvDataSkyCardV48","PackMapEnvDataSkyCardsV48","PackMapEnvDataWaterV48","PackMapEnvDataWindV48","PackMapEnvDataLocalV48","PackMapEnvDataSkyModeTexV48","PackMapEnvDataGlobalV48","PackMapEnvironmentV48","47","PackMapEnvDataLightV47","PackMapEnvDataLightingV47","PackMapEnvDataLightingCharV18","PackMapEnvDataLayerAttributesV47","PackMapEnvDataLayerV47","PackMapEnvDataCloudsV47","PackMapEnvDataColoredLightRingsV18","PackMapEnvDataEffectV47","PackMapEnvDataHazeV47","PackMapEnvDataPFieldV47","PackMapEnvDataPFieldCutoutV18","PackMapEnvDataSkyV47","PackMapEnvDataSkyCardAttributesV47","PackMapEnvDataSkyCardV47","PackMapEnvDataSkyCardsV47","PackMapEnvDataWaterV47","PackMapEnvDataWindV47","PackMapEnvDataLocalV47","PackMapEnvDataSkyModeTexV47","PackMapEnvDataGlobalV47","PackMapEnvironmentV47","46","PackMapEnvDataLightV46","PackMapEnvDataLightingV46","PackMapEnvDataLightingCharV17","PackMapEnvDataLayerAttributesV46","PackMapEnvDataLayerV46","PackMapEnvDataCloudsV46","PackMapEnvDataColoredLightRingsV17","PackMapEnvDataEffectV46","PackMapEnvDataHazeV46","PackMapEnvDataPFieldV46","PackMapEnvDataPFieldCutoutV17","PackMapEnvDataSkyV46","PackMapEnvDataSkyCardAttributesV46","PackMapEnvDataSkyCardV46","PackMapEnvDataSkyCardsV46","PackMapEnvDataWaterV46","PackMapEnvDataWindV46","PackMapEnvDataLocalV46","PackMapEnvDataSkyModeTexV46","PackMapEnvDataGlobalV46","PackMapEnvironmentV46","45","PackMapEnvDataLightV45","PackMapEnvDataLightingV45","PackMapEnvDataLightingCharV16","PackMapEnvDataLayerAttributesV45","PackMapEnvDataLayerV45","PackMapEnvDataCloudsV45","PackMapEnvDataColoredLightRingsV16","PackMapEnvDataEffectV45","PackMapEnvDataHazeV45","PackMapEnvDataPFieldV45","PackMapEnvDataPFieldCutoutV16","PackMapEnvDataSkyV45","PackMapEnvDataSkyCardAttributesV45","PackMapEnvDataSkyCardV45","PackMapEnvDataSkyCardsV45","PackMapEnvDataWaterV45","PackMapEnvDataWindV45","PackMapEnvDataLocalV45","PackMapEnvDataSkyModeTexV45","PackMapEnvDataGlobalV45","PackMapEnvironmentV45","44","PackMapEnvDataLightV44","PackMapEnvDataLightingV44","PackMapEnvDataLightingCharV15","PackMapEnvDataLayerAttributesV44","PackMapEnvDataLayerV44","PackMapEnvDataCloudsV44","PackMapEnvDataColoredLightRingsV15","PackMapEnvDataEffectV44","PackMapEnvDataHazeV44","PackMapEnvDataPFieldV44","PackMapEnvDataPFieldCutoutV15","PackMapEnvDataSkyV44","PackMapEnvDataSkyCardAttributesV44","PackMapEnvDataSkyCardV44","PackMapEnvDataSkyCardsV44","PackMapEnvDataWaterV44","PackMapEnvDataWindV44","PackMapEnvDataLocalV44","PackMapEnvDataSkyModeTexV44","PackMapEnvDataGlobalV44","PackMapEnvironmentV44","43","PackMapEnvDataLightV43","PackMapEnvDataLightingV43","PackMapEnvDataLightingCharV14","PackMapEnvDataLayerAttributesV43","PackMapEnvDataLayerV43","PackMapEnvDataCloudsV43","PackMapEnvDataEffectV43","PackMapEnvDataHazeV43","PackMapEnvDataPFieldV43","PackMapEnvDataPFieldCutoutV14","PackMapEnvDataSkyV43","PackMapEnvDataSkyCardAttributesV43","PackMapEnvDataSkyCardV43","PackMapEnvDataSkyCardsV43","PackMapEnvDataWaterV43","PackMapEnvDataWindV43","PackMapEnvDataLocalV43","PackMapEnvDataSkyModeTexV43","PackMapEnvDataGlobalV43","PackMapEnvironmentV43","42","PackMapEnvDataLightV42","PackMapEnvDataLightingV42","PackMapEnvDataLightingCharV13","PackMapEnvDataLayerAttributesV42","PackMapEnvDataLayerV42","PackMapEnvDataCloudsV42","PackMapEnvDataEffectV42","PackMapEnvDataHazeV42","PackMapEnvDataPFieldV42","PackMapEnvDataPFieldCutoutV13","PackMapEnvDataSkyV42","PackMapEnvDataSkyCardAttributesV42","PackMapEnvDataSkyCardV42","PackMapEnvDataSkyCardsV42","PackMapEnvDataWaterV42","PackMapEnvDataWindV42","PackMapEnvDataLocalV42","PackMapEnvDataSkyModeTexV42","PackMapEnvDataGlobalV42","PackMapEnvironmentV42","41","PackMapEnvDataLightV41","PackMapEnvDataLightingV41","PackMapEnvDataLightingCharV12","PackMapEnvDataLayerAttributesV41","PackMapEnvDataLayerV41","PackMapEnvDataCloudsV41","PackMapEnvDataEffectV41","PackMapEnvDataHazeV41","PackMapEnvDataPFieldV41","PackMapEnvDataPFieldCutoutV12","PackMapEnvDataSkyV41","PackMapEnvDataSkyCardAttributesV41","PackMapEnvDataSkyCardV41","PackMapEnvDataSkyCardsV41","PackMapEnvDataWaterV41","PackMapEnvDataWindV41","PackMapEnvDataLocalV41","PackMapEnvDataSkyModeTexV41","PackMapEnvDataGlobalV41","PackMapEnvironmentV41","40","PackMapEnvDataLightV40","PackMapEnvDataLightingV40","PackMapEnvDataLightingCharV11","PackMapEnvDataLayerAttributesV40","PackMapEnvDataLayerV40","PackMapEnvDataCloudsV40","PackMapEnvDataEffectV40","PackMapEnvDataHazeV40","PackMapEnvDataPFieldV40","PackMapEnvDataPFieldCutoutV11","PackMapEnvDataSkyV40","PackMapEnvDataSkyCardAttributesV40","PackMapEnvDataSkyCardV40","PackMapEnvDataSkyCardsV40","PackMapEnvDataWaterV40","PackMapEnvDataWindV40","PackMapEnvDataLocalV40","PackMapEnvDataSkyModeTexV40","PackMapEnvDataGlobalV40","PackMapEnvironmentV40","39","PackMapEnvDataLightV39","PackMapEnvDataLightingV39","PackMapEnvDataLightingCharV10","PackMapEnvDataLayerAttributesV39","PackMapEnvDataLayerV39","PackMapEnvDataCloudsV39","PackMapEnvDataEffectV39","PackMapEnvDataHazeV39","PackMapEnvDataPFieldV39","PackMapEnvDataPFieldCutoutV10","PackMapEnvDataSkyV39","PackMapEnvDataSkyCardAttributesV39","PackMapEnvDataSkyCardV39","PackMapEnvDataSkyCardsV39","PackMapEnvDataWaterV39","PackMapEnvDataWindV39","PackMapEnvDataLocalV39","PackMapEnvDataSkyModeTexV39","PackMapEnvDataGlobalV39","PackMapEnvironmentV39","38","PackMapEnvDataLightV38","PackMapEnvDataLightingV38","PackMapEnvDataLayerAttributesV38","PackMapEnvDataLayerV38","PackMapEnvDataCloudsV38","PackMapEnvDataEffectV38","PackMapEnvDataHazeV38","PackMapEnvDataPFieldV38","PackMapEnvDataPFieldCutoutV9","PackMapEnvDataSkyV38","PackMapEnvDataSkyCardAttributesV38","PackMapEnvDataSkyCardV38","PackMapEnvDataSkyCardsV38","PackMapEnvDataWaterV38","PackMapEnvDataWindV38","PackMapEnvDataLocalV38","PackMapEnvDataSkyModeTexV38","PackMapEnvDataGlobalV38","PackMapEnvironmentV38","37","PackMapEnvDataLightV37","PackMapEnvDataLightingV37","PackMapEnvDataLayerAttributesV37","PackMapEnvDataLayerV37","PackMapEnvDataCloudsV37","PackMapEnvDataEffectV37","PackMapEnvDataHazeV37","PackMapEnvDataPFieldV37","PackMapEnvDataPFieldCutoutV8","PackMapEnvDataSkyV37","PackMapEnvDataSkyCardAttributesV37","PackMapEnvDataSkyCardV37","PackMapEnvDataSkyCardsV37","PackMapEnvDataWaterV37","PackMapEnvDataWindV37","PackMapEnvDataLocalV37","PackMapEnvDataSkyModeTexV37","PackMapEnvDataGlobalV37","PackMapEnvironmentV37","PackMapEnvDataLightV36","PackMapEnvDataLightingV36","PackMapEnvDataLayerAttributesV36","PackMapEnvDataLayerV36","PackMapEnvDataCloudsV36","PackMapEnvDataEffectV36","PackMapEnvDataHazeV36","PackMapEnvDataPFieldV36","PackMapEnvDataPFieldCutoutV7","PackMapEnvDataSkyV36","PackMapEnvDataSkyCardAttributesV36","PackMapEnvDataSkyCardV36","PackMapEnvDataSkyCardsV36","PackMapEnvDataWaterV36","PackMapEnvDataWindV36","PackMapEnvDataLocalV36","PackMapEnvDataSkyModeTexV36","PackMapEnvDataGlobalV36","PackMapEnvironmentV36","PackMapEnvDataLightV35","PackMapEnvDataLightingV35","PackMapEnvDataLayerAttributesV35","PackMapEnvDataLayerV35","PackMapEnvDataCloudsV35","PackMapEnvDataEffectV35","PackMapEnvDataHazeV35","PackMapEnvDataPFieldV35","PackMapEnvDataPFieldCutoutV6","PackMapEnvDataSkyV35","PackMapEnvDataSkyCardAttributesV35","PackMapEnvDataSkyCardV35","PackMapEnvDataSkyCardsV35","PackMapEnvDataWaterV35","PackMapEnvDataWindV35","PackMapEnvDataLocalV35","PackMapEnvDataSkyModeTexV35","PackMapEnvDataGlobalV35","PackMapEnvironmentV35","PackMapEnvDataLightV34","PackMapEnvDataLightingV34","PackMapEnvDataLayerAttributesV34","PackMapEnvDataLayerV34","PackMapEnvDataCloudsV34","PackMapEnvDataEffectV34","PackMapEnvDataHazeV34","PackMapEnvDataPFieldV34","PackMapEnvDataSkyV34","PackMapEnvDataSkyCardAttributesV34","PackMapEnvDataSkyCardV34","PackMapEnvDataSkyCardsV34","PackMapEnvDataWaterV34","PackMapEnvDataWindV34","PackMapEnvDataLocalV34","PackMapEnvDataSkyModeTexV34","PackMapEnvDataGlobalV34","PackMapEnvironmentV34","PackMapEnvDataLightV33","PackMapEnvDataLightingV33","PackMapEnvDataLayerAttributesV33","PackMapEnvDataLayerV33","PackMapEnvDataCloudsV33","PackMapEnvDataEffectV33","PackMapEnvDataHazeV33","PackMapEnvDataPFieldV33","PackMapEnvDataSkyV33","PackMapEnvDataSkyCardAttributesV33","PackMapEnvDataSkyCardV33","PackMapEnvDataSkyCardsV33","PackMapEnvDataWaterV33","PackMapEnvDataWindV33","PackMapEnvDataLocalV33","PackMapEnvDataSkyModeTexV33","PackMapEnvDataGlobalV33","PackMapEnvironmentV33","PackMapEnvDataLightV32","PackMapEnvDataLightingV32","PackMapEnvDataLayerAttributesV32","PackMapEnvDataLayerV32","PackMapEnvDataCloudsV32","PackMapEnvDataEffectV32","PackMapEnvDataHazeV32","PackMapEnvDataPFieldV32","PackMapEnvDataSkyV32","PackMapEnvDataSkyCardAttributesV32","PackMapEnvDataSkyCardV32","PackMapEnvDataSkyCardsV32","PackMapEnvDataWaterV32","PackMapEnvDataWindV32","PackMapEnvDataLocalV32","PackMapEnvDataSkyModeTexV32","PackMapEnvDataGlobalV32","PackMapEnvironmentV32","PackMapEnvDataLightV31","PackMapEnvDataLightingV31","PackMapEnvDataLayerAttributesV31","PackMapEnvDataLayerV31","PackMapEnvDataCloudsV31","PackMapEnvDataEffectV31","PackMapEnvDataHazeV31","PackMapEnvDataPFieldV31","PackMapEnvDataSkyV31","PackMapEnvDataSkyCardAttributesV31","PackMapEnvDataSkyCardV31","PackMapEnvDataSkyCardsV31","PackMapEnvDataWaterV31","PackMapEnvDataWindV31","PackMapEnvDataLocalV31","PackMapEnvDataSkyModeTexV31","PackMapEnvDataGlobalV31","PackMapEnvironmentV31","PackMapEnvDataLightV30","PackMapEnvDataLightingV30","PackMapEnvDataLayerAttributesV30","PackMapEnvDataLayerV30","PackMapEnvDataCloudsV30","PackMapEnvDataEffectV30","PackMapEnvDataHazeV30","PackMapEnvDataPFieldV30","PackMapEnvDataSkyV30","PackMapEnvDataSkyCardAttributesV30","PackMapEnvDataSkyCardV30","PackMapEnvDataSkyCardsV30","PackMapEnvDataWaterV30","PackMapEnvDataWindV30","PackMapEnvDataLocalV30","PackMapEnvDataSkyModeTexV30","PackMapEnvDataGlobalV30","PackMapEnvironmentV30","PackMapEnvDataLightV29","PackMapEnvDataLightingV29","PackMapEnvDataLayerAttributesV29","PackMapEnvDataLayerV29","PackMapEnvDataCloudsV29","PackMapEnvDataEffectV29","PackMapEnvDataHazeV29","PackMapEnvDataPFieldV29","PackMapEnvDataSkyV29","PackMapEnvDataSkyCardAttributesV29","PackMapEnvDataSkyCardV29","PackMapEnvDataSkyCardsV29","PackMapEnvDataWaterV29","PackMapEnvDataWindV29","PackMapEnvDataLocalV29","PackMapEnvDataSkyModeTexV29","PackMapEnvDataGlobalV29","PackMapEnvironmentV29","PackEulaLanguageV0","PackEulaV0","MapExpansionProperty","MapExpansionProperties","ModelFileSnapPointV3","ModelExpansionEmitterV3","ModelFileExpansionV3","ModelFileSnapPointV2","ModelExpansionEmitterV2","ModelFileExpansionV2","ModelFileSnapPointV1","ModelExpansionEmitterV1","ModelFileExpansionV1","ModelFileSnapPointV0","ModelExpansionEmitterV0","ModelFileExpansionV0","PackAnimFallbackV0","PackAnimFallbacksV0","ModelFileGame","ScenePathNodeV6","ScenePathV6","SceneEdgeV6","SceneGameMeshV6","SceneGameSurfaceV6","SceneFileGameV6","ScenePathNodeV5","ScenePathV5","SceneEdgeV5","SceneGameMeshV5","SceneFileGameV5","ScenePathNodeV4","ScenePathV4","SceneEdgeV4","SceneGameMeshV4","SceneGrabNodeV4","SceneFileGameV4","ScenePathNodeV3","ScenePathV3","SceneEdgeV3","SceneGameMeshV3","SceneGrabNodeV3","SceneFileGameV3","ScenePathNodeV2","ScenePathV2","SceneEdgeV2","SceneGameMeshV2","SceneGrabNodeV2","SceneFileGameV2","ScenePathNodeV1","ScenePathV1","SceneEdgeV1","SceneGameMeshV1","SceneFileGameV1","ScenePathNodeV0","ScenePathV0","SceneEdgeV0","SceneGameMeshV0","SceneFileGameV0","ModelMeshMorphVertV66","ModelMeshMorphTargetV66","GrBoundData","PackVertexType","ModelMeshVertexDataV1","ModelMeshIndexDataV1","ModelMeshGeometryV1","ModelMeshDataV66","ModelFileGeometryV1","ModelMeshMorphVertV65","ModelMeshMorphTargetV65","ModelMeshVertexDataV0","ModelMeshIndexDataV0","ModelMeshGeometryV0","ModelMeshDataV65","ModelFileGeometryV0","ModelGr2DataV4","ModelFileGr2sV4","ModelGr2DataV3","ModelFileGr2sV3","ModelGr2DataV2","ModelFileGr2sV2","ModelGr2DataV1","ModelFileGr2sV1","ModelGr2DataV0","ModelFileGr2sV0","AmatGr","AmatGrV3","AmatGrV2","AmatGrV1","AmatGrV0","PackMoppType","PackMapCollideCollisionV14","PackMapCollideBlockerV14","PackMapCollideNavMeshV14","PackMapCollideAnimationV14","PackMapCollideGeometryV14","PackMapCollideModelObsV14","PackMapCollideModelPropV14","PackMapCollideModelZoneV14","PackMapCollideV14","PackMapCollideCollisionV13","PackMapCollideBlockerV13","PackMapCollideAnimationV13","PackMapCollideGeometryV13","PackMapCollideModelObsV13","PackMapCollideModelPropV13","PackMapCollideModelZoneV13","PackMapCollideV13","PackMapCollideMeshV12","PackMapCollideMeshRefV12","PackMapCollideGeometryV12","PackMapCollideModelObsV12","PackMapCollideModelPropV12","PackMapCollideModelZoneV12","PackMapCollideAiChunkV12","PackMapCollideV12","PackMapCollideMeshV11","PackMapCollideMeshRefV11","PackMapCollideGeometryV11","PackMapCollideModelObsV11","PackMapCollideModelPropV11","PackMapCollideModelZoneV11","PackMapCollideAiChunkV11","PackMapCollideV11","PackMapCollideMeshV10","PackMapCollideMeshRefV10","PackMapCollideGeometryV10","PackMapCollideModelObsV10","PackMapCollideModelPropV10","PackMapCollideModelZoneV10","PackMapCollideAiChunkV10","PackMapCollideV10","PackMapCollideMeshV9","PackMapCollideMeshRefV9","PackMapCollideGeometryV9","PackMapCollideModelObsV9","PackMapCollideModelPropV9","PackMapCollideModelZoneV9","PackMapCollideAiChunkV9","PackMapCollideV9","PackMapCollideMeshV8","PackMapCollideMeshRefV8","PackMapCollideGeometryV8","PackMapCollideModelPropV8","PackMapCollideModelZoneV8","PackMapCollideAiChunkV8","PackMapCollideV8","PackMapCollideMoppCodeV7","PackMapCollideMeshSizeV7","PackMapCollideMeshV7","PackMapCollideMeshRefV7","PackMapCollideGeometryV7","PackMapCollideModelPropV7","PackMapCollideModelZoneV7","PackMapCollideAiChunkV7","PackMapCollideV7","PackMapCollideMoppCodeV6","PackMapCollideMeshSizeV6","PackMapCollideMeshV6","PackMapCollideMeshRefV6","PackMapCollideGeometryV6","PackMapCollideModelPropV6","PackMapCollideModelZoneV6","PackMapCollideV6","ModelFileIcon","PackMapLayerProp","PackMapLayer","PackMapLayers","PackMapLight","PackMapCurve","PackMapPointLightgroups","PackMapPortalData","PackMapPortalLight","PackMapSpotShadow","PackMapSpotLight","PackMapSpotLightgroups","PackMapVolumeImage","PackMapVolumeLight","PackBroadphaseType","PackMapLights","PackMapPointLight","PackMapLightsV15","PackMapProtalLight","PackMapLightsV14","PackMapLightgroups","PackAnimMachineActionV1","PackAnimMachineActionBlockV1","PackAnimMachineActionVariantV1","PackAnimMachineActionVariantBlockV1","PackAnimMachineTransitionVariantV1","PackAnimMachineTransitionV1","PackAnimMachineStateVariantV1","PackAnimMachineStateV1","PackAnimMachineV1","PackAnimModelV1","PackAnimMachinesV1","PackAnimMachineActionV0","PackAnimMachineActionBlockV0","PackAnimMachineActionVariantV0","PackAnimMachineActionVariantBlockV0","PackAnimMachineTransitionVariantV0","PackAnimMachineTransitionV0","PackAnimMachineStateVariantV0","PackAnimMachineStateV0","PackAnimMachineV0","PackAnimModelV0","PackAnimMachinesV0","CollideNavMeshChunkRef","CollideNavMesh","CollideNavMeshChunk","CollideModelManifestFile","CollideModelManifest","PackContentTypeInfo","PackContentNamespace","PackContentIndexEntry","PackContentLocalOffsetFixup","PackContentExternalOffsetFixup","PackContentFileIndexFixup","PackContentStringIndexFixup","PackContentTrackedReference","PackContent","PackMapMetadataMap","PackMapMetadata","PackAssetManifestRecord","PackAssetManifestStream","PackAssetManifestProperty","PackAssetManifestPropertyIndex","PackAssetManifest","PackAssetManifestRecordV5","PackAssetManifestStreamV5","PackAssetManifestPropertyV5","PackAssetManifestPropertyIndexV5","PackAssetManifestV5","PackAssetManifestRecordV4","PackAssetManifestStreamV4","PackAssetManifestOptionsV4","PackAssetManifestPropertyV4","PackAssetManifestPropertyIndexV4","PackAssetManifestV4","PackAssetManifestRecordV3","PackAssetManifestStreamV3","PackAssetManifestOptionsV3","PackAssetManifestV3","PackAssetManifestRecordV2","PackAssetManifestStreamV2","PackAssetManifestV2","PackAssetManifestRecordV1","PackAssetManifestStreamV1","PackAssetManifestV1","PackAssetManifestRecordV0","PackAssetManifestV0","ContentMapRedirector","ContentMapModel","ContentMapStart","ContentMap","ContentPortalManifest","ContentMapRedirectorV1","ContentMapModelV1","ContentMapStartV1","ContentMapV1","ContentPortalManifestV1","ContentMapRedirectorV0","ContentMapModelV0","ContentMapStartV0","ContentMapV0","ContentPortalManifestV0","ModelTextureDataV65","ModelConstantDataV65","ModelMatConstLinkV65","ModelUVTransLinkV65","ModelMaterialTexTransformV65","ModelMaterialDataV65","ModelPermutationDataV65","ModelParticleCloudV65","ModelParticleCurveV65","ModelParticleFlipbookV65","ModelMatrix43V65","ModelParticleEmitterV65","ModelCloudDataV65","ModelObstacleDataV65","ModelStreakV65","ModelStreakAnchorV65","ModelStreakDataV65","ModelEffectLightV65","ModelLightDataV65","ModelClothBoneWeightV65","ModelClothMeshGroupV65","ModelClothGroupBindingV65","ModelClothSoftLockV65","ModelClothConstraintV65","ModelClothDataV65","ModelEffectWindV65","ModelWindDataV65","ModelLightningSystemV65","ModelLightningBoltV65","ModelLightningNodeV65","ModelLightningDataV65","ModelSoftBodyDataV65","ModelBoneOffsetDataV65","ModelBoundingSphereV65","ModelFileDataV65","ModelTextureDataV64","ModelConstantDataV64","ModelMatConstLinkV64","ModelUVTransLinkV64","ModelMaterialTexTransformV64","ModelMaterialDataV64","ModelPermutationDataV64","ModelMeshLodDataV64","ModelMeshMorphVertV64","ModelMeshMorphTargetV64","PackGrannyMeshType","ModelMeshDataV64","ModelParticleCloudV64","ModelParticleCurveV64","ModelParticleFlipbookV64","ModelMatrix43V64","ModelParticleEmitterV64","ModelCloudDataV64","ModelObstacleDataV64","ModelStreakV64","ModelStreakAnchorV64","ModelStreakDataV64","ModelEffectLightV64","ModelLightDataV64","ModelClothBoneWeightV64","ModelClothMeshGroupV64","ModelClothGroupBindingV64","ModelClothSoftLockV64","ModelClothConstraintV64","ModelClothDataV64","ModelEffectWindV64","ModelWindDataV64","ModelLightningSystemV64","ModelLightningBoltV64","ModelLightningNodeV64","ModelLightningDataV64","ModelSoftBodyDataV64","ModelBoneOffsetDataV64","ModelBoundingSphereV64","ModelFileDataV64","ModelTextureDataV63","ModelConstantDataV63","ModelMatConstLinkV63","ModelUVTransLinkV63","ModelMaterialTexTransformV63","ModelMaterialDataV63","ModelPermutationDataV63","ModelMeshLodDataV63","ModelMeshMorphVertV63","ModelMeshMorphTargetV63","ModelMeshDataV63","ModelParticleCloudV63","ModelParticleCurveV63","ModelParticleFlipbookV63","ModelMatrix43V63","ModelParticleEmitterV63","ModelCloudDataV63","ModelObstacleDataV63","ModelStreakV63","ModelStreakAnchorV63","ModelStreakDataV63","ModelEffectLightV63","ModelLightDataV63","ModelClothBoneWeightV63","ModelClothMeshGroupV63","ModelClothGroupBindingV63","ModelClothSoftLockV63","ModelClothConstraintV63","ModelClothDataV63","ModelEffectWindV63","ModelWindDataV63","ModelLightningSystemV63","ModelLightningBoltV63","ModelLightningNodeV63","ModelLightningDataV63","ModelSoftBodyDataV63","ModelBoneOffsetDataV63","ModelBoundingSphereV63","ModelFileDataV63","ModelTextureDataV62","ModelConstantDataV62","ModelMatConstLinkV62","ModelUVTransLinkV62","ModelMaterialTexTransformV62","ModelMaterialDataV62","ModelPermutationDataV62","ModelMeshLodDataV62","ModelMeshMorphVertV62","ModelMeshMorphTargetV62","ModelMeshDataV62","ModelParticleCloudV62","ModelParticleCurveV62","ModelParticleFlipbookV62","ModelMatrix43V62","ModelParticleEmitterV62","ModelCloudDataV62","ModelObstacleDataV62","ModelStreakV62","ModelStreakAnchorV62","ModelStreakDataV62","ModelEffectLightV62","ModelLightDataV62","ModelClothBoneWeightV62","ModelClothMeshGroupV62","ModelClothGroupBindingV62","ModelClothSoftLockV62","ModelClothConstraintV62","ModelClothDataV62","ModelEffectWindV62","ModelWindDataV62","ModelLightningSystemV62","ModelLightningBoltV62","ModelLightningNodeV62","ModelLightningDataV62","ModelSoftBodyDataV62","ModelBoneOffsetDataV62","ModelBoundingSphereV62","ModelFileDataV62","ModelTextureDataV61","ModelConstantDataV61","ModelMatConstLinkV61","ModelUVTransLinkV61","ModelMaterialTexTransformV61","ModelMaterialDataV61","ModelPermutationDataV61","ModelMeshLodDataV61","ModelMeshMorphVertV61","ModelMeshMorphTargetV61","ModelMeshDataV61","ModelTransformDataV61","ModelBoneDataV61","ModelBoneSymmetryV61","ModelSkeletonDataV61","ModelMeshBindingDataV61","PackGrannyTrackMaskType","ModelTrackMaskV61","ModelModelDataV61","ModelPropertyDataV61","ModelParticleCloudV61","ModelParticleCurveV61","ModelParticleFlipbookV61","ModelMatrix43V61","ModelParticleEmitterV61","ModelCloudDataV61","ModelObstacleDataV61","ModelStreakV61","ModelStreakAnchorV61","ModelStreakDataV61","ModelEffectLightV61","ModelLightDataV61","ModelClothBoneWeightV61","ModelClothMeshGroupV61","ModelClothGroupBindingV61","ModelClothSoftLockV61","ModelClothConstraintV61","ModelClothDataV61","ModelEffectWindV61","ModelWindDataV61","ModelLightningSystemV61","ModelLightningBoltV61","ModelLightningNodeV61","ModelLightningDataV61","ModelBoneConstraintLinkV61","ModelBoneConstraintV61","ModelSoftBodyDataV61","ModelBoneOffsetDataV61","ModelFixedOffsetDataV61","ModelFileDataV61","ModelTextureDataV60","ModelConstantDataV60","ModelMatConstLinkV60","ModelUVTransLinkV60","ModelMaterialTexTransformV60","ModelMaterialDataV60","ModelPermutationDataV60","ModelMeshLodDataV60","ModelMeshMorphVertV60","ModelMeshMorphTargetV60","ModelMeshDataV60","ModelTransformDataV60","ModelBoneDataV60","ModelBoneSymmetryV60","ModelSkeletonDataV60","ModelMeshBindingDataV60","ModelTrackMaskV60","ModelModelDataV60","ModelPropertyDataV60","ModelParticleCloudV60","ModelParticleCurveV60","ModelParticleFlipbookV60","ModelMatrix43V60","ModelParticleEmitterV60","ModelCloudDataV60","ModelObstacleDataV60","ModelStreakV60","ModelStreakAnchorV60","ModelStreakDataV60","ModelEffectLightV60","ModelLightDataV60","ModelClothBoneWeightV60","ModelClothMeshGroupV60","ModelClothGroupBindingV60","ModelClothSoftLockV60","ModelClothConstraintV60","ModelClothDataV60","ModelLightningSystemV60","ModelLightningBoltV60","ModelLightningNodeV60","ModelLightningDataV60","ModelBoneConstraintLinkV60","ModelBoneConstraintV60","ModelSoftBodyDataV60","ModelBoneOffsetDataV60","ModelFixedOffsetDataV60","ModelFileDataV60","ModelTextureDataV59","ModelConstantDataV59","ModelMatConstLinkV59","ModelUVTransLinkV59","ModelMaterialTexTransformV59","ModelMaterialDataV59","ModelPermutationDataV59","ModelMeshLodDataV59","ModelMeshMorphVertV59","ModelMeshMorphTargetV59","ModelMeshDataV59","ModelTransformDataV59","ModelBoneDataV59","ModelBoneSymmetryV59","ModelSkeletonDataV59","ModelMeshBindingDataV59","ModelTrackMaskV59","ModelModelDataV59","ModelPropertyDataV59","ModelParticleCloudV59","ModelParticleCurveV59","ModelParticleFlipbookV59","ModelMatrix43V59","ModelParticleEmitterV59","ModelCloudDataV59","ModelObstacleDataV59","ModelStreakV59","ModelStreakAnchorV59","ModelStreakDataV59","ModelEffectLightV59","ModelLightDataV59","ModelClothBoneWeightV59","ModelClothMeshGroupV59","ModelClothSoftLockV59","ModelClothConstraintV59","ModelClothDataV59","ModelLightningSystemV59","ModelLightningBoltV59","ModelLightningNodeV59","ModelLightningDataV59","ModelBoneConstraintLinkV59","ModelBoneConstraintV59","ModelSoftBodyDataV59","ModelBoneOffsetDataV59","ModelFixedOffsetDataV59","ModelFileDataV59","ModelTextureDataV58","ModelConstantDataV58","ModelMatConstLinkV58","ModelUVTransLinkV58","ModelMaterialTexTransformV58","ModelMaterialDataV58","ModelPermutationDataV58","ModelMeshLodDataV58","ModelMeshMorphVertV58","ModelMeshMorphTargetV58","ModelMeshDataV58","ModelTransformDataV58","ModelBoneDataV58","ModelBoneSymmetryV58","ModelSkeletonDataV58","ModelMeshBindingDataV58","ModelTrackMaskV58","ModelModelDataV58","ModelPropertyDataV58","ModelParticleCloudV58","ModelParticleCurveV58","ModelParticleFlipbookV58","ModelMatrix43V58","ModelParticleEmitterV58","ModelCloudDataV58","ModelObstacleDataV58","ModelStreakV58","ModelStreakAnchorV58","ModelStreakDataV58","ModelEffectLightV58","ModelLightDataV58","ModelClothBoneWeightV58","ModelClothMeshGroupV58","ModelClothSoftLockV58","ModelClothConstraintV58","ModelClothDataV58","ModelLightningSystemV58","ModelLightningBoltV58","ModelLightningNodeV58","ModelLightningDataV58","ModelBoneConstraintLinkV58","ModelBoneConstraintV58","ModelSoftBodyDataV58","ModelBoneOffsetDataV58","ModelFixedOffsetDataV58","ModelFileDataV58","ModelTextureDataV57","ModelConstantDataV57","ModelMatConstLinkV57","ModelUVTransLinkV57","ModelMaterialTexTransformV57","ModelMaterialDataV57","ModelPermutationDataV57","ModelMeshLodDataV57","ModelMeshMorphVertV57","ModelMeshMorphTargetV57","ModelMeshDataV57","ModelTransformDataV57","ModelBoneDataV57","ModelBoneSymmetryV57","ModelSkeletonDataV57","ModelMeshBindingDataV57","ModelTrackMaskV57","ModelModelDataV57","ModelPropertyDataV57","ModelParticleCloudV57","ModelParticleCurveV57","ModelParticleFlipbookV57","ModelMatrix43V57","ModelParticleEmitterV57","ModelCloudDataV57","ModelObstacleDataV57","ModelStreakV57","ModelStreakAnchorV57","ModelStreakDataV57","ModelEffectLightV57","ModelLightDataV57","ModelClothBoneWeightV57","ModelClothMeshGroupV57","ModelClothSoftLockV57","ModelClothConstraintV57","ModelClothDataV57","ModelLightningSystemV57","ModelLightningBoltV57","ModelLightningNodeV57","ModelLightningDataV57","ModelBoneConstraintLinkV57","ModelBoneConstraintV57","ModelSoftBodyDataV57","ModelBoneOffsetDataV57","ModelFixedOffsetDataV57","ModelFileDataV57","ModelTextureDataV56","ModelConstantDataV56","ModelMatConstLinkV56","ModelUVTransLinkV56","ModelMaterialTexTransformV56","ModelMaterialDataV56","ModelPermutationDataV56","ModelMeshLodDataV56","ModelMeshMorphVertV56","ModelMeshMorphTargetV56","ModelMeshDataV56","ModelTransformDataV56","ModelBoneDataV56","ModelBoneSymmetryV56","ModelSkeletonDataV56","ModelMeshBindingDataV56","ModelTrackMaskV56","ModelModelDataV56","ModelPropertyDataV56","ModelParticleCloudV56","ModelParticleCurveV56","ModelParticleFlipbookV56","ModelMatrix43V56","ModelParticleEmitterV56","ModelCloudDataV56","ModelObstacleDataV56","ModelStreakV56","ModelStreakAnchorV56","ModelStreakDataV56","ModelEffectLightV56","ModelLightDataV56","ModelClothBoneWeightV56","ModelClothMeshGroupV56","ModelClothSoftLockV56","ModelClothConstraintV56","ModelClothDataV56","ModelLightningSystemV56","ModelLightningBoltV56","ModelLightningNodeV56","ModelLightningDataV56","ModelBoneConstraintLinkV56","ModelBoneConstraintV56","ModelSoftBodyDataV56","ModelBoneOffsetDataV56","ModelFileDataV56","ModelTextureDataV55","ModelConstantDataV55","ModelMatConstLinkV55","ModelUVTransLinkV55","ModelMaterialTexTransformV55","ModelMaterialDataV55","ModelPermutationDataV55","ModelMeshLodDataV55","ModelMeshMorphVertV55","ModelMeshMorphTargetV55","ModelMeshDataV55","ModelTransformDataV55","ModelBoneDataV55","ModelBoneSymmetryV55","ModelSkeletonDataV55","ModelMeshBindingDataV55","ModelTrackMaskV55","ModelModelDataV55","ModelPropertyDataV55","ModelParticleCloudV55","ModelParticleCurveV55","ModelParticleFlipbookV55","ModelMatrix43V55","ModelParticleEmitterV55","ModelCloudDataV55","ModelObstacleDataV55","ModelStreakV55","ModelStreakAnchorV55","ModelStreakDataV55","ModelEffectLightV55","ModelLightDataV55","ModelClothBoneWeightV55","ModelClothMeshGroupV55","ModelClothSoftLockV55","ModelClothConstraintV55","ModelClothDataV55","ModelLightningSystemV55","ModelLightningBoltV55","ModelLightningNodeV55","ModelLightningDataV55","ModelBoneConstraintLinkV55","ModelBoneConstraintV55","ModelSoftBodyDataV55","ModelBoneOffsetDataV55","ModelFileDataV55","ModelTextureDataV54","ModelConstantDataV54","ModelMatConstLinkV54","ModelUVTransLinkV54","ModelMaterialTexTransformV54","ModelMaterialDataV54","ModelPermutationDataV54","ModelMeshLodDataV54","ModelMeshMorphVertV54","ModelMeshMorphTargetV54","ModelMeshDataV54","ModelTransformDataV54","ModelBoneDataV54","ModelBoneSymmetryV54","ModelSkeletonDataV54","ModelMeshBindingDataV54","ModelTrackMaskV54","ModelModelDataV54","ModelPropertyDataV54","ModelParticleCloudV54","ModelParticleCurveV54","ModelParticleFlipbookV54","ModelMatrix43V54","ModelParticleEmitterV54","ModelCloudDataV54","ModelObstacleDataV54","ModelStreakV54","ModelStreakAnchorV54","ModelStreakDataV54","ModelEffectLightV54","ModelLightDataV54","ModelClothBoneWeightV54","ModelClothMeshGroupV54","ModelClothSoftLockV54","ModelClothConstraintV54","ModelClothDataV54","ModelLightningSystemV54","ModelLightningBoltV54","ModelLightningNodeV54","ModelLightningDataV54","ModelBoneConstraintLinkV54","ModelBoneConstraintV54","ModelSoftBodyDataV54","ModelBoneOffsetDataV54","ModelFileDataV54","ModelTextureDataV53","ModelConstantDataV53","ModelMatConstLinkV53","ModelUVTransLinkV53","ModelMaterialTexTransformV53","ModelMaterialDataV53","ModelPermutationDataV53","ModelMeshLodDataV53","ModelMeshMorphVertV53","ModelMeshMorphTargetV53","ModelMeshDataV53","ModelTransformDataV53","ModelBoneDataV53","ModelSkeletonDataV53","ModelMeshBindingDataV53","ModelTrackMaskV53","ModelModelDataV53","ModelPropertyDataV53","ModelParticleCloudV53","ModelParticleCurveV53","ModelParticleFlipbookV53","ModelParticleEmitterV53","ModelCloudDataV53","ModelMatrix43V53","ModelObstacleDataV53","ModelStreakV53","ModelStreakAnchorV53","ModelStreakDataV53","ModelEffectLightV53","ModelLightDataV53","ModelClothBoneWeightV53","ModelClothMeshGroupV53","ModelClothSoftLockV53","ModelClothConstraintV53","ModelClothDataV53","ModelLightningSystemV53","ModelLightningBoltV53","ModelLightningNodeV53","ModelLightningDataV53","ModelBoneConstraintLinkV53","ModelBoneConstraintV53","ModelSoftBodyDataV53","ModelBoneOffsetDataV53","ModelFileDataV53","ModelTextureDataV52","ModelConstantDataV52","ModelMatConstLinkV52","ModelUVTransLinkV52","ModelMaterialTexTransformV52","ModelMaterialDataV52","ModelPermutationDataV52","ModelMeshLodDataV52","ModelMeshMorphVertV52","ModelMeshMorphTargetV52","ModelMeshDataV52","ModelTransformDataV52","ModelBoneDataV52","ModelSkeletonDataV52","ModelMeshBindingDataV52","ModelTrackMaskV52","ModelModelDataV52","ModelPropertyDataV52","ModelParticleCloudV52","ModelParticleCurveV52","ModelParticleFlipbookV52","ModelParticleEmitterV52","ModelCloudDataV52","ModelObstacleDataV52","ModelStreakV52","ModelStreakAnchorV52","ModelStreakDataV52","ModelEffectLightV52","ModelLightDataV52","ModelClothBoneWeightV52","ModelClothMeshGroupV52","ModelClothSoftLockV52","ModelClothConstraintV52","ModelClothObstacleV52","ModelClothDataV52","ModelLightningSystemV52","ModelLightningBoltV52","ModelLightningNodeV52","ModelLightningDataV52","ModelBoneConstraintLinkV52","ModelBoneConstraintV52","ModelSoftBodyDataV52","ModelBoneOffsetDataV52","ModelFileDataV52","ModelTextureDataV51","ModelConstantDataV51","ModelMatConstLinkV51","ModelUVTransLinkV51","ModelMaterialTexTransformV51","ModelMaterialDataV51","ModelPermutationDataV51","ModelMeshLodDataV51","ModelMeshMorphVertV51","ModelMeshMorphTargetV51","ModelMeshDataV51","ModelTransformDataV51","ModelBoneDataV51","ModelSkeletonDataV51","ModelMeshBindingDataV51","ModelTrackMaskV51","ModelModelDataV51","ModelPropertyDataV51","ModelParticleCloudV51","ModelParticleCurveV51","ModelParticleFlipbookV51","ModelParticleEmitterV51","ModelCloudDataV51","ModelObstacleDataV51","ModelStreakV51","ModelStreakAnchorV51","ModelStreakDataV51","ModelEffectLightV51","ModelLightDataV51","ModelClothBoneWeightV51","ModelClothMeshGroupV51","ModelClothConstraintV51","ModelClothObstacleV51","ModelClothDataV51","ModelLightningSystemV51","ModelLightningBoltV51","ModelLightningNodeV51","ModelLightningDataV51","ModelBoneConstraintLinkV51","ModelBoneConstraintV51","ModelSoftBodyDataV51","ModelBoneOffsetDataV51","ModelFileDataV51","ModelTextureDataV50","ModelConstantDataV50","ModelMatConstLinkV50","ModelUVTransLinkV50","ModelMaterialTexTransformV50","ModelMaterialDataV50","ModelMeshLodDataV50","ModelMeshMorphVertV50","ModelMeshMorphTargetV50","ModelMeshDataV50","ModelTransformDataV50","ModelBoneDataV50","ModelSkeletonDataV50","ModelMeshBindingDataV50","ModelTrackMaskV50","ModelModelDataV50","ModelPropertyDataV50","ModelParticleCloudV50","ModelParticleCurveV50","ModelParticleFlipbookV50","ModelParticleEmitterV50","ModelCloudDataV50","ModelObstacleDataV50","ModelStreakV50","ModelStreakAnchorV50","ModelStreakDataV50","ModelEffectLightV50","ModelLightDataV50","ModelClothBoneWeightV50","ModelClothMeshGroupV50","ModelClothConstraintV50","ModelClothObstacleV50","ModelClothDataV50","ModelLightningSystemV50","ModelLightningBoltV50","ModelLightningNodeV50","ModelLightningDataV50","ModelBoneConstraintLinkV50","ModelBoneConstraintV50","ModelSoftBodyDataV50","ModelBoneOffsetDataV50","ModelFileDataV50","ModelTextureDataV49","ModelConstantDataV49","ModelMatConstLinkV49","ModelUVTransLinkV49","ModelMaterialTexTransformV49","ModelMaterialDataV49","ModelMeshLodDataV49","ModelMeshMorphVertV49","ModelMeshMorphTargetV49","ModelMeshDataV49","ModelTransformDataV49","ModelBoneDataV49","ModelSkeletonDataV49","ModelMeshBindingDataV49","ModelTrackMaskV49","ModelModelDataV49","ModelPropertyDataV49","ModelParticleCloudV49","ModelParticleCurveV49","ModelParticleFlipbookV49","ModelParticleEmitterV49","ModelCloudDataV49","ModelObstacleDataV49","ModelStreakV49","ModelStreakAnchorV49","ModelStreakDataV49","ModelEffectLightV49","ModelLightDataV49","ModelClothBoneWeightV49","ModelClothMeshGroupV49","ModelClothConstraintV49","ModelClothObstacleV49","ModelClothDataV49","ModelLightningSystemV49","ModelLightningBoltV49","ModelLightningNodeV49","ModelLightningDataV49","ModelBoneConstraintLinkV49","ModelBoneConstraintV49","ModelSoftBodyDataV49","ModelBoneOffsetDataV49","ModelFileDataV49","ModelTextureDataV48","ModelConstantDataV48","ModelMatConstLinkV48","ModelUVTransLinkV48","ModelMaterialTexTransformV48","ModelMaterialDataV48","ModelMeshLodDataV48","ModelMeshMorphVertV48","ModelMeshMorphTargetV48","ModelMeshDataV48","ModelTransformDataV48","ModelBoneDataV48","ModelSkeletonDataV48","ModelMeshBindingDataV48","ModelTrackMaskV48","ModelModelDataV48","ModelPropertyDataV48","ModelParticleCloudV48","ModelParticleCurveV48","ModelParticleFlipbookV48","ModelParticleEmitterV48","ModelCloudDataV48","ModelObstacleDataV48","ModelStreakV48","ModelStreakAnchorV48","ModelStreakDataV48","ModelEffectLightV48","ModelLightDataV48","ModelClothBoneWeightV48","ModelClothMeshGroupV48","ModelClothConstraintV48","ModelClothObstacleV48","ModelClothDataV48","ModelLightningSystemV48","ModelLightningBoltV48","ModelLightningNodeV48","ModelLightningDataV48","ModelBoneConstraintLinkV48","ModelBoneConstraintV48","ModelSoftBodyDataV48","ModelFileDataV48","ModelTextureDataV47","ModelConstantDataV47","ModelMatConstLinkV47","ModelUVTransLinkV47","ModelMaterialTexTransformV47","ModelMaterialDataV47","ModelMeshLodDataV47","ModelMeshMorphVertV47","ModelMeshMorphTargetV47","ModelMeshDataV47","ModelTransformDataV47","ModelBoneDataV47","ModelSkeletonDataV47","ModelMeshBindingDataV47","ModelTrackMaskV47","ModelModelDataV47","ModelPropertyDataV47","ModelParticleCloudV47","ModelParticleCurveV47","ModelParticleFlipbookV47","ModelParticleEmitterV47","ModelCloudDataV47","ModelObstacleDataV47","ModelStreakV47","ModelStreakAnchorV47","ModelStreakDataV47","ModelEffectLightV47","ModelLightDataV47","ModelClothBoneWeightV47","ModelClothMeshGroupV47","ModelClothConstraintV47","ModelClothObstacleV47","ModelClothDataV47","ModelLightningSystemV47","ModelLightningBoltV47","ModelLightningNodeV47","ModelLightningDataV47","ModelBoneConstraintLinkV47","ModelBoneConstraintV47","ModelSoftBodyDataV47","ModelFileDataV47","ModelTextureDataV46","ModelConstantDataV46","ModelMatConstLinkV46","ModelUVTransLinkV46","ModelMaterialTexTransformV46","ModelMaterialDataV46","ModelMeshLodDataV46","ModelMeshMorphTargetV46","ModelMeshDataV46","ModelTransformDataV46","ModelBoneDataV46","ModelSkeletonDataV46","ModelMeshBindingDataV46","ModelTrackMaskV46","ModelModelDataV46","ModelPropertyDataV46","ModelParticleCloudV46","ModelParticleCurveV46","ModelParticleFlipbookV46","ModelParticleEmitterV46","ModelCloudDataV46","ModelObstacleDataV46","ModelStreakV46","ModelStreakAnchorV46","ModelStreakDataV46","ModelEffectLightV46","ModelLightDataV46","ModelClothBoneWeightV46","ModelClothMeshGroupV46","ModelClothConstraintV46","ModelClothObstacleV46","ModelClothDataV46","ModelLightningSystemV46","ModelLightningBoltV46","ModelLightningNodeV46","ModelLightningDataV46","ModelBoneConstraintLinkV46","ModelBoneConstraintV46","ModelSoftBodyDataV46","ModelFileDataV46","ModelTextureDataV45","ModelConstantDataV45","ModelMatConstLinkV45","ModelUVTransLinkV45","ModelMaterialTexTransformV45","ModelMaterialDataV45","ModelMeshLodDataV45","ModelMeshMorphTargetV45","ModelMeshDataV45","ModelTransformDataV45","ModelBoneDataV45","ModelSkeletonDataV45","ModelMeshBindingDataV45","ModelTrackMaskV45","ModelModelDataV45","ModelPropertyDataV45","ModelParticleCloudV45","ModelParticleCurveV45","ModelParticleFlipbookV45","ModelParticleEmitterV45","ModelCloudDataV45","ModelObstacleDataV45","ModelStreakV45","ModelStreakAnchorV45","ModelStreakDataV45","ModelEffectLightV45","ModelLightDataV45","ModelClothBoneWeightV45","ModelClothMeshGroupV45","ModelClothConstraintV45","ModelClothObstacleV45","ModelClothDataV45","ModelLightningSystemV45","ModelLightningBoltV45","ModelLightningNodeV45","ModelLightningDataV45","ModelBoneConstraintLinkV45","ModelBoneConstraintV45","ModelSoftBodyDataV45","ModelFileDataV45","ModelTextureDataV44","ModelConstantDataV44","ModelMatConstLinkV44","ModelUVTransLinkV44","ModelMaterialDataV44","ModelMeshLodDataV44","ModelMeshMorphTargetV44","ModelMeshDataV44","ModelTransformDataV44","ModelBoneDataV44","ModelSkeletonDataV44","ModelMeshBindingDataV44","ModelTrackMaskV44","ModelModelDataV44","ModelPropertyDataV44","ModelParticleCloudV44","ModelParticleCurveV44","ModelParticleFlipbookV44","ModelParticleEmitterV44","ModelCloudDataV44","ModelObstacleDataV44","ModelStreakV44","ModelStreakAnchorV44","ModelStreakDataV44","ModelEffectLightV44","ModelLightDataV44","ModelClothBoneWeightV44","ModelClothMeshGroupV44","ModelClothConstraintV44","ModelClothObstacleV44","ModelClothDataV44","ModelLightningSystemV44","ModelLightningBoltV44","ModelLightningNodeV44","ModelLightningDataV44","ModelBoneConstraintLinkV44","ModelBoneConstraintV44","ModelSoftBodyDataV44","ModelFileDataV44","ModelTextureDataV43","ModelConstantDataV43","ModelMatConstLinkV43","ModelUVTransLinkV43","ModelMaterialDataV43","ModelMeshLodDataV43","ModelMeshMorphTargetV43","ModelMeshDataV43","ModelTransformDataV43","ModelBoneDataV43","ModelSkeletonDataV43","ModelMeshBindingDataV43","ModelTrackMaskV43","ModelModelDataV43","ModelPropertyDataV43","ModelParticleCloudV43","ModelParticleCurveV43","ModelParticleFlipbookV43","ModelParticleEmitterV43","ModelCloudDataV43","ModelObstacleDataV43","ModelStreakV43","ModelStreakAnchorV43","ModelStreakDataV43","ModelEffectLightV43","ModelLightDataV43","ModelClothBoneWeightV43","ModelClothMeshGroupV43","ModelClothConstraintV43","ModelClothObstacleV43","ModelClothDataV43","ModelLightningSystemV43","ModelLightningBoltV43","ModelLightningNodeV43","ModelLightningDataV43","ModelBoneConstraintLinkV43","ModelBoneConstraintV43","ModelSoftBodyDataV43","ModelFileDataV43","ModelTextureDataV42","ModelConstantDataV42","ModelMatConstLinkV42","ModelUVTransLinkV42","ModelMaterialDataV42","ModelMeshLodDataV42","ModelMeshMorphTargetV42","ModelMeshDataV42","ModelTransformDataV42","ModelBoneDataV42","ModelSkeletonDataV42","ModelMeshBindingDataV42","ModelTrackMaskV42","ModelModelDataV42","ModelPropertyDataV42","ModelParticleCloudV42","ModelParticleCurveV42","ModelParticleFlipbookV42","ModelParticleEmitterV42","ModelCloudDataV42","ModelObstacleDataV42","ModelStreakV42","ModelStreakAnchorV42","ModelStreakDataV42","ModelEffectLightV42","ModelLightDataV42","ModelClothBoneWeightV42","ModelClothMeshGroupV42","ModelClothConstraintV42","ModelClothObstacleV42","ModelClothDataV42","ModelLightningSystemV42","ModelLightningBoltV42","ModelLightningNodeV42","ModelLightningDataV42","ModelBoneConstraintLinkV42","ModelBoneConstraintV42","ModelSoftBodyDataV42","ModelFileDataV42","ModelTextureDataV41","ModelConstantDataV41","ModelMatConstLinkV41","ModelUVTransLinkV41","ModelMaterialDataV41","ModelMeshLodDataV41","ModelMeshMorphTargetV41","ModelMeshDataV41","ModelTransformDataV41","ModelBoneDataV41","ModelSkeletonDataV41","ModelMeshBindingDataV41","ModelTrackMaskV41","ModelModelDataV41","ModelPropertyDataV41","ModelParticleCloudV41","ModelParticleCurveV41","ModelParticleFlipbookV41","ModelParticleEmitterV41","ModelCloudDataV41","ModelObstacleDataV41","ModelStreakV41","ModelStreakAnchorV41","ModelStreakDataV41","ModelEffectLightV41","ModelLightDataV41","ModelClothBoneWeightV41","ModelClothMeshGroupV41","ModelClothConstraintV41","ModelClothObstacleV41","ModelClothDataV41","ModelLightningSystemV41","ModelLightningBoltV41","ModelLightningNodeV41","ModelLightningDataV41","ModelBoneConstraintLinkV41","ModelBoneConstraintV41","ModelSoftBodyDataV41","ModelFileDataV41","ModelTextureDataV40","ModelConstantDataV40","ModelMatConstLinkV40","ModelUVTransLinkV40","ModelMaterialDataV40","ModelMeshLodDataV40","ModelMeshMorphTargetV40","ModelMeshDataV40","ModelTransformDataV40","ModelBoneDataV40","ModelSkeletonDataV40","ModelMeshBindingDataV40","ModelTrackMaskV40","ModelModelDataV40","ModelPropertyDataV40","ModelParticleCloudV40","ModelParticleCurveV40","ModelParticleFlipbookV40","ModelParticleEmitterV40","ModelCloudDataV40","ModelObstacleDataV40","ModelStreakV40","ModelStreakAnchorV40","ModelStreakDataV40","ModelEffectLightV40","ModelLightDataV40","ModelClothBoneWeightV40","ModelClothMeshGroupV40","ModelClothConstraintV40","ModelClothObstacleV40","ModelClothDataV40","ModelLightningSystemV40","ModelLightningBoltV40","ModelLightningNodeV40","ModelLightningDataV40","ModelBoneConstraintLinkV40","ModelBoneConstraintV40","ModelFileDataV40","ModelTextureDataV39","ModelConstantDataV39","ModelMatConstLinkV39","ModelUVTransLinkV39","ModelMaterialDataV39","ModelMeshLodDataV39","ModelMeshMorphTargetV39","ModelMeshDataV39","ModelTransformDataV39","ModelBoneDataV39","ModelSkeletonDataV39","ModelMeshBindingDataV39","ModelTrackMaskV39","ModelModelDataV39","ModelPropertyDataV39","ModelParticleCloudV39","ModelParticleCurveV39","ModelParticleFlipbookV39","ModelParticleEmitterV39","ModelCloudDataV39","ModelObstacleDataV39","ModelStreakV39","ModelStreakAnchorV39","ModelStreakDataV39","ModelEffectLightV39","ModelLightDataV39","ModelClothBoneWeightV39","ModelClothMeshGroupV39","ModelClothConstraintV39","ModelClothObstacleV39","ModelClothDataV39","ModelLightningSystemV39","ModelLightningBoltV39","ModelLightningNodeV39","ModelLightningDataV39","ModelBoneConstraintLinkV39","ModelBoneConstraintV39","ModelFileDataV39","ModelTextureDataV38","ModelConstantDataV38","ModelMatConstLinkV38","ModelUVTransLinkV38","ModelMaterialDataV38","ModelMeshLodDataV38","ModelMeshMorphTargetV38","ModelMeshDataV38","ModelTransformDataV38","ModelBoneDataV38","ModelSkeletonDataV38","ModelMeshBindingDataV38","ModelTrackMaskV38","ModelModelDataV38","ModelPropertyDataV38","ModelParticleCloudV38","ModelParticleCurveV38","ModelParticleFlipbookV38","ModelParticleEmitterV38","ModelCloudDataV38","ModelObstacleDataV38","ModelStreakV38","ModelStreakAnchorV38","ModelStreakDataV38","ModelEffectLightV38","ModelLightDataV38","ModelClothBoneWeightV38","ModelClothMeshGroupV38","ModelClothConstraintV38","ModelClothObstacleV38","ModelClothDataV38","ModelLightningSystemV38","ModelLightningBoltV38","ModelLightningNodeV38","ModelLightningDataV38","ModelBoneConstraintLinkV38","ModelBoneConstraintV38","ModelFileDataV38","ModelTextureDataV37","ModelConstantDataV37","ModelMatConstLinkV37","ModelUVTransLinkV37","ModelMaterialDataV37","ModelMeshLodDataV37","ModelMeshMorphTargetV37","ModelMeshDataV37","ModelTransformDataV37","ModelBoneDataV37","ModelSkeletonDataV37","ModelMeshBindingDataV37","ModelTrackMaskV37","ModelModelDataV37","ModelPropertyDataV37","ModelParticleCloudV37","ModelParticleCurveV37","ModelParticleFlipbookV37","ModelParticleEmitterV37","ModelCloudDataV37","ModelObstacleDataV37","ModelStreakV37","ModelStreakAnchorV37","ModelStreakDataV37","ModelEffectLightV37","ModelLightDataV37","ModelClothBoneWeightV37","ModelClothMeshGroupV37","ModelClothConstraintV37","ModelClothObstacleV37","ModelClothDataV37","ModelLightningSystemV37","ModelLightningBoltV37","ModelLightningNodeV37","ModelLightningDataV37","ModelBoneConstraintLinkV37","ModelBoneConstraintV37","ModelFileDataV37","ModelTextureDataV36","ModelConstantDataV36","ModelMatConstLinkV36","ModelUVTransLinkV36","ModelMaterialDataV36","ModelMeshLodDataV36","ModelMeshMorphTargetV36","ModelMeshDataV36","ModelTransformDataV36","ModelBoneDataV36","ModelSkeletonDataV36","ModelMeshBindingDataV36","ModelTrackMaskV36","ModelModelDataV36","ModelPropertyDataV36","ModelParticleCloudV36","ModelParticleCurveV36","ModelParticleFlipbookV36","ModelParticleEmitterV36","ModelCloudDataV36","ModelObstacleDataV36","ModelStreakV36","ModelStreakAnchorV36","ModelStreakDataV36","ModelEffectLightV36","ModelLightDataV36","ModelClothBoneWeightV36","ModelClothMeshGroupV36","ModelClothConstraintV36","ModelClothObstacleV36","ModelClothDataV36","ModelLightningSystemV36","ModelLightningBoltV36","ModelLightningNodeV36","ModelLightningDataV36","ModelBoneConstraintLinkV36","ModelBoneConstraintV36","ModelFileDataV36","ModelTextureDataV35","ModelConstantDataV35","ModelMatConstLinkV35","ModelUVTransLinkV35","ModelMaterialDataV35","ModelMeshLodDataV35","ModelMeshMorphTargetV35","ModelMeshDataV35","ModelTransformDataV35","ModelBoneDataV35","ModelSkeletonDataV35","ModelMeshBindingDataV35","ModelTrackMaskV35","ModelModelDataV35","ModelPropertyDataV35","ModelParticleCloudV35","ModelParticleCurveV35","ModelParticleFlipbookV35","ModelParticleEmitterV35","ModelCloudDataV35","ModelObstacleDataV35","ModelStreakV35","ModelStreakAnchorV35","ModelStreakDataV35","ModelEffectLightV35","ModelLightDataV35","ModelClothBoneWeightV35","ModelClothMeshGroupV35","ModelClothConstraintV35","ModelClothObstacleV35","ModelClothDataV35","ModelLightningSystemV35","ModelLightningBoltV35","ModelLightningNodeV35","ModelLightningDataV35","ModelBoneConstraintV35","ModelFileDataV35","ModelTextureDataV34","ModelConstantDataV34","ModelMatConstLinkV34","ModelUVTransLinkV34","ModelMaterialDataV34","ModelMeshLodDataV34","ModelMeshMorphTargetV34","ModelMeshDataV34","ModelTransformDataV34","ModelBoneDataV34","ModelSkeletonDataV34","ModelMeshBindingDataV34","ModelTrackMaskV34","ModelModelDataV34","ModelPropertyDataV34","ModelParticleCloudV34","ModelParticleCurveV34","ModelParticleFlipbookV34","ModelParticleEmitterV34","ModelCloudDataV34","ModelObstacleDataV34","ModelStreakV34","ModelStreakAnchorV34","ModelStreakDataV34","ModelEffectLightV34","ModelLightDataV34","ModelClothBoneWeightV34","ModelClothMeshGroupV34","ModelClothConstraintV34","ModelClothObstacleV34","ModelClothDataV34","ModelLightningSystemV34","ModelLightningBoltV34","ModelLightningNodeV34","ModelLightningDataV34","ModelBoneConstraintV34","ModelFileDataV34","ModelTextureDataV33","ModelConstantDataV33","ModelMatConstLinkV33","ModelUVTransLinkV33","ModelMaterialDataV33","ModelMeshLodDataV33","ModelMeshMorphTargetV33","ModelMeshDataV33","ModelTransformDataV33","ModelBoneDataV33","ModelSkeletonDataV33","ModelMeshBindingDataV33","ModelTrackMaskV33","ModelModelDataV33","ModelPropertyDataV33","ModelParticleCloudV33","ModelParticleCurveV33","ModelParticleFlipbookV33","ModelParticleEmitterV33","ModelCloudDataV33","ModelObstacleDataV33","ModelStreakV33","ModelStreakAnchorV33","ModelStreakDataV33","ModelEffectLightV33","ModelLightDataV33","ModelClothBoneWeightV33","ModelClothMeshGroupV33","ModelClothConstraintV33","ModelClothObstacleV33","ModelClothDataV33","ModelLightningSystemV33","ModelLightningBoltV33","ModelLightningNodeV33","ModelLightningDataV33","ModelBoneConstraintV33","ModelFileDataV33","ModelTextureDataV32","ModelConstantDataV32","ModelMatConstLinkV32","ModelUVTransLinkV32","ModelMaterialDataV32","ModelMeshLodDataV32","ModelMeshMorphTargetV32","ModelMeshDataV32","ModelTransformDataV32","ModelBoneDataV32","ModelSkeletonDataV32","ModelMeshBindingDataV32","ModelTrackMaskV32","ModelModelDataV32","ModelPropertyDataV32","ModelParticleCloudV32","ModelParticleCurveV32","ModelParticleFlipbookV32","ModelParticleEmitterV32","ModelCloudDataV32","ModelObstacleDataV32","ModelStreakV32","ModelStreakAnchorV32","ModelStreakDataV32","ModelEffectLightV32","ModelLightDataV32","ModelClothBoneWeightV32","ModelClothMeshGroupV32","ModelClothConstraintV32","ModelClothObstacleV32","ModelClothDataV32","ModelLightningSystemV32","ModelLightningBoltV32","ModelLightningNodeV32","ModelLightningDataV32","ModelFileDataV32","ModelTextureDataV31","ModelConstantDataV31","ModelMatConstLinkV31","ModelUVTransLinkV31","ModelMaterialDataV31","ModelMeshLodDataV31","ModelMeshMorphTargetV31","ModelMeshDataV31","ModelTransformDataV31","ModelBoneDataV31","ModelSkeletonDataV31","ModelMeshBindingDataV31","ModelTrackMaskV31","ModelModelDataV31","ModelPropertyDataV31","ModelParticleCloudV31","ModelParticleCurveV31","ModelParticleFlipbookV31","ModelParticleEmitterV31","ModelCloudDataV31","ModelObstacleDataV31","ModelStreakV31","ModelStreakAnchorV31","ModelStreakDataV31","ModelEffectLightV31","ModelLightDataV31","ModelClothBoneWeightV31","ModelClothMeshGroupV31","ModelClothConstraintV31","ModelClothObstacleV31","ModelClothDataV31","ModelFileDataV31","ModelTextureDataV30","ModelConstantDataV30","ModelMatConstLinkV30","ModelUVTransLinkV30","ModelMaterialDataV30","ModelMeshLodDataV30","ModelMeshMorphTargetV30","ModelMeshDataV30","ModelTransformDataV30","ModelBoneDataV30","ModelSkeletonDataV30","ModelMeshBindingDataV30","ModelTrackMaskV30","ModelModelDataV30","ModelPropertyDataV30","ModelParticleCloudV30","ModelParticleCurveV30","ModelParticleFlipbookV30","ModelParticleEmitterV30","ModelCloudDataV30","ModelObstacleDataV30","ModelStreakV30","ModelStreakAnchorV30","ModelStreakDataV30","ModelEffectLightV30","ModelLightDataV30","ModelClothBoneWeightV30","ModelClothMeshGroupV30","ModelClothConstraintV30","ModelClothObstacleV30","ModelClothDataV30","ModelFileDataV30","ModelTextureDataV29","ModelConstantDataV29","ModelMatConstLinkV29","ModelUVTransLinkV29","ModelMaterialDataV29","ModelMeshLodDataV29","ModelMeshMorphTargetV29","ModelMeshDataV29","ModelTransformDataV29","ModelBoneDataV29","ModelSkeletonDataV29","ModelMeshBindingDataV29","ModelTrackMaskV29","ModelModelDataV29","ModelPropertyDataV29","ModelParticleCloudV29","ModelParticleCurveV29","ModelParticleFlipbookV29","ModelParticleEmitterV29","ModelCloudDataV29","ModelObstacleDataV29","ModelStreakV29","ModelStreakAnchorV29","ModelStreakDataV29","ModelEffectLightV29","ModelLightDataV29","ModelClothBoneWeightV29","ModelClothMeshGroupV29","ModelClothConstraintV29","ModelClothObstacleV29","ModelClothDataV29","ModelFileDataV29","ModelTextureDataV28","ModelConstantDataV28","ModelMaterialDataV28","ModelMeshLodDataV28","ModelMeshMorphTargetV28","ModelMeshDataV28","ModelTransformDataV28","ModelBoneDataV28","ModelSkeletonDataV28","ModelMeshBindingDataV28","ModelTrackMaskV28","ModelModelDataV28","ModelPropertyDataV28","ModelParticleCloudV28","ModelParticleCurveV28","ModelParticleFlipbookV28","ModelParticleEmitterV28","ModelCloudDataV28","ModelObstacleDataV28","ModelStreakV28","ModelStreakAnchorV28","ModelStreakDataV28","ModelEffectLightV28","ModelLightDataV28","ModelClothBoneWeightV28","ModelClothMeshGroupV28","ModelClothConstraintV28","ModelClothDataV28","ModelFileDataV28","ModelTextureDataV27","ModelConstantDataV27","ModelMaterialDataV27","ModelMeshLodDataV27","ModelMeshMorphTargetV27","ModelMeshDataV27","ModelTransformDataV27","ModelBoneDataV27","ModelSkeletonDataV27","ModelMeshBindingDataV27","ModelTrackMaskV27","ModelModelDataV27","ModelPropertyDataV27","ModelParticleCloudV27","ModelParticleCurveV27","ModelParticleFlipbookV27","ModelParticleEmitterV27","ModelCloudDataV27","ModelObstacleDataV27","ModelStreakV27","ModelStreakAnchorV27","ModelStreakDataV27","ModelEffectLightV27","ModelLightDataV27","ModelClothBoneWeightV27","ModelClothMeshGroupV27","ModelClothConstraintV27","ModelClothDataV27","ModelFileDataV27","ModelTextureDataV26","ModelConstantDataV26","ModelMaterialDataV26","ModelMeshLodDataV26","ModelMeshMorphTargetV26","ModelMeshDataV26","ModelTransformDataV26","ModelBoneDataV26","ModelSkeletonDataV26","ModelMeshBindingDataV26","ModelTrackMaskV26","ModelModelDataV26","ModelPropertyDataV26","ModelParticleCloudV26","ModelParticleCurveV26","ModelParticleFlipbookV26","ModelParticleEmitterV26","ModelCloudDataV26","ModelObstacleDataV26","ModelStreakV26","ModelStreakAnchorV26","ModelStreakDataV26","ModelEffectLightV26","ModelLightDataV26","ModelClothBoneWeightV26","ModelClothMeshGroupV26","ModelClothConstraintV26","ModelClothDataV26","ModelFileDataV26","ModelTextureDataV25","ModelConstantDataV25","ModelMaterialDataV25","ModelMeshLodDataV25","ModelMeshMorphTargetV25","ModelMeshDataV25","ModelTransformDataV25","ModelBoneDataV25","ModelSkeletonDataV25","ModelMeshBindingDataV25","ModelTrackMaskV25","ModelModelDataV25","ModelFloatPropertyDataV25","ModelPropertyDataV25","ModelParticleCloudV25","ModelParticleCurveV25","ModelParticleFlipbookV25","ModelParticleEmitterV25","ModelCloudDataV25","ModelObstacleDataV25","ModelStreakV25","ModelStreakAnchorV25","ModelStreakDataV25","ModelEffectLightV25","ModelLightDataV25","ModelClothBoneWeightV25","ModelClothMeshGroupV25","ModelClothConstraintV25","ModelClothDataV25","ModelFileDataV25","ModelTextureDataV24","ModelConstantDataV24","ModelMaterialDataV24","ModelMeshLodDataV24","ModelMeshMorphTargetV24","ModelMeshDataV24","ModelTransformDataV24","ModelBoneDataV24","ModelSkeletonDataV24","ModelMeshBindingDataV24","ModelTrackMaskV24","ModelModelDataV24","ModelFloatPropertyDataV24","ModelPropertyDataV24","ModelParticleCloudV24","ModelParticleCurveV24","ModelParticleFlipbookV24","ModelParticleEmitterV24","ModelCloudDataV24","ModelObstacleDataV24","ModelStreakV24","ModelStreakAnchorV24","ModelStreakDataV24","ModelEffectLightV24","ModelLightDataV24","ModelClothBoneWeightV24","ModelClothMeshGroupV24","ModelClothConstraintV24","ModelClothDataV24","ModelFileDataV24","ModelTextureDataV23","ModelConstantDataV23","ModelMaterialDataV23","ModelMeshLodDataV23","ModelMeshMorphTargetV23","ModelMeshDataV23","ModelTransformDataV23","ModelBoneDataV23","ModelSkeletonDataV23","ModelMeshBindingDataV23","ModelTrackMaskV23","ModelModelDataV23","ModelFloatPropertyDataV23","ModelPropertyDataV23","ModelParticleCloudV23","ModelParticleCurveV23","ModelParticleFlipbookV23","ModelParticleEmitterV23","ModelCloudDataV23","ModelObstacleDataV23","ModelStreakV23","ModelStreakAnchorV23","ModelStreakDataV23","ModelEffectLightV23","ModelLightDataV23","ModelClothBoneWeightV23","ModelClothMeshGroupV23","ModelClothConstraintV23","ModelClothDataV23","ModelFileDataV23","ModelTextureDataV22","ModelConstantDataV22","ModelMaterialDataV22","ModelMeshLodDataV22","ModelMeshMorphTargetV22","ModelMeshDataV22","ModelTransformDataV22","ModelBoneDataV22","ModelSkeletonDataV22","ModelMeshBindingDataV22","ModelTrackMaskV22","ModelModelDataV22","ModelFloatPropertyDataV22","ModelPropertyDataV22","ModelParticleCloudV22","ModelParticleCurveV22","ModelParticleFlipbookV22","ModelParticleEmitterV22","ModelParticleObstacleV22","ModelCloudDataV22","ModelStreakV22","ModelStreakAnchorV22","ModelStreakDataV22","ModelEffectLightV22","ModelLightDataV22","ModelClothBoneWeightV22","ModelClothMeshGroupV22","ModelClothConstraintV22","ModelClothDataV22","ModelFileDataV22","ModelTextureDataV21","ModelConstantDataV21","ModelMaterialDataV21","ModelMeshLodDataV21","ModelMeshMorphTargetV21","ModelMeshDataV21","ModelTransformDataV21","ModelBoneDataV21","ModelSkeletonDataV21","ModelMeshBindingDataV21","ModelTrackMaskV21","ModelModelDataV21","ModelFloatPropertyDataV21","ModelPropertyDataV21","ModelParticleCloudV21","ModelParticleCurveV21","ModelParticleFlipbookV21","ModelParticleEmitterV21","ModelParticleObstacleV21","ModelCloudDataV21","ModelStreakV21","ModelStreakAnchorV21","ModelStreakDataV21","ModelEffectLightV21","ModelLightDataV21","ModelClothBoneWeightV21","ModelClothMeshGroupV21","ModelClothConstraintV21","ModelClothDataV21","ModelFileDataV21","ModelTextureDataV20","ModelConstantDataV20","ModelMaterialDataV20","ModelMeshLodDataV20","ModelMeshMorphTargetV20","ModelMeshDataV20","ModelTransformDataV20","ModelBoneDataV20","ModelSkeletonDataV20","ModelMeshBindingDataV20","ModelTrackMaskV20","ModelModelDataV20","ModelFloatPropertyDataV20","ModelPropertyDataV20","ModelParticleCloudV20","ModelParticleCurveV20","ModelParticleFlipbookV20","ModelParticleEmitterV20","ModelParticleObstacleV20","ModelCloudDataV20","ModelStreakV20","ModelStreakAnchorV20","ModelStreakDataV20","ModelEffectLightV20","ModelLightDataV20","ModelClothBoneWeightV20","ModelClothMeshGroupV20","ModelClothConstraintV20","ModelClothDataV20","ModelFileDataV20","ModelTextureDataV19","ModelConstantDataV19","ModelMaterialDataV19","ModelMeshLodDataV19","ModelMeshMorphTargetV19","ModelMeshDataV19","ModelTransformDataV19","ModelBoneDataV19","ModelSkeletonDataV19","ModelMeshBindingDataV19","ModelTrackMaskV19","ModelModelDataV19","ModelFloatPropertyDataV19","ModelPropertyDataV19","ModelParticleCloudV19","ModelParticleCurveV19","ModelParticleFlipbookV19","ModelParticleEmitterV19","ModelParticleObstacleV19","ModelCloudDataV19","ModelStreakV19","ModelStreakAnchorV19","ModelStreakDataV19","ModelEffectLightV19","ModelLightDataV19","ModelClothBoneWeightV19","ModelClothMeshGroupV19","ModelClothConstraintV19","ModelClothDataV19","ModelFileDataV19","ModelTextureDataV18","ModelConstantDataV18","ModelMaterialDataV18","ModelMeshLodDataV18","ModelMeshMorphTargetV18","ModelMeshDataV18","ModelTransformDataV18","ModelBoneDataV18","ModelSkeletonDataV18","ModelMeshBindingDataV18","ModelTrackMaskV18","ModelModelDataV18","ModelFloatPropertyDataV18","ModelPropertyDataV18","ModelParticleCloudV18","ModelParticleCurveV18","ModelParticleFlipbookV18","ModelParticleEmitterV18","ModelParticleObstacleV18","ModelCloudDataV18","ModelStreakV18","ModelStreakAnchorV18","ModelStreakDataV18","ModelEffectLightV18","ModelLightDataV18","ModelFileDataV18","ModelTextureDataV17","ModelConstantDataV17","ModelMaterialDataV17","ModelMeshLodDataV17","ModelMeshMorphTargetV17","ModelMeshDataV17","ModelTransformDataV17","ModelBoneDataV17","ModelSkeletonDataV17","ModelMeshBindingDataV17","ModelModelDataV17","ModelFloatPropertyDataV17","ModelPropertyDataV17","ModelParticleCloudV17","ModelParticleCurveV17","ModelParticleFlipbookV17","ModelParticleEmitterV17","ModelParticleObstacleV17","ModelCloudDataV17","ModelStreakV17","ModelStreakAnchorV17","ModelStreakDataV17","ModelEffectLightV17","ModelLightDataV17","ModelFileDataV17","ModelTextureDataV16","ModelConstantDataV16","ModelMaterialDataV16","ModelMeshLodDataV16","ModelMeshDataV16","ModelTransformDataV16","ModelBoneDataV16","ModelSkeletonDataV16","ModelMeshBindingDataV16","ModelModelDataV16","ModelFloatPropertyDataV16","ModelPropertyDataV16","ModelParticleCloudV16","ModelParticleCurveV16","ModelParticleFlipbookV16","ModelParticleEmitterV16","ModelParticleObstacleV16","ModelCloudDataV16","ModelStreakV16","ModelStreakAnchorV16","ModelStreakDataV16","ModelEffectLightV16","ModelLightDataV16","ModelFileDataV16","ModelTextureDataV15","ModelConstantDataV15","ModelMaterialDataV15","ModelMeshLodDataV15","ModelMeshDataV15","ModelTransformDataV15","ModelBoneDataV15","ModelSkeletonDataV15","ModelMeshBindingDataV15","ModelModelDataV15","ModelFloatPropertyDataV15","ModelPropertyDataV15","ModelParticleCloudV15","ModelParticleCurveV15","ModelParticleFlipbookV15","ModelParticleEmitterV15","ModelParticleObstacleV15","ModelCloudDataV15","ModelStreakV15","ModelStreakAnchorV15","ModelStreakDataV15","ModelEffectLightV15","ModelLightDataV15","ModelFileDataV15","ModelTextureDataV14","ModelConstantDataV14","ModelMaterialDataV14","ModelMeshDataV14","ModelTransformDataV14","ModelBoneDataV14","ModelSkeletonDataV14","ModelMeshBindingDataV14","ModelModelDataV14","ModelFloatPropertyDataV14","ModelPropertyDataV14","ModelParticleCloudV14","ModelParticleCurveV14","ModelParticleFlipbookV14","ModelParticleEmitterV14","ModelParticleObstacleV14","ModelCloudDataV14","ModelStreakV14","ModelStreakAnchorV14","ModelStreakDataV14","ModelFileDataV14","ModelTextureDataV13","ModelConstantDataV13","ModelMaterialDataV13","ModelMeshDataV13","ModelTransformDataV13","ModelBoneDataV13","ModelSkeletonDataV13","ModelMeshBindingDataV13","ModelModelDataV13","ModelFloatPropertyDataV13","ModelPropertyDataV13","ModelParticleCloudV13","ModelParticleCurveV13","ModelParticleFlipbookV13","ModelParticleEmitterV13","ModelParticleObstacleV13","ModelCloudDataV13","ModelStreakV13","ModelStreakAnchorV13","ModelStreakDataV13","ModelFileDataV13","ModelTextureDataV12","ModelConstantDataV12","ModelMaterialDataV12","ModelMeshDataV12","ModelTransformDataV12","ModelBoneDataV12","ModelSkeletonDataV12","ModelMeshBindingDataV12","ModelModelDataV12","ModelFloatPropertyDataV12","ModelPropertyDataV12","ModelParticleCloudV12","ModelParticleCurveV12","ModelParticleFlipbookV12","ModelParticleEmitterV12","ModelParticleObstacleV12","ModelCloudDataV12","ModelStreakV12","ModelStreakAnchorV12","ModelStreakDataV12","ModelFileDataV12","ModelTextureDataV11","ModelConstantDataV11","ModelMaterialDataV11","ModelMeshDataV11","ModelTransformDataV11","ModelBoneDataV11","ModelSkeletonDataV11","ModelMeshBindingDataV11","ModelModelDataV11","ModelFloatPropertyDataV11","ModelPropertyDataV11","ModelParticleCloudV11","ModelParticleCurveV11","ModelParticleFlipbookV11","ModelParticleEmitterV11","ModelParticleObstacleV11","ModelCloudDataV11","ModelStreakV11","ModelStreakAnchorV11","ModelStreakDataV11","ModelFileDataV11","ModelTextureDataV10","ModelConstantDataV10","ModelMaterialDataV10","ModelMeshDataV10","ModelTransformDataV10","ModelBoneDataV10","ModelSkeletonDataV10","ModelMeshBindingDataV10","ModelModelDataV10","ModelFloatPropertyDataV10","ModelPropertyDataV10","ModelParticleFlipbookV10","ModelParticleCloudV10","ModelParticleEmitterV10","ModelParticleObstacleV10","ModelCloudDataV10","ModelStreakV10","ModelStreakAnchorV10","ModelStreakDataV10","ModelFileDataV10","ModelTextureDataV9","ModelConstantDataV9","ModelMaterialDataV9","ModelMeshDataV9","ModelTransformDataV9","ModelBoneDataV9","ModelSkeletonDataV9","ModelMeshBindingDataV9","ModelModelDataV9","ModelFloatPropertyDataV9","ModelPropertyDataV9","ModelParticleFlipbookV9","ModelParticleCloudV9","ModelParticleEmitterV9","ModelParticleObstacleV9","ModelCloudDataV9","ModelFileDataV9","ModelTextureDataV8","ModelConstantDataV8","ModelMaterialDataV8","ModelMeshDataV8","ModelTransformDataV8","ModelBoneDataV8","ModelSkeletonDataV8","ModelMeshBindingDataV8","ModelModelDataV8","ModelFloatPropertyDataV8","ModelPropertyDataV8","ModelParticleFlipbookV8","ModelParticleCloudV8","ModelParticleEmitterV8","ModelParticleObstacleV8","ModelCloudDataV8","ModelFileDataV8","ModelTextureDataV7","ModelConstantDataV7","ModelMaterialDataV7","ModelMeshDataV7","ModelVisTrackDataV7","ModelAnimationDataV7","ModelAnimationImportDataV7","ModelTransformDataV7","ModelBoneDataV7","ModelSkeletonDataV7","ModelMeshBindingDataV7","ModelModelDataV7","ModelFloatPropertyDataV7","ModelPropertyDataV7","ModelCollisionMeshV7","ModelCollisionCloudV7","ModelCollisionCubeV7","ModelCollisionSphereV7","ModelCollisionSurfaceV7","ModelCollisionDataV7","ModelParticleFlipbookV7","ModelParticleCloudV7","ModelParticleEmitterV7","ModelParticleObstacleV7","ModelCloudDataV7","ModelFileDataV7","ModelTextureDataV6","ModelConstantDataV6","ModelMaterialDataV6","ModelMeshDataV6","ModelVisTrackDataV6","ModelAnimationDataV6","ModelAnimationImportDataV6","ModelTransformDataV6","ModelBoneDataV6","ModelSkeletonDataV6","ModelMeshBindingDataV6","ModelModelDataV6","ModelFloatPropertyDataV6","ModelPropertyDataV6","ModelCollisionMeshV6","ModelCollisionCloudV6","ModelCollisionCubeV6","ModelCollisionSphereV6","ModelCollisionSurfaceV6","ModelCollisionDataV6","ModelParticleFlipbookV6","ModelParticleCloudV6","ModelParticleEmitterV6","ModelParticleObstacleV6","ModelCloudDataV6","ModelFileDataV6","ModelTextureDataV5","ModelConstantDataV5","ModelMaterialDataV5","ModelMeshDataV5","ModelVisTrackDataV5","ModelAnimationDataV5","ModelTransformDataV5","ModelBoneDataV5","ModelSkeletonDataV5","ModelMeshBindingDataV5","ModelModelDataV5","ModelFloatPropertyDataV5","ModelPropertyDataV5","ModelCollisionMeshV5","ModelCollisionCloudV5","ModelCollisionCubeV5","ModelCollisionSphereV5","ModelCollisionSurfaceV5","ModelCollisionDataV5","ModelParticleFlipbookV5","ModelParticleCloudV5","ModelParticleEmitterV5","ModelParticleObstacleV5","ModelCloudDataV5","ModelFileDataV5","ModelTextureDataV4","ModelConstantDataV4","ModelMaterialDataV4","ModelMeshDataV4","ModelVisTrackDataV4","ModelAnimationDataV4","ModelTransformDataV4","ModelBoneDataV4","ModelSkeletonDataV4","ModelMeshBindingDataV4","ModelModelDataV4","ModelFloatPropertyDataV4","ModelPropertyDataV4","ModelCollisionMeshV4","ModelCollisionCloudV4","ModelCollisionCubeV4","ModelCollisionSphereV4","ModelCollisionSurfaceV4","ModelCollisionDataV4","ModelParticleFlipbookV4","ModelParticleCloudV4","ModelParticleEmitterV4","ModelParticleObstacleV4","ModelCloudDataV4","ModelFileDataV4","ModelTextureDataV3","ModelConstantDataV3","ModelMaterialDataV3","ModelMeshDataV3","ModelAnimationDataV3","ModelTransformDataV3","ModelBoneDataV3","ModelSkeletonDataV3","ModelMeshBindingDataV3","ModelModelDataV3","ModelFloatPropertyDataV3","ModelPropertyDataV3","ModelCollisionMeshV3","ModelCollisionCloudV3","ModelCollisionCubeV3","ModelCollisionSphereV3","ModelCollisionSurfaceV3","ModelCollisionDataV3","ModelParticleFlipbookV3","ModelParticleCloudV3","ModelParticleEmitterV3","ModelParticleObstacleV3","ModelCloudDataV3","ModelFileDataV3","ModelTextureDataV2","ModelConstantDataV2","ModelMaterialDataV2","ModelMeshDataV2","ModelAnimationDataV2","ModelTransformDataV2","ModelBoneDataV2","ModelSkeletonDataV2","ModelMeshBindingDataV2","ModelModelDataV2","ModelFloatPropertyDataV2","ModelPropertyDataV2","ModelCollisionMeshV2","ModelCollisionCloudV2","ModelCollisionSurfaceV2","ModelCollisionDataV2","ModelParticleFlipbookV2","ModelParticleCloudV2","ModelParticleEmitterV2","ModelParticleObstacleV2","ModelCloudDataV2","ModelFileDataV2","ModelTextureDataV1","ModelConstantDataV1","ModelMaterialDataV1","ModelMeshDataV1","ModelAnimationDataV1","ModelTransformDataV1","ModelBoneDataV1","ModelSkeletonDataV1","ModelMeshBindingDataV1","ModelModelDataV1","ModelFloatPropertyDataV1","ModelPropertyDataV1","ModelChunkCollisionMeshV1","ModelChunkCollisionCloudV1","ModelChunkCollisionSurfaceV1","ModelChunkCollisionDataV1","ModelFileDataV1","ModelTextureDataV0","ModelConstantDataV0","ModelMaterialDataV0","ModelMeshDataV0","ModelAnimationDataV0","ModelTransformDataV0","ModelBoneDataV0","ModelSkeletonDataV0","ModelMeshBindingDataV0","ModelModelDataV0","ModelFloatPropertyDataV0","ModelPropertyDataV0","ModelFileDataV0","AmatAppleShaderConstant","AmatAppleShader","AmatAppleRenderState","AmatApplePass","AmatAppleEffect","AmatAppleSamplerState","AmatAppleMaterial","PackMapInterestPoint","MapMission","PackMapNavMeshChunkV3","PackMapNavMeshMoverV3","PackMapNavMeshV3","PackMapNavMeshChunkV2","PackMapNavMeshMoverV2","PackMapNavMeshV2","PackMapNavMeshChunkV1","PackMapNavMeshV1","PackMapNavMeshChunkV0","PackMapNavMeshV0","PackMapNavMeshChunkExternalV3","PackMapNavMeshExternalV3","PackMapNavMeshChunkExternalV2","PackMapNavMeshExternalV2","PackMapNavMeshChunkExternalV1","PackMapNavMeshExternalV1","PackMapNavMeshChunkExternalV0","PackMapNavMeshExternalV0","PackMapEditCollision","MapObstacles","MapOcclusion","MapOcclusions","MapOcclusionTome","MapVariant","MapPackage","MapParam","PagedImageLayerDataV0","PagedImagePageDataV0","PagedImageTableDataV0","PackMapPhysicsMeshV10","PackMapPhysicsObjectV10","PackMapPhysicsObjectRefV10","PackMapPhysicsGeometryV10","PackMapPhysicsModelPropV10","PackMapPhysicsModelZoneV8","PackMapPhysicsModelObstacleV10","PackMapPhysicsBlockV10","PackMapPhysicsV10","PackMapPhysicsMeshV9","PackMapPhysicsObjectV9","PackMapPhysicsObjectRefV9","PackMapPhysicsGeometryV9","PackMapPhysicsModelPropV9","PackMapPhysicsModelZoneV7","PackMapPhysicsModelObstacleV9","PackMapPhysicsBlockV9","PackMapPhysicsV9","PackMapPhysicsMeshV8","SceneBoxShapeV7","SceneSphereShapeV7","SceneCapsuleShapeV7","SceneMeshShapeV7","SceneFilePhysicsV7","PackMapPhysicsObjectV8","PackMapPhysicsObjectRefV8","PackMapPhysicsGeometryV8","PackMapPhysicsModelPropV8","PackMapPhysicsModelZoneV6","PackMapPhysicsModelObstacleV8","PackMapPhysicsBlockV8","PackMapPhysicsV8","PackMapPhysicsMeshV7","PackMapPhysicsObjectV7","PackMapPhysicsObjectRefV7","PackMapPhysicsGeometryV7","PackMapPhysicsModelPropV7","PackMapPhysicsModelZoneV5","PackMapPhysicsModelObstacleV7","PackMapPhysicsBlockV7","PackMapPhysicsV7","PackMapPhysicsMeshV6","PackMapPhysicsObjectV6","PackMapPhysicsObjectRefV6","PackMapPhysicsGeometryV6","PackMapPhysicsModelPropV6","PackMapPhysicsModelZoneV4","PackMapPhysicsModelObstacleV6","PackMapPhysicsV6","PackMapPhysicsMeshV5","PackMapPhysicsObjectV5","PackMapPhysicsObjectRefV5","PackMapPhysicsGeometryV5","PackMapPhysicsModelPropV5","PackMapPhysicsModelZoneV3","PackMapPhysicsModelObstacleV5","PackMapPhysicsV5","PackMapPhysicsMeshV4","PackMapPhysicsObjectV4","PackMapPhysicsObjectRefV4","PackMapPhysicsGeometryV4","PackMapPhysicsModelPropV4","PackMapPhysicsModelZoneV2","PackMapPhysicsModelObstacleV4","PackMapPhysicsV4","PackMapPhysicsMeshV3","PackMapPhysicsShapeDataV3","PackMapPhysicsGeometryV3","PackMapPhysicsModelPropV3","PackMapPhysicsModelZoneV1","PackMapPhysicsV3","PackMapPhysicsShapeDataV2","PackMapPhysicsGeometryV2","PackMapPhysicsModelPropV2","PackMapPhysicsModelZoneV0","PackMapPhysicsV2","PackMapPhysicsShapeDataV1","PackMapPhysicsGeometryV1","PackMapPhysicsModelPropV1","PackMapPhysicsV1","SceneBoxShapeV8","SceneSphereShapeV8","SceneCapsuleShapeV8","SceneMeshShapeV8","SceneSurfaceV8","SceneFilePhysicsV8","SceneShapeSurfaceV6","SceneBoxShapeV6","SceneSphereShapeV6","SceneCapsuleShapeV6","SceneMeshShapeV6","SceneCollisionShapeV6","SceneTriggerShapeV6","SceneNamedShapeV6","SceneFilePhysicsV6","SceneShapeSurfaceV5","SceneBoxShapeV5","SceneSphereShapeV5","SceneMeshShapeV5","SceneCollisionShapeV5","SceneTriggerShapeV5","SceneNamedShapeV5","SceneFilePhysicsV5","SceneShapeV4","SceneShapeSurfaceV4","SceneCollisionShapeV4","SceneTriggerShapeV4","SceneNamedShapeV4","SceneFilePhysicsV4","SceneShapeV3","SceneShapeSurfaceV3","SceneCollisionShapeV3","SceneTriggerShapeV3","SceneNamedShapeV3","ScenePathPhysicsV3","SceneFilePhysicsV3","SceneShapeV2","SceneCollisionShapeV2","SceneQueryShapeV2","SceneNamedShapeV2","ScenePathPhysicsV2","SceneFilePhysicsV2","SceneShapeV1","SceneCollisionShapeV1","SceneNamedShapeV1","ScenePathPhysicsV1","SceneFilePhysicsV1","SceneShapeV0","SceneCollisionShapeV0","SceneNamedShapeV0","SceneFilePhysicsV0","PackMapPhysicsNavMeshChunkV2","PackMapPhysicsNavMeshV2","PackMapPhysicsNavMeshChunkV1","PackMapPhysicsNavMeshV1","PackMapPhysicsNavMeshChunkV0","PackMapPhysicsNavMeshV0","AmatPs3ShaderConstant","AmatPs3SamplerConstant","AmatPs3FragmentShaderConfig","PackMapPropConstantV18","PackMapPropObjV21","PackMapPropObjAnimSeqV21","PackMapPropTransformV21","PackMapPropObjInstanceV21","PackMapPropObjToolV21","PackMapPropObjMetaV21","PackMapPropObjVolumeV21","PackMapPropV21","PackMapPropConstantV17","PackMapPropObjV20","PackMapPropObjAnimSeqV20","PackMapPropTransformV20","PackMapPropObjInstanceV20","PackMapPropObjToolV20","PackMapPropObjMetaV20","PackMapPropObjVolumeV20","PackMapPropV20","PackMapPropObjV19","PackMapPropObjAnimSeqV19","PackMapPropTransformV19","PackMapPropObjInstanceV19","PackMapPropObjToolV19","PackMapPropObjMetaV19","PackMapPropObjVolumeV19","PackMapPropV19","PackMapPropObjV18","PackMapPropObjAnimSeqV18","PackMapPropTransformV18","PackMapPropObjInstanceV18","PackMapPropObjToolV18","PackMapPropObjMetaV18","PackMapPropObjVolumeV18","PackMapPropV18","PackMapPropObjV17","PackMapPropObjAnimSeqV17","PackMapPropTransformV17","PackMapPropObjInstanceV17","PackMapPropObjToolV17","PackMapPropObjMetaV17","PackMapPropObjVolumeV17","PackMapPropV17","PackMapPropObjV16","PackMapPropObjAnimSeqV16","PackMapPropTransformV16","PackMapPropObjInstanceV16","PackMapPropObjToolV16","PackMapPropObjMetaV16","PackMapPropObjVolumeV16","PackMapPropV16","PackMapPropObjV15","PackMapPropObjAnimSeqV15","PackMapPropTransformV15","PackMapPropObjInstanceV15","PackMapPropObjToolV15","PackMapPropObjMetaV15","PackMapPropObjVolumeV15","PackMapPropV15","PackMapPropObjV14","PackMapPropObjAnimSeqV14","PackMapPropObjToolV14","PackMapPropObjMetaV14","PackMapPropObjVolumeV14","PackMapPropV14","PackMapPropObjV13","PackMapPropObjAnimSeqV13","PackMapPropObjToolV13","PackMapPropObjMetaV13","PackMapPropObjVolumeV13","PackMapPropV13","PackMapPropObjV12","PackMapPropObjAnimSeqV12","PackMapPropObjToolV12","PackMapPropObjMetaV12","PackMapPropObjVolumeV12","PackMapPropV12","PackMapPropObjV11","PackMapPropObjAnimSeqV11","PackMapPropObjToolV11","PackMapPropV11","PackMapPropObjV10","PackMapPropObjAnimSeqV10","PackMapPropObjToolV10","PackMapPropV10","PackMapPropObjV9","PackMapPropObjAnimSeqV9","PackMapPropObjToolV9","PackMapPropV9","PackMapPropObjV8","PackMapPropObjAnimSeqV8","PackMapPropObjToolV8","PackMapPropV8","PackMapPropObjV7","PackMapPropObjAnimSeqV7","PackMapPropObjToolV7","PackMapPropV7","PackMapPropObjV6","PackMapPropObjAnimSeqV6","PackMapPropObjToolV6","PackMapPropV6","PackMapPropObjV5","PackMapPropObjAnimSeqV5","PackMapPropObjToolV5","PackMapPropV5","PackMapPropObjV4","PackMapPropObjAnimSeqV4","PackMapPropObjToolV4","PackMapPropV4","PackMapPropObjV3","PackMapPropObjAnimSeqV3","PackMapPropObjToolV3","PackMapPropV3","ModelFixedOffsetData","ModelPropertyData","ModelFileProperties","AmatPs3VertexShaderConfig","AmatPs3RenderState","AmatPs3Pass","AmatPs3Effect","AmatPs3Sampler","AmatPs3Material","PackMapResourceMapNodeItemV1","PackMapResourceMapNodeV1","PackMapResourceMapV1","PackMapResourceMapNodeItemV0","PackMapResourceMapNodeV0","PackMapResourceMapV0","PackMapRiverProperty","MapRiverReach","MapRiver","PackMapRivers","MapRiverTextureMap","MapRiverMaterial","ModelRootMotionV1","ModelFileRootMotionV1","ModelRootMotionV0","ModelFileRootMotionV0","PackAnimSequenceChargeStageV0","PackAnimSequenceStepActionV0","PackAnimSequenceStepMoveV0","PackAnimSequenceStepV0","PackAnimSequenceTriggerV0","PackAnimSequenceDataV0","PackAnimSequenceV0","PackAnimSequencesV0","PackMapShadowTileV1","PackMapShadowV1","PackMapShadowTileV0","PackMapShadowV0","PackMapShadowExtV1","MapShoreChain","MapShore","ModelTransformData","ModelBoneData","ModelGrannySkeletonV1","ModelMeshBindingData","ModelGrannyModelV1","ModelBoneConstraintLinkV63","ModelBoneConstraintV63","PackGrannyMirrorSpecType","ModelTrackMaskV63","ModelSkeletonDataV63","ModelSkeletonOverridesV1","ModelFileSkeletonV1","ModelGrannySkeletonV0","ModelGrannyModelV0","ModelBoneConstraintLinkV62","ModelBoneConstraintV62","ModelBoneSymmetryV62","ModelTrackMaskV62","ModelSkeletonDataV62","ModelFileSkeletonV0","SceneBoneV3","SceneJointV3","SceneHingeJointV3","SceneFileSkeletonV3","SceneBoneV2","SceneJointV2","SceneHingeJointV2","SceneFileSkeletonV2","SceneBoneV1","SceneJointV1","SceneHingeJointV1","SceneUnmappedBoneV1","SceneFileSkeletonV1","SceneBoneV0","SceneJointV0","SceneUnmappedBoneV0","SceneFileSkeletonV0","MapLegacy","MapSurfaceAttribute","MapSurfaceAttributeTool","MapSurfaceOverride","MapSurfaceTerrainOverride","MapSurfacePropOverride","MapSurfaces","MapSurfaceMeta","MapSurfaceChunk","KeyEntry","KeyTableData","PackMapToolFsFileV0","PackMapToolFsV0","AmatToolConstant","AmatToolTexture","AmatToolParams","AmatToolConstantV1","AmatToolTextureV1","AmatToolParamsV1","AmatToolConstantV0","AmatToolTextureV0","AmatToolParamsV0","ModelToolCloudV16","ModelToolBlitTextureV16","ModelToolStreakV16","ModelToolLightningV16","ModelToolAnimationV16","ModelSequenceCompressionInfoV16","ModelFileToolV16","ModelToolCloudV15","ModelToolBlitTextureV15","ModelToolStreakV15","ModelToolLightningV15","ModelToolAnimationV15","ModelSequenceCompressionInfoV15","ModelFileToolV15","ModelToolCloudV14","ModelToolBlitTextureV14","ModelToolStreakV14","ModelToolLightningV14","ModelToolAnimationV14","ModelSequenceCompressionInfoV14","ModelFileToolV14","ModelToolCloudV13","ModelToolBlitTextureV13","ModelToolStreakV13","ModelToolLightningV13","ModelToolAnimationV13","ModelFileToolV13","ModelToolCloudV12","ModelToolBlitTextureV12","ModelToolStreakV12","ModelToolLightningV12","ModelToolAnimationV12","ModelFileToolV12","ModelToolCloudV11","ModelToolBlitTextureV11","ModelToolStreakV11","ModelToolLightningV11","ModelFileToolV11","ModelToolCloudV10","ModelToolBlitTextureV10","ModelToolStreakV10","ModelToolLightningV10","ModelFileToolV10","ModelToolCloudV9","ModelToolBlitTextureV9","ModelToolStreakV9","ModelToolLightningV9","ModelToolPropertyDataV9","ModelFileToolV9","ModelToolCloudV8","ModelToolBlitTextureV8","ModelToolStreakV8","ModelToolLightningV8","ModelFileToolV8","ModelToolCloudV7","ModelToolBlitTextureV7","ModelToolStreakV7","ModelToolLightningV7","ModelFileToolV7","ModelToolCloudV6","ModelToolBlitTextureV6","ModelToolStreakV6","ModelFileToolV6","ModelToolCloudV5","ModelToolMotionV5","ModelToolBlitTextureV5","ModelToolStreakV5","ModelFileToolV5","ModelToolCloudV4","ModelToolMotionV4","ModelToolBlitTextureV4","ModelToolStreakV4","ModelFileToolV4","ModelToolCloudV3","ModelToolMotionV3","ModelToolBlitTextureV3","ModelFileToolV3","ModelToolCloudV2","ModelToolMotionV2","ModelToolBlitTextureV2","ModelFileToolV2","ModelToolCloudV1","ModelToolMotionV1","ModelFileToolV1","ModelToolCloudV0","ModelFileToolV0","PackMapTerrainChunkV14","PackMapTerrainConstV14","PackMapTerrainTexV14","PackMapTerrainMaterialV14","PackMapTerrainChunkUVDataV14","PackMapTerrrainChunkMaterialV14","PackMapTerrainMaterialsV14","PackMapTerrainV14","PackMapTerrainChunkV13","PackMapTerrainConstV13","PackMapTerrainTexV13","PackMapTerrainMaterialV13","PackMapTerrainChunkUVDataV13","PackMapTerrrainChunkMaterialV13","PackMapTerrainMaterialsV13","PackMapTerrainV13","PackMapTerrainChunkV12","PackMapTerrainConstV12","PackMapTerrainTexV12","PackMapTerrainMaterialV12","PackMapTerrainChunkUVDataV12","PackMapTerrrainChunkMaterialV12","PackMapTerrainMaterialsV12","PackMapTerrainV12","PackMapTerrainChunkV11","PackMapTerrainConstV11","PackMapTerrainTexV11","PackMapTerrainMaterialV11","PackMapTerrainChunkUVDataV11","PackMapTerrrainChunkMaterialV11","PackMapTerrainMaterialsV11","PackMapTerrainV11","PackMapTerrainChunkV10","PackMapTerrainConstV10","PackMapTerrainTexV10","PackMapTerrainMaterialV10","PackMapTerrainChunkUVDataV10","PackMapTerrrainChunkMaterialV10","PackMapTerrainMaterialsV10","PackMapTerrainV10","PagedImageEmbeddedPageDataV3","PagedImageEmbeddedPagesDataV3","MapTerrainImg","PagedImageEmbeddedPageDataV2","PagedImageEmbeddedPagesDataV2","PagedImageEmbeddedPageDataV1","PagedImageEmbeddedPagesDataV1","TextPackLanguage","TextPackManifest","TextPackPassword","TextPackPasswords","TextPackVoice","TextPackVoices","AmatAppleUPDBentry","AmatAppleUPDBinfo","AmatXbxUPDBentry","AmatXbxUPDBinfo","TextPackVariant","TextPackVariants","PackMapWaterV0","AmatXbxShaderConstant","AmatXbxSamplerConstant","AmatXbxShader","AmatXbxRenderState","AmatXbxPass","AmatXbxEffect","AmatXbxSamplerState","AmatXbxMaterial","PackMapZoneModelV22","PackMapZoneLayerDefV22","PackMapZonePageV10","PackMapZonePageTableV10","PackMapZoneDefV22","PackMapZoneEncodingDataV22","PackMapZoneCollideDataV22","PackMapZoneV22","PackMapZonesV22","PackMapZoneModelV21","PackMapZoneLayerDefV21","PackMapZonePageV9","PackMapZonePageTableV9","PackMapZoneDefV21","PackMapZoneEncodingDataV21","PackMapZoneCollideDataV21","PackMapZoneV21","PackMapZonesV21","PackMapZoneModelV20","PackMapZoneLayerDefV20","PackMapZonePageV8","PackMapZonePageTableV8","PackMapZoneDefV20","PackMapZoneEncodingDataV20","PackMapZoneCollideDataV20","PackMapZoneV20","PackMapZonesV20","PackMapZoneModelV19","PackMapZoneLayerDefV19","PackMapZonePageV7","PackMapZonePageTableV7","PackMapZoneDefV19","PackMapZoneEncodingDataV19","PackMapZoneCollideDataV19","PackMapZoneV19","PackMapZonesV19","PackMapZoneModelV18","PackMapZoneLayerDefV18","PackMapZonePageV6","PackMapZonePageTableV6","PackMapZoneDefV18","PackMapZoneEncodingDataV18","PackMapZoneCollideDataV18","PackMapZoneV18","PackMapZonesV18","PackMapZoneModelV17","PackMapZoneLayerDefV17","PackMapZonePageV5","PackMapZonePageTableV5","PackMapZoneDefV17","PackMapZoneEncodingDataV17","PackMapZoneCollideDataV17","PackMapZoneV17","PackMapZonesV17","PackMapZoneModelV16","PackMapZoneLayerDefV16","PackMapZonePageV4","PackMapZonePageTableV4","PackMapZoneDefV16","PackMapZoneEncodingDataV16","PackMapZoneCollideDataV16","PackMapZoneV16","PackMapZonesV16","PackMapZoneModelV15","PackMapZoneLayerDefV15","PackMapZonePageV3","PackMapZonePageTableV3","PackMapZoneDefV15","PackMapZoneEncodingDataV15","PackMapZoneCollideDataV15","PackMapZoneV15","PackMapZonesV15","PackMapZoneModelV14","PackMapZoneLayerDefV14","PackMapZonePageV2","PackMapZonePageTableV2","PackMapZoneDefV14","PackMapZoneEncodingDataV14","PackMapZoneCollideDataV14","PackMapZoneV14","PackMapZonesV14","PackMapZoneModelV13","PackMapZoneLayerDefV13","PackMapZoneDefV13","PackMapZoneEncodingDataV13","PackMapZoneCollideDataV13","PackMapZoneV13","PackMapZonesV13","PackMapZoneModelV12","PackMapZoneLayerDefV12","PackMapZoneDefV12","PackMapZoneEncodingDataV12","PackMapZoneCollideDataV12","PackMapZoneV12","PackMapZonesV12","DUPLICATE_SETTINGS","HEAD_STRUCT","PACKTOCHUNK","root","addr","setting","regex","RegExp","chunkDef","defsIdx","defs","getRootName","pop","match","PACKTOCHUNK_1","definition","genDuplicateSettings","headerLength","NaN","loadHead","getDefinition","useNthIndex","fileTypes","defsFound","chunkVersion","loadData","def","next","chunkDataSize","Chunk","noChunks","chunks","readHead","readChunks","ch","toLowerCase","getChunkStructs","progressCache","currentIndex","maxIndex","progressName","percent","consistentPercent","buildVS","numUv","vdefs","adefs","reads","generateDataTexture","DataTexture","RGBAFormat","buildPS","textures","alphaTest","lightMap","t1uv","uvIdx","discard","writeColor","varyings","getUVMat","numUV","attributes","vs","FrontSide","getTexture","texURL","sharedTextures","finalTexture","flipY","mapping","defaultColor","random","minFilter","LinearMipMapLinearFilter","magFilter","LinearFilter","generateMipmaps","needsUpdate","getMaterial","materialFile","finalMaterial","dxChunk","grChunk","finalTextures","techniques","textureToken_1","samplerTex_1","effect","passes","effects","samplerTextures","samplerIndex","samplerIdx","sampler","samplers","texTokens","textureIndex","uvPSInputIndex","ft_1","nt_1","MeshPhongMaterial","normalMap","textureFilename","shading","FlatShading","base32Max","pow","f16","h","s","Infinity","popcount","bits","arr","sort_unique","arr_in","comparator","hasOwnProperty","structDef","maxCount","struct","arr_len","arr_ptr","readType","ret_arr","orgPos","offsets","readInt32Array","pointer","ptr","stringOffset","num","fileRef","m_highPart","m_lowPart","matFiles","fvfFormat","Position","Weights","Group","Normal","Tangent","Bitangent","TangentFrame","UV32Mask","UV16Mask","Unknown1","Unknown2","Unknown3","Unknown4","PositionCompressed","Unknown5","renderGeomChunk","modelDataChunk","showUnmaterialed","rawMeshes","mats","permutations","rawMesh","rawGeom","fvf","numVerts","vertexCount","rawVerts","vertDS","distToUV","uv32Flag","uv16Flag","isUV32","hasUV","masked","readFloat32","Uint16Array","uvName","matIdx","materialIndex","finalMesh","materialFilename","materialName","numLods","lods","lodOverride","loadMeshFromModelFile","solidColor","finalMeshes","modelFile","modelDataChunk_1","geometryDataChunk_1","boundingSphere_1","bsc","center","radius","allMats_1","loadMaterialIndex","mIdx","matCallback","ds_1","yPos","dz","cz","plane","overdraw","sharedMeshes","getFilesUsedByModel","matFileName","filterFlags","meshMaterials","mergedGeometry","meshGeometry","fromBufferGeometry","InstancedMesh","matrixAutoUpdate"],"mappings":"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ACA,eACA,UACA,aACA,UACA,QACA,SACA,aACA,SACA,eACA,SACA,eACA,UAGFr1B,KAAK+1B,iBACH,OACAhB,EAAMM,iBACN,kBACAN,EAAMM,iBACN,iBACAN,EAAMM,iBACN,cACAN,EAAMQ,iBAAiBv1B,KAAK61B,oBAC5B,cACAd,EAAMQ,iBAAiBv1B,KAAK81B,wBAC5B,eACA,UACA,eACA,UACA,QACA,SACA,aACA,SACA,qBACA,QACA,WACA,SAGF91B,KAAKg2B,iBACH,OACAjB,EAAMM,iBACN,QACA,SACA,eACA,UACA,eACA,UACA,eACA,UACA,YACA,WAGFr1B,KAAKi2B,uBACH,OACAlB,EAAMM,iBACN,QACA,SACA,WACAN,EAAMI,eAAe,UAGvBn1B,KAAKk2B,iBACH,YACAnB,EAAMM,iBACN,WACAN,EAAMM,iBACN,SACA,UACA,SACA,UACA,WACAN,EAAMoB,oBACN,YACA,QACA,WACA,QACA,UACA,QACA,UACA,SAGFn2B,KAAKo2B,sBACH,WACArB,EAAMM,iBACN,OACAN,EAAMM,iBACN,oBACAN,EAAMM,iBACN,sBACAN,EAAMM,iBACN,WACAN,EAAMI,eAAen1B,KAAKk2B,iBAC1B,aACA,UACA,cACA,UACA,QACA,SACA,iBACAl2B,KAAK01B,aACL,kBACA11B,KAAK01B,aACL,gBACA11B,KAAK01B,aACL,SACA11B,KAAK41B,oBACL,kBACA,SAGF51B,KAAKq2B,iBACH,OACAtB,EAAMM,iBACN,aACAN,EAAMM,iBACN,aACA,WAGFr1B,KAAKs2B,eACH,OACAvB,EAAMM,iBACN,QACA,SACA,OACA,UACA,SACA,UACA,SACA,UACA,YACA,UACA,eACA,UACA,cACA,UACA,mBACA,UACA,SACA,UACA,cACA,UACA,cACA,UACA,cACA,UACA,YACA,UACA,UACA,UACA,YACA,UACA,iBACA,UACA,aACA,UACA,aACA,WAGFr1B,KAAKu2B,kBAAoB,OAAQxB,EAAMM,iBAAkB,WAAYN,EAAMoB,qBAE3En2B,KAAKw2B,iBACH,OACAzB,EAAMM,iBACN,cACA,UACA,eACA,UACA,QACA,SACA,OACAN,EAAMI,eAAen1B,KAAKo1B,oBAC1B,WACAL,EAAMI,eAAen1B,KAAK81B,wBAC1B,WACA,SAGF91B,KAAKy2B,sBAAwB,OAAQ1B,EAAMM,iBAAkB,mBAAoBN,EAAM2B,qBAEvF12B,KAAK22B,sBACH,kBACA5B,EAAMM,iBACN,cACAN,EAAMM,iBACN,gBACA,UACA,eACA,UACA,YACA,UACA,kBACA,UACA,aACA,UACA,cACA,UACA,gBACA,SACA,gBACA,SACA,OACAN,EAAMI,eAAen1B,KAAKs1B,aAC1B,WACAP,EAAMI,eAAen1B,KAAK+1B,iBAC1B,WACAhB,EAAMI,eAAen1B,KAAKg2B,iBAC1B,iBACAjB,EAAMI,eAAen1B,KAAKi2B,uBAC1B,gBACAlB,EAAMI,eAAen1B,KAAKo2B,sBAC1B,WACArB,EAAMI,eAAen1B,KAAKq2B,iBAC1B,SACAtB,EAAMI,eAAen1B,KAAKs2B,eAC1B,YACAvB,EAAMI,eAAen1B,KAAKu2B,kBAC1B,WACAxB,EAAMI,eAAen1B,KAAKw2B,iBAC1B,oBACAzB,EAAMoB,oBACN,qBACApB,EAAMoB,oBACN,sBACApB,EAAMoB,oBACN,gBACApB,EAAMI,eAAen1B,KAAKy2B,uBAG5Bz2B,KAAK42B,gBACH,OACA7B,EAAMM,iBACN,QACA,SACA,WACAN,EAAMI,eAAe,UAGvBn1B,KAAK62B,kBACH,WACA9B,EAAMM,iBACN,SACAN,EAAMM,iBACN,OACAN,EAAMM,iBACN,aACAN,EAAMM,iBACN,aACAN,EAAMM,iBACN,MACAN,EAAMI,eAAen1B,KAAKk1B,YAC1B,cACAH,EAAMQ,iBAAiBv1B,KAAK61B,oBAC5B,WACAd,EAAMI,eAAen1B,KAAKk2B,iBAC1B,gBACA,UACA,iBACA,UACA,eACA,UACA,aACA,UACA,cACA,UACA,kBACC,KAAM,UAAW,GAClB,aACA,SACA,QACA,SACA,YACA,SACA,QACAl2B,KAAK41B,oBACL,MACA51B,KAAK41B,oBACL,QACA51B,KAAK41B,oBACL,UACA51B,KAAK41B,oBACL,SACA51B,KAAK41B,oBACL,WACA51B,KAAK41B,oBACL,eACA51B,KAAK01B,aACL,aACA11B,KAAK01B,aACL,sBACA11B,KAAK01B,aACL,gBACA11B,KAAK01B,aACL,cACA11B,KAAK01B,aACL,aACA11B,KAAK01B,aACL,cACA11B,KAAK01B,aACL,kBACA11B,KAAK01B,aACL,cACA,QACA,kBACA,QACA,kBACA,QACA,WACA,QACA,gBACA,QACA,eACA,QACA,eACA,QACA,iBACA,SAGF11B,KAAK82B,sBACH,MACA/B,EAAMM,iBACN,MACAN,EAAMM,iBACN,OACA,UACA,OACA,SAGFr1B,KAAK+2B,mBACH,OACAhC,EAAMM,iBACN,gBACAN,EAAMI,eAAen1B,KAAK82B,uBAG5B92B,KAAKg3B,OAASh3B,KAAKi3B,mBACjB,WACAlC,EAAMM,iBACN,iBACAN,EAAMM,iBACN,WACAN,EAAMM,iBACN,gBACAN,EAAMQ,iBAAiBv1B,KAAK22B,sBAC5B,UACA5B,EAAMI,eAAen1B,KAAK42B,gBAC1B,YACA7B,EAAMI,eAAen1B,KAAK62B,kBAC1B,YACA9B,EAAMI,eAAen1B,KAAKu2B,kBAC1B,aACAxB,EAAMI,eAAen1B,KAAK+2B,mBAC1B,WACAhC,EAAMI,eAAen1B,KAAKq2B,iBAC1B,QACA,SACA,iBACA,SACA,aACA,UACA,iBACA,UACA,SACA,UACA,mBACA,QACA,oBACA,QACA,gBACA,UAKJa,GAAI,WACFl3B,KAAKm3B,YAAc,OAAQ,SAAU,QAAS,SAAU,WAAYpC,EAAMI,eAAe,YAEzFn1B,KAAKo3B,oBACH,OACArC,EAAMM,iBACN,QACA,SACA,SACA,UACA,MACAN,EAAMI,eAAen1B,KAAKm3B,aAG5Bn3B,KAAKq3B,aACH,OACAtC,EAAMM,iBACN,SACAN,EAAMM,iBACN,QACA,SACA,oBACA,UACA,qBACA,UACA,kBACA,UACA,sBACA,UACA,mBACA,UACA,oBACA,UACA,uBACA,UACA,cACAN,EAAMQ,iBAAiBv1B,KAAKo3B,qBAG9Bp3B,KAAKs3B,sBAAwB,SAAU,UAAW,QAAS,WAE3Dt3B,KAAKu3B,iBACH,kBACAxC,EAAMM,iBACN,gBACAN,EAAMI,eAAen1B,KAAKs3B,sBAC1B,aACA,SAGFt3B,KAAKw3B,cAAgB,MAAO,UAAW,MAAO,UAAW,MAAO,SAEhEx3B,KAAKy3B,oBAAsB,OAAQz3B,KAAKw3B,aAAc,QAASx3B,KAAKw3B,cAEpEx3B,KAAK03B,qBACH,eACA3C,EAAMQ,iBAAiBv1B,KAAKu3B,iBAC5B,kBACAxC,EAAMQ,iBAAiBv1B,KAAKy3B,oBAC5B,QACA,UACA,OACA,SAGFz3B,KAAK23B,oBACH,UACA,UACA,UACA33B,KAAK03B,oBACL,WACA13B,KAAK03B,oBACL,QACA13B,KAAK03B,oBACL,SACA13B,KAAK03B,oBACL,WACA13B,KAAK03B,oBACL,UACA13B,KAAK03B,oBACL,UACA13B,KAAK03B,oBACL,MACA13B,KAAK03B,qBAGP13B,KAAK43B,wBACH,OACA7C,EAAMM,iBACN,SACA,UACA,eACA,UACA,UACA,UACA,WACA,UACA,eACA,UACA,aACA,UACA,QACA,SACA,aACA,SACA,eACA,SACA,eACA,UAGFr1B,KAAK63B,iBACH,OACA9C,EAAMM,iBACN,kBACAN,EAAMM,iBACN,iBACAN,EAAMM,iBACN,cACAN,EAAMQ,iBAAiBv1B,KAAK23B,oBAC5B,cACA5C,EAAMQ,iBAAiBv1B,KAAK43B,wBAC5B,eACA,UACA,eACA,UACA,QACA,SACA,aACA,SACA,qBACA,QACA,WACA,SAGF53B,KAAK83B,iBACH,OACA/C,EAAMM,iBACN,QACA,SACA,eACA,UACA,eACA,UACA,eACA,UACA,YACA,WAGFr1B,KAAK+3B,uBACH,OACAhD,EAAMM,iBACN,QACA,SACA,WACAN,EAAMI,eAAe,UAGvBn1B,KAAKg4B,iBACH,YACAjD,EAAMM,iBACN,WACAN,EAAMM,iBACN,SACA,UACA,SACA,UACA,WACAN,EAAMoB,oBACN,YACA,QACA,WACA,QACA,UACA,QACA,UACA,SAGFn2B,KAAKi4B,sBACH,WACAlD,EAAMM,iBACN,OACAN,EAAMM,iBACN,oBACAN,EAAMM,iBACN,sBACAN,EAAMM,iBACN,WACAN,EAAMI,eAAen1B,KAAKg4B,iBAC1B,aACA,UACA,cACA,UACA,QACA,SACA,iBACAh4B,KAAKw3B,aACL,kBACAx3B,KAAKw3B,aACL,gBACAx3B,KAAKw3B,aACL,SACAx3B,KAAK03B,oBACL,kBACA,SAGF13B,KAAKk4B,iBACH,OACAnD,EAAMM,iBACN,aACAN,EAAMM,iBACN,aACA,WAGFr1B,KAAKm4B,eACH,OACApD,EAAMM,iBACN,QACA,SACA,OACA,UACA,SACA,UACA,SACA,UACA,YACA,UACA,eACA,UACA,cACA,UACA,mBACA,UACA,SACA,UACA,cACA,UACA,cACA,UACA,cACA,UACA,YACA,UACA,UACA,UACA,YACA,UACA,iBACA,UACA,aACA,UACA,aACA,WAGFr1B,KAAKo4B,kBAAoB,OAAQrD,EAAMM,iBAAkB,WAAYN,EAAMoB,qBAE3En2B,KAAKq4B,iBACH,OACAtD,EAAMM,iBACN,cACA,UACA,eACA,UACA,QACA,SACA,OACAN,EAAMI,eAAen1B,KAAKo3B,oBAC1B,WACArC,EAAMI,eAAen1B,KAAK43B,wBAC1B,WACA,SAGF53B,KAAKs4B,sBACH,kBACAvD,EAAMM,iBACN,cACAN,EAAMM,iBACN,gBACA,UACA,eACA,UACA,YACA,UACA,kBACA,UACA,aACA,UACA,cACA,UACA,gBACA,SACA,gBACA,SACA,OACAN,EAAMI,eAAen1B,KAAKq3B,aAC1B,WACAtC,EAAMI,eAAen1B,KAAK63B,iBAC1B,WACA9C,EAAMI,eAAen1B,KAAK83B,iBAC1B,iBACA/C,EAAMI,eAAen1B,KAAK+3B,uBAC1B,gBACAhD,EAAMI,eAAen1B,KAAKi4B,sBAC1B,WACAlD,EAAMI,eAAen1B,KAAKk4B,iBAC1B,SACAnD,EAAMI,eAAen1B,KAAKm4B,eAC1B,YACApD,EAAMI,eAAen1B,KAAKo4B,kBAC1B,WACArD,EAAMI,eAAen1B,KAAKq4B,iBAC1B,oBACAtD,EAAMoB,oBACN,qBACApB,EAAMoB,oBACN,sBACApB,EAAMoB,qBAGRn2B,KAAKu4B,gBACH,OACAxD,EAAMM,iBACN,QACA,SACA,WACAN,EAAMI,eAAe,UAGvBn1B,KAAKw4B,kBACH,WACAzD,EAAMM,iBACN,SACAN,EAAMM,iBACN,OACAN,EAAMM,iBACN,aACAN,EAAMM,iBACN,aACAN,EAAMM,iBACN,MACAN,EAAMI,eAAen1B,KAAKm3B,YAC1B,cACApC,EAAMQ,iBAAiBv1B,KAAK23B,oBAC5B,WACA5C,EAAMI,eAAen1B,KAAKg4B,iBAC1B,gBACA,UACA,iBACA,UACA,eACA,UACA,aACA,UACA,cACA,UACA,kBACC,KAAM,UAAW,GAClB,aACA,SACA,QACA,SACA,YACA,SACA,QACAh4B,KAAK03B,oBACL,MACA13B,KAAK03B,oBACL,QACA13B,KAAK03B,oBACL,UACA13B,KAAK03B,oBACL,SACA13B,KAAK03B,oBACL,WACA13B,KAAK03B,oBACL,eACA13B,KAAKw3B,aACL,aACAx3B,KAAKw3B,aACL,sBACAx3B,KAAKw3B,aACL,gBACAx3B,KAAKw3B,aACL,cACAx3B,KAAKw3B,aACL,aACAx3B,KAAKw3B,aACL,cACAx3B,KAAKw3B,aACL,kBACAx3B,KAAKw3B,aACL,cACA,QACA,kBACA,QACA,kBACA,QACA,WACA,QACA,gBACA,QACA,eACA,QACA,eACA,QACA,iBACA,SAGFx3B,KAAKy4B,sBACH,MACA1D,EAAMM,iBACN,MACAN,EAAMM,iBACN,OACA,UACA,OACA,SAGFr1B,KAAK04B,mBACH,OACA3D,EAAMM,iBACN,gBACAN,EAAMI,eAAen1B,KAAKy4B,uBAG5Bz4B,KAAKg3B,OAASh3B,KAAK24B,mBACjB,WACA5D,EAAMM,iBACN,iBACAN,EAAMM,iBACN,WACAN,EAAMM,iBACN,gBACAN,EAAMQ,iBAAiBv1B,KAAKs4B,sBAC5B,UACAvD,EAAMI,eAAen1B,KAAKu4B,gBAC1B,YACAxD,EAAMI,eAAen1B,KAAKw4B,kBAC1B,YACAzD,EAAMI,eAAen1B,KAAKo4B,kBAC1B,aACArD,EAAMI,eAAen1B,KAAK04B,mBAC1B,WACA3D,EAAMI,eAAen1B,KAAKk4B,iBAC1B,QACA,SACA,iBACA,SACA,aACA,UACA,iBACA,UACA,SACA,UACA,mBACA,QACA,oBACA,QACA,gBACA,UAKJU,GAAI,WACF54B,KAAK64B,YAAc,OAAQ,SAAU,QAAS,SAAU,WAAY9D,EAAMI,eAAe,YAEzFn1B,KAAK84B,oBACH,OACA/D,EAAMM,iBACN,QACA,SACA,SACA,UACA,MACAN,EAAMI,eAAen1B,KAAK64B,aAG5B74B,KAAK+4B,aACH,OACAhE,EAAMM,iBACN,SACAN,EAAMM,iBACN,QACA,SACA,oBACA,UACA,qBACA,UACA,kBACA,UACA,sBACA,UACA,mBACA,UACA,oBACA,UACA,uBACA,UACA,cACAN,EAAMQ,iBAAiBv1B,KAAK84B,qBAG9B94B,KAAKg5B,sBAAwB,SAAU,UAAW,QAAS,WAE3Dh5B,KAAKi5B,iBACH,kBACAlE,EAAMM,iBACN,gBACAN,EAAMI,eAAen1B,KAAKg5B,sBAC1B,aACA,SAGFh5B,KAAKk5B,cAAgB,MAAO,UAAW,MAAO,UAAW,MAAO,SAEhEl5B,KAAKm5B,oBAAsB,OAAQn5B,KAAKk5B,aAAc,QAASl5B,KAAKk5B,cAEpEl5B,KAAKo5B,qBACH,eACArE,EAAMQ,iBAAiBv1B,KAAKi5B,iBAC5B,kBACAlE,EAAMQ,iBAAiBv1B,KAAKm5B,oBAC5B,QACA,UACA,OACA,SAGFn5B,KAAKq5B,oBACH,UACA,UACA,UACAr5B,KAAKo5B,oBACL,WACAp5B,KAAKo5B,oBACL,QACAp5B,KAAKo5B,oBACL,SACAp5B,KAAKo5B,oBACL,WACAp5B,KAAKo5B,oBACL,UACAp5B,KAAKo5B,oBACL,UACAp5B,KAAKo5B,oBACL,MACAp5B,KAAKo5B,qBAGPp5B,KAAKs5B,wBACH,OACAvE,EAAMM,iBACN,SACA,UACA,eACA,UACA,UACA,UACA,WACA,UACA,eACA,UACA,aACA,UACA,QACA,SACA,aACA,SACA,eACA,SACA,eACA,UAGFr1B,KAAKu5B,iBACH,OACAxE,EAAMM,iBACN,kBACAN,EAAMM,iBACN,iBACAN,EAAMM,iBACN,cACAN,EAAMQ,iBAAiBv1B,KAAKq5B,oBAC5B,cACAtE,EAAMQ,iBAAiBv1B,KAAKs5B,wBAC5B,eACA,UACA,eACA,UACA,QACA,SACA,aACA,SACA,qBACA,QACA,WACA,SAGFt5B,KAAKw5B,iBACH,OACAzE,EAAMM,iBACN,QACA,SACA,eACA,UACA,eACA,UACA,eACA,UACA,YACA,WAGFr1B,KAAKy5B,uBACH,OACA1E,EAAMM,iBACN,QACA,SACA,WACAN,EAAMI,eAAe,UAGvBn1B,KAAK05B,iBACH,YACA3E,EAAMM,iBACN,WACAN,EAAMM,iBACN,SACA,UACA,SACA,UACA,WACAN,EAAMoB,oBACN,YACA,QACA,WACA,QACA,UACA,QACA,UACA,SAGFn2B,KAAK25B,sBACH,WACA5E,EAAMM,iBACN,OACAN,EAAMM,iBACN,oBACAN,EAAMM,iBACN,sBACAN,EAAMM,iBACN,WACAN,EAAMI,eAAen1B,KAAK05B,iBAC1B,aACA,UACA,cACA,UACA,QACA,SACA,iBACA15B,KAAKk5B,aACL,kBACAl5B,KAAKk5B,aACL,gBACAl5B,KAAKk5B,aACL,SACAl5B,KAAKo5B,oBACL,kBACA,SAGFp5B,KAAK45B,iBACH,OACA7E,EAAMM,iBACN,aACAN,EAAMM,iBACN,aACA,WAGFr1B,KAAK65B,eACH,OACA9E,EAAMM,iBACN,QACA,SACA,OACA,UACA,SACA,UACA,SACA,UACA,YACA,UACA,eACA,UACA,cACA,UACA,mBACA,UACA,SACA,UACA,cACA,UACA,cACA,UACA,cACA,UACA,YACA,UACA,UACA,UACA,YACA,UACA,iBACA,UACA,aACA,UACA,aACA,WAGFr1B,KAAK85B,kBAAoB,OAAQ/E,EAAMM,iBAAkB,WAAYN,EAAMoB,qBAE3En2B,KAAK+5B,iBACH,OACAhF,EAAMM,iBACN,cACA,UACA,eACA,UACA,QACA,SACA,OACAN,EAAMI,eAAen1B,KAAK84B,oBAC1B,WACA/D,EAAMI,eAAen1B,KAAKs5B,wBAC1B,WACA,SAGFt5B,KAAKg6B,sBACH,kBACAjF,EAAMM,iBACN,cACAN,EAAMM,iBACN,gBACA,UACA,eACA,UACA,YACA,UACA,kBACA,UACA,aACA,UACA,cACA,UACA,gBACA,SACA,gBACA,SACA,OACAN,EAAMI,eAAen1B,KAAK+4B,aAC1B,WACAhE,EAAMI,eAAen1B,KAAKu5B,iBAC1B,WACAxE,EAAMI,eAAen1B,KAAKw5B,iBAC1B,iBACAzE,EAAMI,eAAen1B,KAAKy5B,uBAC1B,gBACA1E,EAAMI,eAAen1B,KAAK25B,sBAC1B,WACA5E,EAAMI,eAAen1B,KAAK45B,iBAC1B,SACA7E,EAAMI,eAAen1B,KAAK65B,eAC1B,YACA9E,EAAMI,eAAen1B,KAAK85B,kBAC1B,WACA/E,EAAMI,eAAen1B,KAAK+5B,iBAC1B,oBACAhF,EAAMoB,oBACN,qBACApB,EAAMoB,oBACN,sBACApB,EAAMoB,qBAGRn2B,KAAKi6B,gBACH,OACAlF,EAAMM,iBACN,QACA,SACA,WACAN,EAAMI,eAAe,UAGvBn1B,KAAKk6B,kBACH,WACAnF,EAAMM,iBACN,SACAN,EAAMM,iBACN,OACAN,EAAMM,iBACN,aACAN,EAAMM,iBACN,aACAN,EAAMM,iBACN,MACAN,EAAMI,eAAen1B,KAAK64B,YAC1B,cACA9D,EAAMQ,iBAAiBv1B,KAAKq5B,oBAC5B,WACAtE,EAAMI,eAAen1B,KAAK05B,iBAC1B,gBACA,UACA,iBACA,UACA,eACA,UACA,aACA,UACA,cACA,UACA,kBACC,KAAM,UAAW,GAClB,aACA,SACA,QACA,SACA,YACA,SACA,QACA15B,KAAKo5B,oBACL,MACAp5B,KAAKo5B,oBACL,QACAp5B,KAAKo5B,oBACL,UACAp5B,KAAKo5B,oBACL,SACAp5B,KAAKo5B,oBACL,WACAp5B,KAAKo5B,oBACL,eACAp5B,KAAKk5B,aACL,aACAl5B,KAAKk5B,aACL,sBACAl5B,KAAKk5B,aACL,gBACAl5B,KAAKk5B,aACL,cACAl5B,KAAKk5B,aACL,aACAl5B,KAAKk5B,aACL,kBACAl5B,KAAKk5B,aACL,cACA,QACA,kBACA,QACA,kBACA,QACA,WACA,QACA,gBACA,QACA,eACA,QACA,eACA,QACA,iBACA,SAGFl5B,KAAKm6B,sBACH,MACApF,EAAMM,iBACN,MACAN,EAAMM,iBACN,OACA,UACA,OACA,SAGFr1B,KAAKo6B,mBACH,OACArF,EAAMM,iBACN,gBACAN,EAAMI,eAAen1B,KAAKm6B,uBAG5Bn6B,KAAKg3B,OAASh3B,KAAKq6B,mBACjB,WACAtF,EAAMM,iBACN,iBACAN,EAAMM,iBACN,WACAN,EAAMM,iBACN,gBACAN,EAAMQ,iBAAiBv1B,KAAKg6B,sBAC5B,UACAjF,EAAMI,eAAen1B,KAAKi6B,gBAC1B,YACAlF,EAAMI,eAAen1B,KAAKk6B,kBAC1B,YACAnF,EAAMI,eAAen1B,KAAK85B,kBAC1B,aACA/E,EAAMI,eAAen1B,KAAKo6B,mBAC1B,WACArF,EAAMI,eAAen1B,KAAK45B,iBAC1B,QACA,SACA,iBACA,SACA,aACA,UACA,iBACA,UACA,SACA,UACA,mBACA,QACA,oBACA,UAKJU,GAAI,WACFt6B,KAAKu6B,YAAc,OAAQ,SAAU,QAAS,SAAU,WAAYxF,EAAMI,eAAe,YAEzFn1B,KAAKw6B,oBACH,OACAzF,EAAMM,iBACN,QACA,SACA,SACA,UACA,MACAN,EAAMI,eAAen1B,KAAKu6B,aAG5Bv6B,KAAKy6B,aACH,OACA1F,EAAMM,iBACN,SACAN,EAAMM,iBACN,QACA,SACA,oBACA,UACA,qBACA,UACA,kBACA,UACA,sBACA,UACA,mBACA,UACA,oBACA,UACA,uBACA,UACA,cACAN,EAAMQ,iBAAiBv1B,KAAKw6B,qBAG9Bx6B,KAAK06B,sBAAwB,SAAU,UAAW,QAAS,WAE3D16B,KAAK26B,iBACH,kBACA5F,EAAMM,iBACN,gBACAN,EAAMI,eAAen1B,KAAK06B,sBAC1B,aACA,SAGF16B,KAAK46B,cAAgB,MAAO,UAAW,MAAO,UAAW,MAAO,SAEhE56B,KAAK66B,oBAAsB,OAAQ76B,KAAK46B,aAAc,QAAS56B,KAAK46B,cAEpE56B,KAAK86B,qBACH,eACA/F,EAAMQ,iBAAiBv1B,KAAK26B,iBAC5B,kBACA5F,EAAMQ,iBAAiBv1B,KAAK66B,oBAC5B,QACA,UACA,OACA,SAGF76B,KAAK+6B,oBACH,UACA,UACA,UACA/6B,KAAK86B,oBACL,WACA96B,KAAK86B,oBACL,QACA96B,KAAK86B,oBACL,SACA96B,KAAK86B,oBACL,WACA96B,KAAK86B,oBACL,UACA96B,KAAK86B,oBACL,UACA96B,KAAK86B,oBACL,MACA96B,KAAK86B,qBAGP96B,KAAKg7B,wBACH,OACAjG,EAAMM,iBACN,SACA,UACA,eACA,UACA,UACA,UACA,WACA,UACA,eACA,UACA,aACA,UACA,QACA,SACA,aACA,SACA,eACA,SACA,eACA,UAGFr1B,KAAKi7B,iBACH,OACAlG,EAAMM,iBACN,kBACAN,EAAMM,iBACN,iBACAN,EAAMM,iBACN,cACAN,EAAMQ,iBAAiBv1B,KAAK+6B,oBAC5B,cACAhG,EAAMQ,iBAAiBv1B,KAAKg7B,wBAC5B,eACA,UACA,eACA,UACA,QACA,SACA,aACA,SACA,qBACA,QACA,WACA,SAGFh7B,KAAKk7B,iBACH,OACAnG,EAAMM,iBACN,QACA,SACA,eACA,UACA,eACA,UACA,eACA,UACA,YACA,WAGFr1B,KAAKm7B,uBACH,OACApG,EAAMM,iBACN,QACA,SACA,WACAN,EAAMI,eAAe,UAGvBn1B,KAAKo7B,iBACH,YACArG,EAAMM,iBACN,WACAN,EAAMM,iBACN,SACA,UACA,SACA,UACA,WACAN,EAAMoB,oBACN,YACA,QACA,WACA,QACA,UACA,QACA,UACA,SAGFn2B,KAAKq7B,sBACH,WACAtG,EAAMM,iBACN,OACAN,EAAMM,iBACN,oBACAN,EAAMM,iBACN,sBACAN,EAAMM,iBACN,WACAN,EAAMI,eAAen1B,KAAKo7B,iBAC1B,aACA,UACA,cACA,UACA,QACA,SACA,iBACAp7B,KAAK46B,aACL,kBACA56B,KAAK46B,aACL,gBACA56B,KAAK46B,aACL,SACA56B,KAAK86B,oBACL,kBACA,SAGF96B,KAAKs7B,eACH,OACAvG,EAAMM,iBACN,QACA,SACA,OACA,UACA,SACA,UACA,SACA,UACA,YACA,UACA,eACA,UACA,cACA,UACA,mBACA,UACA,SACA,UACA,cACA,UACA,cACA,UACA,cACA,UACA,YACA,UACA,UACA,UACA,YACA,UACA,iBACA,UACA,aACA,UACA,aACA,WAGFr1B,KAAKu7B,iBACH,OACAxG,EAAMM,iBACN,cACA,UACA,eACA,UACA,QACA,SACA,OACAN,EAAMI,eAAen1B,KAAKw6B,oBAC1B,WACAzF,EAAMI,eAAen1B,KAAKg7B,wBAC1B,WACA,SAGFh7B,KAAKw7B,sBACH,kBACAzG,EAAMM,iBACN,cACAN,EAAMM,iBACN,gBACA,UACA,eACA,UACA,kBACA,UACA,aACA,UACA,cACA,UACA,gBACA,SACA,gBACA,SACA,OACAN,EAAMI,eAAen1B,KAAKy6B,aAC1B,WACA1F,EAAMI,eAAen1B,KAAKi7B,iBAC1B,WACAlG,EAAMI,eAAen1B,KAAKk7B,iBAC1B,iBACAnG,EAAMI,eAAen1B,KAAKm7B,uBAC1B,gBACApG,EAAMI,eAAen1B,KAAKq7B,sBAC1B,SACAtG,EAAMI,eAAen1B,KAAKs7B,eAC1B,WACAvG,EAAMI,eAAen1B,KAAKu7B,iBAC1B,oBACAxG,EAAMoB,oBACN,qBACApB,EAAMoB,oBACN,sBACApB,EAAMoB,qBAGRn2B,KAAKy7B,gBACH,OACA1G,EAAMM,iBACN,QACA,SACA,WACAN,EAAMI,eAAe,UAGvBn1B,KAAK07B,kBACH,WACA3G,EAAMM,iBACN,SACAN,EAAMM,iBACN,OACAN,EAAMM,iBACN,aACAN,EAAMM,iBACN,aACAN,EAAMM,iBACN,MACAN,EAAMI,eAAen1B,KAAKu6B,YAC1B,cACAxF,EAAMQ,iBAAiBv1B,KAAK+6B,oBAC5B,WACAhG,EAAMI,eAAen1B,KAAKo7B,iBAC1B,gBACA,UACA,iBACA,UACA,eACA,UACA,aACA,UACA,cACA,UACA,kBACC,KAAM,UAAW,GAClB,aACA,SACA,QACA,SACA,YACA,SACA,QACAp7B,KAAK86B,oBACL,MACA96B,KAAK86B,oBACL,QACA96B,KAAK86B,oBACL,UACA96B,KAAK86B,oBACL,SACA96B,KAAK86B,oBACL,WACA96B,KAAK86B,oBACL,eACA96B,KAAK46B,aACL,aACA56B,KAAK46B,aACL,sBACA56B,KAAK46B,aACL,gBACA56B,KAAK46B,aACL,cACA56B,KAAK46B,aACL,aACA56B,KAAK46B,aACL,kBACA56B,KAAK46B,aACL,cACA,QACA,kBACA,QACA,kBACA,QACA,WACA,QACA,gBACA,QACA,eACA,QACA,eACA,QACA,iBACA,SAGF56B,KAAK27B,kBAAoB,OAAQ5G,EAAMM,iBAAkB,WAAYN,EAAMoB,qBAE3En2B,KAAK47B,sBACH,MACA7G,EAAMM,iBACN,MACAN,EAAMM,iBACN,OACA,UACA,OACA,SAGFr1B,KAAK67B,mBACH,OACA9G,EAAMM,iBACN,gBACAN,EAAMI,eAAen1B,KAAK47B,uBAG5B57B,KAAKg3B,OAASh3B,KAAK87B,mBACjB,WACA/G,EAAMM,iBACN,iBACAN,EAAMM,iBACN,WACAN,EAAMM,iBACN,gBACAN,EAAMQ,iBAAiBv1B,KAAKw7B,sBAC5B,UACAzG,EAAMI,eAAen1B,KAAKy7B,gBAC1B,YACA1G,EAAMI,eAAen1B,KAAK07B,kBAC1B,YACA3G,EAAMI,eAAen1B,KAAK27B,kBAC1B,aACA5G,EAAMI,eAAen1B,KAAK67B,mBAC1B,QACA,SACA,iBACA,SACA,aACA,UACA,iBACA,UACA,SACA,UACA,mBACA,QACA,oBACA,UAKJE,GAAI,WACF/7B,KAAKg8B,YAAc,OAAQ,SAAU,QAAS,SAAU,WAAYjH,EAAMI,eAAe,YAEzFn1B,KAAKi8B,oBACH,OACAlH,EAAMM,iBACN,QACA,SACA,SACA,UACA,MACAN,EAAMI,eAAen1B,KAAKg8B,aAG5Bh8B,KAAKk8B,aACH,OACAnH,EAAMM,iBACN,QACA,SACA,SACAN,EAAMM,iBACN,cACAN,EAAMQ,iBAAiBv1B,KAAKi8B,qBAG9Bj8B,KAAKm8B,sBAAwB,SAAU,UAAW,QAAS,WAE3Dn8B,KAAKo8B,iBACH,kBACArH,EAAMM,iBACN,gBACAN,EAAMI,eAAen1B,KAAKm8B,sBAC1B,aACA,SAGFn8B,KAAKq8B,cAAgB,MAAO,UAAW,MAAO,UAAW,MAAO,SAEhEr8B,KAAKs8B,oBAAsB,OAAQt8B,KAAKq8B,aAAc,QAASr8B,KAAKq8B,cAEpEr8B,KAAKu8B,qBACH,eACAxH,EAAMQ,iBAAiBv1B,KAAKo8B,iBAC5B,kBACArH,EAAMQ,iBAAiBv1B,KAAKs8B,oBAC5B,QACA,UACA,OACA,SAGFt8B,KAAKw8B,oBACH,UACA,UACA,UACAx8B,KAAKu8B,oBACL,WACAv8B,KAAKu8B,oBACL,QACAv8B,KAAKu8B,oBACL,SACAv8B,KAAKu8B,oBACL,WACAv8B,KAAKu8B,oBACL,UACAv8B,KAAKu8B,oBACL,UACAv8B,KAAKu8B,qBAGPv8B,KAAKy8B,wBACH,OACA1H,EAAMM,iBACN,SACA,UACA,eACA,UACA,UACA,UACA,WACA,UACA,eACA,UACA,aACA,UACA,QACA,UAGFr1B,KAAK08B,iBACH,OACA3H,EAAMM,iBACN,kBACAN,EAAMM,iBACN,iBACAN,EAAMM,iBACN,cACAN,EAAMQ,iBAAiBv1B,KAAKw8B,oBAC5B,cACAzH,EAAMQ,iBAAiBv1B,KAAKy8B,wBAC5B,eACA,UACA,QACA,SACA,aACA,SACA,qBACA,SAGFz8B,KAAK28B,iBACH,OACA5H,EAAMM,iBACN,QACA,SACA,eACA,UACA,eACA,UACA,eACA,UACA,YACA,WAGFr1B,KAAK48B,uBACH,OACA7H,EAAMM,iBACN,QACA,SACA,WACAN,EAAMI,eAAe,UAGvBn1B,KAAK68B,iBACH,YACA9H,EAAMM,iBACN,WACAN,EAAMM,iBACN,SACA,UACA,SACA,UACA,WACAN,EAAMoB,oBACN,YACA,QACA,WACA,QACA,UACA,QACA,UACA,SAGFn2B,KAAK88B,sBACH,WACA/H,EAAMM,iBACN,OACAN,EAAMM,iBACN,oBACAN,EAAMM,iBACN,sBACAN,EAAMM,iBACN,WACAN,EAAMI,eAAen1B,KAAK68B,iBAC1B,aACA,UACA,cACA,UACA,QACA,SACA,iBACA78B,KAAKq8B,aACL,kBACAr8B,KAAKq8B,aACL,gBACAr8B,KAAKq8B,aACL,SACAr8B,KAAKu8B,oBACL,kBACA,SAGFv8B,KAAK+8B,eACH,OACAhI,EAAMM,iBACN,QACA,SACA,OACA,UACA,SACA,UACA,SACA,UACA,YACA,UACA,eACA,UACA,cACA,UACA,mBACA,UACA,SACA,UACA,cACA,UACA,cACA,UACA,cACA,UACA,YACA,UACA,UACA,UACA,YACA,UACA,iBACA,UACA,aACA,UACA,aACA,WAGFr1B,KAAKg9B,iBACH,OACAjI,EAAMM,iBACN,cACA,UACA,eACA,UACA,QACA,SACA,OACAN,EAAMI,eAAen1B,KAAKi8B,oBAC1B,WACAlH,EAAMI,eAAen1B,KAAKy8B,wBAC1B,WACA,SAGFz8B,KAAKi9B,sBACH,kBACAlI,EAAMM,iBACN,cACAN,EAAMM,iBACN,gBACA,UACA,eACA,UACA,kBACA,UACA,OACAN,EAAMI,eAAen1B,KAAKk8B,aAC1B,WACAnH,EAAMI,eAAen1B,KAAK08B,iBAC1B,WACA3H,EAAMI,eAAen1B,KAAK28B,iBAC1B,iBACA5H,EAAMI,eAAen1B,KAAK48B,uBAC1B,gBACA7H,EAAMI,eAAen1B,KAAK88B,sBAC1B,SACA/H,EAAMI,eAAen1B,KAAK+8B,eAC1B,WACAhI,EAAMI,eAAen1B,KAAKg9B,iBAC1B,oBACAjI,EAAMoB,oBACN,qBACApB,EAAMoB,oBACN,sBACApB,EAAMoB,qBAGRn2B,KAAKk9B,gBACH,OACAnI,EAAMM,iBACN,QACA,SACA,WACAN,EAAMI,eAAe,UAGvBn1B,KAAKm9B,kBACH,WACApI,EAAMM,iBACN,SACAN,EAAMM,iBACN,OACAN,EAAMM,iBACN,aACAN,EAAMM,iBACN,aACAN,EAAMM,iBACN,MACAN,EAAMI,eAAen1B,KAAKg8B,YAC1B,cACAjH,EAAMQ,iBAAiBv1B,KAAKw8B,oBAC5B,WACAzH,EAAMI,eAAen1B,KAAK68B,iBAC1B,gBACA,UACA,iBACA,UACA,eACA,UACA,aACA,UACA,cACA,UACA,kBACC,KAAM,UAAW,GAClB,aACA,SACA,QACA,SACA,YACA,SACA,QACA78B,KAAKu8B,oBACL,MACAv8B,KAAKu8B,oBACL,QACAv8B,KAAKu8B,oBACL,UACAv8B,KAAKu8B,oBACL,SACAv8B,KAAKu8B,oBACL,WACAv8B,KAAKu8B,oBACL,eACAv8B,KAAKq8B,aACL,aACAr8B,KAAKq8B,aACL,sBACAr8B,KAAKq8B,aACL,gBACAr8B,KAAKq8B,aACL,cACAr8B,KAAKq8B,aACL,aACAr8B,KAAKq8B,aACL,kBACAr8B,KAAKq8B,aACL,cACA,QACA,kBACA,QACA,kBACA,QACA,WACA,QACA,gBACA,QACA,eACA,QACA,eACA,QACA,iBACA,SAGFr8B,KAAKo9B,kBAAoB,OAAQrI,EAAMM,iBAAkB,WAAYN,EAAMoB,qBAE3En2B,KAAKq9B,sBACH,MACAtI,EAAMM,iBACN,MACAN,EAAMM,iBACN,OACA,UACA,OACA,SAGFr1B,KAAKs9B,mBACH,OACAvI,EAAMM,iBACN,gBACAN,EAAMI,eAAen1B,KAAKq9B,uBAG5Br9B,KAAKg3B,OAASh3B,KAAKu9B,mBACjB,WACAxI,EAAMM,iBACN,iBACAN,EAAMM,iBACN,WACAN,EAAMM,iBACN,gBACAN,EAAMQ,iBAAiBv1B,KAAKi9B,sBAC5B,UACAlI,EAAMI,eAAen1B,KAAKk9B,gBAC1B,YACAnI,EAAMI,eAAen1B,KAAKm9B,kBAC1B,YACApI,EAAMI,eAAen1B,KAAKo9B,kBAC1B,aACArI,EAAMI,eAAen1B,KAAKs9B,mBAC1B,QACA,SACA,iBACA,SACA,aACA,UACA,iBACA,UACA,SACA,UACA,mBACA,QACA,oBACA,UAKJE,GAAI,WACFx9B,KAAKy9B,YAAc,OAAQ,SAAU,QAAS,SAAU,WAAY1I,EAAMI,eAAe,YAEzFn1B,KAAK09B,oBACH,OACA3I,EAAMM,iBACN,QACA,SACA,SACA,UACA,MACAN,EAAMI,eAAen1B,KAAKy9B,aAG5Bz9B,KAAK29B,aACH,OACA5I,EAAMM,iBACN,QACA,SACA,SACAN,EAAMM,iBACN,cACAN,EAAMQ,iBAAiBv1B,KAAK09B,qBAG9B19B,KAAK49B,sBAAwB,SAAU,UAAW,QAAS,WAE3D59B,KAAK69B,iBACH,kBACA9I,EAAMM,iBACN,gBACAN,EAAMI,eAAen1B,KAAK49B,sBAC1B,aACA,SAGF59B,KAAK89B,cAAgB,MAAO,UAAW,MAAO,UAAW,MAAO,SAEhE99B,KAAK+9B,oBAAsB,OAAQ/9B,KAAK89B,aAAc,QAAS99B,KAAK89B,cAEpE99B,KAAKg+B,qBACH,eACAjJ,EAAMQ,iBAAiBv1B,KAAK69B,iBAC5B,kBACA9I,EAAMQ,iBAAiBv1B,KAAK+9B,oBAC5B,QACA,UACA,OACA,SAGF/9B,KAAKi+B,oBACH,UACA,UACA,UACAj+B,KAAKg+B,oBACL,WACAh+B,KAAKg+B,oBACL,QACAh+B,KAAKg+B,oBACL,SACAh+B,KAAKg+B,oBACL,WACAh+B,KAAKg+B,oBACL,UACAh+B,KAAKg+B,oBACL,UACAh+B,KAAKg+B,qBAGPh+B,KAAKk+B,wBACH,OACAnJ,EAAMM,iBACN,SACA,UACA,eACA,UACA,UACA,UACA,WACA,UACA,eACA,UACA,aACA,UACA,QACA,UAGFr1B,KAAKm+B,iBACH,OACApJ,EAAMM,iBACN,kBACAN,EAAMM,iBACN,iBACAN,EAAMM,iBACN,cACAN,EAAMQ,iBAAiBv1B,KAAKi+B,oBAC5B,cACAlJ,EAAMQ,iBAAiBv1B,KAAKk+B,wBAC5B,eACA,UACA,QACA,SACA,aACA,SACA,qBACA,SAGFl+B,KAAKo+B,uBACH,OACArJ,EAAMM,iBACN,QACA,SACA,WACAN,EAAMI,eAAe,UAGvBn1B,KAAKq+B,iBACH,YACAtJ,EAAMM,iBACN,WACAN,EAAMM,iBACN,SACA,UACA,SACA,UACA,WACAN,EAAMoB,oBACN,YACA,QACA,WACA,QACA,UACA,QACA,UACA,SAGFn2B,KAAKs+B,sBACH,WACAvJ,EAAMM,iBACN,OACAN,EAAMM,iBACN,oBACAN,EAAMM,iBACN,sBACAN,EAAMM,iBACN,WACAN,EAAMI,eAAen1B,KAAKq+B,iBAC1B,aACA,UACA,cACA,UACA,QACA,SACA,iBACAr+B,KAAK89B,aACL,kBACA99B,KAAK89B,aACL,gBACA99B,KAAK89B,aACL,SACA99B,KAAKg+B,oBACL,kBACA,SAGFh+B,KAAKu+B,eACH,OACAxJ,EAAMM,iBACN,QACA,SACA,OACA,UACA,SACA,UACA,SACA,UACA,YACA,UACA,eACA,UACA,cACA,UACA,mBACA,UACA,SACA,UACA,cACA,UACA,cACA,UACA,cACA,UACA,YACA,UACA,UACA,UACA,YACA,UACA,iBACA,UACA,aACA,UACA,aACA,WAGFr1B,KAAKw+B,iBACH,OACAzJ,EAAMM,iBACN,cACA,UACA,eACA,UACA,QACA,SACA,OACAN,EAAMI,eAAen1B,KAAK09B,oBAC1B,WACA3I,EAAMI,eAAen1B,KAAKk+B,wBAC1B,WACA,SAGFl+B,KAAKy+B,sBACH,kBACA1J,EAAMM,iBACN,cACAN,EAAMM,iBACN,gBACA,UACA,eACA,UACA,kBACA,UACA,OACAN,EAAMI,eAAen1B,KAAK29B,aAC1B,WACA5I,EAAMI,eAAen1B,KAAKm+B,iBAC1B,iBACApJ,EAAMI,eAAen1B,KAAKo+B,uBAC1B,gBACArJ,EAAMI,eAAen1B,KAAKs+B,sBAC1B,SACAvJ,EAAMI,eAAen1B,KAAKu+B,eAC1B,WACAxJ,EAAMI,eAAen1B,KAAKw+B,iBAC1B,oBACAzJ,EAAMoB,oBACN,qBACApB,EAAMoB,oBACN,sBACApB,EAAMoB,qBAGRn2B,KAAK0+B,gBACH,OACA3J,EAAMM,iBACN,QACA,SACA,WACAN,EAAMI,eAAe,UAGvBn1B,KAAK2+B,kBACH,WACA5J,EAAMM,iBACN,SACAN,EAAMM,iBACN,OACAN,EAAMM,iBACN,aACAN,EAAMM,iBACN,aACAN,EAAMM,iBACN,MACAN,EAAMI,eAAen1B,KAAKy9B,YAC1B,cACA1I,EAAMQ,iBAAiBv1B,KAAKi+B,oBAC5B,WACAlJ,EAAMI,eAAen1B,KAAKq+B,iBAC1B,gBACA,UACA,iBACA,UACA,eACA,UACA,aACA,UACA,cACA,UACA,kBACC,KAAM,UAAW,GAClB,aACA,SACA,QACA,SACA,YACA,SACA,QACAr+B,KAAKg+B,oBACL,MACAh+B,KAAKg+B,oBACL,QACAh+B,KAAKg+B,oBACL,UACAh+B,KAAKg+B,oBACL,SACAh+B,KAAKg+B,oBACL,WACAh+B,KAAKg+B,oBACL,eACAh+B,KAAK89B,aACL,aACA99B,KAAK89B,aACL,sBACA99B,KAAK89B,aACL,gBACA99B,KAAK89B,aACL,cACA99B,KAAK89B,aACL,aACA99B,KAAK89B,aACL,kBACA99B,KAAK89B,aACL,cACA,QACA,kBACA,QACA,kBACA,QACA,WACA,QACA,gBACA,QACA,eACA,QACA,eACA,QACA,iBACA,SAGF99B,KAAK4+B,kBAAoB,OAAQ7J,EAAMM,iBAAkB,WAAYN,EAAMoB,qBAE3En2B,KAAK6+B,sBACH,MACA9J,EAAMM,iBACN,MACAN,EAAMM,iBACN,OACA,UACA,OACA,SAGFr1B,KAAK8+B,mBACH,OACA/J,EAAMM,iBACN,gBACAN,EAAMI,eAAen1B,KAAK6+B,uBAG5B7+B,KAAKg3B,OAASh3B,KAAK++B,mBACjB,WACAhK,EAAMM,iBACN,iBACAN,EAAMM,iBACN,WACAN,EAAMM,iBACN,gBACAN,EAAMQ,iBAAiBv1B,KAAKy+B,sBAC5B,UACA1J,EAAMI,eAAen1B,KAAK0+B,gBAC1B,YACA3J,EAAMI,eAAen1B,KAAK2+B,kBAC1B,YACA5J,EAAMI,eAAen1B,KAAK4+B,kBAC1B,aACA7J,EAAMI,eAAen1B,KAAK8+B,mBAC1B,QACA,SACA,iBACA,SACA,aACA,UACA,iBACA,UACA,SACA,UACA,mBACA,QACA,oBACA,UAKJE,GAAI,WACFh/B,KAAKi/B,YAAc,OAAQ,SAAU,QAAS,SAAU,WAAYlK,EAAMI,eAAe,YAEzFn1B,KAAKk/B,oBACH,OACAnK,EAAMM,iBACN,QACA,SACA,SACA,UACA,MACAN,EAAMI,eAAen1B,KAAKi/B,aAG5Bj/B,KAAKm/B,aACH,OACApK,EAAMM,iBACN,QACA,SACA,SACAN,EAAMM,iBACN,cACAN,EAAMQ,iBAAiBv1B,KAAKk/B,qBAG9Bl/B,KAAKo/B,sBAAwB,SAAU,UAAW,QAAS,WAE3Dp/B,KAAKq/B,iBACH,kBACAtK,EAAMM,iBACN,gBACAN,EAAMI,eAAen1B,KAAKo/B,sBAC1B,aACA,SAGFp/B,KAAKs/B,cAAgB,MAAO,UAAW,MAAO,UAAW,MAAO,SAEhEt/B,KAAKu/B,oBAAsB,OAAQv/B,KAAKs/B,aAAc,QAASt/B,KAAKs/B,cAEpEt/B,KAAKw/B,qBACH,eACAzK,EAAMQ,iBAAiBv1B,KAAKq/B,iBAC5B,kBACAtK,EAAMQ,iBAAiBv1B,KAAKu/B,oBAC5B,QACA,UACA,OACA,SAGFv/B,KAAKy/B,oBACH,UACA,UACA,UACAz/B,KAAKw/B,oBACL,WACAx/B,KAAKw/B,oBACL,QACAx/B,KAAKw/B,oBACL,SACAx/B,KAAKw/B,oBACL,WACAx/B,KAAKw/B,oBACL,UACAx/B,KAAKw/B,oBACL,UACAx/B,KAAKw/B,qBAGPx/B,KAAK0/B,wBACH,OACA3K,EAAMM,iBACN,SACA,UACA,eACA,UACA,UACA,UACA,WACA,UACA,eACA,UACA,aACA,UACA,QACA,UAGFr1B,KAAK2/B,iBACH,OACA5K,EAAMM,iBACN,kBACAN,EAAMM,iBACN,iBACAN,EAAMM,iBACN,cACAN,EAAMQ,iBAAiBv1B,KAAKy/B,oBAC5B,cACA1K,EAAMQ,iBAAiBv1B,KAAK0/B,wBAC5B,eACA,UACA,QACA,SACA,aACA,SACA,qBACA,SAGF1/B,KAAK4/B,uBACH,OACA7K,EAAMM,iBACN,QACA,SACA,WACAN,EAAMI,eAAe,UAGvBn1B,KAAK6/B,iBACH,YACA9K,EAAMM,iBACN,WACAN,EAAMM,iBACN,SACA,UACA,SACA,UACA,WACAN,EAAMoB,oBACN,YACA,SAGFn2B,KAAK8/B,sBACH,WACA/K,EAAMM,iBACN,OACAN,EAAMM,iBACN,oBACAN,EAAMM,iBACN,sBACAN,EAAMM,iBACN,WACAN,EAAMI,eAAen1B,KAAK6/B,iBAC1B,aACA,UACA,cACA,UACA,QACA,SACA,iBACA7/B,KAAKs/B,aACL,kBACAt/B,KAAKs/B,aACL,gBACAt/B,KAAKs/B,aACL,SACAt/B,KAAKw/B,oBACL,kBACA,SAGFx/B,KAAK+/B,eACH,OACAhL,EAAMM,iBACN,QACA,SACA,OACA,UACA,SACA,UACA,SACA,UACA,YACA,UACA,eACA,UACA,cACA,UACA,mBACA,UACA,SACA,UACA,cACA,UACA,cACA,UACA,cACA,UACA,YACA,UACA,UACA,UACA,YACA,UACA,iBACA,UACA,aACA,UACA,aACA,WAGFr1B,KAAKggC,iBACH,OACAjL,EAAMM,iBACN,cACA,UACA,eACA,UACA,QACA,SACA,OACAN,EAAMI,eAAen1B,KAAKk/B,oBAC1B,WACAnK,EAAMI,eAAen1B,KAAK0/B,wBAC1B,WACA,SAGF1/B,KAAKigC,sBACH,kBACAlL,EAAMM,iBACN,cACAN,EAAMM,iBACN,gBACA,UACA,eACA,UACA,kBACA,UACA,OACAN,EAAMI,eAAen1B,KAAKm/B,aAC1B,WACApK,EAAMI,eAAen1B,KAAK2/B,iBAC1B,iBACA5K,EAAMI,eAAen1B,KAAK4/B,uBAC1B,gBACA7K,EAAMI,eAAen1B,KAAK8/B,sBAC1B,SACA/K,EAAMI,eAAen1B,KAAK+/B,eAC1B,WACAhL,EAAMI,eAAen1B,KAAKggC,iBAC1B,oBACAjL,EAAMoB,oBACN,qBACApB,EAAMoB,oBACN,sBACApB,EAAMoB,qBAGRn2B,KAAKkgC,gBACH,OACAnL,EAAMM,iBACN,QACA,SACA,WACAN,EAAMI,eAAe,UAGvBn1B,KAAKmgC,kBACH,WACApL,EAAMM,iBACN,SACAN,EAAMM,iBACN,OACAN,EAAMM,iBACN,aACAN,EAAMM,iBACN,aACAN,EAAMM,iBACN,MACAN,EAAMI,eAAen1B,KAAKi/B,YAC1B,cACAlK,EAAMQ,iBAAiBv1B,KAAKy/B,oBAC5B,WACA1K,EAAMI,eAAen1B,KAAK6/B,iBAC1B,gBACA,UACA,iBACA,UACA,eACA,UACA,aACA,UACA,cACA,UACA,kBACC,KAAM,UAAW,GAClB,aACA,SACA,QACA,SACA,YACA,SACA,QACA7/B,KAAKw/B,oBACL,MACAx/B,KAAKw/B,oBACL,QACAx/B,KAAKw/B,oBACL,UACAx/B,KAAKw/B,oBACL,SACAx/B,KAAKw/B,oBACL,WACAx/B,KAAKw/B,oBACL,eACAx/B,KAAKs/B,aACL,aACAt/B,KAAKs/B,aACL,sBACAt/B,KAAKs/B,aACL,gBACAt/B,KAAKs/B,aACL,cACAt/B,KAAKs/B,aACL,aACAt/B,KAAKs/B,aACL,kBACAt/B,KAAKs/B,aACL,cACA,QACA,kBACA,QACA,kBACA,QACA,WACA,QACA,gBACA,QACA,eACA,QACA,eACA,QACA,iBACA,SAGFt/B,KAAKogC,kBAAoB,OAAQrL,EAAMM,iBAAkB,WAAYN,EAAMoB,qBAE3En2B,KAAKqgC,sBACH,MACAtL,EAAMM,iBACN,MACAN,EAAMM,iBACN,OACA,UACA,OACA,SAGFr1B,KAAKsgC,mBACH,OACAvL,EAAMM,iBACN,gBACAN,EAAMI,eAAen1B,KAAKqgC,uBAG5BrgC,KAAKg3B,OAASh3B,KAAKugC,mBACjB,WACAxL,EAAMM,iBACN,iBACAN,EAAMM,iBACN,WACAN,EAAMM,iBACN,gBACAN,EAAMQ,iBAAiBv1B,KAAKigC,sBAC5B,UACAlL,EAAMI,eAAen1B,KAAKkgC,gBAC1B,YACAnL,EAAMI,eAAen1B,KAAKmgC,kBAC1B,YACApL,EAAMI,eAAen1B,KAAKogC,kBAC1B,aACArL,EAAMI,eAAen1B,KAAKsgC,mBAC1B,QACA,SACA,iBACA,SACA,aACA,UACA,iBACA,UACA,SACA,UACA,mBACA,QACA,oBACA,UAKJE,GAAI,WACFxgC,KAAKygC,YAAc,OAAQ,SAAU,QAAS,SAAU,WAAY1L,EAAMI,eAAe,YAEzFn1B,KAAK0gC,oBACH,OACA3L,EAAMM,iBACN,QACA,SACA,SACA,UACA,MACAN,EAAMI,eAAen1B,KAAKygC,aAG5BzgC,KAAK2gC,aACH,OACA5L,EAAMM,iBACN,QACA,SACA,SACAN,EAAMM,iBACN,cACAN,EAAMQ,iBAAiBv1B,KAAK0gC,qBAG9B1gC,KAAK4gC,sBAAwB,SAAU,UAAW,QAAS,WAE3D5gC,KAAK6gC,iBACH,kBACA9L,EAAMM,iBACN,gBACAN,EAAMI,eAAen1B,KAAK4gC,sBAC1B,aACA,SAGF5gC,KAAK8gC,cAAgB,MAAO,UAAW,MAAO,UAAW,MAAO,SAEhE9gC,KAAK+gC,oBAAsB,OAAQ/gC,KAAK8gC,aAAc,QAAS9gC,KAAK8gC,cAEpE9gC,KAAKghC,qBACH,eACAjM,EAAMQ,iBAAiBv1B,KAAK6gC,iBAC5B,kBACA9L,EAAMQ,iBAAiBv1B,KAAK+gC,oBAC5B,QACA,UACA,OACA,SAGF/gC,KAAKihC,oBACH,UACA,UACA,UACAjhC,KAAKghC,oBACL,WACAhhC,KAAKghC,oBACL,QACAhhC,KAAKghC,oBACL,SACAhhC,KAAKghC,oBACL,WACAhhC,KAAKghC,oBACL,UACAhhC,KAAKghC,oBACL,UACAhhC,KAAKghC,qBAGPhhC,KAAKkhC,wBACH,OACAnM,EAAMM,iBACN,SACA,UACA,eACA,UACA,UACA,UACA,WACA,UACA,eACA,UACA,aACA,UACA,QACA,UAGFr1B,KAAKmhC,iBACH,OACApM,EAAMM,iBACN,kBACAN,EAAMM,iBACN,iBACAN,EAAMM,iBACN,cACAN,EAAMQ,iBAAiBv1B,KAAKihC,oBAC5B,cACAlM,EAAMQ,iBAAiBv1B,KAAKkhC,wBAC5B,eACA,UACA,QACA,SACA,aACA,SACA,qBACA,SAGFlhC,KAAKohC,uBACH,OACArM,EAAMM,iBACN,QACA,SACA,WACAN,EAAMI,eAAe,UAGvBn1B,KAAKqhC,iBACH,YACAtM,EAAMM,iBACN,WACAN,EAAMM,iBACN,SACA,UACA,SACA,UACA,WACAN,EAAMoB,oBACN,YACA,SAGFn2B,KAAKshC,sBACH,WACAvM,EAAMM,iBACN,OACAN,EAAMM,iBACN,oBACAN,EAAMM,iBACN,sBACAN,EAAMM,iBACN,WACAN,EAAMI,eAAen1B,KAAKqhC,iBAC1B,aACA,UACA,cACA,UACA,QACA,SACA,iBACArhC,KAAK8gC,aACL,kBACA9gC,KAAK8gC,aACL,gBACA9gC,KAAK8gC,aACL,SACA9gC,KAAKghC,oBACL,kBACA,SAGFhhC,KAAKuhC,eACH,OACAxM,EAAMM,iBACN,QACA,SACA,OACA,UACA,SACA,UACA,SACA,UACA,YACA,UACA,eACA,UACA,cACA,UACA,mBACA,UACA,SACA,UACA,cACA,UACA,cACA,UACA,cACA,UACA,YACA,UACA,UACA,UACA,YACA,UACA,iBACA,UACA,aACA,UACA,aACA,WAGFr1B,KAAKwhC,iBACH,OACAzM,EAAMM,iBACN,cACA,UACA,eACA,UACA,QACA,SACA,OACAN,EAAMI,eAAen1B,KAAK0gC,oBAC1B,WACA3L,EAAMI,eAAen1B,KAAKkhC,wBAC1B,WACA,SAGFlhC,KAAKyhC,sBACH,kBACA1M,EAAMM,iBACN,cACAN,EAAMM,iBACN,gBACA,UACA,eACA,UACA,kBACA,UACA,OACAN,EAAMI,eAAen1B,KAAK2gC,aAC1B,WACA5L,EAAMI,eAAen1B,KAAKmhC,iBAC1B,iBACApM,EAAMI,eAAen1B,KAAKohC,uBAC1B,gBACArM,EAAMI,eAAen1B,KAAKshC,sBAC1B,SACAvM,EAAMI,eAAen1B,KAAKuhC,eAC1B,WACAxM,EAAMI,eAAen1B,KAAKwhC,iBAC1B,oBACAzM,EAAMoB,oBACN,qBACApB,EAAMoB,oBACN,sBACApB,EAAMoB,qBAGRn2B,KAAK0hC,gBACH,OACA3M,EAAMM,iBACN,QACA,SACA,WACAN,EAAMI,eAAe,UAGvBn1B,KAAK2hC,kBACH,WACA5M,EAAMM,iBACN,SACAN,EAAMM,iBACN,OACAN,EAAMM,iBACN,aACAN,EAAMM,iBACN,aACAN,EAAMM,iBACN,MACAN,EAAMI,eAAen1B,KAAKygC,YAC1B,cACA1L,EAAMQ,iBAAiBv1B,KAAKihC,oBAC5B,WACAlM,EAAMI,eAAen1B,KAAKqhC,iBAC1B,gBACA,UACA,iBACA,UACA,eACA,UACA,aACA,UACA,cACA,UACA,kBACC,KAAM,UAAW,GAClB,aACA,SACA,QACA,SACA,YACA,SACA,QACArhC,KAAKghC,oBACL,MACAhhC,KAAKghC,oBACL,QACAhhC,KAAKgh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,YACA,UACA,eACA,UACA,cACA,UACA,mBACA,UACA,SACA,UACA,cACA,UACA,cACA,UACA,cACA,UACA,YACA,UACA,UACA,UACA,YACA,UACA,iBACA,UACA,aACA,UACA,aACA,WAGFr1B,KAAKgjC,iBACH,OACAjO,EAAMM,iBACN,cACA,UACA,eACA,UACA,QACA,SACA,OACAN,EAAMI,eAAen1B,KAAKkiC,oBAC1B,WACAnN,EAAMI,eAAen1B,KAAK0iC,wBAC1B,WACA,SAGF1iC,KAAKijC,sBACH,kBACAlO,EAAMM,iBACN,cACAN,EAAMM,iBACN,gBACA,UACA,eACA,UACA,kBACA,UACA,OACAN,EAAMI,eAAen1B,KAAKmiC,aAC1B,WACApN,EAAMI,eAAen1B,KAAK2iC,iBAC1B,iBACA5N,EAAMI,eAAen1B,KAAK4iC,uBAC1B,gBACA7N,EAAMI,eAAen1B,KAAK8iC,sBAC1B,SACA/N,EAAMI,eAAen1B,KAAK+iC,eAC1B,WACAhO,EAAMI,eAAen1B,KAAKgjC,iBAC1B,oBACAjO,EAAMoB,oBACN,qBACApB,EAAMoB,oBACN,sBACApB,EAAMoB,qBAGRn2B,KAAKkjC,gBACH,OACAnO,EAAMM,iBACN,QACA,SACA,WACAN,EAAMI,eAAe,UAGvBn1B,KAAKmjC,kBACH,WACApO,EAAMM,iBACN,SACAN,EAAMM,iBACN,OACAN,EAAMM,iBACN,aACAN,EAAMM,iBACN,aACAN,EAAMM,iBACN,MACAN,EAAMI,eAAen1B,KAAKiiC,YAC1B,cACAlN,EAAMQ,iBAAiBv1B,KAAKyiC,oBAC5B,WACA1N,EAAMI,eAAen1B,KAAK6iC,iBAC1B,gBACA,UACA,iBACA,UACA,eACA,UACA,aACA,UACA,cACA,UACA,kBACC,KAAM,UAAW,GAClB,aACA,SACA,QACA,SACA,YACA,SACA,QACA7iC,KAAKwiC,oBACL,MACAxiC,KAAKwiC,oBACL,QACAxiC,KAAKwiC,oBACL,UACAxiC,KAAKwiC,oBACL,SACAxiC,KAAKwiC,oBACL,WACAxiC,KAAKwiC,oBACL,eACAxiC,KAAKsiC,aACL,aACAtiC,KAAKsiC,aACL,sBACAtiC,KAAKsiC,aACL,gBACAtiC,KAAKsiC,aACL,cACAtiC,KAAKsiC,aACL,aACAtiC,KAAKsiC,aACL,kBACAtiC,KAAKsiC,aACL,cACA,QACA,kBACA,QACA,kBACA,QACA,WACA,QACA,gBACA,QACA,eACA,QACA,eACA,QACA,iBACA,SAGFtiC,KAAKojC,kBAAoB,OAAQrO,EAAMM,iBAAkB,WAAYN,EAAMoB,qBAE3En2B,KAAKqjC,sBACH,MACAtO,EAAMM,iBACN,MACAN,EAAMM,iBACN,OACA,UACA,OACA,SAGFr1B,KAAKsjC,mBACH,OACAvO,EAAMM,iBACN,gBACAN,EAAMI,eAAen1B,KAAKqjC,uBAG5BrjC,KAAKg3B,OAASh3B,KAAKujC,mBACjB,WACAxO,EAAMM,iBACN,iBACAN,EAAMM,iBACN,WACAN,EAAMM,iBACN,gBACAN,EAAMQ,iBAAiBv1B,KAAKijC,sBAC5B,UACAlO,EAAMI,eAAen1B,KAAKkjC,gBAC1B,YACAnO,EAAMI,eAAen1B,KAAKmjC,kBAC1B,YACApO,EAAMI,eAAen1B,KAAKojC,kBAC1B,aACArO,EAAMI,eAAen1B,KAAKsjC,mBAC1B,QACA,SACA,iBACA,SACA,aACA,UACA,iBACA,UACA,SACA,UACA,mBACA,UAKJE,GAAI,WACFxjC,KAAKyjC,YAAc,OAAQ,SAAU,QAAS,SAAU,WAAY1O,EAAMI,eAAe,YAEzFn1B,KAAK0jC,oBACH,OACA3O,EAAMM,iBACN,QACA,SACA,SACA,UACA,MACAN,EAAMI,eAAen1B,KAAKyjC,aAG5BzjC,KAAK2jC,aACH,OACA5O,EAAMM,iBACN,QACA,SACA,SACAN,EAAMM,iBACN,cACAN,EAAMQ,iBAAiBv1B,KAAK0jC,qBAG9B1jC,KAAK4jC,sBAAwB,SAAU,UAAW,QAAS,WAE3D5jC,KAAK6jC,iBACH,kBACA9O,EAAMM,iBACN,gBACAN,EAAMI,eAAen1B,KAAK4jC,sBAC1B,aACA,SAGF5jC,KAAK8jC,cAAgB,MAAO,UAAW,MAAO,UAAW,MAAO,SAEhE9jC,KAAK+jC,oBAAsB,OAAQ/jC,KAAK8jC,aAAc,QAAS9jC,KAAK8jC,cAEpE9jC,KAAKgkC,qBACH,eACAjP,EAAMQ,iBAAiBv1B,KAAK6jC,iBAC5B,kBACA9O,EAAMQ,iBAAiBv1B,KAAK+jC,oBAC5B,QACA,UACA,OACA,SAGF/jC,KAAKikC,oBACH,UACA,UACA,UACAjkC,KAAKgkC,oBACL,QACAhkC,KAAKgkC,oBACL,SACAhkC,KAAKgkC,oBACL,WACAhkC,KAAKgkC,oBACL,UACAhkC,KAAKgkC,oBACL,UACAhkC,KAAKgkC,qBAGPhkC,KAAKkkC,wBACH,OACAnP,EAAMM,iBACN,SACA,UACA,eACA,UACA,UACA,UACA,eACA,UACA,aACA,UACA,QACA,UAGFr1B,KAAKmkC,iBACH,OACApP,EAAMM,iBACN,kBACAN,EAAMM,iBACN,iBACAN,EAAMM,iBACN,cACAN,EAAMQ,iBAAiBv1B,KAAKikC,oBAC5B,cACAlP,EAAMQ,iBAAiBv1B,KAAKkkC,wBAC5B,eACA,UACA,QACA,SACA,aACA,SACA,qBACA,SAGFlkC,KAAKokC,eACH,OACArP,EAAMM,iBACN,QACA,SACA,OACA,UACA,SACA,UACA,SACA,UACA,YACA,UACA,eACA,UACA,cACA,UACA,mBACA,UACA,SACA,UACA,cACA,UACA,cACA,UACA,cACA,UACA,YACA,UACA,UACA,UACA,YACA,UACA,iBACA,UACA,aACA,UACA,aACA,WAGFr1B,KAAKqkC,iBACH,OACAtP,EAAMM,iBACN,cACA,UACA,eACA,UACA,QACA,SACA,OACAN,EAAMI,eAAen1B,KAAK0jC,oBAC1B,WACA3O,EAAMI,eAAen1B,KAAKkkC,wBAC1B,WACA,SAGFlkC,KAAKskC,sBACH,kBACAvP,EAAMM,iBACN,cACAN,EAAMM,iBACN,gBACA,UACA,eACA,UACA,kBACA,UACA,OACAN,EAAMI,eAAen1B,KAAK2jC,aAC1B,WACA5O,EAAMI,eAAen1B,KAAKmkC,iBAC1B,SACApP,EAAMI,eAAen1B,KAAKokC,eAC1B,WACArP,EAAMI,eAAen1B,KAAKqkC,iBAC1B,oBACAtP,EAAMoB,oBACN,qBACApB,EAAMoB,oBACN,sBACApB,EAAMoB,qBAGRn2B,KAAKukC,gBACH,OACAxP,EAAMM,iBACN,QACA,SACA,WACAN,EAAMI,eAAe,UAGvBn1B,KAAKwkC,iBACH,WACAzP,EAAMM,iBACN,SACA,UACA,WACAN,EAAMoB,oBACN,YACA,SAGFn2B,KAAKykC,kBACH,WACA1P,EAAMM,iBACN,SACAN,EAAMM,iBACN,OACAN,EAAMM,iBACN,aACAN,EAAMM,iBACN,aACAN,EAAMM,iBACN,MACAN,EAAMI,eAAen1B,KAAKyjC,YAC1B,cACA1O,EAAMQ,iBAAiBv1B,KAAKikC,oBAC5B,WACAlP,EAAMI,eAAen1B,KAAKwkC,iBAC1B,gBACA,UACA,iBACA,UACA,eACA,UACA,aACA,UACA,cACA,UACA,kBACC,KAAM,UAAW,GAClB,aACA,SACA,QACA,SACA,YACA,SACA,QACAxkC,KAAKgkC,oBACL,MACAhkC,KAAKgkC,oBACL,QACAhkC,KAAKgkC,oBACL,UACAhkC,KAAKgkC,oBACL,SACAhkC,KAAKgkC,oBACL,WACAhkC,KAAKgkC,oBACL,eACAhkC,KAAK8jC,aACL,aACA9jC,KAAK8jC,aACL,sBACA9jC,KAAK8jC,aACL,gBACA9jC,KAAK8jC,aACL,cACA9jC,KAAK8jC,aACL,aACA9jC,KAAK8jC,aACL,kBACA9jC,KAAK8jC,aACL,cACA,QACA,kBACA,QACA,kBACA,QACA,WACA,QACA,gBACA,QACA,eACA,QACA,eACA,QACA,iBACA,SAGF9jC,KAAK0kC,kBAAoB,OAAQ3P,EAAMM,iBAAkB,WAAYN,EAAMoB,qBAE3En2B,KAAK2kC,sBACH,MACA5P,EAAMM,iBACN,MACAN,EAAMM,iBACN,OACA,UACA,OACA,SAGFr1B,KAAK4kC,mBACH,OACA7P,EAAMM,iBACN,gBACAN,EAAMI,eAAen1B,KAAK2kC,uBAG5B3kC,KAAKg3B,OAASh3B,KAAK6kC,mBACjB,WACA9P,EAAMM,iBACN,iBACAN,EAAMM,iBACN,WACAN,EAAMM,iBACN,gBACAN,EAAMQ,iBAAiBv1B,KAAKskC,sBAC5B,UACAvP,EAAMI,eAAen1B,KAAKukC,gBAC1B,YACAxP,EAAMI,eAAen1B,KAAKykC,kBAC1B,YACA1P,EAAMI,eAAen1B,KAAK0kC,kBAC1B,aACA3P,EAAMI,eAAen1B,KAAK4kC,mBAC1B,QACA,SACA,iBACA,SACA,aACA,UACA,iBACA,UACA,SACA,UACA,mBACA,UAKJE,GAAI,WACF9kC,KAAK+kC,YAAc,OAAQ,SAAU,QAAS,SAAU,WAAYhQ,EAAMI,eAAe,YAEzFn1B,KAAKglC,oBACH,OACAjQ,EAAMM,iBACN,QACA,SACA,SACA,UACA,MACAN,EAAMI,eAAen1B,KAAK+kC,aAG5B/kC,KAAKilC,aACH,OACAlQ,EAAMM,iBACN,QACA,SACA,SACAN,EAAMM,iBACN,cACAN,EAAMQ,iBAAiBv1B,KAAKglC,qBAG9BhlC,KAAKklC,sBAAwB,SAAU,UAAW,QAAS,WAE3DllC,KAAKmlC,iBACH,kBACApQ,EAAMM,iBACN,gBACAN,EAAMI,eAAen1B,KAAKklC,sBAC1B,aACA,SAGFllC,KAAKolC,cAAgB,MAAO,UAAW,MAAO,UAAW,MAAO,SAEhEplC,KAAKqlC,oBAAsB,OAAQrlC,KAAKolC,aAAc,QAASplC,KAAKolC,cAEpEplC,KAAKslC,qBACH,eACAvQ,EAAMQ,iBAAiBv1B,KAAKmlC,iBAC5B,kBACApQ,EAAMQ,iBAAiBv1B,KAAKqlC,oBAC5B,QACA,UACA,OACA,SAGFrlC,KAAKulC,oBACH,UACA,UACA,UACAvlC,KAAKslC,oBACL,QACAtlC,KAAKslC,oBACL,SACAtlC,KAAKslC,oBACL,WACAtlC,KAAKslC,oBACL,UACAtlC,KAAKslC,oBACL,UACAtlC,KAAKslC,qBAGPtlC,KAAKwlC,wBACH,OACAzQ,EAAMM,iBACN,SACA,UACA,eACA,UACA,UACA,UACA,eACA,UACA,aACA,UACA,QACA,UAGFr1B,KAAKylC,iBACH,OACA1Q,EAAMM,iBACN,kBACAN,EAAMM,iBACN,iBACAN,EAAMM,iBACN,cACAN,EAAMQ,iBAAiBv1B,KAAKulC,oBAC5B,cACAxQ,EAAMQ,iBAAiBv1B,KAAKwlC,wBAC5B,eACA,UACA,QACA,SACA,aACA,SACA,qBACA,SAGFxlC,KAAK0lC,eACH,OACA3Q,EAAMM,iBACN,QACA,SACA,OACA,UACA,SACA,UACA,SACA,UACA,YACA,UACA,eACA,UACA,cACA,UACA,mBACA,UACA,SACA,UACA,cACA,UACA,cACA,UACA,cACA,UACA,YACA,UACA,UACA,UACA,YACA,UACA,iBACA,UACA,aACA,UACA,aACA,WAGFr1B,KAAK2lC,iBACH,OACA5Q,EAAMM,iBACN,cACA,UACA,eACA,UACA,QACA,SACA,OACAN,EAAMI,eAAen1B,KAAKglC,oBAC1B,WACAjQ,EAAMI,eAAen1B,KAAKwlC,wBAC1B,WACA,SAGFxlC,KAAK4lC,sBACH,kBACA7Q,EAAMM,iBACN,cACAN,EAAMM,iBACN,gBACA,UACA,eACA,UACA,kBACA,UACA,OACAN,EAAMI,eAAen1B,KAAKilC,aAC1B,WACAlQ,EAAMI,eAAen1B,KAAKylC,iBAC1B,SACA1Q,EAAMI,eAAen1B,KAAK0lC,eAC1B,WACA3Q,EAAMI,eAAen1B,KAAK2lC,iBAC1B,oBACA5Q,EAAMoB,oBACN,qBACApB,EAAMoB,oBACN,sBACApB,EAAMoB,qBAGRn2B,KAAK6lC,gBACH,OACA9Q,EAAMM,iBACN,QACA,SACA,WACAN,EAAMI,eAAe,UAGvBn1B,KAAK8lC,iBACH,WACA/Q,EAAMM,iBACN,SACA,UACA,WACAN,EAAMoB,oBACN,YACA,SAGFn2B,KAAK+lC,kBACH,WACAhR,EAAMM,iBACN,SACAN,EAAMM,iBACN,OACAN,EAAMM,iBACN,aACAN,EAAMM,iBACN,aACAN,EAAMM,iBACN,MACAN,EAAMI,eAAen1B,KAAK+kC,YAC1B,cACAhQ,EAAMQ,iBAAiBv1B,KAAKulC,oBAC5B,WACAxQ,EAAMI,eAAen1B,KAAK8lC,iBAC1B,gBACA,UACA,iBACA,UACA,eACA,UACA,aACA,UACA,cACA,UACA,kBACC,KAAM,UAAW,GAClB,aACA,SACA,QACA,SACA,YACA,SACA,QACA9lC,KAAKslC,oBACL,MACAtlC,KAAKslC,oBACL,QACAtlC,KAAKslC,oBACL,UACAtlC,KAAKslC,oBACL,SACAtlC,KAAKslC,oBACL,WACAtlC,KAAKslC,oBACL,eACAtlC,KAAKolC,aACL,aACAplC,KAAKolC,aACL,sBACAplC,KAAKolC,aACL,gBACAplC,KAAKolC,aACL,cACAplC,KAAKolC,aACL,aACAplC,KAAKolC,aACL,kBACAplC,KAAKolC,aACL,cACA,QACA,kBACA,QACA,kBACA,QACA,WACA,QACA,gBACA,QACA,eACA,QACA,eACA,QACA,iBACA,SAGFplC,KAAKgmC,kBAAoB,OAAQjR,EAAMM,iBAAkB,WAAYN,EAAMoB,qBAE3En2B,KAAKimC,sBACH,MACAlR,EAAMM,iBACN,MACAN,EAAMM,iBACN,OACA,UACA,OACA,SAGFr1B,KAAKkmC,mBACH,OACAnR,EAAMM,iBACN,gBACAN,EAAMI,eAAen1B,KAAKimC,uBAG5BjmC,KAAKg3B,OAASh3B,KAAKmmC,mBACjB,WACApR,EAAMM,iBACN,iBACAN,EAAMM,iBACN,gBACAN,EAAMQ,iBAAiBv1B,KAAK4lC,sBAC5B,UACA7Q,EAAMI,eAAen1B,KAAK6lC,gBAC1B,YACA9Q,EAAMI,eAAen1B,KAAK+lC,kBAC1B,YACAhR,EAAMI,eAAen1B,KAAKgmC,kBAC1B,aACAjR,EAAMI,eAAen1B,KAAKkmC,mBAC1B,QACA,SACA,iBACA,SACA,aACA,UACA,iBACA,UACA,SACA,UACA,mBACA,UAKJE,GAAI,WACFpmC,KAAKqmC,YAAc,OAAQ,SAAU,QAAS,SAAU,WAAYtR,EAAMI,eAAe,YAEzFn1B,KAAKsmC,oBACH,OACAvR,EAAMM,iBACN,QACA,SACA,SACA,UACA,MACAN,EAAMI,eAAen1B,KAAKqmC,aAG5BrmC,KAAKumC,aACH,OACAxR,EAAMM,iBACN,QACA,SACA,SACAN,EAAMM,iBACN,cACAN,EAAMQ,iBAAiBv1B,KAAKsmC,qBAG9BtmC,KAAKwmC,sBAAwB,SAAU,UAAW,QAAS,WAE3DxmC,KAAKymC,iBACH,kBACA1R,EAAMM,iBACN,gBACAN,EAAMI,eAAen1B,KAAKwmC,sBAC1B,aACA,SAGFxmC,KAAK0mC,cAAgB,MAAO,UAAW,MAAO,UAAW,MAAO,SAEhE1mC,KAAK2mC,oBAAsB,OAAQ3mC,KAAK0mC,aAAc,QAAS1mC,KAAK0mC,cAEpE1mC,KAAK4mC,qBACH,eACA7R,EAAMQ,iBAAiBv1B,KAAKymC,iBAC5B,kBACA1R,EAAMQ,iBAAiBv1B,KAAK2mC,oBAC5B,QACA,UACA,OACA,SAGF3mC,KAAK6mC,oBACH,UACA,UACA,UACA7mC,KAAK4mC,oBACL,QACA5mC,KAAK4mC,oBACL,SACA5mC,KAAK4mC,oBACL,WACA5mC,KAAK4mC,oBACL,UACA5mC,KAAK4mC,oBACL,UACA5mC,KAAK4mC,qBAGP5mC,KAAK8mC,wBACH,OACA/R,EAAMM,iBACN,SACA,UACA,eACA,UACA,UACA,UACA,eACA,UACA,aACA,UACA,QACA,UAGFr1B,KAAK+mC,iBACH,OACAhS,EAAMM,iBACN,kBACAN,EAAMM,iBACN,iBACAN,EAAMM,iBACN,cACAN,EAAMQ,iBAAiBv1B,KAAK6mC,oBAC5B,cACA9R,EAAMQ,iBAAiBv1B,KAAK8mC,wBAC5B,eACA,UACA,QACA,SACA,aACA,SACA,qBACA,SAGF9mC,KAAKgnC,eACH,OACAjS,EAAMM,iBACN,QACA,SACA,OACA,UACA,SACA,UACA,SACA,UACA,YACA,UACA,eACA,UACA,cACA,UACA,mBACA,UACA,SACA,UACA,cACA,UACA,cACA,UACA,cACA,UACA,YACA,UACA,UACA,UACA,YACA,UACA,iBACA,UACA,aACA,UACA,aACA,WAGFr1B,KAAKinC,iBACH,OACAlS,EAAMM,iBACN,cACA,UACA,eACA,UACA,QACA,SACA,OACAN,EAAMI,eAAen1B,KAAKsmC,oBAC1B,WACAvR,EAAMI,eAAen1B,KAAK8mC,yBAG5B9mC,KAAKknC,sBACH,kBACAnS,EAAMM,iBACN,cACAN,EAAMM,iBACN,gBACA,UACA,eACA,UACA,kBACA,UACA,OACAN,EAAMI,eAAen1B,KAAKumC,aAC1B,WACAxR,EAAMI,eAAen1B,KAAK+mC,iBAC1B,SACAhS,EAAMI,eAAen1B,KAAKgnC,eAC1B,WACAjS,EAAMI,eAAen1B,KAAKinC,iBAC1B,oBACAlS,EAAMoB,oBACN,qBACApB,EAAMoB,oBACN,sBACApB,EAAMoB,qBAGRn2B,KAAKmnC,gBACH,OACApS,EAAMM,iBACN,QACA,SACA,WACAN,EAAMI,eAAe,UAGvBn1B,KAAKonC,iBACH,WACArS,EAAMM,iBACN,SACA,UACA,WACAN,EAAMoB,oBACN,YACA,SAGFn2B,KAAKqnC,kBACH,WACAtS,EAAMM,iBACN,SACAN,EAAMM,iBACN,OACAN,EAAMM,iBACN,aACAN,EAAMM,iBACN,aACAN,EAAMM,iBACN,MACAN,EAAMI,eAAen1B,KAAKqmC,YAC1B,cACAtR,EAAMQ,iBAAiBv1B,KAAK6mC,oBAC5B,WACA9R,EAAMI,eAAen1B,KAAKonC,iBAC1B,gBACA,UACA,iBACA,UACA,eACA,UACA,aACA,UACA,cACA,UACA,kBACC,KAAM,UAAW,GAClB,aACA,SACA,QACA,SACA,YACA,SACA,QACApnC,KAAK4mC,oBACL,MACA5mC,KAAK4mC,oBACL,QACA5mC,KAAK4mC,oBACL,UACA5mC,KAAK4mC,oBACL,SACA5mC,KAAK4mC,oBACL,WACA5mC,KAAK4mC,oBACL,eACA5mC,KAAK0mC,aACL,aACA1mC,KAAK0mC,aACL,sBACA1mC,KAAK0mC,aACL,gBACA1mC,KAAK0mC,aACL,cACA1mC,KAAK0mC,aACL,aACA1mC,KAAK0mC,aACL,kBACA1mC,KAAK0mC,aACL,cACA,QACA,kBACA,QACA,kBACA,QACA,WACA,QACA,gBACA,QACA,eACA,QACA,eACA,QACA,iBACA,SAGF1mC,KAAKsnC,kBAAoB,OAAQvS,EAAMM,iBAAkB,WAAYN,EAAMoB,qBAE3En2B,KAAKunC,sBACH,MACAxS,EAAMM,iBACN,MACAN,EAAMM,iBACN,OACA,UACA,OACA,SAGFr1B,KAAKwnC,mBACH,OACAzS,EAAMM,iBACN,gBACAN,EAAMI,eAAen1B,KAAKunC,uBAG5BvnC,KAAKg3B,OAASh3B,KAAKynC,mBACjB,WACA1S,EAAMM,iBACN,iBACAN,EAAMM,iBACN,gBACAN,EAAMQ,iBAAiBv1B,KAAKknC,sBAC5B,UACAnS,EAAMI,eAAen1B,KAAKmnC,gBAC1B,YACApS,EAAMI,eAAen1B,KAAKqnC,kBAC1B,YACAtS,EAAMI,eAAen1B,KAAKsnC,kBAC1B,aACAvS,EAAMI,eAAen1B,KAAKwnC,mBAC1B,QACA,SACA,iBACA,SACA,aACA,UACA,iBACA,UACA,SACA,UACA,mBACA,UAKJE,GAAI,WACF1nC,KAAK2nC,YAAc,OAAQ,SAAU,QAAS,SAAU,WAAY5S,EAAMI,eAAe,YAEzFn1B,KAAK4nC,oBACH,OACA7S,EAAMM,iBACN,QACA,SACA,SACA,UACA,MACAN,EAAMI,eAAen1B,KAAK2nC,aAG5B3nC,KAAK6nC,aACH,OACA9S,EAAMM,iBACN,QACA,SACA,SACAN,EAAMM,iBACN,cACAN,EAAMQ,iBAAiBv1B,KAAK4nC,qBAG9B5nC,KAAK8nC,sBAAwB,SAAU,UAAW,QAAS,WAE3D9nC,KAAK+nC,iBACH,kBACAhT,EAAMM,iBACN,gBACAN,EAAMI,eAAen1B,KAAK8nC,sBAC1B,aACA,SAGF9nC,KAAKgoC,cAAgB,MAAO,UAAW,MAAO,UAAW,MAAO,SAEhEhoC,KAAKioC,oBAAsB,OAAQjoC,KAAKgoC,aAAc,QAAShoC,KAAKgoC,cAEpEhoC,KAAKkoC,qBACH,eACAnT,EAAMQ,iBAAiBv1B,KAAK+nC,iBAC5B,kBACAhT,EAAMQ,iBAAiBv1B,KAAKioC,oBAC5B,QACA,UACA,OACA,SAGFjoC,KAAKmoC,oBACH,UACA,UACA,UACAnoC,KAAKkoC,oBACL,QACAloC,KAAKkoC,oBACL,SACAloC,KAAKkoC,oBACL,WACAloC,KAAKkoC,oBACL,UACAloC,KAAKkoC,oBACL,UACAloC,KAAKkoC,qBAGPloC,KAAKooC,wBACH,OACArT,EAAMM,iBACN,SACA,UACA,eACA,UACA,UACA,UACA,eACA,UACA,aACA,UACA,QACA,UAGFr1B,KAAKqoC,iBACH,OACAtT,EAAMM,iBACN,kBACAN,EAAMM,iBACN,iBACAN,EAAMM,iBACN,cACAN,EAAMQ,iBAAiBv1B,KAAKmoC,oBAC5B,cACApT,EAAMQ,iBAAiBv1B,KAAKooC,wBAC5B,eACA,UACA,QACA,SACA,aACA,SACA,qBACA,SAGFpoC,KAAKsoC,eACH,OACAvT,EAAMM,iBACN,QACA,SACA,OACA,UACA,SACA,UACA,SACA,UACA,YACA,UACA,eACA,UACA,cACA,UACA,mBACA,UACA,SACA,UACA,cACA,UACA,cACA,UACA,cACA,UACA,YACA,UACA,UACA,UACA,YACA,UACA,iBACA,UACA,aACA,UACA,aACA,WAGFr1B,KAAKuoC,iBACH,OACAxT,EAAMM,iBACN,cACA,UACA,eACA,UACA,QACA,SACA,OACAN,EAAMI,eAAen1B,KAAK4nC,oBAC1B,WACA7S,EAAMI,eAAen1B,KAAKooC,yBAG5BpoC,KAAKwoC,sBACH,kBACAzT,EAAMM,iBACN,cACAN,EAAMM,iBACN,gBACA,UACA,eACA,UACA,kBACA,UACA,OACAN,EAAMI,eAAen1B,KAAK6nC,aAC1B,WACA9S,EAAMI,eAAen1B,KAAKqoC,iBAC1B,SACAtT,EAAMI,eAAen1B,KAAKsoC,eAC1B,WACAvT,EAAMI,eAAen1B,KAAKuoC,iBAC1B,oBACAxT,EAAMoB,oBACN,qBACApB,EAAMoB,oBACN,sBACApB,EAAMoB,qBAGRn2B,KAAKyoC,gBACH,OACA1T,EAAMM,iBACN,QACA,SACA,WACAN,EAAMI,eAAe,UAGvBn1B,KAAK0oC,iBACH,WACA3T,EAAMM,iBACN,SACA,UACA,WACAN,EAAMoB,oBACN,YACA,SAGFn2B,KAAK2oC,kBACH,WACA5T,EAAMM,iBACN,SACAN,EAAMM,iBACN,OACAN,EAAMM,iBACN,aACAN,EAAMM,iBACN,aACAN,EAAMM,iBACN,MACAN,EAAMI,eAAen1B,KAAK2nC,YAC1B,cACA5S,EAAMQ,iBAAiBv1B,KAAKmoC,oBAC5B,WACApT,EAAMI,eAAen1B,KAAK0oC,iBAC1B,gBACA,UACA,iBACA,UACA,eACA,UACA,aACA,UACA,cACA,UACA,kBACC,KAAM,UAAW,GAClB,aACA,SACA,QACA,SACA,YACA,SACA,QACA1oC,KAAKkoC,oBACL,MACAloC,KAAKkoC,oBACL,QACAloC,KAAKkoC,oBACL,UACAloC,KAAKkoC,oBACL,SACAloC,KAAKkoC,oBACL,WACAloC,KAAKkoC,oBACL,eACAloC,KAAKgoC,aACL,aACAhoC,KAAKgoC,aACL,sBACAhoC,KAAKgoC,aACL,gBACAhoC,KAAKgoC,aACL,cACAhoC,KAAKgoC,aACL,aACAhoC,KAAKgoC,aACL,kBACAhoC,KAAKgoC,aACL,cACA,QACA,kBACA,QACA,kBACA,QACA,WACA,QACA,gBACA,QACA,eACA,QACA,eACA,QACA,iBACA,SAGFhoC,KAAK4oC,kBAAoB,OAAQ7T,EAAMM,iBAAkB,WAAYN,EAAMoB,qBAE3En2B,KAAK6oC,sBACH,MACA9T,EAAMM,iBACN,MACAN,EAAMM,iBACN,OACA,UACA,OACA,SAGFr1B,KAAK8oC,mBACH,OACA/T,EAAMM,iBACN,gBACAN,EAAMI,eAAen1B,KAAK6oC,uBAG5B7oC,KAAKg3B,OAASh3B,KAAK+oC,mBACjB,WACAhU,EAAMM,iBACN,iBACAN,EAAMM,iBACN,gBACAN,EAAMQ,iBAAiBv1B,KAAKwoC,sBAC5B,UACAzT,EAAMI,eAAen1B,KAAKyoC,gBAC1B,YACA1T,EAAMI,eAAen1B,KAAK2oC,kBAC1B,YACA5T,EAAMI,eAAen1B,KAAK4oC,kBAC1B,aACA7T,EAAMI,eAAen1B,KAAK8oC,mBAC1B,QACA,SACA,iBACA,SACA,aACA,UACA,iBACA,UACA,SACA,UACA,mBACA,UAKJE,GAAI,WACFhpC,KAAKipC,YAAc,OAAQ,SAAU,QAAS,SAAU,WAAYlU,EAAMI,eAAe,YAEzFn1B,KAAKkpC,oBACH,OACAnU,EAAMM,iBACN,QACA,SACA,SACA,UACA,MACAN,EAAMI,eAAen1B,KAAKipC,aAG5BjpC,KAAKmpC,aACH,OACApU,EAAMM,iBACN,QACA,SACA,SACAN,EAAMM,iBACN,cACAN,EAAMQ,iBAAiBv1B,KAAKkpC,qBAG9BlpC,KAAKopC,sBAAwB,SAAU,UAAW,QAAS,WAE3DppC,KAAKqpC,iBACH,kBACAtU,EAAMM,iBACN,gBACAN,EAAMI,eAAen1B,KAAKopC,sBAC1B,aACA,SAGFppC,KAAKspC,cAAgB,MAAO,UAAW,MAAO,UAAW,MAAO,SAEhEtpC,KAAKupC,oBAAsB,OAAQvpC,KAAKspC,aAAc,QAAStpC,KAAKspC,cAEpEtpC,KAAKwpC,qBACH,eACAzU,EAAMQ,iBAAiBv1B,KAAKqpC,iBAC5B,kBACAtU,EAAMQ,iBAAiBv1B,KAAKupC,oBAC5B,QACA,UACA,OACA,SAGFvpC,KAAKypC,oBACH,UACA,UACA,UACAzpC,KAAKwpC,oBACL,QACAxpC,KAAKwpC,oBACL,SACAxpC,KAAKwpC,oBACL,WACAxpC,KAAKwpC,oBACL,UACAxpC,KAAKwpC,oBACL,UACAxpC,KAAKwpC,qBAGPxpC,KAAK0pC,wBACH,OACA3U,EAAMM,iBACN,SACA,UACA,eACA,UACA,UACA,UACA,eACA,UACA,aACA,UACA,QACA,UAGFr1B,KAAK2pC,iBACH,OACA5U,EAAMM,iBACN,kBACAN,EAAMM,iBACN,iBACAN,EAAMM,iBACN,cACAN,EAAMQ,iBAAiBv1B,KAAKypC,oBAC5B,cACA1U,EAAMQ,iBAAiBv1B,KAAK0pC,wBAC5B,eACA,UACA,QACA,SACA,aACA,SACA,qBACA,SAGF1pC,KAAK4pC,eACH,OACA7U,EAAMM,iBACN,QACA,SACA,OACA,UACA,SACA,UACA,SACA,UACA,YACA,UACA,eACA,UACA,cACA,UACA,mBACA,UACA,SACA,UACA,cACA,UACA,cACA,UACA,cACA,UACA,YACA,UACA,UACA,UACA,YACA,UACA,iBACA,UACA,aACA,UACA,aACA,WAGFr1B,KAAK6pC,iBACH,OACA9U,EAAMM,iBACN,cACA,UACA,eACA,UACA,QACA,SACA,OACAN,EAAMI,eAAen1B,KAAKkpC,oBAC1B,WACAnU,EAAMI,eAAen1B,KAAK0pC,yBAG5B1pC,KAAK8pC,sBACH,kBACA/U,EAAMM,iBACN,cACAN,EAAMM,iBACN,gBACA,UACA,eACA,UACA,kBACA,UACA,OACAN,EAAMI,eAAen1B,KAAKmpC,aAC1B,WACApU,EAAMI,eAAen1B,KAAK2pC,iBAC1B,SACA5U,EAAMI,eAAen1B,KAAK4pC,eAC1B,WACA7U,EAAMI,eAAen1B,KAAK6pC,iBAC1B,oBACA9U,EAAMoB,oBACN,qBACApB,EAAMoB,oBACN,sBACApB,EAAMoB,qBAGRn2B,KAAK+pC,gBACH,OACAhV,EAAMM,iBACN,QACA,SACA,WACAN,EAAMI,eAAe,UAGvBn1B,KAAKgqC,iBACH,WACAjV,EAAMM,iBACN,SACA,UACA,WACAN,EAAMoB,oBACN,YACA,SAGFn2B,KAAKiqC,kBACH,WACAlV,EAAMM,iBACN,SACAN,EAAMM,iBACN,OACAN,EAAMM,iBACN,aACAN,EAAMM,iBACN,aACAN,EAAMM,iBACN,MACAN,EAAMI,eAAen1B,KAAKipC,YAC1B,cACAlU,EAAMQ,iBAAiBv1B,KAAKypC,oBAC5B,WACA1U,EAAMI,eAAen1B,KAAKgqC,iBAC1B,eACA,UACA,aACA,UACA,cACA,UACA,kBACC,KAAM,UAAW,GAClB,QACA,SACA,YACA,SACA,QACAhqC,KAAKwpC,oBACL,MACAxpC,KAAKwpC,oBACL,QACAxpC,KAAKwpC,oBACL,UACAxpC,KAAKwpC,oBACL,SACAxpC,KAAKwpC,oBACL,WACAxpC,KAAKwpC,oBACL,eACAxpC,KAAKspC,aACL,aACAtpC,KAAKspC,aACL,sBACAtpC,KAAKspC,aACL,gBACAtpC,KAAKspC,aACL,cACAtpC,KAAKspC,aACL,aACAtpC,KAAKspC,aACL,kBACAtpC,KAAKspC,aACL,cACA,QACA,kBACA,QACA,kBACA,QACA,WACA,QACA,gBACA,QACA,eACA,QACA,eACA,QACA,iBACA,SAGFtpC,KAAKkqC,kBAAoB,OAAQnV,EAAMM,iBAAkB,WAAYN,EAAMoB,qBAE3En2B,KAAKmqC,sBACH,MACApV,EAAMM,iBACN,MACAN,EAAMM,iBACN,OACA,UACA,OACA,SAGFr1B,KAAKoqC,mBACH,OACArV,EAAMM,iBACN,gBACAN,EAAMI,eAAen1B,KAAKmqC,uBAG5BnqC,KAAKg3B,OAASh3B,KAAKqqC,mBACjB,WACAtV,EAAMM,iBACN,iBACAN,EAAMM,iBACN,gBACAN,EAAMQ,iBAAiBv1B,KAAK8pC,sBAC5B,UACA/U,EAAMI,eAAen1B,KAAK+pC,gBAC1B,YACAhV,EAAMI,eAAen1B,KAAKiqC,kBAC1B,YACAlV,EAAMI,eAAen1B,KAAKkqC,kBAC1B,aACAnV,EAAMI,eAAen1B,KAAKoqC,mBAC1B,QACA,SACA,iBACA,SACA,aACA,UACA,iBACA,UACA,SACA,UACA,mBACA,UAKJE,GAAI,WACFtqC,KAAKuqC,YAAc,OAAQ,SAAU,QAAS,SAAU,WAAYxV,EAAMI,eAAe,YAEzFn1B,KAAKwqC,oBACH,OACAzV,EAAMM,iBACN,QACA,SACA,SACA,UACA,MACAN,EAAMI,eAAen1B,KAAKuqC,aAG5BvqC,KAAKyqC,aACH,OACA1V,EAAMM,iBACN,QACA,SACA,SACAN,EAAMM,iBACN,cACAN,EAAMQ,iBAAiBv1B,KAAKwqC,qBAG9BxqC,KAAK0qC,sBAAwB,SAAU,UAAW,QAAS,WAE3D1qC,KAAK2qC,iBACH,kBACA5V,EAAMM,iBACN,gBACAN,EAAMI,eAAen1B,KAAK0qC,sBAC1B,aACA,SAGF1qC,KAAK4qC,cAAgB,MAAO,UAAW,MAAO,UAAW,MAAO,SAEhE5qC,KAAK6qC,oBAAsB,OAAQ7qC,KAAK4qC,aAAc,QAAS5qC,KAAK4qC,cAEpE5qC,KAAK8qC,qBACH,eACA/V,EAAMQ,iBAAiBv1B,KAAK2qC,iBAC5B,kBACA5V,EAAMQ,iBAAiBv1B,KAAK6qC,oBAC5B,QACA,UACA,OACA,SAGF7qC,KAAK+qC,oBACH,UACA,UACA,UACA/qC,KAAK8qC,oBACL,QACA9qC,KAAK8qC,oBACL,SACA9qC,KAAK8qC,oBACL,WACA9qC,KAAK8qC,oBACL,UACA9qC,KAAK8qC,oBACL,UACA9qC,KAAK8qC,qBAGP9qC,KAAKgrC,wBACH,OACAjW,EAAMM,iBACN,SACA,UACA,eACA,UACA,UACA,UACA,eACA,UACA,aACA,UACA,QACA,UAGFr1B,KAAKirC,iBACH,OACAlW,EAAMM,iBACN,kBACAN,EAAMM,iBACN,iBACAN,EAAMM,iBACN,cACAN,EAAMQ,iBAAiBv1B,KAAK+qC,oBAC5B,cACAhW,EAAMQ,iBAAiBv1B,KAAKgrC,wBAC5B,eACA,UACA,QACA,SACA,aACA,SACA,qBACA,SAGFhrC,KAAKkrC,eACH,OACAnW,EAAMM,iBACN,QACA,SACA,OACA,UACA,SACA,UACA,SACA,UACA,YACA,UACA,eACA,UACA,cACA,UACA,mBACA,UACA,SACA,UACA,cACA,UACA,cACA,UACA,cACA,UACA,YACA,UACA,UACA,WAGFr1B,KAAKmrC,iBACH,OACApW,EAAMM,iBACN,cACA,UACA,eACA,UACA,QACA,SACA,OACAN,EAAMI,eAAen1B,KAAKwqC,oBAC1B,WACAzV,EAAMI,eAAen1B,KAAKgrC,yBAG5BhrC,KAAKorC,sBACH,kBACArW,EAAMM,iBACN,cACAN,EAAMM,iBACN,gBACA,UACA,eACA,UACA,kBACA,UACA,OACAN,EAAMI,eAAen1B,KAAKyqC,aAC1B,WACA1V,EAAMI,eAAen1B,KAAKirC,iBAC1B,SACAlW,EAAMI,eAAen1B,KAAKkrC,eAC1B,WACAnW,EAAMI,eAAen1B,KAAKmrC,iBAC1B,oBACApW,EAAMoB,oBACN,qBACApB,EAAMoB,oBACN,sBACApB,EAAMoB,qBAGRn2B,KAAKqrC,gBACH,OACAtW,EAAMM,iBACN,QACA,SACA,WACAN,EAAMI,eAAe,UAGvBn1B,KAAKsrC,iBACH,WACAvW,EAAMM,iBACN,SACA,UACA,WACAN,EAAMoB,oBACN,YACA,SAGFn2B,KAAKurC,kBACH,WACAxW,EAAMM,iBACN,SACAN,EAAMM,iBACN,OACAN,EAAMM,iBACN,aACAN,EAAMM,iBACN,aACAN,EAAMM,iBACN,MACAN,EAAMI,eAAen1B,KAAKuqC,YAC1B,cACAxV,EAAMQ,iBAAiBv1B,KAAK+qC,oBAC5B,WACAhW,EAAMI,eAAen1B,KAAKsrC,iBAC1B,eACA,UACA,aACA,UACA,cACA,UACA,kBACC,KAAM,UAAW,GAClB,QACA,SACA,YACA,SACA,QACAtrC,KAAK8qC,oBACL,MACA9qC,KAAK8qC,oBACL,QACA9qC,KAAK8qC,oBACL,UACA9qC,KAAK8qC,oBACL,SACA9qC,KAAK8qC,oBACL,WACA9qC,KAAK8qC,oBACL,eACA9qC,KAAK4qC,aACL,aACA5qC,KAAK4qC,aACL,sBACA5qC,KAAK4qC,aACL,gBACA5qC,KAAK4qC,aACL,cACA5qC,KAAK4qC,aACL,aACA5qC,KAAK4qC,aACL,kBACA5qC,KAAK4qC,aACL,cACA,QACA,kBACA,QACA,kBACA,QACA,WACA,QACA,gBACA,QACA,eACA,QACA,eACA,QACA,iBACA,SAGF5qC,KAAKwrC,kBAAoB,OAAQzW,EAAMM,iBAAkB,WAAYN,EAAMoB,qBAE3En2B,KAAKyrC,sBACH,MACA1W,EAAMM,iBACN,MACAN,EAAMM,iBACN,OACA,UACA,OACA,SAGFr1B,KAAK0rC,mBACH,OACA3W,EAAMM,iBACN,gBACAN,EAAMI,eAAen1B,KAAKyrC,uBAG5BzrC,KAAKg3B,OAASh3B,KAAK2rC,mBACjB,WACA5W,EAAMM,iBACN,iBACAN,EAAMM,iBACN,gBACAN,EAAMQ,iBAAiBv1B,KAAKorC,sBAC5B,UACArW,EAAMI,eAAen1B,KAAKqrC,gBAC1B,YACAtW,EAAMI,eAAen1B,KAAKurC,kBAC1B,YACAxW,EAAMI,eAAen1B,KAAKwrC,kBAC1B,aACAzW,EAAMI,eAAen1B,KAAK0rC,mBAC1B,QACA,SACA,iBACA,SACA,aACA,UACA,iBACA,UACA,SACA,UACA,mBACA,UAKJE,GAAI,WACF5rC,KAAK6rC,YAAc,OAAQ,SAAU,QAAS,SAAU,WAAY9W,EAAMI,eAAe,YAEzFn1B,KAAK8rC,oBACH,OACA/W,EAAMM,iBACN,QACA,SACA,SACA,UACA,MACAN,EAAMI,eAAen1B,KAAK6rC,aAG5B7rC,KAAK+rC,aACH,OACAhX,EAAMM,iBACN,QACA,SACA,SACAN,EAAMM,iBACN,cACAN,EAAMQ,iBAAiBv1B,KAAK8rC,qBAG9B9rC,KAAKgsC,sBAAwB,SAAU,UAAW,QAAS,WAE3DhsC,KAAKisC,iBACH,kBACAlX,EAAMM,iBACN,gBACAN,EAAMI,eAAen1B,KAAKgsC,sBAC1B,aACA,SAGFhsC,KAAKksC,cAAgB,MAAO,UAAW,MAAO,UAAW,MAAO,SAEhElsC,KAAKmsC,oBAAsB,OAAQnsC,KAAKksC,aAAc,QAASlsC,KAAKksC,cAEpElsC,KAAKosC,qBACH,eACArX,EAAMQ,iBAAiBv1B,KAAKisC,iBAC5B,kBACAlX,EAAMQ,iBAAiBv1B,KAAKmsC,oBAC5B,QACA,UACA,OACA,SAGFnsC,KAAKqsC,oBACH,UACA,UACA,UACArsC,KAAKosC,oBACL,QACApsC,KAAKosC,oBACL,WACApsC,KAAKosC,oBACL,UACApsC,KAAKosC,oBACL,UACApsC,KAAKosC,qBAGPpsC,KAAKssC,wBACH,OACAvX,EAAMM,iBACN,SACA,UACA,eACA,UACA,UACA,UACA,eACA,UACA,aACA,UACA,QACA,UAGFr1B,KAAKusC,iBACH,OACAxX,EAAMM,iBACN,kBACAN,EAAMM,iBACN,iBACAN,EAAMM,iBACN,cACAN,EAAMQ,iBAAiBv1B,KAAKqsC,oBAC5B,cACAtX,EAAMQ,iBAAiBv1B,KAAKssC,wBAC5B,eACA,UACA,QACA,SACA,aACA,SACA,qBACA,SAGFtsC,KAAKwsC,eACH,OACAzX,EAAMM,iBACN,QACA,SACA,OACA,UACA,SACA,UACA,SACA,UACA,YACA,UACA,eACA,UACA,cACA,UACA,mBACA,UACA,SACA,UACA,cACA,UACA,cACA,UACA,cACA,UACA,YACA,UACA,UACA,WAGFr1B,KAAKysC,iBACH,OACA1X,EAAMM,iBACN,cACA,UACA,eACA,UACA,QACA,SACA,OACAN,EAAMI,eAAen1B,KAAK8rC,oBAC1B,WACA/W,EAAMI,eAAen1B,KAAKssC,yBAG5BtsC,KAAK0sC,sBACH,kBACA3X,EAAMM,iBACN,cACAN,EAAMM,iBACN,gBACA,UACA,eACA,UACA,kBACA,UACA,OACAN,EAAMI,eAAen1B,KAAK+rC,aAC1B,WACAhX,EAAMI,eAAen1B,KAAKusC,iBAC1B,SACAxX,EAAMI,eAAen1B,KAAKwsC,eAC1B,WACAzX,EAAMI,eAAen1B,KAAKysC,iBAC1B,oBACA1X,EAAMoB,oBACN,qBACApB,EAAMoB,oBACN,sBACApB,EAAMoB,qBAGRn2B,KAAK2sC,gBACH,OACA5X,EAAMM,iBACN,QACA,SACA,WACAN,EAAMI,eAAe,UAGvBn1B,KAAK4sC,iBACH,WACA7X,EAAMM,iBACN,SACA,UACA,WACAN,EAAMoB,oBACN,YACA,SAGFn2B,KAAK6sC,kBACH,WACA9X,EAAMM,iBACN,SACAN,EAAMM,iBACN,OACAN,EAAMM,iBACN,aACAN,EAAMM,iBACN,aACAN,EAAMM,iBACN,MACAN,EAAMI,eAAen1B,KAAK6rC,YAC1B,cACA9W,EAAMQ,iBAAiBv1B,KAAKqsC,oBAC5B,WACAtX,EAAMI,eAAen1B,KAAK4sC,iBAC1B,eACA,UACA,aACA,UACA,cACA,UACA,kBACC,KAAM,UAAW,GAClB,QACA,SACA,YACA,SACA,QACA5sC,KAAKosC,oBACL,MACApsC,KAAKosC,oBACL,QACApsC,KAAKosC,oBACL,UACApsC,KAAKosC,oBACL,SACApsC,KAAKosC,oBACL,WACApsC,KAAKosC,oBACL,eACApsC,KAAKksC,aACL,aACAlsC,KAAKksC,aACL,sBACAlsC,KAAKksC,aACL,gBACAlsC,KAAKksC,aACL,cACAlsC,KAAKksC,aACL,aACAlsC,KAAKksC,aACL,kBACAlsC,KAAKksC,aACL,cACA,QACA,kBACA,QACA,kBACA,QACA,WACA,QACA,gBACA,QACA,eACA,QACA,eACA,QACA,iBACA,SAGFlsC,KAAK8sC,kBAAoB,OAAQ/X,EAAMM,iBAAkB,WAAYN,EAAMoB,qBAE3En2B,KAAK+sC,sBACH,MACAhY,EAAMM,iBACN,MACAN,EAAMM,iBACN,OACA,UACA,OACA,SAGFr1B,KAAKgtC,mBACH,OACAjY,EAAMM,iBACN,gBACAN,EAAMI,eAAen1B,KAAK+sC,uBAG5B/sC,KAAKg3B,OAASh3B,KAAKitC,mBACjB,WACAlY,EAAMM,iBACN,iBACAN,EAAMM,iBACN,gBACAN,EAAMQ,iBAAiBv1B,KAAK0sC,sBAC5B,UACA3X,EAAMI,eAAen1B,KAAK2sC,gBAC1B,YACA5X,EAAMI,eAAen1B,KAAK6sC,kBAC1B,YACA9X,EAAMI,eAAen1B,KAAK8sC,kBAC1B,aACA/X,EAAMI,eAAen1B,KAAKgtC,mBAC1B,QACA,SACA,iBACA,SACA,aACA,UACA,iBACA,UACA,SACA,UACA,mBACA,UAKJE,GAAI,WACFltC,KAAKmtC,YAAc,OAAQ,SAAU,QAAS,SAAU,WAAYpY,EAAMI,eAAe,YAEzFn1B,KAAKotC,oBACH,OACArY,EAAMM,iBACN,QACA,SACA,SACA,UACA,MACAN,EAAMI,eAAen1B,KAAKmtC,aAG5BntC,KAAKqtC,aACH,OACAtY,EAAMM,iBACN,QACA,SACA,SACAN,EAAMM,iBACN,cACAN,EAAMQ,iBAAiBv1B,KAAKotC,qBAG9BptC,KAAKstC,sBAAwB,SAAU,UAAW,QAAS,WAE3DttC,KAAKutC,iBACH,kBACAxY,EAAMM,iBACN,gBACAN,EAAMI,eAAen1B,KAAKstC,sBAC1B,aACA,SAGFttC,KAAKwtC,cAAgB,MAAO,UAAW,MAAO,UAAW,MAAO,SAEhExtC,KAAKytC,oBAAsB,OAAQztC,KAAKwtC,aAAc,QAASxtC,KAAKwtC,cAEpExtC,KAAK0tC,qBACH,eACA3Y,EAAMQ,iBAAiBv1B,KAAKutC,iBAC5B,kBACAxY,EAAMQ,iBAAiBv1B,KAAKytC,oBAC5B,QACA,UACA,OACA,SAGFztC,KAAK2tC,oBACH,kBACA,UACA,mBACA,UACA,oBACA,UACA,UACA3tC,KAAK0tC,oBACL,QACA1tC,KAAK0tC,oBACL,WACA1tC,KAAK0tC,oBACL,UACA1tC,KAAK0tC,oBACL,UACA1tC,KAAK0tC,qBAGP1tC,KAAK4tC,wBACH,OACA7Y,EAAMM,iBACN,SACA,UACA,eACA,UACA,UACA,UACA,eACA,UACA,aACA,UACA,QACA,UAGFr1B,KAAK6tC,iBACH,OACA9Y,EAAMM,iBACN,kBACAN,EAAMM,iBACN,iBACAN,EAAMM,iBACN,cACAN,EAAMQ,iBAAiBv1B,KAAK2tC,oBAC5B,cACA5Y,EAAMQ,iBAAiBv1B,KAAK4tC,wBAC5B,eACA,UACA,QACA,SACA,aACA,SACA,qBACA,SAGF5tC,KAAK8tC,eACH,OACA/Y,EAAMM,iBACN,QACA,SACA,OACA,UACA,SACA,UACA,SACA,UACA,YACA,UACA,eACA,UACA,cACA,UACA,mBACA,UACA,SACA,UACA,cACA,UACA,cACA,UACA,cACA,UACA,YACA,UACA,UACA,WAGFr1B,KAAK+tC,iBACH,OACAhZ,EAAMM,iBACN,cACA,UACA,eACA,UACA,QACA,SACA,OACAN,EAAMI,eAAen1B,KAAKotC,oBAC1B,WACArY,EAAMI,eAAen1B,KAAK4tC,yBAG5B5tC,KAAKguC,sBACH,kBACAjZ,EAAMM,iBACN,cACAN,EAAMM,iBACN,gBACA,UACA,kBACA,UACA,OACAN,EAAMI,eAAen1B,KAAKqtC,aAC1B,WACAtY,EAAMI,eAAen1B,KAAK6tC,iBAC1B,SACA9Y,EAAMI,eAAen1B,KAAK8tC,eAC1B,WACA/Y,EAAMI,eAAen1B,KAAK+tC,iBAC1B,oBACAhZ,EAAMoB,oBACN,qBACApB,EAAMoB,oBACN,sBACApB,EAAMoB,qBAGRn2B,KAAKiuC,gBACH,OACAlZ,EAAMM,iBACN,QACA,SACA,WACAN,EAAMI,eAAe,UAGvBn1B,KAAKkuC,iBACH,WACAnZ,EAAMM,iBACN,SACA,UACA,WACAN,EAAMoB,oBACN,YACA,SAGFn2B,KAAKmuC,kBACH,WACApZ,EAAMM,iBACN,SACAN,EAAMM,iBACN,OACAN,EAAMM,iBACN,aACAN,EAAMM,iBACN,aACAN,EAAMM,iBACN,MACAN,EAAMI,eAAen1B,KAAKmtC,YAC1B,cACApY,EAAMQ,iBAAiBv1B,KAAK2tC,oBAC5B,WACA5Y,EAAMI,eAAen1B,KAAKkuC,iBAC1B,eACA,UACA,aACA,UACA,cACA,UACA,kBACC,KAAM,UAAW,GAClB,QACA,SACA,YACA,SACA,QACAluC,KAAK0tC,oBACL,MACA1tC,KAAK0tC,oBACL,QACA1tC,KAAK0tC,oBACL,UACA1tC,KAAK0tC,oBACL,SACA1tC,KAAK0tC,oBACL,WACA1tC,KAAK0tC,oBACL,eACA1tC,KAAKwtC,aACL,aACAxtC,KAAKwtC,aACL,sBACAxtC,KAAKwtC,aACL,gBACAxtC,KAAKwtC,aACL,cACAxtC,KAAKwtC,aACL,aACAxtC,KAAKwtC,aACL,kBACAxtC,KAAKwtC,aACL,cACA,QACA,kBACA,QACA,kBACA,QACA,WACA,QACA,gBACA,QACA,eACA,QACA,eACA,QACA,iBACA,SAGFxtC,KAAKouC,kBAAoB,OAAQrZ,EAAMM,iBAAkB,WAAYN,EAAMoB,qBAE3En2B,KAAKquC,sBACH,MACAtZ,EAAMM,iBACN,MACAN,EAAMM,iBACN,OACA,UACA,OACA,SAGFr1B,KAAKsuC,mBACH,OACAvZ,EAAMM,iBACN,gBACAN,EAAMI,eAAen1B,KAAKquC,uBAG5BruC,KAAKg3B,OAASh3B,KAAKuuC,mBACjB,WACAxZ,EAAMM,iBACN,iBACAN,EAAMM,iBACN,gBACAN,EAAMQ,iBAAiBv1B,KAAKguC,sBAC5B,UACAjZ,EAAMI,eAAen1B,KAAKiuC,gBAC1B,YACAlZ,EAAMI,eAAen1B,KAAKmuC,kBAC1B,YACApZ,EAAMI,eAAen1B,KAAKouC,kBAC1B,aACArZ,EAAMI,eAAen1B,KAAKsuC,mBAC1B,QACA,SACA,iBACA,SACA,aACA,UACA,iBACA,UACA,SACA,UACA,mBACA,UAKJE,GAAI,WACFxuC,KAAKyuC,YAAc,OAAQ,SAAU,QAAS,SAAU,WAAY1Z,EAAMI,eAAe,YAEzFn1B,KAAK0uC,oBACH,OACA3Z,EAAMM,iBACN,QACA,SACA,SACA,UACA,MACAN,EAAMI,eAAen1B,KAAKyuC,aAG5BzuC,KAAK2uC,aACH,OACA5Z,EAAMM,iBACN,QACA,SACA,SACAN,EAAMM,iBACN,cACAN,EAAMQ,iBAAiBv1B,KAAK0uC,qBAG9B1uC,KAAK4uC,sBAAwB,SAAU,UAAW,QAAS,WAE3D5uC,KAAK6uC,iBACH,kBACA9Z,EAAMM,iBACN,gBACAN,EAAMI,eAAen1B,KAAK4uC,sBAC1B,aACA,SAGF5uC,KAAK8uC,cAAgB,MAAO,UAAW,MAAO,UAAW,MAAO,SAEhE9uC,KAAK+uC,oBAAsB,OAAQ/uC,KAAK8uC,aAAc,QAAS9uC,KAAK8uC,cAEpE9uC,KAAKgvC,qBACH,eACAja,EAAMQ,iBAAiBv1B,KAAK6uC,iBAC5B,kBACA9Z,EAAMQ,iBAAiBv1B,KAAK+uC,oBAC5B,QACA,UACA,OACA,SAGF/uC,KAAKivC,oBACH,kBACA,UACA,mBACA,UACA,oBACA,UACA,UACAjvC,KAAKgvC,oBACL,QACAhvC,KAAKgvC,oBACL,WACAhvC,KAAKgvC,oBACL,UACAhvC,KAAKgvC,oBACL,UACAhvC,KAAKgvC,qBAGPhvC,KAAKkvC,wBACH,OACAna,EAAMM,iBACN,SACA,UACA,eACA,UACA,UACA,UACA,eACA,UACA,aACA,UACA,QACA,UAGFr1B,KAAKmvC,iBACH,OACApa,EAAMM,iBACN,kBACAN,EAAMM,iBACN,iBACAN,EAAMM,iBACN,cACAN,EAAMQ,iBAAiBv1B,KAAKivC,oBAC5B,cACAla,EAAMQ,iBAAiBv1B,KAAKkvC,wBAC5B,eACA,UACA,QACA,SACA,aACA,SACA,qBACA,SAGFlvC,KAAKovC,eACH,OACAra,EAAMM,iBACN,QACA,SACA,OACA,UACA,SACA,UACA,SACA,UACA,YACA,UACA,eACA,UACA,cACA,UACA,mBACA,UACA,SACA,UACA,cACA,UACA,cACA,UACA,cACA,UACA,YACA,UACA,UACA,WAGFr1B,KAAKqvC,iBACH,OACAta,EAAMM,iBACN,cACA,UACA,eACA,UACA,QACA,SACA,OACAN,EAAMI,eAAen1B,KAAK0uC,oBAC1B,WACA3Z,EAAMI,eAAen1B,KAAKkvC,yBAG5BlvC,KAAKsvC,sBACH,kBACAva,EAAMM,iBACN,cACAN,EAAMM,iBACN,gBACA,UACA,kBACA,UACA,OACAN,EAAMI,eAAen1B,KAAK2uC,aAC1B,WACA5Z,EAAMI,eAAen1B,KAAKmvC,iBAC1B,SACApa,EAAMI,eAAen1B,KAAKovC,eAC1B,WACAra,EAAMI,eAAen1B,KAAKqvC,iBAC1B,oBACAta,EAAMoB,oBACN,qBACApB,EAAMoB,oBACN,sBACApB,EAAMoB,qBAGRn2B,KAAKuvC,gBACH,OACAxa,EAAMM,iBACN,QACA,SACA,WACAN,EAAMI,eAAe,UAGvBn1B,KAAKwvC,iBACH,WACAza,EAAMM,iBACN,SACA,UACA,WACAN,EAAMoB,oBACN,YACA,SAGFn2B,KAAKyvC,kBACH,WACA1a,EAAMM,iBACN,SACAN,EAAMM,iBACN,OACAN,EAAMM,iBACN,aACAN,EAAMM,iBACN,aACAN,EAAMM,iBACN,MACAN,EAAMI,eAAen1B,KAAKyuC,YAC1B,cACA1Z,EAAMQ,iBAAiBv1B,KAAKivC,oBAC5B,WACAla,EAAMI,eAAen1B,KAAKwvC,iBAC1B,eACA,UACA,aACA,UACA,cACA,UACA,kBACC,KAAM,UAAW,GAClB,QACA,SACA,YACA,SACA,QACAxvC,KAAKgvC,oBACL,MACAhvC,KAAKgvC,oBACL,QACAhvC,KAAKgvC,oBACL,UACAhvC,KAAKgvC,oBACL,SACAhvC,KAAKgvC,oBACL,WACAhvC,KAAKgvC,oBACL,eACAhvC,KAAK8uC,aACL,aACA9uC,KAAK8uC,aACL,sBACA9uC,KAAK8uC,aACL,gBACA9uC,KAAK8uC,aACL,cACA9uC,KAAK8uC,aACL,aACA9uC,KAAK8uC,aACL,kBACA9uC,KAAK8uC,aACL,cACA,QACA,kBACA,QACA,kBACA,QACA,WACA,QACA,gBACA,QACA,eACA,QACA,eACA,QACA,iBACA,SAGF9uC,KAAK0vC,kBAAoB,OAAQ3a,EAAMM,iBAAkB,WAAYN,EAAMoB,qBAE3En2B,KAAK2vC,sBACH,MACA5a,EAAMM,iBACN,MACAN,EAAMM,iBACN,OACA,UACA,OACA,SAGFr1B,KAAK4vC,mBACH,OACA7a,EAAMM,iBACN,gBACAN,EAAMI,eAAen1B,KAAK2vC,uBAG5B3vC,KAAKg3B,OAASh3B,KAAK6vC,mBACjB,WACA9a,EAAMM,iBACN,gBACAN,EAAMQ,iBAAiBv1B,KAAKsvC,sBAC5B,UACAva,EAAMI,eAAen1B,KAAKuvC,gBAC1B,YACAxa,EAAMI,eAAen1B,KAAKyvC,kBAC1B,YACA1a,EAAMI,eAAen1B,KAAK0vC,kBAC1B,aACA3a,EAAMI,eAAen1B,KAAK4vC,mBAC1B,QACA,SACA,iBACA,SACA,aACA,UACA,iBACA,UACA,SACA,UACA,mBACA,UAKJE,GAAI,WACF9vC,KAAK+vC,YAAc,OAAQ,SAAU,QAAS,SAAU,WAAYhb,EAAMI,eAAe,YAEzFn1B,KAAKgwC,oBACH,OACAjb,EAAMM,iBACN,QACA,SACA,SACA,UACA,MACAN,EAAMI,eAAen1B,KAAK+vC,aAG5B/vC,KAAKiwC,aACH,OACAlb,EAAMM,iBACN,QACA,SACA,SACAN,EAAMM,iBACN,cACAN,EAAMQ,iBAAiBv1B,KAAKgwC,qBAG9BhwC,KAAKkwC,sBAAwB,SAAU,UAAW,QAAS,WAE3DlwC,KAAKmwC,iBACH,kBACApb,EAAMM,iBACN,gBACAN,EAAMI,eAAen1B,KAAKkwC,sBAC1B,aACA,SAGFlwC,KAAKowC,cAAgB,MAAO,UAAW,MAAO,UAAW,MAAO,SAEhEpwC,KAAKqwC,oBAAsB,OAAQrwC,KAAKowC,aAAc,QAASpwC,KAAKowC,cAEpEpwC,KAAKswC,qBACH,eACAvb,EAAMQ,iBAAiBv1B,KAAKmwC,iBAC5B,kBACApb,EAAMQ,iBAAiBv1B,KAAKqwC,oBAC5B,QACA,UACA,OACA,SAGFrwC,KAAKuwC,oBACH,kBACA,UACA,mBACA,UACA,oBACA,UACA,UACAvwC,KAAKswC,oBACL,QACAtwC,KAAKswC,oBACL,WACAtwC,KAAKswC,oBACL,UACAtwC,KAAKswC,oBACL,UACAtwC,KAAKswC,qBAGPtwC,KAAKwwC,wBACH,OACAzb,EAAMM,iBACN,SACA,UACA,eACA,UACA,UACA,UACA,eACA,UACA,aACA,UACA,QACA,UAGFr1B,KAAKywC,iBACH,OACA1b,EAAMM,iBACN,kBACAN,EAAMM,iBACN,iBACAN,EAAMM,iBACN,cACAN,EAAMQ,iBAAiBv1B,KAAKuwC,oBAC5B,cACAxb,EAAMQ,iBAAiBv1B,KAAKwwC,wBAC5B,eACA,UACA,QACA,SACA,aACA,SACA,qBACA,SAGFxwC,KAAK0wC,eACH,OACA3b,EAAMM,iBACN,QACA,SACA,OACA,UACA,SACA,UACA,SACA,UACA,YACA,UACA,eACA,UACA,cACA,UACA,mBACA,UACA,SACA,UACA,cACA,UACA,cACA,UACA,cACA,UACA,YACA,UACA,UACA,WAGFr1B,KAAK2wC,iBACH,OACA5b,EAAMM,iBACN,cACA,UACA,eACA,UACA,QACA,SACA,OACAN,EAAMI,eAAen1B,KAAKgwC,oBAC1B,WACAjb,EAAMI,eAAen1B,KAAKwwC,yBAG5BxwC,KAAK4wC,sBACH,kBACA7b,EAAMM,iBACN,cACAN,EAAMM,iBACN,gBACA,UACA,kBACA,UACA,OACAN,EAAMI,eAAen1B,KAAKiwC,aAC1B,WACAlb,EAAMI,eAAen1B,KAAKywC,iBAC1B,SACA1b,EAAMI,eAAen1B,KAAK0wC,eAC1B,WACA3b,EAAMI,eAAen1B,KAAK2wC,iBAC1B,oBACA5b,EAAMoB,oBACN,qBACApB,EAAMoB,oBACN,sBACApB,EAAMoB,qBAGRn2B,KAAK6wC,gBACH,OACA9b,EAAMM,iBACN,QACA,SACA,WACAN,EAAMI,eAAe,UAGvBn1B,KAAK8wC,iBACH,WACA/b,EAAMM,iBACN,SACA,UACA,WACAN,EAAMoB,oBACN,YACA,SAGFn2B,KAAK+wC,kBACH,WACAhc,EAAMM,iBACN,SACAN,EAAMM,iBACN,OACAN,EAAMM,iBACN,aACAN,EAAMM,iBACN,aACAN,EAAMM,iBACN,MACAN,EAAMI,eAAen1B,KAAK+vC,YAC1B,cACAhb,EAAMQ,iBAAiBv1B,KAAKuwC,oBAC5B,WACAxb,EAAMI,eAAen1B,KAAK8wC,iBAC1B,eACA,UACA,aACA,UACA,cACA,UACA,kBACC,KAAM,UAAW,GAClB,QACA,SACA,YACA,SACA,QACA9wC,KAAKswC,oBACL,MACAtwC,KAAKswC,oBACL,QACAtwC,KAAKswC,oBACL,UACAtwC,KAAKswC,oBACL,SACAtwC,KAAKswC,oBACL,WACAtwC,KAAKswC,oBACL,eACAtwC,KAAKowC,aACL,aACApwC,KAAKowC,aACL,sBACApwC,KAAKowC,aACL,gBACApwC,KAAKowC,aACL,cACApwC,KAAKowC,aACL,aACApwC,KAAKowC,aACL,kBACApwC,KAAKowC,aACL,cACA,QACA,kBACA,QACA,kBACA,QACA,WACA,QACA,gBACA,QACA,eACA,QACA,eACA,QACA,iBACA,SAGFpwC,KAAKgxC,kBAAoB,OAAQjc,EAAMM,iBAAkB,WAAYN,EAAMoB,qBAE3En2B,KAAKixC,sBACH,MACAlc,EAAMM,iBACN,MACAN,EAAMM,iBACN,OACA,UACA,OACA,SAGFr1B,KAAKkxC,mBACH,OACAnc,EAAMM,iBACN,gBACAN,EAAMI,eAAen1B,KAAKixC,uBAG5BjxC,KAAKg3B,OAASh3B,KAAKmxC,mBACjB,WACApc,EAAMM,iBACN,gBACAN,EAAMQ,iBAAiBv1B,KAAK4wC,sBAC5B,UACA7b,EAAMI,eAAen1B,KAAK6wC,gBAC1B,YACA9b,EAAMI,eAAen1B,KAAK+wC,kBAC1B,YACAhc,EAAMI,eAAen1B,KAAKgxC,kBAC1B,aACAjc,EAAMI,eAAen1B,KAAKkxC,mBAC1B,QACA,SACA,iBACA,SACA,aACA,UACA,iBACA,UACA,SACA,YAKJE,GAAI,WACFpxC,KAAKqxC,YAAc,OAAQ,SAAU,QAAS,SAAU,WAAYtc,EAAMI,eAAe,YAEzFn1B,KAAKsxC,oBACH,OACAvc,EAAMM,iBACN,QACA,SACA,SACA,UACA,MACAN,EAAMI,eAAen1B,KAAKqxC,aAG5BrxC,KAAKuxC,aACH,OACAxc,EAAMM,iBACN,QACA,SACA,SACAN,EAAMM,iBACN,cACAN,EAAMQ,iBAAiBv1B,KAAKsxC,qBAG9BtxC,KAAKwxC,sBAAwB,SAAU,UAAW,QAAS,WAE3DxxC,KAAKyxC,iBACH,kBACA1c,EAAMM,iBACN,gBACAN,EAAMI,eAAen1B,KAAKwxC,sBAC1B,aACA,SAGFxxC,KAAK0xC,cAAgB,MAAO,UAAW,MAAO,UAAW,MAAO,SAEhE1xC,KAAK2xC,oBAAsB,OAAQ3xC,KAAK0xC,aAAc,QAAS1xC,KAAK0xC,cAEpE1xC,KAAK4xC,qBACH,eACA7c,EAAMQ,iBAAiBv1B,KAAKyxC,iBAC5B,kBACA1c,EAAMQ,iBAAiBv1B,KAAK2xC,oBAC5B,QACA,UACA,OACA,SAGF3xC,KAAK6xC,oBACH,kBACA,UACA,mBACA,UACA,oBACA,UACA,UACA7xC,KAAK4xC,oBACL,QACA5xC,KAAK4xC,oBACL,WACA5xC,KAAK4xC,oBACL,UACA5xC,KAAK4xC,oBACL,UACA5xC,KAAK4xC,qBAGP5xC,KAAK8xC,wBACH,OACA/c,EAAMM,iBACN,SACA,UACA,eACA,UACA,UACA,UACA,eACA,UACA,aACA,UACA,QACA,UAGFr1B,KAAK+xC,iBACH,OACAhd,EAAMM,iBACN,kBACAN,EAAMM,iBACN,iBACAN,EAAMM,iBACN,cACAN,EAAMQ,iBAAiBv1B,KAAK6xC,oBAC5B,cACA9c,EAAMQ,iBAAiBv1B,KAAK8xC,wBAC5B,eACA,UACA,QACA,SACA,aACA,SACA,qBACA,SAGF9xC,KAAKgyC,eACH,OACAjd,EAAMM,iBACN,QACA,SACA,OACA,UACA,SACA,UACA,SACA,UACA,YACA,UACA,eACA,UACA,cACA,UACA,mBACA,UACA,SACA,UACA,cACA,UACA,cACA,UACA,cACA,UACA,YACA,UACA,UACA,WAGFr1B,KAAKiyC,iBACH,OACAld,EAAMM,iBACN,cACA,UACA,eACA,UACA,QACA,SACA,OACAN,EAAMI,eAAen1B,KAAKsxC,oBAC1B,WACAvc,EAAMI,eAAen1B,KAAK8xC,yBAG5B9xC,KAAKkyC,sBACH,kBACAnd,EAAMM,iBACN,cACAN,EAAMM,iBACN,gBACA,UACA,kBACA,UACA,OACAN,EAAMI,eAAen1B,KAAKuxC,aAC1B,WACAxc,EAAMI,eAAen1B,KAAK+xC,iBAC1B,SACAhd,EAAMI,eAAen1B,KAAKgyC,eAC1B,WACAjd,EAAMI,eAAen1B,KAAKiyC,iBAC1B,oBACAld,EAAMoB,oBACN,qBACApB,EAAMoB,qBAGRn2B,KAAKmyC,gBACH,OACApd,EAAMM,iBACN,QACA,SACA,WACAN,EAAMI,eAAe,UAGvBn1B,KAAKoyC,iBACH,WACArd,EAAMM,iBACN,SACA,UACA,WACAN,EAAMoB,oBACN,YACA,SAGFn2B,KAAKqyC,kBACH,WACAtd,EAAMM,iBACN,SACAN,EAAMM,iBACN,OACAN,EAAMM,iBACN,aACAN,EAAMM,iBACN,aACAN,EAAMM,iBACN,MACAN,EAAMI,eAAen1B,KAAKqxC,YAC1B,cACAtc,EAAMQ,iBAAiBv1B,KAAK6xC,oBAC5B,WACA9c,EAAMI,eAAen1B,KAAKoyC,iBAC1B,eACA,UACA,aACA,UACA,cACA,UACA,kBACC,KAAM,UAAW,GAClB,QACA,SACA,YACA,SACA,QACApyC,KAAK4xC,oBACL,MACA5xC,KAAK4xC,oBACL,QACA5xC,KAAK4xC,oBACL,UACA5xC,KAAK4xC,oBACL,SACA5xC,KAAK4xC,oBACL,WACA5xC,KAAK4xC,oBACL,eACA5xC,KAAK0xC,aACL,aACA1xC,KAAK0xC,aACL,sBACA1xC,KAAK0xC,aACL,gBACA1xC,KAAK0xC,aACL,cACA1xC,KAAK0xC,aACL,aACA1xC,KAAK0xC,aACL,kBACA1xC,KAAK0xC,aACL,cACA,QACA,kBACA,QACA,kBACA,QACA,WACA,QACA,gBACA,QACA,eACA,QACA,eACA,QACA,iBACA,SAGF1xC,KAAKsyC,kBAAoB,OAAQvd,EAAMM,iBAAkB,WAAYN,EAAMoB,qBAE3En2B,KAAKuyC,sBACH,MACAxd,EAAMM,iBACN,MACAN,EAAMM,iBACN,OACA,UACA,OACA,SAGFr1B,KAAKwyC,mBACH,OACAzd,EAAMM,iBACN,gBACAN,EAAMI,eAAen1B,KAAKuyC,uBAG5BvyC,KAAKg3B,OAASh3B,KAAKyyC,mBACjB,WACA1d,EAAMM,iBACN,gBACAN,EAAMQ,iBAAiBv1B,KAAKkyC,sBAC5B,UACAnd,EAAMI,eAAen1B,KAAKmyC,gBAC1B,YACApd,EAAMI,eAAen1B,KAAKqyC,kBAC1B,YACAtd,EAAMI,eAAen1B,KAAKsyC,kBAC1B,aACAvd,EAAMI,eAAen1B,KAAKwyC,mBAC1B,QACA,SACA,iBACA,SACA,aACA,UACA,iBACA,UACA,SACA,YAKJE,EAAG,WACD1yC,KAAK2yC,WAAa,OAAQ,SAAU,QAAS,SAAU,WAAY5d,EAAMI,eAAe,YAExFn1B,KAAK4yC,mBACH,OACA7d,EAAMM,iBACN,QACA,SACA,SACA,UACA,MACAN,EAAMI,eAAen1B,KAAK2yC,YAG5B3yC,KAAK6yC,YACH,OACA9d,EAAMM,iBACN,QACA,SACA,SACAN,EAAMM,iBACN,cACAN,EAAMQ,iBAAiBv1B,KAAK4yC,oBAG9B5yC,KAAK8yC,qBAAuB,SAAU,UAAW,QAAS,WAE1D9yC,KAAK+yC,gBACH,kBACAhe,EAAMM,iBACN,gBACAN,EAAMI,eAAen1B,KAAK8yC,qBAC1B,aACA,SAGF9yC,KAAKgzC,aAAe,MAAO,UAAW,MAAO,UAAW,MAAO,SAE/DhzC,KAAKizC,mBAAqB,OAAQjzC,KAAKgzC,YAAa,QAAShzC,KAAKgzC,aAElEhzC,KAAKkzC,oBACH,eACAne,EAAMQ,iBAAiBv1B,KAAK+yC,gBAC5B,kBACAhe,EAAMQ,iBAAiBv1B,KAAKizC,mBAC5B,QACA,UACA,OACA,SAGFjzC,KAAKmzC,mBACH,kBACA,UACA,mBACA,UACA,oBACA,UACA,UACAnzC,KAAKkzC,mBACL,QACAlzC,KAAKkzC,mBACL,WACAlzC,KAAKkzC,mBACL,UACAlzC,KAAKkzC,mBACL,UACAlzC,KAAKkzC,oBAGPlzC,KAAKozC,uBACH,OACAre,EAAMM,iBACN,SACA,UACA,eACA,UACA,UACA,UACA,eACA,UACA,aACA,UACA,QACA,UAGFr1B,KAAKqzC,gBACH,OACAte,EAAMM,iBACN,kBACAN,EAAMM,iBACN,iBACAN,EAAMM,iBACN,oBACAN,EAAMM,iBACN,cACAN,EAAMQ,iBAAiBv1B,KAAKmzC,mBAC5B,cACApe,EAAMQ,iBAAiBv1B,KAAKozC,uBAC5B,eACA,UACA,iBACA,UACA,QACA,SACA,aACA,SACA,iBACA,SACA,qBACA,QACA,yBACA,QACA,gBACA,SAGFpzC,KAAKszC,cACH,OACAve,EAAMM,iBACN,QACA,SACA,OACA,UACA,SACA,UACA,SACA,UACA,YACA,UACA,eACA,UACA,cACA,UACA,mBACA,UACA,SACA,UACA,cACA,UACA,cACA,UACA,cACA,UACA,YACA,UACA,UACA,WAGFr1B,KAAKuzC,gBACH,OACAxe,EAAMM,iBACN,cACA,UACA,eACA,UACA,QACA,SACA,OACAN,EAAMI,eAAen1B,KAAK4yC,mBAC1B,WACA7d,EAAMI,eAAen1B,KAAKozC,wBAG5BpzC,KAAKwzC,qBACH,kBACAze,EAAMM,iBACN,cACAN,EAAMM,iBACN,gBACA,UACA,kBACA,UACA,OACAN,EAAMI,eAAen1B,KAAK6yC,YAC1B,WACA9d,EAAMI,eAAen1B,KAAKqzC,gBAC1B,SACAte,EAAMI,eAAen1B,KAAKszC,cAC1B,WACAve,EAAMI,eAAen1B,KAAKuzC,gBAC1B,oBACAxe,EAAMoB,oBACN,qBACApB,EAAMoB,qBAGRn2B,KAAKyzC,eACH,OACA1e,EAAMM,iBACN,QACA,SACA,WACAN,EAAMI,eAAe,UAGvBn1B,KAAK0zC,gBACH,WACA3e,EAAMM,iBACN,SACA,UACA,WACAN,EAAMoB,oBACN,YACA,SAGFn2B,KAAK2zC,iBACH,WACA5e,EAAMM,iBACN,SACAN,EAAMM,iBACN,OACAN,EAAMM,iBACN,aACAN,EAAMM,iBACN,aACAN,EAAMM,iBACN,MACAN,EAAMI,eAAen1B,KAAK2yC,WAC1B,cACA5d,EAAMQ,iBAAiBv1B,KAAKmzC,mBAC5B,WACApe,EAAMI,eAAen1B,KAAK0zC,gBAC1B,eACA,UACA,aACA,UACA,cACA,UACA,kBACC,KAAM,UAAW,GAClB,QACA,SACA,YACA,SACA,QACA1zC,KAAKkzC,mBACL,MACAlzC,KAAKkzC,mBACL,QACAlzC,KAAKkzC,mBACL,UACAlzC,KAAKkzC,mBACL,SACAlzC,KAAKkzC,mBACL,WACAlzC,KAAKkzC,mBACL,eACAlzC,KAAKgzC,YACL,aACAhzC,KAAKgzC,YACL,sBACAhzC,KAAKgzC,YACL,gBACAhzC,KAAKgzC,YACL,cACAhzC,KAAKgzC,YACL,aACAhzC,KAAKgzC,YACL,kBACAhzC,KAAKgzC,YACL,cACA,QACA,kBACA,QACA,kBACA,QACA,WACA,QACA,gBACA,QACA,eACA,QACA,eACA,QACA,iBACA,SAGFhzC,KAAK4zC,iBAAmB,OAAQ7e,EAAMM,iBAAkB,WAAYN,EAAMoB,qBAE1En2B,KAAK6zC,qBACH,MACA9e,EAAMM,iBACN,MACAN,EAAMM,iBACN,OACA,UACA,OACA,SAGFr1B,KAAK8zC,kBACH,OACA/e,EAAMM,iBACN,gBACAN,EAAMI,eAAen1B,KAAK6zC,sBAG5B7zC,KAAKg3B,OAASh3B,KAAK+zC,kBACjB,WACAhf,EAAMM,iBACN,SACAN,EAAMM,iBACN,gBACAN,EAAMQ,iBAAiBv1B,KAAKwzC,qBAC5B,UACAze,EAAMI,eAAen1B,KAAKyzC,eAC1B,YACA1e,EAAMI,eAAen1B,KAAK2zC,iBAC1B,YACA5e,EAAMI,eAAen1B,KAAK4zC,iBAC1B,aACA7e,EAAMI,eAAen1B,KAAK8zC,kBAC1B,QACA,SACA,aACA,UACA,SACA,YAKJE,EAAG,WACDh0C,KAAKi0C,WAAa,OAAQ,SAAU,QAAS,SAAU,WAAYlf,EAAMI,eAAe,YAExFn1B,KAAKk0C,mBACH,OACAnf,EAAMM,iBACN,QACA,SACA,SACA,UACA,MACAN,EAAMI,eAAen1B,KAAKi0C,YAG5Bj0C,KAAKm0C,YACH,OACApf,EAAMM,iBACN,QACA,SACA,SACAN,EAAMM,iBACN,cACAN,EAAMQ,iBAAiBv1B,KAAKk0C,oBAG9Bl0C,KAAKo0C,qBAAuB,SAAU,UAAW,QAAS,WAE1Dp0C,KAAKq0C,gBACH,kBACAtf,EAAMM,iBACN,gBACAN,EAAMI,eAAen1B,KAAKo0C,qBAC1B,aACA,SAGFp0C,KAAKs0C,aAAe,MAAO,UAAW,MAAO,UAAW,MAAO,SAE/Dt0C,KAAKu0C,mBAAqB,OAAQv0C,KAAKs0C,YAAa,QAASt0C,KAAKs0C,aAElEt0C,KAAKw0C,oBACH,eACAzf,EAAMQ,iBAAiBv1B,KAAKq0C,gBAC5B,kBACAtf,EAAMQ,iBAAiBv1B,KAAKu0C,mBAC5B,QACA,UACA,OACA,SAGFv0C,KAAKy0C,mBACH,kBACA,UACA,mBACA,UACA,oBACA,UACA,UACAz0C,KAAKw0C,mBACL,QACAx0C,KAAKw0C,mBACL,WACAx0C,KAAKw0C,mBACL,UACAx0C,KAAKw0C,mBACL,UACAx0C,KAAKw0C,oBAGPx0C,KAAK00C,uBACH,OACA3f,EAAMM,iBACN,SACA,UACA,eACA,UACA,UACA,UACA,eACA,UACA,aACA,UACA,QACA,UAGFr1B,KAAK20C,gBACH,OACA5f,EAAMM,iBACN,kBACAN,EAAMM,iBACN,iBACAN,EAAMM,iBACN,cACAN,EAAMQ,iBAAiBv1B,KAAKy0C,mBAC5B,cACA1f,EAAMQ,iBAAiBv1B,KAAK00C,uBAC5B,eACA,UACA,QACA,SACA,aACA,SACA,qBACA,SAGF10C,KAAK40C,cACH,OACA7f,EAAMM,iBACN,QACA,SACA,OACA,UACA,SACA,UACA,SACA,UACA,YACA,UACA,eACA,UACA,cACA,UACA,mBACA,UACA,SACA,UACA,cACA,UACA,cACA,UACA,cACA,UACA,YACA,UACA,UACA,WAGFr1B,KAAK60C,gBACH,OACA9f,EAAMM,iBACN,cACA,UACA,eACA,UACA,QACA,SACA,OACAN,EAAMI,eAAen1B,KAAKk0C,mBAC1B,WACAnf,EAAMI,eAAen1B,KAAK00C,wBAG5B10C,KAAK80C,qBACH,kBACA/f,EAAMM,iBACN,cACAN,EAAMM,iBACN,gBACA,UACA,kBACA,UACA,OACAN,EAAMI,eAAen1B,KAAKm0C,YAC1B,WACApf,EAAMI,eAAen1B,KAAK20C,gBAC1B,SACA5f,EAAMI,eAAen1B,KAAK40C,cAC1B,WACA7f,EAAMI,eAAen1B,KAAK60C,gBAC1B,oBACA9f,EAAMoB,oBACN,qBACApB,EAAMoB,qBAGRn2B,KAAK+0C,eACH,OACAhgB,EAAMM,iBACN,QACA,SACA,WACAN,EAAMI,eAAe,UAGvBn1B,KAAKg1C,gBACH,WACAjgB,EAAMM,iBACN,SACA,UACA,WACAN,EAAMoB,oBACN,YACA,SAGFn2B,KAAKi1C,iBACH,WACAlgB,EAAMM,iBACN,SACAN,EAAMM,iBACN,OACAN,EAAMM,iBACN,aACAN,EAAMM,iBACN,aACAN,EAAMM,iBACN,MACAN,EAAMI,eAAen1B,KAAKi0C,WAC1B,cACAlf,EAAMQ,iBAAiBv1B,KAAKy0C,mBAC5B,WACA1f,EAAMI,eAAen1B,KAAKg1C,gBAC1B,eACA,UACA,aACA,UACA,cACA,UACA,kBACC,KAAM,UAAW,GAClB,QACA,SACA,YACA,SACA,QACAh1C,KAAKw0C,mBACL,MACAx0C,KAAKw0C,mBACL,QACAx0C,KAAKw0C,mBACL,UACAx0C,KAAKw0C,mBACL,SACAx0C,KAAKw0C,mBACL,WACAx0C,KAAKw0C,mBACL,eACAx0C,KAAKs0C,YACL,aACAt0C,KAAKs0C,YACL,sBACAt0C,KAAKs0C,YACL,gBACAt0C,KAAKs0C,YACL,cACAt0C,KAAKs0C,YACL,aACAt0C,KAAKs0C,YACL,kBACAt0C,KAAKs0C,YACL,cACA,QACA,kBACA,QACA,kBACA,QACA,WACA,QACA,gBACA,QACA,eACA,QACA,eACA,QACA,iBACA,SAGFt0C,KAAKk1C,iBAAmB,OAAQngB,EAAMM,iBAAkB,WAAYN,EAAMoB,qBAE1En2B,KAAKm1C,qBACH,MACApgB,EAAMM,iBACN,MACAN,EAAMM,iBACN,OACA,UACA,OACA,SAGFr1B,KAAKo1C,kBACH,OACArgB,EAAMM,iBACN,gBACAN,EAAMI,eAAen1B,KAAKm1C,sBAG5Bn1C,KAAKg3B,OAASh3B,KAAKq1C,kBACjB,WACAtgB,EAAMM,iBACN,SACAN,EAAMM,iBACN,gBACAN,EAAMQ,iBAAiBv1B,KAAK80C,qBAC5B,UACA/f,EAAMI,eAAen1B,KAAK+0C,eAC1B,YACAhgB,EAAMI,eAAen1B,KAAKi1C,iBAC1B,YACAlgB,EAAMI,eAAen1B,KAAKk1C,iBAC1B,aACAngB,EAAMI,eAAen1B,KAAKo1C,kBAC1B,QACA,SACA,aACA,UACA,SACA,YAKJE,EAAG,WACDt1C,KAAKu1C,WAAa,OAAQ,SAAU,QAAS,SAAU,WAAYxgB,EAAMI,eAAe,YAExFn1B,KAAKw1C,mBACH,OACAzgB,EAAMM,iBACN,QACA,SACA,SACA,UACA,MACAN,EAAMI,eAAen1B,KAAKu1C,YAG5Bv1C,KAAKy1C,YACH,OACA1gB,EAAMM,iBACN,QACA,SACA,SACAN,EAAMM,iBACN,cACAN,EAAMQ,iBAAiBv1B,KAAKw1C,oBAG9Bx1C,KAAK01C,qBAAuB,SAAU,UAAW,QAAS,WAE1D11C,KAAK21C,gBACH,kBACA5gB,EAAMM,iBACN,gBACAN,EAAMI,eAAen1B,KAAK01C,qBAC1B,aACA,SAGF11C,KAAK41C,aAAe,MAAO,UAAW,MAAO,UAAW,MAAO,SAE/D51C,KAAK61C,mBAAqB,OAAQ71C,KAAK41C,YAAa,QAAS51C,KAAK41C,aAElE51C,KAAK81C,oBACH,eACA/gB,EAAMQ,iBAAiBv1B,KAAK21C,gBAC5B,kBACA5gB,EAAMQ,iBAAiBv1B,KAAK61C,mBAC5B,QACA,UACA,OACA,SAGF71C,KAAK+1C,mBACH,kBACA,UACA,mBACA,UACA,oBACA,UACA,UACA/1C,KAAK81C,mBACL,QACA91C,KAAK81C,mBACL,WACA91C,KAAK81C,mBACL,UACA91C,KAAK81C,mBACL,UACA91C,KAAK81C,oBAGP91C,KAAKg2C,uBACH,OACAjhB,EAAMM,iBACN,SACA,UACA,eACA,UACA,UACA,UACA,QACA,UAGFr1B,KAAKi2C,gBACH,OACAlhB,EAAMM,iBACN,kBACAN,EAAMM,iBACN,iBACAN,EAAMM,iBACN,cACAN,EAAMQ,iBAAiBv1B,KAAK+1C,mBAC5B,cACAhhB,EAAMQ,iBAAiBv1B,KAAKg2C,uBAC5B,eACA,UACA,QACA,SACA,aACA,SACA,qBACA,SAGFh2C,KAAKk2C,gBACH,OACAnhB,EAAMM,iBACN,cACA,UACA,eACA,UACA,QACA,SACA,OACAN,EAAMI,eAAen1B,KAAKw1C,mBAC1B,WACAzgB,EAAMI,eAAen1B,KAAKg2C,wBAG5Bh2C,KAAKm2C,qBACH,kBACAphB,EAAMM,iBACN,cACAN,EAAMM,iBACN,gBACA,UACA,kBACA,UACA,OACAN,EAAMI,eAAen1B,KAAKy1C,YAC1B,WACA1gB,EAAMI,eAAen1B,KAAKi2C,gBAC1B,WACAlhB,EAAMI,eAAen1B,KAAKk2C,gBAC1B,oBACAnhB,EAAMoB,oBACN,qBACApB,EAAMoB,qBAGRn2B,KAAKo2C,eACH,OACArhB,EAAMM,iBACN,QACA,SACA,WACAN,EAAMI,eAAe,UAGvBn1B,KAAKq2C,gBACH,WACAthB,EAAMM,iBACN,SACA,UACA,WACAN,EAAMoB,oBACN,YACA,SAGFn2B,KAAKs2C,iBACH,WACAvhB,EAAMM,iBACN,SACAN,EAAMM,iBACN,OACAN,EAAMM,iBACN,aACAN,EAAMM,iBACN,aACAN,EAAMM,iBACN,MACAN,EAAMI,eAAen1B,KAAKu1C,WAC1B,cACAxgB,EAAMQ,iBAAiBv1B,KAAK+1C,mBAC5B,WACAhhB,EAAMI,eAAen1B,KAAKq2C,gBAC1B,eACA,UACA,aACA,UACA,cACA,UACA,kBACC,KAAM,UAAW,GAClB,QACA,SACA,YACA,SACA,QACAr2C,KAAK81C,mBACL,MACA91C,KAAK81C,mBACL,QACA91C,KAAK81C,mBACL,UACA91C,KAAK81C,mBACL,SACA91C,KAAK81C,mBACL,WACA91C,KAAK81C,mBACL,eACA91C,KAAK41C,YACL,aACA51C,KAAK41C,YACL,sBACA51C,KAAK41C,YACL,gBACA51C,KAAK41C,YACL,cACA51C,KAAK41C,YACL,aACA51C,KAAK41C,YACL,kBACA51C,KAAK41C,YACL,cACA,QACA,kBACA,QACA,kBACA,QACA,WACA,QACA,eACA,QACA,eACA,QACA,iBACA,SAGF51C,KAAKu2C,iBAAmB,OAAQxhB,EAAMM,iBAAkB,WAAYN,EAAMoB,qBAE1En2B,KAAKw2C,qBACH,MACAzhB,EAAMM,iBACN,MACAN,EAAMM,iBACN,OACA,UACA,OACA,SAGFr1B,KAAKy2C,kBACH,OACA1hB,EAAMM,iBACN,gBACAN,EAAMI,eAAen1B,KAAKw2C,sBAG5Bx2C,KAAKg3B,OAASh3B,KAAK02C,kBACjB,WACA3hB,EAAMM,iBACN,SACAN,EAAMM,iBACN,gBACAN,EAAMQ,iBAAiBv1B,KAAKm2C,qBAC5B,UACAphB,EAAMI,eAAen1B,KAAKo2C,eAC1B,YACArhB,EAAMI,eAAen1B,KAAKs2C,iBAC1B,YACAvhB,EAAMI,eAAen1B,KAAKu2C,iBAC1B,aACAxhB,EAAMI,eAAen1B,KAAKy2C,kBAC1B,QACA,SACA,aACA,UACA,SACA,YAKJE,EAAG,WACD32C,KAAK42C,WAAa,OAAQ,SAAU,QAAS,SAAU,WAAY7hB,EAAMI,eAAe,YAExFn1B,KAAK62C,mBACH,OACA9hB,EAAMM,iBACN,QACA,SACA,SACA,UACA,MACAN,EAAMI,eAAen1B,KAAK42C,YAG5B52C,KAAK82C,YACH,OACA/hB,EAAMM,iBACN,QACA,SACA,SACAN,EAAMM,iBACN,cACAN,EAAMQ,iBAAiBv1B,KAAK62C,oBAG9B72C,KAAK+2C,qBAAuB,SAAU,UAAW,QAAS,WAE1D/2C,KAAKg3C,gBACH,kBACAjiB,EAAMM,iBACN,gBACAN,EAAMI,eAAen1B,KAAK+2C,qBAC1B,aACA,SAGF/2C,KAAKi3C,aAAe,MAAO,UAAW,MAAO,UAAW,MAAO,SAE/Dj3C,KAAKk3C,mBAAqB,OAAQl3C,KAAKi3C,YAAa,QAASj3C,KAAKi3C,aAElEj3C,KAAKm3C,oBACH,eACApiB,EAAMQ,iBAAiBv1B,KAAKg3C,gBAC5B,kBACAjiB,EAAMQ,iBAAiBv1B,KAAKk3C,mBAC5B,QACA,UACA,OACA,SAGFl3C,KAAKo3C,mBACH,kBACA,UACA,mBACA,UACA,oBACA,UACA,UACAp3C,KAAKm3C,mBACL,QACAn3C,KAAKm3C,mBACL,WACAn3C,KAAKm3C,mBACL,UACAn3C,KAAKm3C,oBAGPn3C,KAAKq3C,gBACH,OACAtiB,EAAMM,iBACN,kBACAN,EAAMM,iBACN,iBACAN,EAAMM,iBACN,cACAN,EAAMQ,iBAAiBv1B,KAAKo3C,mBAC5B,eACA,UACA,UACA,UACA,mBACA,UACA,UACA,UACA,mBACA,UACA,mBACA,UACA,gBACA,UACA,0BACA,UACA,2BACA,UACA,QACA,SACA,aACA,SACA,qBACA,SAGFp3C,KAAKs3C,gBACH,OACAviB,EAAMM,iBACN,cACA,UACA,eACA,UACA,QACA,SACA,OACAN,EAAMI,eAAen1B,KAAK62C,oBAG5B72C,KAAKu3C,qBACH,kBACAxiB,EAAMM,iBACN,cACAN,EAAMM,iBACN,gBACA,UACA,OACAN,EAAMI,eAAen1B,KAAK82C,YAC1B,WACA/hB,EAAMI,eAAen1B,KAAKq3C,gBAC1B,WACAtiB,EAAMI,eAAen1B,KAAKs3C,gBAC1B,oBACAviB,EAAMoB,oBACN,qBACApB,EAAMoB,qBAGRn2B,KAAKw3C,eACH,OACAziB,EAAMM,iBACN,QACA,SACA,WACAN,EAAMI,eAAe,UAGvBn1B,KAAKy3C,gBACH,WACA1iB,EAAMM,iBACN,SACA,UACA,WACAN,EAAMoB,oBACN,YACA,SAGFn2B,KAAK03C,iBACH,WACA3iB,EAAMM,iBACN,SACAN,EAAMM,iBACN,OACAN,EAAMM,iBACN,aACAN,EAAMM,iBACN,MACAN,EAAMI,eAAen1B,KAAK42C,WAC1B,cACA7hB,EAAMQ,iBAAiBv1B,KAAKo3C,mBAC5B,WACAriB,EAAMI,eAAen1B,KAAKy3C,gBAC1B,eACA,UACA,aACA,UACA,cACA,UACA,kBACC,KAAM,UAAW,GAClB,QACA,SACA,YACA,SACA,QACAz3C,KAAKm3C,mBACL,MACAn3C,KAAKm3C,mBACL,QACAn3C,KAAKm3C,mBACL,UACAn3C,KAAKm3C,mBACL,SACAn3C,KAAKm3C,mBACL,WACAn3C,KAAKm3C,mBACL,eACAn3C,KAAKi3C,YACL,aACAj3C,KAAKi3C,YACL,sBACAj3C,KAAKi3C,YACL,gBACAj3C,KAAKi3C,YACL,cACAj3C,KAAKi3C,YACL,aACAj3C,KAAKi3C,YACL,kBACAj3C,KAAKi3C,YACL,cACA,QACA,kBACA,QACA,kBACA,QACA,WACA,QACA,eACA,QACA,eACA,QACA,iBACA,SAGFj3C,KAAK23C,iBAAmB,OAAQ5iB,EAAMM,iBAAkB,WAAYN,EAAMoB,qBAE1En2B,KAAK43C,qBACH,MACA7iB,EAAMM,iBACN,MACAN,EAAMM,iBACN,OACA,UACA,OACA,SAGFr1B,KAAK63C,kBACH,OACA9iB,EAAMM,iBACN,gBACAN,EAAMI,eAAen1B,KAAK43C,sBAG5B53C,KAAKg3B,OAASh3B,KAAK83C,kBACjB,WACA/iB,EAAMM,iBACN,SACAN,EAAMM,iBACN,gBACAN,EAAMQ,iBAAiBv1B,KAAKu3C,qBAC5B,UACAxiB,EAAMI,eAAen1B,KAAKw3C,eAC1B,YACAziB,EAAMI,eAAen1B,KAAK03C,iBAC1B,YACA3iB,EAAMI,eAAen1B,KAAK23C,iBAC1B,aACA5iB,EAAMI,eAAen1B,KAAK63C,kBAC1B,QACA,SACA,aACA,UACA,SACA,YAKJE,EAAG,WACD/3C,KAAKg4C,qBAAuB,SAAU,UAAW,QAAS,WAE1Dh4C,KAAKi4C,gBACH,kBACAljB,EAAMM,iBACN,gBACAN,EAAMI,eAAen1B,KAAKg4C,qBAC1B,aACA,SAGFh4C,KAAKk4C,aAAe,MAAO,UAAW,MAAO,UAAW,MAAO,SAE/Dl4C,KAAKm4C,mBAAqB,OAAQn4C,KAAKk4C,YAAa,QAASl4C,KAAKk4C,aAElEl4C,KAAKo4C,oBACH,eACArjB,EAAMQ,iBAAiBv1B,KAAKi4C,gBAC5B,kBACAljB,EAAMQ,iBAAiBv1B,KAAKm4C,mBAC5B,QACA,UACA,OACA,SAGFn4C,KAAKq4C,mBACH,kBACA,UACA,mBACA,UACA,oBACA,UACA,UACAr4C,KAAKo4C,mBACL,QACAp4C,KAAKo4C,mBACL,WACAp4C,KAAKo4C,mBACL,UACAp4C,KAAKo4C,oBAGPp4C,KAAKs4C,gBACH,OACAvjB,EAAMM,iBACN,kBACAN,EAAMM,iBACN,cACAN,EAAMQ,iBAAiBv1B,KAAKq4C,mBAC5B,eACA,UACA,UACA,UACA,mBACA,UACA,UACA,UACA,mBACA,UACA,mBACA,UACA,gBACA,UACA,0BACA,UACA,2BACA,UACA,QACA,SACA,aACA,SACA,qBACA,SAGFr4C,KAAKu4C,WAAa,OAAQ,SAAU,QAAS,SAAU,WAAYxjB,EAAMI,eAAe,YAExFn1B,KAAKw4C,YACH,OACAzjB,EAAMM,iBACN,SACAN,EAAMM,iBACN,QACA,SACA,MACAN,EAAMI,eAAen1B,KAAKu4C,WAC1B,SACA,WAGFv4C,KAAKy4C,gBACH,OACA1jB,EAAMM,iBACN,cACA,UACA,eACA,UACA,QACA,SACA,OACAN,EAAMI,eAAen1B,KAAKw4C,aAG5Bx4C,KAAK04C,qBACH,cACA3jB,EAAMM,iBACN,cACAN,EAAMM,iBACN,gBACA,UACA,WACAN,EAAMI,eAAen1B,KAAKs4C,gBAC1B,WACAvjB,EAAMI,eAAen1B,KAAKy4C,gBAC1B,oBACA1jB,EAAMoB,oBACN,qBACApB,EAAMoB,qBAGRn2B,KAAK24C,eACH,OACA5jB,EAAMM,iBACN,QACA,SACA,WACAN,EAAMI,eAAe,UAGvBn1B,KAAK44C,gBACH,WACA7jB,EAAMM,iBACN,SACA,UACA,WACAN,EAAMoB,oBACN,YACA,SAGFn2B,KAAK64C,iBACH,WACA9jB,EAAMM,iBACN,SACAN,EAAMM,iBACN,OACAN,EAAMM,iBACN,aACAN,EAAMM,iBACN,MACAN,EAAMI,eAAen1B,KAAKu4C,WAC1B,cACAxjB,EAAMQ,iBAAiBv1B,KAAKq4C,mBAC5B,WACAtjB,EAAMI,eAAen1B,KAAK44C,gBAC1B,eACA,UACA,aACA,UACA,cACA,UACA,kBACC,KAAM,UAAW,GAClB,QACA,SACA,YACA,SACA,QACA54C,KAAKo4C,mBACL,MACAp4C,KAAKo4C,mBACL,QACAp4C,KAAKo4C,mBACL,UACAp4C,KAAKo4C,mBACL,SACAp4C,KAAKo4C,mBACL,WACAp4C,KAAKo4C,mBACL,eACAp4C,KAAKk4C,YACL,aACAl4C,KAAKk4C,YACL,sBACAl4C,KAAKk4C,YACL,gBACAl4C,KAAKk4C,YACL,cACAl4C,KAAKk4C,YACL,aACAl4C,KAAKk4C,YACL,kBACAl4C,KAAKk4C,YACL,cACA,QACA,kBACA,QACA,kBACA,QACA,WACA,QACA,eACA,QACA,eACA,QACA,iBACA,SAGFl4C,KAAK84C,iBAAmB,OAAQ/jB,EAAMM,iBAAkB,WAAYN,EAAMoB,qBAE1En2B,KAAK+4C,qBACH,MACAhkB,EAAMM,iBACN,MACAN,EAAMM,iBACN,OACA,UACA,OACA,SAGFr1B,KAAKg5C,kBACH,OACAjkB,EAAMM,iBACN,gBACAN,EAAMI,eAAen1B,KAAK+4C,sBAG5B/4C,KAAKg3B,OAASh3B,KAAKi5C,kBACjB,WACAlkB,EAAMM,iBACN,SACAN,EAAMM,iBACN,gBACAN,EAAMQ,iBAAiBv1B,KAAK04C,qBAC5B,UACA3jB,EAAMI,eAAen1B,KAAK24C,eAC1B,YACA5jB,EAAMI,eAAen1B,KAAK64C,iBAC1B,YACA9jB,EAAMI,eAAen1B,KAAK84C,iBAC1B,aACA/jB,EAAMI,eAAen1B,KAAKg5C,kBAC1B,QACA,SACA,aACA,UACA,SACA,YAKJE,EAAG,WACDl5C,KAAKm5C,mBACH,OACApkB,EAAMM,iBACN,aACAN,EAAMM,iBACN,QACA,SACA,SACA,WAGFr1B,KAAKo5C,qBAAuB,SAAU,UAAW,QAAS,WAE1Dp5C,KAAKq5C,gBACH,kBACAtkB,EAAMM,iBACN,gBACAN,EAAMI,eAAen1B,KAAKo5C,qBAC1B,aACA,SAGFp5C,KAAKs5C,aAAe,MAAO,UAAW,MAAO,UAAW,MAAO,SAE/Dt5C,KAAKu5C,mBAAqB,OAAQv5C,KAAKs5C,YAAa,QAASt5C,KAAKs5C,aAElEt5C,KAAKw5C,oBACH,eACAzkB,EAAMQ,iBAAiBv1B,KAAKq5C,gBAC5B,kBACAtkB,EAAMQ,iBAAiBv1B,KAAKu5C,mBAC5B,QACA,UACA,OACA,SAGFv5C,KAAKy5C,mBACH,kBACA,UACA,mBACA,UACA,oBACA,UACA,UACAz5C,KAAKw5C,mBACL,QACAx5C,KAAKw5C,mBACL,WACAx5C,KAAKw5C,mBACL,UACAx5C,KAAKw5C,oBAGPx5C,KAAK05C,gBACH,OACA3kB,EAAMM,iBACN,kBACAN,EAAMM,iBACN,cACAN,EAAMQ,iBAAiBv1B,KAAKy5C,mBAC5B,eACA,UACA,UACA,UACA,mBACA,UACA,UACA,UACA,mBACA,UACA,mBACA,UACA,gBACA,UACA,0BACA,UACA,2BACA,UACA,QACA,SACA,aACA,SACA,qBACA,SAGFz5C,KAAK25C,qBACH,cACA5kB,EAAMI,eAAen1B,KAAKm5C,mBAC1B,WACApkB,EAAMI,eAAen1B,KAAK05C,gBAC1B,gBACA,UACA,oBACA3kB,EAAMoB,oBACN,qBACApB,EAAMoB,qBAGRn2B,KAAK45C,eACH,OACA7kB,EAAMM,iBACN,QACA,SACA,WACAN,EAAMI,eAAe,UAGvBn1B,KAAK65C,WAAa,QAAS9kB,EAAMI,eAAen1B,KAAKw5C,oBAAqB,OAAQ,SAElFx5C,KAAK85C,gBACH,WACA/kB,EAAMM,iBACN,SACA,UACA,WACAN,EAAMoB,oBACN,YACA,SAGFn2B,KAAK+5C,iBACH,WACAhlB,EAAMM,iBACN,SACAN,EAAMM,iBACN,OACAN,EAAMM,iBACN,aACAN,EAAMM,iBACN,MACAN,EAAMI,eAAen1B,KAAK65C,WAC1B,cACA9kB,EAAMQ,iBAAiBv1B,KAAKy5C,mBAC5B,WACA1kB,EAAMI,eAAen1B,KAAK85C,gBAC1B,eACA,UACA,aACA,UACA,cACA,UACA,kBACC,KAAM,UAAW,GAClB,QACA,SACA,YACA,SACA,QACA95C,KAAKw5C,mBACL,MACAx5C,KAAKw5C,mBACL,QACAx5C,KAAKw5C,mBACL,UACAx5C,KAAKw5C,mBACL,SACAx5C,KAAKw5C,mBACL,WACAx5C,KAAKw5C,mBACL,eACAx5C,KAAKs5C,YACL,aACAt5C,KAAKs5C,YACL,sBACAt5C,KAAKs5C,YACL,gBACAt5C,KAAKs5C,YACL,cACAt5C,KAAKs5C,YACL,aACAt5C,KAAKs5C,YACL,kBACAt5C,KAAKs5C,YACL,cACA,QACA,kBACA,QACA,kBACA,QACA,WACA,QACA,eACA,QACA,eACA,QACA,iBACA,SAGFt5C,KAAKg6C,iBAAmB,OAAQjlB,EAAMM,iBAAkB,WAAYN,EAAMoB,qBAE1En2B,KAAKi6C,qBACH,MACAllB,EAAMM,iBACN,MACAN,EAAMM,iBACN,OACA,UACA,OACA,SAGFr1B,KAAKk6C,kBACH,OACAnlB,EAAMM,iBACN,gBACAN,EAAMI,eAAen1B,KAAKi6C,sBAG5Bj6C,KAAKg3B,OAASh3B,KAAKm6C,kBACjB,WACAplB,EAAMM,iBACN,SACAN,EAAMM,iBACN,gBACAN,EAAMQ,iBAAiBv1B,KAAK25C,qBAC5B,UACA5kB,EAAMI,eAAen1B,KAAK45C,eAC1B,YACA7kB,EAAMI,eAAen1B,KAAK+5C,iBAC1B,YACAhlB,EAAMI,eAAen1B,KAAKg6C,iBAC1B,aACAjlB,EAAMI,eAAen1B,KAAKk6C,kBAC1B,QACA,SACA,aACA,UACA,SACA,YAKJE,EAAG,WACDp6C,KAAKq6C,mBACH,OACAtlB,EAAMM,iBACN,aACAN,EAAMM,iBACN,QACA,SACA,SACA,WAGFr1B,KAAKs6C,qBAAuB,SAAU,UAAW,QAAS,WAE1Dt6C,KAAKu6C,gBACH,kBACAxlB,EAAMM,iBACN,gBACAN,EAAMI,eAAen1B,KAAKs6C,qBAC1B,aACA,SAGFt6C,KAAKw6C,aAAe,MAAO,UAAW,MAAO,UAAW,MAAO,SAE/Dx6C,KAAKy6C,mBAAqB,OAAQz6C,KAAKw6C,YAAa,QAASx6C,KAAKw6C,aAElEx6C,KAAK06C,oBACH,eACA3lB,EAAMQ,iBAAiBv1B,KAAKu6C,gBAC5B,kBACAxlB,EAAMQ,iBAAiBv1B,KAAKy6C,mBAC5B,QACA,UACA,OACA,SAGFz6C,KAAK26C,mBACH,kBACA,UACA,mBACA,UACA,oBACA,UACA,UACA36C,KAAK06C,mBACL,QACA16C,KAAK06C,mBACL,WACA16C,KAAK06C,mBACL,UACA16C,KAAK06C,oBAGP16C,KAAK46C,gBACH,OACA7lB,EAAMM,iBACN,kBACAN,EAAMM,iBACN,cACAN,EAAMQ,iBAAiBv1B,KAAK26C,mBAC5B,eACA,UACA,UACA,UACA,mBACA,UACA,UACA,UACA,mBACA,UACA,mBACA,UACA,gBACA,UACA,0BACA,UACA,2BACA,UACA,QACA,SACA,aACA,SACA,qBACA,SAGF36C,KAAK66C,qBACH,cACA9lB,EAAMI,eAAen1B,KAAKq6C,mBAC1B,WACAtlB,EAAMI,eAAen1B,KAAK46C,gBAC1B,gBACA,UACA,oBACA7lB,EAAMoB,qBAGRn2B,KAAK86C,eACH,OACA/lB,EAAMM,iBACN,QACA,SACA,WACAN,EAAMI,eAAe,UAGvBn1B,KAAK+6C,WAAa,QAAShmB,EAAMI,eAAen1B,KAAK06C,oBAAqB,OAAQ,SAElF16C,KAAKg7C,gBACH,WACAjmB,EAAMM,iBACN,SACA,UACA,WACAN,EAAMoB,oBACN,YACA,SAGFn2B,KAAKi7C,iBACH,WACAlmB,EAAMM,iBACN,SACAN,EAAMM,iBACN,OACAN,EAAMM,iBACN,aACAN,EAAMM,iBACN,MACAN,EAAMI,eAAen1B,KAAK+6C,WAC1B,cACAhmB,EAAMQ,iBAAiBv1B,KAAK26C,mBAC5B,WACA5lB,EAAMI,eAAen1B,KAAKg7C,gBAC1B,eACA,UACA,aACA,UACA,cACA,UACA,kBACC,KAAM,UAAW,GAClB,QACA,SACA,YACA,SACA,QACAh7C,KAAK06C,mBACL,MACA16C,KAAK06C,mBACL,QACA16C,KAAK06C,mBACL,UACA16C,KAAK06C,mBACL,SACA16C,KAAK06C,mBACL,WACA16C,KAAK06C,mBACL,eACA16C,KAAKw6C,YACL,aACAx6C,KAAKw6C,YACL,sBACAx6C,KAAKw6C,YACL,gBACAx6C,KAAKw6C,YACL,cACAx6C,KAAKw6C,YACL,aACAx6C,KAAKw6C,YACL,kBACAx6C,KAAKw6C,YACL,cACA,QACA,kBACA,QACA,kBACA,QACA,WACA,QACA,eACA,QACA,eACA,QACA,iBACA,SAGFx6C,KAAKk7C,iBAAmB,OAAQnmB,EAAMM,iBAAkB,WAAYN,EAAMoB,qBAE1En2B,KAAKm7C,qBACH,MACApmB,EAAMM,iBACN,MACAN,EAAMM,iBACN,OACA,UACA,OACA,SAGFr1B,KAAKo7C,kBACH,OACArmB,EAAMM,iBACN,gBACAN,EAAMI,eAAen1B,KAAKm7C,sBAG5Bn7C,KAAKg3B,OAASh3B,KAAKq7C,kBACjB,WACAtmB,EAAMM,iBACN,SACAN,EAAMM,iBACN,gBACAN,EAAMQ,iBAAiBv1B,KAAK66C,qBAC5B,UACA9lB,EAAMI,eAAen1B,KAAK86C,eAC1B,YACA/lB,EAAMI,eAAen1B,KAAKi7C,iBAC1B,YACAlmB,EAAMI,eAAen1B,KAAKk7C,iBAC1B,aACAnmB,EAAMI,eAAen1B,KAAKo7C,kBAC1B,QACA,SACA,aACA,UACA,SACA,YAKJE,EAAG,WACDt7C,KAAKu7C,mBACH,OACAxmB,EAAMM,iBACN,aACAN,EAAMM,iBACN,QACA,SACA,SACA,WAGFr1B,KAAKw7C,qBAAuB,SAAU,UAAW,QAAS,WAE1Dx7C,KAAKy7C,gBACH,kBACA1mB,EAAMM,iBACN,gBACAN,EAAMI,eAAen1B,KAAKw7C,qBAC1B,aACA,SAGFx7C,KAAK07C,aAAe,MAAO,UAAW,MAAO,UAAW,MAAO,SAE/D17C,KAAK27C,mBAAqB,OAAQ37C,KAAK07C,YAAa,QAAS17C,KAAK07C,aAElE17C,KAAK47C,oBACH,eACA7mB,EAAMQ,iBAAiBv1B,KAAKy7C,gBAC5B,kBACA1mB,EAAMQ,iBAAiBv1B,KAAK27C,mBAC5B,QACA,UACA,OACA,SAGF37C,KAAK67C,mBACH,kBACA,UACA,mBACA,UACA,oBACA,UACA,UACA77C,KAAK47C,mBACL,QACA57C,KAAK47C,mBACL,WACA57C,KAAK47C,mBACL,UACA57C,KAAK47C,oBAGP57C,KAAK87C,gBACH,OACA/mB,EAAMM,iBACN,kBACAN,EAAMM,iBACN,cACAN,EAAMQ,iBAAiBv1B,KAAK67C,mBAC5B,eACA,UACA,UACA,UACA,mBACA,UACA,UACA,UACA,mBACA,UACA,mBACA,UACA,gBACA,UACA,0BACA,UACA,2BACA,UACA,QACA,SACA,aACA,SACA,qBACA,SAGF77C,KAAK+7C,qBACH,cACAhnB,EAAMI,eAAen1B,KAAKu7C,mBAC1B,WACAxmB,EAAMI,eAAen1B,KAAK87C,gBAC1B,gBACA,UACA,oBACA/mB,EAAMoB,qBAGRn2B,KAAKg8C,eACH,OACAjnB,EAAMM,iBACN,QACA,SACA,WACAN,EAAMI,eAAe,UAGvBn1B,KAAKi8C,WAAa,QAASlnB,EAAMI,eAAen1B,KAAK47C,oBAAqB,OAAQ,SAElF57C,KAAKk8C,gBACH,WACAnnB,EAAMM,iBACN,SACA,UACA,WACAN,EAAMoB,oBACN,YACA,SAGFn2B,KAAKm8C,iBACH,WACApnB,EAAMM,iBACN,SACAN,EAAMM,iBACN,OACAN,EAAMM,iBACN,aACAN,EAAMM,iBACN,MACAN,EAAMI,eAAen1B,KAAKi8C,WAC1B,cACAlnB,EAAMQ,iBAAiBv1B,KAAK67C,mBAC5B,WACA9mB,EAAMI,eAAen1B,KAAKk8C,gBAC1B,eACA,UACA,aACA,UACA,cACA,UACA,kBACC,KAAM,UAAW,GAClB,QACA,SACA,YACA,SACA,QACAl8C,KAAK47C,mBACL,MACA57C,KAAK47C,mBACL,QACA57C,KAAK47C,mBACL,UACA57C,KAAK47C,mBACL,SACA57C,KAAK47C,mBACL,WACA57C,KAAK47C,mBACL,eACA57C,KAAK07C,YACL,aACA17C,KAAK07C,YACL,sBACA17C,KAAK07C,YACL,gBACA17C,KAAK07C,YACL,cACA17C,KAAK07C,YACL,aACA17C,KAAK07C,YACL,kBACA17C,KAAK07C,YACL,cACA,QACA,kBACA,QACA,kBACA,QACA,WACA,QACA,eACA,QACA,eACA,QACA,iBACA,SAGF17C,KAAKo8C,iBAAmB,OAAQrnB,EAAMM,iBAAkB,WAAYN,EAAMoB,qBAE1En2B,KAAKq8C,qBACH,MACAtnB,EAAMM,iBACN,MACAN,EAAMM,iBACN,OACA,UACA,OACA,SAGFr1B,KAAKs8C,kBACH,OACAvnB,EAAMM,iBACN,gBACAN,EAAMI,eAAen1B,KAAKq8C,sBAG5Br8C,KAAKg3B,OAASh3B,KAAKu8C,kBACjB,WACAxnB,EAAMM,iBACN,gBACAN,EAAMQ,iBAAiBv1B,KAAK+7C,qBAC5B,UACAhnB,EAAMI,eAAen1B,KAAKg8C,eAC1B,YACAjnB,EAAMI,eAAen1B,KAAKm8C,iBAC1B,YACApnB,EAAMI,eAAen1B,KAAKo8C,iBAC1B,aACArnB,EAAMI,eAAen1B,KAAKs8C,kBAC1B,QACA,SACA,aACA,UACA,SACA,YAKJr7C,EAAG,WACDjB,KAAKw8C,qBAAuB,SAAU,UAAW,QAAS,WAE1Dx8C,KAAKy8C,gBACH,gBACA1nB,EAAMI,eAAen1B,KAAKw8C,qBAC1B,aACA,QACA,kBACAznB,EAAMM,kBAGRr1B,KAAK08C,aAAe,MAAO,UAAW,MAAO,UAAW,MAAO,SAE/D18C,KAAK28C,mBAAqB,OAAQ38C,KAAK08C,YAAa,QAAS18C,KAAK08C,aAElE18C,KAAK48C,oBACH,eACA7nB,EAAMQ,iBAAiBv1B,KAAKy8C,gBAC5B,kBACA1nB,EAAMQ,iBAAiBv1B,KAAK28C,mBAC5B,OACA,QACA,QACA,WAGF38C,KAAK68C,mBACH,kBACA,UACA,mBACA,UACA,oBACA,UACA,UACA78C,KAAK48C,mBACL,QACA58C,KAAK48C,mBACL,WACA58C,KAAK48C,mBACL,UACA58C,KAAK48C,oBAGP58C,KAAK88C,gBACH,cACA/nB,EAAMQ,iBAAiBv1B,KAAK68C,mBAC5B,QACA,SACA,aACA,SACA,qBACA,QACA,eACA,UACA,OACA9nB,EAAMM,iBACN,UACA,UACA,mBACA,UACA,UACA,UACA,mBACA,UACA,mBACA,UACA,gBACA,UACA,0BACA,UACA,2BACA,UACA,kBACAN,EAAMM,kBAGRr1B,KAAK+8C,mBACH,QACA,SACA,OACAhoB,EAAMM,iBACN,aACAN,EAAMM,iBACN,SACA,WAGFr1B,KAAKg9C,qBACH,WACAjoB,EAAMI,eAAen1B,KAAK88C,gBAC1B,gBACA,UACA,oBACA/nB,EAAMoB,oBACN,cACApB,EAAMI,eAAen1B,KAAK+8C,oBAG5B/8C,KAAKi9C,eACH,WACAloB,EAAMI,eAAe,SACrB,QACA,SACA,OACAJ,EAAMM,kBAGRr1B,KAAKk9C,WAAa,QAASnoB,EAAMI,eAAen1B,KAAK48C,oBAAqB,OAAQ,SAElF58C,KAAKm9C,gBACH,YACA,QACA,WACApoB,EAAMoB,oBACN,WACApB,EAAMM,iBACN,SACA,WAGFr1B,KAAKo9C,iBACH,cACAroB,EAAMQ,iBAAiBv1B,KAAK68C,mBAC5B,WACA9nB,EAAMM,iBACN,cACA,QACA,kBACA,QACA,QACAr1B,KAAK48C,mBACL,MACA7nB,EAAMI,eAAen1B,KAAKk9C,WAC1B,SACAnoB,EAAMM,iBACN,eACA,UACA,aACA,UACA,cACA,UACA,kBACA,QACA,WACAN,EAAMI,eAAen1B,KAAKm9C,gBAC1B,QACA,SACA,eACAn9C,KAAK08C,YACL,YACA,SACA,WACA,QACA,OACA3nB,EAAMM,iBACN,MACAr1B,KAAK48C,mBACL,QACA58C,KAAK48C,mBACL,eACA,QACA,aACA58C,KAAK08C,YACL,aACA3nB,EAAMM,iBACN,eACA,QACA,kBACC,KAAM,UAAW,GAClB,sBACAr1B,KAAK08C,YACL,gBACA18C,KAAK08C,YACL,cACA18C,KAAK08C,YACL,aACA18C,KAAK08C,YACL,kBACA18C,KAAK08C,YACL,iBACA,QACA,SACA18C,KAAK48C,oBAGP58C,KAAKq9C,iBAAmB,WAAYtoB,EAAMoB,oBAAqB,OAAQpB,EAAMM,kBAE7Er1B,KAAKs9C,qBACH,MACAvoB,EAAMM,iBACN,MACAN,EAAMM,iBACN,OACA,UACA,OACA,SAGFr1B,KAAKu9C,kBACH,OACAxoB,EAAMM,iBACN,gBACAN,EAAMI,eAAen1B,KAAKs9C,sBAG5Bt9C,KAAKg3B,OAASh3B,KAAKw9C,kBACjB,gBACAzoB,EAAMQ,iBAAiBv1B,KAAKg9C,qBAC5B,aACA,UACA,QACA,SACA,UACAjoB,EAAMI,eAAen1B,KAAKi9C,eAC1B,YACAloB,EAAMI,eAAen1B,KAAKo9C,iBAC1B,YACAroB,EAAMI,eAAen1B,KAAKq9C,iBAC1B,aACAtoB,EAAMI,eAAen1B,KAAKu9C,kBAC1B,SACA,YAKJE,EAAG,WACDz9C,KAAK09C,eACH,WACA3oB,EAAMI,eAAe,SACrB,QACA,SACA,OACAJ,EAAMM,kBAGRr1B,KAAK29C,qBAAuB,SAAU,UAAW,QAAS,WAE1D39C,KAAK49C,gBACH,gBACA7oB,EAAMI,eAAen1B,KAAK29C,qBAC1B,aACA,QACA,kBACA5oB,EAAMM,kBAGRr1B,KAAK69C,aAAe,MAAO,UAAW,MAAO,UAAW,MAAO,SAE/D79C,KAAK89C,mBAAqB,OAAQ99C,KAAK69C,YAAa,QAAS79C,KAAK69C,aAElE79C,KAAK+9C,oBACH,eACAhpB,EAAMQ,iBAAiBv1B,KAAK49C,gBAC5B,kBACA7oB,EAAMQ,iBAAiBv1B,KAAK89C,mBAC5B,OACA,QACA,QACA,WAGF99C,KAAKg+C,mBACH,kBACA,UACA,mBACA,UACA,oBACA,UACA,UACAh+C,KAAK+9C,mBACL,QACA/9C,KAAK+9C,mBACL,WACA/9C,KAAK+9C,mBACL,UACA/9C,KAAK+9C,oBAGP/9C,KAAKi+C,WAAa,QAASlpB,EAAMI,eAAen1B,KAAK+9C,oBAAqB,OAAQ,SAElF/9C,KAAKk+C,gBACH,YACA,QACA,WACAnpB,EAAMoB,oBACN,WACApB,EAAMM,iBACN,SACA,WAGFr1B,KAAKm+C,iBACH,cACAppB,EAAMQ,iBAAiBv1B,KAAKg+C,mBAC5B,WACAjpB,EAAMM,iBACN,cACA,QACA,kBACA,QACA,QACAr1B,KAAK+9C,mBACL,MACAhpB,EAAMI,eAAen1B,KAAKi+C,WAC1B,SACAlpB,EAAMM,iBACN,eACA,UACA,aACA,UACA,cACA,UACA,kBACA,QACA,WACAN,EAAMI,eAAen1B,KAAKk+C,gBAC1B,QACA,SACA,eACAl+C,KAAK69C,YACL,YACA,SACA,WACA,QACA,OACA9oB,EAAMM,iBACN,MACAr1B,KAAK+9C,mBACL,QACA/9C,KAAK+9C,mBACL,eACA,QACA,aACA/9C,KAAK69C,YACL,aACA9oB,EAAMM,iBACN,eACA,QACA,kBACC,KAAM,UAAW,GAClB,sBACAr1B,KAAK69C,YACL,gBACA79C,KAAK69C,YACL,cACA79C,KAAK69C,YACL,aACA79C,KAAK69C,YACL,kBACA79C,KAAK69C,YACL,iBACA,QACA,SACA79C,KAAK+9C,oBAGP/9C,KAAKo+C,iBAAmB,WAAYrpB,EAAMoB,oBAAqB,OAAQpB,EAAMM,kBAE7Er1B,KAAKq+C,qBACH,MACAtpB,EAAMM,iBACN,MACAN,EAAMM,iBACN,OAC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AAU,SAAU,SAAU,OAAQ,SAAU,WAAY,UAEjGn3D,KAAKg3B,OAASh3B,KAAKo3D,uBACjB,UACA,SACA,YACAriC,EAAMI,eAAen1B,KAAKk3D,uBAC1B,aACAniC,EAAMI,eAAen1B,KAAKm3D,sBAK9B1Z,EAAG,WACDz9C,KAAKm3D,oBAAsB,SAAU,SAAU,SAAU,SAAU,OAAQ,SAAU,WAAY,UAEjGn3D,KAAKg3B,OAASh3B,KAAKq3D,yBACjB,UACA,SACA,aACAtiC,EAAMI,eAAen1B,KAAKm3D,iFC7CpC,IAAMpiC,EAAQt0B,EAAQ,6BAEtBf,EAAOD,UAMHyB,KAAM,OACN8zB,UAEEsmB,EAAG,WACDt7C,KAAKs3D,wBACH,YACA,SACA,YACA,SACA,YACA,SACA,YACA,UAGFt3D,KAAKg3B,OAASh3B,KAAKu3D,gBACjB,SACA,UACA,SACA,UACA,eACAxiC,EAAMQ,iBAAiBv1B,KAAKs3D,wBAC5B,YACA,SACA,YACA,SACA,MACA,SACA,aACA,SACA,YACA,SACA,UACA,SACA,QACA,SACA,SACA,QACA,YACA,QACA,YACA,QACA,YACA,QACA,cACA,QACA,YACA,QACA,YACA,QACA,YACA,QACA,YACAviC,EAAMI,eAAe,SACrB,YACAJ,EAAMI,eAAe,WAKzBl0B,EAAG,WACDjB,KAAKg3B,OAASh3B,KAAKw3D,gBACjB,SACA,UACA,SACA,UACA,MACA,SACA,aACA,SACA,YACA,SACA,UACA,SACA,QACA,SACA,SACA,QACA,WACA,QACA,WACA,QACA,UACA,QACA,cACA,QACA,YACA,QACA,YACA,QACA,YACA,QACA,YACAziC,EAAMI,eAAe,SACrB,YACAJ,EAAMI,eAAe,WAKzBsoB,EAAG,WACDz9C,KAAKg3B,OAASh3B,KAAKy3D,gBACjB,OACA1iC,EAAMI,eAAe,SACrB,QACA,SACA,SACA,UACA,WACA,QACA,WACA,QACA,UACA,QACA,cACA,QACA,aACA,SACA,mBACA,qEC/HV,IAAMJ,EAAQt0B,EAAQ,6BAEtBf,EAAOD,UAMHyB,KAAM,OACN8zB,UAEEgf,EAAG,WACDh0C,KAAK03D,oBACH,aACA,SACA,eACA,SACA,oBACA3iC,EAAMoB,oBACN,qBACApB,EAAMoB,oBACN,sBACApB,EAAMoB,oBACN,uBACApB,EAAMoB,oBACN,mBACApB,EAAMoB,oBACN,iBACA,UACA,WACA,SACA,SACApB,EAAMI,gBAAgB,KAAM,UAAW,IACvC,YACC,KAAM,UAAW,GAClB,eACC,KAAM,UAAW,GAClB,WACA,UACA,SACA,UACA,SACA,UACA,OACAJ,EAAMM,iBACN,QACA,UAGFr1B,KAAK23D,wBAA0B,aAAc5iC,EAAM2B,qBAEnD12B,KAAK43D,iBAAmB,aAAc7iC,EAAMoB,oBAAqB,QAAS,UAE1En2B,KAAKg3B,OAASh3B,KAAK63D,UACjB,4BACA9iC,EAAMoB,oBACN,+BACApB,EAAMoB,oBACN,8BACApB,EAAMoB,oBACN,iCACApB,EAAMoB,oBACN,eACApB,EAAMI,eAAen1B,KAAK03D,oBAC1B,mBACA3iC,EAAMI,eAAen1B,KAAK23D,wBAC1B,gBACA5iC,EAAMI,eAAen1B,KAAK43D,mBAK9BtiB,EAAG,WACDt1C,KAAK03D,oBACH,aACA,SACA,eACA,SACA,oBACA3iC,EAAMoB,oBACN,qBACApB,EAAMoB,oBACN,sBACApB,EAAMoB,oBACN,uBACApB,EAAMoB,oBACN,mBACApB,EAAMoB,oBACN,iBACA,UACA,WACA,SACA,SACApB,EAAMI,gBAAgB,KAAM,UAAW,IACvC,YACC,KAAM,UAAW,GAClB,eACC,KAAM,UAAW,GAClB,WACA,UACA,SACA,UACA,SACA,UACA,OACAJ,EAAMM,iBACN,QACA,UAGFr1B,KAAK23D,wBAA0B,aAAc5iC,EAAM2B,qBAEnD12B,KAAKg3B,OAASh3B,KAAK63D,UACjB,4BACA9iC,EAAMoB,oBACN,+BACApB,EAAMoB,oBACN,8BACApB,EAAMoB,oBACN,iCACApB,EAAMoB,oBACN,eACApB,EAAMI,eAAen1B,KAAK03D,oBAC1B,mBACA3iC,EAAMI,eAAen1B,KAAK23D,0BAK9BhhB,EAAG,WACD32C,KAAK03D,oBACH,aACA,SACA,eACA,SACA,oBACA3iC,EAAMoB,oBACN,qBACApB,EAAMoB,oBACN,sBACApB,EAAMoB,oBACN,uBACApB,EAAMoB,oBACN,mBACApB,EAAMoB,oBACN,iBACA,UACA,WACA,SACA,SACApB,EAAMI,gBAAgB,KAAM,UAAW,IACvC,YACC,KAAM,UAAW,GAClB,eACC,KAAM,UAAW,GAClB,WACA,UACA,SACA,UACA,SACA,UACA,OACAJ,EAAMM,iBACN,QACA,UAGFr1B,KAAKg3B,OAASh3B,KAAK63D,UACjB,4BACA9iC,EAAMoB,oBACN,+BACApB,EAAMoB,oBACN,8BACApB,EAAMoB,oBACN,iCACApB,EAAMoB,oBACN,eACApB,EAAMI,eAAen1B,KAAK03D,sBAK9B3f,EAAG,WACD/3C,KAAK03D,oBACH,aACA,SACA,eACA,SACA,oBACA3iC,EAAMoB,oBACN,qBACApB,EAAMoB,oBACN,sBACApB,EAAMoB,oBACN,uBACApB,EAAMoB,oBACN,SACApB,EAAMI,gBAAgB,KAAM,UAAW,IACvC,YACC,KAAM,UAAW,GAClB,eACC,KAAM,UAAW,GAClB,WACA,UACA,SACA,UACA,SACA,UACA,OACAJ,EAAMM,iBACN,QACA,UAGFr1B,KAAKg3B,OAASh3B,KAAK63D,UACjB,4BACA9iC,EAAMoB,oBACN,+BACApB,EAAMoB,oBACN,8BACApB,EAAMoB,oBACN,iCACApB,EAAMoB,oBACN,eACApB,EAAMI,eAAen1B,KAAK03D,sBAK9Bxe,EAAG,WACDl5C,KAAK03D,oBACH,aACA,SACA,eACA,SACA,oBACA3iC,EAAMoB,oBACN,qBACApB,EAAMoB,oBACN,mBACApB,EAAMoB,oBACN,sBACApB,EAAMoB,oBACN,uBACApB,EAAMoB,oBACN,qBACApB,EAAMoB,oBACN,SACApB,EAAMI,gBAAgB,KAAM,UAAW,IACvC,YACC,KAAM,UAAW,GAClB,eACC,KAAM,UAAW,GAClB,WACA,UACA,SACA,UACA,SACA,UACA,OACAJ,EAAMM,kBAGRr1B,KAAKg3B,OAASh3B,KAAK63D,UACjB,4BACA9iC,EAAMoB,oBACN,0BACApB,EAAMoB,oBACN,+BACApB,EAAMoB,oBACN,6BACApB,EAAMoB,oBACN,8BACApB,EAAMoB,oBACN,4BACApB,EAAMoB,oBACN,iCACApB,EAAMoB,oBACN,+BACApB,EAAMoB,oBACN,eACApB,EAAMI,eAAen1B,KAAK03D,sBAK9Btd,EAAG,WACDp6C,KAAK03D,oBACH,aACA,SACA,eACA,SACA,oBACA3iC,EAAMoB,oBACN,qBACApB,EAAMoB,oBACN,mBACApB,EAAMoB,oBACN,sBACApB,EAAMoB,oBACN,uBACApB,EAAMoB,oBACN,qBACApB,EAAMoB,oBACN,SACApB,EAAMI,gBAAgB,KAAM,UAAW,IACvC,YACC,KAAM,UAAW,GAClB,eACC,KAAM,UAAW,GAClB,WACA,UACA,SACA,UACA,SACA,WAGFn1B,KAAKg3B,OAASh3B,KAAK63D,UACjB,4BACA9iC,EAAMoB,oBACN,0BACApB,EAAMoB,oBACN,+BACApB,EAAMoB,oBACN,6BACApB,EAAMoB,oBACN,8BACApB,EAAMoB,oBACN,4BACApB,EAAMoB,oBACN,iCACApB,EAAMoB,oBACN,+BACApB,EAAMoB,oBACN,eACApB,EAAMI,eAAen1B,KAAK03D,sBAK9Bpc,EAAG,WACDt7C,KAAK03D,oBACH,aACA,SACA,eACA,SACA,iBACA3iC,EAAMoB,oBACN,kBACApB,EAAMoB,oBACN,gBACApB,EAAMoB,oBACN,SACApB,EAAMI,gBAAgB,KAAM,UAAW,IACvC,YACC,KAAM,UAAW,GAClB,eACC,KAAM,UAAW,GAClB,WACA,UACA,SACA,UACA,SACA,WAGFn1B,KAAKg3B,OAASh3B,KAAK63D,UACjB,8BACA9iC,EAAMoB,oBACN,4BACApB,EAAMoB,oBACN,wCACApB,EAAMoB,oBACN,sCACApB,EAAMoB,oBACN,eACApB,EAAMI,eAAen1B,KAAK03D,sBAK9Bz2D,EAAG,WACDjB,KAAK03D,oBACH,aACA,SACA,eACA,SACA,iBACA3iC,EAAMoB,oBACN,kBACApB,EAAMoB,oBACN,gBACApB,EAAMoB,oBACN,SACApB,EAAMI,gBAAgB,KAAM,UAAW,IACvC,YACC,KAAM,UAAW,GAClB,eACC,KAAM,UAAW,GAClB,WACA,UACA,SACA,UACA,SACA,WAGFn1B,KAAKg3B,OAASh3B,KAAK63D,UACjB,8BACA9iC,EAAMoB,oBACN,4BACApB,EAAMoB,oBACN,eACApB,EAAMI,eAAen1B,KAAK03D,sBAK9Bja,EAAG,WACDz9C,KAAKg3B,OAASh3B,KAAK63D,UACjB,8BACA9iC,EAAMoB,oBACN,4BACApB,EAAMoB,iFCxahB,IAAMpB,EAAQt0B,EAAQ,6BAEtBf,EAAOD,UAMHyB,KAAM,OACN8zB,UAEEyoB,EAAG,WACDz9C,KAAK83D,oBAAsB,WAAY/iC,EAAMoB,qBAE7Cn2B,KAAK+3D,oBAAsB,eAAgBhjC,EAAMI,eAAen1B,KAAK83D,qBAErE93D,KAAKg3B,OAASh3B,KAAKg4D,iBAAmB,eAAgBjjC,EAAMI,eAAen1B,KAAK+3D,iFChBxF,IAAMhjC,EAAQt0B,EAAQ,6BAEtBf,EAAOD,UAMHyB,KAAM,OACN8zB,UAEEsmB,EAAG,WACDt7C,KAAKi4D,gBACH,UACA,SACA,QACA,SACA,YACA,SACA,YACA,SACA,YACA,SACA,YACA,SACA,SACA,UACA,SACA,UACA,YACA,QACA,YACA,QACA,YACA,QACA,YACA,QACA,YACAljC,EAAMI,eAAe,UAGvBn1B,KAAKk4D,oBACH,YACA,SACA,YACA,SACA,YACA,SACA,YACA,UAGFl4D,KAAKg3B,OAASh3B,KAAKm4D,gBACjB,YACA,SACA,YACA,SACA,YACA,SACA,YACA,SACA,WACApjC,EAAMI,eAAen1B,KAAKi4D,gBAC1B,eACAljC,EAAMQ,iBAAiBv1B,KAAKk4D,sBAKhCj3D,EAAG,WACDjB,KAAKo4D,gBACH,UACA,SACA,QACA,SACA,YACA,SACA,YACA,SACA,SACA,UACA,SACA,UACA,YACArjC,EAAMI,eAAe,UAGvBn1B,KAAKg3B,OAASh3B,KAAKq4D,gBACjB,YACA,SACA,YACA,SACA,WACAtjC,EAAMI,eAAen1B,KAAKo4D,kBAK9B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1B,KAAK87D,sFC7SpC,IAAM/mC,EAAQt0B,EAAQ,6BAEtBf,EAAOD,UAMHyB,KAAM,OACN8zB,UAEE8P,GAAI,WACF9kC,KAAKg8D,6BACH,OACAjnC,EAAM2B,oBACN,QACC,KAAM,SAAU,GACjB,YACA3B,EAAMI,eAAe,SACrB,YACAJ,EAAMI,gBAAgB,KAAM,SAAU,KAGxCn1B,KAAKi8D,gCACH,OACAlnC,EAAMM,iBACN,QACA,QACA,MACA,UACA,MACA,UACA,UACC,KAAM,UAAW,GAClB,SACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,IAGpBr1B,KAAKk8D,iCACH,OACAnnC,EAAMM,iBACN,QACA,UACA,OACAN,EAAMI,eAAen1B,KAAKi8D,iCAG5Bj8D,KAAKm8D,6BAA+B,OAAQpnC,EAAMM,iBAAkB,QAAS,WAE7Er1B,KAAKo8D,2BACH,aACArnC,EAAMI,eAAen1B,KAAKk8D,iCAC1B,cACAnnC,EAAMI,eAAen1B,KAAKm8D,8BAG5Bn8D,KAAKq8D,+BAAiC,WAAYtnC,EAAM2B,qBAExD12B,KAAKs8D,0BACH,OACAvnC,EAAMM,iBACN,OACA,QACA,QACA,QACA,mBACAN,EAAMM,iBACN,WACAN,EAAMoB,oBACN,cACApB,EAAMoB,oBACN,WACApB,EAAMoB,oBACN,WACApB,EAAMoB,oBACN,WACApB,EAAMoB,oBACN,WACApB,EAAMoB,oBACN,UACApB,EAAMoB,oBACN,cACApB,EAAMoB,oBACN,gBACApB,EAAMoB,oBACN,WACA,SACA,YACA,SACA,YACA,SACA,gBACA,SAGFn2B,KAAKu8D,6BACH,QACAxnC,EAAMoB,oBACN,OACApB,EAAMoB,oBACN,OACApB,EAAMoB,oBACN,QACApB,EAAMoB,oBACN,OACApB,EAAMoB,oBACN,OACApB,EAAMoB,qBAGRn2B,KAAKw8D,2BACH,QACAznC,EAAMM,iBACN,OACAN,EAAMM,iBACN,QACAN,EAAMM,iBACN,OACAN,EAAMM,kBAGRr1B,KAAKy8D,uBACH,aACA,QACA,WACA,QACA,MACA,QACA,aACA,QACA,YACA,SAGFz8D,KAAK08D,kCACH,YACA3nC,EAAMM,iBACN,SACAr1B,KAAKy8D,sBACL,SACAz8D,KAAKy8D,sBACL,SACAz8D,KAAKy8D,sBACL,SACAz8D,KAAKy8D,uBAGPz8D,KAAK28D,yBACH,QACA5nC,EAAMM,iBACN,iBACA,SACA,aACAN,EAAMI,eAAen1B,KAAK08D,kCAC1B,WACA18D,KAAKy8D,sBACL,YACAz8D,KAAKy8D,sBACL,aACAz8D,KAAKy8D,sBACL,eACAz8D,KAAKy8D,sBACL,YACAz8D,KAAKy8D,sBACL,YACA,SACA,YACA,UAGFz8D,KAAK48D,8BAAgC,WAAY7nC,EAAMM,iBAAkB,WAAYN,EAAMoB,qBAE3Fn2B,KAAK68D,0BACH,OACA9nC,EAAM2B,oBACN,YACA3B,EAAMM,iBACN,gBACAN,EAAMM,iBACN,QACAN,EAAMI,eAAeJ,EAAMM,kBAC3B,iBACAN,EAAMI,eAAen1B,KAAKo8D,2BAC1B,qBACArnC,EAAMI,eAAen1B,KAAKq8D,+BAC1B,OACAtnC,EAAMI,eAAeJ,EAAMM,kBAC3B,kBACAN,EAAM2B,oBACN,iBACA3B,EAAMI,eAAen1B,KAAKo8D,2BAC1B,QACArnC,EAAMI,eAAeJ,EAAMM,kBAC3B,WACAN,EAAMI,eAAen1B,KAAKs8D,0BAC1B,QACA,SACA,aACAvnC,EAAMI,eAAeJ,EAAMM,kBAC3B,mBACAN,EAAM2B,oBACN,eACA3B,EAAMoB,oBACN,eACApB,EAAMI,eAAen1B,KAAKu8D,6BAC1B,mBACAxnC,EAAM2B,oBACN,qBACA3B,EAAM2B,oBACN,aACA3B,EAAMI,eAAen1B,KAAKw8D,2BAC1B,OACA,SACA,iBACAznC,EAAMM,iBACN,WACAN,EAAMI,eAAen1B,KAAK28D,yBAC1B,gBACA5nC,EAAMI,eAAen1B,KAAK48D,+BAG5B58D,KAAKg3B,OAASh3B,KAAK88D,kBACjB,gBACA/nC,EAAMI,eAAe,UACrB,YACAJ,EAAMI,eAAen1B,KAAKg8D,6BAC1B,aACAjnC,EAAMI,eAAen1B,KAAKo8D,2BAC1B,cACArnC,EAAMI,eAAen1B,KAAK68D,0BAC1B,gBACA,WAKJz2B,GAAI,WACFpmC,KAAK+8D,6BACH,OACAhoC,EAAM2B,oBACN,QACC,KAAM,SAAU,GACjB,YACA3B,EAAMI,eAAe,SACrB,YACAJ,EAAMI,gBAAgB,KAAM,SAAU,KAGxCn1B,KAAKg9D,gCACH,OACAjoC,EAAMM,iBACN,QACA,QACA,MACA,UACA,MACA,UACA,UACC,KAAM,UAAW,GAClB,SACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,IAGpBr1B,KAAKi9D,iCACH,OACAloC,EAAMM,iBACN,QACA,UACA,OACAN,EAAMI,eAAen1B,KAAKg9D,iCAG5Bh9D,KAAKk9D,6BAA+B,OAAQnoC,EAAMM,iBAAkB,QAAS,WAE7Er1B,KAAKm9D,2BACH,aACApoC,EAAMI,eAAen1B,KAAKi9D,iCAC1B,cACAloC,EAAMI,eAAen1B,KAAKk9D,8BAG5Bl9D,KAAKo9D,+BAAiC,WAAYroC,EAAM2B,qBAExD12B,KAAKq9D,0BACH,OACAtoC,EAAMM,iBACN,OACA,QACA,QACA,QACA,mBACAN,EAAMM,iBACN,WACAN,EAAMoB,oBACN,cACApB,EAAMoB,oBACN,WACApB,EAAMoB,oBACN,WACApB,EAAMoB,oBACN,WACApB,EAAMoB,oBACN,WACApB,EAAMoB,oBACN,UACApB,EAAMoB,oBACN,cACApB,EAAMoB,oBACN,gBACApB,EAAMoB,oBACN,WACA,SACA,YACA,SACA,YACA,SACA,gBACA,SAGFn2B,KAAKs9D,6BACH,QACAvoC,EAAMoB,oBACN,OACApB,EAAMoB,oBACN,OACApB,EAAMoB,oBACN,QACApB,EAAMoB,oBACN,OACApB,EAAMoB,oBACN,OACApB,EAAMoB,qBAGRn2B,KAAKu9D,2BACH,QACAxoC,EAAMM,iBACN,OACAN,EAAMM,iBACN,QACAN,EAAMM,iBACN,OACAN,EAAMM,kBAGRr1B,KAAKw9D,uBACH,aACA,QACA,WACA,QACA,MACA,QACA,aACA,QACA,YACA,SAGFx9D,KAAKy9D,kCACH,YACA1oC,EAAMM,iBACN,SACAr1B,KAAKw9D,sBACL,SACAx9D,KAAKw9D,sBACL,SACAx9D,KAAKw9D,sBACL,SACAx9D,KAAKw9D,uBAGPx9D,KAAK09D,yBACH,QACA3oC,EAAMM,iBACN,iBACA,SACA,aACAN,EAAMI,eAAen1B,KAAKy9D,kCAC1B,WACAz9D,KAAKw9D,sBACL,YACAx9D,KAAKw9D,sBACL,aACAx9D,KAAKw9D,sBACL,eACAx9D,KAAKw9D,sBACL,YACAx9D,KAAKw9D,sBACL,YACA,UAGFx9D,KAAK29D,8BAAgC,WAAY5oC,EAAMM,iBAAkB,WAAYN,EAAMoB,qBAE3Fn2B,KAAK49D,0BACH,OACA7oC,EAAM2B,oBACN,YACA3B,EAAMM,iBACN,gBACAN,EAAMM,iBACN,QACAN,EAAMI,eAAeJ,EAAMM,kBAC3B,iBACAN,EAAMI,eAAen1B,KAAKm9D,2BAC1B,qBACApoC,EAAMI,eAAen1B,KAAKo9D,+BAC1B,OACAroC,EAAMI,eAAeJ,EAAMM,kBAC3B,kBACAN,EAAM2B,oBACN,iBACA3B,EAAMI,eAAen1B,KAAKm9D,2BAC1B,QACApoC,EAAMI,eAAeJ,EAAMM,kBAC3B,WACAN,EAAMI,eAAen1B,KAAKq9D,0BAC1B,QACA,SACA,aACAtoC,EAAMI,eAAeJ,EAAMM,kBAC3B,mBACAN,EAAM2B,oBACN,eACA3B,EAAMoB,oBACN,eACApB,EAAMI,eAAen1B,KAAKs9D,6BAC1B,mBACAvoC,EAAM2B,oBACN,qBACA3B,EAAM2B,oBACN,aACA3B,EAAMI,eAAen1B,KAAKu9D,2BAC1B,OACA,SACA,iBACAxoC,EAAMM,iBACN,WACAN,EAAMI,eAAen1B,KAAK09D,yBAC1B,gBACA3oC,EAAMI,eAAen1B,KAAK29D,+BAG5B39D,KAAKg3B,OAASh3B,KAAK69D,kBACjB,gBACA9oC,EAAMI,eAAe,UACrB,YACAJ,EAAMI,eAAen1B,KAAK+8D,6BAC1B,aACAhoC,EAAMI,eAAen1B,KAAKm9D,2BAC1B,cACApoC,EAAMI,eAAen1B,KAAK49D,0BAC1B,gBACA,WAKJl2B,GAAI,WACF1nC,KAAK89D,6BACH,OACA/oC,EAAM2B,oBACN,QACC,KAAM,SAAU,GACjB,YACA3B,EAAMI,eAAe,SACrB,YACAJ,EAAMI,gBAAgB,KAAM,SAAU,KAGxCn1B,KAAK+9D,gCACH,OACAhpC,EAAMM,iBACN,QACA,QACA,MACA,UACA,MACA,UACA,UACC,KAAM,UAAW,GAClB,SACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,IAGpBr1B,KAAKg+D,iCACH,OACAjpC,EAAMM,iBACN,QACA,UACA,OACAN,EAAMI,eAAen1B,KAAK+9D,iCAG5B/9D,KAAKi+D,6BAA+B,OAAQlpC,EAAMM,iBAAkB,QAAS,WAE7Er1B,KAAKk+D,2BACH,aACAnpC,EAAMI,eAAen1B,KAAKg+D,iCAC1B,cACAjpC,EAAMI,eAAen1B,KAAKi+D,8BAG5Bj+D,KAAKm+D,+BAAiC,WAAYppC,EAAM2B,qBAExD12B,KAAKo+D,0BACH,OACArpC,EAAMM,iBACN,OACA,QACA,QACA,QACA,WACAN,EAAMoB,oBACN,cACApB,EAAMoB,oBACN,WACApB,EAAMoB,oBACN,WACApB,EAAMoB,oBACN,WACApB,EAAMoB,oBACN,WACApB,EAAMoB,oBACN,UACApB,EAAMoB,oBACN,cACApB,EAAMoB,oBACN,gBACApB,EAAMoB,oBACN,WACA,SACA,YACA,SACA,YACA,SACA,gBACA,SAGFn2B,KAAKq+D,6BACH,QACAtpC,EAAMoB,oBACN,OACApB,EAAMoB,oBACN,OACApB,EAAMoB,oBACN,QACApB,EAAMoB,oBACN,OACApB,EAAMoB,oBACN,OACApB,EAAMoB,qBAGRn2B,KAAKs+D,2BACH,QACAvpC,EAAMM,iBACN,OACAN,EAAMM,iBACN,QACAN,EAAMM,iBACN,OACAN,EAAMM,kBAGRr1B,KAAKu+D,uBACH,aACA,QACA,WACA,QACA,MACA,QACA,aACA,QACA,YACA,SAGFv+D,KAAKw+D,kCACH,YACAzpC,EAAMM,iBACN,SACAr1B,KAAKu+D,sBACL,SACAv+D,KAAKu+D,sBACL,SACAv+D,KAAKu+D,sBACL,SACAv+D,KAAKu+D,uBAGPv+D,KAAKy+D,yBACH,QACA1pC,EAAMM,iBACN,iBACA,SACA,aACAN,EAAMI,eAAen1B,KAAKw+D,kCAC1B,WACAx+D,KAAKu+D,sBACL,YACAv+D,KAAKu+D,sBACL,aACAv+D,KAAKu+D,sBACL,eACAv+D,KAAKu+D,sBACL,YACAv+D,KAAKu+D,sBACL,YACA,UAGFv+D,KAAK0+D,8BAAgC,WAAY3pC,EAAMM,iBAAkB,WAAYN,EAAMoB,qBAE3Fn2B,KAAK2+D,0BACH,OACA5pC,EAAM2B,oBACN,YACA3B,EAAMM,iBACN,gBACAN,EAAMM,iBACN,QACAN,EAAMI,eAAeJ,EAAMM,kBAC3B,iBACAN,EAAMI,eAAen1B,KAAKk+D,2BAC1B,qBACAnpC,EAAMI,eAAen1B,KAAKm+D,+BAC1B,OACAppC,EAAMI,eAAeJ,EAAMM,kBAC3B,kBACAN,EAAM2B,oBACN,iBACA3B,EAAMI,eAAen1B,KAAKk+D,2BAC1B,QACAnpC,EAAMI,eAAeJ,EAAMM,kBAC3B,WACAN,EAAMI,eAAen1B,KAAKo+D,0BAC1B,QACA,SACA,aACArpC,EAAMI,eAAeJ,EAAMM,kBAC3B,mBACAN,EAAM2B,oBACN,eACA3B,EAAMoB,oBACN,eACApB,EAAMI,eAAen1B,KAAKq+D,6BAC1B,mBACAtpC,EAAM2B,oBACN,qBACA3B,EAAM2B,oBACN,aACA3B,EAAMI,eAAen1B,KAAKs+D,2BAC1B,OACA,SACA,iBACAvpC,EAAMM,iBACN,WACAN,EAAMI,eAAen1B,KAAKy+D,yBAC1B,gBACA1pC,EAAMI,eAAen1B,KAAK0+D,+BAG5B1+D,KAAKg3B,OAASh3B,KAAK4+D,kBACjB,gBACA7pC,EAAMI,eAAe,UACrB,YACAJ,EAAMI,eAAen1B,KAAK89D,6BAC1B,aACA/oC,EAAMI,eAAen1B,KAAKk+D,2BAC1B,cACAnpC,EAAMI,eAAen1B,KAAK2+D,0BAC1B,gBACA,WAKJ31B,GAAI,WACFhpC,KAAK6+D,6BACH,OACA9pC,EAAM2B,oBACN,QACC,KAAM,SAAU,GACjB,YACA3B,EAAMI,eAAe,SACrB,YACAJ,EAAMI,gBAAgB,KAAM,SAAU,KAGxCn1B,KAAK8+D,gCACH,OACA/pC,EAAMM,iBACN,QACA,QACA,MACA,UACA,MACA,UACA,UACC,KAAM,UAAW,GAClB,SACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,IAGpBr1B,KAAK++D,iCACH,OACAhqC,EAAMM,iBACN,QACA,UACA,OACAN,EAAMI,eAAen1B,KAAK8+D,iCAG5B9+D,KAAKg/D,6BAA+B,OAAQjqC,EAAMM,iBAAkB,QAAS,WAE7Er1B,KAAKi/D,2BACH,aACAlqC,EAAMI,eAAen1B,KAAK++D,iCAC1B,cACAhqC,EAAMI,eAAen1B,KAAKg/D,8BAG5Bh/D,KAAKk/D,+BAAiC,WAAYnqC,EAAM2B,qBAExD12B,KAAKm/D,0BACH,OACApqC,EAAMM,iBACN,OACA,QACA,QACA,QACA,WACAN,EAAMoB,oBACN,cACApB,EAAMoB,oBACN,WACApB,EAAMoB,oBACN,WACApB,EAAMoB,oBACN,WACApB,EAAMoB,oBACN,WACApB,EAAMoB,oBACN,UACApB,EAAMoB,oBACN,cACApB,EAAMoB,oBACN,gBACApB,EAAMoB,oBACN,WACA,SACA,YACA,SACA,YACA,SACA,gBACA,SAGFn2B,KAAKo/D,6BACH,QACArqC,EAAMoB,oBACN,OACApB,EAAMoB,oBACN,OACApB,EAAMoB,oBACN,QACApB,EAAMoB,oBACN,OACApB,EAAMoB,oBACN,OACApB,EAAMoB,qBAGRn2B,KAAKq/D,uBACH,aACA,QACA,WACA,QACA,MACA,QACA,aACA,QACA,YACA,SAGFr/D,KAAKs/D,kCACH,YACAvqC,EAAMM,iBACN,SACAr1B,KAAKq/D,sBACL,SACAr/D,KAAKq/D,sBACL,SACAr/D,KAAKq/D,sBACL,SACAr/D,KAAKq/D,uBAGPr/D,KAAKu/D,yBACH,QACAxqC,EAAMM,iBACN,iBACA,SACA,aACAN,EAAMI,eAAen1B,KAAKs/D,kCAC1B,WACAt/D,KAAKq/D,sBACL,YACAr/D,KAAKq/D,sBACL,aACAr/D,KAAKq/D,sBACL,eACAr/D,KAAKq/D,sBACL,YACAr/D,KAAKq/D,sBACL,YACA,UAGFr/D,KAAKw/D,8BAAgC,WAAYzqC,EAAMM,iBAAkB,WAAYN,EAAMoB,qBAE3Fn2B,KAAKy/D,0BACH,OACA1qC,EAAM2B,oBACN,YACA3B,EAAMM,iBACN,gBACAN,EAAMM,iBACN,QACAN,EAAMI,eAAeJ,EAAMM,kBAC3B,iBACAN,EAAMI,eAAen1B,KAAKi/D,2BAC1B,qBACAlqC,EAAMI,eAAen1B,KAAKk/D,+BAC1B,OACAnqC,EAAMI,eAAeJ,EAAMM,kBAC3B,kBACAN,EAAM2B,oBACN,iBACA3B,EAAMI,eAAen1B,KAAKi/D,2BAC1B,QACAlqC,EAAMI,eAAeJ,EAAMM,kBAC3B,WACAN,EAAMI,eAAen1B,KAAKm/D,0BAC1B,QACA,SACA,aACApqC,EAAMI,eAAeJ,EAAMM,kBAC3B,mBACAN,EAAM2B,oBACN,eACA3B,EAAMoB,oBACN,eACApB,EAAMI,eAAen1B,KAAKo/D,6BAC1B,mBACArqC,EAAM2B,oBACN,qBACA3B,EAAM2B,oBACN,iBACA,QACA,OACA,SACA,iBACA3B,EAAMM,iBACN,WACAN,EAAMI,eAAen1B,KAAKu/D,yBAC1B,gBACAxqC,EAAMI,eAAen1B,KAAKw/D,+BAG5Bx/D,KAAKg3B,OAASh3B,KAAK0/D,kBACjB,gBACA3qC,EAAMI,eAAe,UACrB,YACAJ,EAAMI,eAAen1B,KAAK6+D,6BAC1B,aACA9pC,EAAMI,eAAen1B,KAAKi/D,2BAC1B,cACAlqC,EAAMI,eAAen1B,KAAKy/D,0BAC1B,gBACA,WAKJn1B,GAAI,WACFtqC,KAAK2/D,6BACH,OACA5qC,EAAM2B,oBACN,QACC,KAAM,SAAU,GACjB,YACA3B,EAAMI,eAAe,SACrB,YACAJ,EAAMI,gBAAgB,KAAM,SAAU,KAGxCn1B,KAAK4/D,gCACH,OACA7qC,EAAMM,iBACN,QACA,QACA,MACA,UACA,MACA,UACA,UACC,KAAM,UAAW,GAClB,SACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,IAGpBr1B,KAAK6/D,iCACH,OACA9qC,EAAMM,iBACN,QACA,UACA,OACAN,EAAMI,eAAen1B,KAAK4/D,iCAG5B5/D,KAAK8/D,6BAA+B,OAAQ/qC,EAAMM,iBAAkB,QAAS,WAE7Er1B,KAAK+/D,2BACH,aACAhrC,EAAMI,eAAen1B,KAAK6/D,iCAC1B,cACA9qC,EAAMI,eAAen1B,KAAK8/D,8BAG5B9/D,KAAKggE,+BAAiC,WAAYjrC,EAAM2B,qBAExD12B,KAAKigE,0BACH,OACAlrC,EAAMM,iBACN,OACA,QACA,QACA,QACA,WACAN,EAAMoB,oBACN,cACApB,EAAMoB,oBACN,WACApB,EAAMoB,oBACN,WACApB,EAAMoB,oBACN,WACApB,EAAMoB,oBACN,WACApB,EAAMoB,oBACN,UACApB,EAAMoB,oBACN,cACApB,EAAMoB,oBACN,gBACApB,EAAMoB,oBACN,WACA,SACA,YACA,SACA,YACA,SACA,gBACA,SAGFn2B,KAAKkgE,6BACH,QACAnrC,EAAMoB,oBACN,OACApB,EAAMoB,oBACN,OACApB,EAAMoB,oBACN,QACApB,EAAMoB,oBACN,OACApB,EAAMoB,oBACN,OACApB,EAAMoB,qBAGRn2B,KAAKmgE,uBACH,aACA,QACA,WACA,QACA,MACA,QACA,aACA,QACA,YACA,SAGFngE,KAAKogE,kCACH,YACArrC,EAAMM,iBACN,SACAr1B,KAAKmgE,sBACL,SACAngE,KAAKmgE,sBACL,SACAngE,KAAKmgE,sBACL,SACAngE,KAAKmgE,uBAGPngE,KAAKqgE,yBACH,QACAtrC,EAAMM,iBACN,iBACA,SACA,aACAN,EAAMI,eAAen1B,KAAKogE,kCAC1B,WACApgE,KAAKmgE,sBACL,YACAngE,KAAKmgE,sBACL,aACAngE,KAAKmgE,sBACL,eACAngE,KAAKmgE,sBACL,YACAngE,KAAKmgE,sBACL,YACA,UAGFngE,KAAKsgE,8BAAgC,WAAYvrC,EAAMM,iBAAkB,WAAYN,EAAMoB,qBAE3Fn2B,KAAKugE,0BACH,OACAxrC,EAAM2B,oBACN,YACA3B,EAAMM,iBACN,gBACAN,EAAMM,iBACN,QACAN,EAAMI,eAAeJ,EAAMM,kBAC3B,iBACAN,EAAMI,eAAen1B,KAAK+/D,2BAC1B,qBACAhrC,EAAMI,eAAen1B,KAAKggE,+BAC1B,OACAjrC,EAAMI,eAAeJ,EAAMM,kBAC3B,kBACAN,EAAM2B,oBACN,iBACA3B,EAAMI,eAAen1B,KAAK+/D,2BAC1B,QACAhrC,EAAMI,eAAeJ,EAAMM,kBAC3B,WACAN,EAAMI,eAAen1B,KAAKigE,0BAC1B,QACA,SACA,aACAlrC,EAAMI,eAAeJ,EAAMM,kBAC3B,mBACAN,EAAM2B,oBACN,eACA3B,EAAMoB,oBACN,eACApB,EAAMI,eAAen1B,KAAKkgE,6BAC1B,mBACAnrC,EAAM2B,oBACN,qBACA3B,EAAM2B,oBACN,iBACA,QACA,OACA,SACA,iBACA3B,EAAMM,iBACN,WACAN,EAAMI,eAAen1B,KAAKqgE,yBAC1B,gBACAtrC,EAAMI,eAAen1B,KAAKsgE,+BAG5BtgE,KAAKg3B,OAASh3B,KAAKwgE,kBACjB,gBACAzrC,EAAMI,eAAe,UACrB,YACAJ,EAAMI,eAAen1B,KAAK2/D,6BAC1B,aACA5qC,EAAMI,eAAen1B,KAAK+/D,2BAC1B,cACAhrC,EAAMI,eAAen1B,KAAKugE,0BAC1B,gBACA,WAKJ30B,GAAI,WACF5rC,KAAKygE,6BACH,OACA1rC,EAAM2B,oBACN,QACC,KAAM,SAAU,GACjB,YACA3B,EAAMI,eAAe,SACrB,YACAJ,EAAMI,gBAAgB,KAAM,SAAU,KAGxCn1B,KAAK0gE,gCACH,OACA3rC,EAAMM,iBACN,QACA,QACA,MACA,UACA,MACA,UACA,UACC,KAAM,UAAW,GAClB,SACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,IAGpBr1B,KAAK2gE,iCACH,OACA5rC,EAAMM,iBACN,QACA,UACA,OACAN,EAAMI,eAAen1B,KAAK0gE,iCAG5B1gE,KAAK4gE,6BAA+B,OAAQ7rC,EAAMM,iBAAkB,QAAS,WAE7Er1B,KAAK6gE,2BACH,aACA9rC,EAAMI,eAAen1B,KAAK2gE,iCAC1B,cACA5rC,EAAMI,eAAen1B,KAAK4gE,8BAG5B5gE,KAAK8gE,+BAAiC,WAAY/rC,EAAM2B,qBAExD12B,KAAK+gE,0BACH,OACAhsC,EAAMM,iBACN,OACA,QACA,QACA,QACA,WACAN,EAAMoB,oBACN,cACApB,EAAMoB,oBACN,WACApB,EAAMoB,oBACN,WACApB,EAAMoB,oBACN,WACApB,EAAMoB,oBACN,WACApB,EAAMoB,oBACN,UACApB,EAAMoB,oBACN,cACApB,EAAMoB,oBACN,gBACApB,EAAMoB,oBACN,WACA,SACA,YACA,SACA,YACA,SACA,gBACA,SAGFn2B,KAAKghE,6BACH,QACAjsC,EAAMoB,oBACN,OACApB,EAAMoB,oBACN,OACApB,EAAMoB,oBACN,QACApB,EAAMoB,oBACN,OACApB,EAAMoB,oBACN,OACApB,EAAMoB,qBAGRn2B,KAAKihE,uBACH,aACA,QACA,WACA,QACA,MACA,QACA,aACA,QACA,YACA,SAGFjhE,KAAKkhE,kCACH,YACAnsC,EAAMM,iBACN,SACAr1B,KAAKihE,sBACL,SACAjhE,KAAKihE,sBACL,SACAjhE,KAAKihE,sBACL,SACAjhE,KAAKihE,uBAGPjhE,KAAKmhE,yBACH,QACApsC,EAAMM,iBACN,iBACA,SACA,aACAN,EAAMI,eAAen1B,KAAKkhE,kCAC1B,WACAlhE,KAAKihE,sBACL,YACAjhE,KAAKihE,sBACL,aACAjhE,KAAKihE,sBACL,eACAjhE,KAAKihE,sBACL,YACAjhE,KAAKihE,sBACL,YACA,UAGFjhE,KAAKohE,0BACH,OACArsC,EAAM2B,oBACN,YACA3B,EAAMM,iBACN,gBACAN,EAAMM,iBACN,QACAN,EAAMI,eAAeJ,EAAMM,kBAC3B,iBACAN,EAAMI,eAAen1B,KAAK6gE,2BAC1B,qBACA9rC,EAAMI,eAAen1B,KAAK8gE,+BAC1B,OACA/rC,EAAMI,eAAeJ,EAAMM,kBAC3B,kBACAN,EAAM2B,oBACN,iBACA3B,EAAMI,eAAen1B,KAAK6gE,2BAC1B,QACA9rC,EAAMI,eAAeJ,EAAMM,kBAC3B,WACAN,EAAMI,eAAen1B,KAAK+gE,0BAC1B,QACA,SACA,aACAhsC,EAAMI,eAAeJ,EAAMM,kBAC3B,mBACAN,EAAM2B,oBACN,eACA3B,EAAMoB,oBACN,eACApB,EAAMI,eAAen1B,KAAKghE,6BAC1B,mBACAjsC,EAAM2B,oBACN,qBACA3B,EAAM2B,oBACN,iBACA,QACA,OACA,SACA,iBACA3B,EAAMM,iBACN,WACAN,EAAMI,eAAen1B,KAAKmhE,0BAG5BnhE,KAAKg3B,OAASh3B,KAAKqhE,kBACjB,gBACAtsC,EAAMI,eAAe,UACrB,YACAJ,EAAMI,eAAen1B,KAAKygE,6BAC1B,aACA1rC,EAAMI,eAAen1B,KAAK6gE,2BAC1B,cACA9rC,EAAMI,eAAen1B,KAAKohE,0BAC1B,gBACA,WAKJl0B,GAAI,WACFltC,KAAKshE,6BACH,OACAvsC,EAAM2B,oBACN,QACC,KAAM,SAAU,GACjB,YACA3B,EAAMI,eAAe,SACrB,YACAJ,EAAMI,gBAAgB,KAAM,SAAU,KAGxCn1B,KAAKuhE,gCACH,OACAxsC,EAAMM,iBACN,QACA,QACA,MACA,UACA,MACA,UACA,UACC,KAAM,UAAW,GAClB,SACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,IAGpBr1B,KAAKwhE,iCACH,OACAzsC,EAAMM,iBACN,QACA,UACA,OACAN,EAAMI,eAAen1B,KAAKuhE,iCAG5BvhE,KAAKyhE,6BAA+B,QAAS,UAAW,OAAQ1sC,EAAMM,kBAEtEr1B,KAAK0hE,2BACH,aACA3sC,EAAMI,eAAen1B,KAAKwhE,iCAC1B,cACAzsC,EAAMI,eAAen1B,KAAKyhE,8BAG5BzhE,KAAK2hE,+BAAiC,WAAY5sC,EAAM2B,qBAExD12B,KAAK4hE,0BACH,OACA7sC,EAAMM,iBACN,OACA,QACA,QACA,QACA,WACAN,EAAMoB,oBACN,cACApB,EAAMoB,oBACN,WACApB,EAAMoB,oBACN,WACApB,EAAMoB,oBACN,WACApB,EAAMoB,oBACN,WACApB,EAAMoB,oBACN,UACApB,EAAMoB,oBACN,cACApB,EAAMoB,oBACN,gBACApB,EAAMoB,oBACN,WACA,SACA,YACA,SACA,YACA,SACA,gBACA,SAGFn2B,KAAK6hE,6BACH,QACA9sC,EAAMoB,oBACN,OACApB,EAAMoB,oBACN,OACApB,EAAMoB,oBACN,QACApB,EAAMoB,oBACN,OACApB,EAAMoB,oBACN,OACApB,EAAMoB,qBAGRn2B,KAAK8hE,uBACH,aACA,QACA,WACA,QACA,MACA,QACA,aACA,QACA,YACA,SAGF9hE,KAAK+hE,kCACH,YACAhtC,EAAMM,iBACN,SACAr1B,KAAK8hE,sBACL,SACA9hE,KAAK8hE,sBACL,SACA9hE,KAAK8hE,sBACL,SACA9hE,KAAK8hE,uBAGP9hE,KAAKgiE,yBACH,QACAjtC,EAAMM,iBACN,iBACA,SACA,aACAN,EAAMI,eAAen1B,KAAK+hE,kCAC1B,YACA/hE,KAAK8hE,sBACL,aACA9hE,KAAK8hE,sBACL,eACA9hE,KAAK8hE,sBACL,YACA9hE,KAAK8hE,sBACL,YACA,UAGF9hE,KAAKiiE,0BACH,OACAltC,EAAM2B,oBACN,YACA3B,EAAMM,iBACN,gBACAN,EAAMM,iBACN,QACAN,EAAMI,eAAeJ,EAAMM,kBAC3B,iBACAN,EAAMI,eAAen1B,KAAK0hE,2BAC1B,qBACA3sC,EAAMI,eAAen1B,KAAK2hE,+BAC1B,OACA5sC,EAAMI,eAAeJ,EAAMM,kBAC3B,iBACAN,EAAMI,eAAen1B,KAAK0hE,2BAC1B,QACA3sC,EAAMI,eAAeJ,EAAMM,kBAC3B,WACAN,EAAMI,eAAen1B,KAAK4hE,0BAC1B,QACA,SACA,aACA7sC,EAAMI,eAAeJ,EAAMM,kBAC3B,mBACAN,EAAM2B,oBACN,eACA3B,EAAMoB,oBACN,eACApB,EAAMI,eAAen1B,KAAK6hE,6BAC1B,mBACA9sC,EAAM2B,oBACN,qBACA3B,EAAM2B,oBACN,iBACA,QACA,OACA,SACA,iBACA3B,EAAMM,iBACN,WACAN,EAAMI,eAAen1B,KAAKgiE,0BAG5BhiE,KAAKg3B,OAASh3B,KAAKkiE,kBACjB,gBACAntC,EAAMI,eAAe,UACrB,YACAJ,EAAMI,eAAen1B,KAAKshE,6BAC1B,aACAvsC,EAAMI,eAAen1B,KAAK0hE,2BAC1B,cACA3sC,EAAMI,eAAen1B,KAAKiiE,0BAC1B,gBACA,WAKJzzB,GAAI,WACFxuC,KAAKmiE,6BACH,OACAptC,EAAM2B,oBACN,QACC,KAAM,SAAU,GACjB,YACA3B,EAAMI,eAAe,SACrB,YACAJ,EAAMI,gBAAgB,KAAM,SAAU,KAGxCn1B,KAAKoiE,gCACH,OACArtC,EAAMM,iBACN,QACA,QACA,MACA,UACA,MACA,UACA,UACC,KAAM,UAAW,GAClB,SACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,IAGpBr1B,KAAKqiE,iCACH,OACAttC,EAAMM,iBACN,QACA,UACA,OACAN,EAAMI,eAAen1B,KAAKoiE,iCAG5BpiE,KAAKsiE,6BAA+B,QAAS,UAAW,OAAQvtC,EAAMM,kBAEtEr1B,KAAKuiE,2BACH,aACAxtC,EAAMI,eAAen1B,KAAKqiE,iCAC1B,cACAttC,EAAMI,eAAen1B,KAAKsiE,8BAG5BtiE,KAAKwiE,+BAAiC,WAAYztC,EAAM2B,qBAExD12B,KAAKyiE,0BACH,OACA1tC,EAAMM,iBACN,OACA,SACA,WACAN,EAAMoB,oBACN,cACApB,EAAMoB,oBACN,WACApB,EAAMoB,oBACN,WACApB,EAAMoB,oBACN,WACApB,EAAMoB,oBACN,WACApB,EAAMoB,oBACN,UACApB,EAAMoB,oBACN,cACApB,EAAMoB,oBACN,gBACApB,EAAMoB,oBACN,WACA,SACA,YACA,SACA,YACA,SACA,gBACA,UAGFn2B,KAAK0iE,6BACH,QACA3tC,EAAMoB,oBACN,OACApB,EAAMoB,oBACN,OACApB,EAAMoB,oBACN,QACApB,EAAMoB,oBACN,OACApB,EAAMoB,oBACN,OACApB,EAAMoB,qBAGRn2B,KAAK2iE,uBACH,aACA,QACA,WACA,QACA,MACA,QACA,aACA,QACA,YACA,SAGF3iE,KAAK4iE,kCACH,YACA7tC,EAAMM,iBACN,SACAr1B,KAAK2iE,sBACL,SACA3iE,KAAK2iE,sBACL,SACA3iE,KAAK2iE,sBACL,SACA3iE,KAAK2iE,uBAGP3iE,KAAK6iE,yBACH,QACA9tC,EAAMM,iBACN,iBACA,SACA,aACAN,EAAMI,eAAen1B,KAAK4iE,kCAC1B,YACA5iE,KAAK2iE,sBACL,aACA3iE,KAAK2iE,sBACL,eACA3iE,KAAK2iE,sBACL,YACA3iE,KAAK2iE,sBACL,YACA,UAGF3iE,KAAK8iE,0BACH,OACA/tC,EAAM2B,oBACN,YACA3B,EAAMM,iBACN,gBACAN,EAAMM,iBACN,QACAN,EAAMI,eAAeJ,EAAMM,kBAC3B,iBACAN,EAAMI,eAAen1B,KAAKuiE,2BAC1B,qBACAxtC,EAAMI,eAAen1B,KAAKwiE,+BAC1B,OACAztC,EAAMI,eAAeJ,EAAMM,kBAC3B,iBACAN,EAAMI,eAAen1B,KAAKuiE,2BAC1B,QACAxtC,EAAMI,eAAeJ,EAAMM,kBAC3B,WACAN,EAAMI,eAAen1B,KAAKyiE,0BAC1B,QACA,SACA,aACA1tC,EAAMI,eAAeJ,EAAMM,kBAC3B,mBACAN,EAAM2B,oBACN,eACA3B,EAAMoB,oBACN,eACApB,EAAMI,eAAen1B,KAAK0iE,6BAC1B,mBACA3tC,EAAM2B,oBACN,qBACA3B,EAAM2B,oBACN,iBACA,QACA,OACA,SACA,iBACA3B,EAAMM,iBACN,WACAN,EAAMI,eAAen1B,KAAK6iE,0BAG5B7iE,KAAKg3B,OAASh3B,KAAK+iE,kBACjB,gBACAhuC,EAAMI,eAAe,UACrB,YACAJ,EAAMI,eAAen1B,KAAKmiE,6BAC1B,aACAptC,EAAMI,eAAen1B,KAAKuiE,2BAC1B,cACAxtC,EAAMI,eAAen1B,KAAK8iE,0BAC1B,gBACA,WAKJhzB,GAAI,WACF9vC,KAAKgjE,6BACH,OACAjuC,EAAM2B,oBACN,QACC,KAAM,SAAU,GACjB,YACA3B,EAAMI,eAAe,SACrB,YACAJ,EAAMI,gBAAgB,KAAM,SAAU,KAGxCn1B,KAAKijE,gCACH,OACAluC,EAAMM,iBACN,QACA,QACA,MACA,UACA,MACA,UACA,UACC,KAAM,UAAW,GAClB,SACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,IAGpBr1B,KAAKkjE,iCACH,QACA,UACA,OACAnuC,EAAMI,eAAen1B,KAAKijE,iCAG5BjjE,KAAKmjE,2BAA6B,aAAcpuC,EAAMI,eAAen1B,KAAKkjE,kCAE1EljE,KAAKojE,0BACH,OACAruC,EAAMM,iBACN,OACA,SACA,WACAN,EAAMoB,oBACN,cACApB,EAAMoB,oBACN,WACApB,EAAMoB,oBACN,WACApB,EAAMoB,oBACN,WACApB,EAAMoB,oBACN,WACApB,EAAMoB,oBACN,UACApB,EAAMoB,oBACN,cACApB,EAAMoB,oBACN,gBACApB,EAAMoB,oBACN,WACA,SACA,YACA,SACA,YACA,SACA,gBACA,UAGFn2B,KAAKqjE,6BACH,QACAtuC,EAAMoB,oBACN,OACApB,EAAMoB,oBACN,OACApB,EAAMoB,oBACN,QACApB,EAAMoB,oBACN,OACApB,EAAMoB,oBACN,OACApB,EAAMoB,qBAGRn2B,KAAKsjE,uBACH,aACA,QACA,WACA,QACA,MACA,QACA,aACA,QACA,YACA,SAGFtjE,KAAKujE,kCACH,YACAxuC,EAAMM,iBACN,SACAr1B,KAAKsjE,sBACL,SACAtjE,KAAKsjE,sBACL,SACAtjE,KAAKsjE,sBACL,SACAtjE,KAAKsjE,uBAGPtjE,KAAKwjE,yBACH,QACAzuC,EAAMM,iBACN,iBACA,SACA,aACAN,EAAMI,eAAen1B,KAAKujE,kCAC1B,YACAvjE,KAAKsjE,sBACL,aACAtjE,KAAKsjE,sBACL,eACAtjE,KAAKsjE,sBACL,YACAtjE,KAAKsjE,sBACL,YACA,UAGFtjE,KAAKyjE,0BACH,OACA1uC,EAAM2B,oBACN,YACA3B,EAAMM,iBACN,gBACAN,EAAMM,iBACN,QACAN,EAAMI,eAAeJ,EAAMM,kBAC3B,OACAN,EAAMI,eAAeJ,EAAMM,kBAC3B,QACAN,EAAMI,eAAeJ,EAAMM,kBAC3B,WACAN,EAAMI,eAAen1B,KAAKojE,0BAC1B,QACA,SACA,aACAruC,EAAMI,eAAeJ,EAAMM,kBAC3B,mBACAN,EAAM2B,oBACN,eACA3B,EAAMoB,oBACN,eACApB,EAAMI,eAAen1B,KAAKqjE,6BAC1B,mBACAtuC,EAAM2B,oBACN,qBACA3B,EAAM2B,oBACN,OACA,SACA,iBACA3B,EAAMM,iBACN,WACAN,EAAMI,eAAen1B,KAAKwjE,0BAG5BxjE,KAAKg3B,OAASh3B,KAAK0jE,kBACjB,gBACA3uC,EAAMI,eAAe,UACrB,YACAJ,EAAMI,eAAen1B,KAAKgjE,6BAC1B,aACAjuC,EAAMI,eAAen1B,KAAKmjE,2BAC1B,cACApuC,EAAMI,eAAen1B,KAAKyjE,0BAC1B,gBACA,WAKJryB,GAAI,WACFpxC,KAAK2jE,6BACH,OACA5uC,EAAM2B,oBACN,QACC,KAAM,SAAU,GACjB,YACA3B,EAAMI,eAAe,SACrB,YACAJ,EAAMI,gBAAgB,KAAM,SAAU,KAGxCn1B,KAAK4jE,0BACH,OACA7uC,EAAMM,iBACN,OACA,SACA,WACAN,EAAMoB,oBACN,cACApB,EAAMoB,oBACN,WACApB,EAAMoB,oBACN,WACApB,EAAMoB,oBACN,WACApB,EAAMoB,oBACN,WACApB,EAAMoB,oBACN,UACApB,EAAMoB,oBACN,cACApB,EAAMoB,oBACN,gBACApB,EAAMoB,oBACN,WACA,SACA,YACA,SACA,YACA,SACA,gBACA,UAGFn2B,KAAK6jE,6BACH,QACA9uC,EAAMoB,oBACN,OACApB,EAAMoB,oBACN,OACApB,EAAMoB,oBACN,QACApB,EAAMoB,oBACN,OACApB,EAAMoB,oBACN,OACApB,EAAMoB,qBAGRn2B,KAAK8jE,uBACH,aACA,QACA,WACA,QACA,MACA,QACA,aACA,QACA,YACA,SAGF9jE,KAAK+jE,kCACH,YACAhvC,EAAMM,iBACN,SACAr1B,KAAK8jE,sBACL,SACA9jE,KAAK8jE,sBACL,SACA9jE,KAAK8jE,sBACL,SACA9jE,KAAK8jE,uBAGP9jE,KAAKgkE,yBACH,QACAjvC,EAAMM,iBACN,aACAN,EAAMI,eAAen1B,KAAK+jE,kCAC1B,YACA/jE,KAAK8jE,sBACL,aACA9jE,KAAK8jE,sBACL,eACA9jE,KAAK8jE,sBACL,YACA9jE,KAAK8jE,sBACL,YACA,UAGF9jE,KAAKikE,0BACH,OACAlvC,EAAM2B,oBACN,YACA3B,EAAMM,iBACN,gBACAN,EAAMM,iBACN,QACAN,EAAMI,eAAeJ,EAAMM,kBAC3B,OACAN,EAAMI,eAAeJ,EAAMM,kBAC3B,QACAN,EAAMI,eAAeJ,EAAMM,kBAC3B,WACAN,EAAMI,eAAen1B,KAAK4jE,0BAC1B,QACA,SACA,aACA7uC,EAAMI,eAAeJ,EAAMM,kBAC3B,mBACAN,EAAM2B,oBACN,eACA3B,EAAMoB,oBACN,eACApB,EAAMI,eAAen1B,KAAK6jE,6BAC1B,mBACA9uC,EAAM2B,oBACN,qBACA3B,EAAM2B,oBACN,OACA,SACA,iBACA3B,EAAMM,iBACN,WACAN,EAAMI,eAAen1B,KAAKgkE,0BAG5BhkE,KAAKg3B,OAASh3B,KAAKkkE,kBACjB,gBACAnvC,EAAMI,eAAe,UACrB,YACAJ,EAAMI,eAAen1B,KAAK2jE,6BAC1B,cACA5uC,EAAMI,eAAen1B,KAAKikE,0BAC1B,gBACA,WAKJvxB,EAAG,WACD1yC,KAAKmkE,4BACH,OACApvC,EAAM2B,oBACN,QACC,KAAM,SAAU,GACjB,YACA3B,EAAMI,eAAe,SACrB,YACAJ,EAAMI,gBAAgB,KAAM,SAAU,KAGxCn1B,KAAKokE,yBACH,OACArvC,EAAMM,iBACN,OACA,SACA,WACAN,EAAMoB,oBACN,cACApB,EAAMoB,oBACN,WACApB,EAAMoB,oBACN,WACApB,EAAMoB,oBACN,WACApB,EAAMoB,oBACN,WACApB,EAAMoB,oBACN,UACApB,EAAMoB,oBACN,cACApB,EAAMoB,oBACN,gBACApB,EAAMoB,oBACN,WACA,SACA,YACA,SACA,YACA,SACA,gBACA,UAGFn2B,KAAKqkE,4BACH,QACAtvC,EAAMoB,oBACN,OACApB,EAAMoB,oBACN,OACApB,EAAMoB,oBACN,QACApB,EAAMoB,oBACN,OACApB,EAAMoB,oBACN,OACApB,EAAMoB,qBAGRn2B,KAAKskE,sBACH,aACA,QACA,WACA,QACA,MACA,QACA,aACA,QACA,YACA,SAGFtkE,KAAKukE,iCACH,YACAxvC,EAAMM,iBACN,SACAr1B,KAAKskE,qBACL,SACAtkE,KAAKskE,qBACL,SACAtkE,KAAKskE,qBACL,SACAtkE,KAAKskE,sBAGPtkE,KAAKwkE,wBACH,QACAzvC,EAAMM,iBACN,aACAN,EAAMI,eAAen1B,KAAKukE,iCAC1B,YACAvkE,KAAKskE,qBACL,aACAtkE,KAAKskE,qBACL,eACAtkE,KAAKskE,qBACL,YACAtkE,KAAKskE,qBACL,YACA,UAGFtkE,KAAKykE,yBACH,OACA1vC,EAAM2B,oBACN,YACA3B,EAAMM,iBACN,gBACAN,EAAMM,iBACN,QACAN,EAAMI,eAAeJ,EAAMM,kBAC3B,OACAN,EAAMI,eAAeJ,EAAMM,kBAC3B,QACAN,EAAMI,eAAeJ,EAAMM,kBAC3B,WACAN,EAAMI,eAAen1B,KAAKokE,yBAC1B,aACArvC,EAAMI,eAAeJ,EAAMM,kBAC3B,mBACAN,EAAM2B,oBACN,eACA3B,EAAMoB,oBACN,eACApB,EAAMI,eAAen1B,KAAKqkE,4BAC1B,mBACAtvC,EAAM2B,oBACN,qBACA3B,EAAM2B,oBACN,OACA,SACA,iBACA3B,EAAMM,iBACN,WACAN,EAAMI,eAAen1B,KAAKwkE,yBAG5BxkE,KAAKg3B,OAASh3B,KAAK0kE,iBACjB,gBACA3vC,EAAMI,eAAe,UACrB,YACAJ,EAAMI,eAAen1B,KAAKmkE,4BAC1B,cACApvC,EAAMI,eAAen1B,KAAKykE,yBAC1B,gBACA,WAKJzwB,EAAG,WACDh0C,KAAK2kE,4BACH,OACA5vC,EAAM2B,oBACN,QACC,KAAM,SAAU,GACjB,YACA3B,EAAMI,eAAe,SACrB,YACAJ,EAAMI,gBAAgB,KAAM,SAAU,KAGxCn1B,KAAK4kE,yBACH,OACA7vC,EAAMM,iBACN,OACA,SACA,WACAN,EAAMoB,oBACN,cACApB,EAAMoB,oBACN,WACApB,EAAMoB,oBACN,WACApB,EAAMoB,oBACN,WACApB,EAAMoB,oBACN,WACApB,EAAMoB,oBACN,UACApB,EAAMoB,oBACN,cACApB,EAAMoB,oBACN,gBACApB,EAAMoB,oBACN,WACA,SACA,YACA,SACA,YACA,SACA,gBACA,UAGFn2B,KAAK6kE,4BACH,QACA9vC,EAAMoB,oBACN,OACApB,EAAMoB,oBACN,OACApB,EAAMoB,oBACN,QACApB,EAAMoB,oBACN,OACApB,EAAMoB,oBACN,OACApB,EAAMoB,qBAGRn2B,KAAK8kE,sBACH,aACA,QACA,WACA,QACA,MACA,QACA,aACA,QACA,YACA,SAGF9kE,KAAK+kE,iCACH,YACAhwC,EAAMM,iBACN,SACAr1B,KAAK8kE,qBACL,SACA9kE,KAAK8kE,qBACL,SACA9kE,KAAK8kE,qBACL,SACA9kE,KAAK8kE,sBAGP9kE,KAAKglE,wBACH,QACAjwC,EAAMM,iBACN,aACAN,EAAMI,eAAen1B,KAAK+kE,iCAC1B,YACA/kE,KAAK8kE,qBACL,aACA9kE,KAAK8kE,qBACL,eACA9kE,KAAK8kE,qBACL,YACA9kE,KAAK8kE,qBACL,YACA,UAGF9kE,KAAKilE,yBACH,OACAlwC,EAAM2B,oBACN,YACA3B,EAAMM,iBACN,gBACAN,EAAMM,iBACN,QACAN,EAAMI,eAAeJ,EAAMM,kBAC3B,OACAN,EAAMI,eAAeJ,EAAMM,kBAC3B,QACAN,EAAMI,eAAeJ,EAAMM,kBAC3B,WACAN,EAAMI,eAAen1B,KAAK4kE,yBAC1B,aACA7vC,EAAMI,eAAeJ,EAAMM,kBAC3B,mBACAN,EAAM2B,oBACN,eACA3B,EAAMoB,oBACN,eACApB,EAAMI,eAAen1B,KAAK6kE,4BAC1B,mBACA9vC,EAAM2B,oBACN,qBACA3B,EAAM2B,oBACN,OACA,SACA,iBACA3B,EAAMM,iBACN,WACAN,EAAMI,eAAen1B,KAAKglE,yBAG5BhlE,KAAKg3B,OAASh3B,KAAKklE,iBACjB,gBACAnwC,EAAMI,eAAe,UACrB,YACAJ,EAAMI,eAAen1B,KAAK2kE,4BAC1B,cACA5vC,EAAMI,eAAen1B,KAAKilE,2BAK9B3vB,EAAG,WACDt1C,KAAKmlE,4BACH,OACApwC,EAAM2B,oBACN,QACC,KAAM,SAAU,GACjB,YACA3B,EAAMI,eAAe,SACrB,YACAJ,EAAMI,gBAAgB,KAAM,SAAU,KAGxCn1B,KAAKolE,yBACH,OACArwC,EAAMM,iBACN,OACA,SACA,WACAN,EAAMoB,oBACN,cACApB,EAAMoB,oBACN,WACApB,EAAMoB,oBACN,WACApB,EAAMoB,oBACN,WACApB,EAAMoB,oBACN,WACApB,EAAMoB,oBACN,UACApB,EAAMoB,oBACN,cACApB,EAAMoB,oBACN,gBACApB,EAAMoB,oBACN,WACA,SACA,YACA,SACA,YACA,SACA,gBACA,UAGFn2B,KAAKqlE,4BACH,QACAtwC,EAAMoB,oBACN,OACApB,EAAMoB,oBACN,OACApB,EAAMoB,oBACN,QACApB,EAAMoB,oBACN,OACApB,EAAMoB,oBACN,OACApB,EAAMoB,qBAGRn2B,KAAKslE,sBACH,aACA,QACA,WACA,QACA,MACA,QACA,aACA,QACA,YACA,SAGFtlE,KAAKulE,iCACH,YACAxwC,EAAMM,iBACN,SACAr1B,KAAKslE,qBACL,SACAtlE,KAAKslE,qBACL,SACAtlE,KAAKslE,qBACL,SACAtlE,KAAKslE,sBAGPtlE,KAAKwlE,wBACH,QACAzwC,EAAMM,iBACN,aACAN,EAAMI,eAAen1B,KAAKulE,iCAC1B,YACAvlE,KAAKslE,qBACL,aACAtlE,KAAKslE,qBACL,eACAtlE,KAAKslE,qBACL,YACAtlE,KAAKslE,qBACL,YACA,UAGFtlE,KAAKylE,yBACH,OACA1wC,EAAM2B,oBACN,YACA3B,EAAMM,iBACN,QACAN,EAAMI,eAAeJ,EAAMM,kBAC3B,OACAN,EAAMI,eAAeJ,EAAMM,kBAC3B,QACAN,EAAMI,eAAeJ,EAAMM,kBAC3B,WACAN,EAAMI,eAAen1B,KAAKolE,yBAC1B,aACArwC,EAAMI,eAAeJ,EAAMM,kBAC3B,mBACAN,EAAM2B,oBACN,eACA3B,EAAMoB,oBACN,eACApB,EAAMI,eAAen1B,KAAKqlE,4BAC1B,mBACAtwC,EAAM2B,oBACN,qBACA3B,EAAM2B,oBACN,OACA,SACA,iBACA3B,EAAMM,iBACN,WACAN,EAAMI,eAAen1B,KAAKwlE,yBAG5BxlE,KAAKg3B,OAASh3B,KAAK0lE,iBACjB,gBACA3wC,EAAMI,eAAe,UACrB,YACAJ,EAAMI,eAAen1B,KAAKmlE,4BAC1B,cACApwC,EAAMI,eAAen1B,KAAKylE,2BAK9B9uB,EAAG,WACD32C,KAAK2lE,4BACH,OACA5wC,EAAM2B,oBACN,QACC,KAAM,SAAU,GACjB,YACA3B,EAAMI,eAAe,SACrB,YACAJ,EAAMI,gBAAgB,KAAM,SAAU,KAGxCn1B,KAAK4lE,yBACH,OACA7wC,EAAMM,iBACN,OACA,SACA,WACAN,EAAMoB,oBACN,cACApB,EAAMoB,oBACN,WACApB,EAAMoB,oBACN,WACApB,EAAMoB,oBACN,WACApB,EAAMoB,oBACN,WACApB,EAAMoB,oBACN,UACApB,EAAMoB,oBACN,cACApB,EAAMoB,oBACN,gBACApB,EAAMoB,oBACN,WACA,SACA,YACA,SACA,YACA,SACA,gBACA,UAGFn2B,KAAK6lE,4BACH,QACA9wC,EAAMoB,oBACN,OACApB,EAAMoB,oBACN,OACApB,EAAMoB,oBACN,QACApB,EAAMoB,oBACN,OACApB,EAAMoB,oBACN,OACApB,EAAMoB,qBAGRn2B,KAAK8lE,sBACH,aACA,QACA,WACA,QACA,MACA,QACA,aACA,QACA,YACA,SAGF9lE,KAAK+lE,iCACH,YACAhxC,EAAMM,iBACN,SACAr1B,KAAK8lE,qBACL,SACA9lE,KAAK8lE,qBACL,SACA9lE,KAAK8lE,qBACL,SACA9lE,KAAK8lE,sBAGP9lE,KAAKgmE,wBACH,QACAjxC,EAAMM,iBACN,aACAN,EAAMI,eAAen1B,KAAK+lE,iCAC1B,YACA/lE,KAAK8lE,qBACL,aACA9lE,KAAK8lE,qBACL,eACA9lE,KAAK8lE,qBACL,YACA9lE,KAAK8lE,qBACL,YACA,UAGF9lE,KAAKimE,yBACH,OACAlxC,EAAM2B,oBACN,YACA3B,EAAMM,iBACN,QACAN,EAAMI,eAAeJ,EAAMM,kBAC3B,OACAN,EAAMI,eAAeJ,EAAMM,kBAC3B,QACAN,EAAMI,eAAeJ,EAAMM,kBAC3B,WACAN,EAAMI,eAAen1B,KAAK4lE,yBAC1B,aACA7wC,EAAMI,eAAeJ,EAAMM,kBAC3B,mBACAN,EAAM2B,oBACN,eACA3B,EAAMoB,oBACN,eACApB,EAAMI,eAAen1B,KAAK6lE,4BAC1B,mBACA9wC,EAAM2B,oBACN,OACA,SACA,iBACA3B,EAAMM,iBACN,WACAN,EAAMI,eAAen1B,KAAKgmE,yBAG5BhmE,KAAKg3B,OAASh3B,KAAKkmE,iBACjB,gBACAnxC,EAAMI,eAAe,UACrB,YACAJ,EAAMI,eAAen1B,KAAK2lE,4BAC1B,cACA5wC,EAAMI,eAAen1B,KAAKimE,2BAK9BluB,EAAG,WACD/3C,KAAKmmE,4BACH,OACApxC,EAAM2B,oBACN,QACC,KAAM,SAAU,GACjB,YACA3B,EAAMI,eAAe,SACrB,YACAJ,EAAMI,gBAAgB,KAAM,SAAU,KAGxCn1B,KAAKomE,yBACH,OACArxC,EAAMM,iBACN,OACA,SACA,WACAN,EAAMoB,oBACN,cACApB,EAAMoB,oBACN,WACApB,EAAMoB,oBACN,WACApB,EAAMoB,oBACN,WACApB,EAAMoB,oBACN,WACApB,EAAMoB,oBACN,UACApB,EAAMoB,oBACN,cACApB,EAAMoB,oBACN,gBACApB,EAAMoB,oBACN,WACA,SACA,YACA,SACA,YACA,SACA,gBACA,UAGFn2B,KAAKqmE,4BACH,QACAtxC,EAAMoB,oBACN,OACApB,EAAMoB,oBACN,OACApB,EAAMoB,oBACN,QACApB,EAAMoB,oBACN,OACApB,EAAMoB,qBAGRn2B,KAAKsmE,sBACH,aACA,QACA,WACA,QACA,MACA,QACA,aACA,QACA,YACA,SAGFtmE,KAAKumE,iCACH,YACAxxC,EAAMM,iBACN,SACAr1B,KAAKsmE,qBACL,SACAtmE,KAAKsmE,qBACL,SACAtmE,KAAKsmE,qBACL,SACAtmE,KAAKsmE,sBAGPtmE,KAAKwmE,wBACH,QACAzxC,EAAMM,iBACN,aACAN,EAAMI,eAAen1B,KAAKumE,iCAC1B,YACAvmE,KAAKsmE,qBACL,aACAtmE,KAAKsmE,qBACL,eACAtmE,KAAKsmE,qBACL,YACAtmE,KAAKsmE,qBACL,YACA,UAGFtmE,KAAKymE,yBACH,OACA1xC,EAAM2B,oBACN,YACA3B,EAAMM,iBACN,QACAN,EAAMI,eAAeJ,EAAMM,kBAC3B,OACAN,EAAMI,eAAeJ,EAAMM,kBAC3B,QACAN,EAAMI,eAAeJ,EAAMM,kBAC3B,WACAN,EAAMI,eAAen1B,KAAKomE,yBAC1B,aACArxC,EAAMI,eAAeJ,EAAMM,kBAC3B,mBACAN,EAAM2B,oBACN,eACA3B,EAAMoB,oBACN,eACApB,EAAMI,eAAen1B,KAAKqmE,4BAC1B,mBACAtxC,EAAM2B,oBACN,OACA,SACA,iBACA3B,EAAMM,iBACN,WACAN,EAAMI,eAAen1B,KAAKwmE,yBAG5BxmE,KAAKg3B,OAASh3B,KAAK0mE,iBACjB,gBACA3xC,EAAMI,eAAe,UACrB,YACAJ,EAAMI,eAAen1B,KAAKmmE,4BAC1B,cACApxC,EAAMI,eAAen1B,KAAKymE,2BAK9BvtB,EAAG,WACDl5C,KAAK2mE,4BACH,OACA5xC,EAAM2B,oBACN,QACC,KAAM,SAAU,GACjB,YACA3B,EAAMI,eAAe,SACrB,YACAJ,EAAMI,gBAAgB,KAAM,SAAU,KAGxCn1B,KAAK4mE,yBACH,OACA7xC,EAAMM,iBACN,OACA,SACA,WACAN,EAAMoB,oBACN,cACApB,EAAMoB,oBACN,WACApB,EAAMoB,oBACN,WACApB,EAAMoB,oBACN,WACApB,EAAMoB,oBACN,WACApB,EAAMoB,oBACN,UACApB,EAAMoB,oBACN,cACApB,EAAMoB,oBACN,gBACApB,EAAMoB,oBACN,WACA,SACA,YACA,SACA,YACA,SACA,gBACA,UAGFn2B,KAAK6mE,4BACH,QACA9xC,EAAMoB,oBACN,OACApB,EAAMoB,oBACN,OACApB,EAAMoB,oBACN,QACApB,EAAMoB,oBACN,OACApB,EAAMoB,qBAGRn2B,KAAK8mE,sBACH,aACA,QACA,WACA,QACA,MACA,QACA,aACA,QACA,YACA,SAGF9mE,KAAK+mE,iCACH,YACAhyC,EAAMM,iBACN,aACAr1B,KAAK8mE,qBACL,eACA9mE,KAAK8mE,qBACL,aACA9mE,KAAK8mE,sBAGP9mE,KAAKgnE,wBACH,aACAjyC,EAAMI,eAAen1B,KAAK+mE,iCAC1B,YACA/mE,KAAK8mE,qBACL,eACA9mE,KAAK8mE,qBACL,YACA9mE,KAAK8mE,qBACL,YACA,UAGF9mE,KAAKinE,yBACH,OACAlyC,EAAM2B,oBACN,YACA3B,EAAMM,iBACN,QACAN,EAAMI,eAAeJ,EAAMM,kBAC3B,OACAN,EAAMI,eAAeJ,EAAMM,kBAC3B,QACAN,EAAMI,eAAeJ,EAAMM,kBAC3B,WACAN,EAAMI,eAAen1B,KAAK4mE,yBAC1B,aACA7xC,EAAMI,eAAeJ,EAAMM,kBAC3B,mBACAN,EAAM2B,oBACN,eACA3B,EAAMoB,oBACN,eACApB,EAAMI,eAAen1B,KAAK6mE,4BAC1B,mBACA9xC,EAAM2B,oBACN,OACA,SACA,iBACA3B,EAAMM,iBACN,WACAN,EAAMI,eAAen1B,KAAKgnE,yBAG5BhnE,KAAKg3B,OAASh3B,KAAKknE,iBACjB,gBACAnyC,EAAMI,eAAe,UACrB,YACAJ,EAAMI,eAAen1B,KAAK2mE,4BAC1B,cACA5xC,EAAMI,eAAen1B,KAAKinE,2BAK9B7sB,EAAG,WACDp6C,KAAKmnE,4BACH,OACApyC,EAAM2B,oBACN,QACC,KAAM,SAAU,GACjB,YACA3B,EAAMI,eAAe,UACrB,YACAJ,EAAMI,gBAAgB,KAAM,SAAU,KAGxCn1B,KAAKonE,yBACH,OACAryC,EAAMM,iBACN,OACA,SACA,WACAN,EAAMoB,oBACN,cACApB,EAAMoB,oBACN,WACApB,EAAMoB,oBACN,WACApB,EAAMoB,oBACN,WACApB,EAAMoB,oBACN,WACApB,EAAMoB,oBACN,UACApB,EAAMoB,oBACN,cACApB,EAAMoB,oBACN,gBACApB,EAAMoB,oBACN,YACA,SACA,YACA,SACA,gBACA,UAGFn2B,KAAKqnE,4BACH,QACAtyC,EAAMoB,oBACN,OACApB,EAAMoB,oBACN,OACApB,EAAMoB,oBACN,QACApB,EAAMoB,oBACN,OACApB,EAAMoB,qBAGRn2B,KAAKsnE,sBACH,aACA,QACA,WACA,QACA,MACA,QACA,aACA,QACA,YACA,SAGFtnE,KAAKunE,iCACH,YACAxyC,EAAMM,iBACN,aACAr1B,KAAKsnE,qBACL,eACAtnE,KAAKsnE,qBACL,aACAtnE,KAAKsnE,sBAGPtnE,KAAKwnE,wBACH,aACAzyC,EAAMI,eAAen1B,KAAKunE,iCAC1B,YACAvnE,KAAKsnE,qBACL,eACAtnE,KAAKsnE,qBACL,YACAtnE,KAAKsnE,qBACL,YACA,UAGFtnE,KAAKynE,yBACH,OACA1yC,EAAM2B,oBACN,YACA3B,EAAMM,iBACN,QACAN,EAAMI,eAAeJ,EAAMM,kBAC3B,OACAN,EAAMI,eAAeJ,EAAMM,kBAC3B,QACAN,EAAMI,eAAeJ,EAAMM,kBAC3B,WACAN,EAAMI,eAAen1B,KAAKonE,yBAC1B,aACAryC,EAAMI,eAAeJ,EAAMM,kBAC3B,mBACAN,EAAM2B,oBACN,eACA3B,EAAMoB,oBACN,eACApB,EAAMI,eAAen1B,KAAKqnE,4BAC1B,mBACAtyC,EAAM2B,oBACN,OACA,SACA,iBACA3B,EAAMM,iBACN,WACAN,EAAMI,eAAen1B,KAAKwnE,yBAG5BxnE,KAAKg3B,OAASh3B,KAAK0nE,iBACjB,YACA3yC,EAAMI,eAAen1B,KAAKmnE,4BAC1B,cACApyC,EAAMI,eAAen1B,KAAKynE,2BAK9BnsB,EAAG,WACDt7C,KAAK2nE,4BACH,OACA5yC,EAAM2B,oBACN,QACC,KAAM,SAAU,GACjB,YACA3B,EAAMI,eAAe,UACrB,YACAJ,EAAMI,gBAAgB,KAAM,SAAU,KAGxCn1B,KAAK4nE,yBACH,OACA7yC,EAAMM,iBACN,OACA,SACA,WACAN,EAAMoB,oBACN,cACApB,EAAMoB,oBACN,WACApB,EAAMoB,oBACN,WACApB,EAAMoB,oBACN,WACApB,EAAMoB,oBACN,WACApB,EAAMoB,oBACN,UACApB,EAAMoB,oBACN,cACApB,EAAMoB,oBACN,gBACApB,EAAMoB,oBACN,YACA,SACA,YACA,SACA,gBACA,UAGFn2B,KAAK6nE,4BACH,QACA9yC,EAAMoB,oBACN,OACApB,EAAMoB,oBACN,OACApB,EAAMoB,oBACN,QACApB,EAAMoB,oBACN,OACApB,EAAMoB,qBAGRn2B,KAAK8nE,sBACH,aACA,QACA,WACA,QACA,MACA,QACA,aACA,QACA,YACA,SAGF9nE,KAAK+nE,iCACH,YACAhzC,EAAMM,iBACN,aACAr1B,KAAK8nE,qBACL,eACA9nE,KAAK8nE,qBACL,aACA9nE,KAAK8nE,sBAGP9nE,KAAKgoE,wBACH,aACAjzC,EAAMI,eAAen1B,KAAK+nE,iCAC1B,YACA/nE,KAAK8nE,qBACL,eACA9nE,KAAK8nE,qBACL,YACA9nE,KAAK8nE,qBACL,YACA,UAGF9nE,KAAKioE,yBACH,OACAlzC,EAAM2B,oBACN,YACA3B,EAAMM,iBACN,OACAN,EAAMI,eAAeJ,EAAMM,kBAC3B,QACAN,EAAMI,eAAeJ,EAAMM,kBAC3B,WACAN,EAAMI,eAAen1B,KAAK4nE,yBAC1B,aACA7yC,EAAMI,eAAeJ,EAAMM,kBAC3B,mBACAN,EAAM2B,oBACN,eACA3B,EAAMoB,oBACN,eACApB,EAAMI,eAAen1B,KAAK6nE,4BAC1B,mBACA9yC,EAAM2B,oBACN,OACA,SACA,iBACA3B,EAAMM,iBACN,WACAN,EAAMI,eAAen1B,KAAKgoE,yBAG5BhoE,KAAKg3B,OAASh3B,KAAKkoE,iBACjB,YACAnzC,EAAMI,eAAen1B,KAAK2nE,4BAC1B,cACA5yC,EAAMI,eAAen1B,KAAKioE,2BAK9BhnE,EAAG,WACDjB,KAAKmoE,4BACH,OACApzC,EAAM2B,oBACN,QACC,KAAM,SAAU,GACjB,YACA3B,EAAMI,eAAe,UACrB,YACAJ,EAAMI,gBAAgB,KAAM,SAAU,KAGxCn1B,KAAKooE,yBACH,OACArzC,EAAMM,iBACN,OACA,SACA,WACAN,EAAMoB,oBACN,cACApB,EAAMoB,oBACN,WACApB,EAAMoB,oBACN,WACApB,EAAMoB,oBACN,WACApB,EAAMoB,oBACN,WACApB,EAAMoB,oBACN,UACApB,EAAMoB,oBACN,cACApB,EAAMoB,oBACN,gBACApB,EAAMoB,oBACN,WACA,SACA,YACA,SACA,YACA,SACA,gBACA,UAGFn2B,KAAKqoE,4BACH,QACAtzC,EAAMoB,oBACN,OACApB,EAAMoB,oBACN,OACApB,EAAMoB,oBACN,QACApB,EAAMoB,oBACN,OACApB,EAAMoB,qBAG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WACA,UACA,YACC,KAAM,UAAW,GAClB,OACA18D,EAAM2B,qBAGR12B,KAAKg3B,OAASh3B,KAAKiyF,aACjB,UACAjyF,KAAKkyF,cACL,gBACAlyF,KAAKkyF,cACL,SACAlyF,KAAKqxF,cACL,cACArxF,KAAKuxF,uBACL,eACAx8D,EAAMI,eAAen1B,KAAKyxF,kFCvkCpC,IAAM18D,EAAQt0B,EAAQ,6BAEtBf,EAAOD,UAMHyB,KAAM,MACN8zB,UAEEm9D,GAAI,WACFnyF,KAAKoyF,wBACH,SACC,KAAM,QAAS,GAChB,YACA,UACA,aACC,KAAM,UAAW,IAGpBpyF,KAAKqyF,2BACH,SACAt9D,EAAM6qB,kBAAkB5/C,KAAKoyF,wBAC7B,kBACA,UACA,kBACC,KAAM,QAAS,GAChB,qBACA,WAGFpyF,KAAKsyF,+BACH,WACA,UACA,aACA,UACA,UACA,UACA,WACA,UACA,UACA,UACA,QACA,SAGFtyF,KAAKuyF,oCACH,eACAx9D,EAAMI,eAAen1B,KAAKsyF,gCAG5BtyF,KAAKwyF,kCACH,aACA,UACA,UACA,UACA,OACA,UACA,iBACA,UACA,YACC,KAAM,UAAW,GAClB,YACA,UACA,UACA,UACA,WACA,UAGFxyF,KAAKyyF,wBACH,WACA,UACA,SACA,UACA,QACA,UACA,SACA,UACA,QACA,UACA,UACA19D,EAAMoB,oBACN,aACApB,EAAMI,eAAen1B,KAAKwyF,kCAC1B,OACAz9D,EAAM2B,oBACN,WACA,UAGF12B,KAAK0yF,yBAA2B,SAAU39D,EAAMI,eAAen1B,KAAKyyF,yBAEpEzyF,KAAK2yF,oCACH,SACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,eACC,MAAO,KAAM,QAAS,GAAI,GAC3B,gBACC,MAAO,KAAM,QAAS,GAAI,IAG7B3yF,KAAK4yF,2BAA6B,QAAS,UAE3C5yF,KAAK6yF,yBACH,QACC,KAAM,QAAS,GAChB,aACC,KAAM,QAAS,GAChB,mBACC,KAAM,QAAS,GAChB,aACA,UACA,aACA,UACA,YACA,UACA,aACC,KAAM,QAAS,GAChB,cACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,eACA,UACA,eACA,UACA,eACA,UACA,QACA,SACA,kBACA99D,EAAMoB,oBACN,MACApB,EAAMQ,iBAAiBv1B,KAAK4yF,4BAG9B5yF,KAAK8yF,uBACH,aACC,KAAM,QAAS,GAChB,YACC,KAAM,QAAS,GAChB,aACC,KAAM,UAAW,GAClB,eACC,KAAM,QAAS,GAChB,eACC,KAAM,UAAW,GAClB,WACA,UACA,eACC,KAAM,UAAW,IAGpB9yF,KAAK+yF,yBACH,WACA,UACA,SACC,KAAM,UAAW,GAClB,eACA,SACA,cACC,KAAM,UAAW,GAClB,QACA,UACA,YACA,UACA,kBACC,KAAM,UAAW,GAClB,SACA,SACA,OACA,UACA,kBACC,KAAM,UAAW,GAClB,QACA,SACA,YACC,KAAM,UAAW,GAClB,WACC,KAAM,UAAW,GAClB,gBACA,SACA,UACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,OACA,SACA,SACC,KAAM,UAAW,GAClB,aACC,KAAM,SAAU,GACjB,SACA,UACA,UACAh+D,EAAMoB,oBACN,OACA,QACA,OACApB,EAAM2B,oBACN,WACA,UAGF12B,KAAKgzF,+BACH,OACAj+D,EAAM2B,oBACN,KACC,KAAM,UAAW,GAClB,KACC,KAAM,UAAW,GAClB,KACC,KAAM,UAAW,IAGpB12B,KAAKizF,sBACH,QACA,QACA,gBACA,UACA,gBACA,UACA,iBACA,UACA,iBACA,UACA,oBACA,UACA,iBACA,UACA,kBACA,UACA,kBACA,UACA,mBACA,UACA,mBACA,UACA,sBACA,UACA,mBACA,UACA,iBACA,WAGFjzF,KAAKkzF,4BACH,OACA,SACA,UACA,SACA,QACA,SACA,MACA,UACA,SACC,KAAM,QAAS,GAChB,UACC,KAAM,UAAW,GAClB,SACC,KAAM,UAAW,GAClB,eACA,UACA,iBACA,UACA,QACA,SAGFlzF,KAAKmzF,+BAAiC,UAAWp+D,EAAMoB,qBAEvDn2B,KAAKozF,iCAAmC,QAAS,SAAU,SAAU,KAAM,UAAW,IAEtFpzF,KAAKqzF,wBACH,QACAt+D,EAAMI,eAAen1B,KAAKkzF,4BAC1B,WACAn+D,EAAMI,eAAen1B,KAAKmzF,+BAC1B,WACAp+D,EAAMoB,oBACN,YACC,KAAM,UAAW,GAClB,mBACC,KAAM,UAAW,GAClB,eACA,UACA,QACA,QACA,YACApB,EAAMI,eAAen1B,KAAKozF,kCAG5BpzF,KAAKszF,sCAAwC,QAAS,UAEtDtzF,KAAKuzF,oCACH,UACA,UACA,UACA,UACA,cACA,UACA,WACA,UACA,iBACA,UACA,UACA,UACA,SACC,KAAM,UAAW,GAClB,QACA,UACA,UACAx+D,EAAMoB,oBACN,aACC,KAAM,UAAW,GAClB,aACA,UACA,YACApB,EAAMQ,iBAAiBv1B,KAAKqzF,wBAC5B,MACAt+D,EAAMQ,iBAAiBv1B,KAAKszF,uCAG9BtzF,KAAKwzF,gCACH,WACAz+D,EAAMoB,oBACN,aACC,KAAM,UAAW,IAGpBn2B,KAAKyzF,gCACH,0BACC,KAAM,UAAW,GAClB,0BACC,KAAM,UAAW,GAClB,0BACC,KAAM,UAAW,GAClB,yBACC,KAAM,UAAW,GAClB,sBACA,UACA,YACA,UAGFzzF,KAAK0zF,kCACH,OACA,SACA,UACA,SACA,QACA,SACA,QACA,SACA,MACA,WAGF1zF,KAAK2zF,kCACH,WACA5+D,EAAMoB,oBACN,YACApB,EAAMI,eAAen1B,KAAKozF,iCAC1B,WACAr+D,EAAMI,eAAen1B,KAAKwzF,gCAC1B,mBACAxzF,KAAKyzF,+BACL,WACAzzF,KAAK0zF,kCAGP1zF,KAAK4zF,4BAA8B,QAAS,UAE5C5zF,KAAK6zF,0BACH,MACA7zF,KAAKuzF,mCACL,QACAvzF,KAAKuzF,mCACL,QACA,SACA,OACAx+D,EAAM2B,oBACN,YACC,KAAM,UAAW,GAClB,WACA3B,EAAMQ,iBAAiBv1B,KAAK2zF,kCAC5B,MACA5+D,EAAMQ,iBAAiBv1B,KAAK4zF,6BAG9B5zF,KAAK8zF,2BAA6B,QAAS/+D,EAAMI,eAAen1B,KAAK6zF,2BAErE7zF,KAAK+zF,iCACH,cACC,KAAM,SAAU,GACjB,YACC,KAAM,SAAU,GACjB,cACC,KAAM,UAAW,GAClB,eACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,cACA,UACA,QACA,UACA,QACA,SACA,eACAh/D,EAAMM,iBACN,YACAN,EAAMoB,oBACN,gBACA,UAGFn2B,KAAKg0F,4BAA8B,SAAUj/D,EAAMI,eAAen1B,KAAK+zF,kCAEvE/zF,KAAKi0F,8BACH,cACAl/D,EAAMI,eAAen1B,KAAKg0F,4BAC1B,UACAj/D,EAAMI,eAAeJ,EAAMM,mBAG7Br1B,KAAKk0F,wBACH,aACA,SACA,gBACA,UACA,iBACA,UACA,YACC,KAAM,UAAW,GAClB,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,YACA,UACA,YACA,UACA,eACA,UACA,cACA,UACA,eACA,UACA,cACA,UACA,uBACC,KAAM,QAAS,GAChB,oBACC,KAAM,QAAS,GAChB,gBACC,KAAM,QAAS,GAChB,iBACA,UACA,gBACA,UACA,mBACA,UACA,mBACAn/D,EAAMoB,oBACN,mBACApB,EAAMI,eAAeJ,EAAMoB,qBAC3B,iBACApB,EAAMI,eAAe,UACrB,iBACAJ,EAAMI,gBAAgB,KAAM,UAAW,IACvC,YACA,UACA,eACA,UACA,uBACA,UACA,cACC,KAAM,QAAS,GAChB,cACC,KAAM,QAAS,IAGlBn1B,KAAKm0F,uBACH,UACA,QACA,YACA,QACA,QACA,QACA,QACA,QACA,OACA,QACA,WACA,QACA,YACA,SAGFn0F,KAAKo0F,wBAA0B,QAASr/D,EAAMM,kBAE9Cr1B,KAAKq0F,0BAA4B,QAAS,UAE1Cr0F,KAAKs0F,yBACH,OACAv/D,EAAMQ,iBAAiBv1B,KAAKq0F,0BAC5B,aACA,UACA,UACA,UACA,YACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,YACA,UACA,YACA,UACA,cACA,UACA,YACA,UACA,yBACC,KAAM,UAAW,IAGpBr0F,KAAKu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pgE,EAAMI,eAAen1B,KAAKk1F,yBAEpEl1F,KAAKo1F,oCACH,SACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,eACC,MAAO,KAAM,QAAS,GAAI,GAC3B,gBACC,MAAO,KAAM,QAAS,GAAI,IAG7Bp1F,KAAKq1F,yBACH,QACC,KAAM,QAAS,GAChB,aACC,KAAM,QAAS,GAChB,mBACC,KAAM,QAAS,GAChB,aACA,UACA,aACA,UACA,YACA,UACA,aACC,KAAM,QAAS,GAChB,cACA,UACA,aACA,UACA,aACA,UACA,mBACC,KAAM,UAAW,GAClB,4BACC,KAAM,UAAW,IAGpBr1F,KAAKs1F,uBACH,aACC,KAAM,QAAS,GAChB,YACC,KAAM,QAAS,GAChB,aACC,KAAM,UAAW,GAClB,eACC,KAAM,QAAS,GAChB,eACC,KAAM,UAAW,GAClB,WACA,UACA,eACC,KAAM,UAAW,IAGpBt1F,KAAKu1F,yBACH,WACA,UACA,SACC,KAAM,UAAW,GAClB,eACA,SACA,cACC,KAAM,UAAW,GAClB,QACA,UACA,YACA,UACA,kBACC,KAAM,UAAW,GAClB,SACA,SACA,OACA,UACA,kBACC,KAAM,UAAW,GAClB,QACA,SACA,YACC,KAAM,UAAW,GAClB,WACC,KAAM,UAAW,GAClB,gBACA,SACA,UACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,OACA,SACA,SACC,KAAM,UAAW,GAClB,aACC,KAAM,SAAU,GACjB,SACA,UACA,UACAxgE,EAAMoB,oBACN,OACA,QACA,OACApB,EAAM2B,oBACN,WACA,UAGF12B,KAAKw1F,+BACH,OACAzgE,EAAM2B,oBACN,KACC,KAAM,UAAW,GAClB,KACC,KAAM,UAAW,GAClB,KACC,KAAM,UAAW,IAGpB12B,KAAKy1F,sBACH,QACA,QACA,gBACA,UACA,gBACA,UACA,iBACA,UACA,iBACA,UACA,oBACA,UACA,iBACA,UACA,kBACA,UACA,kBACA,UACA,mBACA,UACA,mBACA,UACA,sBACA,UACA,mBACA,UACA,iBACA,WAGFz1F,KAAK01F,oCACH,UACA,UACA,UACA,UACA,cACA,UACA,WACA,UACA,iBACA,UACA,UACA,UACA,SACC,KAAM,UAAW,GAClB,QACA,UACA,UACA3gE,EAAMoB,oBACN,aACC,KAAM,UAAW,GAClB,aACA,WAGFn2B,KAAK21F,0BACH,MACA31F,KAAK01F,mCACL,QACA11F,KAAK01F,mCACL,QACA,SACA,OACA3gE,EAAM2B,qBAGR12B,KAAK41F,2BAA6B,QAAS7gE,EAAMI,eAAen1B,KAAK21F,2BAErE31F,KAAK61F,iCACH,cACC,KAAM,SAAU,GACjB,YACC,KAAM,SAAU,GACjB,cACC,KAAM,UAAW,GAClB,eACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,cACA,UACA,QACA,UACA,QACA,SACA,eACA9gE,EAAMM,iBACN,YACAN,EAAMoB,oBACN,gBACA,UAGFn2B,KAAK81F,4BAA8B,SAAU/gE,EAAMI,eAAen1B,KAAK61F,kCAEvE71F,KAAK+1F,8BACH,cACAhhE,EAAMI,eAAen1B,KAAK81F,4BAC1B,UACA/gE,EAAMI,eAAeJ,EAAMM,mBAG7Br1B,KAAKg2F,wBACH,aACA,SACA,gBACA,UACA,iBACA,UACA,YACC,KAAM,UAAW,GAClB,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,YACA,UACA,YACA,UACA,eACA,UACA,cACA,UACA,eACA,UACA,cACA,UACA,uBACC,KAAM,QAAS,GAChB,oBACC,KAAM,QAAS,GAChB,gBACC,KAAM,QAAS,GAChB,iBACA,UACA,gBACA,UACA,mBACA,UACA,mBACAjhE,EAAMoB,oBACN,mBACApB,EAAMI,eAAeJ,EAAMoB,qBAC3B,iBACApB,EAAMI,eAAe,UACrB,iBACAJ,EAAMI,gBAAgB,KAAM,UAAW,IACvC,YACA,UACA,eACA,UACA,uBACA,UACA,cACC,KAAM,QAAS,GAChB,cACC,KAAM,QAAS,IAGlB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AAK62F,kCAC1B,OACA9hE,EAAM2B,qBAGR12B,KAAK+2F,yBAA2B,SAAUhiE,EAAMI,eAAen1B,KAAK82F,yBAEpE92F,KAAKg3F,oCACH,SACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,eACC,MAAO,KAAM,QAAS,GAAI,GAC3B,gBACC,MAAO,KAAM,QAAS,GAAI,IAG7Bh3F,KAAKi3F,yBACH,QACC,KAAM,QAAS,GAChB,aACC,KAAM,QAAS,GAChB,mBACC,KAAM,QAAS,GAChB,aACA,UACA,aACA,UACA,YACA,UACA,aACC,KAAM,QAAS,GAChB,cACA,UACA,aACA,UACA,aACA,UACA,mBACC,KAAM,UAAW,GAClB,4BACC,KAAM,UAAW,IAGpBj3F,KAAKk3F,uBACH,aACC,KAAM,QAAS,GAChB,YACC,KAAM,QAAS,GAChB,aACC,KAAM,UAAW,GAClB,eACC,KAAM,QAAS,GAChB,eACC,KAAM,UAAW,GAClB,WACA,UACA,eACC,KAAM,UAAW,IAGpBl3F,KAAKm3F,yBACH,WACA,UACA,SACC,KAAM,UAAW,GAClB,eACA,SACA,cACC,KAAM,UAAW,GAClB,QACA,UACA,YACA,UACA,kBACC,KAAM,UAAW,GAClB,SACA,SACA,OACA,UACA,kBACC,KAAM,UAAW,GAClB,QACA,SACA,YACC,KAAM,UAAW,GAClB,WACC,KAAM,UAAW,GAClB,gBACA,SACA,UACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,OACA,SACA,SACC,KAAM,UAAW,GAClB,aACC,KAAM,SAAU,GACjB,SACA,UACA,UACApiE,EAAMoB,oBACN,OACA,QACA,OACApB,EAAM2B,qBAGR12B,KAAKo3F,+BACH,OACAriE,EAAM2B,oBACN,KACC,KAAM,UAAW,GAClB,KACC,KAAM,UAAW,GAClB,KACC,KAAM,UAAW,IAGpB12B,KAAKq3F,sBACH,QACA,QACA,gBACA,UACA,gBACA,UACA,iBACA,UACA,iBACA,UACA,oBACA,UACA,iBACA,UACA,kBACA,UACA,kBACA,UACA,mBACA,UACA,mBACA,UACA,sBACA,UACA,mBACA,UACA,iBACA,WAGFr3F,KAAKs3F,oCACH,UACA,UACA,UACA,UACA,cACA,UACA,WACA,UACA,iBACA,UACA,UACA,UACA,SACC,KAAM,UAAW,GAClB,QACA,UACA,UACAviE,EAAMoB,oBACN,aACC,KAAM,UAAW,GAClB,aACA,WAGFn2B,KAAKu3F,0BACH,MACAv3F,KAAKs3F,mCACL,QACAt3F,KAAKs3F,mCACL,QACA,SACA,OACAviE,EAAM2B,qBAGR12B,KAAKw3F,2BAA6B,QAASziE,EAAMI,eAAen1B,KAAKu3F,2BAErEv3F,KAAKy3F,iCACH,cACC,KAAM,SAAU,GACjB,YACC,KAAM,SAAU,GACjB,cACC,KAAM,UAAW,GAClB,eACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,cACA,UACA,QACA,UACA,QACA,SACA,eACA1iE,EAAMM,iBACN,YACAN,EAAMoB,oBACN,gBACA,UAGFn2B,KAAK03F,4BAA8B,SAAU3iE,EAAMI,eAAen1B,KAAKy3F,kCAEvEz3F,KAAK23F,8BACH,cACA5iE,EAAMI,eAAen1B,KAAK03F,4BAC1B,UACA3iE,EAAMI,eAAeJ,EAAMM,mBAG7Br1B,KAAK43F,wBACH,aACA,SACA,gBACA,UACA,iBACA,UACA,YACC,KAAM,UAAW,GAClB,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,YACA,UACA,YACA,UACA,eACA,UACA,cACA,UACA,eACA,UACA,cACA,UACA,uBACC,KAAM,QAAS,GAChB,oBACC,KAAM,QAAS,GAChB,gBACC,KAAM,QAAS,GAChB,iBACA,UACA,gBACA,UACA,mBACA,UACA,mBACA7iE,EAAMoB,oBACN,mBACApB,EAAMI,eAAeJ,EAAMoB,qBAC3B,iBACApB,EAAMI,eAAe,UACrB,iBACAJ,EAAMI,gBAAgB,KAAM,UAAW,IACvC,YACA,UACA,eACA,UACA,uBACA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Aen1B,KAAKy4F,kCAC1B,OACA1jE,EAAM2B,qBAGR12B,KAAK24F,yBAA2B,SAAU5jE,EAAMI,eAAen1B,KAAK04F,yBAEpE14F,KAAK44F,oCACH,SACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,eACC,MAAO,KAAM,QAAS,GAAI,GAC3B,gBACC,MAAO,KAAM,QAAS,GAAI,IAG7B54F,KAAK64F,yBACH,QACC,KAAM,QAAS,GAChB,aACC,KAAM,QAAS,GAChB,mBACC,KAAM,QAAS,GAChB,aACA,UACA,aACA,UACA,YACA,UACA,aACC,KAAM,QAAS,GAChB,cACA,UACA,aACA,UACA,aACA,UACA,mBACC,KAAM,UAAW,GAClB,4BACC,KAAM,UAAW,IAGpB74F,KAAK84F,uBACH,aACC,KAAM,QAAS,GAChB,YACC,KAAM,QAAS,GAChB,aACC,KAAM,UAAW,GAClB,eACC,KAAM,QAAS,GAChB,eACC,KAAM,UAAW,GAClB,WACA,UACA,eACC,KAAM,UAAW,IAGpB94F,KAAK+4F,yBACH,WACA,UACA,SACC,KAAM,UAAW,GAClB,eACA,SACA,cACC,KAAM,UAAW,GAClB,QACA,UACA,YACA,UACA,kBACC,KAAM,UAAW,GAClB,SACA,SACA,OACA,UACA,kBACC,KAAM,UAAW,GAClB,QACA,SACA,YACC,KAAM,UAAW,GAClB,WACC,KAAM,UAAW,GAClB,gBACA,SACA,UACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,OACA,SACA,SACC,KAAM,UAAW,GAClB,aACC,KAAM,SAAU,GACjB,SACA,UACA,UACAhkE,EAAMoB,oBACN,OACA,QACA,OACApB,EAAM2B,qBAGR12B,KAAKg5F,+BACH,OACAjkE,EAAM2B,oBACN,KACC,KAAM,UAAW,GAClB,KACC,KAAM,UAAW,GAClB,KACC,KAAM,UAAW,IAGpB12B,KAAKi5F,sBACH,QACA,QACA,gBACA,UACA,gBACA,UACA,iBACA,UACA,iBACA,UACA,oBACA,UACA,iBACA,UACA,kBACA,UACA,kBACA,UACA,mBACA,UACA,mBACA,UACA,sBACA,UACA,mBACA,UACA,iBACA,WAGFj5F,KAAKk5F,oCACH,UACA,UACA,UACA,UACA,cACA,UACA,WACA,UACA,iBACA,UACA,UACA,UACA,SACC,KAAM,UAAW,GAClB,QACA,UACA,UACAnkE,EAAMoB,oBACN,aACC,KAAM,UAAW,GAClB,aACA,WAGFn2B,KAAKm5F,0BACH,MACAn5F,KAAKk5F,mCACL,QACAl5F,KAAKk5F,mCACL,QACA,SACA,OACAnkE,EAAM2B,qBAGR12B,KAAKo5F,2BAA6B,QAASrkE,EAAMI,eAAen1B,KAAKm5F,2BAErEn5F,KAAKq5F,iCACH,cACC,KAAM,SAAU,GACjB,YACC,KAAM,SAAU,GACjB,cACC,KAAM,UAAW,GAClB,eACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,cACA,UACA,QACA,UACA,QACA,SACA,eACAtkE,EAAMM,iBACN,YACAN,EAAMoB,oBACN,gBACA,UAGFn2B,KAAKs5F,4BAA8B,SAAUvkE,EAAMI,eAAen1B,KAAKq5F,kCAEvEr5F,KAAKu5F,8BACH,cACAxkE,EAAMI,eAAen1B,KAAKs5F,4BAC1B,UACAvkE,EAAMI,eAAeJ,EAAMM,mBAG7Br1B,KAAKw5F,wBACH,aACA,SACA,gBACA,UACA,iBACA,UACA,YACC,KAAM,UAAW,GAClB,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,YACA,UACA,YACA,UACA,eACA,UACA,cACA,UACA,eACA,UACA,cACA,UACA,uBACC,KAAM,QAAS,GAChB,oBACC,KAAM,QAAS,GAChB,gBACC,KAAM,QAAS,GAChB,iBACA,UACA,gBACA,UACA,mBACA,UACA,mBACAzkE,EAAMoB,oBACN,mBACApB,EAAMI,eAAeJ,EAAMoB,qBAC3B,iBACApB,EAAMI,eAAe,UACrB,iBACAJ,EAAMI,gBAAgB,KAAM,UAAW,IACvC,YACA,UACA,eACA,UAC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n1B,KAAKq6F,yBAEpEr6F,KAAKu6F,oCACH,SACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,eACC,MAAO,KAAM,QAAS,GAAI,GAC3B,gBACC,MAAO,KAAM,QAAS,GAAI,IAG7Bv6F,KAAKw6F,yBACH,QACC,KAAM,QAAS,GAChB,aACC,KAAM,QAAS,GAChB,mBACC,KAAM,QAAS,GAChB,aACA,UACA,aACA,UACA,YACA,UACA,aACC,KAAM,QAAS,GAChB,cACA,UACA,aACA,UACA,aACA,UACA,mBACC,KAAM,UAAW,GAClB,4BACC,KAAM,UAAW,IAGpBx6F,KAAKy6F,uBACH,aACC,KAAM,QAAS,GAChB,YACC,KAAM,QAAS,GAChB,aACC,KAAM,UAAW,GAClB,eACC,KAAM,QAAS,GAChB,eACC,KAAM,UAAW,GAClB,WACA,UACA,eACC,KAAM,UAAW,IAGpBz6F,KAAK06F,yBACH,WACA,UACA,SACC,KAAM,UAAW,GAClB,eACA,SACA,cACC,KAAM,UAAW,GAClB,QACA,UACA,YACA,UACA,kBACC,KAAM,UAAW,GAClB,SACA,SACA,OACA,UACA,kBACC,KAAM,UAAW,GAClB,QACA,SACA,YACC,KAAM,UAAW,GAClB,WACC,KAAM,UAAW,GAClB,gBACA,SACA,UACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,OACA,SACA,SACC,KAAM,UAAW,GAClB,aACC,KAAM,SAAU,GACjB,SACA,UACA,UACA3lE,EAAMoB,oBACN,OACA,QACA,OACApB,EAAM2B,qBAGR12B,KAAK26F,+BACH,OACA5lE,EAAM2B,oBACN,KACC,KAAM,UAAW,GAClB,KACC,KAAM,UAAW,GAClB,KACC,KAAM,UAAW,IAGpB12B,KAAK46F,sBACH,QACA,QACA,gBACA,UACA,gBACA,UACA,iBACA,UACA,iBACA,UACA,oBACA,UACA,iBACA,UACA,kBACA,UACA,kBACA,UACA,mBACA,UACA,mBACA,UACA,sBACA,UACA,mBACA,UACA,iBACA,WAGF56F,KAAK66F,oCACH,UACA,UACA,UACA,UACA,cACA,UACA,WACA,UACA,iBACA,UACA,UACA,UACA,SACC,KAAM,UAAW,GAClB,QACA,UACA,UACA9lE,EAAMoB,oBACN,aACC,KAAM,UAAW,GAClB,aACA,WAGFn2B,KAAK86F,0BACH,MACA96F,KAAK66F,mCACL,QACA76F,KAAK66F,mCACL,QACA,SACA,OACA9lE,EAAM2B,qBAGR12B,KAAK+6F,2BAA6B,QAAShmE,EAAMI,eAAen1B,KAAK86F,2BAErE96F,KAAKg7F,iCACH,cACC,KAAM,SAAU,GACjB,YACC,KAAM,SAAU,GACjB,cACC,KAAM,UAAW,GAClB,eACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,cACA,UACA,QACA,UACA,QACA,SACA,eACAjmE,EAAMM,iBACN,YACAN,EAAMoB,oBACN,gBACA,UAGFn2B,KAAKi7F,4BAA8B,SAAUlmE,EAAMI,eAAen1B,KAAKg7F,kCAEvEh7F,KAAKk7F,8BACH,cACAnmE,EAAMI,eAAen1B,KAAKi7F,4BAC1B,UACAlmE,EAAMI,eAAeJ,EAAMM,mBAG7Br1B,KAAKm7F,wBACH,aACA,SACA,gBACA,UACA,iBACA,UACA,YACC,KAAM,UAAW,GAClB,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,YACA,UACA,YACA,UACA,eACA,UACA,cACA,UACA,eACA,UACA,cACA,UACA,uBACC,KAAM,QAAS,GAChB,oBACC,KAAM,QAAS,GAChB,gBACC,KAAM,QAAS,GAChB,iBACA,UACA,gBACA,UACA,mBACA,UACA,mBACApmE,EAAMoB,oBACN,mBACApB,EAAMI,eAAeJ,EAAMoB,qBAC3B,iBACApB,EAAMI,eAAe,UACrB,iBACAJ,EAAMI,gBAAgB,KAAM,UAAW,IACvC,YACA,UACA,eACA,UACA,uBACA,UACA,cACC,KAAM,QAAS,GAChB,cACC,KAAM,QAAS,IAGlBn1B,KAAKo7F,uBACH,UACA,Q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Km8F,yBACH,QACC,KAAM,QAAS,GAChB,aACC,KAAM,QAAS,GAChB,mBACC,KAAM,QAAS,GAChB,aACA,UACA,aACA,UACA,YACA,UACA,aACC,KAAM,QAAS,GAChB,cACA,UACA,aACA,UACA,aACA,UACA,mBACC,KAAM,UAAW,GAClB,4BACC,KAAM,UAAW,IAGpBn8F,KAAKo8F,uBACH,aACC,KAAM,QAAS,GAChB,YACC,KAAM,QAAS,GAChB,aACC,KAAM,UAAW,GAClB,eACC,KAAM,QAAS,GAChB,eACC,KAAM,UAAW,GAClB,WACA,UACA,eACC,KAAM,UAAW,IAGpBp8F,KAAKq8F,yBACH,WACA,UACA,SACC,KAAM,UAAW,GAClB,eACA,SACA,cACC,KAAM,UAAW,GAClB,QACA,UACA,YACA,UACA,kBACC,KAAM,UAAW,GAClB,SACA,SACA,OACA,UACA,kBACC,KAAM,UAAW,GAClB,QACA,SACA,YACC,KAAM,UAAW,GAClB,WACC,KAAM,UAAW,GAClB,gBACA,SACA,UACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,OACA,SACA,SACC,KAAM,UAAW,GAClB,aACC,KAAM,SAAU,GACjB,SACA,UACA,UACAtnE,EAAMoB,oBACN,OACA,QACA,OACApB,EAAM2B,qBAGR12B,KAAKs8F,+BACH,OACAvnE,EAAM2B,oBACN,KACC,KAAM,UAAW,GAClB,KACC,KAAM,UAAW,GAClB,KACC,KAAM,UAAW,IAGpB12B,KAAKu8F,sBACH,QACA,QACA,gBACA,UACA,gBACA,UACA,iBACA,UACA,iBACA,UACA,oBACA,UACA,iBACA,UACA,kBACA,UACA,kBACA,UACA,mBACA,UACA,mBACA,UACA,sBACA,UACA,mBACA,UACA,iBACA,WAGFv8F,KAAKw8F,oCACH,UACA,UACA,UACA,UACA,cACA,UACA,WACA,UACA,iBACA,UACA,UACA,UACA,SACC,KAAM,UAAW,GAClB,QACA,UACA,UACAznE,EAAMoB,oBACN,aACC,KAAM,UAAW,GAClB,aACA,WAGFn2B,KAAKy8F,0BACH,MACAz8F,KAAKw8F,mCACL,QACAx8F,KAAKw8F,mCACL,QACA,SACA,OACAznE,EAAM2B,qBAGR12B,KAAK08F,2BAA6B,QAAS3nE,EAAMI,eAAen1B,KAAKy8F,2BAErEz8F,KAAK28F,iCACH,cACC,KAAM,SAAU,GACjB,YACC,KAAM,SAAU,GACjB,cACC,KAAM,UAAW,GAClB,eACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,cACA,UACA,QACA,UACA,QACA,SACA,eACA5nE,EAAMM,iBACN,YACAN,EAAMoB,oBACN,gBACA,UAGFn2B,KAAK48F,4BAA8B,SAAU7nE,EAAMI,eAAen1B,KAAK28F,kCAEvE38F,KAAK68F,8BACH,cACA9nE,EAAMI,eAAen1B,KAAK48F,4BAC1B,UACA7nE,EAAMI,eAAeJ,EAAMM,mBAG7Br1B,KAAK88F,wBACH,aACA,SACA,gBACA,UACA,iBACA,UACA,YACC,KAAM,UAAW,GAClB,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,YACA,UACA,YACA,UACA,eACA,UACA,cACA,UACA,eACA,UACA,cACA,UACA,uBACC,KAAM,QAAS,GAChB,oBACC,KAAM,QAAS,GAChB,gBACC,KAAM,QAAS,GAChB,iBACA,UACA,gBACA,UACA,mBACA,UACA,mBACA/nE,EAAMoB,oBACN,mBACApB,EAAMI,eAAeJ,EAAMoB,qBAC3B,iBACApB,EAAMI,eAAe,UACrB,iBACAJ,EAAMI,gBAAgB,KAAM,UAAW,IACvC,YACA,UACA,eACA,UACA,uBACA,UACA,cACC,KAAM,QAAS,GAChB,cACC,KAAM,QAAS,IAGlBn1B,KAAK+8F,uBACH,UACA,QACA,YACA,QACA,QACA,QACA,QACA,QACA,OACA,QACA,WACA,QACA,YACA,SAGF/8F,KAAKg9F,wBACH,UACC,KAAM,UAAW,GAClB,SACA,UACA,iBACA,UACA,iBACA,UACA,eACA,UACA,cACAjoE,EAAMI,gBAAgB,KAAM,UAAW,IACvC,YACA,SAGFn1B,KAAKi9F,wBACH,WACAloE,EAAMI,eAAen1B,KAAK47F,2BAC1B,qBACA7mE,EAAMI,eAAen1B,KAAK87F,oCAC1B,SACA/mE,EAAMQ,iBAAiBv1B,KAAKi8F,yBAC5B,oBACAlnE,EAAM6qB,kBAAkB5/C,KAAKk8F,oCAC7B,SACAnnE,EAAM6qB,kBAAkB5/C,KAAKm8F,yBAC7B,OACApnE,EAAM6qB,kBAAkB5/C,KAAKo8F,uBAC7B,iBACArnE,EAAM6qB,kBAAkB5/C,KAAKq8F,yBAC7B,uBACAtnE,EAAMI,eAAen1B,KAAKs8F,+BAC1B,MACAvnE,EAAMQ,iBAAiBv1B,KAAKu8F,sBAC5B,WACAxnE,EAAMQ,iBAAiBv1B,KAAK08F,2BAC5B,SACA3nE,EAAMQ,iBAAiBv1B,KAAK68F,8BAC5B,QACA9nE,EAAM6qB,kBAAkB5/C,KAAK88F,wBAC7B,OACA/nE,EAAM6qB,kBAAkB5/C,KAAK+8F,uBAC7B,OACAhoE,EAAM2B,oBACN,YACA3B,EAAMI,eAAe,SACrB,aACAJ,EAAMM,iBACN,OACA,QACA,OACAN,EAAMM,iBACN,aACAN,EAAMI,eAAen1B,KAAKg9F,yBAG5Bh9F,KAAKk9F,6BACH,YACAnoE,EAAMoB,oBACN,YACApB,EAAMoB,oBACN,WACApB,EAAMoB,qBAGRn2B,KAAKm9F,yBACH,WACApoE,EAAMI,eAAen1B,KAAK47F,2BAC1B,qBACA7mE,EAAMI,eAAen1B,KAAK87F,oCAC1B,SACA/mE,EAAMQ,iBAAiBv1B,KAAKi8F,yBAC5B,oBACAlnE,EAAM6qB,kBAAkB5/C,KAAKk8F,oCAC7B,SACAnnE,EAAM6qB,kBAAkB5/C,KAAKm8F,yBAC7B,OACApnE,EAAM6qB,kBAAkB5/C,KAAKo8F,uBAC7B,iBACArnE,EAAM6qB,kBAAkB5/C,KAAKq8F,yBAC7B,uBACAtnE,EAAMI,eAAen1B,KAAKs8F,+BAC1B,MACAvnE,EAAMQ,iBAAiBv1B,KAAKu8F,sBAC5B,WACAxnE,EAAMQ,iBAAiBv1B,KAAK08F,2BAC5B,SACA3nE,EAAMQ,iBAAiBv1B,KAAK68F,8BAC5B,QACA9nE,EAAM6qB,kBAAkB5/C,KAAK88F,wBAC7B,OACA/nE,EAAM6qB,kBAAkB5/C,KAAK+8F,uBAC7B,OACAhoE,EAAM2B,oBACN,YACA3B,EAAMI,eAAe,SACrB,aACAJ,EAAMM,iBACN,aACAN,EAAMI,eAAen1B,KAAKk9F,6BAC1B,WACAnoE,EAAMoB,qBAGRn2B,KAAKg3B,OAASh3B,KAAKo9F,uBACjB,iBACAroE,EAAMI,eAAen1B,KAAKi9F,wBAC1B,aACAloE,EAAMQ,iBAAiBv1B,KAAKm9F,2BAKhCE,GAAI,WACFr9F,KAAKs9F,wBACH,SACC,KAAM,QAAS,GAChB,YACA,UACA,aACC,KAAM,UAAW,IAGpBt9F,KAAKu9F,2BACH,SACAxoE,EAAM6qB,kBAAkB5/C,KAAKs9F,wBAC7B,kBACA,WAGFt9F,KAAKw9F,+BACH,WACA,UACA,aACA,UACA,UACA,UACA,WACA,UACA,UACA,UACA,QACA,SAGFx9F,KAAKy9F,oCACH,eACA1oE,EAAMI,eAAen1B,KAAKw9F,gCAG5Bx9F,KAAK09F,kCACH,aACA,UACA,UACA,UACA,OACA,UACA,iBACA,UACA,YACC,KAAM,UAAW,GAClB,YACA,UACA,UACA,WAGF19F,KAAK29F,wBACH,WACA,UACA,SACA,UACA,QACA,UACA,SACA,UACA,QACA,UACA,UACA5oE,EAAMoB,oBACN,aACApB,EAAMI,eAAen1B,KAAK09F,kCAC1B,OACA3oE,EAAM2B,qBAGR12B,KAAK49F,yBAA2B,SAAU7oE,EAAMI,eAAen1B,KAAK29F,yBAEpE39F,KAAK69F,oCACH,SACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,eACC,MAAO,KAAM,QAAS,GAAI,GAC3B,gBACC,MAAO,KAAM,QAAS,GAAI,IAG7B79F,KAAK89F,yBACH,QACC,KAAM,QAAS,GAChB,aACC,KAAM,QAAS,GAChB,mBACC,KAAM,QAAS,GAChB,aACA,UACA,aACA,UACA,YACA,UACA,aACC,KAAM,QAAS,GAChB,cACA,UACA,aACA,UACA,aACA,UACA,mBACC,KAAM,UAAW,GAClB,4BACC,KAAM,UAAW,IAGpB99F,KAAK+9F,uBACH,aACC,KAAM,QAAS,GAChB,YACC,KAAM,QAAS,GAChB,aACC,KAAM,UAAW,GAClB,eACC,KAAM,QAAS,GAChB,eACC,KAAM,UAAW,GAClB,WACA,UACA,eACC,KAAM,UAAW,IAGpB/9F,KAAKg+F,yBACH,WACA,UACA,SACC,KAAM,UAAW,GAClB,eACA,SACA,cACC,KAAM,UAAW,GAClB,QACA,UACA,YACA,UACA,kBACC,KAAM,UAAW,GAClB,SACA,SACA,OACA,UACA,kBACC,KAAM,UAAW,GAClB,QACA,SACA,YACC,KAAM,UAAW,GAClB,WACC,KAAM,UAAW,GAClB,gBACA,SACA,UACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,OACA,SACA,SACC,KAAM,UAAW,GAClB,aACC,KAAM,SAAU,GACjB,SACA,SACA,UACAjpE,EAAMoB,oBACN,OACA,QACA,OACApB,EAAM2B,qBAGR12B,KAAKi+F,+BACH,OACAlpE,EAAM2B,oBACN,KACC,KAAM,UAAW,GAClB,KACC,KAAM,UAAW,GAClB,KACC,KAAM,UAAW,IAGpB12B,KAAKk+F,sBACH,QACA,QACA,gBACA,UACA,gBACA,UACA,iBACA,UACA,iBACA,UACA,oBACA,UACA,iBACA,UACA,kBACA,UACA,kBACA,UACA,mBACA,UACA,mBACA,UACA,sBACA,UACA,mBACA,UACA,iBACA,WAGFl+F,KAAKm+F,oCACH,UACA,UACA,UACA,UACA,cACA,UACA,WACA,UACA,iBACA,UACA,UACA,UACA,SACC,KAAM,UAAW,GAClB,QACA,UACA,UACAppE,EAAMoB,oBACN,aACC,KAAM,UAAW,GAClB,aACA,WAGFn2B,KAAKo+F,0BACH,MACAp+F,KAAKm+F,mCACL,QACAn+F,KAAKm+F,mCACL,QACA,SACA,OACAppE,EAAM2B,qBAGR12B,KAAKq+F,2BAA6B,QAAStpE,EAAMI,eAAen1B,KAAKo+F,2BAErEp+F,KAAKs+F,iCACH,cACC,KAAM,SAAU,GACjB,YACC,KAAM,SAAU,GACjB,cACC,KAAM,UAAW,GAClB,eACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,cACA,UACA,QACA,UACA,QACA,SACA,eACAvpE,EAAMM,iBACN,YACAN,EAAMoB,oBACN,gBACA,UAGFn2B,KAAKu+F,4BAA8B,SAAUxpE,EAAMI,eAAen1B,KAAKs+F,kCAEvEt+F,KAAKw+F,8BACH,cACAzpE,EAAMI,eAAen1B,KAAKu+F,4BAC1B,UACAxpE,EAAMI,eAAeJ,EAAMM,mBAG7Br1B,KAAKy+F,wBACH,aACA,SACA,gBACA,UACA,iBACA,UACA,YACC,KAAM,UAAW,GAClB,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,YACA,UACA,YACA,UACA,eACA,UACA,cACA,UACA,eACA,UACA,cACA,UACA,uBACC,KAAM,QAAS,GAChB,oBACC,KAAM,QAAS,GAChB,gBACC,KAAM,QAAS,GAChB,iBACA,UACA,gBACA,UACA,mBACA,UACA,mBACA1pE,EAAMoB,oBACN,mBACApB,EAAMI,eAAeJ,EAAMoB,qBAC3B,iBACApB,EAAMI,eAAe,UACrB,iBACAJ,EAAMI,gBAAgB,KAAM,UAAW,IACvC,YACA,UACA,eACA,UACA,uBACA,UACA,cACC,KAAM,QAAS,GAChB,cACC,KAAM,QAAS,IAGlBn1B,KAAK0+F,uBACH,UACA,QACA,YACA,QACA,QACA,QACA,QACA,QACA,OACA,QACA,WACA,QACA,YACA,SAGF1+F,KAAK2+F,wBACH,UACC,KAAM,UAAW,GAClB,SACA,UACA,iBACA,UACA,iBACA,UACA,eACA,UACA,cACA5pE,EAAMI,gBAAgB,KAAM,UAAW,IACvC,YACA,SAGFn1B,KAAK4+F,wBACH,WACA7pE,EAAMI,eAAen1B,KAAKu9F,2BAC1B,qBACAxoE,EAAMI,eAAen1B,KAAKy9F,oCAC1B,SACA1oE,EAA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ChB,aACC,KAAM,UAAW,GAClB,eACC,KAAM,QAAS,GAChB,eACC,KAAM,UAAW,GAClB,WACA,UACA,eACC,KAAM,UAAW,IAGpB1/F,KAAK2/F,yBACH,WACA,UACA,SACC,KAAM,UAAW,GAClB,eACA,SACA,cACC,KAAM,UAAW,GAClB,QACA,UACA,YACA,UACA,kBACC,KAAM,UAAW,GAClB,SACA,SACA,OACA,UACA,kBACC,KAAM,UAAW,GAClB,QACA,SACA,YACC,KAAM,UAAW,GAClB,WACC,KAAM,UAAW,GAClB,gBACA,SACA,UACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,OACA,SACA,SACC,KAAM,UAAW,GAClB,aACC,KAAM,SAAU,GACjB,SACA,SACA,UACA5qE,EAAMoB,oBACN,OACA,QACA,OACApB,EAAM2B,qBAGR12B,KAAK4/F,+BACH,OACA7qE,EAAM2B,oBACN,KACC,KAAM,UAAW,GAClB,KACC,KAAM,UAAW,GAClB,KACC,KAAM,UAAW,IAGpB12B,KAAK6/F,sBACH,QACA,QACA,gBACA,UACA,gBACA,UACA,iBACA,UACA,iBACA,UACA,oBACA,UACA,iBACA,UACA,kBACA,UACA,kBACA,UACA,mBACA,UACA,mBACA,UACA,sBACA,UACA,mBACA,UACA,iBACA,WAGF7/F,KAAK8/F,oCACH,UACA,UACA,UACA,UACA,cACA,UACA,WACA,UACA,iBACA,UACA,UACA,UACA,SACC,KAAM,UAAW,GAClB,QACA,UACA,UACA/qE,EAAMoB,oBACN,aACC,KAAM,UAAW,GAClB,aACA,WAGFn2B,KAAK+/F,0BACH,MACA//F,KAAK8/F,mCACL,QACA9/F,KAAK8/F,mCACL,QACA,SACA,OACA/qE,EAAM2B,qBAGR12B,KAAKggG,2BAA6B,QAASjrE,EAAMI,eAAen1B,KAAK+/F,2BAErE//F,KAAKigG,iCACH,cACC,KAAM,SAAU,GACjB,YACC,KAAM,SAAU,GACjB,cACC,KAAM,UAAW,GAClB,eACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,cACA,UACA,QACA,UACA,QACA,SACA,eACAlrE,EAAMM,iBACN,YACAN,EAAMoB,oBACN,gBACA,UAGFn2B,KAAKkgG,4BAA8B,SAAUnrE,EAAMI,eAAen1B,KAAKigG,kCAEvEjgG,KAAKmgG,8BACH,cACAprE,EAAMI,eAAen1B,KAAKkgG,4BAC1B,UACAnrE,EAAMI,eAAeJ,EAAMM,mBAG7Br1B,KAAKogG,wBACH,aACA,SACA,gBACA,UACA,iBACA,UACA,YACC,KAAM,UAAW,GAClB,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,YACA,UACA,YACA,UACA,eACA,UACA,cACA,UACA,eACA,UACA,cACA,UACA,uBACC,KAAM,QAAS,GAChB,oBACC,KAAM,QAAS,GAChB,gBACC,KAAM,QAAS,GAChB,iBACA,UACA,gBACA,UACA,mBACA,UACA,mBACArrE,EAAMoB,oBACN,mBACApB,EAAMI,eAAeJ,EAAMoB,qBAC3B,iBACApB,EAAMI,eAAe,UACrB,iBACAJ,EAAMI,gBAAgB,KAAM,UAAW,IACvC,YACA,UACA,eACA,UACA,uBACA,UACA,cACC,KAAM,QAAS,GAChB,cACC,KAAM,QAAS,IAGlBn1B,KAAKqgG,uBACH,UACA,QACA,YACA,QACA,QACA,QACA,QACA,QACA,OACA,QACA,WACA,QACA,YACA,SAGFrgG,KAAKsgG,wBACH,UACC,KAAM,UAAW,GAClB,SACA,UACA,iBACA,UACA,iBACA,UACA,eACA,UACA,cACAvrE,EAAMI,gBAAgB,KAAM,UAAW,IACvC,YACA,SAGFn1B,KAAKugG,wBACH,WACAxrE,EAAMI,eAAen1B,KAAKk/F,2BAC1B,qBACAnqE,EAAMI,eAAen1B,KAAKo/F,oCAC1B,SACArqE,EAAMQ,iBAAiBv1B,KAAKu/F,yBAC5B,oBACAxqE,EAAM6qB,kBAAkB5/C,KAAKw/F,oCAC7B,SACAzqE,EAAM6qB,kBAAkB5/C,KAAKy/F,yBAC7B,OACA1qE,EAAM6qB,kBAAkB5/C,KAAK0/F,uBAC7B,iBACA3qE,EAAM6qB,kBAAkB5/C,KAAK2/F,yBAC7B,uBACA5qE,EAAMI,eAAen1B,KAAK4/F,+BAC1B,MACA7qE,EAAMQ,iBAAiBv1B,KAAK6/F,sBAC5B,WACA9qE,EAAMQ,iBAAiBv1B,KAAKggG,2BAC5B,SACAjrE,EAAMQ,iBAAiBv1B,KAAKmgG,8BAC5B,QACAprE,EAAM6qB,kBAAkB5/C,KAAKogG,wBAC7B,OACArrE,EAAM6qB,kBAAkB5/C,KAAKqgG,uBAC7B,OACAtrE,EAAM2B,oBACN,YACA3B,EAAMI,eAAe,SACrB,aACAJ,EAAMM,iBACN,OACA,QACA,OACAN,EAAMM,iBACN,aACAN,EAAMI,eAAen1B,KAAKsgG,yBAG5BtgG,KAAKwgG,6BACH,YACAzrE,EAAMoB,oBACN,YACApB,EAAMoB,oBACN,WACApB,EAAMoB,qBAGRn2B,KAAKygG,yBACH,WACA1rE,EAAMI,eAAen1B,KAAKk/F,2BAC1B,qBACAnqE,EAAMI,eAAen1B,KAAKo/F,oCAC1B,SACArqE,EAAMQ,iBAAiBv1B,KAAKu/F,yBAC5B,oBACAxqE,EAAM6qB,kBAAkB5/C,KAAKw/F,oCAC7B,SACAzqE,EAAM6qB,kBAAkB5/C,KAAKy/F,yBAC7B,OACA1qE,EAAM6qB,kBAAkB5/C,KAAK0/F,uBAC7B,iBACA3qE,EAAM6qB,kBAAkB5/C,KAAK2/F,yBAC7B,uBACA5qE,EAAMI,eAAen1B,KAAK4/F,+BAC1B,MACA7qE,EAAMQ,iBAAiBv1B,KAAK6/F,sBAC5B,WACA9qE,EAAMQ,iBAAiBv1B,KAAKggG,2BAC5B,SACAjrE,EAAMQ,iBAAiBv1B,KAAKmgG,8BAC5B,QACAprE,EAAM6qB,kBAAkB5/C,KAAKogG,wBAC7B,OACArrE,EAAM6qB,kBAAkB5/C,KAAKqgG,uBAC7B,OACAtrE,EAAM2B,oBACN,YACA3B,EAAMI,eAAe,SACrB,aACAJ,EAAMM,iBACN,aACAN,EAAMI,eAAen1B,KAAKwgG,6BAC1B,WACAzrE,EAAMoB,qBAGRn2B,KAAKg3B,OAASh3B,KAAK0gG,uBACjB,iBACA3rE,EAAMI,eAAen1B,KAAKugG,wBAC1B,aACAxrE,EAAMQ,iBAAiBv1B,KAAKygG,2BAKhCE,GAAI,WACF3gG,KAAK4gG,wBACH,SACC,KAAM,QAAS,GAChB,YACA,UACA,aACC,KAAM,UAAW,IAGpB5gG,KAAK6gG,2BACH,SACA9rE,EAAM6qB,kBAAkB5/C,KAAK4gG,wBAC7B,kBACA,WAGF5gG,KAAK8gG,+BACH,WACA,UACA,aACA,UACA,UACA,UACA,WACA,UACA,UACA,UACA,QACA,SAGF9gG,KAAK+gG,oCACH,eACAhsE,EAAMI,eAAen1B,KAAK8gG,gCAG5B9gG,KAAKghG,kCACH,aACA,UACA,UACA,UACA,OACA,UACA,iBACA,UACA,YACC,KAAM,UAAW,GAClB,YACA,UACA,UACA,WAGFhhG,KAAKihG,wBACH,WACA,UACA,SACA,UACA,QACA,UACA,SACA,UACA,QACA,UACA,UACAlsE,EAAMoB,oBACN,aACApB,EAAMI,eAAen1B,KAAKghG,kCAC1B,OACAjsE,EAAM2B,qBAGR12B,KAAKkhG,yBAA2B,SAAUnsE,EAAMI,eAAen1B,KAAKihG,yBAEpEjhG,KAAKmhG,oCACH,SACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,eACC,MAAO,KAAM,QAAS,GAAI,GAC3B,gBACC,MAAO,KAAM,QAAS,GAAI,IAG7BnhG,KAAKohG,yBACH,QACC,KAAM,QAAS,GAChB,aACC,KAAM,QAAS,GAChB,mBACC,KAAM,QAAS,GAChB,aACA,UACA,aACA,UACA,YACA,UACA,aACC,KAAM,QAAS,GAChB,cACA,UACA,aACA,UACA,aACA,UACA,mBACC,KAAM,UAAW,GAClB,4BACC,KAAM,UAAW,IAGpBphG,KAAKqhG,uBACH,aACC,KAAM,QAAS,GAChB,YACC,KAAM,QAAS,GAChB,aACC,KAAM,UAAW,GAClB,eACC,KAAM,QAAS,GAChB,eACC,KAAM,UAAW,GAClB,WACA,UACA,eACC,KAAM,UAAW,IAGpBrhG,KAAKshG,yBACH,WACA,UACA,SACC,KAAM,UAAW,GAClB,eACA,SACA,cACC,KAAM,UAAW,GAClB,QACA,UACA,YACA,UACA,kBACC,KAAM,UAAW,GAClB,SACA,SACA,OACA,UACA,kBACC,KAAM,UAAW,GAClB,QACA,SACA,YACC,KAAM,UAAW,GAClB,WACC,KAAM,UAAW,GAClB,gBACA,SACA,UACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,OACA,SACA,SACC,KAAM,UAAW,GAClB,aACC,KAAM,SAAU,GACjB,SACA,SACA,UACAvsE,EAAMoB,oBACN,OACA,QACA,OACApB,EAAM2B,qBAGR12B,KAAKuhG,+BACH,OACAxsE,EAAM2B,oBACN,KACC,KAAM,UAAW,GAClB,KACC,KAAM,UAAW,GAClB,KACC,KAAM,UAAW,IAGpB12B,KAAKwhG,sBACH,QACA,QACA,gBACA,UACA,gBACA,UACA,iBACA,UACA,iBACA,UACA,oBACA,UACA,iBACA,UACA,kBACA,UACA,kBACA,UACA,mBACA,UACA,mBACA,UACA,sBACA,UACA,mBACA,UACA,iBACA,WAGFxhG,KAAKyhG,oCACH,UACA,UACA,UACA,UACA,cACA,UACA,WACA,UACA,iBACA,UACA,UACA,UACA,SACC,KAAM,UAAW,GAClB,QACA,UACA,UACA1sE,EAAMoB,oBACN,aACC,KAAM,UAAW,GAClB,aACA,WAGFn2B,KAAK0hG,0BACH,MACA1hG,KAAKyhG,mCACL,QACAzhG,KAAKyhG,mCACL,QACA,SACA,OACA1sE,EAAM2B,qBAGR12B,KAAK2hG,2BAA6B,QAAS5sE,EAAMI,eAAen1B,KAAK0hG,2BAErE1hG,KAAK4hG,iCACH,cACC,KAAM,SAAU,GACjB,YACC,KAAM,SAAU,GACjB,cACC,KAAM,UAAW,GAClB,eACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,cACA,UACA,QACA,UACA,QACA,SACA,eACA7sE,EAAMM,iBACN,YACAN,EAAMoB,oBACN,gBACA,UAGFn2B,KAAK6hG,4BAA8B,SAAU9sE,EAAMI,eAAen1B,KAAK4hG,kCAEvE5hG,KAAK8hG,8BACH,cACA/sE,EAAMI,eAAen1B,KAAK6hG,4BAC1B,UACA9sE,EAAMI,eAAeJ,EAAMM,mBAG7Br1B,KAAK+hG,wBACH,aACA,SACA,gBACA,UACA,iBACA,UACA,YACC,KAAM,UAAW,GAClB,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,YACA,UACA,YACA,UACA,eACA,UACA,cACA,UACA,eACA,UACA,cACA,UACA,uBACC,KAAM,QAAS,GAChB,oBACC,KAAM,QAAS,GAChB,gBACC,KAAM,QAAS,GAChB,iBACA,UACA,gBACA,UACA,mBACA,UACA,mBACAhtE,EAAMoB,oBACN,mBACApB,EAAMI,eAAeJ,EAAMoB,qBAC3B,iBACApB,EAAMI,eAAe,UACrB,iBACAJ,EAAMI,gBAAgB,KAAM,UAAW,IACvC,YACA,UACA,eACA,UACA,uBACA,UACA,cACC,KAAM,QAAS,GAChB,cACC,KAAM,QAAS,IAGlBn1B,KAAKgiG,uBACH,UACA,QACA,YACA,QACA,QACA,QACA,QACA,QACA,OACA,QACA,WACA,QACA,YACA,SAGFhiG,KAAKiiG,wBACH,UACC,KAAM,UAAW,GAClB,SACA,UACA,iBACA,UACA,iBACA,UACA,eACA,UACA,cACAltE,EAAMI,gBAAgB,KAAM,UAAW,IACvC,YACA,SAGFn1B,KAAKkiG,wBACH,WACAntE,EAAMI,eAAen1B,KAAK6gG,2BAC1B,qBACA9rE,EAAMI,eAAen1B,KAAK+gG,oCAC1B,SACAhsE,EAAMQ,iBAAiBv1B,KAAKkhG,yBAC5B,oBACAnsE,EAAM6qB,kBAAkB5/C,KAAKmhG,oCAC7B,SACApsE,EAAM6qB,kBAAkB5/C,KAAKohG,yBAC7B,OACArsE,EAAM6qB,kBAAkB5/C,KAAKqhG,uBAC7B,iBACAtsE,EAAM6qB,kBAAkB5/C,KAAKshG,yBAC7B,uBACAvsE,EAAMI,eAAen1B,KAAKuhG,+BAC1B,MACAxsE,EAAMQ,iBAAiBv1B,KAAKwhG,sBAC5B,WACAzsE,EAAMQ,iBAAiBv1B,KAAK2hG,2BAC5B,SACA5sE,EAAMQ,iBAAiBv1B,KAAK8hG,8BAC5B,QACA/sE,EAAM6qB,kBAAkB5/C,KAAK+hG,wBAC7B,OACAhtE,EAAM6qB,kBAAkB5/C,KAAKgiG,uBAC7B,OACAjtE,EAAM2B,oBACN,YACA3B,EAAMI,eAAe,SACrB,aACAJ,EAAMM,iBACN,OACA,QACA,OACAN,EAAMM,iBACN,aACAN,EAAMI,eAAen1B,KAAKiiG,yBAG5BjiG,KAAKmiG,6BACH,YACAptE,EAAMoB,oBACN,YACApB,EAAMoB,oBACN,WACApB,EAAMoB,qBAGRn2B,KAAKoiG,yBACH,WACArtE,EAAMI,eAAen1B,KAAK6gG,2BAC1B,qBACA9rE,EAAMI,eAAen1B,KAAK+gG,oCAC1B,SACAhsE,EAAMQ,iBAAiBv1B,KAAKkhG,yBAC5B,oBACAnsE,EAAM6qB,kBAAkB5/C,KAAKmhG,oCAC7B,SACApsE,EAAM6qB,kBAAkB5/C,KAAKohG,yBAC7B,OACArsE,EAAM6qB,kBAAkB5/C,KAAKqhG,uBAC7B,iBACAtsE,EAAM6qB,kBAAkB5/C,KAAKshG,yBAC7B,uBACAvsE,EAAMI,eAAen1B,KAAKuhG,+BAC1B,MACAxsE,EAAMQ,iBAAiBv1B,KAAKwhG,sBAC5B,WACAzsE,EAAMQ,iBAAiBv1B,KAAK2hG,2BAC5B,SACA5sE,EAAMQ,iBAAiBv1B,KAAK8hG,8BAC5B,QACA/sE,EAAM6qB,kBAAkB5/C,KAAK+hG,wBAC7B,OACAhtE,EAAM6qB,kBAAkB5/C,KAAKgiG,uBAC7B,OACAjtE,EAAM2B,oBACN,YACA3B,EAAMI,eAAe,SACrB,aACAJ,EAAMM,iBACN,aACAN,EAAMI,eAAen1B,KAAKmiG,6BAC1B,WACAptE,EAAMoB,qBAGRn2B,KAAKg3B,OAASh3B,KAAKqiG,uBACjB,iBACAttE,EAAMI,eAAen1B,KAAKkiG,wBAC1B,aACAntE,EAAMQ,iBAAiBv1B,KAAKoiG,2BAKhCE,GAAI,WACFtiG,KAAKuiG,wBACH,SACC,KAAM,QAAS,GAChB,YACA,UACA,aACC,KAAM,UAAW,IAGpBviG,KAAKwiG,2BACH,SACAztE,EAAM6qB,kBAAkB5/C,KAAKuiG,wBAC7B,kBACA,WAGFviG,KAAKyiG,+BACH,WACA,UACA,aACA,UACA,UACA,UACA,WACA,UACA,UACA,UACA,QACA,SAGFziG,KAAK0iG,oCACH,eACA3tE,EAAMI,eAAen1B,KAAKyiG,gCAG5BziG,KAAK2iG,kCACH,aACA,UACA,UACA,UACA,OACA,UACA,iBACA,UACA,YACC,KAAM,UAAW,GAClB,YACA,UACA,UACA,WAGF3iG,KAAK4iG,wBACH,WACA,UACA,SACA,UACA,QACA,UACA,SACA,UACA,QACA,UACA,UACA7tE,EAAMoB,oBACN,aACApB,EAAMI,eAAen1B,KAAK2iG,kCAC1B,OACA5tE,EAAM2B,qBAGR12B,KAAK6iG,yBAA2B,SAAU9tE,EAAMI,eAAen1B,KAAK4iG,yBAEpE5iG,KAAK8iG,oCACH,SACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,eACC,MAAO,KAAM,QAAS,GAAI,GAC3B,gBACC,MAAO,KAAM,QAAS,GAAI,IAG7B9iG,KAAK+iG,yBACH,QACC,KAAM,QAAS,GAChB,aACC,KAAM,QAAS,GAChB,mBACC,KAAM,QAAS,GAChB,aACA,UACA,aACA,UACA,YACA,UACA,aACC,KAAM,QAAS,GAChB,cACA,UACA,aACA,UACA,aACA,UACA,mBACC,KAAM,UAAW,GAClB,4BACC,KAAM,UAAW,IAGpB/iG,KAAKgjG,uBACH,aACC,KAAM,QAAS,GAChB,YACC,KAAM,QAAS,GAChB,aACC,KAAM,UAAW,GAClB,eACC,KAAM,QAAS,GAChB,eACC,KAAM,UAAW,GAClB,WACA,UACA,eACC,KAAM,UAAW,IAGpBhjG,KAAKijG,yBACH,WACA,UACA,SACC,KAAM,UAAW,GAClB,eACA,SACA,cACC,KAAM,UAAW,GAClB,QACA,UACA,YACA,UACA,kBACC,KAAM,UAAW,GAClB,SACA,SACA,OACA,UACA,kBACC,KAAM,UAAW,GAClB,QACA,SACA,YACC,KAAM,UAAW,GAClB,WACC,KAAM,UAAW,GAClB,gBACA,SACA,UACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,OACA,SACA,SACC,KAAM,UAAW,GAClB,aACC,KAAM,SAAU,GACjB,SACA,SACA,UACAluE,EAAMoB,oBACN,OACA,QACA,OACApB,EAAM2B,qBAGR12B,KAAKkjG,+BACH,OACAnuE,EAAM2B,oBACN,KACC,KAAM,UAAW,GAClB,KACC,KAAM,UAAW,GAClB,KACC,KAAM,UAAW,IAGpB12B,KAAKmjG,sBACH,QACA,QACA,gBACA,UACA,gBACA,UACA,iBACA,UACA,iBACA,UACA,oBACA,UACA,iBACA,UACA,kBACA,UACA,kBACA,UACA,mBACA,UACA,mBACA,UACA,sBACA,UACA,mBACA,UACA,iBACA,WAGFnjG,KAAKojG,oCACH,UACA,UACA,UACA,UACA,cACA,UACA,WACA,UACA,iBACA,UACA,UACA,UACA,SACC,KAAM,UAAW,GAClB,QACA,UACA,UACAruE,EAAMoB,oBACN,aACC,KAAM,UAAW,GAClB,aACA,WAGFn2B,KAAKqjG,0BACH,MACArjG,KAAKojG,mCACL,QACApjG,KAAKojG,mCACL,QACA,SACA,OACAruE,EAAM2B,qBAGR12B,KAAKsjG,2BAA6B,QAASvuE,EAAMI,eAAen1B,KAAKqjG,2BAErErjG,KAAKujG,iCACH,cACC,KAAM,SAAU,GACjB,YACC,KAAM,SAAU,GACjB,cACC,KAAM,UAAW,GAClB,eACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,cACA,UACA,QACA,UACA,QACA,SACA,YACAxuE,EAAMoB,oBACN,gBACA,UAGFn2B,KAAKwjG,4BAA8B,SAAUzuE,EAAMI,eAAen1B,KAAKujG,kCAEvEvjG,KAAKyjG,8BACH,cACA1uE,EAAMI,eAAen1B,KAAKwjG,4BAC1B,UACAzuE,EAAMI,eAAeJ,EAAMM,mBAG7Br1B,KAAK0jG,wBACH,aACA,SACA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SAGFpkG,KAAKqkG,oCACH,eACAtvE,EAAMI,eAAen1B,KAAKokG,gCAG5BpkG,KAAKskG,kCACH,aACA,UACA,UACA,UACA,OACA,UACA,iBACA,UACA,YACC,KAAM,UAAW,GAClB,YACA,UACA,UACA,WAGFtkG,KAAKukG,wBACH,WACA,UACA,SACA,UACA,QACA,UACA,SACA,UACA,QACA,UACA,UACAxvE,EAAMoB,oBACN,aACApB,EAAMI,eAAen1B,KAAKskG,kCAC1B,OACAvvE,EAAM2B,qBAGR12B,KAAKwkG,yBAA2B,SAAUzvE,EAAMI,eAAen1B,KAAKukG,yBAEpEvkG,KAAKykG,oCACH,SACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,eACC,MAAO,KAAM,QAAS,GAAI,GAC3B,gBACC,MAAO,KAAM,QAAS,GAAI,IAG7BzkG,KAAK0kG,yBACH,QACC,KAAM,QAAS,GAChB,aACC,KAAM,QAAS,GAChB,mBACC,KAAM,QAAS,GAChB,aACA,UACA,aACA,UACA,YACA,UACA,aACC,KAAM,QAAS,GAChB,cACA,UACA,aACA,UACA,aACA,UACA,mBACC,KAAM,UAAW,GAClB,4BACC,KAAM,UAAW,IAGpB1kG,KAAK2kG,uBACH,aACC,KAAM,QAAS,GAChB,YACC,KAAM,QAAS,GAChB,aACC,KAAM,UAAW,GAClB,eACC,KAAM,QAAS,GAChB,eACC,KAAM,UAAW,GAClB,WACA,UACA,eACC,KAAM,UAAW,IAGpB3kG,KAAK4kG,yBACH,WACA,UACA,SACC,KAAM,UAAW,GAClB,eACA,SACA,cACC,KAAM,UAAW,GAClB,QACA,UACA,YACA,UACA,kBACC,KAAM,UAAW,GAClB,SACA,SACA,OACA,UACA,kBACC,KAAM,UAAW,GAClB,QACA,SACA,YACC,KAAM,UAAW,GAClB,WACC,KAAM,UAAW,GAClB,gBACA,SACA,UACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,OACA,SACA,SACC,KAAM,UAAW,GAClB,aACC,KAAM,SAAU,GACjB,SACA,SACA,UACA7vE,EAAMoB,oBACN,OACA,QACA,OACApB,EAAM2B,qBAGR12B,KAAK6kG,+BACH,OACA9vE,EAAM2B,oBACN,KACC,KAAM,UAAW,GAClB,KACC,KAAM,UAAW,GAClB,KACC,KAAM,UAAW,IAGpB12B,KAAK8kG,sBACH,QACA,QACA,gBACA,UACA,gBACA,UACA,iBACA,UACA,iBACA,UACA,oBACA,UACA,iBACA,UACA,kBACA,UACA,kBACA,UACA,mBACA,UACA,mBACA,UACA,sBACA,UACA,mBACA,UACA,iBACA,WAGF9kG,KAAK+kG,oCACH,UACA,UACA,UACA,UACA,cACA,UACA,WACA,UACA,iBACA,UACA,UACA,UACA,SACC,KAAM,UAAW,GAClB,QACA,UACA,UACAhwE,EAAMoB,oBACN,aACC,KAAM,UAAW,GAClB,aACA,WAGFn2B,KAAKglG,0BACH,MACAhlG,KAAK+kG,mCACL,QACA/kG,KAAK+kG,mCACL,QACA,SACA,OACAhwE,EAAM2B,qBAGR12B,KAAKilG,2BAA6B,QAASlwE,EAAMI,eAAen1B,KAAKglG,2BAErEhlG,KAAKklG,iCACH,cACC,KAAM,SAAU,GACjB,YACC,KAAM,SAAU,GACjB,cACC,KAAM,UAAW,GAClB,eACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,cACA,UACA,QACA,UACA,QACA,SACA,YACAnwE,EAAMoB,oBACN,gBACA,UAGFn2B,KAAKmlG,4BAA8B,SAAUpwE,EAAMI,eAAen1B,KAAKklG,kCAEvEllG,KAAKolG,8BACH,cACArwE,EAAMI,eAAen1B,KAAKmlG,4BAC1B,UACApwE,EAAMI,eAAeJ,EAAMM,mBAG7Br1B,KAAKqlG,wBACH,aACA,SACA,gBACA,UACA,iBACA,UACA,YACC,KAAM,UAAW,GAClB,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,YACA,UACA,YACA,UACA,eACA,UACA,cACA,UACA,eACA,UACA,c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AlxE,EAAMoB,oBACN,aACApB,EAAMI,eAAen1B,KAAKgmG,kCAC1B,OACAjxE,EAAM2B,qBAGR12B,KAAKkmG,yBAA2B,SAAUnxE,EAAMI,eAAen1B,KAAKimG,yBAEpEjmG,KAAKmmG,oCACH,SACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,eACC,MAAO,KAAM,QAAS,GAAI,GAC3B,gBACC,MAAO,KAAM,QAAS,GAAI,IAG7BnmG,KAAKomG,yBACH,QACC,KAAM,QAAS,GAChB,aACC,KAAM,QAAS,GAChB,mBACC,KAAM,QAAS,GAChB,aACA,UACA,aACA,UACA,YACA,UACA,aACC,KAAM,QAAS,GAChB,cACA,UACA,aACA,UACA,aACA,UACA,mBACC,KAAM,UAAW,GAClB,4BACC,KAAM,UAAW,IAGpBpmG,KAAKqmG,uBACH,aACC,KAAM,QAAS,GAChB,YACC,KAAM,QAAS,GAChB,aACC,KAAM,UAAW,GAClB,eACC,KAAM,QAAS,GAChB,eACC,KAAM,UAAW,GAClB,WACA,UACA,eACC,KAAM,UAAW,IAGpBrmG,KAAKsmG,yBACH,WACA,UACA,SACC,KAAM,UAAW,GAClB,eACA,SACA,cACC,KAAM,UAAW,GAClB,QACA,UACA,YACA,UACA,kBACC,KAAM,UAAW,GAClB,SACA,SACA,OACA,UACA,kBACC,KAAM,UAAW,GAClB,QACA,SACA,YACC,KAAM,UAAW,GAClB,WACC,KAAM,UAAW,GAClB,gBACA,SACA,UACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,OACA,SACA,SACC,KAAM,UAAW,GAClB,aACC,KAAM,SAAU,GACjB,SACA,SACA,UACAvxE,EAAMoB,oBACN,OACA,QACA,OACApB,EAAM2B,qBAGR12B,KAAKumG,+BACH,OACAxxE,EAAM2B,oBACN,KACC,KAAM,UAAW,GAClB,KACC,KAAM,UAAW,GAClB,KACC,KAAM,UAAW,IAGpB12B,KAAKwmG,sBACH,QACA,QACA,gBACA,UACA,gBACA,UACA,iBACA,UACA,iBACA,UACA,oBACA,UACA,iBACA,UACA,kBACA,UACA,kBACA,UACA,mBACA,UACA,mBACA,UACA,sBACA,UACA,mBACA,UACA,iBACA,WAGFxmG,KAAKymG,oCACH,UACA,UACA,UACA,UACA,cACA,UACA,WACA,UACA,iBACA,UACA,UACA,UACA,SACC,KAAM,UAAW,GAClB,QACA,UACA,UACA1xE,EAAMoB,oBACN,aACC,KAAM,UAAW,GAClB,aACA,WAGFn2B,KAAK0mG,0BACH,MACA1mG,KAAKymG,mCACL,QACAzmG,KAAKymG,mCACL,QACA,SACA,OACA1xE,EAAM2B,qBAGR12B,KAAK2mG,2BAA6B,QAAS5xE,EAAMI,eAAen1B,KAAK0mG,2BAErE1mG,KAAK4mG,iCACH,cACC,KAAM,SAAU,GACjB,YACC,KAAM,SAAU,GACjB,cACC,KAAM,UAAW,GAClB,eACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,cACA,UACA,QACA,UACA,QACA,SACA,YACA7xE,EAAMoB,oBACN,gBACA,UAGFn2B,KAAK6mG,4BAA8B,SAAU9xE,EAAMI,eAAen1B,KAAK4mG,kCAEvE5mG,KAAK8mG,8BACH,cACA/xE,EAAMI,eAAen1B,KAAK6mG,4BAC1B,UACA9xE,EAAMI,eAAeJ,EAAMM,mBAG7Br1B,KAAK+mG,wBACH,aACA,SACA,gBACA,UACA,iBACA,UACA,YACC,KAAM,UAAW,GAClB,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,YACA,UACA,YACA,UACA,eACA,UACA,cACA,UACA,eACA,UACA,cACA,UACA,uBACC,KAAM,QAAS,GAChB,oBACC,KAAM,QAAS,GAChB,gBACC,KAAM,QAAS,GAChB,iBACA,UACA,gBACA,UACA,mBACA,UACA,mBACAhyE,EAAMoB,oBACN,mBACApB,EAAMI,eAAeJ,EAAMoB,qBAC3B,iBACApB,EAAMI,eAAe,UACrB,iBACAJ,EAAMI,gBAAgB,KAAM,UAAW,IACvC,YAC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AO,KAAM,QAAS,GAAI,IAG7B7nG,KAAK8nG,yBACH,QACC,KAAM,QAAS,GAChB,aACC,KAAM,QAAS,GAChB,mBACC,KAAM,QAAS,GAChB,aACA,UACA,aACA,UACA,YACA,UACA,aACC,KAAM,QAAS,GAChB,cACA,UACA,aACA,UACA,aACA,UACA,mBACC,KAAM,UAAW,GAClB,4BACC,KAAM,UAAW,IAGpB9nG,KAAK+nG,uBACH,aACC,KAAM,QAAS,GAChB,YACC,KAAM,QAAS,GAChB,aACC,KAAM,UAAW,GAClB,eACC,KAAM,QAAS,GAChB,eACC,KAAM,UAAW,GAClB,WACA,UACA,eACC,KAAM,UAAW,IAGpB/nG,KAAKgoG,yBACH,WACA,UACA,SACC,KAAM,UAAW,GAClB,eACA,SACA,cACC,KAAM,UAAW,GAClB,QACA,UACA,YACA,UACA,kBACC,KAAM,UAAW,GAClB,SACA,SACA,OACA,UACA,kBACC,KAAM,UAAW,GAClB,QACA,SACA,YACC,KAAM,UAAW,GAClB,WACC,KAAM,UAAW,GAClB,gBACA,SACA,UACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,OACA,SACA,SACC,KAAM,UAAW,GAClB,aACC,KAAM,SAAU,GACjB,SACA,SACA,UACAjzE,EAAMoB,oBACN,OACA,QACA,OACApB,EAAM2B,qBAGR12B,KAAKioG,+BACH,OACAlzE,EAAM2B,oBACN,KACC,KAAM,UAAW,GAClB,KACC,KAAM,UAAW,GAClB,KACC,KAAM,UAAW,IAGpB12B,KAAKkoG,sBACH,QACA,QACA,gBACA,UACA,gBACA,UACA,iBACA,UACA,iBACA,UACA,oBACA,UACA,iBACA,UACA,kBACA,UACA,kBACA,UACA,mBACA,UACA,mBACA,UACA,sBACA,UACA,mBACA,WAGFloG,KAAKmoG,oCACH,UACA,UACA,UACA,UACA,cACA,UACA,WACA,UACA,iBACA,UACA,UACA,UACA,SACC,KAAM,UAAW,GAClB,QACA,UACA,UACApzE,EAAMoB,oBACN,aACC,KAAM,UAAW,GAClB,aACA,WAGFn2B,KAAKooG,0BACH,MACApoG,KAAKmoG,mCACL,QACAnoG,KAAKmoG,mCACL,QACA,SACA,OACApzE,EAAM2B,qBAGR12B,KAAKqoG,2BAA6B,QAAStzE,EAAMI,eAAen1B,KAAKooG,2BAErEpoG,KAAKsoG,iCACH,cACC,KAAM,SAAU,GACjB,YACC,KAAM,SAAU,GACjB,cACC,KAAM,UAAW,GAClB,eACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,cACA,UACA,QACA,UACA,QACA,SACA,YACAvzE,EAAMoB,oBACN,gBACA,UAGFn2B,KAAKuoG,4BAA8B,SAAUxzE,EAAMI,eAAen1B,KAAKsoG,kCAEvEtoG,KAAKwoG,8BACH,cACAzzE,EAAMI,eAAen1B,KAAKuoG,4BAC1B,UACAxzE,EAAMI,eAAeJ,EAAMM,mBAG7Br1B,KAAKyoG,wBACH,aACA,SACA,gBACA,UACA,iBACA,UACA,YACC,KAAM,UAAW,GAClB,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,YACA,UACA,YACA,UACA,eACA,UACA,cACA,UACA,eACA,UACA,cACA,UACA,uBACC,KAAM,QAAS,GAChB,oBACC,KAAM,QAAS,GAChB,gBACC,KAAM,QAAS,GAChB,iBACA,UACA,gBACA,UACA,mBACA,UACA,mBACA1zE,EAAMoB,oBACN,mBACApB,EAAMI,eAAeJ,EAAMoB,qBAC3B,iBACApB,EAAMI,eAAe,UACrB,iBACAJ,EAAMI,gBAAgB,KAAM,UAAW,IACvC,YACA,UACA,eACA,UACA,uBACA,UACA,cACC,KAAM,QAAS,GAChB,cACC,KAAM,QAAS,IAGlBn1B,KAAK0oG,uBACH,UACA,QACA,YACA,QACA,QACA,QACA,QACA,QACA,OACA,QACA,WACA,SAGF1oG,KAAK2oG,wBACH,WACA5zE,EAAMI,eAAen1B,KAAKunG,2BAC1B,qBACAxyE,EAAMI,eAAen1B,KAAKynG,oCAC1B,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CC,KAAM,QAAS,GAChB,YACC,KAAM,QAAS,GAChB,aACC,KAAM,UAAW,GAClB,eACC,KAAM,QAAS,GAChB,eACC,KAAM,UAAW,GAClB,WACA,UACA,eACC,KAAM,UAAW,IAGpBzpG,KAAK0pG,yBACH,WACA,UACA,SACC,KAAM,UAAW,GAClB,eACA,SACA,cACC,KAAM,UAAW,GAClB,QACA,UACA,YACA,UACA,kBACC,KAAM,UAAW,GAClB,SACA,SACA,OACA,UACA,kBACC,KAAM,UAAW,GAClB,QACA,SACA,YACC,KAAM,UAAW,GAClB,WACC,KAAM,UAAW,GAClB,gBACA,SACA,UACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,OACA,SACA,SACC,KAAM,UAAW,GAClB,aACC,KAAM,SAAU,GACjB,SACA,SACA,UACA30E,EAAMoB,oBACN,OACA,QACA,OACApB,EAAM2B,qBAGR12B,KAAK2pG,+BACH,OACA50E,EAAM2B,oBACN,KACC,KAAM,UAAW,GAClB,KACC,KAAM,UAAW,GAClB,KACC,KAAM,UAAW,IAGpB12B,KAAK4pG,sBACH,QACA,QACA,gBACA,UACA,gBACA,UACA,iBACA,UACA,iBACA,UACA,oBACA,UACA,iBACA,UACA,kBACA,UACA,kBACA,UACA,mBACA,UACA,mBACA,UACA,sBACA,UACA,mBACA,WAGF5pG,KAAK6pG,oCACH,UACA,UACA,UACA,UACA,cACA,UACA,WACA,UACA,iBACA,UACA,UACA,UACA,SACC,KAAM,UAAW,GAClB,QACA,UACA,UACA90E,EAAMoB,oBACN,aACC,KAAM,UAAW,GAClB,aACA,WAGFn2B,KAAK8pG,0BACH,MACA9pG,KAAK6pG,mCACL,QACA7pG,KAAK6pG,mCACL,QACA,SACA,OACA90E,EAAM2B,qBAGR12B,KAAK+pG,2BAA6B,QAASh1E,EAAMI,eAAen1B,KAAK8pG,2BAErE9pG,KAAKgqG,iCACH,cACC,KAAM,SAAU,GACjB,YACC,KAAM,SAAU,GACjB,cACC,KAAM,UAAW,G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QAAS,GAChB,YACA,UACA,aACC,KAAM,UAAW,IAGpB1qG,KAAK2qG,2BAA6B,SAAU51E,EAAM6qB,kBAAkB5/C,KAAK0qG,yBAEzE1qG,KAAK4qG,+BACH,WACA,UACA,aACA,UACA,UACA,UACA,WACA,UACA,UACA,UACA,QACA,SAGF5qG,KAAK6qG,oCACH,eACA91E,EAAMI,eAAen1B,KAAK4qG,gCAG5B5qG,KAAK8qG,kCACH,aACA,UACA,UACA,UACA,OACA,UACA,iBACA,UACA,YACC,KAAM,UAAW,GAClB,YACA,UACA,UACA,WAGF9qG,KAAK+qG,wBACH,WACA,UACA,SACA,UACA,QACA,UACA,SACA,UACA,QACA,UACA,UACAh2E,EAAMoB,oBACN,aACApB,EAAMI,eAAen1B,KAAK8qG,kCAC1B,OACA/1E,EAAM2B,qBAGR12B,KAAKgrG,yBAA2B,SAAUj2E,EAAMI,eAAen1B,KAAK+qG,yBAEpE/qG,KAAKirG,oCACH,SACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,eACC,MAAO,KAAM,QAAS,GAAI,GAC3B,gBACC,MAAO,KAAM,QAAS,GAAI,IAG7BjrG,KAAKkrG,yBACH,QACC,KAAM,QAAS,GAChB,aACC,KAAM,QAAS,GAChB,mBACC,KAAM,QAAS,GAChB,aACA,UACA,aACA,UACA,YACA,UACA,aACC,KAAM,QAAS,GAChB,cACA,UACA,aACA,UACA,aACA,UACA,mBACC,KAAM,UAAW,GAClB,4BACC,KAAM,UAAW,IAGpBlrG,KAAKmrG,uBACH,aACC,KAAM,QAAS,GAChB,YACC,KAAM,QAAS,GAChB,aACC,KAAM,UAAW,GAClB,eACC,KAAM,QAAS,GAChB,eACC,KAAM,UAAW,GAClB,WACA,WAGFnrG,KAAKorG,yBACH,WACA,UACA,SACC,KAAM,UAAW,GAClB,eACA,SACA,cACC,KAAM,UAAW,GAClB,QACA,UACA,YACA,UACA,kBACC,KAAM,UAAW,GAClB,SACA,SACA,OACA,UACA,kBACC,KAAM,UAAW,GAClB,QACA,SACA,YACC,KAAM,UAAW,GAClB,WACC,KAAM,UAAW,GAClB,gBACA,SACA,UACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,OACA,SACA,SACC,KAAM,UAAW,GAClB,aACC,KAAM,SAAU,GACjB,SACA,SACA,UACAr2E,EAAMoB,oBACN,OACA,QACA,OACApB,EAAM2B,qBAGR12B,KAAKqrG,+BACH,OACAt2E,EAAM2B,oBACN,KACC,KAAM,UAAW,GAClB,KACC,KAAM,UAAW,GAClB,KACC,KAAM,UAAW,IAGpB12B,KAAKsrG,sBACH,QACA,QACA,gBACA,UACA,gBACA,UACA,iBACA,UACA,iBACA,UACA,oBACA,UACA,iBACA,UACA,kBACA,UACA,kBACA,UACA,mBACA,UACA,mBACA,UACA,sBACA,UACA,mBACA,WAGFtrG,KAAKurG,oCACH,UACA,UACA,UACA,UACA,cACA,UACA,WACA,UACA,iBACA,UACA,UACA,UACA,SACC,KAAM,UAAW,GAClB,QACA,UACA,UACAx2E,EAAMoB,oBACN,aACC,KAAM,UAAW,GAClB,aACA,WAGFn2B,KAAKwrG,0BACH,MACAxrG,KAAKurG,mCACL,QACAvrG,KAAKurG,mCACL,QACA,SACA,OACAx2E,EAAM2B,qBAGR12B,KAAKyrG,2BAA6B,QAAS12E,EAAMI,eAAen1B,KAAKwrG,2BAErExrG,KAAK0rG,iCACH,cACC,KAAM,SAAU,GACjB,YACC,KAAM,SAAU,GACjB,cACC,KAAM,UAAW,GAClB,eACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,cACA,UACA,QACA,UACA,QACA,SACA,YACA32E,EAAMoB,oBACN,gBACA,UAGFn2B,KAAK2rG,4BAA8B,SAAU52E,EAAMI,eAAen1B,KAAK0rG,kCAEvE1rG,KAAK4rG,8BACH,cACA72E,EAAMI,eAAen1B,KAAK2rG,4BAC1B,UACA52E,EAAMI,eAAeJ,EAAMM,mBAG7Br1B,KAAK6rG,wBACH,aACA,SACA,gBACA,UACA,iBACA,UACA,Y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BACH,WACA,UACA,SACA,UACA,QACA,UACA,SACA,UACA,QACA,UACA,UACA13E,EAAMoB,oBACN,aACApB,EAAMI,eAAen1B,KAAKwsG,kCAC1B,OACAz3E,EAAM2B,qBAGR12B,KAAK0sG,yBAA2B,SAAU33E,EAAMI,eAAen1B,KAAKysG,yBAEpEzsG,KAAK2sG,oCACH,SACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,eACC,MAAO,KAAM,QAAS,GAAI,GAC3B,gBACC,MAAO,KAAM,QAAS,GAAI,IAG7B3sG,KAAK4sG,yBACH,QACC,KAAM,QAAS,GAChB,aACC,KAAM,QAAS,GAChB,mBACC,KAAM,QAAS,GAChB,aACA,UACA,aACA,UACA,YACA,UACA,aACC,KAAM,QAAS,GAChB,cACA,UACA,aACA,UACA,aACA,UACA,mBACC,KAAM,UAAW,IAGpB5sG,KAAK6sG,uBACH,aACC,KAAM,QAAS,GAChB,YACC,KAAM,QAAS,GAChB,aACC,KAAM,UAAW,GAClB,eACC,KAAM,QAAS,GAChB,eACC,KAAM,UAAW,GAClB,WACA,WAGF7sG,KAAK8sG,yBACH,WACA,UACA,SACC,KAAM,UAAW,GAClB,eACA,SACA,cACC,KAAM,UAAW,GAClB,QACA,UACA,YACA,UACA,kBACC,KAAM,UAAW,GAClB,SACA,SACA,OACA,UACA,kBACC,KAAM,UAAW,GAClB,QACA,SACA,YACC,KAAM,UAAW,GAClB,WACC,KAAM,UAAW,GAClB,gBACA,SACA,UACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,OACA,SACA,SACC,KAAM,UAAW,GAClB,aACC,KAAM,SAAU,GACjB,SACA,SACA,UACA/3E,EAAMoB,oBACN,OACA,QACA,OACApB,EAAM2B,qBAGR12B,KAAK+sG,+BACH,OACAh4E,EAAM2B,oBACN,KACC,KAAM,UAAW,GAClB,KACC,KAAM,UAAW,GAClB,KACC,KAAM,UAAW,IAGpB12B,KAAKgtG,sBACH,QACA,QACA,gBACA,UACA,gBACA,UACA,iBACA,UACA,iBACA,UACA,oBACA,UACA,iBACA,UACA,kBACA,UACA,kBACA,UACA,mBACA,UACA,mBACA,UACA,sBACA,UACA,mBACA,WAGFhtG,KAAKitG,oCACH,UACA,UACA,UACA,UACA,cACA,UACA,WACA,UACA,iBACA,UACA,UACA,UACA,SACC,KAAM,UAAW,GAClB,QACA,UACA,UACAl4E,EAAMoB,oBACN,aACC,KAAM,UAAW,GAClB,aACA,WAGFn2B,KAAKktG,0BACH,MACAltG,KAAKitG,mCACL,QACAjtG,KAAKitG,mCACL,QACA,SACA,OACAl4E,EAAM2B,qBAGR12B,KAAKmtG,2BAA6B,QAASp4E,EAAMI,eAAen1B,KAAKktG,2BAErEltG,KAAKotG,iCACH,cACC,KAAM,SAAU,GACjB,YACC,KAAM,SAAU,GACjB,cACC,KAAM,UAAW,GAClB,eACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,cACA,UACA,QACA,UACA,QACA,SACA,YACAr4E,EAAMoB,oBACN,gBACA,UAGFn2B,KAAKqtG,4BAA8B,SAAUt4E,EAAMI,eAAen1B,KAAKotG,kCAEvEptG,KAAKstG,8BACH,cACAv4E,EAAMI,eAAen1B,KAAKqtG,4BAC1B,UACAt4E,EAAMI,eAAeJ,EAAMM,mBAG7Br1B,KAAKutG,wBACH,aACA,SACA,gBACA,UACA,iBACA,UACA,YACC,KAAM,UAAW,GAClB,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,YACA,UACA,YACA,UACA,eACA,UACA,cACA,UACA,eACA,UACA,cACA,UACA,uBACC,KAAM,QAAS,GAChB,oBACC,KAAM,QAAS,GAChB,gBACC,KAAM,QAAS,GAChB,iBACA,UACA,gBACA,UACA,mBACA,UACA,mBACAx4E,EAAMoB,oBACN,mBACApB,EAAMI,eAAeJ,EAAMoB,qBAC3B,iBACApB,EAAMI,eAAe,UACrB,iBACAJ,EAAMI,gBAAgB,KAAM,UAAW,KAGzC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ChB,mBACC,KAAM,QAAS,GAChB,aACA,UACA,aACA,UACA,YACA,UACA,aACC,KAAM,QAAS,GAChB,cACA,UACA,aACA,UACA,aACA,WAGFtuG,KAAKuuG,uBACH,aACC,KAAM,QAAS,GAChB,YACC,KAAM,QAAS,GAChB,aACC,KAAM,UAAW,GAClB,eACC,KAAM,QAAS,GAChB,eACC,KAAM,UAAW,GAClB,WACA,WAGFvuG,KAAKwuG,yBACH,WACA,UACA,SACC,KAAM,UAAW,GAClB,eACA,SACA,cACC,KAAM,UAAW,GAClB,QACA,UACA,YACA,UACA,kBACC,KAAM,UAAW,GAClB,SACA,SACA,OACA,UACA,kBACC,KAAM,UAAW,GAClB,QACA,SACA,YACC,KAAM,UAAW,GAClB,WACC,KAAM,UAAW,GAClB,gBACA,SACA,UACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,OACA,SACA,SACC,KAAM,UAAW,GAClB,aACC,KAAM,SAAU,GACjB,SACA,SACA,UACAz5E,EAAMoB,oBACN,OACA,QACA,OACApB,EAAM2B,qBAGR12B,KAAKyuG,+BACH,OACA15E,EAAM2B,oBACN,KACC,KAAM,UAAW,GAClB,KACC,KAAM,UAAW,GAClB,KACC,KAAM,UAAW,IAGpB12B,KAAK0uG,sBACH,QACA,QACA,gBACA,UACA,gBACA,UACA,iBACA,UACA,iBACA,UACA,oBACA,UACA,iBACA,UACA,kBACA,UACA,kBACA,UACA,mBACA,UACA,mBACA,UACA,sBACA,UACA,mBACA,WAGF1uG,KAAK2uG,oCACH,UACA,UACA,UACA,UACA,cACA,UACA,WACA,UACA,iBACA,UACA,UACA,UACA,SACC,KAAM,UAAW,GAClB,QACA,UACA,UACA55E,EAAMoB,oBACN,aACC,KAAM,UAAW,GAClB,aACA,WAGFn2B,KAAK4uG,0BACH,MACA5uG,KAAK2uG,mCACL,QACA3uG,KAAK2uG,mCACL,QACA,SACA,OACA55E,EAAM2B,qBAGR12B,KAAK6uG,2BAA6B,QAAS95E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AAMI,eAAen1B,KAAKmvG,wBAC1B,aACAp6E,EAAMQ,iBAAiBv1B,KAAKqvG,2BAKhCE,GAAI,WACFvvG,KAAKwvG,wBACH,SACC,KAAM,QAAS,GAChB,YACA,UACA,aACC,KAAM,UAAW,IAGpBxvG,KAAKyvG,2BAA6B,SAAU16E,EAAM6qB,kBAAkB5/C,KAAKwvG,yBAEzExvG,KAAK0vG,+BACH,WACA,UACA,aACA,UACA,UACA,UACA,WACA,UACA,UACA,UACA,QACA,SAGF1vG,KAAK2vG,oCACH,eACA56E,EAAMI,eAAen1B,KAAK0vG,gCAG5B1vG,KAAK4vG,kCACH,aACA,UACA,UACA,UACA,OACA,UACA,iBACA,UACA,YACC,KAAM,UAAW,GAClB,YACA,UACA,UACA,WAGF5vG,KAAK6vG,wBACH,WACA,UACA,SACA,UACA,QACA,UACA,SACA,UACA,QACA,UACA,UACA96E,EAAMoB,oBACN,aACApB,EAAMI,eAAen1B,KAAK4vG,kCAC1B,OACA76E,EAAM2B,qBAGR12B,KAAK8vG,yBAA2B,SAAU/6E,EAAMI,eAAen1B,KAAK6vG,yBAEpE7vG,KAAK+vG,oCACH,SACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,eACC,MAAO,KAAM,QAAS,GAAI,GAC3B,gBACC,MAAO,KAAM,QAAS,GAAI,IAG7B/vG,KAAKgwG,yBACH,QACC,KAAM,QAAS,GAChB,aACC,KAAM,QAAS,GAChB,mBACC,KAAM,QAAS,GAChB,aACA,UACA,aACA,UACA,YACA,UACA,aACC,KAAM,QAAS,GAChB,cACA,UACA,aACA,UACA,aACA,WAGFhwG,KAAKiwG,uBACH,aACC,KAAM,QAAS,GAChB,YACC,KAAM,QAAS,GAChB,aACC,KAAM,UAAW,GAClB,eACC,KAAM,QAAS,GAChB,eACC,KAAM,UAAW,GAClB,WACA,WAGFjwG,KAAKkwG,yBACH,WACA,UACA,SACC,KAAM,UAAW,GAClB,eACA,SACA,cACC,KAAM,UAAW,GAClB,QACA,UACA,YACA,UACA,kBACC,KAAM,UAAW,GAClB,SACA,SACA,OACA,UACA,kBACC,KAAM,UAAW,GAClB,QACA,SACA,YACC,KAAM,UAAW,GAClB,WACC,KAAM,UAAW,GAClB,gBACA,SACA,UACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,OACA,SACA,SACC,KAAM,UAAW,GAClB,aACC,KAAM,SAAU,GACjB,SACA,SACA,UACAn7E,EAAMoB,oBACN,OACA,QACA,OACApB,EAAM2B,qBAGR12B,KAAKmwG,+BACH,OACAp7E,EAAM2B,oBACN,KACC,KAAM,UAAW,GAClB,KACC,KAAM,UAAW,GAClB,KACC,KAAM,UAAW,IAGpB12B,KAAKowG,sBACH,QACA,QACA,gBACA,UACA,gBACA,UACA,iBACA,UACA,iBACA,UACA,oBACA,UACA,iBACA,UACA,kBACA,UACA,kBACA,UACA,mBACA,UACA,mBACA,UACA,sBACA,UACA,mBACA,WAGFpwG,KAAKqwG,oCACH,UACA,UACA,UACA,UACA,cACA,UACA,WACA,UACA,iBACA,UACA,UACA,UACA,SACC,KAAM,UAAW,GAClB,QACA,UACA,UACAt7E,EAAMoB,oBACN,aACC,KAAM,UAAW,GAClB,aACA,WAGFn2B,KAAKswG,0BACH,MACAtwG,KAAKqwG,mCACL,QACArwG,KAAKqwG,mCACL,QACA,SACA,OACAt7E,EAAM2B,qBAGR12B,KAAKuwG,2BAA6B,QAASx7E,EAAMI,eAAen1B,KAAKswG,2BAErEtwG,KAAKwwG,iCACH,cACC,KAAM,SAAU,GACjB,YACC,KAAM,SAAU,GACjB,cACC,KAAM,UAAW,GAClB,eACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,cACA,UACA,QACA,UACA,QACA,SACA,YACAz7E,EAAM2B,oBACN,gBACA,UAGF12B,KAAKywG,4BAA8B,SAAU17E,EAAMI,eAAen1B,KAAKwwG,kCAEvExwG,KAAK0wG,8BACH,cACA37E,EAAMI,eAAen1B,KAAKywG,4BAC1B,UACA17E,EAAMI,eAAeJ,EA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CA,UACA,YACC,KAAM,UAAW,GAClB,YACA,UACA,UACA,WAGFtxG,KAAKuxG,wBACH,WACA,UACA,SACA,UACA,QACA,UACA,SACA,UACA,QACA,UACA,UACAx8E,EAAMoB,oBACN,aACApB,EAAMI,eAAen1B,KAAKsxG,kCAC1B,OACAv8E,EAAM2B,qBAGR12B,KAAKwxG,yBAA2B,SAAUz8E,EAAMI,eAAen1B,KAAKuxG,yBAEpEvxG,KAAKyxG,oCACH,SACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,eACC,MAAO,KAAM,QAAS,GAAI,GAC3B,gBACC,MAAO,KAAM,QAAS,GAAI,IAG7BzxG,KAAK0xG,yBACH,QACC,KAAM,QAAS,GAChB,aACC,KAAM,QAAS,GAChB,mBACC,KAAM,QAAS,GAChB,aACA,UACA,aACA,UACA,YACA,UACA,aACC,KAAM,QAAS,GAChB,cACA,UACA,aACA,UACA,aACA,WAGF1xG,KAAK2xG,uBACH,aACC,KAAM,QAAS,GAChB,aACC,KAAM,UAAW,GAClB,eACC,KAAM,QAAS,GAChB,eACC,KAAM,UAAW,GAClB,WACA,WAGF3xG,KAAK4xG,yBACH,WACA,UACA,SACC,KAAM,UAAW,GAClB,eACA,SACA,cACC,KAAM,UAAW,GAClB,QACA,UACA,YACA,UACA,kBACC,KAAM,UAAW,GAClB,SACA,SACA,OACA,UACA,kBACC,KAAM,UAAW,GAClB,QACA,SACA,YACC,KAAM,UAAW,GAClB,WACC,KAAM,UAAW,GAClB,gBACA,SACA,UACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,OACA,SACA,SACC,KAAM,UAAW,GAClB,aACC,KAAM,SAAU,GACjB,SACA,SACA,UACA78E,EAAMoB,oBACN,OACA,QACA,OACApB,EAAM2B,qBAGR12B,KAAK6xG,+BACH,OACA98E,EAAM2B,oBACN,KACC,KAAM,UAAW,GAClB,KACC,KAAM,UAAW,GAClB,KACC,KAAM,UAAW,IAGpB12B,KAAK8xG,sBACH,QACA,QACA,gBACA,UACA,gBACA,UACA,iBACA,UACA,iBACA,UACA,oBACA,UACA,iBACA,UACA,kBACA,UACA,kBACA,UACA,mBACA,UACA,mBACA,UACA,sBACA,UACA,mBACA,WAGF9xG,KAAK+xG,oCACH,UACA,UACA,UACA,UACA,cACA,UACA,WACA,UACA,iBACA,UACA,UACA,UACA,SACC,KAAM,UAAW,GAClB,QACA,UACA,UACAh9E,EAAMoB,oBACN,aACC,KAAM,UAAW,GAClB,aACA,WAGFn2B,KAAKgyG,0BACH,MACAhyG,KAAK+xG,mCACL,QACA/xG,KAAK+xG,mCACL,QACA,SACA,OACAh9E,EAAM2B,qBAGR12B,KAAKiyG,2BAA6B,QAASl9E,EAAMI,eAAen1B,KAAKgyG,2BAErEhyG,KAAKkyG,iCACH,cACC,KAAM,SAAU,GACjB,YACC,KAAM,SAAU,GACjB,cACC,KAAM,UAAW,GAClB,eACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,cACA,UACA,QACA,UACA,QACA,SACA,YACAn9E,EAAM2B,oBACN,gBACA,UAGF12B,KAAKmyG,4BAA8B,SAAUp9E,EAAMI,eAAen1B,KAAKkyG,kCAEvElyG,KAAKoyG,8BACH,cACAr9E,EAAMI,eAAen1B,KAAKmyG,4BAC1B,eACAp9E,EAAMM,kBAGRr1B,KAAKqyG,wBACH,aACA,SACA,gBACA,UACA,iBACA,UACA,YACC,KAAM,UAAW,GAClB,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,YACA,UACA,YACA,UACA,eACA,UACA,cACA,UACA,eACA,UACA,cACA,UACA,uBACC,KAAM,QAAS,GAChB,oBACC,KAAM,QAAS,GAChB,gBACC,KAAM,QAAS,GAChB,iBACA,UACA,gBACA,UACA,mBACA,UACA,mBACAt9E,EAAMoB,oBACN,mBACApB,EAAMI,eAAeJ,EAAMoB,qBAC3B,iBACApB,EAAMI,eAAe,UACrB,iBACAJ,EAAMI,gBAAgB,KAAM,UAAW,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AS,GAChB,mBACC,KAAM,QAAS,GAChB,aACA,UACA,aACA,UACA,YACA,UACA,aACC,KAAM,QAAS,GAChB,cACA,UACA,aACA,UACA,aACA,WAGFpzG,KAAKqzG,uBACH,aACC,KAAM,QAAS,GAChB,aACC,KAAM,UAAW,GAClB,eACC,KAAM,QAAS,GAChB,eACC,KAAM,UAAW,GAClB,WACA,WAGFrzG,KAAKszG,yBACH,WACA,UACA,SACC,KAAM,UAAW,GAClB,eACA,SACA,cACC,KAAM,UAAW,GAClB,QACA,UACA,YACA,UACA,kBACC,KAAM,UAAW,GAClB,SACA,SACA,OACA,UACA,kBACC,KAAM,UAAW,GAClB,QACA,SACA,YACC,KAAM,UAAW,GAClB,WACC,KAAM,UAAW,GAClB,gBACA,SACA,UACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,OACA,SACA,SACC,KAAM,UAAW,GAClB,aACC,KAAM,SAAU,GACjB,SACA,SACA,UACAv+E,EAAMoB,oBACN,OACA,QACA,OACApB,EAAM2B,qBAGR12B,KAAKuzG,+BACH,OACAx+E,EAAM2B,oBACN,KACC,KAAM,UAAW,GAClB,KACC,KAAM,UAAW,GAClB,KACC,KAAM,UAAW,IAGpB12B,KAAKwzG,sBACH,QACA,QACA,gBACA,UACA,gBACA,UACA,iBACA,UACA,iBACA,UACA,oBACA,UACA,iBACA,UACA,kBACA,UACA,kBACA,UACA,mBACA,UACA,mBACA,UACA,sBACA,UACA,mBACA,WAGFxzG,KAAKyzG,oCACH,UACA,UACA,UACA,UACA,cACA,UACA,WACA,UACA,iBACA,UACA,UACA,UACA,SACC,KAAM,UAAW,GAClB,QACA,UACA,UACA1+E,EAAMoB,oBACN,aACC,KAAM,UAAW,GAClB,aACA,WAGFn2B,KAAK0zG,0BACH,MACA1zG,KAAKyzG,mCACL,QACAzzG,KAAKyzG,mCACL,QACA,SACA,OACA1+E,EAAM2B,qBAGR12B,KAAK2zG,2BAA6B,QAAS5+E,EAAMI,eAAen1B,K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B,KAAKm0G,2BAKhCE,GAAI,WACFr0G,KAAKs0G,wBACH,SACC,KAAM,QAAS,GAChB,YACA,UACA,aACC,KAAM,UAAW,IAGpBt0G,KAAKu0G,2BAA6B,SAAUx/E,EAAM6qB,kBAAkB5/C,KAAKs0G,yBAEzEt0G,KAAKw0G,+BACH,WACA,UACA,aACA,UACA,UACA,UACA,WACA,UACA,UACA,UACA,QACA,SAGFx0G,KAAKy0G,oCACH,eACA1/E,EAAMI,eAAen1B,KAAKw0G,gCAG5Bx0G,KAAK00G,kCACH,aACA,UACA,UACA,UACA,OACA,UACA,iBACA,UACA,YACC,KAAM,UAAW,GAClB,YACA,UACA,UACA,WAGF10G,KAAK20G,wBACH,WACA,UACA,SACA,UACA,QACA,UACA,SACA,UACA,QACA,UACA,UACA5/E,EAAMoB,oBACN,aACApB,EAAMI,eAAen1B,KAAK00G,kCAC1B,OACA3/E,EAAM2B,qBAGR12B,KAAK40G,yBAA2B,SAAU7/E,EAAMI,eAAen1B,KAAK20G,yBAEpE30G,KAAK60G,oCACH,SACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,eACC,MAAO,KAAM,QAAS,GAAI,GAC3B,gBACC,MAAO,KAAM,QAAS,GAAI,IAG7B70G,KAAK80G,yBACH,QACC,KAAM,QAAS,GAChB,aACC,KAAM,QAAS,GAChB,mBACC,KAAM,QAAS,GAChB,aACA,UACA,aACA,UACA,YACA,UACA,aACC,KAAM,QAAS,GAChB,cACA,UACA,aACA,UACA,aACA,WAGF90G,KAAK+0G,uBACH,aACC,KAAM,QAAS,GAChB,aACC,KAAM,UAAW,GAClB,eACC,KAAM,QAAS,GAChB,eACC,KAAM,UAAW,GAClB,WACA,WAGF/0G,KAAKg1G,yBACH,WACA,UACA,SACC,KAAM,UAAW,GAClB,eACA,SACA,cACC,KAAM,UAAW,GAClB,QACA,UACA,YACA,UACA,kBACC,KAAM,UAAW,GAClB,SACA,SACA,OACA,UACA,kBACC,KAAM,UAAW,GAClB,QACA,SACA,YACC,KAAM,UAAW,GAClB,WACC,KAAM,UAAW,GAClB,gBACA,SACA,UACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,OACA,SACA,SACC,KAAM,UAAW,GAClB,aACC,KAAM,SAAU,GACjB,SACA,SACA,UACAjgF,EAAMoB,oBACN,OACA,QACA,OACApB,EAAM2B,qBAGR12B,KAAKi1G,+BACH,OACAlgF,EAAM2B,oBACN,KACC,KAAM,UAAW,GAClB,KACC,KAAM,UAAW,GAClB,KACC,KAAM,UAAW,IAGpB12B,KAAKk1G,sBACH,QACA,QACA,gBACA,UACA,gBACA,UACA,iBACA,UACA,iBACA,UACA,oBACA,UACA,iBACA,UACA,kBACA,UACA,kBACA,UACA,mBACA,UACA,mBACA,UACA,sBACA,UACA,mBACA,WAGFl1G,KAAKm1G,oCACH,UACA,UACA,UACA,UACA,cACA,UACA,WACA,UACA,iBACA,UACA,UACA,UACA,SACC,KAAM,UAAW,GAClB,QACA,UACA,UACApgF,EAAMoB,oBACN,aACC,KAAM,UAAW,GAClB,aACA,WAGFn2B,KAAKo1G,0BACH,MACAp1G,KAAKm1G,mCACL,QACAn1G,KAAKm1G,mCACL,QACA,SACA,OACApgF,EAAM2B,qBAGR12B,KAAKq1G,2BAA6B,QAAStgF,EAAMI,eAAen1B,KAAKo1G,2BAErEp1G,KAAKs1G,iCACH,cACC,KAAM,SAAU,GACjB,YACC,KAAM,SAAU,GACjB,cACA,UACA,QACA,UACA,gBACA,SACA,QACA,SACA,YACAvgF,EAAM2B,qBAGR12B,KAAKu1G,4BAA8B,SAAUxgF,EAAMI,eAAen1B,KAAKs1G,kCAEvEt1G,KAAKw1G,8BACH,cACAzgF,EAAMI,eAAen1B,KAAKu1G,4BAC1B,eACAxgF,EAAMM,kBAGRr1B,KAAKy1G,wBACH,aACA,SACA,gBACA,UACA,iBACA,UACA,YACC,KAAM,UAAW,GAClB,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,YACA,UACA,YACA,UACA,eACA,UACA,cACA,UAC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BAGR12B,KAAKs2G,yBAA2B,SAAUvhF,EAAMI,eAAen1B,KAAKq2G,yBAEpEr2G,KAAKu2G,oCACH,SACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,eACC,MAAO,KAAM,QAAS,GAAI,GAC3B,gBACC,MAAO,KAAM,QAAS,GAAI,IAG7Bv2G,KAAKw2G,yBACH,QACC,KAAM,QAAS,GAChB,aACC,KAAM,QAAS,GAChB,mBACC,KAAM,QAAS,GAChB,aACA,UACA,aACA,UACA,YACA,UACA,aACC,KAAM,QAAS,GAChB,cACA,UACA,aACA,UACA,aACA,WAGFx2G,KAAKy2G,uBACH,aACC,KAAM,QAAS,GAChB,aACC,KAAM,UAAW,GAClB,eACC,KAAM,QAAS,GAChB,eACC,KAAM,UAAW,GAClB,WACA,WAGFz2G,KAAK02G,yBACH,WACA,UACA,SACC,KAAM,UAAW,GAClB,eACA,SACA,cACC,KAAM,UAAW,GAClB,QACA,UACA,YACA,UACA,kBACC,KAAM,UAAW,GAClB,SACA,SACA,OACA,UACA,kBACC,KAAM,UAAW,GAClB,QACA,SACA,YACC,KAAM,UAAW,GAClB,WACC,KAAM,UAAW,GAClB,gBACA,SACA,UACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,OACA,SACA,SACC,KAAM,UAAW,GAClB,aACC,KAAM,SAAU,GACjB,SACA,SACA,UACA3hF,EAAMoB,oBACN,OACA,QACA,OACApB,EAAM2B,qBAGR12B,KAAK22G,+BACH,OACA5hF,EAAM2B,oBACN,KACC,KAAM,UAAW,GAClB,KACC,KAAM,UAAW,GAClB,KACC,KAAM,UAAW,IAGpB12B,KAAK42G,sBACH,QACA,QACA,gBACA,UACA,gBACA,UACA,iBACA,UACA,iBACA,UACA,oBACA,UACA,iBACA,UACA,kBACA,UACA,kBACA,UACA,mBACA,UACA,mBACA,UACA,sBACA,UACA,mBACA,WAGF52G,KAAK62G,oCACH,UACA,UACA,UACA,UACA,cACA,UACA,WACA,UACA,iBACA,UACA,UACA,UACA,SACC,KAAM,UAAW,GAClB,QACA,UACA,UACA9hF,EAAMoB,oBACN,aACC,KAAM,UAAW,GAClB,aACA,WAGFn2B,KAAK82G,0BACH,MACA92G,KAAK62G,mCACL,QACA72G,KAAK62G,mCACL,QACA,SACA,OACA9hF,EAAM2B,qBAGR12B,KAAK+2G,2BAA6B,QAAShiF,EAAMI,eAAen1B,KAAK82G,2BAErE92G,KAAKg3G,wBACH,aACA,SACA,gBACA,UACA,iBACA,UACA,YACC,KAAM,UAAW,GAClB,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,YACA,UACA,YACA,UACA,eACA,UACA,cACA,UACA,eACA,UACA,cACA,UACA,uBACC,KAAM,QAAS,GAChB,oBACC,KAAM,QAAS,GAChB,gBACC,KAAM,QAAS,GAChB,iBACA,UACA,gBACA,UACA,mBACA,UACA,mBACAjiF,EAAMoB,oBACN,mBACApB,EAAMI,eAAeJ,EAAMoB,qBAC3B,iBACApB,EAAMI,eAAe,UACrB,iBACAJ,EAAMI,gBAAgB,KAAM,UAAW,KAGzCn1B,KAAKi3G,uBACH,UACA,QACA,YACA,QACA,QACA,QACA,QACA,QACA,OACA,QACA,WACA,SAGFj3G,KAAKk3G,wBACH,WACAniF,EAAMI,eAAen1B,KAAKi2G,2BAC1B,qBACAlhF,EAAMI,eAAen1B,KAAKm2G,oCAC1B,SACAphF,EAAMQ,iBAAiBv1B,KAAKs2G,yBAC5B,oBACAvhF,EAAM6qB,kBAAkB5/C,KAAKu2G,oCAC7B,SACAxhF,EAAM6qB,kBAAkB5/C,KAAKw2G,yBAC7B,OACAzhF,EAAM6qB,kBAAkB5/C,KAAKy2G,uBAC7B,iBACA1hF,EAAM6qB,kBAAkB5/C,KAAK02G,yBAC7B,uBACA3hF,EAAMI,eAAen1B,KAAK22G,+BAC1B,MACA5hF,EAAMQ,iBAAiBv1B,KAAK42G,sBAC5B,WACA7hF,EAAMQ,iBAAiBv1B,KAAK+2G,2BAC5B,QACAhiF,EAAM6qB,kBAAkB5/C,KAAKg3G,wBAC7B,OACAjiF,EAAM6qB,kBAAkB5/C,KAAKi3G,uBAC7B,OACAliF,EAAM2B,oBACN,YACA3B,EAAMI,eAAe,SACrB,aACAJ,EAAMM,iBACN,UACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,iBACA,UACA,iBACA,UACA,eACA,UACA,OACA,QACA,cACAN,EAAMI,gBAAgB,KAAM,UAAW,IACvC,OACAJ,EAAMM,kBAGRr1B,KAAKm3G,6BACH,YACApiF,EAAMoB,oBACN,YACApB,EAAMoB,oBACN,WACApB,EAAMoB,qBAGRn2B,KAAKo3G,yBACH,WACAriF,EAAMI,eAAen1B,KAAKi2G,2BAC1B,qBACAlhF,EAAMI,eAAen1B,KAAKm2G,oCAC1B,SACAphF,EAAMQ,iBAAiBv1B,KAAKs2G,yBAC5B,oBACAvhF,EAAM6qB,kBAAkB5/C,KAAKu2G,oCAC7B,SACAxhF,EAAM6qB,kBAAkB5/C,KAAKw2G,yBAC7B,OACAzhF,EAAM6qB,kBAAkB5/C,KAAKy2G,uBAC7B,iBACA1hF,EAAM6qB,kBAAkB5/C,KAAK02G,yBAC7B,uBACA3hF,EAAMI,eAAen1B,KAAK22G,+BAC1B,MACA5hF,EAAMQ,iBAAiBv1B,KAAK42G,sBAC5B,WACA7hF,EAAMQ,iBAAiBv1B,KAAK+2G,2BAC5B,QACAhiF,EAAM6qB,kBAAkB5/C,KAAKg3G,wBAC7B,OACAjiF,EAAM6qB,kBAAkB5/C,KAAKi3G,uBAC7B,OACAliF,EAAM2B,oBACN,YACA3B,EAAMI,eAAe,SACrB,aACAJ,EAAMM,iBACN,aACAN,EAAMI,eAAen1B,KAAKm3G,6BAC1B,WACApiF,EAAMoB,qBAGRn2B,KAAKg3B,OAASh3B,KAAKq3G,uBACjB,iBACAtiF,EAAMI,eAAen1B,KAAKk3G,wBAC1B,aACAniF,EAAMQ,iBAAiBv1B,KAAKo3G,2BAKhCE,GAAI,WACFt3G,KAAKu3G,wBACH,SACC,KAAM,QAAS,GAChB,YACA,UACA,aACC,KAAM,UAAW,IAGpBv3G,KAAKw3G,2BAA6B,SAAUziF,EAAM6qB,kBAAkB5/C,KAAKu3G,yBAEzEv3G,KAAKy3G,+BACH,WACA,UACA,aACA,UACA,UACA,UACA,WACA,UACA,UACA,UACA,QACA,SAGFz3G,KAAK03G,oCACH,eACA3iF,EAAMI,eAAen1B,KAAKy3G,gCAG5Bz3G,KAAK23G,kCACH,aACA,UACA,UACA,UACA,OACA,UACA,iBACA,UACA,YACC,KAAM,UAAW,GAClB,YACA,UACA,UACA,WAGF33G,KAAK43G,wBACH,WACA,UACA,SACA,UACA,QACA,UACA,SACA,UACA,QACA,UACA,UACA7iF,EAAMoB,oBACN,aACApB,EAAMI,eAAen1B,KAAK23G,kCAC1B,OACA5iF,EAAM2B,qBAGR12B,KAAK63G,yBAA2B,SAAU9iF,EAAMI,eAAen1B,KAAK43G,yBAEpE53G,KAAK83G,oCACH,SACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,eACC,MAAO,KAAM,QAAS,GAAI,GAC3B,gBACC,MAAO,KAAM,QAAS,GAAI,IAG7B93G,KAAK+3G,yBACH,QACC,KAAM,QAAS,GAChB,aACC,KAAM,QAAS,GAChB,mBACC,KAAM,QAAS,GAChB,aACA,UACA,aACA,UACA,YACA,UACA,aACC,KAAM,QAAS,GAChB,cACA,UACA,aACA,UACA,aACA,WAGF/3G,KAAKg4G,uBACH,aACC,KAAM,QAAS,GAChB,aACC,KAAM,UAAW,GAClB,eACC,KAAM,QAAS,GAChB,eACC,KAAM,UAAW,GAClB,WACA,WAGFh4G,KAAKi4G,yBACH,WACA,UACA,SACC,KAAM,UAAW,GAClB,eACA,SACA,cACC,KAAM,UAAW,GAClB,QACA,UACA,YACA,UACA,kBACC,KAAM,UAAW,GAClB,SACA,SACA,OACA,UACA,kBACC,KAAM,UAAW,GAClB,QACA,SACA,YACC,KAAM,UAAW,GAClB,WACC,KAAM,UAAW,GAClB,gBACA,SACA,UACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,OACA,SACA,SACC,KAAM,UAAW,GAClB,aACC,KAAM,SAAU,GACjB,SACA,SACA,UACAljF,EAAMoB,oBACN,OACA,QACA,OACApB,EAAM2B,qBAGR12B,KAAKk4G,+BACH,OACAnjF,EAAM2B,oBACN,KACC,KAAM,UAAW,GAClB,KACC,KAAM,UAAW,GAClB,KACC,KAAM,UAAW,IAGpB12B,KAAKm4G,sBACH,QACA,QACA,gBACA,UACA,gBACA,UACA,iBACA,UACA,iBACA,UACA,oBACA,UACA,iBACA,UACA,kBACA,UACA,kBACA,UACA,mBACA,UACA,mBACA,UACA,sBACA,UACA,mBACA,WAGFn4G,KAAKo4G,oCACH,UACA,UACA,UACA,UACA,cACA,UACA,WACA,UACA,iBACA,UACA,UACA,UACA,SACC,KAAM,UAAW,GAClB,QACA,UACA,UACArjF,EAAMoB,oBACN,aACC,KAAM,UAAW,GAClB,aACA,WAGFn2B,KAAKq4G,0BACH,MACAr4G,KAAKo4G,mCACL,QACAp4G,KAAKo4G,mCACL,QACA,SACA,OACArjF,EAAM2B,qBAGR12B,KAAKs4G,2BAA6B,QAASvjF,EAAMI,eAAen1B,KAAKq4G,2BAErEr4G,KAAKu4G,wBACH,aACA,SACA,gBACA,UACA,iBACA,UACA,YACC,KAAM,UAAW,GAClB,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,YACA,UACA,YACA,UACA,eACA,UACA,cACA,UACA,eACA,UACA,cACA,UACA,uBACC,KAAM,QAAS,GAChB,oBACC,KAAM,QAAS,GAChB,gBACC,KAAM,QAAS,GAChB,iBACA,UACA,gBACA,UACA,mBACA,UACA,mBACAxjF,EAAMoB,oBACN,mBACApB,EAAMI,eAAeJ,EAAMoB,qBAC3B,iBACApB,EAAMI,eAAe,UACrB,iBACAJ,EAAMI,gBAAgB,KAAM,UAAW,KAGzCn1B,KAAKw4G,uBACH,UACA,QACA,YACA,QACA,QACA,QACA,QACA,QACA,OACA,QACA,WACA,SAGFx4G,KAAKy4G,wBACH,WACA1jF,EAAMI,eAAen1B,KAAKw3G,2BAC1B,qBACAziF,EAAMI,eAAen1B,KAAK03G,oCAC1B,SACA3iF,EAAMQ,iBAAiBv1B,KAAK63G,yBAC5B,oBACA9iF,EAAM6qB,kBAAkB5/C,KAAK83G,oCAC7B,SACA/iF,EAAM6qB,kBAAkB5/C,KAAK+3G,yBAC7B,OACAhjF,EAAM6qB,kBAAkB5/C,KAAKg4G,uBAC7B,iBACAjjF,EAAM6qB,kBAAkB5/C,KAAKi4G,yBAC7B,uBACAljF,EAAMI,eAAen1B,KAAKk4G,+BAC1B,MACAnjF,EAAMQ,iBAAiBv1B,KAAKm4G,sBAC5B,WACApjF,EAAMQ,iBAAiBv1B,KAAKs4G,2BAC5B,QACAvjF,EAAM6qB,kBAAkB5/C,KAAKu4G,wBAC7B,OACAxjF,EAAM6qB,kBAAkB5/C,KAAKw4G,uBAC7B,OACAzjF,EAAM2B,oBACN,YACA3B,EAAMI,eAAe,SACrB,aACAJ,EAAMM,iBACN,UACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,iBACA,UACA,iBACA,UACA,eACA,UACA,OACA,QACA,cACAN,EAAMI,gBAAgB,KAAM,UAAW,IACvC,OACAJ,EAAMM,kBAGRr1B,KAAK04G,6BACH,YACA3jF,EAAMoB,oBACN,YACApB,EAAMoB,oBACN,WACApB,EAAMoB,qBAGRn2B,KAAK24G,yBACH,WACA5jF,EAAMI,eAAen1B,KAAKw3G,2BAC1B,qBACAziF,EAAMI,eAAen1B,KAAK03G,oCAC1B,SACA3iF,EAAMQ,iBAAiBv1B,KAAK63G,yBAC5B,oBACA9iF,EAAM6qB,kBAAkB5/C,KAAK83G,oCAC7B,SACA/iF,EAAM6qB,kBAAkB5/C,KAAK+3G,yBAC7B,OACAhjF,EAAM6qB,kBAAkB5/C,KAAKg4G,uBAC7B,iBACAjjF,EAAM6qB,kBAAkB5/C,KAAKi4G,yBAC7B,uBACAljF,EAAMI,eAAen1B,KAAKk4G,+BAC1B,MACAnjF,EAAMQ,iBAAiBv1B,KAAKm4G,sBAC5B,WACApjF,EAAMQ,iBAAiBv1B,KAAKs4G,2BAC5B,QACAvjF,EAAM6qB,kBAAkB5/C,KAAKu4G,wBAC7B,OACAxjF,EAAM6qB,kBAAkB5/C,KAAKw4G,uBAC7B,OACAzjF,EAAM2B,oBACN,YACA3B,EAAMI,eAAe,SACrB,aACAJ,EAAMM,iBACN,aACAN,EAAMI,eAAen1B,KAAK04G,6BAC1B,WACA3jF,EAAMoB,qBAGRn2B,KAAKg3B,OAASh3B,KAAK44G,uBACjB,iBACA7jF,EAAMI,eAAen1B,KAAKy4G,wBAC1B,aACA1jF,EAAMQ,iBAAiBv1B,KAAK24G,2BAKhCE,GAAI,WACF74G,KAAK84G,wBACH,SACC,KAAM,QAAS,GAChB,YACA,UACA,aACC,KAAM,UAAW,IAGpB94G,KAAK+4G,2BAA6B,SAAUhkF,EAAM6qB,kBAAkB5/C,KAAK84G,yBAEzE94G,KAAKg5G,+BACH,WACA,UACA,aACA,UACA,UACA,UACA,WACA,UACA,UACA,UACA,QACA,SAGFh5G,KAAKi5G,oCACH,eACAlkF,EAAMI,eAAen1B,KAAKg5G,gCAG5Bh5G,KAAKk5G,kCACH,aACA,UACA,UACA,UACA,OACA,UACA,iBACA,UACA,YACC,KAAM,UAAW,GAClB,YACA,UACA,UACA,WAGFl5G,KAAKm5G,wBACH,WACA,UACA,SACA,UACA,QACA,UACA,SACA,UACA,QACA,UACA,UACApkF,EAAMoB,oBACN,aACApB,EAAMI,eAAen1B,KAAKk5G,kCAC1B,OACAnkF,EAAM2B,qBAGR12B,KAAKo5G,yBAA2B,SAAUrkF,EAAMI,eAAen1B,KAAKm5G,yBAEpEn5G,KAAKq5G,oCACH,SACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,eACC,MAAO,KAAM,QAAS,GAAI,GAC3B,gBACC,MAAO,KAAM,QAAS,GAAI,IAG7Br5G,KAAKs5G,yBACH,QACC,KAAM,QAAS,GAChB,aACC,KAAM,QAAS,GAChB,mBACC,KAAM,QAAS,GAChB,aACA,UACA,aACA,UACA,YACA,UACA,aACC,KAAM,QAAS,GAChB,cACA,UACA,aACA,UACA,aACA,WAGFt5G,KAAKu5G,uBACH,aACC,KAAM,QAAS,GAChB,aACC,KAAM,UAAW,GAClB,eACC,KAAM,QAAS,GAChB,eACC,KAAM,UAAW,GAClB,WACA,WAGFv5G,KAAKw5G,yBACH,WACA,UACA,SACC,KAAM,UAAW,GAClB,eACA,SACA,cACC,KAAM,UAAW,GAClB,QACA,UACA,YACA,UACA,SACA,SACA,OACA,UACA,kBACC,KAAM,UAAW,GAClB,QACA,SACA,YACC,KAAM,UAAW,GAClB,WACC,KAAM,UAAW,GAClB,gBACA,SACA,UACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,OACA,SACA,SACC,KAAM,UAAW,GAClB,aACC,KAAM,SAAU,GACjB,SACA,SACA,UACAzkF,EAAMoB,oBACN,OACA,QACA,OACApB,EAAM2B,qBAGR12B,KAAKy5G,+BACH,OACA1kF,EAAM2B,oBACN,KACC,KAAM,UAAW,GAClB,KACC,KAAM,UAAW,GAClB,KACC,KAAM,UAAW,IAGpB12B,KAAK05G,sBACH,QACA,QACA,gBACA,UACA,gBACA,UACA,iBACA,UACA,iBACA,UACA,oBACA,UACA,iBACA,UACA,kBACA,UACA,kBACA,UACA,mBACA,UACA,mBACA,UACA,sBACA,UACA,mBACA,WAGF15G,KAAK25G,oCACH,UACA,UACA,UACA,UACA,cACA,UACA,WACA,UACA,iBACA,UACA,UACA,UACA,SACC,KAAM,UAAW,GAClB,QACA,UACA,UACA5kF,EAAMoB,oBACN,aACC,KAAM,UAAW,GAClB,aACA,WAGFn2B,KAAK45G,0BACH,MACA55G,KAAK25G,mCACL,QACA35G,KAAK25G,mCACL,QACA,SACA,OACA5kF,EAAM2B,qBAGR12B,KAAK65G,2BAA6B,QAAS9kF,EAAMI,eAAen1B,KAAK45G,2BAErE55G,KAAK85G,wBACH,aACA,SACA,gBACA,UACA,iBACA,UACA,YACC,KAAM,UAAW,GAClB,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,YACA,UACA,YACA,UACA,eACA,UACA,cACA,UACA,eACA,UACA,cACA,UACA,uBACC,KAAM,QAAS,GAChB,oBACC,KAAM,QAAS,GAChB,gBACC,KAAM,QAAS,GAChB,iBACA,UACA,gBACA,U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,KAAK66G,yBACH,QACC,KAAM,QAAS,GAChB,aACC,KAAM,QAAS,GAChB,mBACC,KAAM,QAAS,GAChB,aACA,UACA,aACA,UACA,YACA,UACA,aACC,KAAM,QAAS,GAChB,cACA,UACA,aACA,UACA,aACA,WAGF76G,KAAK86G,uBACH,aACC,KAAM,QAAS,GAChB,aACC,KAAM,UAAW,GAClB,eACC,KAAM,QAAS,GAChB,eACC,KAAM,UAAW,GAClB,WACA,WAGF96G,KAAK+6G,yBACH,WACA,UACA,SACC,KAAM,UAAW,GAClB,QACA,UACA,YACA,UACA,SACA,SACA,OACA,UACA,kBACC,KAAM,UAAW,GAClB,QACA,QACA,WACA,UACA,WACC,KAAM,UAAW,GAClB,gBACA,SACA,SACA,UACA,YACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,SACC,KAAM,UAAW,GAClB,aACC,KAAM,SAAU,GACjB,SACA,SACA,UACAhmF,EAAMoB,oBACN,OACA,QACA,OACApB,EAAM2B,qBAGR12B,KAAKg7G,+BACH,OACAjmF,EAAM2B,oBACN,KACC,KAAM,UAAW,GAClB,KACC,KAAM,UAAW,GAClB,KACC,KAAM,UAAW,IAGpB12B,KAAKi7G,sBACH,QACA,QACA,gBACA,UACA,gBACA,UACA,iBACA,UACA,iBACA,UACA,oBACA,UACA,iBACA,UACA,kBACA,UACA,kBACA,UACA,mBACA,UACA,mBACA,UACA,sBACA,UACA,mBACA,WAGFj7G,KAAKk7G,oCACH,UACA,UACA,UACA,UACA,cACA,UACA,WACA,UACA,iBACA,UACA,UACA,UACA,SACC,KAAM,UAAW,GAClB,QACA,UACA,UACAnmF,EAAMoB,oBACN,aACC,KAAM,UAAW,GAClB,aACA,WAGFn2B,KAAKm7G,0BACH,MACAn7G,KAAKk7G,mCACL,QACAl7G,KAAKk7G,mCACL,QACA,SACA,OACAnmF,EAAM2B,qBAGR12B,KAAKo7G,2BAA6B,QAASrmF,EAAMI,eAAen1B,KAAKm7G,2BAErEn7G,KAAKq7G,wBACH,aACA,S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ACA,UACAlnF,EAAMoB,oBACN,aACApB,EAAMI,eAAen1B,KAAKg8G,kCAC1B,OACAjnF,EAAM2B,qBAGR12B,KAAKk8G,yBAA2B,SAAUnnF,EAAMI,eAAen1B,KAAKi8G,yBAEpEj8G,KAAKm8G,oCACH,SACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,eACC,MAAO,KAAM,QAAS,GAAI,GAC3B,gBACC,MAAO,KAAM,QAAS,GAAI,IAG7Bn8G,KAAKo8G,yBACH,QACC,KAAM,QAAS,GAChB,aACC,KAAM,QAAS,GAChB,mBACC,KAAM,QAAS,GAChB,aACA,UACA,aACA,UACA,YACA,UACA,aACC,KAAM,QAAS,GAChB,cACA,UACA,aACA,UACA,aACA,WAGFp8G,KAAKq8G,uBACH,aACC,KAAM,QAAS,GAChB,aACC,KAAM,UAAW,GAClB,eACC,KAAM,QAAS,GAChB,eACC,KAAM,UAAW,GAClB,WACA,WAGFr8G,KAAKs8G,yBACH,WACA,UACA,SACC,KAAM,UAAW,GAClB,QACA,UACA,YACA,UACA,SACA,SACA,OACA,UACA,kBACC,KAAM,UAAW,GAClB,QACA,QACA,WACC,KAAM,UAAW,GAClB,gBACA,SACA,YACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,SACC,KAAM,UAAW,GAClB,aACC,KAAM,SAAU,GACjB,SACA,SACA,UACAvnF,EAAMoB,oBACN,OACA,QACA,OACApB,EAAM2B,qBAGR12B,KAAKu8G,+BACH,OACAxnF,EAAM2B,oBACN,KACC,KAAM,UAAW,GAClB,KACC,KAAM,UAAW,GAClB,KACC,KAAM,UAAW,IAGpB12B,KAAKw8G,sBACH,QACA,QACA,gBACA,UACA,gBACA,UACA,iBACA,UACA,iBACA,UACA,oBACA,UACA,iBACA,UACA,kBACA,UACA,kBACA,UACA,mBACA,UACA,mBACA,UACA,sBACA,UACA,mBACA,WAGFx8G,KAAKy8G,oCACH,UACA,UACA,UACA,UACA,cACA,UACA,WACA,UACA,iBACA,UACA,UACA,UACA,SACC,KAAM,UAAW,GAClB,QACA,UACA,UACA1nF,EAAMoB,oBACN,aACC,KAAM,UAAW,GAClB,aACA,WAGFn2B,KAAK08G,0BACH,MACA18G,KAAKy8G,mCACL,QACAz8G,KAAKy8G,mCACL,QACA,SACA,OACA1nF,EAAM2B,qBAGR12B,KAAK28G,2BAA6B,QAAS5nF,EAAMI,eAAen1B,KAAK08G,2BAErE18G,KAAK48G,wBACH,aACA,SACA,gBACA,UACA,iBACA,UACA,YACC,KAAM,UAAW,GAClB,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,YACA,UACA,YACA,UACA,eACA,UACA,cACA,UACA,eACA,UACA,cACA,UACA,uBACC,KAAM,QAAS,GAChB,oBACC,KAAM,QAAS,GAChB,gBACC,KAAM,QAAS,GAChB,iBACA,UACA,gBACA,UACA,mBACA,UACA,mBACA7nF,EAAMoB,oBACN,mBACApB,EAAMI,eAAeJ,EAAMoB,qBAC3B,iBACApB,EAAMI,eAAe,UACrB,iBACAJ,EAAMI,gBAAgB,KAAM,UAAW,KAGzCn1B,KAAK68G,uBACH,UACA,QACA,YACA,QACA,QACA,QACA,QACA,QACA,OACA,QACA,WACA,SAGF78G,KAAK88G,wBACH,WACA/nF,EAAMI,eAAen1B,KAAK67G,2BAC1B,qBACA9mF,EAAMI,eAAen1B,KAAK+7G,oCAC1B,SACAhnF,EAAMQ,iBAAiBv1B,KAAKk8G,yBAC5B,oBACAnnF,EAAM6qB,kBAAkB5/C,KAAKm8G,oCAC7B,SACApnF,EAAM6qB,kBAAkB5/C,KAAKo8G,yBAC7B,OACArnF,EAAM6qB,kBAAkB5/C,KAAKq8G,uBAC7B,iBACAtnF,EAAM6qB,kBAAkB5/C,KAAKs8G,yBAC7B,uBACAvnF,EAAMI,eAAen1B,KAAKu8G,+BAC1B,MACAxnF,EAAMQ,iBAAiBv1B,KAAKw8G,sBAC5B,WACAznF,EAAMQ,iBAAiBv1B,KAAK28G,2BAC5B,QACA5nF,EAAM6qB,kBAAkB5/C,KAAK48G,wBAC7B,OACA7nF,EAAM6qB,kBAAkB5/C,KAAK68G,uBAC7B,OACA9nF,EAAM2B,oBACN,YACA3B,EAAMI,eAAe,SACrB,aACAJ,EAAMM,iBACN,UACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,iBACA,UACA,iBACA,UACA,eACA,UACA,OACA,QACA,cACAN,EAAMI,gBAAgB,KAAM,UAAW,IACvC,OACAJ,EAAMM,kBAGRr1B,KAAK+8G,6BACH,YACAhoF,EAAMoB,oBACN,YACApB,EAAMoB,oBACN,WACApB,EAAMoB,qBAGRn2B,KAAKg9G,yBACH,WACAjoF,EAAMI,eAAen1B,KAAK67G,2BAC1B,qBACA9mF,EAAMI,eAAen1B,KAAK+7G,oCAC1B,SACAhnF,EAAMQ,iBAAiBv1B,KAAKk8G,yBAC5B,oBACAnnF,EAAM6qB,kBAAkB5/C,KAAKm8G,oCAC7B,SACApnF,EAAM6qB,kBAAkB5/C,KAAKo8G,yBAC7B,OACArnF,EAAM6qB,kBAAkB5/C,KAAKq8G,uBAC7B,iBACAtnF,EAAM6qB,kBAAkB5/C,KAAKs8G,yBAC7B,uBACAvnF,EAAMI,eAAen1B,KAAKu8G,+BAC1B,MACAxnF,EAAMQ,iBAAiBv1B,KAAKw8G,sBAC5B,WACAznF,EAAMQ,iBAAiBv1B,KAAK28G,2BAC5B,QACA5nF,EAAM6qB,kBAAkB5/C,KAAK48G,wBAC7B,OACA7nF,EAAM6qB,kBAAkB5/C,KAAK68G,uBAC7B,OACA9nF,EAAM2B,oBACN,YACA3B,EAAMI,eAAe,SACrB,aACAJ,EAAMM,iBACN,aACAN,EAAMI,eAAen1B,KAAK+8G,6BAC1B,WACAhoF,EAAMoB,qBAGRn2B,KAAKg3B,OAASh3B,KAAKi9G,uBACjB,iBACAloF,EAAMI,eAAen1B,KAAK88G,wBAC1B,aACA/nF,EAAMQ,iBAAiBv1B,KAAKg9G,2BAKhCE,GAAI,WACFl9G,KAAKm9G,wBACH,SACC,KAAM,QAAS,GAChB,YACA,UACA,aACC,KAAM,UAAW,IAGpBn9G,KAAKo9G,2BAA6B,SAAUroF,EAAM6qB,kBAAkB5/C,KAAKm9G,yBAEzEn9G,KAAKq9G,+BACH,WACA,UACA,aACA,UACA,UACA,UACA,WACA,UACA,UACA,UACA,QACA,SAGFr9G,KAAKs9G,oCACH,eACAvoF,EAAMI,eAAen1B,KAAKq9G,gCAG5Br9G,KAAKu9G,kCACH,aACA,UACA,UACA,UACA,OACA,UACA,iBACA,UACA,YACC,KAAM,UAAW,GAClB,YACA,UACA,UACA,WAGFv9G,KAAKw9G,wBACH,WACA,UACA,SACA,UACA,QACA,UACA,SACA,UACA,QACA,UACA,UACAzoF,EAAMoB,oBACN,aACApB,EAAMI,eAAen1B,KAAKu9G,kCAC1B,OACAxoF,EAAM2B,qBAGR12B,KAAKy9G,yBAA2B,SAAU1oF,EAAMI,eAAen1B,KAAKw9G,yBAEpEx9G,KAAK09G,oCACH,SACC,KAAM,UAAW,GAClB,UACC,MAAO,KAAM,QAAS,GAAI,GAC3B,aACC,KAAM,UAAW,IAGpB19G,KAAK29G,yBACH,QACC,KAAM,QAAS,GAChB,aACC,KAAM,QAAS,GAChB,mBACC,KAAM,QAAS,GAChB,aACA,UACA,aACA,UACA,YACA,UACA,aACC,KAAM,QAAS,GAChB,cACA,UACA,aACA,UACA,aACA,WAGF39G,KAAK49G,uBACH,aACC,KAAM,QAAS,GAChB,aACC,KAAM,UAAW,GAClB,eACC,KAAM,QAAS,GAChB,eACC,KAAM,UAAW,GAClB,WACA,WAGF59G,KAAK69G,yBACH,WACA,UACA,SACC,KAAM,UAAW,GAClB,QACA,UACA,YACA,UACA,SACA,SACA,OACA,UACA,kBACC,KAAM,UAAW,GAClB,QACA,QACA,WACC,KAAM,UAAW,GAClB,gBACA,SACA,YACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,SACC,KAAM,UAAW,GAClB,aACC,KAAM,SAAU,GACjB,SACA,SACA,UACA9oF,EAAMoB,oBACN,OACA,QACA,OACApB,EAAM2B,qBAGR12B,KAAK89G,+BACH,OACA/oF,EAAM2B,oBACN,KACC,KAAM,UAAW,GAClB,KACC,KAAM,UAAW,GAClB,KACC,KAAM,UAAW,IAGpB12B,KAAK+9G,sBACH,QACA,QACA,gBACA,UACA,gBACA,UACA,iBACA,UACA,iBACA,UACA,oBACA,UACA,iBACA,UACA,kBACA,UACA,kBACA,UACA,mBACA,UACA,mBACA,UACA,sBACA,UACA,mBACA,WAGF/9G,KAAKg+G,oCACH,UACA,UACA,UACA,UACA,cACA,UACA,WACA,UACA,iBACA,UACA,UACA,UACA,SACC,KAAM,UAAW,GAClB,QACA,UACA,UACAjpF,EAAMoB,oBACN,aACC,KAAM,UAAW,GAClB,aACA,WAGFn2B,KAAKi+G,0BACH,MACAj+G,KAAKg+G,mCACL,QACAh+G,KAAKg+G,mCACL,QACA,SACA,OACAjpF,EAAM2B,qBAGR12B,KAAKk+G,2BAA6B,QAASnpF,EAAMI,eAAen1B,KAAKi+G,2BAErEj+G,KAAKm+G,wBACH,aACA,SACA,gBACA,UACA,iBACA,UACA,YACC,KAAM,UAAW,GAClB,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,YACA,UACA,YACA,UACA,eACA,UACA,cACA,UACA,eACA,UACA,cACA,UACA,uBACC,KAAM,QAAS,GAChB,oBACC,KAAM,QAAS,GAChB,gBACC,KAAM,QAAS,GAChB,iBACA,UACA,gBACA,UACA,mBACA,UACA,mBACAppF,EAAMoB,oBACN,mBACApB,EAAMI,eAAeJ,EAAMoB,qBAC3B,iBACApB,EAAMI,eAAe,UACrB,iBACAJ,EAAMI,gBAAgB,KAAM,UAAW,KAGzCn1B,KAAKo+G,uBACH,UACA,QACA,YACA,QACA,QACA,QACA,QACA,QACA,OACA,QACA,WACA,SAGFp+G,KAAKq+G,wBACH,WACAtpF,EAAMI,eAAen1B,KAAKo9G,2BAC1B,qBACAroF,EAAMI,eAAen1B,KAAKs9G,oCAC1B,SACAvoF,EAAMQ,iBAAiBv1B,KAAKy9G,yBAC5B,oBACA1oF,EAAM6qB,kBAAkB5/C,KAAK09G,oCAC7B,SACA3oF,EAAM6qB,kBAAkB5/C,KAAK29G,yBAC7B,OACA5oF,EAAM6qB,kBAAkB5/C,KAAK49G,uBAC7B,iBACA7oF,EAAM6qB,kBAAkB5/C,KAAK69G,yBAC7B,uBACA9oF,EAAMI,eAAen1B,KAAK89G,+BAC1B,MACA/oF,EAAMQ,iBAAiBv1B,KAAK+9G,sBAC5B,WACAhpF,EAAMQ,iBAAiBv1B,KAAKk+G,2BAC5B,QACAnpF,EAAM6qB,kBAAkB5/C,KAAKm+G,wBAC7B,OACAppF,EAAM6qB,kBAAkB5/C,KAAKo+G,uBAC7B,OACArpF,EAAM2B,oBACN,YACA3B,EAAMI,eAAe,SACrB,aACAJ,EAAMM,iBACN,UACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,iBACA,UACA,iBACA,UACA,eACA,UACA,OACA,QACA,cACAN,EAAMI,gBAAgB,KAAM,UAAW,IACvC,OACAJ,EAAMM,kBAGRr1B,KAAKs+G,6BACH,YACAvpF,EAAMoB,oBACN,YACApB,EAAMoB,oBACN,WACApB,EAAMoB,qBAGRn2B,KAAKu+G,yBACH,WACAxpF,EAAMI,eAAen1B,KAAKo9G,2BAC1B,qBACAroF,EAAMI,eAAen1B,KAAKs9G,oCAC1B,SACAvoF,EAAMQ,iBAAiBv1B,KAAKy9G,yBAC5B,oBACA1oF,EAAM6qB,kBAAkB5/C,KAAK09G,oCAC7B,SACA3oF,EAAM6qB,kBAAkB5/C,KAAK29G,yBAC7B,OACA5oF,EAAM6qB,kBAAkB5/C,KAAK49G,uBAC7B,iBACA7oF,EAAM6qB,kBAAkB5/C,KAAK69G,yBAC7B,uBACA9oF,EAAMI,eAAen1B,KAAK89G,+BAC1B,MACA/oF,EAAMQ,iBAAiBv1B,KAAK+9G,sBAC5B,WACAhpF,EAAMQ,iBAAiBv1B,KAAKk+G,2BAC5B,QACAnpF,EAAM6qB,kBAAkB5/C,KAAKm+G,wBAC7B,OACAppF,EAAM6qB,kBAAkB5/C,KAAKo+G,uBAC7B,OACArpF,EAAM2B,oBACN,YACA3B,EAAMI,eAAe,SACrB,aACAJ,EAAMM,iBACN,aACAN,EAAMI,eAAen1B,KAAKs+G,6BAC1B,WACAvpF,EAAMoB,qBAGRn2B,KAAKg3B,OAASh3B,KAAKw+G,uBACjB,iBACAzpF,EAAMI,eAAen1B,KAAKq+G,wBAC1B,aACAtpF,EAAMQ,iBAAiBv1B,KAAKu+G,2BAKhCE,GAAI,WACFz+G,KAAK0+G,wBACH,SACC,KAAM,QAAS,GAChB,YACA,UACA,aACC,KAAM,UAAW,IAGpB1+G,KAAK2+G,2BAA6B,SAAU5pF,EAAM6qB,kBAAkB5/C,KAAK0+G,yBAEzE1+G,KAAK4+G,+BACH,WACA,UACA,aACA,UACA,UACA,UACA,WACA,UACA,UACA,UACA,QACA,SAGF5+G,KAAK6+G,kCACH,aACA,UACA,UACA,UACA,OACA,UACA,iBACA,UACA,YACC,KAAM,UAAW,GAClB,YACA,UACA,UACA,WAGF7+G,KAAK8+G,wBACH,WACA,UACA,SACA,UACA,QACA,UACA,SACA,UACA,QACA,UACA,UACA/pF,EAAMoB,oBACN,aACApB,EAAMI,eAAen1B,KAAK6+G,kCAC1B,OACA9pF,EAAM2B,qBAGR12B,KAAK++G,yBAA2B,SAAUhqF,EAAMI,eAAen1B,KAAK8+G,yBAEpE9+G,KAAKg/G,oCACH,SACC,KAAM,UAAW,GAClB,UACC,MAAO,KAAM,QAAS,GAAI,GAC3B,aACC,KAAM,UAAW,IAGpBh/G,KAAKi/G,yBACH,QACC,KAAM,QAAS,GAChB,aACC,KAAM,QAAS,GAChB,mBACC,KAAM,QAAS,GAChB,aACA,UACA,aACA,UACA,YACA,UACA,aACC,KAAM,QAAS,GAChB,cACA,UACA,aACA,UACA,aACA,WAGFj/G,KAAKk/G,uBACH,aACC,KAAM,QAAS,GAChB,aACC,KAAM,UAAW,GAClB,eACC,KAAM,QAAS,GAChB,eACC,KAAM,UAAW,GAClB,WACA,WAGFl/G,KAAKm/G,yBACH,WACA,UACA,SACC,KAAM,UAAW,GAClB,QACA,UACA,YACA,UACA,SACA,SACA,OACA,UACA,kBACC,KAAM,UAAW,GAClB,QACA,QACA,WACC,KAAM,UAAW,GAClB,gBACA,SACA,YACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,SACC,KAAM,UAAW,GAClB,aACC,KAAM,SAAU,GACjB,SACA,SACA,UACApqF,EAAMoB,oBACN,OACA,QACA,OACApB,EAAM2B,qBAGR12B,KAAKo/G,+BACH,OACArqF,EAAM2B,oBACN,KACC,KAAM,UAAW,GAClB,KACC,KAAM,UAAW,GAClB,KACC,KAAM,UAAW,IAGpB12B,KAAKq/G,sBACH,QACA,QACA,gBACA,UACA,gBACA,UACA,iBACA,UACA,iBACA,UACA,oBACA,UACA,iBACA,UACA,kBACA,UACA,kBACA,UACA,mBACA,UACA,mBACA,UACA,sBACA,UACA,mBACA,WAGFr/G,KAAKs/G,oCACH,UACA,UACA,UACA,UACA,cACA,UACA,WACA,UACA,iBACA,UACA,UACA,UACA,SACC,KAAM,UAAW,GAClB,QACA,UACA,UACAvqF,EAAMoB,oBACN,aACC,KAAM,UAAW,GAClB,aACA,WAGFn2B,KAAKu/G,0BACH,MACAv/G,KAAKs/G,mCACL,QACAt/G,KAAKs/G,mCACL,QACA,SACA,OACAvqF,EAAM2B,qBAGR12B,KAAKw/G,2BAA6B,QAASzqF,EAAMI,eAAen1B,KAAKu/G,2BAErEv/G,KAAKy/G,wBACH,aACA,SACA,gBACA,UACA,iBACA,UACA,YACC,KAAM,UAAW,GAClB,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,YACA,UACA,YACA,UACA,eACA,UACA,cACA,UACA,eACA,UACA,cACA,UACA,uBACC,KAAM,QAAS,GAChB,oBACC,KAAM,QAAS,GAChB,gBACC,KAAM,QAAS,GAChB,iBACA,UACA,gBACA,UACA,mBACA,UACA,mBACA1qF,EAAMoB,oBACN,mBACApB,EAAMI,eAAeJ,EAAMoB,qBAC3B,iBACApB,EAAMI,eAAe,UACrB,iBACAJ,EAAMI,gBAAgB,KAAM,UAAW,KAGzCn1B,KAAK0/G,uBACH,UACA,QACA,YACA,QACA,QACA,QACA,QACA,QACA,OACA,QACA,WACA,SAGF1/G,KAAK2/G,wBACH,WACA5qF,EAAMI,eAAen1B,KAAK2+G,2BAC1B,eACA5pF,EAAMI,eAAen1B,KAAK4+G,+BAC1B,SACA7pF,EAAMQ,iBAAiBv1B,KAAK++G,yBAC5B,oBACAhqF,EAAM6qB,kBAAkB5/C,KAAKg/G,oCAC7B,SACAjqF,EAAM6qB,kBAAkB5/C,KAAKi/G,yBAC7B,OACAlqF,EAAM6qB,kBAAkB5/C,KAAKk/G,uBAC7B,iBACAnqF,EAAM6qB,kBAAkB5/C,KAAKm/G,yBAC7B,uBACApqF,EAAMI,eAAen1B,KAAKo/G,+BAC1B,MACArqF,EAAMQ,iBAAiBv1B,KAAKq/G,sBAC5B,WACAtqF,EAAMQ,iBAAiBv1B,KAAKw/G,2BAC5B,QACAzqF,EAAM6qB,kBAAkB5/C,KAAKy/G,wBAC7B,OACA1qF,EAAM6qB,kBAAkB5/C,KAAK0/G,uBAC7B,OACA3qF,EAAM2B,oBACN,YACA3B,EAAMI,eAAe,SACrB,aACAJ,EAAMM,iBACN,UACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,iBACA,UACA,iBACA,UACA,eACA,UACA,OACA,QACA,cACAN,EAAMI,gBAAgB,KAAM,UAAW,IACvC,OACAJ,EAAMM,kBAGRr1B,KAAK4/G,6BACH,YACA7qF,EAAMoB,oBACN,YACApB,EAAMoB,oBACN,WACApB,EAAMoB,qBAGRn2B,KAAK6/G,yBACH,WACA9qF,EAAMI,eAAen1B,KAAK2+G,2BAC1B,eACA5pF,EAAMI,eAAen1B,KAAK4+G,+BAC1B,SACA7pF,EAAMQ,iBAAiBv1B,KAAK++G,yBAC5B,oBACAhqF,EAAM6qB,kBAAkB5/C,KAAKg/G,oCAC7B,SACAjqF,EAAM6qB,kBAAkB5/C,KAAKi/G,yBAC7B,OACAlqF,EAAM6qB,kBAAkB5/C,KAAKk/G,uBAC7B,iBACAnqF,EAAM6qB,kBAAkB5/C,KAAKm/G,yBAC7B,uBACApqF,EAAMI,eAAen1B,KAAKo/G,+BAC1B,MACArqF,EAAMQ,iBAAiBv1B,KAAKq/G,sBAC5B,WACAtqF,EAAMQ,iBAAiBv1B,KAAKw/G,2BAC5B,QACAzqF,EAAM6qB,kBAAkB5/C,KAAKy/G,wBAC7B,OACA1qF,EAAM6qB,kBAAkB5/C,KAAK0/G,uBAC7B,OACA3qF,EAAM2B,oBACN,YACA3B,EAAMI,eAAe,SACrB,aACAJ,EAAMM,iBACN,aACAN,EAAMI,eAAen1B,KAAK4/G,6BAC1B,WACA7qF,EAAMoB,qBAGRn2B,KAAKg3B,OAASh3B,KAAK8/G,uBACjB,iBACA/qF,EAAMI,eAAen1B,KAAK2/G,wBAC1B,aACA5qF,EAAMQ,iBAAiBv1B,KAAK6/G,2BAKhCE,GAAI,WACF//G,KAAKggH,wBACH,SACC,KAAM,QAAS,GAChB,YACA,UACA,aACC,KAAM,UAAW,IAGpBhgH,KAAKigH,2BAA6B,SAAUlrF,EAAM6qB,kBAAkB5/C,KAAKggH,yBAEzEhgH,KAAKkgH,+BACH,WACA,UACA,aACA,UACA,UACA,UACA,WACA,UACA,UACA,UACA,QACA,SAGFlgH,KAAKmgH,kCACH,aACA,UACA,UACA,UACA,OACA,UACA,iBACA,UACA,YACC,KAAM,UAAW,GAClB,YACA,UACA,UACA,WAGFngH,KAAKogH,wBACH,WACA,UACA,SACA,UACA,QACA,UACA,SACA,UACA,QACA,UACA,UACArrF,EAAMoB,oBACN,aACApB,EAAMI,eAAen1B,KAAKmgH,kCAC1B,OACAprF,EAAM2B,qBAGR12B,KAAKqgH,yBAA2B,SAAUtrF,EAAMI,eAAen1B,KAAKogH,yBAEpEpgH,KAAKsgH,oCACH,SACC,KAAM,UAAW,GAClB,UACC,MAAO,KAAM,QAAS,GAAI,GAC3B,aACC,KAAM,UAAW,IAGpBtgH,KAAKugH,yBACH,QACC,KAAM,QAAS,GAChB,aACC,KAAM,QAAS,GAChB,mBACC,KAAM,QAAS,GAChB,aACA,UACA,aACA,UACA,YACA,UACA,aACC,KAAM,QAAS,GAChB,cACA,UACA,aACA,UACA,aACA,WAGFvgH,KAAKwgH,uBACH,aACC,KAAM,QAAS,GAChB,aACC,KAAM,UAAW,GAClB,eACC,KAAM,QAAS,GAChB,eACC,KAAM,UAAW,GAClB,WACA,WAGFxgH,KAAKygH,yBACH,WACA,UACA,SACC,KAAM,UAAW,GAClB,QACA,UACA,YACA,UACA,SACA,SACA,OACA,UACA,kBACC,KAAM,UAAW,GAClB,QACA,QACA,WACC,KAAM,UAAW,GAClB,gBACA,SACA,YACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,SACC,KAAM,UAAW,GAClB,aACC,KAAM,SAAU,GACjB,SACA,SACA,UACA1rF,EAAMoB,oBACN,OACA,QACA,OACApB,EAAM2B,qBAGR12B,KAAK0gH,+BACH,OACA3rF,EAAM2B,oBACN,KACC,KAAM,UAAW,GAClB,KACC,KAAM,UAAW,GAClB,KACC,KAAM,UAAW,IAGpB12B,KAAK2gH,sBACH,QACA,QACA,gBACA,UACA,gBACA,UACA,iBACA,UACA,iBACA,UACA,oBACA,UACA,iBACA,UACA,kBACA,UACA,kBACA,UACA,mBACA,UACA,mBACA,UACA,sBACA,UACA,mBACA,WAGF3gH,KAAK4gH,oCACH,UACA,UACA,UACA,UACA,cACA,UACA,WACA,UACA,iBACA,UACA,UACA,UACA,SACC,KAAM,UAAW,GAClB,QACA,UACA,UACA7rF,EAAMoB,oBACN,aACC,KAAM,UAAW,GAClB,aACA,WAGFn2B,KAAK6gH,0BACH,MACA7gH,KAAK4gH,mCACL,QACA5gH,KAAK4gH,mCACL,QACA,SACA,OACA7rF,EAAM2B,qBAGR12B,KAAK8gH,2BAA6B,QAAS/rF,EAAMI,eAAen1B,KAAK6gH,2BAErE7gH,KAAK+gH,wBACH,aACA,SACA,gBACA,UACA,iBACA,UACA,YACC,KAAM,UAAW,GAClB,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,YACA,UACA,YACA,UACA,eACA,UACA,cACA,UACA,eACA,UACA,cACA,UACA,uBACC,KAAM,QAAS,GAChB,oBACC,KAAM,QAAS,GAChB,gBACC,KAAM,QAAS,GAChB,iBACA,UACA,gBACA,UACA,mBACA,UACA,mBACAhsF,EAAMoB,oBACN,mBACApB,EAAMI,eAAeJ,EAAMoB,qBAC3B,iBACApB,EAAMI,eAAe,UACrB,iBACAJ,EAAMI,gBAAgB,KAAM,UAAW,KAGzCn1B,KAAKghH,uBACH,UACA,QACA,YACA,QACA,QACA,QACA,QACA,QACA,OACA,QACA,WACA,SAGFhhH,KAAKihH,wBACH,WACAlsF,EAAMI,eAAen1B,KAAKigH,2BAC1B,eACAlrF,EAAMI,eAAen1B,KAAKkgH,+BAC1B,SACAnrF,EAAMQ,iBAAiBv1B,KAAKqgH,yBAC5B,oBACAtrF,EAAM6qB,kBAAkB5/C,KAAKsgH,oCAC7B,SACAvrF,EAAM6qB,kBAAkB5/C,KAAKugH,yBAC7B,OACAxrF,EAAM6qB,kBAAkB5/C,KAAKwgH,uBAC7B,iBACAzrF,EAAM6qB,kBAAkB5/C,KAAKygH,yBAC7B,uBACA1rF,EAAMI,eAAen1B,KAAK0gH,+BAC1B,MACA3rF,EAAMQ,iBAAiBv1B,KAAK2gH,sBAC5B,WACA5rF,EAAMQ,iBAAiBv1B,KAAK8gH,2BAC5B,QACA/rF,EAAM6qB,kBAAkB5/C,KAAK+gH,wBAC7B,OACAhsF,EAAM6qB,kBAAkB5/C,KAAKghH,uBAC7B,OACAjsF,EAAM2B,oBACN,YACA3B,EAAMI,eAAe,SACrB,UACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,iBACA,UACA,iBACA,UACA,eACA,UACA,OACA,QACA,cACAJ,EAAMI,gBAAgB,KAAM,UAAW,IACvC,OACAJ,EAAMM,kBAGRr1B,KAAKkhH,6BACH,YACAnsF,EAAMoB,oBACN,YACApB,EAAMoB,oBACN,WACApB,EAAMoB,qBAGRn2B,KAAKmhH,yBACH,WACApsF,EAAMI,eAAen1B,KAAKigH,2BAC1B,eACAlrF,EAAMI,eAAen1B,KAAKkgH,+BAC1B,SACAnrF,EAAMQ,iBAAiBv1B,KAAKqgH,yBAC5B,oBACAtrF,EAAM6qB,kBAAkB5/C,KAAKsgH,oCAC7B,SACAvrF,EAAM6qB,kBAAkB5/C,KAAKugH,yBAC7B,OACAxrF,EAAM6qB,kBAAkB5/C,KAAKwgH,uBAC7B,iBACAzrF,EAAM6qB,kBAAkB5/C,KAAKygH,yBAC7B,uBACA1rF,EAAMI,eAAen1B,KAAK0gH,+BAC1B,MACA3rF,EAAMQ,iBAAiBv1B,KAAK2gH,sBAC5B,WACA5rF,EAAMQ,iBAAiBv1B,KAAK8gH,2BAC5B,QACA/rF,EAAM6qB,kBAAkB5/C,KAAK+gH,wBAC7B,OACAhsF,EAAM6qB,kBAAkB5/C,KAAKghH,uBAC7B,OACAjsF,EAAM2B,oBACN,YACA3B,EAAMI,eAAe,SACrB,aACAJ,EAAMI,eAAen1B,KAAKkhH,6BAC1B,WACAnsF,EAAMoB,qBAGRn2B,KAAKg3B,OAASh3B,KAAKohH,uBACjB,iBACArsF,EAAMI,eAAen1B,KAAKihH,wBAC1B,aACAlsF,EAAMQ,iBAAiBv1B,KAAKmhH,2BAKhCE,GAAI,WACFrhH,KAAKshH,wBACH,SACC,KAAM,QAAS,GAChB,YACA,UACA,aACC,KAAM,UAAW,IAGpBthH,KAAKuhH,2BAA6B,SAAUxsF,EAAM6qB,kBAAkB5/C,KAAKshH,yBAEzEthH,KAAKwhH,+BACH,WACA,UACA,aACA,UACA,UACA,UACA,WACA,UACA,UACA,UACA,QACA,SAGFxhH,KAAKyhH,kCACH,aACA,UACA,UACA,UACA,OACA,UACA,iBACA,UACA,YACC,KAAM,UAAW,GAClB,YACA,UACA,UACA,WAGFzhH,KAAK0hH,wBACH,WACA,UACA,SACA,UACA,QACA,UACA,SACA,UACA,QACA,UACA,UACA3sF,EAAMoB,oBACN,aACApB,EAAMI,eAAen1B,KAAKyhH,kCAC1B,OACA1sF,EAAM2B,qBAGR12B,KAAK2hH,yBAA2B,SAAU5sF,EAAMI,eAAen1B,KAAK0hH,yBAEpE1hH,KAAK4hH,oCACH,SACC,KAAM,UAAW,GAClB,UACC,MAAO,KAAM,QAAS,GAAI,GAC3B,aACC,KAAM,UAAW,IAGpB5hH,KAAK6hH,yBACH,QACC,KAAM,QAAS,GAChB,aACC,KAAM,QAAS,GAChB,mBACC,KAAM,QAAS,GAChB,aACA,UACA,aACA,UACA,YACA,UACA,aACC,KAAM,QAAS,GAChB,cACA,UACA,aACA,UACA,aACA,WAGF7hH,KAAK8hH,uBACH,aACC,KAAM,QAAS,GAChB,aACC,KAAM,UAAW,GAClB,eACC,KAAM,QAAS,GAChB,eACC,KAAM,UAAW,GAClB,WACA,WAGF9hH,KAAK+hH,yBACH,WACA,UACA,SACC,KAAM,UAAW,GAClB,QACA,UACA,YACA,UACA,SACA,SACA,OACA,UACA,kBACC,KAAM,UAAW,GAClB,QACA,QACA,WACC,KAAM,UAAW,GAClB,gBACA,SACA,YACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,SACC,KAAM,UAAW,GAClB,aACC,KAAM,SAAU,GACjB,SACA,SACA,UACAhtF,EAAMoB,oBACN,OACA,QACA,OACApB,EAAM2B,qBAGR12B,KAAKgiH,+BACH,OACAjtF,EAAM2B,oBACN,KACC,KAAM,UAAW,GAClB,KACC,KAAM,UAAW,GAClB,KACC,KAAM,UAAW,IAGpB12B,KAAKiiH,sBACH,QACA,QACA,gBACA,UACA,gBACA,UACA,iBACA,UACA,iBACA,UACA,oBACA,UACA,iBACA,UACA,kBACA,UACA,kBACA,UACA,mBACA,UACA,mBACA,UACA,sBACA,UACA,mBACA,WAGFjiH,KAAKkiH,oCACH,UACA,UACA,UACA,UACA,cACA,UACA,WACA,UACA,iBACA,UACA,UACA,UACA,SACC,KAAM,UAAW,GAClB,QACA,UACA,UACAntF,EAAMoB,oBACN,aACC,KAAM,UAAW,GAClB,aACA,WAGFn2B,KAAKmiH,0BACH,MACAniH,KAAKkiH,mCACL,QACAliH,KAAKkiH,mCACL,QACA,SACA,OACAntF,EAAM2B,qBAGR12B,KAAKoiH,2BAA6B,QAASrtF,EAAMI,eAAen1B,KAAKmiH,2BAErEniH,KAAKqiH,wBACH,aACA,SACA,gBACA,UACA,iBACA,UACA,YACC,KAAM,UAAW,GAClB,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,YACA,UACA,YACA,UACA,eACA,UACA,cACA,UACA,eACA,UACA,cACA,UACA,uBACC,KAAM,QAAS,GAChB,oBACC,KAAM,QAAS,GAChB,gBACC,KAAM,QAAS,GAChB,iBACA,UACA,gBACA,UACA,mBACA,UACA,mBACAttF,EAAMoB,oBACN,mBACApB,EAAMI,eAAeJ,EAAMoB,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AAS,GAChB,aACC,KAAM,UAAW,GAClB,eACC,KAAM,QAAS,GAChB,eACC,KAAM,UAAW,GAClB,WACA,WAGFpjH,KAAKqjH,yBACH,WACA,UACA,SACC,KAAM,UAAW,GAClB,QACA,UACA,YACA,UACA,SACA,SACA,OACA,UACA,kBACC,KAAM,UAAW,GAClB,QACA,QACA,WACC,KAAM,UAAW,GAClB,gBACA,SACA,YACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,SACC,KAAM,UAAW,GAClB,aACC,KAAM,SAAU,GACjB,SACA,SACA,UACAtuF,EAAMoB,oBACN,OACA,QACA,OACApB,EAAM2B,qBAGR12B,KAAKsjH,+BACH,OACAvuF,EAAM2B,oBACN,KACC,KAAM,UAAW,GAClB,KACC,KAAM,UAAW,GAClB,KACC,KAAM,UAAW,IAGpB12B,KAAKujH,sBACH,QACA,QACA,gBACA,UACA,gBACA,UACA,iBACA,UACA,iBACA,UACA,oBACA,UACA,iBACA,UACA,kBACA,UACA,kBACA,UACA,mBACA,UACA,mBACA,UACA,sBACA,UACA,mBACA,WAGFvjH,KAAKwjH,oCACH,UACA,UACA,UACA,UACA,cACA,UACA,WACA,UACA,iBACA,UACA,UACA,UACA,SACC,KAAM,UAAW,GAClB,QACA,UACA,UACAzuF,EAAMoB,oBACN,aACC,KAAM,UAAW,GAClB,aACA,WAGFn2B,KAAKyjH,0BACH,MACAzjH,KAAKwjH,mCACL,QACAxjH,KAAKwjH,mCACL,QACA,SACA,OACAzuF,EAAM2B,qBAGR12B,KAAK0jH,2BAA6B,QAAS3uF,EAAMI,eAAen1B,KAAKyjH,2BAErEzjH,KAAK2jH,wBACH,aACA,SACA,gBACA,UACA,iBACA,UACA,YACC,KAAM,UAAW,GAClB,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,YACA,UACA,YACA,UACA,eACA,UACA,cACA,UACA,eACA,UACA,cACA,UACA,uBACC,KAAM,QAAS,GAChB,oBACC,KAAM,QAAS,GAChB,gBACC,KAAM,QAAS,GAChB,iBACA,UACA,gBACA,UACA,mBACA,UACA,mBACA5uF,EAAMoB,oBACN,mBACApB,EAAMI,eAAeJ,EAAMoB,qBAC3B,iBACApB,EAAMI,eAAe,UACrB,iBACAJ,EAAMI,gBAAgB,KAAM,UAAW,KAGzCn1B,KAAK4jH,uBACH,UACA,QACA,YACA,QACA,QACA,QACA,QACA,QACA,OACA,QACA,WACA,SAGF5jH,KAAK6jH,wBACH,WACA9uF,EAAMI,eAAen1B,KAAK6iH,2BAC1B,eACA9tF,EAAMI,eAAen1B,KAAK8iH,+BAC1B,SACA/tF,EAAMQ,iBAAiBv1B,KAAKijH,yBAC5B,oBACAluF,EAAM6qB,kBAAkB5/C,KAAKkjH,oCAC7B,SACAnuF,EAAM6qB,kBAAkB5/C,KAAKmjH,yBAC7B,OACApuF,EAAM6qB,kBAAkB5/C,KAAKojH,uBAC7B,iBACAruF,EAAM6qB,kBAAkB5/C,KAAKqjH,yBAC7B,uBACAtuF,EAAMI,eAAen1B,KAAKsjH,+BAC1B,MACAvuF,EAAMQ,iBAAiBv1B,KAAKujH,sBAC5B,WACAxuF,EAAMQ,iBAAiBv1B,KAAK0jH,2BAC5B,QACA3uF,EAAM6qB,kBAAkB5/C,KAAK2jH,wBAC7B,OACA5uF,EAAM6qB,kBAAkB5/C,KAAK4jH,uBAC7B,OACA7uF,EAAM2B,oBACN,YACA3B,EAAMI,eAAe,SACrB,UACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,iBACA,UACA,iBACA,UACA,eACA,UACA,OACA,QACA,cACAJ,EAAMI,gBAAgB,KAAM,UAAW,IACvC,OACAJ,EAAMM,kBAGRr1B,KAAK8jH,6BACH,YACA/uF,EAAMoB,oBACN,YACApB,EAAMoB,oBACN,WACApB,EAAMoB,qBAGRn2B,KAAK+jH,yBACH,WACAhvF,EAAMI,eAAen1B,KAAK6iH,2BAC1B,eACA9tF,EAAMI,eAAen1B,KAAK8iH,+BAC1B,SACA/tF,EAAMQ,iBAAiBv1B,KAAKijH,yBAC5B,oBACAluF,EAAM6qB,kBAAkB5/C,KAAKkjH,oCAC7B,SACAnuF,EAAM6qB,kBAAkB5/C,KAAKmjH,yBAC7B,OACApuF,EAAM6qB,kBAAkB5/C,KAAKojH,uBAC7B,iBACAruF,EAAM6qB,kBAAkB5/C,KAAKqjH,yBAC7B,uBACAtuF,EAAMI,eAAen1B,KAAKsjH,+BAC1B,MACAvuF,EAAMQ,iBAAiBv1B,KAAKujH,sBAC5B,WACAxuF,EAAMQ,iBAAiBv1B,KAAK0jH,2BAC5B,QACA3uF,EAAM6qB,kBAAkB5/C,KAAK2jH,wBAC7B,OACA5uF,EAAM6qB,kBAAkB5/C,KAAK4jH,uBAC7B,OACA7uF,EAAM2B,oBACN,YACA3B,EAAMI,eAAe,SACrB,aACAJ,EAAMI,eAAen1B,KAAK8jH,6BAC1B,WACA/uF,EAAMoB,qBAGRn2B,KAAKg3B,OAASh3B,KAAKgkH,uBACjB,iBACAjvF,EAAMI,eAAen1B,KAAK6jH,wBAC1B,aACA9uF,EAAMQ,iBAAiBv1B,KAAK+jH,2BAKhCE,GAAI,WACFjkH,KAAKkkH,wBACH,SACC,KAAM,QAAS,GAChB,YACA,UACA,aACC,KAAM,UAAW,IAGpBlkH,KAAKmkH,2BAA6B,SAAUpvF,EAAM6qB,kBAAkB5/C,KAAKkkH,yBAEzElkH,KAAKokH,+BACH,WACA,UACA,aACA,UACA,UACA,UACA,WACA,UACA,UACA,UACA,QACA,SAGFpkH,KAAKqkH,kCACH,aACA,UACA,UACA,UACA,OACA,UACA,iBACA,UACA,YACC,KAAM,UAAW,GAClB,YACA,UACA,UACA,WAGFrkH,KAAKskH,wBACH,WACA,UACA,SACA,UACA,QACA,UACA,SACA,UACA,QACA,UACA,UACAvvF,EAAMoB,oBACN,aACApB,EAAMI,eAAen1B,KAAKqkH,kCAC1B,OACAtvF,EAAM2B,qBAGR12B,KAAKukH,yBAA2B,SAAUxvF,EAAMI,eAAen1B,KAAKskH,yBAEpEtkH,KAAKwkH,oCACH,SACC,KAAM,UAAW,GAClB,UACC,MAAO,KAAM,QAAS,GAAI,GAC3B,aACC,KAAM,UAAW,IAGpBxkH,KAAKykH,yBACH,QACC,KAAM,QAAS,GAChB,aACC,KAAM,QAAS,GAChB,mBACC,KAAM,QAAS,GAChB,aACA,UACA,aACA,UACA,YACA,UACA,aACC,KAAM,QAAS,GAChB,cACA,UACA,aACA,UACA,aACA,WAGFzkH,KAAK0kH,uBACH,aACC,KAAM,QAAS,GAChB,aACC,KAAM,UAAW,GAClB,eACC,KAAM,QAAS,GAChB,eACC,KAAM,UAAW,GAClB,WACA,WAGF1kH,KAAK2kH,yBACH,WACA,UACA,SACC,KAAM,UAAW,GAClB,QACA,UACA,YACA,UACA,SACA,SACA,OACA,UACA,kBACC,KAAM,UAAW,GAClB,QACA,QACA,WACC,KAAM,UAAW,GAClB,gBACA,SACA,YACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,SACC,KAAM,UAAW,GAClB,aACC,KAAM,SAAU,GACjB,SACA,SACA,UACA5vF,EAAMoB,oBACN,OACA,QACA,OACApB,EAAM2B,qBAGR12B,KAAK4kH,+BACH,OACA7vF,EAAM2B,oBACN,KACC,KAAM,UAAW,GAClB,KACC,KAAM,UAAW,GAClB,KACC,KAAM,UAAW,IAGpB12B,KAAK6kH,sBACH,QACA,QACA,gBACA,UACA,gBACA,UACA,iBACA,UACA,iBACA,UACA,oBACA,UACA,iBACA,UACA,kBACA,UACA,kBACA,UACA,mBACA,UACA,mBACA,UACA,sBACA,UACA,mBACA,WAGF7kH,KAAK8kH,oCACH,UACA,UACA,UACA,UACA,cACA,UACA,WACA,UACA,iBACA,UACA,UACA,UACA,SACC,KAAM,UAAW,GAClB,QACA,UACA,UACA/vF,EAAMoB,oBACN,aACC,KAAM,UAAW,GAClB,aACA,WAGFn2B,KAAK+kH,0BACH,MACA/kH,KAAK8kH,mCACL,QACA9kH,KAAK8kH,mCACL,QACA,SACA,OACA/vF,EAAM2B,qBAGR12B,KAAKglH,2BAA6B,QAASjwF,EAAMI,eAAen1B,KAAK+kH,2BAErE/kH,KAAKilH,wBACH,aACA,SACA,gBACA,UACA,iBACA,UACA,YACC,KAAM,UAAW,GAClB,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA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M,QAAS,GAChB,mBACC,KAAM,QAAS,GAChB,aACA,UACA,aACA,UACA,YACA,UACA,aACC,KAAM,QAAS,GAChB,cACA,UACA,aACA,UACA,aACA,WAGF9lH,KAAK+lH,uBACH,aACC,KAAM,QAAS,GAChB,aACC,KAAM,UAAW,GAClB,eACC,KAAM,QAAS,GAChB,eACC,KAAM,UAAW,GAClB,WACA,WAGF/lH,KAAKgmH,yBACH,WACA,UACA,SACC,KAAM,UAAW,GAClB,QACA,UACA,YACA,UACA,SACA,SACA,OACA,UACA,kBACC,KAAM,UAAW,GAClB,QACA,QACA,WACC,KAAM,UAAW,GAClB,gBACA,SACA,YACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,SACC,KAAM,UAAW,GAClB,aACC,KAAM,SAAU,GACjB,SACA,SACA,UACAjxF,EAAMoB,oBACN,OACA,QACA,OACApB,EAAM2B,qBAGR12B,KAAKimH,+BACH,OACAlxF,EAAM2B,oBACN,KACC,KAAM,UAAW,GAClB,KACC,KAAM,UAAW,GAClB,KACC,KAAM,UAAW,IAGpB12B,KAAKkmH,sBACH,QACA,QACA,gBACA,UACA,gBACA,UACA,iBACA,UACA,iBACA,UACA,oBACA,UACA,iBACA,UACA,kBACA,UACA,kBACA,UACA,mBACA,UACA,mBACA,UACA,sBACA,UACA,mBACA,WAGFlmH,KAAKmmH,oCACH,UACA,UACA,UACA,UACA,cACA,UACA,WACA,UACA,iBACA,UACA,UACA,UACA,SACC,KAAM,UAAW,GAClB,QACA,UACA,UACApxF,EAAMoB,oBACN,aACC,KAAM,UAAW,GAClB,aACA,WAGFn2B,KAAKomH,0BACH,MACApmH,KAAKmmH,mCACL,QACAnmH,KAAKmmH,mCACL,QACA,SACA,OACApxF,EAAM2B,qBAGR12B,KAAKqmH,2BAA6B,QAAStxF,EAAMI,eAAen1B,KAAKomH,2BAErEpmH,KAAKsmH,wBACH,aACA,SACA,gBACA,UACA,iBACA,UACA,YACC,KAAM,UAAW,GAClB,aACA,UACA,aACA,UA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AS,GAChB,cACA,UACA,aACA,UACA,aACA,WAGFnnH,KAAKonH,uBACH,aACC,KAAM,QAAS,GAChB,aACC,KAAM,UAAW,GAClB,eACC,KAAM,QAAS,GAChB,eACC,KAAM,UAAW,GAClB,WACA,WAGFpnH,KAAKqnH,yBACH,WACA,UACA,SACC,KAAM,UAAW,GAClB,QACA,UACA,YACA,UACA,SACA,SACA,OACA,UACA,kBACC,KAAM,UAAW,GAClB,QACA,QACA,WACC,KAAM,UAAW,GAClB,gBACA,SACA,YACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,SACC,KAAM,UAAW,GAClB,aACC,KAAM,SAAU,GACjB,SACA,SACA,UACAtyF,EAAMoB,oBACN,OACA,QACA,OACApB,EAAM2B,qBAGR12B,KAAKsnH,+BACH,OACAvyF,EAAM2B,oBACN,KACC,KAAM,UAAW,GAClB,KACC,KAAM,UAAW,GAClB,KACC,KAAM,UAAW,IAGpB12B,KAAKunH,sBACH,QACA,QACA,gBACA,UACA,gBACA,UACA,iBACA,UACA,iBACA,UACA,oBACA,UACA,iBACA,UACA,kBACA,UACA,kBACA,UACA,mBACA,UACA,mBACA,UACA,sBACA,UACA,mBACA,WAGFvnH,KAAKwnH,oCACH,UACA,UACA,UACA,UACA,cACA,UACA,WACA,UACA,iBACA,UACA,UACA,UACA,SACC,KAAM,UAAW,GAClB,QACA,UACA,UACAzyF,EAAMoB,oBACN,aACC,KAAM,UAAW,IAGpBn2B,KAAKynH,0BACH,MACAznH,KAAKwnH,mCACL,QACAxnH,KAAKwnH,mCACL,QACA,SACA,OACAzyF,EAAM2B,qBAGR12B,KAAK0nH,2BAA6B,QAAS3yF,EAAMI,eAAen1B,KAAKynH,2BAErEznH,KAAK2nH,wBACH,aACA,SACA,gBACA,UACA,iBACA,UACA,YACC,KAAM,UAAW,GAClB,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,YACA,UACA,YACA,UACA,eACA,UACA,cACA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oH,yBACH,WACA,UACA,SACC,KAAM,UAAW,GAClB,QACA,UACA,YACA,UACA,SACA,SACA,OACA,UACA,kBACC,KAAM,UAAW,GAClB,QACA,QACA,WACC,KAAM,UAAW,GAClB,gBACA,SACA,YACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,SACC,KAAM,UAAW,GAClB,aACC,KAAM,SAAU,GACjB,SACA,SACA,UACA3zF,EAAMoB,oBACN,OACA,QACA,OACApB,EAAM2B,qBAGR12B,KAAK2oH,+BACH,OACA5zF,EAAM2B,oBACN,KACC,KAAM,UAAW,GAClB,KACC,KAAM,UAAW,GAClB,KACC,KAAM,UAAW,IAGpB12B,KAAK4oH,sBACH,QACA,QACA,gBACA,UACA,gBACA,UACA,iBACA,UACA,iBACA,UACA,oBACA,UACA,iBACA,UACA,kBACA,UACA,kBACA,UACA,mBACA,UACA,mBACA,UACA,sBACA,UACA,mBACA,WAGF5oH,KAAK6oH,oCACH,UACA,UACA,UACA,UACA,cACA,UACA,WACA,UACA,iBACA,UACA,UACA,UACA,SACC,KAAM,UAAW,GAClB,QACA,UACA,UACA9zF,EAAMoB,oBACN,aACC,KAAM,UAAW,IAGpBn2B,KAAK8oH,0BACH,MACA9oH,KAAK6oH,mCACL,QACA7oH,KAAK6oH,mCACL,QACA,SACA,OACA9zF,EAAM2B,qBAGR12B,KAAK+oH,2BAA6B,QAASh0F,EAAMI,eAAen1B,KAAK8oH,2BAErE9oH,KAAKgpH,wBACH,aACA,SACA,gBACA,UACA,iBACA,UACA,YACC,KAAM,UAAW,GAClB,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,YACA,UACA,YACA,UACA,eACA,UACA,cACA,UACA,eACA,UACA,cACA,UACA,uBACC,KAAM,QAAS,GAChB,oBACC,KAAM,QAAS,GAChB,gBACC,KAAM,QAAS,GAChB,iBACA,UACA,gBACA,UACA,mBACA,UACA,mBACAj0F,EAAMoB,oBACN,mBACApB,EAAMI,eAAeJ,EAAMoB,sBAG7Bn2B,KAAKipH,uBACH,UACA,QACA,YACA,QACA,QACA,QACA,QACA,QACA,OACA,QACA,WACA,SAGFjpH,KAAKkpH,wBACH,WACAn0F,EAAMI,eAAen1B,KAAKmoH,2BAC1B,eACApzF,EAAMI,eAAen1B,KAAKooH,+BAC1B,SACArzF,EAAMQ,iBAAiBv1B,KAAKuoH,yBAC5B,SACAxzF,EAAM6qB,kBAAkB5/C,KAAKwoH,yBAC7B,OACAzzF,EAAM6qB,kBAAkB5/C,KAAKyoH,uBAC7B,iBACA1zF,EAAM6qB,kBAAkB5/C,KAAK0oH,yBAC7B,uBACA3zF,EAAMI,eAAen1B,KAAK2oH,+BAC1B,MACA5zF,EAAMQ,iBAAiBv1B,KAAK4oH,sBAC5B,WACA7zF,EAAMQ,iBAAiBv1B,KAAK+oH,2BAC5B,QACAh0F,EAAM6qB,kBAAkB5/C,KAAKgpH,wBAC7B,OACAj0F,EAAM6qB,kBAAkB5/C,KAAKipH,uBAC7B,OACAl0F,EAAM2B,oBACN,YACA3B,EAAMI,eAAe,SACrB,UACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,iBACA,UACA,iBACA,UACA,eACA,UACA,OACA,QACA,cACAJ,EAAMI,gBAAgB,KAAM,UAAW,IACvC,OACAJ,EAAMM,kBAGRr1B,KAAKmpH,6BACH,YACAp0F,EAAMoB,oBACN,YACApB,EAAMoB,oBACN,WACApB,EAAMoB,qBAGRn2B,KAAKopH,yBACH,WACAr0F,EAAMI,eAAen1B,KAAKmoH,2BAC1B,eACApzF,EAAMI,eAAen1B,KAAKooH,+BAC1B,SACArzF,EAAMQ,iBAAiBv1B,KAAKuoH,yBAC5B,SACAxzF,EAAM6qB,kBAAkB5/C,KAAKwoH,yBAC7B,OACAzzF,EAAM6qB,kBAAkB5/C,KAAKyoH,uBAC7B,iBACA1zF,EAAM6qB,kBAAkB5/C,KAAK0oH,yBAC7B,uBACA3zF,EAAMI,eAAen1B,KAAK2oH,+BAC1B,MACA5zF,EAAMQ,iBAAiBv1B,KAAK4oH,sBAC5B,WACA7zF,EAAMQ,iBAAiBv1B,KAAK+oH,2BAC5B,QACAh0F,EAAM6qB,kBAAkB5/C,KAAKgpH,wBAC7B,OACAj0F,EAAM6qB,kBAAkB5/C,KAAKipH,uBAC7B,OACAl0F,EAAM2B,oBACN,YACA3B,EAAMI,eAAe,SACrB,aACAJ,EAAMI,eAAen1B,KAAKmpH,6BAC1B,WACAp0F,EAAMoB,qBAGRn2B,KAAKg3B,OAASh3B,KAAKqpH,uBACjB,iBACAt0F,EAAMI,eAAen1B,KAAKkpH,wBAC1B,aACAn0F,EAAMQ,iBAAiBv1B,KAAKopH,2BAKhCE,GAAI,WACFtpH,KAAKupH,wBACH,SACC,KAAM,QAAS,GAChB,YACA,UACA,aACC,KAAM,UAAW,IAGpBvpH,KAAKwpH,2BAA6B,SAAUz0F,EAAM6qB,kBAAkB5/C,KAAKupH,yBAEzEvpH,KAAKypH,+BACH,WACA,UACA,aACA,UACA,UACA,UACA,WACA,UACA,UACA,UACA,QACA,SAGFzpH,KAAK0pH,kCACH,UACA,UACA,OACA,UACA,iBACA,UACA,YACC,KAAM,UAAW,IAGpB1pH,KAAK2pH,wBACH,WACA,UACA,SACA,UACA,QACA,UACA,SACA,UACA,QACA,UACA,UACA50F,EAAMoB,oBACN,aACApB,EAAMI,eAAen1B,KAAK0pH,kCAC1B,OACA30F,EAAM2B,qBAGR12B,KAAK4pH,yBAA2B,SAAU70F,EAAMI,eAAen1B,KAAK2pH,yBAEpE3pH,KAAK6pH,yBACH,QACC,KAAM,QAAS,GAChB,aACC,KAAM,QAAS,GAChB,mBACC,KAAM,QAAS,GAChB,aACA,UACA,aACA,UACA,YACA,UACA,aACC,KAAM,QAAS,GAChB,cACA,UACA,aACA,UACA,aACA,WAGF7pH,KAAK8pH,uBACH,aACC,KAAM,QAAS,GAChB,aACC,KAAM,UAAW,GAClB,eACC,KAAM,QAAS,GAChB,eACC,KAAM,UAAW,GAClB,WACA,WAGF9pH,KAAK+pH,yBACH,WACA,UACA,SACC,KAAM,UAAW,GAClB,QACA,UACA,YACA,UACA,SACA,SACA,OACA,UACA,kBACC,KAAM,UAAW,GAClB,QACA,QACA,WACC,KAAM,UAAW,GAClB,gBACA,SACA,YACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,SACC,KAAM,UAAW,GAClB,aACC,KAAM,SAAU,GACjB,SACA,SACA,UACAh1F,EAAMoB,oBACN,OACA,QACA,OACApB,EAAM2B,qBAGR12B,KAAKgqH,+BACH,OACAj1F,EAAM2B,oBACN,KACC,KAAM,UAAW,GAClB,KACC,KAAM,UAAW,GAClB,KACC,KAAM,UAAW,IAGpB12B,KAAKiqH,sBACH,QACA,QACA,gBACA,UACA,gBACA,UACA,iBACA,UACA,iBACA,UACA,oBACA,UACA,iBACA,UACA,kBACA,UACA,kBACA,UACA,mBACA,UACA,mBACA,UACA,sBACA,UACA,mBACA,WAGFjqH,KAAKkqH,oCACH,UACA,UACA,UACA,UACA,cACA,UACA,WACA,UACA,iBACA,UACA,UACA,UACA,SACC,KAAM,UAAW,GAClB,QACA,UACA,UACAn1F,EAAMoB,oBACN,aACC,KAAM,UAAW,IAGpBn2B,KAAKmqH,0BACH,MACAnqH,KAAKkqH,mCACL,QACAlqH,KAAKkqH,mCACL,QACA,SACA,OACAn1F,EAAM2B,qBAGR12B,KAAKoqH,2BAA6B,QAASr1F,EAAMI,eAAen1B,KAAKmqH,2BAErEnqH,KAAKqqH,wBACH,aACA,SACA,gBACA,UACA,iBACA,UACA,YACC,KAAM,UAAW,GAClB,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,YACA,UACA,YACA,UACA,eACA,UACA,cACA,UACA,eACA,UACA,cACA,UACA,uBACC,KAAM,QAAS,GAChB,oBACC,KAAM,QAAS,GAChB,gBACC,KAAM,QAAS,GAChB,iBACA,UACA,gBACA,UACA,cACAt1F,EAAMoB,oBACN,iBACApB,EAAMoB,oBACN,mBACA,WAGFn2B,KAAKsqH,uBACH,UACA,QACA,YACA,QACA,QACA,QACA,QACA,QACA,OACA,QACA,WACA,SAGFtqH,KAAKuqH,wBACH,WACAx1F,EAAMI,eAAen1B,KAAKwpH,2BAC1B,eACAz0F,EAAMI,eAAen1B,KAAKypH,+BAC1B,SACA10F,EAAMQ,iBAAiBv1B,KAAK4pH,yBAC5B,SACA70F,EAAM6qB,kBAAkB5/C,KAAK6pH,yBAC7B,OACA90F,EAAM6qB,kBAAkB5/C,KAAK8pH,uBAC7B,iBACA/0F,EAAM6qB,kBAAkB5/C,KAAK+pH,yBAC7B,uBACAh1F,EAAMI,eAAen1B,KAAKgqH,+BAC1B,MACAj1F,EAAMQ,iBAAiBv1B,KAAKiqH,sBAC5B,WACAl1F,EAAMQ,iBAAiBv1B,KAAKoqH,2BAC5B,QACAr1F,EAAM6qB,kBAAkB5/C,KAAKqqH,wBAC7B,OACAt1F,EAAM6qB,kBAAkB5/C,KAAKsqH,uBAC7B,OACAv1F,EAAM2B,oBACN,UACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,iBACA,UACA,iBACA,UACA,eACA,UACA,OACA,QACA,cACA3B,EAAMI,gBAAgB,KAAM,UAAW,IACvC,OACAJ,EAAMM,kBAGRr1B,KAAKwqH,6BACH,YACAz1F,EAAMoB,oBACN,YACApB,EAAMoB,oBACN,WACApB,EAAMoB,qBAGRn2B,KAAKyqH,yBACH,WACA11F,EAAMI,eAAen1B,KAAKwpH,2BAC1B,eACAz0F,EAAMI,eAAen1B,KAAKypH,+BAC1B,SACA10F,EAAMQ,iBAAiBv1B,KAAK4pH,yBAC5B,SACA70F,EAAM6qB,kBAAkB5/C,KAAK6pH,yBAC7B,OACA90F,EAAM6qB,kBAAkB5/C,KAAK8pH,uBAC7B,iBACA/0F,EAAM6qB,kBAAkB5/C,KAAK+pH,yBAC7B,uBACAh1F,EAAMI,eAAen1B,KAAKgqH,+BAC1B,MACAj1F,EAAMQ,iBAAiBv1B,KAAKiqH,sBAC5B,WACAl1F,EAAMQ,iBAAiBv1B,KAAKoqH,2BAC5B,QACAr1F,EAAM6qB,kBAAkB5/C,KAAKqqH,wBAC7B,OACAt1F,EAAM6qB,kBAAkB5/C,KAAKsqH,uBAC7B,OACAv1F,EAAM2B,oBACN,aACA3B,EAAMI,eAAen1B,KAAKwqH,6BAC1B,WACAz1F,EAAMoB,qBAGRn2B,KAAKg3B,OAASh3B,KAAK0qH,uBACjB,iBACA31F,EAAMI,eAAen1B,KAAKuqH,wBAC1B,aACAx1F,EAAMQ,iBAAiBv1B,KAAKyqH,2BAKhCE,GAAI,WACF3qH,KAAK4qH,wBACH,SACC,KAAM,QAAS,GAChB,YACA,UACA,aACC,KAAM,UAAW,IAGpB5qH,KAAK6qH,2BAA6B,SAAU91F,EAAM6qB,kBAAkB5/C,KAAK4qH,yBAEzE5qH,KAAK8qH,+BACH,WACA,UACA,aACA,UACA,UACA,UACA,WACA,UACA,UACA,UACA,QACA,SAGF9qH,KAAK+qH,kCACH,UACA,UACA,OACA,UACA,iBACA,UACA,YACC,KAAM,UAAW,IAGpB/qH,KAAKgrH,wBACH,WACA,UACA,SACA,UACA,QACA,UACA,SACA,UACA,QACA,UACA,UACAj2F,EAAMoB,oBACN,aACApB,EAAMI,eAAen1B,KAAK+qH,kCAC1B,OACAh2F,EAAM2B,qBAGR12B,KAAKirH,yBAA2B,SAAUl2F,EAAMI,eAAen1B,KAAKgrH,yBAEpEhrH,KAAKkrH,yBACH,QACC,KAAM,QAAS,GAChB,aACC,KAAM,QAAS,GAChB,mBACC,KAAM,QAAS,GAChB,aACA,UACA,aACA,UACA,YACA,UACA,aACC,KAAM,QAAS,GAChB,cACA,UACA,aACA,UACA,aACA,WAGFlrH,KAAKmrH,uBACH,aACC,KAAM,QAAS,GAChB,aACC,KAAM,UAAW,GAClB,eACC,KAAM,QAAS,GAChB,eACC,KAAM,UAAW,GAClB,WACA,WAGFnrH,KAAKorH,yBACH,WACA,UACA,SACC,KAAM,UAAW,GAClB,QACA,UACA,YACA,UACA,SACA,SACA,OACA,UACA,kBACC,KAAM,UAAW,GAClB,QACA,QACA,WACC,KAAM,UAAW,GAClB,gBACA,SACA,YACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,SACC,KAAM,UAAW,GAClB,aACC,KAAM,SAAU,GACjB,SACA,SACA,UACAr2F,EAAMoB,oBACN,OACA,QACA,OACApB,EAAM2B,qBAGR12B,KAAKqrH,+BACH,OACAt2F,EAAM2B,oBACN,KACC,KAAM,UAAW,GAClB,KACC,KAAM,UAAW,GAClB,KACC,KAAM,UAAW,IAGpB12B,KAAKsrH,sBACH,QACA,QACA,gBACA,UACA,gBACA,UACA,iBACA,UACA,iBACA,UACA,oBACA,UACA,iBACA,UACA,kBACA,UACA,kBACA,UACA,mBACA,UACA,mBACA,UACA,sBACA,UACA,mBACA,WAGFtrH,KAAKurH,oCACH,UACA,UACA,UACA,UACA,cACA,UACA,WACA,UACA,iBACA,UACA,UACA,UACA,SACC,KAAM,UAAW,GAClB,QACA,UACA,UACAx2F,EAAMoB,oBACN,aACC,KAAM,UAAW,IAGpBn2B,KAAKwrH,0BACH,MACAxrH,KAAKurH,mCACL,QACAvrH,KAAKurH,mCACL,OACAx2F,EAAM2B,qBAGR12B,KAAKyrH,2BAA6B,QAAS12F,EAAMI,eAAen1B,KAAKwrH,2BAErExrH,KAAK0rH,wBACH,aACA,SACA,gBACA,UACA,iBACA,UACA,YACC,KAAM,UAAW,GAClB,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,YACA,UACA,YACA,UACA,eACA,UACA,cACA,UACA,eACA,UACA,cACA,UACA,uBACC,KAAM,QAAS,GAChB,oBACC,KAAM,QAAS,GAChB,gBACC,KAAM,QAAS,GAChB,iBACA,UACA,gBACA,UACA,cACA32F,EAAMoB,oBACN,iBACApB,EAAMoB,oBACN,mBACA,WAGFn2B,KAAK2rH,uBACH,UACA,QACA,YACA,QACA,QACA,QACA,QACA,QACA,OACA,QACA,WACA,SAGF3rH,KAAK4rH,wBACH,WACA72F,EAAMI,eAAen1B,KAAK6qH,2BAC1B,eACA91F,EAAMI,eAAen1B,KAAK8qH,+BAC1B,SACA/1F,EAAMQ,iBAAiBv1B,KAAKirH,yBAC5B,SACAl2F,EAAM6qB,kBAAkB5/C,KAAKkrH,yBAC7B,OACAn2F,EAAM6qB,kBAAkB5/C,KAAKmrH,uBAC7B,iBACAp2F,EAAM6qB,kBAAkB5/C,KAAKorH,yBAC7B,uBACAr2F,EAAMI,eAAen1B,KAAKqrH,+BAC1B,MACAt2F,EAAMQ,iBAAiBv1B,KAAKsrH,sBAC5B,WACAv2F,EAAMQ,iBAAiBv1B,KAAKyrH,2BAC5B,QACA12F,EAAM6qB,kBAAkB5/C,KAAK0rH,wBAC7B,OACA32F,EAAM6qB,kBAAkB5/C,KAAK2rH,uBAC7B,OACA52F,EAAM2B,oBACN,UACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,iBACA,UACA,iBACA,UACA,eACA,UACA,OACA,QACA,cACA3B,EAAMI,gBAAgB,KAAM,UAAW,IACvC,OACAJ,EAAMM,kBAGRr1B,KAAK6rH,6BACH,YACA92F,EAAMoB,oBACN,YACApB,EAAMoB,oBACN,WACApB,EAAMoB,qBAGRn2B,KAAK8rH,yBACH,WACA/2F,EAAMI,eAAen1B,KAAK6qH,2BAC1B,eACA91F,EAAMI,eAAen1B,KAAK8qH,+BAC1B,SACA/1F,EAAMQ,iBAAiBv1B,KAAKirH,yBAC5B,SACAl2F,EAAM6qB,kBAAkB5/C,KAAKkrH,yBAC7B,OACAn2F,EAAM6qB,kBAAkB5/C,KAAKmrH,uBAC7B,iBACAp2F,EAAM6qB,kBAAkB5/C,KAAKorH,yBAC7B,uBACAr2F,EAAMI,eAAen1B,KAAKqrH,+BAC1B,MACAt2F,EAAMQ,iBAAiBv1B,KAAKsrH,sBAC5B,WACAv2F,EAAMQ,iBAAiBv1B,KAAKyrH,2BAC5B,QACA12F,EAAM6qB,kBAAkB5/C,KAAK0rH,wBAC7B,OACA32F,EAAM6qB,kBAAkB5/C,KAAK2rH,uBAC7B,OACA52F,EAAM2B,oBACN,aACA3B,EAAMI,eAAen1B,KAAK6rH,6BAC1B,WACA92F,EAAMoB,qBAGRn2B,KAAKg3B,OAASh3B,KAAK+rH,uBACjB,iBACAh3F,EAAMI,eAAen1B,KAAK4rH,wBAC1B,aACA72F,EAAMQ,iBAAiBv1B,KAAK8rH,2BAKhCE,GAAI,WACFhsH,KAAKisH,wBACH,SACC,KAAM,QAAS,GAChB,YACA,UACA,aACC,KAAM,UAAW,IAGpBjsH,KAAKksH,2BAA6B,SAAUn3F,EAAM6qB,kBAAkB5/C,KAAKisH,yBAEzEjsH,KAAKmsH,kCACH,UACA,UACA,OACA,UACA,iBACA,UACA,YACC,KAAM,UAAW,IAGpBnsH,KAAKosH,wBACH,WACA,UACA,SACA,UACA,QACA,UACA,SACA,UACA,QACA,UACA,UACAr3F,EAAMoB,oBACN,aACApB,EAAMI,eAAen1B,KAAKmsH,kCAC1B,OACAp3F,EAAM2B,qBAGR12B,KAAKqsH,yBAA2B,SAAUt3F,EAAMI,eAAen1B,KAAKosH,yBAEpEpsH,KAAKssH,yBACH,QACC,KAAM,QAAS,GAChB,aACC,KAAM,QAAS,GAChB,mBACC,KAAM,QAAS,GAChB,aACA,UACA,aACA,UACA,YACA,UACA,aACC,KAAM,QAAS,GAChB,cACA,UACA,aACA,UACA,aACA,WAGFtsH,KAAKusH,uBACH,aACC,KAAM,QAAS,GAChB,aACC,KAAM,UAAW,GAClB,eACC,KAAM,QAAS,GAChB,eACC,KAAM,UAAW,GAClB,WACA,WAGFvsH,KAAKwsH,yBACH,WACA,UACA,SACC,KAAM,UAAW,GAClB,QACA,UACA,YACA,UACA,SACA,SACA,OACA,UACA,kBACC,KAAM,UAAW,GAClB,QACA,QACA,WACC,KAAM,UAAW,GAClB,gBACA,SACA,YACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,SACC,KAAM,UAAW,GAClB,aACC,KAAM,SAAU,GACjB,SACA,SACA,UACAz3F,EAAMoB,oBACN,OACA,QACA,OACApB,EAAM2B,qBAGR12B,KAAKysH,8BACH,OACA13F,EAAM2B,oBACN,KACC,KAAM,UAAW,GAClB,KACC,KAAM,UAAW,GAClB,KACC,KAAM,UAAW,IAGpB12B,KAAK0sH,sBACH,QACA,QACA,gBACA,UACA,gBACA,UACA,iBACA,UACA,iBACA,UACA,oBACA,UACA,iBACA,UACA,kBACA,UACA,kBACA,UACA,mBACA,UACA,mBACA,UACA,sBACA,UACA,mBACA,WAGF1sH,KAAK2sH,oCACH,UACA,UACA,UACA,UACA,cACA,UACA,WACA,UACA,iBACA,UACA,UACA,UACA,SACC,KAAM,UAAW,GAClB,QACA,UACA,UACA53F,EAAMoB,oBACN,aACC,KAAM,UAAW,IAGpBn2B,KAAK4sH,0BACH,MACA5sH,KAAK2sH,mCACL,QACA3sH,KAAK2sH,mCACL,OACA53F,EAAM2B,qBAGR12B,KAAK6sH,2BAA6B,QAAS93F,EAAMI,eAAen1B,KAAK4sH,2BAErE5sH,KAAK8sH,wBACH,aACA,SACA,gBACA,UACA,iBACA,UACA,YACC,KAAM,UAAW,GAClB,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,YACA,UACA,YACA,UACA,eACA,UACA,cACA,UACA,eACA,UACA,cACA,UACA,uBACC,KAAM,QAAS,GAChB,oBACC,KAAM,QAAS,GAChB,gBACC,KAAM,QAAS,GAChB,iBACA,UACA,gBACA,UACA,cACA/3F,EAAMoB,oBACN,iBACApB,EAAMoB,oBACN,mBACA,WAGFn2B,KAAK+sH,uBACH,UACA,QACA,YACA,QACA,QACA,QACA,QACA,QACA,OACA,QACA,WACA,SAGF/sH,KAAKgtH,wBACH,WACAj4F,EAAMI,eAAen1B,KAAKksH,2BAC1B,SACAn3F,EAAMQ,iBAAiBv1B,KAAKqsH,yBAC5B,SACAt3F,EAAM6qB,kBAAkB5/C,KAAKssH,yBAC7B,OACAv3F,EAAM6qB,kBAAkB5/C,KAAKusH,uBAC7B,iBACAx3F,EAAM6qB,kBAAkB5/C,KAAKwsH,yBAC7B,uBACAz3F,EAAMI,eAAen1B,KAAKysH,8BAC1B,MACA13F,EAAMQ,iBAAiBv1B,KAAK0sH,sBAC5B,WACA33F,EAAMQ,iBAAiBv1B,KAAK6sH,2BAC5B,QACA93F,EAAM6qB,kBAAkB5/C,KAAK8sH,wBAC7B,OACA/3F,EAAM6qB,kBAAkB5/C,KAAK+sH,uBAC7B,OACAh4F,EAAM2B,oBACN,UACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,iBACA,UACA,iBACA,UACA,eACA,UACA,OACA,QACA,cACA3B,EAAMI,gBAAgB,KAAM,UAAW,KAGzCn1B,KAAKitH,6BACH,YACAl4F,EAAMoB,oBACN,YACApB,EAAMoB,oBACN,WACApB,EAAMoB,qBAGRn2B,KAAKktH,yBACH,WACAn4F,EAAMI,eAAen1B,KAAKksH,2BAC1B,SACAn3F,EAAMQ,iBAAiBv1B,KAAKqsH,yBAC5B,SACAt3F,EAAM6qB,kBAAkB5/C,KAAKssH,yBAC7B,OACAv3F,EAAM6qB,kBAAkB5/C,KAAKusH,uBAC7B,iBACAx3F,EAAM6qB,kBAAkB5/C,KAAKwsH,yBAC7B,uBACAz3F,EAAMI,eAAen1B,KAAKysH,8BAC1B,MACA13F,EAAMQ,iBAAiBv1B,KAAK0sH,sBAC5B,WACA33F,EAAMQ,iBAAiBv1B,KAAK6sH,2BAC5B,QACA93F,EAAM6qB,kBAAkB5/C,KAAK8sH,wBAC7B,OACA/3F,EAAM6qB,kBAAkB5/C,KAAK+sH,uBAC7B,OACAh4F,EAAM2B,oBACN,aACA3B,EAAMI,eAAen1B,KAAKitH,6BAC1B,WACAl4F,EAAMoB,qBAGRn2B,KAAKg3B,OAASh3B,KAAKmtH,uBACjB,iBACAp4F,EAAMI,eAAen1B,KAAKgtH,wBAC1B,aACAj4F,EAAMQ,iBAAiBv1B,KAAKktH,2BAKhCE,GAAI,WACFptH,KAAKqtH,wBACH,SACC,KAAM,QAAS,GAChB,YACA,UACA,aACC,KAAM,UAAW,IAGpBrtH,KAAKstH,2BAA6B,SAAUv4F,EAAM6qB,kBAAkB5/C,KAAKqtH,yBAEzErtH,KAAKutH,kCACH,UACA,UACA,OACA,UACA,iBACA,UACA,YACC,KAAM,UAAW,IAGpBvtH,KAAKwtH,wBACH,WACA,UACA,SACA,UACA,QACA,UACA,SACA,UACA,QACA,UACA,UACAz4F,EAAMoB,oBACN,aACApB,EAAMI,eAAen1B,KAAKutH,kCAC1B,OACAx4F,EAAM2B,qBAGR12B,KAAKytH,yBAA2B,SAAU14F,EAAMI,eAAen1B,KAAKwtH,yBAEpExtH,KAAK0tH,yBACH,QACC,KAAM,QAAS,GAChB,aACC,KAAM,QAAS,GAChB,mBACC,KAAM,QAAS,GAChB,aACA,UACA,aACA,UACA,YACA,UACA,aACC,KAAM,QAAS,GAChB,cACA,WAGF1tH,KAAK2tH,uBACH,aACC,KAAM,QAAS,GAChB,aACC,KAAM,UAAW,GAClB,eACC,KAAM,QAAS,GAChB,eACC,KAAM,UAAW,GAClB,WACA,WAGF3tH,KAAK4tH,yBACH,WACA,UACA,SACC,KAAM,UAAW,GAClB,QACA,UACA,YACA,UACA,SACA,SACA,OACA,UACA,kBACC,KAAM,UAAW,GAClB,QACA,QACA,WACC,KAAM,UAAW,GAClB,gBACA,SACA,YACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,SACC,KAAM,UAAW,GAClB,aACC,KAAM,SAAU,GACjB,SACA,SACA,UACA74F,EAAMoB,oBACN,OACA,QACA,OACApB,EAAM2B,qBAGR12B,KAAK6tH,8BACH,OACA94F,EAAM2B,oBACN,KACC,KAAM,UAAW,GAClB,KACC,KAAM,UAAW,GAClB,KACC,KAAM,UAAW,IAGpB12B,KAAK8tH,sBACH,QACA,QACA,gBACA,UACA,gBACA,UACA,iBACA,UACA,iBACA,UACA,oBACA,UACA,iBACA,UACA,kBACA,UACA,kBACA,UACA,mBACA,UACA,mBACA,UACA,sBACA,UACA,mBACA,WAGF9tH,KAAK+tH,oCACH,UACA,UACA,UACA,UACA,cACA,UACA,WACA,UACA,iBACA,UACA,UACA,UACA,SACC,KAAM,UAAW,GAClB,QACA,UACA,UACAh5F,EAAMoB,oBACN,aACC,KAAM,UAAW,IAGpBn2B,KAAKguH,0BACH,MACAhuH,KAAK+tH,mCACL,QACA/tH,KAAK+tH,mCACL,OACAh5F,EAAM2B,qBAGR12B,KAAKiuH,2BAA6B,QAASl5F,EAAMI,eAAen1B,KAAKguH,2BAErEhuH,KAAKkuH,wBACH,aACA,SACA,gBACA,UACA,iBACA,UACA,YACC,KAAM,UAAW,GAClB,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,YACA,UACA,YACA,UACA,eACA,UACA,cACA,UACA,eACA,UACA,cACA,UACA,uBACC,KAAM,QAAS,GAChB,oBACC,KAAM,QAAS,GAChB,gBACC,KAAM,QAAS,GAChB,iBACA,UACA,gBACA,UACA,cACAn5F,EAAMoB,oBACN,iBACApB,EAAMoB,oBACN,mBACA,WAGFn2B,KAAKmuH,uBACH,UACA,QACA,YACA,QACA,QACA,QACA,QACA,QACA,OACA,QACA,WACA,SAGFnuH,KAAKouH,wBACH,WACAr5F,EAAMI,eAAen1B,KAAKstH,2BAC1B,SACAv4F,EAAMQ,iBAAiBv1B,KAAKytH,yBAC5B,SACA14F,EAAM6qB,kBAAkB5/C,KAAK0tH,yBAC7B,OACA34F,EAAM6qB,kBAAkB5/C,KAAK2tH,uBAC7B,iBACA54F,EAAM6qB,kBAAkB5/C,KAAK4tH,yBAC7B,uBACA74F,EAAMI,eAAen1B,KAAK6tH,8BAC1B,MACA94F,EAAMQ,iBAAiBv1B,KAAK8tH,sBAC5B,WACA/4F,EAAMQ,iBAAiBv1B,KAAKiuH,2BAC5B,QACAl5F,EAAM6qB,kBAAkB5/C,KAAKkuH,wBAC7B,OACAn5F,EAAM6qB,kBAAkB5/C,KAAKmuH,uBAC7B,OACAp5F,EAAM2B,oBACN,UACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,iBACA,UACA,iBACA,UACA,eACA,UACA,OACA,QACA,cACA3B,EAAMI,gBAAgB,KAAM,UAAW,KAGzCn1B,KAAKquH,6BACH,YACAt5F,EAAMoB,oBACN,YACApB,EAAMoB,oBACN,WACApB,EAAMoB,qBAGRn2B,KAAKsuH,yBACH,WACAv5F,EAAMI,eAAen1B,KAAKstH,2BAC1B,SACAv4F,EAAMQ,iBAAiBv1B,KAAKytH,yBAC5B,SACA14F,EAAM6qB,kBAAkB5/C,KAAK0tH,yBAC7B,OACA34F,EAAM6qB,kBAAkB5/C,KAAK2tH,uBAC7B,iBACA54F,EAAM6qB,kBAAkB5/C,KAAK4tH,yBAC7B,uBACA74F,EAAMI,eAAen1B,KAAK6tH,8BAC1B,MACA94F,EAAMQ,iBAAiBv1B,KAAK8tH,sBAC5B,WACA/4F,EAAMQ,iBAAiBv1B,KAAKiuH,2BAC5B,QACAl5F,EAAM6qB,kBAAkB5/C,KAAKkuH,wBAC7B,OACAn5F,EAAM6qB,kBAAkB5/C,KAAKmuH,uBAC7B,OACAp5F,EAAM2B,oBACN,aACA3B,EAAMI,eAAen1B,KAAKquH,6BAC1B,WACAt5F,EAAMoB,qBAGRn2B,KAAKg3B,OAASh3B,KAAKuuH,uBACjB,iBACAx5F,EAAMI,eAAen1B,KAAKouH,wBAC1B,aACAr5F,EAAMQ,iBAAiBv1B,KAAKsuH,2BAKhCnlD,GAAI,WACFnpE,KAAKwuH,wBACH,SACC,KAAM,QAAS,GAChB,YACA,UACA,aACC,KAAM,UAAW,IAGpBxuH,KAAKyuH,2BAA6B,SAAU15F,EAAM6qB,kBAAkB5/C,KAAKwuH,yBAEzExuH,KAAK0uH,kCACH,UACA,UACA,OACA,UACA,iBACA,UACA,YACC,KAAM,UAAW,IAGpB1uH,KAAK2uH,wBACH,WACA,UACA,SACA,UACA,QACA,UACA,QACA,UACA,UACA55F,EAAMoB,oBACN,aACApB,EAAMI,eAAen1B,KAAK0uH,kCAC1B,OACA35F,EAAM2B,qBAGR12B,KAAK4uH,yBAA2B,SAAU75F,EAAMI,eAAen1B,KAAK2uH,yBAEpE3uH,KAAK6uH,yBACH,QACC,KAAM,QAAS,GAChB,aACC,KAAM,QAAS,GAChB,mBACC,KAAM,QAAS,GAChB,aACA,UACA,aACA,UACA,YACA,UACA,aACC,KAAM,QAAS,GAChB,cACA,WAGF7uH,KAAK8uH,uBACH,aACC,KAAM,QAAS,GAChB,aACC,KAAM,UAAW,GAClB,eACC,KAAM,QAAS,GAChB,eACC,KAAM,UAAW,GAClB,WACA,WAGF9uH,KAAK+uH,yBACH,WACA,UACA,SACC,KAAM,UAAW,GAClB,QACA,UACA,YACA,UACA,SACA,SACA,OACA,UACA,kBACC,KAAM,UAAW,GAClB,QACA,QACA,WACC,KAAM,UAAW,GAClB,gBACA,SACA,YACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,SACC,KAAM,UAAW,GAClB,aACC,KAAM,SAAU,GACjB,SACA,SACA,UACAh6F,EAAMoB,oBACN,OACA,QACA,OACApB,EAAM2B,qBAGR12B,KAAKgvH,8BACH,OACAj6F,EAAM2B,oBACN,KACC,KAAM,UAAW,GAClB,KACC,KAAM,UAAW,GAClB,KACC,KAAM,UAAW,IAGpB12B,KAAKivH,sBACH,QACA,QACA,gBACA,UACA,gBACA,UACA,iBACA,UACA,iBACA,UACA,oBACA,UACA,iBACA,UACA,kBACA,UACA,kBACA,UACA,mBACA,UACA,mBACA,UACA,sBACA,UACA,mBACA,WAGFjvH,KAAKkvH,oCACH,UACA,UACA,UACA,UACA,cACA,UACA,WACA,UACA,iBACA,UACA,UACA,UACA,SACC,KAAM,UAAW,GAClB,QACA,UACA,UACAn6F,EAAMoB,oBACN,aACC,KAAM,UAAW,IAGpBn2B,KAAKmvH,0BACH,MACAnvH,KAAKkvH,mCACL,QACAlvH,KAAKkvH,mCACL,OACAn6F,EAAM2B,qBAGR12B,KAAKovH,2BAA6B,QAASr6F,EAAMI,eAAen1B,KAAKmvH,2BAErEnvH,KAAKqvH,wBACH,aACA,SACA,gBACA,UACA,iBACA,UACA,YACC,KAAM,UAAW,GAClB,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,YACA,UACA,YACA,UACA,eACA,UACA,cACA,UACA,eACA,UACA,cACA,UACA,uBACC,KAAM,QAAS,GAChB,oBACC,KAAM,QAAS,GAChB,gBACC,KAAM,QAAS,GAChB,iBACA,UACA,gBACA,UACA,cACAt6F,EAAMoB,oBACN,iBACApB,EAAMoB,oBACN,mBACA,WAGFn2B,KAAKsvH,uBACH,UACA,QACA,YACA,QACA,QACA,QACA,QACA,QACA,OACA,QACA,WACA,SAGFtvH,KAAKuvH,wBACH,WACAx6F,EAAMI,eAAen1B,KAAKyuH,2BAC1B,SACA15F,EAAMQ,iBAAiBv1B,KAAK4uH,yBAC5B,SACA75F,EAAM6qB,kBAAkB5/C,KAAK6uH,yBAC7B,OACA95F,EAAM6qB,kBAAkB5/C,KAAK8uH,uBAC7B,iBACA/5F,EAAM6qB,kBAAkB5/C,KAAK+uH,yBAC7B,uBACAh6F,EAAMI,eAAen1B,KAAKgvH,8BAC1B,MACAj6F,EAAMQ,iBAAiBv1B,KAAKivH,sBAC5B,WACAl6F,EAAMQ,iBAAiBv1B,KAAKovH,2BAC5B,QACAr6F,EAAM6qB,kBAAkB5/C,KAAKqvH,wBAC7B,OACAt6F,EAAM6qB,kBAAkB5/C,KAAKsvH,uBAC7B,OACAv6F,EAAM2B,oBACN,UACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,iBACA,UACA,iBACA,UACA,eACA,UACA,OACA,QACA,cACA3B,EAAMI,gBAAgB,KAAM,UAAW,KAGzCn1B,KAAKwvH,6BACH,YACAz6F,EAAMoB,oBACN,YACApB,EAAMoB,oBACN,WACApB,EAAMoB,qBAGRn2B,KAAKyvH,yBACH,WACA16F,EAAMI,eAAen1B,KAAKyuH,2BAC1B,SACA15F,EAAMQ,iBAAiBv1B,KAAK4uH,yBAC5B,SACA75F,EAAM6qB,kBAAkB5/C,KAAK6uH,yBAC7B,OACA95F,EAAM6qB,kBAAkB5/C,KAAK8uH,uBAC7B,iBACA/5F,EAAM6qB,kBAAkB5/C,KAAK+uH,yBAC7B,uBACAh6F,EAAMI,eAAen1B,KAAKgvH,8BAC1B,MACAj6F,EAAMQ,iBAAiBv1B,KAAKivH,sBAC5B,WACAl6F,EAAMQ,iBAAiBv1B,KAAKovH,2BAC5B,QACAr6F,EAAM6qB,kBAAkB5/C,KAAKqvH,wBAC7B,OACAt6F,EAAM6qB,kBAAkB5/C,KAAKsvH,uBAC7B,OACAv6F,EAAM2B,oBACN,aACA3B,EAAMI,eAAen1B,KAAKwvH,6BAC1B,WACAz6F,EAAMoB,qBAGRn2B,KAAKg3B,OAASh3B,KAAK0vH,uBACjB,iBACA36F,EAAMI,eAAen1B,KAAKuvH,wBAC1B,aACAx6F,EAAMQ,iBAAiBv1B,KAAKyvH,2BAKhCrlD,GAAI,WACFpqE,KAAK2vH,wBACH,SACC,KAAM,QAAS,GAChB,YACA,UACA,aACC,KAAM,UAAW,IAGpB3vH,KAAK4vH,2BAA6B,SAAU76F,EAAM6qB,kBAAkB5/C,KAAK2vH,yBAEzE3vH,KAAK6vH,kCACH,UACA,UACA,OACA,UACA,iBACA,UACA,YACC,KAAM,UAAW,IAGpB7vH,KAAK8vH,wBACH,WACA,UACA,SACA,UACA,QACA,UACA,QACA,UACA,UACA/6F,EAAMoB,oBACN,aACApB,EAAMI,eAAen1B,KAAK6vH,kCAC1B,OACA96F,EAAM2B,qBAGR12B,KAAK+vH,yBAA2B,SAAUh7F,EAAMI,eAAen1B,KAAK8vH,yBAEpE9vH,KAAKgwH,yBACH,QACC,KAAM,QAAS,GAChB,aACC,KAAM,QAAS,GAChB,mBACC,KAAM,QAAS,GAChB,aACA,UACA,aACA,UACA,YACA,UACA,aACC,KAAM,QAAS,GAChB,cACA,WAGFhwH,KAAKiwH,uBACH,aACC,KAAM,QAAS,GAChB,aACC,KAAM,UAAW,GAClB,eACC,KAAM,QAAS,GAChB,eACC,KAAM,UAAW,GAClB,WACA,WAGFjwH,KAAKkwH,yBACH,WACA,UACA,SACC,KAAM,UAAW,GAClB,QACA,UACA,YACA,UACA,SACA,SACA,OACA,UACA,kBACC,KAAM,UAAW,GAClB,QACA,QACA,WACC,KAAM,UAAW,GAClB,gBACA,SACA,YACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,SACC,KAAM,UAAW,GAClB,aACC,KAAM,SAAU,GACjB,SACA,SACA,UACAn7F,EAAMoB,oBACN,OACA,QACA,OACApB,EAAM2B,qBAGR12B,KAAKmwH,8BACH,OACAp7F,EAAM2B,oBACN,KACC,KAAM,UAAW,GAClB,KACC,KAAM,UAAW,GAClB,KACC,KAAM,UAAW,IAGpB12B,KAAKowH,sBACH,QACA,QACA,gBACA,UACA,gBACA,UACA,iBACA,UACA,iBACA,UACA,oBACA,UACA,iBACA,UACA,kBACA,UACA,kBACA,UACA,mBACA,UACA,mBACA,UACA,sBACA,UACA,mBACA,WAGFpwH,KAAKqwH,oCACH,UACA,UACA,UACA,UACA,cACA,UACA,WACA,UACA,iBACA,UACA,UACA,UACA,SACC,KAAM,UAAW,GAClB,QACA,UACA,UACAt7F,EAAMoB,oBACN,aACC,KAAM,UAAW,IAGpBn2B,KAAKswH,0BACH,MACAtwH,KAAKqwH,mCACL,QACArwH,KAAKqwH,mCACL,OACAt7F,EAAM2B,qBAGR12B,KAAKuwH,2BAA6B,QAASx7F,EAAMI,eAAen1B,KAAKswH,2BAErEtwH,KAAKwwH,wBACH,aACA,SACA,gBACA,UACA,iBACA,UACA,YACC,KAAM,UAAW,GAClB,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,YACA,UACA,YACA,UACA,eACA,UACA,cACA,UACA,eACA,UACA,cACA,UACA,uBACC,KAAM,QAAS,GAChB,oBACC,KAAM,QAAS,GAChB,gBACC,KAAM,QAAS,GAChB,iBACA,UACA,gBACA,UACA,cACAz7F,EAAMoB,oBACN,iBACApB,EAAMoB,qBAGRn2B,KAAKywH,uBACH,UACA,QACA,YACA,QACA,QACA,QACA,QACA,QACA,OACA,QACA,WACA,SAGFzwH,KAAK0wH,wBACH,WACA37F,EAAMI,eAAen1B,KAAK4vH,2BAC1B,SACA76F,EAAMQ,iBAAiBv1B,KAAK+vH,yBAC5B,SACAh7F,EAAM6qB,kBAAkB5/C,KAAKgwH,yBAC7B,OACAj7F,EAAM6qB,kBAAkB5/C,KAAKiwH,uBAC7B,iBACAl7F,EAAM6qB,kBAAkB5/C,KAAKkwH,yBAC7B,uBACAn7F,EAAMI,eAAen1B,KAAKmwH,8BAC1B,MACAp7F,EAAMQ,iBAAiBv1B,KAAKowH,sBAC5B,WACAr7F,EAAMQ,iBAAiBv1B,KAAKuwH,2BAC5B,QACAx7F,EAAM6qB,kBAAkB5/C,KAAKwwH,wBAC7B,OACAz7F,EAAM6qB,kBAAkB5/C,KAAKywH,uBAC7B,OACA17F,EAAM2B,oBACN,UACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,iBACA,UACA,iBACA,UACA,eACA,UACA,OACA,QACA,cACA3B,EAAMI,gBAAgB,KAAM,UAAW,KAGzCn1B,KAAK2wH,6BACH,YACA57F,EAAMoB,oBACN,YACApB,EAAMoB,oBACN,WACApB,EAAMoB,qBAGRn2B,KAAK4wH,yBACH,WACA77F,EAAMI,eAAen1B,KAAK4vH,2BAC1B,SACA76F,EAAMQ,iBAAiBv1B,KAAK+vH,yBAC5B,SACAh7F,EAAM6qB,kBAAkB5/C,KAAKgwH,yBAC7B,OACAj7F,EAAM6qB,kBAAkB5/C,KAAKiwH,uBAC7B,iBACAl7F,EAAM6qB,kBAAkB5/C,KAAKkwH,yBAC7B,uBACAn7F,EAAMI,eAAen1B,KAAKmwH,8BAC1B,MACAp7F,EAAMQ,iBAAiBv1B,KAAKowH,sBAC5B,WACAr7F,EAAMQ,iBAAiBv1B,KAAKuwH,2BAC5B,QACAx7F,EAAM6qB,kBAAkB5/C,KAAKwwH,wBAC7B,OACAz7F,EAAM6qB,kBAAkB5/C,KAAKywH,uBAC7B,OACA17F,EAAM2B,oBACN,aACA3B,EAAMI,eAAen1B,KAAK2wH,6BAC1B,WACA57F,EAAMoB,qBAGRn2B,KAAKg3B,OAASh3B,KAAK6wH,uBACjB,iBACA97F,EAAMI,eAAen1B,KAAK0wH,wBAC1B,aACA37F,EAAMQ,iBAAiBv1B,KAAK4wH,2BAKhCvlD,GAAI,WACFrrE,KAAK8wH,wBACH,SACC,KAAM,QAAS,GAChB,YACA,UACA,aACC,KAAM,UAAW,IAGpB9wH,KAAK+wH,2BAA6B,SAAUh8F,EAAM6qB,kBAAkB5/C,KAAK8wH,yBAEzE9wH,KAAKgxH,kCACH,UACA,UACA,OACA,UACA,iBACA,UACA,YACC,KAAM,UAAW,IAGpBhxH,KAAKixH,wBACH,WACA,UACA,SACA,UACA,QACA,UACA,QACA,UACA,UACAl8F,EAAMoB,oBACN,aACApB,EAAMI,eAAen1B,KAAKgxH,kCAC1B,OACAj8F,EAAM2B,qBAGR12B,KAAKkxH,yBAA2B,SAAUn8F,EAAMI,eAAen1B,KAAKixH,yBAEpEjxH,KAAKmxH,yBACH,QACC,KAAM,QAAS,GAChB,aACC,KAAM,QAAS,GAChB,mBACC,KAAM,QAAS,GAChB,aACA,UACA,aACA,UACA,YACA,UACA,aACC,KAAM,QAAS,GAChB,cACA,WAGFnxH,KAAKoxH,uBACH,aACC,KAAM,QAAS,GAChB,aACC,KAAM,UAAW,GAClB,eACC,KAAM,QAAS,GAChB,eACC,KAAM,UAAW,GAClB,WACA,WAGFpxH,KAAKqxH,yBACH,WACA,UACA,SACC,KAAM,UAAW,GAClB,QACA,UACA,YACA,UACA,SACA,SACA,OACA,UACA,kBACC,KAAM,UAAW,GAClB,QACA,QACA,WACC,KAAM,UAAW,GAClB,gBACA,SACA,YACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,SACC,KAAM,UAAW,GAClB,aACC,KAAM,SAAU,GACjB,SACA,SACA,UACAt8F,EAAMoB,oBACN,OACA,QACA,OACApB,EAAM2B,qBAGR12B,KAAKsxH,sBACH,QACA,QACA,gBACA,UACA,iBACA,UACA,iBACA,UACA,oBACA,UACA,iBACA,UACA,kBACA,UACA,mBACA,UACA,mBACA,UACA,sBACA,UACA,mBACA,WAGFtxH,KAAKuxH,oCACH,UACA,UACA,UACA,UACA,cACA,UACA,WACA,UACA,iBACA,UACA,UACA,UACA,SACC,KAAM,UAAW,GAClB,QACA,UACA,UACAx8F,EAAMoB,oBACN,aACC,KAAM,UAAW,IAGpBn2B,KAAKwxH,0BACH,MACAxxH,KAAKuxH,mCACL,QACAvxH,KAAKuxH,mCACL,OACAx8F,EAAM2B,qBAGR12B,KAAKyxH,2BAA6B,QAAS18F,EAAMI,eAAen1B,KAAKwxH,2BAErExxH,KAAK0xH,wBACH,aACA,SACA,gBACA,UACA,iBACA,UACA,YACC,KAAM,UAAW,GAClB,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,YACA,UACA,YACA,UACA,eACA,UACA,cACA,UACA,eACA,UACA,cACA,UACA,uBACC,KAAM,QAAS,GAChB,oBACC,KAAM,QAAS,GAChB,gBACC,KAAM,QAAS,GAChB,iBACA,UACA,gBACA,UACA,cACA38F,EAAMoB,oBACN,iBACApB,EAAMoB,qBAGRn2B,KAAK2xH,uBACH,UACA,QACA,YACA,QACA,QACA,QACA,QACA,QACA,OACA,QACA,WACA,SAGF3xH,KAAK4xH,wBACH,WACA78F,EAAMI,eAAen1B,KAAK+wH,2BAC1B,SACAh8F,EAAMQ,iBAAiBv1B,KAAKkxH,yBAC5B,SACAn8F,EAAM6qB,kBAAkB5/C,KAAKmxH,yBAC7B,OACAp8F,EAAM6qB,kBAAkB5/C,KAAKoxH,uBAC7B,iBACAr8F,EAAM6qB,kBAAkB5/C,KAAKqxH,yBAC7B,MACAt8F,EAAMQ,iBAAiBv1B,KAAKsxH,sBAC5B,WACAv8F,EAAMQ,iBAAiBv1B,KAAKyxH,2BAC5B,QACA18F,EAAM6qB,kBAAkB5/C,KAAK0xH,wBAC7B,OACA38F,EAAM6qB,kBAAkB5/C,KAAK2xH,uBAC7B,OACA58F,EAAM2B,oBACN,UACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,iBACA,UACA,iBACA,UACA,eACA,UACA,OACA,QACA,cACA3B,EAAMI,gBAAgB,KAAM,UAAW,KAGzCn1B,KAAK6xH,6BACH,YACA98F,EAAMoB,oBACN,YACApB,EAAMoB,oBACN,WACApB,EAAMoB,qBAGRn2B,KAAK8xH,yBACH,WACA/8F,EAAMI,eAAen1B,KAAK+wH,2BAC1B,SACAh8F,EAAMQ,iBAAiBv1B,KAAKkxH,yBAC5B,SACAn8F,EAAM6qB,kBAAkB5/C,KAAKmxH,yBAC7B,OACAp8F,EAAM6qB,kBAAkB5/C,KAAKoxH,uBAC7B,iBACAr8F,EAAM6qB,kBAAkB5/C,KAAKqxH,yBAC7B,MACAt8F,EAAMQ,iBAAiBv1B,KAAKsxH,sBAC5B,WACAv8F,EAAMQ,iBAAiBv1B,KAAKyxH,2BAC5B,QACA18F,EAAM6qB,kBAAkB5/C,KAAK0xH,wBAC7B,OACA38F,EAAM6qB,kBAAkB5/C,KAAK2xH,uBAC7B,OACA58F,EAAM2B,oBACN,aACA3B,EAAMI,eAAen1B,KAAK6xH,6BAC1B,WACA98F,EAAMoB,qBAGRn2B,KAAKg3B,OAASh3B,KAAK+xH,uBACjB,iBACAh9F,EAAMI,eAAen1B,KAAK4xH,wBAC1B,aACA78F,EAAMQ,iBAAiBv1B,KAAK8xH,2BAKhCxlD,GAAI,WACFtsE,KAAKgyH,wBACH,SACC,KAAM,QAAS,GAChB,YACA,UACA,aACC,KAAM,UAAW,IAGpBhyH,KAAKiyH,2BAA6B,SAAUl9F,EAAM6qB,kBAAkB5/C,KAAKgyH,yBAEzEhyH,KAAKkyH,kCACH,UACA,UACA,OACA,UACA,iBACA,UACA,YACC,KAAM,UAAW,IAGpBlyH,KAAKmyH,wBACH,WACA,UACA,SACA,UACA,QACA,UACA,QACA,UACA,UACAp9F,EAAMoB,oBACN,aACApB,EAAMI,eAAen1B,KAAKkyH,kCAC1B,OACAn9F,EAAM2B,qBAGR12B,KAAKoyH,yBAA2B,SAAUr9F,EAAMI,eAAen1B,KAAKmyH,yBAEpEnyH,KAAKqyH,yBACH,QACC,KAAM,QAAS,GAChB,aACC,KAAM,QAAS,GAChB,aACA,UACA,aACA,UACA,aACC,KAAM,QAAS,GAChB,cACA,WAGFryH,KAAKsyH,uBACH,aACC,KAAM,QAAS,GAChB,aACC,KAAM,UAAW,GAClB,eACC,KAAM,QAAS,GAChB,eACC,KAAM,UAAW,GAClB,WACA,WAGFtyH,KAAKuyH,yBACH,WACA,UACA,SACC,KAAM,UAAW,GAClB,QACA,UACA,YACA,UACA,SACA,SACA,OACA,UACA,kBACC,KAAM,UAAW,GAClB,QACA,QACA,WACC,KAAM,UAAW,GAClB,gBACA,SACA,YACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,SACC,KAAM,UAAW,GAClB,aACC,KAAM,SAAU,GACjB,SACA,SACA,UACAx9F,EAAMoB,oBACN,OACA,QACA,OACApB,EAAM2B,qBAGR12B,KAAKwyH,sBACH,QACA,QACA,gBACA,UACA,iBACA,UACA,iBACA,UACA,oBACA,UACA,iBACA,UACA,kBACA,UACA,mBACA,UACA,mBACA,UACA,sBACA,UACA,mBACA,WAGFxyH,KAAKyyH,oCACH,UACA,UACA,UACA,UACA,cACA,UACA,WACA,UACA,iBACA,UACA,UACA,UACA,SACC,KAAM,UAAW,GAClB,QACA,UACA,UACA19F,EAAMoB,oBACN,aACC,KAAM,UAAW,IAGpBn2B,KAAK0yH,0BACH,MACA1yH,KAAKyyH,mCACL,QACAzyH,KAAKyy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AAM,UAAW,GAClB,gBACA,SACA,YACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,SACC,KAAM,UAAW,GAClB,aACC,KAAM,SAAU,GACjB,SACA,SACA,UACA1+F,EAAMoB,oBACN,OACA,QACA,OACApB,EAAM2B,qBAGR12B,KAAK0zH,sBACH,QACA,QACA,gBACA,UACA,iBACA,UACA,iBACA,UACA,oBACA,UACA,iBACA,UACA,kBACA,UACA,mBACA,UACA,mBACA,UACA,sBACA,UACA,mBACA,WAGF1zH,KAAK2zH,oCACH,UACA,UACA,UACA,UACA,cACA,UACA,WACA,UACA,iBACA,UACA,UACA,UACA,SACC,KAAM,UAAW,GAClB,QACA,UACA,UACA5+F,EAAMoB,oBACN,aACC,KAAM,UAAW,IAGpBn2B,KAAK4zH,0BACH,MACA5zH,KAAK2zH,mCACL,QACA3zH,KAAK2zH,mCACL,OACA5+F,EAAM2B,qBAGR12B,KAAK6zH,2BAA6B,QAAS9+F,EAAMI,eAAen1B,KAAK4zH,2BAErE5zH,KAAK8zH,wBACH,aACA,SACA,gBACA,UACA,iBACA,UACA,YACC,KAAM,UAAW,GAClB,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,YACA,UACA,YACA,UACA,eACA,UACA,cACA,UACA,eACA,UACA,cACA,UACA,uBACC,KAAM,QAAS,GAChB,oBACC,KAAM,QAAS,GAChB,gBACC,KAAM,QAAS,GAChB,iBACA,UACA,gBACA,UACA,cACA/+F,EAAMoB,oBACN,iBACApB,EAAMoB,qBAGRn2B,KAAK+zH,uBACH,UACA,QACA,YACA,QACA,QACA,QACA,QACA,QACA,OACA,QACA,WACA,SAGF/zH,KAAKg0H,wBACH,WACAj/F,EAAMI,eAAen1B,KAAKmzH,2BAC1B,SACAp+F,EAAMQ,iBAAiBv1B,KAAKszH,yBAC5B,SACAv+F,EAAM6qB,kBAAkB5/C,KAAKuzH,yBAC7B,OACAx+F,EAAM6qB,kBAAkB5/C,KAAKwzH,uBAC7B,iBACAz+F,EAAM6qB,kBAAkB5/C,KAAKyzH,yBAC7B,MACA1+F,EAAMQ,iBAAiBv1B,KAAK0zH,sBAC5B,WACA3+F,EAAMQ,iBAAiBv1B,KAAK6zH,2BAC5B,QACA9+F,EAAM6qB,kBAAkB5/C,KAAK8zH,wBAC7B,OACA/+F,EAAM6qB,kBAAkB5/C,KAAK+zH,uBAC7B,UACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,iBACA,UACA,iBACA,UACA,eACA,UACA,OACA,QACA,cACAh/F,EAAMI,gBAAgB,KAAM,UAAW,KAGzCn1B,KAAKi0H,6BACH,YACAl/F,EAAMoB,oBACN,YACApB,EAAMoB,oBACN,WACApB,EAAMoB,qBAGRn2B,KAAKk0H,yBACH,WACAn/F,EAAMI,eAAen1B,KAAKmzH,2BAC1B,SACAp+F,EAAMQ,iBAAiBv1B,KAAKszH,yBAC5B,SACAv+F,EAAM6qB,kBAAkB5/C,KAAKuzH,yBAC7B,OACAx+F,EAAM6qB,kBAAkB5/C,KAAKwzH,uBAC7B,iBACAz+F,EAAM6qB,kBAAkB5/C,KAAKyzH,yBAC7B,MACA1+F,EAAMQ,iBAAiBv1B,KAAK0zH,sBAC5B,WACA3+F,EAAMQ,iBAAiBv1B,KAAK6zH,2BAC5B,QACA9+F,EAAM6qB,kBAAkB5/C,KAAK8zH,wBAC7B,OACA/+F,EAAM6qB,kBAAkB5/C,KAAK+zH,uBAC7B,aACAh/F,EAAMI,eAAen1B,KAAKi0H,6BAC1B,WACAl/F,EAAMoB,qBAGRn2B,KAAKg3B,OAASh3B,KAAKm0H,uBACjB,iBACAp/F,EAAMI,eAAen1B,KAAKg0H,wBAC1B,aACAj/F,EAAMQ,iBAAiBv1B,KAAKk0H,2BAKhC5lD,GAAI,WACFtuE,KAAKo0H,wBACH,SACC,KAAM,QAAS,GAChB,YACA,UACA,aACC,KAAM,UAAW,IAGpBp0H,KAAKq0H,2BAA6B,SAAUt/F,EAAM6qB,kBAAkB5/C,KAAKo0H,yBAEzEp0H,KAAKs0H,kCACH,UACA,UACA,QACA,UACA,OACA,UACA,iBACA,UACA,YACC,KAAM,UAAW,IAGpBt0H,KAAKu0H,wBACH,WACA,UACA,SACA,UACA,QACA,UACA,UACAx/F,EAAMoB,oBACN,MACAn2B,KAAKs0H,iCACL,QACAt0H,KAAKs0H,iCACL,OACAv/F,EAAM2B,qBAGR12B,KAAKw0H,yBAA2B,SAAUz/F,EAAMI,eAAen1B,KAAKu0H,yBAEpEv0H,KAAKy0H,yBACH,QACC,KAAM,QAAS,GAChB,aACC,KAAM,QAAS,GAChB,aACA,UACA,aACA,UACA,aACC,KAAM,QAAS,GAChB,cACA,WAGFz0H,KAAK00H,uBACH,aACC,KAAM,QAAS,GAChB,aACC,KAAM,UAAW,GAClB,eACC,KAAM,QAAS,GAChB,eACC,KAAM,UAAW,GAClB,WACA,WAGF10H,KAAK20H,yBACH,WACA,UACA,SACC,KAAM,UAAW,GAClB,QACA,UACA,YACA,UACA,SACA,SACA,OACA,UACA,kBACC,KAAM,UAAW,GAClB,QACA,QACA,WACC,KAAM,UAAW,GAClB,gBACA,SACA,YACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,SACC,KAAM,UAAW,GAClB,aACC,KAAM,SAAU,GACjB,SACA,SACA,UACA5/F,EAAMoB,oBACN,OACA,QACA,OACApB,EAAM2B,qBAGR12B,KAAK40H,sBACH,QACA,QACA,gBACA,UACA,iBACA,UACA,iBACA,UACA,oBACA,UACA,iBACA,UACA,kBACA,UACA,mBACA,UACA,mBACA,UACA,sBACA,UACA,mBACA,WAGF50H,KAAK60H,oCACH,UACA,UACA,UACA,UACA,cACA,UACA,WACA,UACA,iBACA,UACA,UACA,UACA,SACC,KAAM,UAAW,GAClB,QACA,UACA,UACA9/F,EAAMoB,oBACN,aACC,KAAM,UAAW,IAGpBn2B,KAAK80H,0BACH,MACA90H,KAAK60H,mCACL,QACA70H,KAAK60H,mCACL,OACA9/F,EAAM2B,qBAGR12B,KAAK+0H,2BAA6B,QAAShgG,EAAMI,eAAen1B,KAAK80H,2BAErE90H,KAAKg1H,wBACH,aACA,SACA,gBACA,UACA,iBACA,UACA,YACC,KAAM,UAAW,GAClB,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,YACA,UACA,YACA,UACA,eACA,UACA,cACA,UACA,eACA,UACA,cACA,UACA,uBACC,KAAM,QAAS,GAChB,oBACC,KAAM,QAAS,GAChB,gBACC,KAAM,QAAS,GAChB,iBACA,UACA,gBACA,UACA,cACAjgG,EAAMoB,oBACN,iBACApB,EAAMoB,qBAGRn2B,KAAKi1H,uBACH,UACA,QACA,YACA,QACA,QACA,QACA,QACA,QACA,OACA,QACA,WACA,SAGFj1H,KAAKk1H,wBACH,WACAngG,EAAMI,eAAen1B,KAAKq0H,2BAC1B,SACAt/F,EAAMQ,iBAAiBv1B,KAAKw0H,yBAC5B,SACAz/F,EAAM6qB,kBAAkB5/C,KAAKy0H,yBAC7B,OACA1/F,EAAM6qB,kBAAkB5/C,KAAK00H,uBAC7B,iBACA3/F,EAAM6qB,kBAAkB5/C,KAAK20H,yBAC7B,MACA5/F,EAAMQ,iBAAiBv1B,KAAK40H,sBAC5B,WACA7/F,EAAMQ,iBAAiBv1B,KAAK+0H,2BAC5B,QACAhgG,EAAM6qB,kBAAkB5/C,KAAKg1H,wBAC7B,OACAjgG,EAAM6qB,kBAAkB5/C,KAAKi1H,uBAC7B,UACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,iBACA,UACA,iBACA,UACA,eACA,UACA,OACA,QACA,cACAlgG,EAAMI,gBAAgB,KAAM,UAAW,KAGzCn1B,KAAKm1H,6BACH,YACApgG,EAAMoB,oBACN,YACApB,EAAMoB,oBACN,WACApB,EAAMoB,qBAGRn2B,KAAKo1H,yBACH,WACArgG,EAAMI,eAAen1B,KAAKq0H,2BAC1B,SACAt/F,EAAMQ,iBAAiBv1B,KAAKw0H,yBAC5B,SACAz/F,EAAM6qB,kBAAkB5/C,KAAKy0H,yBAC7B,OACA1/F,EAAM6qB,kBAAkB5/C,KAAK00H,uBAC7B,iBACA3/F,EAAM6qB,kBAAkB5/C,KAAK20H,yBAC7B,MACA5/F,EAAMQ,iBAAiBv1B,KAAK40H,sBAC5B,WACA7/F,EAAMQ,iBAAiBv1B,KAAK+0H,2BAC5B,QACAhgG,EAAM6qB,kBAAkB5/C,KAAKg1H,wBAC7B,OACAjgG,EAAM6qB,kBAAkB5/C,KAAKi1H,uBAC7B,aACAlgG,EAAMI,eAAen1B,KAAKm1H,6BAC1B,WACApgG,EAAMoB,qBAGRn2B,KAAKg3B,OAASh3B,KAAKq1H,uBACjB,iBACAtgG,EAAMI,eAAen1B,KAAKk1H,wBAC1B,aACAngG,EAAMQ,iBAAiBv1B,KAAKo1H,2BAKhC9lD,GAAI,WACFtvE,KAAKs1H,wBACH,SACC,KAAM,QAAS,GAChB,YACA,UACA,aACC,KAAM,UAAW,IAGpBt1H,KAAKu1H,2BAA6B,SAAUxgG,EAAM6qB,kBAAkB5/C,KAAKs1H,yBAEzEt1H,KAAKw1H,kCACH,UACA,UACA,QACA,UACA,OACA,UACA,iBACA,UACA,YACC,KAAM,UAAW,IAGpBx1H,KAAKy1H,wBACH,WACA,UACA,SACA,UACA,QACA,UACA,UACA1gG,EAAMoB,oBACN,MACAn2B,KAAKw1H,iCACL,QACAx1H,KAAKw1H,iCACL,OACAzgG,EAAM2B,qBAGR12B,KAAK01H,yBAA2B,SAAU3gG,EAAMI,eAAen1B,KAAKy1H,yBAEpEz1H,KAAK21H,yBACH,QACC,KAAM,QAAS,GAChB,aACC,KAAM,QAAS,GAChB,aACA,UACA,aACA,UACA,aACC,KAAM,QAAS,GAChB,cACA,WAGF31H,KAAK41H,uBACH,aACC,KAAM,QAAS,GAChB,aACC,KAAM,UAAW,GAClB,eACC,KAAM,QAAS,GAChB,eACC,KAAM,UAAW,GAClB,WACA,WAGF51H,KAAK61H,yBACH,SACC,KAAM,UAAW,GAClB,YACA,UACA,SACA,SACA,kBACC,KAAM,UAAW,GAClB,QACA,QACA,WACC,KAAM,UAAW,GAClB,gBACA,SACA,YACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,SACC,KAAM,UAAW,GAClB,aACC,KAAM,SAAU,GACjB,SACA,SACA,UACA9gG,EAAMoB,oBACN,OACA,QACA,OACApB,EAAM2B,qBAGR12B,KAAK81H,sBACH,QACA,QACA,gBACA,UACA,iBACA,UACA,iBACA,UACA,oBACA,UACA,iBACA,UACA,kBACA,UACA,mBACA,UACA,mBACA,UACA,sBACA,UACA,mBACA,WAGF91H,KAAK+1H,oCACH,UACA,UACA,UACA,UACA,cACA,UACA,WACA,UACA,iBACA,UACA,UACA,UACA,SACC,KAAM,UAAW,GAClB,QACA,UACA,UACAhhG,EAAMoB,oBACN,aACC,KAAM,UAAW,IAGpBn2B,KAAKg2H,0BACH,MACAh2H,KAAK+1H,mCACL,QACA/1H,KAAK+1H,mCACL,OACAhhG,EAAM2B,qBAGR12B,KAAKi2H,2BAA6B,QAASlhG,EAAMI,eAAen1B,KAAKg2H,2BAErEh2H,KAAKk2H,wBACH,aACA,SACA,gBACA,UACA,iBACA,UACA,YACC,KAAM,UAAW,GAClB,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,YACA,UACA,YACA,UACA,eACA,UACA,cACA,UACA,eACA,UACA,uBACC,KAAM,QAAS,GAChB,oBACC,KAAM,QAAS,GAChB,gBACC,KAAM,QAAS,GAChB,iBACA,UACA,gBACA,UACA,cACAnhG,EAAMoB,oBACN,iBACApB,EAAMoB,qBAGRn2B,KAAKm2H,uBACH,UACA,QACA,YACA,QACA,QACA,QACA,QACA,QACA,OACA,QACA,WACA,SAGFn2H,KAAKo2H,wBACH,WACArhG,EAAMI,eAAen1B,KAAKu1H,2BAC1B,SACAxgG,EAAMQ,iBAAiBv1B,KAAK01H,yBAC5B,SACA3gG,EAAM6qB,kBAAkB5/C,KAAK21H,yBAC7B,OACA5gG,EAAM6qB,kBAAkB5/C,KAAK41H,uBAC7B,iBACA7gG,EAAM6qB,kBAAkB5/C,KAAK61H,yBAC7B,MACA9gG,EAAMQ,iBAAiBv1B,KAAK81H,sBAC5B,WACA/gG,EAAMQ,iBAAiBv1B,KAAKi2H,2BAC5B,QACAlhG,EAAM6qB,kBAAkB5/C,KAAKk2H,wBAC7B,OACAnhG,EAAM6qB,kBAAkB5/C,KAAKm2H,uBAC7B,UACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,iBACA,UACA,iBACA,UACA,eACA,UACA,OACA,QACA,cACAphG,EAAMI,gBAAgB,KAAM,UAAW,KAGzCn1B,KAAKq2H,6BACH,YACAthG,EAAMoB,oBACN,YACApB,EAAMoB,oBACN,WACApB,EAAMoB,qBAGRn2B,KAAKs2H,yBACH,WACAvhG,EAAMI,eAAen1B,KAAKu1H,2BAC1B,SACAxgG,EAAMQ,iBAAiBv1B,KAAK01H,yBAC5B,SACA3gG,EAAM6qB,kBAAkB5/C,KAAK21H,yBAC7B,OACA5gG,EAAM6qB,kBAAkB5/C,KAAK41H,uBAC7B,iBACA7gG,EAAM6qB,kBAAkB5/C,KAAK61H,yBAC7B,MACA9gG,EAAMQ,iBAAiBv1B,KAAK81H,sBAC5B,WACA/gG,EAAMQ,iBAAiBv1B,KAAKi2H,2BAC5B,QACAlhG,EAAM6qB,kBAAkB5/C,KAAKk2H,wBAC7B,OACAnhG,EAAM6qB,kBAAkB5/C,KAAKm2H,uBAC7B,aACAphG,EAAMI,eAAen1B,KAAKq2H,6BAC1B,WACAthG,EAAMoB,qBAGRn2B,KAAKg3B,OAASh3B,KAAKu2H,uBACjB,iBACAxhG,EAAMI,eAAen1B,KAAKo2H,wBAC1B,aACArhG,EAAMQ,iBAAiBv1B,KAAKs2H,2BAKhCrhG,GAAI,WACFj1B,KAAKw2H,wBACH,SACC,KAAM,QAAS,GAChB,YACA,UACA,aACC,KAAM,UAAW,IAGpBx2H,KAAKy2H,2BAA6B,SAAU1hG,EAAM6qB,kBAAkB5/C,KAAKw2H,yBAEzEx2H,KAAK02H,kCACH,UACA,UACA,QACA,UACA,OACA,UACA,iBACA,UACA,YACC,KAAM,UAAW,IAGpB12H,KAAK22H,wBACH,WACA,UACA,QACA,UACA,UACA5hG,EAAMoB,oBACN,MACAn2B,KAAK02H,iCACL,QACA12H,KAAK02H,iCACL,OACA3hG,EAAM2B,qBAGR12B,KAAK42H,yBAA2B,SAAU7hG,EAAMI,eAAen1B,KAAK22H,yBAEpE32H,KAAK62H,yBACH,QACC,KAAM,QAAS,GAChB,aACC,KAAM,QAAS,GAChB,aACA,UACA,aACA,UACA,aACC,KAAM,QAAS,GAChB,cACA,WAGF72H,KAAK82H,uBACH,aACC,KAAM,QAAS,GAChB,aACC,KAAM,UAAW,GAClB,eACC,KAAM,QAAS,GAChB,eACC,KAAM,UAAW,GAClB,WACA,WAGF92H,KAAK+2H,yBACH,SACC,KAAM,UAAW,GAClB,YACA,UACA,SACA,SACA,kBACC,KAAM,UAAW,GAClB,QACA,QACA,WACC,KAAM,UAAW,GAClB,gBACA,SACA,YACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,SACC,KAAM,UAAW,GAClB,aACC,KAAM,SAAU,GACjB,SACA,SACA,UACAhiG,EAAMoB,oBACN,OACA,QACA,OACApB,EAAM2B,qBAGR12B,KAAKg3H,sBACH,QACA,QACA,gBACA,UACA,iBACA,UACA,iBACA,UACA,oBACA,UACA,iBACA,UACA,kBACA,UACA,mBACA,UACA,mBACA,UACA,sBACA,UACA,mBACA,WAGFh3H,KAAKi3H,oCACH,UACA,UACA,UACA,UACA,cACA,UACA,WACA,UACA,iBACA,UACA,UACA,UACA,SACC,KAAM,UAAW,GAClB,QACA,UACA,UACAliG,EAAMoB,oBACN,aACC,KAAM,UAAW,IAGpBn2B,KAAKk3H,0BACH,MACAl3H,KAAKi3H,mCACL,QACAj3H,KAAKi3H,mCACL,OACAliG,EAAM2B,qBAGR12B,KAAKm3H,2BAA6B,QAASpiG,EAAMI,eAAen1B,KAAKk3H,2BAErEl3H,KAAKo3H,wBACH,aACA,SACA,gBACA,UACA,iBACA,UACA,YACC,KAAM,UAAW,GAClB,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,aACA,UACA,YACA,UACA,YACA,UACA,eACA,UACA,cACA,UACA,eACA,UACA,uBACC,KAAM,QAAS,GAChB,oBACC,KAAM,QAAS,GAChB,gBACC,KAAM,QAAS,GAChB,iBACA,UACA,gBACA,UACA,cACAriG,EAAMoB,oBACN,iBACApB,EAAMoB,qBAGRn2B,KAAKq3H,uBACH,UACA,QACA,YACA,QACA,QAC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B,EAAMI,eAAe,UAGvBn1B,KAAKg3B,OAASh3B,KAAK28H,iBAAmB,UAAW5nG,EAAMI,eAAen1B,KAAK08H,kBAI7Ej/E,EAAG,WACDz9C,KAAK48H,gBAAkB,OAAQ7nG,EAAMI,eAAe,UAEpDn1B,KAAKg3B,OAASh3B,KAAK68H,iBAAmB,UAAW9nG,EAAMI,eAAen1B,KAAK48H,6ECtEnF,IAAM7nG,EAAQt0B,EAAQ,6BAEtBf,EAAOD,UAMHyB,KAAM,OACN8zB,UAEE2hB,EAAG,WACD32C,KAAKg3B,OAASh3B,KAAK88H,QACjB,gBACA,QACA,WACA,QACA,YACA,QACA,UACA,QACA,WACA,QACA,aACA,SACA,QACA,SACA,YACA/nG,EAAMI,eAAeJ,EAAMM,oBAK/B0iB,EAAG,WACD/3C,KAAKg3B,OAASh3B,KAAK88H,QACjB,gBACA,QACA,WACA,QACA,oBACA,QACA,YACA,QACA,UACA,QACA,WACA,QACA,aACA,SACA,QACA,SACA,UACA,SACA,gBACC,KAAM,SAAU,GACjB,YACA/nG,EAAMI,eAAeJ,EAAMM,oBAK/B6jB,EAAG,WACDl5C,KAAKg3B,OAASh3B,KAAK88H,QACjB,gBACA,QACA,WACA,QACA,oBACA,QACA,YACA,QACA,UACA,QACA,WACA,QACA,aACA,SACA,QACA,SACA,UACA,SACA,gBACC,KAAM,SAAU,KAKrB1iF,EAAG,WACDp6C,KAAKg3B,OAASh3B,KAAK+8H,UACjB,gBACA,QACA,WACA,QACA,oBACA,QACA,YACA,QACA,UACA,QACA,aACA,SACA,QACA,SACA,UACA,SACA,gBACC,KAAM,SAAU,KAKrBzhF,EAAG,WACDt7C,KAAKg3B,OAASh3B,KAAKg9H,UACjB,gBACA,QACA,WACA,QACA,oBACA,QACA,YACA,QACA,UACA,QACA,QACA,SACA,UACA,SACA,gBACC,KAAM,SAAU,KAKrB/7H,EAAG,WACDjB,KAAKg3B,OAASh3B,KAAKi9H,UACjB,gBACA,QACA,WACA,QACA,oBACA,QACA,YACA,QACA,QACA,SACA,UACA,SACA,gBACC,KAAM,SAAU,KAKrBx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UACA,cACAxtG,EAAMoB,oBACN,aACApB,EAAMQ,iBAAiBv1B,KAAKsiI,oBAG9BtiI,KAAKwiI,wBACH,OACAztG,EAAMM,iBACN,SACAN,EAAMI,eAAen1B,KAAKuiI,kBAC1B,SACAxtG,EAAMI,eAAen1B,KAAKkiI,cAC1B,UACA,UAGFliI,KAAKyiI,oBACH,WACA1tG,EAAMoB,oBACN,QACC,KAAM,SAAU,GACjB,SACA,SACA,QACApB,EAAMI,eAAe,UAGvBn1B,KAAK0iI,oBACH,OACA3tG,EAAMM,iBACN,YACC,KAAM,UAAW,GAClB,WACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,eACC,KAAM,UAAW,GAClB,QACC,KAAM,UAAW,GAClB,OACAN,EAAM2B,oBACN,cACA3B,EAAMI,gBAAgB,KAAM,UAAW,IACvC,QACA,SACA,SACAJ,EAAMI,eAAen1B,KAAKyiI,oBAC1B,UACA,UAGFziI,KAAK2iI,oBAAsB,iBAAkB5tG,EAAMI,eAAe,UAElEn1B,KAAKg3B,OAASh3B,KAAK4iI,eACjB,cACA7tG,EAAMI,eAAen1B,KAAKmiI,yBAC1B,eACAptG,EAAMI,eAAen1B,KAAKqiI,oBAC1B,aACAttG,EAAMI,eAAen1B,KAAKwiI,wBAC1B,eACAztG,EAAMI,eAAen1B,KAAK0iI,oBAC1B,aACA1iI,KAAK2iI,mBACL,aACA,WAKJ35F,GAAI,WACFhpC,KAAKiiI,cACH,YACC,KAAM,UAAW,GAClB,SACC,KAAM,QAAS,GAChB,YACA,UACA,eACA,UACA,cACA,UACA,QACA,UAGFjiI,KAAKkiI,cACH,OACA,UACA,WACA,UACA,QACA,UACA,QACA,UACA,SACA,UACA,YACA,UACA,YACA,UAGFliI,KAAKmiI,yBACH,OACAptG,EAAMM,iBACN,SACAN,EAAMI,eAAen1B,KAAKiiI,cAC1B,SACAltG,EAAMI,eAAen1B,KAAKkiI,cAC1B,UACA,UAGFliI,KAAKoiI,mBACH,aACA,UACA,YACA,UACA,UACA,UACA,SACA,WAGFpiI,KAAKqiI,oBACH,OACAttG,EAAMM,iBACN,SACAN,EAAMI,gBAAgB,KAAM,UAAW,IACvC,aACAJ,EAAMI,eAAen1B,KAAKoiI,mBAC1B,UACA,UAGFpiI,KAAKsiI,mBAAqB,iBAAkBvtG,EAAMoB,qBAElDn2B,KAAKuiI,kBACH,YACC,KAAM,UAAW,GAClB,SACC,KAAM,QAAS,GAChB,YACA,UACA,eACA,UACA,cACA,UACA,QACA,SACA,aACC,KAAM,UAAW,GAClB,aACA,UACA,aACA,UACA,cACAxtG,EAAMoB,oBACN,aACApB,EAAMQ,iBAAiBv1B,KAAKsiI,oBAG9BtiI,KAAKwiI,wBACH,OACAztG,EAAMM,iBACN,SACAN,EAAMI,eAAen1B,KAAKuiI,kBAC1B,SACAxtG,EAAMI,eAAen1B,KAAKkiI,cAC1B,UACA,UAGFliI,KAAKyiI,oBACH,WACA1tG,EAAMoB,oBACN,QACC,KAAM,SAAU,GACjB,SACA,SACA,QACApB,EAAMI,eAAe,UAGvBn1B,KAAK0iI,oBACH,OACA3tG,EAAMM,iBACN,YACC,KAAM,UAAW,GAClB,WACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,eACC,KAAM,UAAW,GAClB,QACC,KAAM,UAAW,GAClB,OACAN,EAAM2B,oBACN,cACA3B,EAAMI,gBAAgB,KAAM,UAAW,IACvC,QACA,SACA,SACAJ,EAAMI,eAAen1B,KAAKyiI,oBAC1B,UACA,UAGFziI,KAAK2iI,oBAAsB,iBAAkB5tG,EAAMI,eAAe,UAElEn1B,KAAKg3B,OAASh3B,KAAK4iI,eACjB,cACA7tG,EAAMI,eAAen1B,KAAKmiI,yBAC1B,eACAptG,EAAMI,eAAen1B,KAAKqiI,oBAC1B,aACAttG,EAAMI,eAAen1B,KAAKwiI,wBAC1B,eACAztG,EAAMI,eAAen1B,KAAK0iI,oBAC1B,aACA1iI,KAAK2iI,mBACL,aACA,WAKJr4F,GAAI,WACFtqC,KAAKiiI,cACH,YACC,KAAM,UAAW,GAClB,SACC,KAAM,QAAS,GAChB,YACA,UACA,eACA,UACA,cACA,UACA,QACA,UAGFjiI,KAAKkiI,cACH,OACA,UACA,WACA,UACA,QACA,UACA,QACA,UACA,SACA,UACA,YACA,UACA,YACA,UAGFliI,KAAKmiI,yBACH,OACAptG,EAAMM,iBACN,SACAN,EAAMI,eAAen1B,KAAKiiI,cAC1B,SACAltG,EAAMI,eAAen1B,KAAKkiI,cAC1B,UACA,UAGFliI,KAAKoiI,mBACH,aACA,UACA,YACA,UACA,UACA,UACA,SACA,WAGFpiI,KAAKqiI,oBACH,OACAttG,EAAMM,iBACN,SACAN,EAAMI,gBAAgB,KAAM,UAAW,IACvC,aACAJ,EAAMI,eAAen1B,KAAKoiI,mBAC1B,UACA,UAGFpiI,KAAK6iI,mBACH,YACC,KAAM,UAAW,GAClB,SACC,KAAM,QAAS,GAChB,YACA,UACA,eACA,UACA,cACA,UACA,QACA,SACA,aACC,KAAM,UAAW,GAClB,aACA,UACA,aACA,UACA,cACA9tG,EAAMoB,qBAGRn2B,KAAKwiI,wBACH,OACAztG,EAAMM,iBACN,SACAN,EAAMI,eAAen1B,KAAK6iI,mBAC1B,SACA9tG,EAAMI,eAAen1B,KAAKkiI,cAC1B,UACA,UAGFliI,KAAKyiI,oBACH,WACA1tG,EAAMoB,oBACN,QACC,KAAM,SAAU,GACjB,SACA,SACA,QACApB,EAAMI,eAAe,UAGvBn1B,KAAK0iI,oBACH,OACA3tG,EAAMM,iBACN,YACC,KAAM,UAAW,GAClB,WACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,eACC,KAAM,UAAW,GAClB,QACC,KAAM,UAAW,GAClB,OACAN,EAAM2B,oBACN,cACA3B,EAAMI,gBAAgB,KAAM,UAAW,IACvC,QACA,SACA,SACAJ,EAAMI,eAAen1B,KAAKyiI,oBAC1B,UACA,UAGFziI,KAAK2iI,oBAAsB,iBAAkB5tG,EAAMI,eAAe,UAElEn1B,KAAKg3B,OAASh3B,KAAK8iI,kBACjB,cACA/tG,EAAMI,eAAen1B,KAAKmiI,yBAC1B,eACAptG,EAAMI,eAAen1B,KAAKqiI,oBAC1B,aACAttG,EAAMI,eAAen1B,KAAKwiI,wBAC1B,eACAztG,EAAMI,eAAen1B,KAAK0iI,oBAC1B,aACA1iI,KAAK2iI,mBACL,aACA,WAKJ/2F,GAAI,WACF5rC,KAAKiiI,cACH,YACC,KAAM,UAAW,GAClB,SACC,KAAM,QAAS,GAChB,YACA,UACA,eACA,UACA,cACA,UACA,QACA,UAGFjiI,KAAKkiI,cACH,OACA,UACA,WACA,UACA,QACA,UACA,QACA,UACA,SACA,UACA,YACA,UACA,YACA,UAGFliI,KAAKmiI,yBACH,OACAptG,EAAMM,iBACN,SACAN,EAAMI,eAAen1B,KAAKiiI,cAC1B,SACAltG,EAAMI,eAAen1B,KAAKkiI,cAC1B,UACA,UAGFliI,KAAK+iI,oBACH,OACAhuG,EAAMM,iBACN,aACA,UACA,YACA,UACA,UACA,UACA,SACA,UACA,SACAN,EAAMI,gBAAgB,KAAM,UAAW,IACvC,UACA,UAGFn1B,KAAK6iI,mBACH,YACC,KAAM,UAAW,GAClB,SACC,KAAM,QAAS,GAChB,YACA,UACA,eACA,UACA,cACA,UACA,QACA,SACA,aACC,KAAM,UAAW,GAClB,aACA,UACA,aACA,UACA,cACA9tG,EAAMoB,qBAGRn2B,KAAKwiI,wBACH,OACAztG,EAAMM,iBACN,SACAN,EAAMI,eAAen1B,KAAK6iI,mBAC1B,SACA9tG,EAAMI,eAAen1B,KAAKkiI,cAC1B,UACA,UAGFliI,KAAKyiI,oBACH,WACA1tG,EAAMoB,oBACN,QACC,KAAM,SAAU,GACjB,SACA,SACA,QACApB,EAAMI,eAAe,UAGvBn1B,KAAK0iI,oBACH,OACA3tG,EAAMM,iBACN,YACC,KAAM,UAAW,GAClB,WACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,eACC,KAAM,UAAW,GAClB,QACC,KAAM,UAAW,GAClB,OACAN,EAAM2B,oBACN,cACA3B,EAAMI,gBAAgB,KAAM,UAAW,IACvC,QACA,SACA,SACAJ,EAAMI,eAAen1B,KAAKyiI,oBAC1B,UACA,UAGFziI,KAAK2iI,oBAAsB,iBAAkB5tG,EAAMI,eAAe,UAElEn1B,KAAKg3B,OAASh3B,KAAKgjI,kBACjB,cACAjuG,EAAMI,eAAen1B,KAAKmiI,yBAC1B,eACAptG,EAAMI,eAAen1B,KAAK+iI,oBAC1B,aACAhuG,EAAMI,eAAen1B,KAAKwiI,wBAC1B,eACAztG,EAAMI,eAAen1B,KAAK0iI,oBAC1B,aACA1iI,KAAK2iI,mBACL,aACA,WAKJz1F,GAAI,WACFltC,KAAKiiI,cACH,YACC,KAAM,UAAW,GAClB,SACC,KAAM,QAAS,GAChB,YACA,UACA,eACA,UACA,cACA,UACA,QACA,UAGFjiI,KAAKkiI,cACH,OACA,UACA,WACA,UACA,QACA,UACA,QACA,UACA,SACA,UACA,YACA,UACA,YACA,UAGFliI,KAAKijI,oBACH,OACAluG,EAAMM,iBACN,SACAN,EAAMI,eAAen1B,KAAKiiI,cAC1B,SACAltG,EAAMI,eAAen1B,KAAKkiI,cAC1B,UACA,UAGFliI,KAAK6iI,mBACH,YACC,KAAM,UAAW,GAClB,SACC,KAAM,QAAS,GAChB,YACA,UACA,eACA,UACA,cACA,UACA,QACA,SACA,aACC,KAAM,UAAW,GAClB,aACA,UACA,aACA,UACA,cACA9tG,EAAMoB,qBAGRn2B,KAAKmiI,yBACH,OACAptG,EAAMM,iBACN,SACAN,EAAMI,eAAen1B,KAAK6iI,mBAC1B,SACA9tG,EAAMI,eAAen1B,KAAKkiI,cAC1B,UACA,UAGFliI,KAAKyiI,oBACH,WACA1tG,EAAMoB,oBACN,QACC,KAAM,SAAU,GACjB,SACA,SACA,QACApB,EAAMI,eAAe,UAGvBn1B,KAAK0iI,oBACH,OACA3tG,EAAMM,iBACN,YACC,KAAM,UAAW,GAClB,WACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,eACC,KAAM,UAAW,GAClB,QACC,KAAM,UAAW,GAClB,OACAN,EAAM2B,oBACN,cACA3B,EAAMI,gBAAgB,KAAM,UAAW,IACvC,QACA,SACA,SACAJ,EAAMI,eAAen1B,KAAKyiI,oBAC1B,UACA,UAGFziI,KAAK2iI,oBAAsB,iBAAkB5tG,EAAMI,eAAe,UAElEn1B,KAAKg3B,OAASh3B,KAAK4iI,eACjB,cACA7tG,EAAMI,eAAen1B,KAAKijI,oBAC1B,aACAluG,EAAMI,eAAen1B,KAAKmiI,yBAC1B,eACAptG,EAAMI,eAAen1B,KAAK0iI,oBAC1B,aACA1iI,KAAK2iI,mBACL,aACA,WAKJn0F,GAAI,WACFxuC,KAAKiiI,cACH,YACC,KAAM,UAAW,GAClB,SACC,KAAM,QAAS,GAChB,YACA,UACA,eACA,UACA,cACA,UACA,QACA,UAGFjiI,KAAKkiI,cACH,OACA,UACA,WACA,UACA,QACA,UACA,QACA,UACA,SACA,UACA,YACA,UACA,YACA,UAGFliI,KAAKijI,oBACH,OACAluG,EAAMM,iBACN,SACAN,EAAMI,eAAen1B,KAAKiiI,cAC1B,SACAltG,EAAMI,eAAen1B,KAAKkiI,cAC1B,UACA,UAGFliI,KAAK6iI,mBACH,YACC,KAAM,UAAW,GAClB,SACC,KAAM,QAAS,GAChB,YACA,UACA,eACA,UACA,cACA,UACA,QACA,SACA,aACC,KAAM,UAAW,GAClB,aACA,UACA,aACA,UACA,cACA9tG,EAAMoB,qBAGRn2B,KAAKmiI,yBACH,OACAptG,EAAMM,iBACN,SACAN,EAAMI,eAAen1B,KAAK6iI,mBAC1B,SACA9tG,EAAMI,eAAen1B,KAAKkiI,cAC1B,UACA,UAGFliI,KAAKyiI,oBACH,WACA1tG,EAAMoB,oBACN,QACC,KAAM,SAAU,GACjB,SACA,SACA,QACApB,EAAMI,eAAe,UAGvBn1B,KAAK0iI,oBACH,OACA3tG,EAAMM,iBACN,YACC,KAAM,UAAW,GAClB,WACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,eACC,KAAM,UAAW,GAClB,QACC,KAAM,UAAW,GAClB,OACAN,EAAM2B,oBACN,cACC,KAAM,UAAW,GAClB,QACA,SACA,SACA3B,EAAMI,eAAen1B,KAAKyiI,oBAC1B,UACA,UAGFziI,KAAK2iI,oBAAsB,iBAAkB5tG,EAAMI,eAAe,UAElEn1B,KAAKg3B,OAASh3B,KAAK4iI,eACjB,cACA7tG,EAAMI,eAAen1B,KAAKijI,oBAC1B,aACAluG,EAAMI,eAAen1B,KAAKmiI,yBAC1B,eACAptG,EAAMI,eAAen1B,KAAK0iI,oBAC1B,aACA1iI,KAAK2iI,mBACL,aACA,WAKJ7yF,GAAI,WACF9vC,KAAKiiI,cACH,YACC,KAAM,UAAW,GAClB,SACC,KAAM,QAAS,GAChB,YACA,UACA,eACA,UACA,cACA,UACA,QACA,UAGFjiI,KAAKkiI,cACH,OACA,UACA,WACA,UACA,QACA,UACA,QACA,UACA,SACA,UACA,YACA,UACA,YACA,UAGFliI,KAAKijI,oBACH,OACAluG,EAAMM,iBACN,SACAN,EAAMI,eAAen1B,KAAKiiI,cAC1B,SACAltG,EAAMI,eAAen1B,KAAKkiI,cAC1B,UACA,UAGFliI,KAAK6iI,mBACH,YACC,KAAM,UAAW,GAClB,SACC,KAAM,QAAS,GAChB,YACA,UACA,eACA,UACA,cACA,UACA,QACA,SACA,aACC,KAAM,UAAW,GAClB,aACA,UACA,aACA,UACA,cACA9tG,EAAMoB,qBAGRn2B,KAAKmiI,yBACH,OACAptG,EAAMM,iBACN,SACAN,EAAMI,eAAen1B,KAAK6iI,mBAC1B,SACA9tG,EAAMI,eAAen1B,KAAKkiI,cAC1B,UACA,UAGFliI,KAAKyiI,oBACH,WACA1tG,EAAMoB,oBACN,QACC,KAAM,SAAU,GACjB,SACA,SACA,QACApB,EAAMI,eAAe,UAGvBn1B,KAAK0iI,oBACH,OACA3tG,EAAMM,iBACN,YACC,KAAM,UAAW,GAClB,WACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,eACC,KAAM,UAAW,GAClB,QACC,KAAM,UAAW,GAClB,OACAN,EAAM2B,oBACN,cACC,KAAM,UAAW,GAClB,QACA,SACA,SACA3B,EAAMI,eAAen1B,KAAKyiI,oBAC1B,UACA,UAGFziI,KAAK2iI,oBAAsB,iBAAkB5tG,EAAMI,eAAe,UAElEn1B,KAAKg3B,OAASh3B,KAAK4iI,eACjB,cACA7tG,EAAMI,eAAen1B,KAAKijI,oBAC1B,aACAluG,EAAMI,eAAen1B,KAAKmiI,yBAC1B,eACAptG,EAAMI,eAAen1B,KAAK0iI,oBAC1B,aACA1iI,KAAK2iI,mBACL,aACA,WAKJvxF,GAAI,WACFpxC,KAAKiiI,cACH,YACC,KAAM,UAAW,GAClB,SACC,KAAM,QAAS,GAChB,YACA,UACA,eACA,UACA,cACA,UACA,QACA,UAGFjiI,KAAKkiI,cACH,OACA,UACA,WACA,UACA,QACA,UACA,QACA,UACA,SACA,UACA,YACA,UACA,YACA,UAGFliI,KAAKijI,oBACH,OACAluG,EAAMM,iBACN,SACAN,EAAMI,eAAen1B,KAAKiiI,cAC1B,SACAltG,EAAMI,eAAen1B,KAAKkiI,eAG5BliI,KAAK6iI,mBACH,YACC,KAAM,UAAW,GAClB,SACC,KAAM,QAAS,GAChB,YACA,UACA,eACA,UACA,cACA,UACA,QACA,SACA,aACC,KAAM,UAAW,GAClB,aACA,UACA,aACA,UACA,cACA9tG,EAAMoB,qBAGRn2B,KAAKmiI,yBACH,OACAptG,EAAMM,iBACN,SACAN,EAAMI,eAAen1B,KAAK6iI,mBAC1B,SACA9tG,EAAMI,eAAen1B,KAAKkiI,eAG5BliI,KAAKyiI,oBACH,WACA1tG,EAAMoB,oBACN,QACC,KAAM,SAAU,GACjB,SACA,SACA,QACApB,EAAMI,eAAe,UAGvBn1B,KAAK0iI,oBACH,OACA3tG,EAAMM,iBACN,YACC,KAAM,UAAW,GAClB,WACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,eACC,KAAM,UAAW,GAClB,QACC,KAAM,UAAW,GAClB,OACAN,EAAM2B,oBACN,cACC,KAAM,UAAW,GAClB,QACA,SACA,SACA3B,EAAMI,eAAen1B,KAAKyiI,qBAG5BziI,KAAKg3B,OAASh3B,KAAK4iI,eACjB,cACA7tG,EAAMI,eAAen1B,KAAKijI,oBAC1B,aACAluG,EAAMI,eAAen1B,KAAKmiI,yBAC1B,eACAptG,EAAMI,eAAen1B,KAAK0iI,sBAK9BhwF,EAAG,WACD1yC,KAAKiiI,cACH,YACC,KAAM,UAAW,GAClB,SACC,KAAM,QAAS,GAChB,YACA,UACA,eACA,UACA,cACA,UACA,QACA,UAGFjiI,KAAKkiI,cACH,OACA,UACA,WACA,UACA,QACA,UACA,QACA,UACA,SACA,UACA,YACA,UACA,YACA,UAGFliI,KAAKijI,oBACH,OACAluG,EAAMM,iBACN,SACAN,EAAMI,eAAen1B,KAAKiiI,cAC1B,SACAltG,EAAMI,eAAen1B,KAAKkiI,eAG5BliI,KAAK6iI,mBACH,YACC,KAAM,UAAW,GAClB,SACC,KAAM,QAAS,GAChB,YACA,UACA,eACA,UACA,cACA,UACA,QACA,SACA,aACC,KAAM,UAAW,GAClB,aACA,UACA,aACA,UACA,cACA9tG,EAAMoB,qBAGRn2B,KAAKmiI,yBACH,OACAptG,EAAMM,iBACN,SACAN,EAAMI,eAAen1B,KAAK6iI,mBAC1B,SACA9tG,EAAMI,eAAen1B,KAAKkiI,eAG5BliI,KAAKyiI,oBACH,WACA1tG,EAAMoB,oBACN,OACA,SACA,SACA,SACA,QACApB,EAAMI,eAAe,UAGvBn1B,KAAK0iI,oBACH,OACA3tG,EAAMM,iBACN,YACC,KAAM,UAAW,GAClB,WACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,eACC,KAAM,UAAW,GAClB,QACC,KAAM,UAAW,GAClB,OACAN,EAAM2B,oBACN,cACC,KAAM,UAAW,GAClB,QACA,SACA,SACA3B,EAAMI,eAAen1B,KAAKyiI,qBAG5BziI,KAAKg3B,OAASh3B,KAAK4iI,eACjB,cACA7tG,EAAMI,eAAen1B,KAAKijI,oBAC1B,aACAluG,EAAMI,eAAen1B,KAAKmiI,yBAC1B,eACAptG,EAAMI,eAAen1B,KAAK0iI,sBAK9B1uF,EAAG,WACDh0C,KAAKiiI,cACH,YACC,KAAM,UAAW,GAClB,SACC,KAAM,QAAS,GAChB,YACA,UACA,eACA,UACA,cACA,UACA,QACA,UAGFjiI,KAAKkiI,cACH,OACA,UACA,WACA,UACA,QACA,UACA,QACA,UACA,SACA,UACA,YACA,UACA,YACA,UAGFliI,KAAKijI,oBACH,OACAluG,EAAMM,iBACN,SACAN,EAAMI,eAAen1B,KAAKiiI,cAC1B,SACAltG,EAAMI,eAAen1B,KAAKkiI,eAG5BliI,KAAK6iI,mBACH,YACC,KAAM,UAAW,GAClB,SACC,KAAM,QAAS,GAChB,YACA,UACA,eACA,UACA,cACA,UACA,QACA,SACA,aACC,KAAM,UAAW,GAClB,aACA,UACA,aACA,UACA,cACA9tG,EAAMoB,qBAGRn2B,KAAKmiI,yBACH,OACAptG,EAAMM,iBACN,SACAN,EAAMI,eAAen1B,KAAK6iI,mBAC1B,SACA9tG,EAAMI,eAAen1B,KAAKkiI,eAG5BliI,KAAKyiI,oBACH,WACA1tG,EAAMoB,oBACN,OACA,SACA,SACA,SACA,QACApB,EAAMI,eAAe,UAGvBn1B,KAAK0iI,oBACH,OACA3tG,EAAMM,iBACN,UACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,eACC,KAAM,UAAW,GAClB,QACC,KAAM,UAAW,GAClB,OACAN,EAAM2B,oBACN,cACC,KAAM,UAAW,GAClB,SACA3B,EAAMI,eAAen1B,KAAKyiI,qBAG5BziI,KAAKg3B,OAASh3B,KAAK4iI,eACjB,cACA7tG,EAAMI,eAAen1B,KAAKijI,oBAC1B,aACAluG,EAAMI,eAAen1B,KAAKmiI,yBAC1B,eACAptG,EAAMI,eAAen1B,KAAK0iI,sBAK9BptF,EAAG,WACDt1C,KAAKiiI,cACH,YACC,KAAM,UAAW,GAClB,SACC,KAAM,QAAS,GAChB,YACA,UACA,eACA,UACA,cACA,UACA,QACA,UAGFjiI,KAAKkiI,cACH,OACA,UACA,WACA,UACA,QACA,UACA,QACA,UACA,SACA,UACA,YACA,UACA,YACA,UAGFliI,KAAKijI,oBACH,OACAluG,EAAMM,iBACN,SACAN,EAAMI,eAAen1B,KAAKiiI,cAC1B,SACAltG,EAAMI,eAAen1B,KAAKkiI,eAG5BliI,KAAK6iI,mBACH,YACC,KAAM,UAAW,GAClB,SACC,KAAM,QAAS,GAChB,YACA,UACA,eACA,UACA,cACA,UACA,QACA,SACA,aACC,KAAM,UAAW,GAClB,aACA,UACA,aACA,UACA,cACA9tG,EAAMoB,qBAGRn2B,KAAKmiI,yBACH,OACAptG,EAAMM,iBACN,SACAN,EAAMI,eAAen1B,KAAK6iI,mBAC1B,SACA9tG,EAAMI,eAAen1B,KAAKkiI,eAG5BliI,KAAKyiI,oBACH,WACA1tG,EAAMoB,oBACN,OACA,SACA,SACA,SACA,QACApB,EAAMI,eAAe,UAGvBn1B,KAAK0iI,oBACH,OACA3tG,EAAMM,iBACN,UACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,eACC,KAAM,UAAW,GAClB,QACC,KAAM,UAAW,GAClB,OACAN,EAAM2B,oBACN,SACA3B,EAAMI,eAAen1B,KAAKyiI,qBAG5BziI,KAAKg3B,OAASh3B,KAAK4iI,eACjB,cACA7tG,EAAMI,eAAen1B,KAAKijI,oBAC1B,aACAluG,EAAMI,eAAen1B,KAAKmiI,yBAC1B,eACAptG,EAAMI,eAAen1B,KAAK0iI,sBAK9B/rF,EAAG,WACD32C,KAAKiiI,cACH,YACC,KAAM,UAAW,GAClB,SACC,KAAM,QAAS,GAChB,YACA,UACA,eACA,UACA,cACA,UACA,QACA,UAGFjiI,KAAKkiI,cACH,OACA,UACA,WACA,UACA,QACA,UACA,QACA,UACA,SACA,UACA,YACA,UACA,YACA,UAGFliI,KAAKijI,oBACH,OACAluG,EAAMM,iBACN,SACAN,EAAMI,eAAen1B,KAAKiiI,cAC1B,SACAltG,EAAMI,eAAen1B,KAAKkiI,eAG5BliI,KAAK6iI,mBACH,YACC,KAAM,UAAW,GAClB,SACC,KAAM,QAAS,GAChB,YACA,UACA,eACA,UACA,cACA,UACA,QACA,SACA,aACC,KAAM,UAAW,GAClB,aACA,UACA,aACA,UACA,cACA9tG,EAAMoB,qBAGRn2B,KAAKmiI,yBACH,OACAptG,EAAMM,iBACN,SACAN,EAAMI,eAAen1B,KAAK6iI,mBAC1B,SACA9tG,EAAMI,eAAen1B,KAAKkiI,eAG5BliI,KAAKyiI,oBACH,WACA1tG,EAAMoB,oBACN,OACA,SACA,SACA,SACA,QACApB,EAAMI,eAAe,UAGvBn1B,KAAK0iI,oBACH,OACA3tG,EAAMM,iBACN,UACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,eACC,KAAM,UAAW,GAClB,QACC,KAAM,UAAW,GAClB,SACAN,EAAMI,eAAen1B,KAAKyiI,qBAG5BziI,KAAKg3B,OAASh3B,KAAK4iI,eACjB,cACA7tG,EAAMI,eAAen1B,KAAKijI,oBAC1B,aACAluG,EAAMI,eAAen1B,KAAKmiI,yBAC1B,eACAptG,EAAMI,eAAen1B,KAAK0iI,sBAK9B3qF,EAAG,WACD/3C,KAAKiiI,cACH,YACC,KAAM,UAAW,GAClB,SACC,KAAM,QAAS,GAChB,YACA,UACA,eACA,UACA,cACA,UACA,QACA,UAGFjiI,KAAKkiI,cACH,OACA,UACA,WACA,UACA,QACA,UACA,QACA,UACA,SACA,UACA,YACA,UACA,YACA,UAGFliI,KAAKijI,oBACH,OACAluG,EAAMM,iBACN,SACAN,EAAMI,eAAen1B,KAAKiiI,cAC1B,SACAltG,EAAMI,eAAen1B,KAAKkiI,eAG5BliI,KAAK6iI,mBACH,YACC,KAAM,UAAW,GAClB,SACC,KAAM,QAAS,GAChB,YACA,UACA,eACA,UACA,cACA,UACA,QACA,SACA,aACC,KAAM,UAAW,GAClB,aACA,UACA,aACA,UACA,cACA9tG,EAAMoB,qBAGRn2B,KAAKmiI,yBACH,OACAptG,EAAMM,iBACN,SACAN,EAAMI,eAAen1B,KAAK6iI,mBAC1B,SACA9tG,EAAMI,eAAen1B,KAAKkiI,eAG5BliI,KAAKg3B,OAASh3B,KAAK4iI,eACjB,cACA7tG,EAAMI,eAAen1B,KAAKijI,oBAC1B,aACAluG,EAAMI,eAAen1B,KAAKmiI,2BAK9BjpF,EAAG,WACDl5C,KAAKiiI,cACH,YACC,KAAM,UAAW,GAClB,SACC,KAAM,QAAS,GAChB,YACA,UACA,eACA,UACA,cACA,UACA,QACA,UAGFjiI,KAAKkiI,cACH,OACA,UACA,WACA,UACA,QACA,UACA,QACA,UACA,SACA,UACA,YACA,UACA,YACA,UAGFliI,KAAKijI,oBACH,OACAluG,EAAMM,iBACN,SACAN,EAAMI,eAAen1B,KAAKiiI,cAC1B,SACAltG,EAAMI,eAAen1B,KAAKkiI,eAG5BliI,KAAKg3B,OAASh3B,KAAK4iI,eAAiB,SAAU7tG,EAAMI,eAAe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ClB,YACC,KAAM,UAAW,GAClB,gBACAl0G,EAAMI,eAAe,UACrB,OACAJ,EAAMM,iBACN,QACA,SACA,SACA,UACA,gBACA,SACA,QACA,UACA,YACA,UACA,WACA,UACA,OACA,WAGFr1B,KAAKkpI,sBACH,OACAn0G,EAAMM,iBACN,aACA,SACA,WACA,SACA,UACA,UACA,WACA,UACA,QACA,SACA,OACA,WAGFr1B,KAAKmpI,oBACH,UACAp0G,EAAMI,eAAen1B,KAAKipI,gBAC1B,UACAl0G,EAAMI,eAAen1B,KAAKkpI,uBAG5BlpI,KAAKopI,qBACH,OACAr0G,EAAMM,iBACN,SACC,KAAM,QAAS,GAChB,cACA,UACA,YACA,UACA,eACA,WAGFr1B,KAAKqpI,mBAAqB,eAAgBt0G,EAAMI,eAAen1B,KAAKopI,sBAEpEppI,KAAKu7H,gBAAkB,MAAO,SAAU,WAAYxmG,EAAMI,eAAe,UAEzEn1B,KAAKspI,yBAA2B,QAASv0G,EAAMM,iBAAkB,SAAU,SAE3Er1B,KAAKupI,wBAA0B,UAAWx0G,EAAMI,eAAen1B,KAAKspI,0BAEpEtpI,KAAKwpI,2BACH,gBACAz0G,EAAMM,iBACN,WACAN,EAAMk4D,kBACN,UACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,IAGpBjtF,KAAKypI,uBAAyB,SAAU,QAAS,YAAa,UAE9DzpI,KAAK0pI,yBACH,WACA,SACA,eACA,SACA,aACA,SACA,aACA,UAGF1pI,KAAK2pI,mBACH,gBACA,SACA,OACA,UACA,UACA,UACA,kBACA,UACA,QACA,UACA,eACA,UACA,SACA,UACA,OACA,UACA,OACA3pI,KAAKu7H,eACL,UACAxmG,EAAMI,eAAe,UACrB,SACAJ,EAAMI,eAAen1B,KAAKupI,wBAC1B,gBACAx0G,EAAMI,eAAen1B,KAAKwpI,2BAC1B,YACAz0G,EAAMI,eAAen1B,KAAKypI,uBAC1B,kBACA10G,EAAMI,eAAen1B,KAAK0pI,yBAC1B,kBACA30G,EAAMI,eAAen1B,KAAK0pI,yBAC1B,cACA30G,EAAMI,eAAe,UACrB,oBACAJ,EAAMI,gBAAgB,KAAM,UAAW,IACvC,qBACAJ,EAAMI,eAAe,UACrB,kBACAJ,EAAMI,eAAe,UACrB,YACA,SACA,gBACAJ,EAAMI,eAAe,UACrB,kBACAJ,EAAMI,eAAe,UACrB,mBACAJ,EAAMI,eAAe,UACrB,kBACA,SACA,QACA,QACA,YACA,QACA,kBACA,UACA,UACAJ,EAAMM,kBAGRr1B,KAAK4pI,oBACH,OACA70G,EAAMM,iBACN,cACA,UACA,YACA,UACA,eACA,WAGFr1B,KAAK6pI,kBAAoB,aAAc90G,EAAMI,eAAen1B,KAAK4pI,qBAEjE5pI,KAAK8pI,yBACH,OACA/0G,EAAMM,iBACN,cACAN,EAAMI,eAAe,UACrB,QACA,SACA,MACA,SACA,gBACA,UAGFn1B,KAAK+pI,uBACH,OACAh1G,EAAMM,iBACN,cACAN,EAAMI,eAAe,UACrB,cACC,KAAM,SAAU,GACjB,YACC,KAAM,SAAU,GACjB,cACA,UACA,gBACC,KAAM,UAAW,GAClB,QACA,SACA,WACAJ,EAAMQ,iBAAiBv1B,KAAK4oI,0BAC5B,MACA,UACA,YACA,UACA,WACA,SACA,WACA,SACA,cACA,UACA,YACC,KAAM,UAAW,GAClB,cACA,SACA,WACC,KAAM,UAAW,GAClB,gBACA,QACA,YACA,UACA,YACC,KAAM,UAAW,GAClB,WACA,UACA,WACA,UACA,kBACA,QACA,kBACC,KAAM,UAAW,GAClB,OACA,QACA,WACA,UACA,iBACA,QACA,QACA,WAGF5oI,KAAKgqI,uBACH,OACAj1G,EAAMM,iBACN,kBACAN,EAAMI,eAAe,UACrB,QACA,SACA,cACA,UACA,UACC,KAAM,UAAW,GAClB,QACA,QACA,YACA,WAGFn1B,KAAKiqI,uBACH,UACAl1G,EAAMI,eAAen1B,KAAK8pI,yBAC1B,QACA/0G,EAAMI,eAAen1B,KAAK+pI,uBAC1B,QACAh1G,EAAMI,eAAen1B,KAAKgqI,wBAG5BhqI,KAAKkqI,sBACH,gBACA,SACA,QACA,SACA,YACA,SACA,YACAn1G,EAAMI,eAAe,SACrB,UACAJ,EAAMI,eAAe,UACrB,QACAJ,EAAMI,eA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AAKksI,yBAC1B,kBACAn3G,EAAMI,eAAen1B,KAAKksI,yBAC1B,cACAn3G,EAAMI,eAAe,UACrB,oBACAJ,EAAMI,gBAAgB,KAAM,UAAW,IACvC,qBACAJ,EAAMI,eAAe,UACrB,kBACAJ,EAAMI,eAAe,UACrB,YACA,SACA,gBACAJ,EAAMI,eAAe,UACrB,kBACAJ,EAAMI,eAAe,UACrB,mBACAJ,EAAMI,eAAe,UACrB,kBACA,SACA,QACA,QACA,YACA,QACA,kBACA,UACA,UACAJ,EAAMM,kBAGRr1B,KAAKosI,oBACH,OACAr3G,EAAMM,iBACN,cACA,UACA,YACA,UACA,eACA,WAGFr1B,KAAKqsI,kBAAoB,aAAct3G,EAAMI,eAAen1B,KAAKosI,qBAEjEpsI,KAAKssI,yBACH,OACAv3G,EAAMM,iBACN,cACAN,EAAMI,eAAe,UACrB,QACA,SACA,MACA,SACA,gBACA,UAGFn1B,KAAKusI,uBACH,OACAx3G,EAAMM,iBACN,cACAN,EAAMI,eAAe,UACrB,cACC,KAAM,SAAU,GACjB,YACC,KAAM,SAAU,GACjB,cACA,UACA,gBACC,KAAM,UAAW,GAClB,QACA,SACA,WACAJ,EAAMQ,iBAAiBv1B,KAAKorI,0BAC5B,MACA,UACA,YACA,UACA,WACA,SACA,WACA,SACA,cACA,UACA,YACC,KAAM,UAAW,GAClB,cACA,SACA,WACC,KAAM,UAAW,GAClB,gBACA,QACA,YACA,UACA,YACC,KAAM,UAAW,GAClB,WACA,UACA,WACA,UACA,kBACA,QACA,kBACC,KAAM,UAAW,GAClB,OACA,QACA,WACA,UACA,iBACA,QACA,QACA,WAGFprI,KAAKwsI,uBACH,OACAz3G,EAAMM,iBACN,kBACAN,EAAMI,eAAe,UACrB,QACA,SACA,cACA,UACA,UACC,KAAM,UAAW,GAClB,QACA,QACA,YACA,WAGFn1B,KAAKysI,uBACH,UACA13G,EAAMI,eAAen1B,KAAKssI,yBAC1B,QACAv3G,EAAMI,eAAen1B,KAAKusI,uBAC1B,QACAx3G,EAAMI,eAAen1B,KAAKwsI,wBAG5BxsI,KAAK0sI,sBAC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,QACA,QACA,SACA,WACA,UACA,cACA,UACA,SACA,UACA,QACA,UACA,SACA,UACA,SACA,UACA,YACAN,EAAMQ,iBAAiBv1B,KAAK4tI,mBAG9B5tI,KAAKguI,gBACH,gBACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,gBACAj5G,EAAMI,eAAe,UACrB,OACAJ,EAAMM,iBACN,QACA,SACA,SACA,UACA,gBACA,SACA,QACA,UACA,YACA,UACA,WACA,UACA,OACA,WAGFr1B,KAAKiuI,sBACH,OACAl5G,EAAMM,iBACN,aACA,SACA,WACA,SACA,UACA,UACA,WACA,UACA,QACA,SACA,OACA,WAGFr1B,KAAKkuI,oBACH,UACAn5G,EAAMI,eAAen1B,KAAKguI,gBAC1B,UACAj5G,EAAMI,eAAen1B,KAAKiuI,uBAG5BjuI,KAAKmuI,qBACH,OACAp5G,EAAMM,iBACN,SACC,KAAM,QAAS,GAChB,cACA,UACA,YACA,UACA,eACA,WAGFr1B,KAAKouI,mBAAqB,eAAgBr5G,EAAMI,eAAen1B,KAAKmuI,sBAEpEnuI,KAAKu7H,gBAAkB,MAAO,SAAU,WAAYxmG,EAAMI,eAAe,UAEzEn1B,KAAKquI,yBAA2B,QAASt5G,EAAMM,iBAAkB,SAAU,SAE3Er1B,KAAKsuI,wBAA0B,UAAWv5G,EAAMI,eAAen1B,KAAKquI,0BAEpEruI,KAAKuuI,2BACH,gBACAx5G,EAAMM,iBACN,WACAN,EAAMk4D,kBACN,UACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,IAGpBjtF,KAAKwuI,uBAAyB,SAAU,QAAS,YAAa,UAE9DxuI,KAAKyuI,yBACH,WACA,SACA,eACA,SACA,aACA,SACA,aACA,UAGFzuI,KAAK0uI,mBACH,gBACA,SACA,OACA,UACA,UACA,UACA,kBACA,UACA,QACA,UACA,eACA,UACA,SACA,UACA,OACA,UACA,OACA1uI,KAAKu7H,eACL,UACAxmG,EAAMI,eAAe,UACrB,SACAJ,EAAMI,eAAen1B,KAAKsuI,wBAC1B,gBACAv5G,EAAMI,eAAen1B,KAAKuuI,2BAC1B,YACAx5G,EAAMI,eAAen1B,KAAKwuI,uBAC1B,kBACAz5G,EAAMI,eAAen1B,KAAKyuI,yBAC1B,kBACA15G,EAAMI,eAAen1B,KAAKyuI,yBAC1B,cACA15G,EAAMI,eAAe,UACrB,oBACAJ,EAAMI,gBAAgB,KAAM,UAAW,IACvC,qBACAJ,EAAMI,eAAe,UACrB,kBACAJ,EAAMI,eAAe,UACrB,YACA,SACA,gBACAJ,EAAMI,eAAe,UACrB,kBACAJ,EAAMI,eAAe,UACrB,mBACAJ,EAAMI,eAAe,UACrB,kBACA,SACA,QACA,QACA,YACA,QACA,kBACA,WAGFn1B,KAAK2uI,oBACH,OACA55G,EAAMM,iBACN,cACA,UACA,YACA,UACA,eACA,WAGFr1B,KAAK4uI,kBAAoB,aAAc75G,EAAMI,eAAen1B,KAAK2uI,qBAEjE3uI,KAAK6uI,yBACH,OACA95G,EAAMM,iBACN,cACAN,EAAMI,eAAe,UACrB,QACA,SACA,MACA,SACA,gBACA,UAGFn1B,KAAK8uI,uBACH,OACA/5G,EAAMM,iBACN,cACAN,EAAMI,eAAe,UACrB,cACC,KAAM,SAAU,GACjB,YACC,KAAM,SAAU,GACjB,cACA,UACA,gBACC,KAAM,UAAW,GAClB,QACA,SACA,WACAJ,EAAMQ,iBAAiBv1B,KAAK2tI,0BAC5B,MACA,UACA,YACA,UACA,WACA,SACA,WACA,SACA,cACA,UACA,YACC,KAAM,UAAW,GAClB,cACA,SACA,WACC,KAAM,UAAW,GAClB,gBACA,QACA,YACA,UACA,YACC,KAAM,UAAW,GAClB,WACA,UACA,WACA,UACA,kBACA,QACA,kBACC,KAAM,UAAW,GAClB,OACA,QACA,WACA,UACA,iBACA,QACA,QACA,WAGF3tI,KAAK+uI,uBACH,OACAh6G,EAAMM,iBACN,kBACAN,EAAMI,eAAe,UACrB,QACA,SACA,cACA,UACA,UACC,KAAM,UAAW,GAClB,QACA,QACA,YACA,WAGFn1B,KAAKgvI,uBACH,UACAj6G,EAAMI,eAAen1B,KAAK6uI,yBAC1B,QACA95G,EAAMI,eAAen1B,KAAK8uI,uBAC1B,QACA/5G,EAAMI,eAA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,OACAv7G,EAAMM,iBACN,OACA,QACA,WACA,QACA,QACA,SACA,WACA,UACA,cACA,UACA,SACA,UACA,QACA,UACA,SACA,UACA,SACA,UACA,YACAN,EAAMQ,iBAAiBv1B,KAAKmwI,mBAG9BnwI,KAAKuwI,gBACH,gBACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,gBACAx7G,EAAMI,eAAe,UACrB,OACAJ,EAAMM,iBACN,QACA,SACA,SACA,UACA,gBACA,SACA,QACA,UACA,YACA,UACA,WACA,UACA,OACA,WAGFr1B,KAAKwwI,sBACH,OACAz7G,EAAMM,iBACN,aACA,SACA,WACA,SACA,UACA,UACA,WACA,UACA,QACA,SACA,OACA,WAGFr1B,KAAKywI,oBACH,UACA17G,EAAMI,eAAen1B,KAAKuwI,gBAC1B,UACAx7G,EAAMI,eAAen1B,KAAKwwI,uBAG5BxwI,KAAK0wI,qBACH,OACA37G,EAAMM,iBACN,SACC,KAAM,QAAS,GAChB,cACA,UACA,YACA,UACA,eACA,WAGFr1B,KAAK2wI,mBAAqB,eAAgB57G,EAAMI,eAAen1B,KAAK0wI,sBAEpE1wI,KAAKu7H,gBAAkB,MAAO,SAAU,WAAYxmG,EAAMI,eAAe,UAEzEn1B,KAAK4wI,yBAA2B,QAAS77G,EAAMM,iBAAkB,SAAU,SAE3Er1B,KAAK6wI,wBAA0B,UAAW97G,EAAMI,eAAen1B,KAAK4wI,0BAEpE5wI,KAAK8wI,2BACH,gBACA/7G,EAAMM,iBACN,WACAN,EAAMk4D,kBACN,UACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,IAGpBjtF,KAAK+wI,uBAAyB,SAAU,QAAS,YAAa,UAE9D/wI,KAAKgxI,yBACH,WACA,SACA,eACA,SACA,aACA,SACA,aACA,UAGFhxI,KAAKixI,mBACH,gBACA,SACA,OACA,UACA,UACA,UACA,kBACA,UACA,QACA,UACA,eACA,UACA,SACA,UACA,OACA,UACA,OACAjxI,KAAKu7H,eACL,UACAxmG,EAAMI,eAAe,UACrB,SACAJ,EAAMI,eAAen1B,KAAK6wI,wBAC1B,gBACA97G,EAAMI,eAAen1B,KAAK8wI,2BAC1B,YACA/7G,EAAMI,eAAen1B,KAAK+wI,uBAC1B,kBACAh8G,EAAMI,eAAen1B,KAAKgxI,yBAC1B,kBACAj8G,EAAMI,eAAen1B,KAAKgxI,yBAC1B,cACAj8G,EAAMI,eAAe,UACrB,oBACAJ,EAAMI,gBAAgB,KAAM,UAAW,IACvC,qBACAJ,EAAMI,eAAe,UACrB,kBACAJ,EAAMI,eAAe,UACrB,YACA,SACA,gBACAJ,EAAMI,eAAe,UACrB,kBACAJ,EAAMI,eAAe,UACrB,mBACAJ,EAAMI,eAAe,UACrB,kBACA,SACA,QACA,QACA,YACA,QACA,kBACA,WAGFn1B,KAAKkxI,oBACH,OACAn8G,EAAMM,iBACN,cACA,UACA,YACA,UACA,eACA,WAGFr1B,KAAKmxI,kBAAoB,aAAcp8G,EAAMI,eAAen1B,KAAKkxI,qBAEjElxI,KAAKoxI,yBACH,OACAr8G,EAAMM,iBACN,cACAN,EAAMI,eAAe,UACrB,QACA,SACA,MACA,SACA,gBACA,UAGFn1B,KAAKqxI,uBACH,OACAt8G,EAAMM,iBACN,cACAN,EAAMI,eAAe,UACrB,cACC,KAAM,SAAU,GACjB,YACC,KAAM,SAAU,GACjB,cACA,UACA,gBACC,KAAM,UAAW,GAClB,QACA,SACA,WACAJ,EAAMQ,iBAAiBv1B,KAAKkwI,0BAC5B,MACA,UACA,YACA,UACA,WACA,SACA,WACA,SACA,cACA,UACA,YACC,KAAM,UAAW,GAClB,cACA,SACA,WACC,KAAM,UAAW,GAClB,gBACA,QACA,YACA,UACA,YACC,KAAM,UAAW,GAClB,WACA,UACA,WACA,UACA,kBACA,QACA,kBACC,KAAM,UAAW,GAClB,OACA,QACA,WACA,UACA,iBACA,QACA,QACA,WAGFlwI,KAAKsxI,uBACH,OACAv8G,EAAMM,iBACN,kBACAN,EAAMI,eAAe,UACrB,QACA,SACA,cACA,UACA,UACC,KAAM,UAAW,GAClB,QACA,QACA,YACA,WAGFn1B,KAAKuxI,uBACH,UACAx8G,EAAMI,eAAen1B,KAAKoxI,yBAC1B,QACAr8G,EAAMI,eAAen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1B,KAAKkzI,0BACH,UACA,QACA,QACA,QACA,MACA,UACA,OACA,QACA,QACA,SAGFlzI,KAAKmzI,kBAAoB,KAAM,KAAM,UAAW,GAAI,KAAM,KAAM,UAAW,GAAI,KAAM,KAAM,UAAW,IAEtGnzI,KAAKozI,yBACH,gBACC,MAAO,KAAM,UAAW,GAAI,GAC7B,yBACC,KAAM,UAAW,GAClB,yBACC,KAAM,UAAW,GAClB,WACA,SACA,gBACC,KAAM,UAAW,GAClB,OACAr+G,EAAMM,iBACN,cACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,cACA,UACA,gBACC,KAAM,UAAW,GAClB,OACA,UACA,eACA,SACA,SACA,UACA,eACAN,EAAMQ,iBAAiBv1B,KAAKizI,uBAC5B,qBACA,SACA,QACA,SACA,WACAl+G,EAAMQ,iBAAiBv1B,KAAKkzI,0BAC5B,YACC,KAAM,UAAW,GAClB,kBACC,KAAM,UAAW,GAClB,eACA,UACA,mBACC,KAAM,UAAW,GAClB,eACC,MAAO,KAAM,UAAW,GAAI,GAC7B,gBACC,MAAO,KAAM,UAAW,GAAI,GAC7B,aACAn+G,EAAMQ,iBAAiBv1B,KAAKizI,uBAC5B,mBACA,SACA,YACC,MAAO,KAAM,UAAW,GAAI,GAC7B,qBACC,KAAM,UAAW,GAClB,qBACC,KAAM,UAAW,GAClB,mBACC,KAAM,UAAW,GAClB,kBACC,KAAM,UAAW,GAClB,cACA,UACA,mBACA,UACA,eACC,KAAM,UAAW,GAClB,iBACC,KAAM,UAAW,GAClB,kBACC,KAAM,UAAW,GAClB,gBACC,KAAM,UAAW,GAClB,YACAl+G,EAAMQ,iBAAiBv1B,KAAKmzI,kBAC5B,gBACA,QACA,gBACA,QACA,aACA,SAGFnzI,KAAKqzI,mBACH,SACAt+G,EAAMI,eAAen1B,KAAKgzI,uBAC1B,WACAj+G,EAAMI,eAAen1B,KAAKozI,0BAG5BpzI,KAAKszI,sBACH,WACA,SACA,OACAv+G,EAAMM,iBACN,OACA,QACA,WACA,QACA,QACA,SACA,WACA,UACA,cACA,UACA,SACA,UACA,QACA,UACA,SACA,UACA,SACA,UACA,YACAN,EAAMQ,iBAAiBv1B,KAAKmzI,mBAG9BnzI,KAAKuzI,gBACH,gBACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,gBACAx+G,EAAMI,eAAe,UACrB,OACAJ,EAAMM,iBACN,QACA,SACA,SACA,UACA,gBACA,SACA,QACA,UACA,YACA,UACA,WACA,UACA,OACA,WAGFr1B,KAAKwzI,sBACH,OACAz+G,EAAMM,iBACN,aACA,SACA,WACA,SACA,UACA,UACA,WACA,UACA,QACA,SACA,OACA,WAGFr1B,KAAKyzI,oBACH,UACA1+G,EAAMI,eAAen1B,KAAKuzI,gBAC1B,UACAx+G,EAAMI,eAAen1B,KAAKwzI,uBAG5BxzI,KAAK0zI,qBACH,OACA3+G,EAAMM,iBACN,SACC,KAAM,QAAS,GAChB,cACA,UACA,YACA,UACA,eACA,WAGFr1B,KAAK2zI,mBAAqB,eAAgB5+G,EAAMI,eAAen1B,KAAK0zI,sBAEpE1zI,KAAKu7H,gBAAkB,MAAO,SAAU,WAAYxmG,EAAMI,eAAe,UAEzEn1B,KAAK4zI,yBAA2B,QAAS7+G,EAAMM,iBAAkB,SAAU,SAE3Er1B,KAAK6zI,wBAA0B,UAAW9+G,EAAMI,eAAen1B,KAAK4zI,0BAEpE5zI,KAAK8zI,2BACH,gBACA/+G,EAAMM,iBACN,WACAN,EAAMk4D,kBACN,UACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,IAGpBjtF,KAAK+zI,uBAAyB,SAAU,QAAS,YAAa,UAE9D/zI,KAAKg0I,yBACH,WACA,SACA,eACA,SACA,aACA,SACA,aACA,UAGFh0I,KAAKi0I,mBACH,gBACA,SACA,OACA,UACA,UACA,UACA,kBACA,UACA,QACA,UACA,eACA,UACA,SACA,UACA,OACA,UACA,OACAj0I,KAAKu7H,eACL,UACAxmG,EAAMI,eAAe,UACrB,SACAJ,EAAMI,eAAen1B,KAAK6zI,wBAC1B,gBACA9+G,EAAMI,eAAen1B,KAAK8zI,2BAC1B,YACA/+G,EAAMI,eAAen1B,KAAK+zI,uBAC1B,kBACAh/G,EAAMI,eAAen1B,KAAKg0I,yBAC1B,kBACAj/G,EAAMI,eAAen1B,KAAKg0I,yBAC1B,cACAj/G,EAAMI,eAAe,UACrB,oBACAJ,EAAMI,gBAAgB,KAAM,UAAW,IACvC,qBACAJ,EAAMI,eAAe,UACrB,kBACAJ,EAAMI,eAAe,UACrB,YACA,SACA,gBACAJ,EAAMI,eAAe,UACrB,kBACAJ,EAAMI,eAAe,UACrB,mBACAJ,EAAMI,eAAe,UACrB,kBACA,SACA,QACA,QACA,YACA,SAGFn1B,KAAKk0I,oBACH,OACAn/G,EAAMM,iBACN,cACA,UACA,YACA,UACA,eACA,WAGFr1B,KAAKm0I,kBAAoB,aAAcp/G,EAAMI,eAAen1B,KAAKk0I,qBAEjEl0I,KAAKo0I,yBACH,OACAr/G,EAAMM,iBACN,cACAN,EAAMI,eAAe,UACrB,QACA,SACA,MACA,SACA,gBACA,UAGFn1B,KAAKq0I,uBACH,OACAt/G,EAAMM,iBACN,cACAN,EAAMI,eAAe,UACrB,cACC,KAAM,SAAU,GACjB,YACC,KAAM,SAAU,GACjB,cACA,UACA,gBACC,KAAM,UAAW,GAClB,QACA,SACA,WACAJ,EAAMQ,iBAAiBv1B,KAAKkzI,0BAC5B,MACA,UACA,YACA,UACA,WACA,SACA,WACA,SACA,cACA,UACA,YACC,KAAM,UAAW,GAClB,cACA,SACA,WACC,KAAM,UAAW,GAClB,gBACA,QACA,YACA,UACA,YACC,KAAM,UAAW,GAClB,WACA,UACA,WACA,UACA,kBACA,QACA,kBACC,KAAM,UAAW,GAClB,OACA,QACA,WACA,UACA,iBACA,QACA,QACA,WAGFlzI,KAAKs0I,uBACH,OACAv/G,EAAMM,iBACN,kBACAN,EAAMI,eAAe,UACrB,QACA,SACA,cACA,UACA,UACC,KAAM,UAAW,GAClB,QACA,QACA,YACA,WAGFn1B,KAAKu0I,uBACH,UACAx/G,EAAMI,eAAen1B,KAAKo0I,yBAC1B,QACAr/G,EAAMI,eAAen1B,KAAKq0I,uBAC1B,QACAt/G,EAAMI,eAAen1B,KAAKs0I,wBAG5Bt0I,KAAKw0I,4BACH,QACA,UACA,UACA,UACA,YACC,KAAM,UAAW,GAClB,QAC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AAM,UAAW,GAClB,kBACC,KAAM,UAAW,GAClB,cACA,UACA,mBACA,UACA,eACC,KAAM,UAAW,GAClB,iBACC,KAAM,UAAW,GAClB,kBACC,KAAM,UAAW,GAClB,gBACC,KAAM,UAAW,GAClB,YACAnhH,EAAMQ,iBAAiBv1B,KAAKo2I,kBAC5B,gBACA,QACA,gBACA,QACA,aACA,SAGFp2I,KAAKs2I,mBACH,SACAvhH,EAAMI,eAAen1B,KAAKi2I,uBAC1B,WACAlhH,EAAMI,eAAen1B,KAAKq2I,0BAG5Br2I,KAAKu2I,sBACH,OACAxhH,EAAMM,iBACN,OACA,QACA,WACA,QACA,QACA,SACA,WACA,UACA,cACA,UACA,SACA,UACA,QACA,UACA,SACA,UACA,SACA,UACA,YACAN,EAAMQ,iBAAiBv1B,KAAKo2I,mBAG9Bp2I,KAAKw2I,gBACH,gBACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,gBACAzhH,EAAMI,eAAe,UACrB,OACAJ,EAAMM,iBACN,QACA,SACA,SACA,UACA,gBACA,SACA,QACA,UACA,YACA,UACA,WACA,UACA,OACA,WAGFr1B,KAAKy2I,sBACH,OACA1hH,EAAMM,iBACN,aACA,SACA,WACA,SACA,UACA,UACA,WACA,UACA,QACA,SACA,OACA,WAGFr1B,KAAK02I,oBACH,UACA3hH,EAAMI,eAAen1B,KAAKw2I,gBAC1B,UACAzhH,EAAMI,eAAen1B,KAAKy2I,uBAG5Bz2I,KAAK22I,qBACH,OACA5hH,EAAMM,iBACN,SACC,KAAM,QAAS,GAChB,cACA,UACA,YACA,UACA,eACA,WAGFr1B,KAAK42I,mBAAqB,eAAgB7hH,EAAMI,eAAen1B,KAAK22I,sBAEpE32I,KAAKu7H,gBAAkB,MAAO,SAAU,WAAYxmG,EAAMI,eAAe,UAEzEn1B,KAAK62I,yBAA2B,QAAS9hH,EAAMM,iBAAkB,SAAU,SAE3Er1B,KAAK82I,wBAA0B,UAAW/hH,EAAMI,eAAen1B,KAAK62I,0BAEpE72I,KAAK+2I,2BACH,gBACAhiH,EAAMM,iBACN,WACAN,EAAMk4D,kBACN,UACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,IAGpBjtF,KAAKg3I,uBAAyB,SAAU,QAAS,YAAa,UAE9Dh3I,KAAKi3I,yBACH,WACA,SACA,eACA,SACA,aACA,SACA,aACA,UAGFj3I,KAAKk3I,mBACH,gBACA,SACA,OACA,UACA,UACA,UACA,kBACA,UACA,QACA,UACA,eACA,UACA,SACA,UACA,OACA,UACA,OACAl3I,KAAKu7H,eACL,UACAxmG,EAAMI,eAAe,UACrB,SACAJ,EAAMI,eAAen1B,KAAK82I,wBAC1B,gBACA/hH,EAAMI,eAAen1B,KAAK+2I,2BAC1B,YACAhiH,EAAMI,eAAen1B,KAAKg3I,uBAC1B,kBACAjiH,EAAMI,eAAen1B,KAAKi3I,yBAC1B,kBACAliH,EAAMI,eAAen1B,KAAKi3I,yBAC1B,cACAliH,EAAMI,eAAe,UACrB,oBACAJ,EAAMI,gBAAgB,KAAM,UAAW,IACvC,qBACAJ,EAAMI,eAAe,UACrB,kBACAJ,EAAMI,eAAe,UACrB,YACA,SACA,gBACAJ,EAAMI,eAAe,UACrB,kBACAJ,EAAMI,eAAe,UACrB,mBACAJ,EAAMI,eAAe,UACrB,kBACA,SACA,QACA,QACA,YACA,SAGFn1B,KAAKm3I,yBACH,OACApiH,EAAMM,iBACN,cACAN,EAAMI,eAAe,UACrB,QACA,SACA,MACA,SACA,gBACA,UAGFn1B,KAAKo3I,uBACH,OACAriH,EAAMM,iBACN,cACAN,EAAMI,eAAe,UACrB,cACC,KAAM,SAAU,GACjB,YACC,KAAM,SAAU,GACjB,cACA,UACA,gBACC,KAAM,UAAW,GAClB,QACA,SACA,WACAJ,EAAMQ,iBAAiBv1B,KAAKm2I,0BAC5B,MACA,UACA,YACA,UACA,WACA,SACA,WACA,SACA,cACA,UACA,YACC,KAAM,UAAW,GAClB,cACA,SACA,WACC,KAAM,UAAW,GAClB,gBACA,QACA,YACA,UACA,YACC,KAAM,UAAW,GAClB,WACA,UACA,WACA,UACA,kBACA,QACA,kBACC,KAAM,UAAW,GAClB,OACA,QACA,WACA,UACA,iBACA,QACA,QACA,WAGFn2I,KAAKq3I,uBACH,OACAtiH,EAAMM,iBACN,kBACAN,EAAMI,eAAe,UACrB,QACA,SACA,cACA,UACA,UACC,KAAM,UAAW,GAClB,QACA,QACA,YACA,WAGFn1B,KAAKs3I,uBACH,UACAviH,EAAMI,eAAen1B,KAAKm3I,yBAC1B,QACApiH,EAAMI,eAAen1B,KAAKo3I,uBAC1B,QACAriH,EAAMI,eAAen1B,KAAKq3I,wBAG5Br3I,KAAKu3I,4BACH,QACA,UACA,UACA,UACA,YACC,KAAM,UAAW,GAClB,QACAxiH,EAAMM,kBAGRr1B,KAAKw3I,wBACH,QACAziH,EAAMM,iBACN,QACA,SACA,cACA,UACA,YACA,UACA,OACA,UACA,eACA,UACA,UACA,UACA,kBACA,UACA,OACA,UACA,SACC,KAAM,UAAW,GAClB,gBACA,UACA,YACA,QACA,iBACC,KAAM,UAAW,GAClB,wBACA,UACA,oBACA,QACA,QACAN,EAAMI,eAAen1B,KAAKu3I,4BAC1B,iBACC,KAAM,UAAW,GAClB,wBACA,UACA,oBACA,QACA,SACC,KAAM,UAAW,GAClB,gBACA,UACA,YACA,SAGFv3I,KAAKy3I,sBACH,gBACA,SACA,QACA,SACA,YACA,SACA,YACA1iH,EAAMI,eAAe,SACrB,UACAJ,EAAMI,eAAe,UACrB,QACAJ,EAAMI,eAAeJ,EAAMM,mBAG7Br1B,KAAK03I,wBACH,OACA3iH,EAAMM,iBACN,eACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,qBACC,MAAO,KAAM,UAAW,GAAI,IAG/Br1B,KAAK23I,yBACH,OACA5iH,EAAMM,iBACN,aACAN,EAAMM,iBACN,eACC,KAAM,UAAW,IAGpBr1B,KAAKg3B,OAASh3B,KAAK43I,kBACjB,eACA7iH,EAAMI,eAAen1B,KAAKo1I,yBAC1B,SACArgH,EAAM6qB,kBAAkB5/C,KAAKw1I,kBAC7B,QACAzgH,EAAMQ,iBAAiBv1B,KAAK+1I,mBAC5B,aACAhhH,EAAMI,eAAen1B,KAAKg2I,sBAC1B,YACAjhH,EAAMQ,iBAAiBv1B,KAAKs2I,mBAC5B,YACAvhH,EAA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C,KAAM,UAAW,GAClB,kBACC,KAAM,UAAW,GAClB,eACA,UACA,mBACC,KAAM,UAAW,GAClB,eACC,MAAO,KAAM,UAAW,GAAI,GAC7B,gBACC,MAAO,KAAM,UAAW,GAAI,GAC7B,aACAnkH,EAAMQ,iBAAiBv1B,KAAKi5I,uBAC5B,mBACA,SACA,YACC,MAAO,KAAM,UAAW,GAAI,GAC7B,qBACC,KAAM,UAAW,GAClB,qBACC,KAAM,UAAW,GAClB,mBACC,KAAM,UAAW,GAClB,kBACC,KAAM,UAAW,GAClB,cACA,UACA,mBACA,UACA,eACC,KAAM,UAAW,GAClB,iBACC,KAAM,UAAW,GAClB,kBACC,KAAM,UAAW,GAClB,gBACC,KAAM,UAAW,GAClB,YACAlkH,EAAMQ,iBAAiBv1B,KAAKm5I,kBAC5B,gBACA,QACA,gBACA,QACA,aACA,SAGFn5I,KAAKq5I,mBACH,SACAtkH,EAAMI,eAAen1B,KAAKg5I,uBAC1B,WACAjkH,EAAMI,eAAen1B,KAAKo5I,0BAG5Bp5I,KAAKs5I,sBACH,OACAvkH,EAAMM,iBACN,OACA,QACA,WACA,QACA,QACA,SACA,WACA,UACA,cACA,UACA,SACA,UACA,QACA,UACA,SACA,UACA,SACA,UACA,YACAN,EAAMQ,iBAAiBv1B,KAAKm5I,mBAG9Bn5I,KAAKu5I,gBACH,gBACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,gBACAxkH,EAAMI,eAAe,UACrB,OACAJ,EAAMM,iBACN,QACA,SACA,SACA,UACA,gBACA,SACA,QACA,UACA,YACA,UACA,WACA,UACA,OACA,WAGFr1B,KAAKw5I,sBACH,OACAzkH,EAAMM,iBACN,aACA,SACA,WACA,SACA,UACA,UACA,WACA,UACA,QACA,SACA,OACA,WAGFr1B,KAAKy5I,oBACH,UACA1kH,EAAMI,eAAen1B,KAAKu5I,gBAC1B,UACAxkH,EAAMI,eAAen1B,KAAKw5I,uBAG5Bx5I,KAAK05I,qBACH,OACA3kH,EAAMM,iBACN,SACC,KAAM,QAAS,GAChB,cACA,UACA,YACA,UACA,eACA,WAGFr1B,KAAK25I,mBAAqB,eAAgB5kH,EAAMI,eAAen1B,KAAK05I,sBAEpE15I,KAAKu7H,gBAAkB,MAAO,SAAU,WAAYxmG,EAAMI,eAAe,UAEzEn1B,KAAK45I,yBAA2B,QAAS7kH,EAAMM,iBAAkB,SAAU,SAE3Er1B,KAAK65I,wBAA0B,UAAW9kH,EAAMI,eAAen1B,KAAK45I,0BAEpE55I,KAAK85I,uBAAyB,SAAU,QAAS,YAAa,UAE9D95I,KAAK+5I,yBACH,WACA,SACA,eACA,SACA,aACA,SACA,aACA,UAGF/5I,KAAKg6I,mBACH,gBACA,SACA,OACA,UACA,UACA,UACA,kBACA,UACA,QACA,UACA,eACA,UACA,SACA,UACA,OACA,UACA,OACAh6I,KAAKu7H,eACL,UACAxmG,EAAMI,eAAe,UACrB,SACAJ,EAAMI,eAAen1B,KAAK65I,wBAC1B,YACA9kH,EAAMI,eAAen1B,KAAK85I,uBAC1B,kBACA/kH,EAAMI,eAAen1B,KAAK+5I,yBAC1B,kBACAhlH,EAAMI,eAAen1B,KAAK+5I,yBAC1B,cACAhlH,EAAMI,eAAe,UACrB,oBACAJ,EAAMI,gBAAgB,KAAM,UAAW,IACvC,qBACAJ,EAAMI,eAAe,UACrB,kBACAJ,EAAMI,eAAe,UACrB,YACA,SACA,gBACAJ,EAAMI,eAAe,UACrB,kBACAJ,EAAMI,eAAe,UACrB,mBACAJ,EAAMI,eAAe,UACrB,kBACA,SACA,QACA,QACA,YACA,SAGFn1B,KAAKi6I,yBACH,OACAllH,EAAMM,iBACN,cACAN,EAAMI,eAAe,UACrB,QACA,SACA,MACA,SACA,gBACA,UAGFn1B,KAAKk6I,uBACH,OACAnlH,EAAMM,iBACN,cACAN,EAAMI,eAAe,UACrB,cACC,KAAM,SAAU,GACjB,YACC,KAAM,SAAU,GACjB,cACA,UACA,gBACC,KAAM,UAAW,GAClB,QACA,SACA,WACAJ,EAAMQ,iBAAiBv1B,KAAKk5I,0BAC5B,MACA,UACA,YACA,UACA,WACA,SACA,WACA,SACA,cACA,UACA,YACC,KAAM,UAAW,GAClB,cACA,SACA,WACC,KAAM,UAAW,GAClB,gBACA,QACA,YACA,UACA,YACC,KAAM,UAAW,GAClB,WACA,UACA,WACA,UACA,kBACA,QACA,kBACC,KAAM,UAAW,GAClB,OACA,QACA,WACA,UACA,iBACA,QACA,QACA,WAGFl5I,KAAKm6I,uBACH,OACAplH,EAAMM,iBACN,kBACAN,EAAMI,eAAe,UACrB,QACA,SACA,cACA,UACA,UACC,KAAM,UAAW,GAClB,QACA,QACA,YACA,WAGFn1B,KAAKo6I,uBACH,UACArlH,EAAMI,eAAen1B,KAAKi6I,yBAC1B,QACAllH,EAAMI,eAAen1B,KAAKk6I,uBAC1B,QACAnlH,EAAMI,eAAen1B,KAAKm6I,wBAG5Bn6I,KAAKq6I,4BACH,QACA,UACA,UACA,UACA,YACC,KAAM,UAAW,GAClB,QACAtlH,EAAMM,kBAGRr1B,KAAKs6I,wBACH,QACAvlH,EAAMM,iBACN,QACA,SACA,cACA,UACA,YACA,UACA,OACA,UACA,eACA,UACA,UACA,UACA,kBACA,UACA,OACA,UACA,SACC,KAAM,UAAW,GAClB,gBACA,UACA,YACA,QACA,iBACC,KAAM,UAAW,GAClB,wBACA,UACA,oBACA,QACA,QACAN,EAAMI,eAAen1B,KAAKq6I,4BAC1B,iBACC,KAAM,UAAW,GAClB,wBACA,UACA,oBACA,QACA,SACC,KAAM,UAAW,GAClB,gBACA,UACA,YACA,SAGFr6I,KAAKu6I,sBACH,gBACA,SACA,QACA,SACA,YACA,SACA,YACAxlH,EAAMI,eAAe,SACrB,UACAJ,EAAMI,eAAe,UACrB,QACAJ,EAAMI,eAAeJ,EAAMM,mBAG7Br1B,KAAKw6I,wBACH,OACAzlH,EAAMM,iBACN,eACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,qBACC,MAAO,KAAM,UAAW,GAAI,IAG/Br1B,KAAKy6I,yBACH,OACA1lH,EAAMM,iBACN,aACAN,EAAMM,iBACN,eACC,KAAM,UAAW,IAGpBr1B,KAAKg3B,OAASh3B,KAAK06I,kBACjB,eACA3lH,EAAMI,eAAen1B,KAAKm4I,yBAC1B,SACApjH,EAAM6qB,kBAAkB5/C,KAAKu4I,kBAC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ACA,UACA,eACA,SACA,SACA,UACA,eACAN,EAAMQ,iBAAiBv1B,KAAK+7I,uBAC5B,qBACA,SACA,QACA,SACA,WACAhnH,EAAMQ,iBAAiBv1B,KAAKg8I,0BAC5B,YACC,KAAM,UAAW,GAClB,kBACC,KAAM,UAAW,GAClB,eACA,UACA,mBACC,KAAM,UAAW,GAClB,eACC,MAAO,KAAM,UAAW,GAAI,GAC7B,gBACC,MAAO,KAAM,UAAW,GAAI,GAC7B,aACAjnH,EAAMQ,iBAAiBv1B,KAAK+7I,uBAC5B,mBACA,SACA,YACC,MAAO,KAAM,UAAW,GAAI,GAC7B,qBACC,KAAM,UAAW,GAClB,qBACC,KAAM,UAAW,GAClB,mBACC,KAAM,UAAW,GAClB,kBACC,KAAM,UAAW,GAClB,cACA,UACA,mBACA,UACA,eACC,KAAM,UAAW,GAClB,iBACC,KAAM,UAAW,GAClB,kBACC,KAAM,UAAW,GAClB,gBACC,KAAM,UAAW,GAClB,YACAhnH,EAAMQ,iBAAiBv1B,KAAKi8I,kBAC5B,gBACA,QACA,gBACA,QACA,aACA,SAGFj8I,KAAKm8I,mBACH,SACApnH,EAAMI,eAAen1B,KAAK87I,uBAC1B,WACA/mH,EAAMI,eAAen1B,KAAKk8I,0BAG5Bl8I,KAAKo8I,sBACH,OACArnH,EAAMM,iBACN,OACA,QACA,WACA,QACA,QACA,SACA,WACA,UACA,cACA,UACA,SACA,UACA,QACA,UACA,SACA,UACA,SACA,UACA,YACAN,EAAMQ,iBAAiBv1B,KAAKi8I,mBAG9Bj8I,KAAKq8I,gBACH,gBACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,gBACAtnH,EAAMI,eAAe,UACrB,OACAJ,EAAMM,iBACN,QACA,SACA,SACA,UACA,gBACA,SACA,QACA,UACA,YACA,UACA,WACA,UACA,OACA,WAGFr1B,KAAKs8I,sBACH,OACAvnH,EAAMM,iBACN,aACA,SACA,WACA,SACA,UACA,UACA,WACA,UACA,QACA,SACA,OACA,WAGFr1B,KAAKu8I,oBACH,UACAxnH,EAAMI,eAAen1B,KAAKq8I,gBAC1B,UACAtnH,EAAMI,eAAen1B,KAAKs8I,uBAG5Bt8I,KAAKw8I,qBACH,OACAznH,EAAMM,iBACN,SACC,KAAM,QAAS,GAChB,cACA,UACA,YACA,UACA,eACA,WAGFr1B,KAAKy8I,mBAAqB,eAAgB1nH,EAAMI,eAAen1B,KAAKw8I,sBAEpEx8I,KAAKu7H,gBAAkB,MAAO,SAAU,WAAYxmG,EAAMI,eAAe,UAEzEn1B,KAAK08I,yBAA2B,QAAS3nH,EAAMM,iBAAkB,SAAU,SAE3Er1B,KAAK28I,wBAA0B,UAAW5nH,EAAMI,eAAen1B,KAAK08I,0BAEpE18I,KAAK48I,uBAAyB,SAAU,QAAS,YAAa,UAE9D58I,KAAK68I,yBACH,WACA,SACA,eACA,SACA,aACA,SACA,aACA,UAGF78I,KAAK88I,mBACH,gBACA,SACA,OACA,UACA,UACA,UACA,kBACA,UACA,QACA,UACA,eACA,UACA,SACA,UACA,OACA,UACA,OACA98I,KAAKu7H,eACL,UACAxmG,EAAMI,eAAe,UACrB,SACAJ,EAAMI,eAAen1B,KAAK28I,wBAC1B,YACA5nH,EAAMI,eAAen1B,KAAK48I,uBAC1B,kBACA7nH,EAAMI,eAAen1B,KAAK68I,yBAC1B,kBACA9nH,EAAMI,eAAen1B,KAAK68I,yBAC1B,cACA9nH,EAAMI,eAAe,UACrB,oBACAJ,EAAMI,gBAAgB,KAAM,UAAW,IACvC,qBACAJ,EAAMI,eAAe,UACrB,kBACAJ,EAAMI,eAAe,UACrB,YACA,SACA,gBACAJ,EAAMI,eAAe,UACrB,kBACAJ,EAAMI,eAAe,UACrB,mBACAJ,EAAMI,eAAe,UACrB,kBACA,SACA,QACA,QACA,YACA,SAGFn1B,KAAK+8I,yBACH,OACAhoH,EAAMM,iBACN,cACAN,EAAMI,eAAe,UACrB,QACA,SACA,MACA,SACA,gBACA,UAGFn1B,KAAKg9I,uBACH,OACAjoH,EAAMM,iBACN,cACAN,EAAMI,eAAe,UACrB,cACC,KAAM,SAAU,GACjB,YACC,KAAM,SAAU,GACjB,cACA,UACA,gBACC,KAAM,UAAW,GAClB,QACA,SACA,WACAJ,EAAMQ,iBAAiBv1B,KAAKg8I,0BAC5B,MACA,UACA,YACA,UACA,WACA,SACA,WACA,SACA,cACA,UACA,YACC,KAAM,UAAW,GAClB,cACA,SACA,WACC,KAAM,UAAW,GAClB,gBACA,QACA,YACA,UACA,WACA,UACA,WACA,UACA,kBACA,QACA,kBACC,KAAM,UAAW,GAClB,OACA,QACA,WACA,UACA,iBACA,QACA,QACA,WAGFh8I,KAAKi9I,uBACH,OACAloH,EAAMM,iBACN,kBACAN,EAAMI,eAAe,UACrB,QACA,SACA,cACA,UACA,UACC,KAAM,UAAW,GAClB,QACA,QACA,YACA,WAGFn1B,KAAKk9I,uBACH,UACAnoH,EAAMI,eAAen1B,KAAK+8I,yBAC1B,QACAhoH,EAAMI,eAAen1B,KAAKg9I,uBAC1B,QACAjoH,EAAMI,eAAen1B,KAAKi9I,wBAG5Bj9I,KAAKm9I,4BACH,QACA,UACA,UACA,UACA,YACC,KAAM,UAAW,GAClB,QACApoH,EAAMM,kBAGRr1B,KAAKo9I,wBACH,QACAroH,EAAMM,iBACN,QACA,SACA,cACA,UACA,YACA,UACA,OACA,UACA,eACA,UACA,UACA,UACA,kBACA,UACA,OACA,UACA,SACC,KAAM,UAAW,GAClB,gBACA,UACA,YACA,QACA,iBACC,KAAM,UAAW,GAClB,wBACA,UACA,oBACA,QACA,QACAN,EAAMI,eAAen1B,KAAKm9I,4BAC1B,iBACC,KAAM,UAAW,GAClB,wBACA,UACA,oBACA,QACA,SACC,KAAM,UAAW,GAClB,gBACA,UACA,YACA,SAGFn9I,KAAKq9I,sBACH,gBACA,SACA,QACA,SACA,YACA,SACA,YACAtoH,EAAMI,eAAe,SACrB,UACAJ,EAAMI,eAAe,UACrB,QACAJ,EAAMI,eAAeJ,EAAMM,mBAG7Br1B,KAAKs9I,wBACH,OACAvoH,EAAMM,iBACN,eACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,qBACC,MAAO,KAAM,UAAW,GAAI,IAG/Br1B,KAAKu9I,yBACH,OACAxoH,EAAMM,iBACN,aACAN,EAAMM,iBACN,eACC,KAAM,UAAW,IAGpBr1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M,UAAW,GAClB,OACAjqH,EAAMM,iBACN,cACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,cACA,UACA,gBACC,KAAM,UAAW,GAClB,OACA,UACA,eACA,SACA,SACA,UACA,eACAN,EAAMQ,iBAAiBv1B,KAAK6+I,uBAC5B,qBACA,SACA,QACA,SACA,WACA9pH,EAAMQ,iBAAiBv1B,KAAK8+I,0BAC5B,YACC,KAAM,UAAW,GAClB,kBACC,KAAM,UAAW,GAClB,eACA,UACA,mBACC,KAAM,UAAW,GAClB,eACC,MAAO,KAAM,UAAW,GAAI,GAC7B,gBACC,MAAO,KAAM,UAAW,GAAI,GAC7B,aACA/pH,EAAMQ,iBAAiBv1B,KAAK6+I,uBAC5B,mBACA,SACA,YACC,MAAO,KAAM,UAAW,GAAI,GAC7B,qBACC,KAAM,UAAW,GAClB,qBACC,KAAM,UAAW,GAClB,mBACC,KAAM,UAAW,GAClB,kBACC,KAAM,UAAW,GAClB,cACA,UACA,mBACA,UACA,eACC,KAAM,UAAW,GAClB,iBACC,KAAM,UAAW,GAClB,kBACC,KAAM,UAAW,GAClB,gBACC,KAAM,UAAW,GAClB,YACA9pH,EAAMQ,iBAAiBv1B,KAAK++I,kBAC5B,gBACA,QACA,gBACA,QACA,aACA,SAGF/+I,KAAKi/I,mBACH,SACAlqH,EAAMI,eAAen1B,KAAK4+I,uBAC1B,WACA7pH,EAAMI,eAAen1B,KAAKg/I,0BAG5Bh/I,KAAKk/I,sBACH,OACAnqH,EAAMM,iBACN,OACA,QACA,WACA,QACA,QACA,SACA,WACA,UACA,cACA,UACA,SACA,UACA,QACA,UACA,SACA,UACA,SACA,UACA,YACAN,EAAMQ,iBAAiBv1B,KAAK++I,mBAG9B/+I,KAAKm/I,gBACH,gBACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,gBACApqH,EAAMI,eAAe,UACrB,OACAJ,EAAMM,iBACN,QACA,SACA,SACA,UACA,gBACA,SACA,QACA,UACA,YACA,UACA,WACA,UACA,OACA,WAGFr1B,KAAKo/I,sBACH,OACArqH,EAAMM,iBACN,aACA,SACA,WACA,SACA,UACA,UACA,WACA,UACA,QACA,SACA,OACA,WAGFr1B,KAAKq/I,oBACH,UACAtqH,EAAMI,eAAen1B,KAAKm/I,gBAC1B,UACApqH,EAAMI,eAAen1B,KAAKo/I,uBAG5Bp/I,KAAKs/I,qBACH,OACAvqH,EAAMM,iBACN,SACC,KAAM,QAAS,GAChB,cACA,UACA,YACA,UACA,eACA,WAGFr1B,KAAKu/I,mBAAqB,eAAgBxqH,EAAMI,eAAen1B,KAAKs/I,sBAEpEt/I,KAAKu7H,gBAAkB,MAAO,SAAU,WAAYxmG,EAAMI,eAAe,UAEzEn1B,KAAKw/I,yBAA2B,QAASzqH,EAAMM,iBAAkB,SAAU,SAE3Er1B,KAAKy/I,wBAA0B,UAAW1qH,EAAMI,eAAen1B,KAAKw/I,0BAEpEx/I,KAAK0/I,uBAAyB,SAAU,QAAS,YAAa,UAE9D1/I,KAAK2/I,yBACH,WACA,SACA,eACA,SACA,aACA,SACA,aACA,UAGF3/I,KAAK4/I,mBACH,gBACA,SACA,OACA,UACA,UACA,UACA,kBACA,UACA,QACA,UACA,eACA,UACA,SACA,UACA,OACA,UACA,OACA5/I,KAAKu7H,eACL,UACAxmG,EAAMI,eAAe,UACrB,SACAJ,EAAMI,eAAen1B,KAAKy/I,wBAC1B,YACA1qH,EAAMI,eAAen1B,KAAK0/I,uBAC1B,kBACA3qH,EAAMI,eAAen1B,KAAK2/I,yBAC1B,kBACA5qH,EAAMI,eAAen1B,KAAK2/I,yBAC1B,cACA5qH,EAAMI,eAAe,UACrB,oBACAJ,EAAMI,gBAAgB,KAAM,UAAW,IACvC,qBACAJ,EAAMI,eAAe,UACrB,kBACAJ,EAAMI,eAAe,UACrB,YACA,SACA,kBACA,SACA,QACA,QACA,YACA,SAGFn1B,KAAK6/I,yBACH,OACA9qH,EAAMM,iBACN,cACAN,EAAMI,eAAe,UACrB,QACA,SACA,MACA,SACA,gBACA,UAGFn1B,KAAK8/I,uBACH,OACA/qH,EAAMM,iBACN,cACAN,EAAMI,eAAe,UACrB,cACC,KAAM,SAAU,GACjB,YACC,KAAM,SAAU,GACjB,cACA,UACA,gBACC,KAAM,UAAW,GAClB,QACA,SACA,MACA,UACA,cACA,UACA,YACC,KAAM,UAAW,GAClB,cACA,SACA,WACC,KAAM,UAAW,GAClB,gBACA,QACA,SACA,UACA,YACA,UACA,WACA,UACA,WACA,UACA,YACA,UACA,kBACA,QACA,OACA,QACA,WACA,UACA,iBACA,QACA,QACA,WAGFn1B,KAAK+/I,uBACH,OACAhrH,EAAMM,iBACN,kBACAN,EAAMI,eAAe,UACrB,QACA,SACA,cACA,UACA,UACC,KAAM,UAAW,GAClB,QACA,QACA,YACA,WAGFn1B,KAAKggJ,uBACH,UACAjrH,EAAMI,eAAen1B,KAAK6/I,yBAC1B,QACA9qH,EAAMI,eAAen1B,KAAK8/I,uBAC1B,QACA/qH,EAAMI,eAAen1B,KAAK+/I,wBAG5B//I,KAAKigJ,4BACH,QACA,UACA,UACA,UACA,YACC,KAAM,UAAW,GAClB,QACAlrH,EAAMM,kBAGRr1B,KAAKkgJ,wBACH,QACAnrH,EAAMM,iBACN,QACA,SACA,cACA,UACA,YACA,UACA,OACA,UACA,eACA,UACA,UACA,UACA,kBACA,UACA,OACA,UACA,SACC,KAAM,UAAW,GAClB,gBACA,UACA,YACA,QACA,iBACC,KAAM,UAAW,GAClB,wBACA,UACA,oBACA,QACA,QACAN,EAAMI,eAAen1B,KAAKigJ,4BAC1B,iBACC,KAAM,UAAW,GAClB,wBACA,UACA,oBACA,QACA,SACC,KAAM,UAAW,GAClB,gBACA,UACA,YACA,SAGFjgJ,KAAKmgJ,sBACH,gBACA,SACA,QACA,SACA,YACA,SACA,YACAprH,EAAMI,eAAe,SACrB,UACAJ,EAAMI,eAAe,UACrB,QACAJ,EAAMI,eAAeJ,EAAMM,mBAG7Br1B,KAAKogJ,wBACH,OACArrH,EAAMM,iBACN,eACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,qBACC,MAAO,KAAM,UAAW,GAAI,IAG/Br1B,KAAKqgJ,yBACH,OACAtrH,EAAMM,iBACN,aACAN,EAAMM,iBACN,eACC,KAAM,UAAW,IAGpBr1B,KAAKg3B,OAASh3B,KAAKsgJ,kBACjB,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,YACC,KAAM,UAAW,GAClB,cACA,SACA,WACC,KAAM,UAAW,GAClB,gBACA,QACA,SACA,UACA,YACA,UACA,WACA,UACA,WACA,UACA,YACA,UACA,kBACA,QACA,OACA,QACA,WACA,UACA,iBACA,QACA,QACA,WAGFn1B,KAAK6iJ,uBACH,OACA9tH,EAAMM,iBACN,kBACAN,EAAMI,eAAe,UACrB,QACA,SACA,cACA,UACA,UACC,KAAM,UAAW,GAClB,QACA,QACA,YACA,WAGFn1B,KAAK8iJ,uBACH,UACA/tH,EAAMI,eAAen1B,KAAK2iJ,yBAC1B,QACA5tH,EAAMI,eAAen1B,KAAK4iJ,uBAC1B,QACA7tH,EAAMI,eAAen1B,KAAK6iJ,wBAG5B7iJ,KAAK+iJ,4BACH,QACA,UACA,UACA,UACA,YACC,KAAM,UAAW,GAClB,QACAhuH,EAAMM,kBAGRr1B,KAAKgjJ,wBACH,QACAjuH,EAAMM,iBACN,QACA,SACA,cACA,UACA,YACA,UACA,OACA,UACA,eACA,UACA,UACA,UACA,kBACA,UACA,OACA,UACA,SACC,KAAM,UAAW,GAClB,gBACA,UACA,YACA,QACA,iBACC,KAAM,UAAW,GAClB,wBACA,UACA,oBACA,QACA,QACAN,EAAMI,eAAen1B,KAAK+iJ,4BAC1B,iBACC,KAAM,UAAW,GAClB,wBACA,UACA,oBACA,QACA,SACC,KAAM,UAAW,GAClB,gBACA,UACA,YACA,SAGF/iJ,KAAKijJ,sBACH,gBACA,SACA,QACA,SACA,YACA,SACA,YACAluH,EAAMI,eAAe,SACrB,UACAJ,EAAMI,eAAe,UACrB,QACAJ,EAAMI,eAAeJ,EAAMM,mBAG7Br1B,KAAKkjJ,wBACH,OACAnuH,EAAMM,iBACN,eACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,qBACC,MAAO,KAAM,UAAW,GAAI,IAG/Br1B,KAAKg3B,OAASh3B,KAAKmjJ,kBACjB,eACApuH,EAAMI,eAAen1B,KAAK6gJ,yBAC1B,SACA9rH,EAAM6qB,kBAAkB5/C,KAAKihJ,kBAC7B,QACAlsH,EAAMQ,iBAAiBv1B,KAAKwhJ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A2B,QAASjzH,EAAMM,iBAAkB,SAAU,SAE3Er1B,KAAKioJ,wBAA0B,UAAWlzH,EAAMI,eAAen1B,KAAKgoJ,0BAEpEhoJ,KAAKkoJ,uBAAyB,SAAU,QAAS,YAAa,UAE9DloJ,KAAKmoJ,yBACH,WACA,SACA,eACA,SACA,aACA,SACA,aACA,UAGFnoJ,KAAKooJ,mBACH,gBACA,SACA,OACA,UACA,UACA,UACA,kBACA,UACA,QACA,UACA,eACA,UACA,SACA,UACA,OACA,UACA,OACApoJ,KAAKu7H,eACL,UACAxmG,EAAMI,eAAe,UACrB,SACAJ,EAAMI,eAAen1B,KAAKioJ,wBAC1B,YACAlzH,EAAMI,eAAen1B,KAAKkoJ,uBAC1B,kBACAnzH,EAAMI,eAAen1B,KAAKmoJ,yBAC1B,kBACApzH,EAAMI,eAAen1B,KAAKmoJ,yBAC1B,cACApzH,EAAMI,eAAe,UACrB,oBACAJ,EAAMI,gBAAgB,KAAM,UAAW,IACvC,qBACAJ,EAAMI,eAAe,UACrB,kBACAJ,EAAMI,eAAe,UACrB,YACA,SACA,kBACA,SACA,QACA,QACA,YACA,SAGFn1B,KAAKqoJ,yBACH,OACAtzH,EAAMM,iBACN,cACAN,EAAMI,eAAe,UACrB,QACA,SACA,MACA,SACA,gBACA,UAGFn1B,KAAKsoJ,uBACH,OACAvzH,EAAMM,iBACN,cACAN,EAAMI,eAAe,UACrB,cACC,KAAM,SAAU,GACjB,YACC,KAAM,SAAU,GACjB,cACA,UACA,gBACC,KAAM,UAAW,GAClB,QACA,SACA,MACA,UACA,cACA,UACA,YACC,KAAM,UAAW,GAClB,cACA,SACA,WACC,KAAM,UAAW,GAClB,gBACA,QACA,SACA,UACA,YACA,UACA,WACA,UACA,WACA,UACA,YACA,UACA,kBACA,QACA,OACA,QACA,WACA,UACA,iBACA,QACA,QACA,WAGFn1B,KAAKuoJ,uBACH,OACAxzH,EAAMM,iBACN,kBACAN,EAAMI,eAAe,UACrB,QACA,SACA,cACA,UACA,UACC,KAAM,UAAW,GAClB,QACA,QACA,YACA,WAGFn1B,KAAKwoJ,uBACH,UACAzzH,EAA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SACAJ,EAAMI,eAAen1B,KAAK6qJ,wBAC1B,YACA91H,EAAMI,eAAen1B,KAAK8qJ,uBAC1B,kBACA/1H,EAAMI,eAAen1B,KAAK+qJ,yBAC1B,kBACAh2H,EAAMI,eAAen1B,KAAK+qJ,yBAC1B,kBACA,SACA,cACAh2H,EAAMI,eAAe,UACrB,oBACAJ,EAAMI,gBAAgB,KAAM,UAAW,IACvC,qBACAJ,EAAMI,eAAe,UACrB,kBACAJ,EAAMI,eAAe,WAGvBn1B,KAAKirJ,yBACH,OACAl2H,EAAMM,iBACN,cACAN,EAAMI,eAAe,UACrB,QACA,SACA,MACA,SACA,gBACA,UAGFn1B,KAAKkrJ,uBACH,OACAn2H,EAAMM,iBACN,cACAN,EAAMI,eAAe,UACrB,cACC,KAAM,SAAU,GACjB,YACC,KAAM,SAAU,GACjB,cACA,UACA,gBACC,KAAM,UAAW,GAClB,QACA,SACA,MACA,UACA,cACA,UACA,YACC,KAAM,UAAW,GAClB,cACA,SACA,WACC,KAAM,UAAW,GAClB,gBACA,QACA,SACA,UACA,YACA,UACA,WACA,UACA,WACA,UACA,YACA,UACA,kBACA,QACA,OACA,QACA,WACA,UACA,iBACA,QACA,QACA,WAGFn1B,KAAKmrJ,uBACH,OACAp2H,EAAMM,iBACN,kBACAN,EAAMI,eAAe,UACrB,QACA,SACA,cACA,UACA,UACC,KAAM,UAAW,GAClB,QACA,QACA,YACA,WAGFn1B,KAAKorJ,uBACH,UACAr2H,EAAMI,eAAen1B,KAAKirJ,yBAC1B,QACAl2H,EAAMI,eAAen1B,KAAKkrJ,uBAC1B,QACAn2H,EAAMI,eAAen1B,KAAKmrJ,wBAG5BnrJ,KAAKqrJ,4BACH,QACA,UACA,UACA,UACA,YACC,KAAM,UAAW,GAClB,QACAt2H,EAAMM,kBAGRr1B,KAAKsrJ,wBACH,QACAv2H,EAAMM,iBACN,QACA,SACA,cACA,UACA,YACA,UACA,OACA,UACA,eACA,UACA,UACA,UACA,kBACA,UACA,OACA,UACA,SACC,KAAM,UAAW,GAClB,gBACA,UACA,YACA,QACA,iBACC,KAAM,UAAW,GAClB,wB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AN,EAAMI,eAAe,UACrB,cACC,KAAM,SAAU,GACjB,YACC,KAAM,SAAU,GACjB,cACA,UACA,gBACC,KAAM,UAAW,GAClB,QACA,SACA,MACA,UACA,cACA,UACA,YACC,KAAM,UAAW,GAClB,cACA,SACA,WACC,KAAM,UAAW,GAClB,gBACA,QACA,SACA,UACA,YACA,UACA,WACA,UACA,WACA,UACA,YACA,UACA,kBACA,QACA,OACA,QACA,WACA,UACA,iBACA,QACA,QACA,WAGFn1B,KAAK+tJ,uBACH,OACAh5H,EAAMM,iBACN,kBACAN,EAAMI,eAAe,UACrB,QACA,SACA,cACA,UACA,UACC,KAAM,UAAW,GAClB,QACA,QACA,YACA,WAGFn1B,KAAKguJ,uBACH,UACAj5H,EAAMI,eAAen1B,KAAK6tJ,yBAC1B,QACA94H,EAAMI,eAAen1B,KAAK8tJ,uBAC1B,QACA/4H,EAAMI,eAAen1B,KAAK+tJ,wBAG5B/tJ,KAAKiuJ,4BACH,QACA,UACA,UACA,UACA,YACC,KAAM,UAAW,GAClB,QACAl5H,EAAMM,kBAGRr1B,KAAKkuJ,wBACH,QACAn5H,EAAMM,iBACN,QACA,SACA,cACA,UACA,YACA,UACA,OACA,UACA,eACA,UACA,UACA,UACA,kBACA,UACA,OACA,UACA,SACC,KAAM,UAAW,GAClB,gBACA,UACA,YACA,QACA,iBACC,KAAM,UAAW,GAClB,wBACA,UACA,oBACA,QACA,QACAN,EAAMI,eAAen1B,KAAKiuJ,4BAC1B,iBACC,KAAM,UAAW,GAClB,wBACA,UACA,oBACA,QACA,SACC,KAAM,UAAW,GAClB,gBACA,UACA,YACA,SAGFjuJ,KAAKmuJ,sBACH,gBACA,SACA,QACA,SACA,YACA,SACA,YACAp5H,EAAMI,eAAe,SACrB,UACAJ,EAAMI,eAAe,UACrB,QACAJ,EAAMI,eAAeJ,EAAMM,mBAG7Br1B,KAAKouJ,wBAA0B,OAAQr5H,EAAMM,iBAAkB,UAAW,KAAM,UAAW,IAE3Fr1B,KAAKg3B,OAASh3B,KAAKquJ,kBACjB,eACAt5H,EAAMI,eAAen1B,KAAKgsJ,yBAC1B,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,eAAen1B,KAAKmwJ,0BAEpEnwJ,KAAKqwJ,yBAA2B,aAAc,SAAU,aAAc,SAAU,WAAY,WAE5FrwJ,KAAKswJ,uBACH,OACAv7H,EAAMM,iBACN,OACA,QACA,QACA,UACA,SACA,UACA,SACA,UACA,QACA,WAGFr1B,KAAKuwJ,mBACH,gBACA,SACA,QACA,QACA,UACA,UACA,SACA,UACA,OACA,UACA,YACA,QACA,OACAvwJ,KAAKu7H,eACL,UACAxmG,EAAMI,eAAe,UACrB,YACA,SACA,SACAJ,EAAMI,eAAen1B,KAAKowJ,wBAC1B,YACAr7H,EAAMI,eAAe,SACrB,kBACAJ,EAAMI,eAAen1B,KAAKqwJ,yBAC1B,kBACAt7H,EAAMI,eAAen1B,KAAKqwJ,yBAC1B,kBACA,SACA,cACAt7H,EAAMI,eAAe,UACrB,oBACAJ,EAAMI,gBAAgB,KAAM,UAAW,IACvC,qBACAJ,EAAMI,eAAe,UACrB,YACAJ,EAAMI,eAAen1B,KAAKswJ,wBAG5BtwJ,KAAKwwJ,yBACH,OACAz7H,EAAMM,iBACN,cACAN,EAAMI,eAAe,UACrB,QACA,SACA,MACA,SACA,gBACA,UAGFn1B,KAAKywJ,uBACH,OACA17H,EAAMM,iBACN,cACAN,EAAMI,eAAe,UACrB,cACC,KAAM,SAAU,GACjB,YACC,KAAM,SAAU,GACjB,cACA,UACA,gBACC,KAAM,UAAW,GAClB,QACA,SACA,MACA,UACA,cACA,UACA,YACC,KAAM,UAAW,GAClB,cACA,SACA,WACC,KAAM,UAAW,GAClB,gBACA,QACA,SACA,UACA,YACA,UACA,WACA,UACA,WACA,UACA,YACA,UACA,kBACA,QACA,OACA,QACA,WACA,UACA,iBACA,QACA,QACA,WAGFn1B,KAAK0wJ,uBACH,OACA37H,EAAMM,iBACN,kBACAN,EAAMI,eAAe,UACrB,QACA,SACA,cACA,UACA,UACC,KAAM,UAAW,GAClB,QACA,QACA,YACA,WAGFn1B,KAAK2wJ,uBACH,UACA57H,EAAMI,eAAen1B,KAAKwwJ,yBAC1B,QACAz7H,EAAMI,eAAen1B,KAAKywJ,uBAC1B,QACA17H,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,OACAp+H,EAAMM,iBACN,cACAN,EAAMI,eAAe,UACrB,cACC,KAAM,SAAU,GACjB,YACC,KAAM,SAAU,GACjB,cACA,UACA,gBACC,KAAM,UAAW,GAClB,QACA,SACA,MACA,UACA,cACA,UACA,YACC,KAAM,UAAW,GAClB,cACA,SACA,WACC,KAAM,UAAW,GAClB,gBACA,QACA,SACA,UACA,YACA,UACA,WACA,UACA,WACA,UACA,YACA,UACA,kBACA,QACA,OACA,QACA,WACA,UACA,iBACA,QACA,QACA,WAGFn1B,KAAKozJ,uBACH,OACAr+H,EAAMM,iBACN,kBACAN,EAAMI,eAAe,UACrB,QACA,SACA,cACA,UACA,SACA,UACA,QACA,QACA,YACA,WAGFn1B,KAAKqzJ,uBACH,UACAt+H,EAAMI,eAAen1B,KAAKkzJ,yBAC1B,QACAn+H,EAAMI,eAAen1B,KAAKmzJ,uBAC1B,QACAp+H,EAAMI,eAAen1B,KAAKozJ,wBAG5BpzJ,KAAKszJ,4BACH,QACA,UACA,UACA,UACA,YACC,KAAM,UAAW,GAClB,QACAv+H,EAAMM,kBAGRr1B,KAAKuzJ,wBACH,QACAx+H,EAAMM,iBACN,QACA,SACA,cACA,UACA,YACA,UACA,OACA,UACA,eACA,UACA,UACA,UACA,kBACA,UACA,OACA,UACA,SACC,KAAM,UAAW,GAClB,gBACA,UACA,YACA,QACA,iBACC,KAAM,UAAW,GAClB,wBACA,UACA,oBACA,QACA,QACAN,EAAMI,eAAen1B,KAAKszJ,4BAC1B,iBACC,KAAM,UAAW,GAClB,wBACA,UACA,oBACA,QACA,SACC,KAAM,UAAW,GAClB,gBACA,UACA,YACA,SAGFtzJ,KAAKwzJ,sBACH,gBACA,SACA,QACA,SACA,YACA,SACA,YACAz+H,EAAMI,eAAe,SACrB,UACAJ,EAAMI,eAAe,UACrB,QACAJ,EAAMI,eAAeJ,EAAMM,mBAG7Br1B,KAAKyzJ,wBAA0B,OAAQ1+H,EAAMM,iBAAkB,UAAW,KAAM,UAAW,IAE3Fr1B,KAAKg3B,OAASh3B,KAAK0zJ,kBACjB,YACA3+H,EAAM6qB,kBAAkB5/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MM,iBAAkB,OAAQ,SAEtEr1B,KAAK21J,mBACH,gBACA,SACA,QACA,QACA,UACA,UACA,SACA,UACA,OACA,UACA,YACA,QACA,OACA31J,KAAKu7H,eACL,UACAxmG,EAAMI,eAAe,UACrB,YACA,SACA,SACAJ,EAAMI,eAAen1B,KAAKw1J,wBAC1B,YACAzgI,EAAMI,eAAe,SACrB,kBACAJ,EAAMI,eAAen1B,KAAKy1J,yBAC1B,kBACA1gI,EAAMI,eAAen1B,KAAKy1J,yBAC1B,kBACA,SACA,cACA1gI,EAAMI,eAAe,UACrB,oBACAJ,EAAMI,gBAAgB,KAAM,UAAW,IACvC,qBACAJ,EAAMI,eAAe,UACrB,YACAJ,EAAMI,eAAen1B,KAAK01J,wBAG5B11J,KAAK41J,yBACH,OACA7gI,EAAMM,iBACN,cACAN,EAAMI,eAAe,UACrB,QACA,SACA,gBACA,UAGFn1B,KAAK61J,uBACH,OACA9gI,EAAMM,iBACN,cACAN,EAAMI,eAAe,UACrB,cACC,KAAM,SAAU,GACjB,YACC,KAAM,SAAU,GACjB,cACA,UACA,gBACC,KAAM,UAAW,GAClB,QACA,SACA,MACA,UACA,cACA,UACA,YACC,KAAM,UAAW,GAClB,cACA,SACA,WACC,KAAM,UAAW,GAClB,gBACA,QACA,SACA,UACA,YACA,UACA,WACA,UACA,WACA,UACA,YACA,UACA,kBACA,QACA,OACA,QACA,WACA,UACA,iBACA,QACA,QACA,WAGFn1B,KAAK81J,uBACH,OACA/gI,EAAMM,iBACN,kBACAN,EAAMI,eAAe,UACrB,QACA,SACA,cACA,UACA,SACA,UACA,QACA,QACA,YACA,WAGFn1B,KAAK+1J,uBACH,UACAhhI,EAAMI,eAAen1B,KAAK41J,yBAC1B,QACA7gI,EAAMI,eAAen1B,KAAK61J,uBAC1B,QACA9gI,EAAMI,eAAen1B,KAAK81J,wBAG5B91J,KAAKg2J,4BACH,QACA,UACA,UACA,UACA,YACC,KAAM,UAAW,GAClB,QACAjhI,EAAMM,kBAGRr1B,KAAKi2J,wBACH,QACAlhI,EAAMM,iBACN,QACA,SACA,cACA,U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3J,yBACH,gBACC,MAAO,KAAM,UAAW,GAAI,GAC7B,yBACC,KAAM,UAAW,GAClB,yBACC,KAAM,UAAW,GAClB,gBACA,QACA,gBACC,KAAM,UAAW,GAClB,OACA1iI,EAAMM,iBACN,cACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,cACA,UACA,gBACC,KAAM,UAAW,GAClB,OACA,UACA,eACA,SACA,SACA,UACA,eACAN,EAAMQ,iBAAiBv1B,KAAKu3J,uBAC5B,qBACA,SACA,QACA,SACA,WACAxiI,EAAMQ,iBAAiBv1B,KAAKw3J,0BAC5B,YACC,KAAM,UAAW,GAClB,kBACC,KAAM,UAAW,GAClB,eACA,UACA,mBACC,KAAM,UAAW,GAClB,eACC,MAAO,KAAM,UAAW,GAAI,GAC7B,gBACC,MAAO,KAAM,UAAW,GAAI,GAC7B,aACAziI,EAAMQ,iBAAiBv1B,KAAKu3J,uBAC5B,mBACA,SACA,YACC,MAAO,KAAM,UAAW,GAAI,GAC7B,qBACC,KAAM,UAAW,GAClB,qBACC,KAAM,UAAW,GAClB,mBACC,KAAM,UAAW,GAClB,kBACC,KAAM,UAAW,GAClB,cACA,UACA,mBACA,UACA,eACC,KAAM,UAAW,GAClB,aACA,QACA,iBACC,KAAM,UAAW,GAClB,kBACC,KAAM,UAAW,GAClB,gBACC,KAAM,UAAW,GAClB,gBACA,SAGFv3J,KAAK03J,mBACH,SACA3iI,EAAMI,eAAen1B,KAAKs3J,uBAC1B,WACAviI,EAAMI,eAAen1B,KAAKy3J,0BAG5Bz3J,KAAK23J,sBACH,OACA5iI,EAAMM,iBACN,WACA,UACA,QACA,SACA,WACC,KAAM,UAAW,GAClB,cACA,UACA,WACA,QACA,OACA,SAGFr1B,KAAK43J,gBACH,gBACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,gBACA7iI,EAAMI,eAAe,UACrB,OACAJ,EAAMM,iBACN,QACA,SACA,SACA,UACA,gBACA,SACA,QACA,UACA,YACA,UACA,WACA,UACA,OACA,WAGFr1B,KAAK63J,sBACH,OACA9iI,EAAMM,iBACN,aACA,SACA,WACA,SACA,UACA,UACA,WACA,UACA,QACA,SACA,OACA,WAGFr1B,KAAK83J,oBACH,UACA/iI,EAAMI,eAAen1B,KAAK43J,gBAC1B,UACA7iI,EAAMI,eAAen1B,KAAK63J,uBAG5B73J,KAAK+3J,qBACH,OACAhjI,EAAMM,iBACN,SACC,KAAM,QAAS,GAChB,cACA,UACA,YACA,UACA,eACA,WAGFr1B,KAAKg4J,mBAAqB,eAAgBjjI,EAAMI,eAAen1B,KAAK+3J,sBAEpE/3J,KAAKu7H,gBAAkB,MAAO,SAAU,WAAYxmG,EAAMI,eAAe,UAEzEn1B,KAAKi4J,yBAA2B,QAASljI,EAAMM,iBAAkB,SAAU,SAE3Er1B,KAAKk4J,wBAA0B,UAAWnjI,EAAMI,eAAen1B,KAAKi4J,0BAEpEj4J,KAAKm4J,yBAA2B,aAAc,SAAU,aAAc,SAAU,WAAY,WAE5Fn4J,KAAKo4J,uBAAyB,OAAQrjI,EAAMM,iBAAkB,OAAQ,SAEtEr1B,KAAKq4J,mBACH,gBACA,SACA,QACA,QACA,UACA,UACA,SACA,UACA,OACA,UACA,YACA,QACA,OACAr4J,KAAKu7H,eACL,UACAxmG,EAAMI,eAAe,UACrB,YACA,SACA,SACAJ,EAAMI,eAAen1B,KAAKk4J,wBAC1B,YACAnjI,EAAMI,eAAe,SACrB,kBACAJ,EAAMI,eAAen1B,KAAKm4J,yBAC1B,kBACApjI,EAAMI,eAAen1B,KAAKm4J,yBAC1B,kBACA,SACA,cACApjI,EAAMI,eAAe,UACrB,oBACAJ,EAAMI,gBAAgB,KAAM,UAAW,IACvC,qBACAJ,EAAMI,eAAe,UACrB,YACAJ,EAAMI,eAAen1B,KAAKo4J,wBAG5Bp4J,KAAKs4J,yBACH,OACAvjI,EAAMM,iBACN,cACAN,EAAMI,eAAe,UACrB,QACA,SACA,gBACA,UAGFn1B,KAAKu4J,uBACH,OACAxjI,EAAMM,iBACN,cACAN,EAAMI,eAAe,UACrB,cACC,KAAM,SAAU,GACjB,YACC,KAAM,SAAU,GACjB,cACA,UACA,gBACC,KAAM,UAAW,GAClB,QACA,SACA,MACA,UACA,cACA,UACA,YACC,KAAM,UAAW,GAClB,cACA,SACA,WACC,KAAM,UAAW,GAClB,gBACA,QACA,SACA,UACA,YACA,UACA,WACA,UACA,WACA,UACA,YACA,UACA,kBACA,QACA,OACA,QACA,WACA,UACA,iBACA,QACA,QACA,WAGFn1B,KAAKw4J,uBACH,OACAzjI,EAAMM,iBACN,kBACAN,EAAMI,eAAe,UACrB,QACA,SACA,cACA,UACA,SACA,UACA,QACA,QACA,YACA,WAGFn1B,KAAKy4J,uBACH,UACA1jI,EAAMI,eAAen1B,KAAKs4J,yBAC1B,QACAvjI,EAAMI,eAAen1B,KAAKu4J,uBAC1B,QACAxjI,EAAMI,eAAen1B,KAAKw4J,wBAG5Bx4J,KAAK04J,4BACH,QACA,UACA,UACA,UACA,YACC,KAAM,UAAW,GAClB,QACA3jI,EAAMM,kBAGRr1B,KAAK24J,wBACH,QACA5jI,EAAMM,iBACN,QACA,SACA,cACA,UACA,YACA,UACA,OACA,UACA,eACA,UACA,UACA,UACA,kBACA,UACA,OACA,UACA,SACC,KAAM,UAAW,GAClB,gBACA,UACA,YACA,QACA,iBACC,KAAM,UAAW,GAClB,wBACA,UACA,oBACA,QACA,QACAN,EAAMI,eAAen1B,KAAK04J,4BAC1B,iBACC,KAAM,UAAW,GAClB,wBACA,UACA,oBACA,QACA,SACC,KAAM,UAAW,GAClB,gBACA,UACA,YACA,SAGF14J,KAAK44J,sBACH,gBACA,SACA,QACA,SACA,YACA,SACA,YACA7jI,EAAMI,eAAe,SACrB,UACAJ,EAAMI,eAAe,UACrB,QACAJ,EAAMI,eAAeJ,EAAMM,mBAG7Br1B,KAAKg3B,OAASh3B,KAAK64J,kBACjB,YACA9jI,EAAM6qB,kBAAkB5/C,KAAK02J,sBAC7B,SACA3hI,EAAM6qB,kBAAkB5/C,KAAK82J,kBAC7B,QACA/hI,EAAMQ,iBAAiBv1B,KAAKo3J,mBAC5B,aACAriI,EAAMI,eAAen1B,KAAKq3J,sBAC1B,YACAtiI,EAAMQ,iBAAiBv1B,KAAK03J,mBAC5B,YACA3iI,EAAMI,eAAen1B,KAAK23J,sBAC1B,aACA5iI,EAAMQ,iB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J,EAAMI,eAAe,UACrB,YACAJ,EAAMI,eAAen1B,KAAK66J,wBAG5B76J,KAAK+6J,yBACH,OACAhmI,EAAMM,iBACN,cACAN,EAAMI,eAAe,UACrB,QACA,SACA,gBACA,UAGFn1B,KAAKg7J,uBACH,OACAjmI,EAAMM,iBACN,cACAN,EAAMI,eAAe,UACrB,cACC,KAAM,SAAU,GACjB,YACC,KAAM,SAAU,GACjB,cACA,UACA,gBACC,KAAM,UAAW,GAClB,QACA,SACA,MACA,UACA,cACA,UACA,YACC,KAAM,UAAW,GAClB,cACA,SACA,WACC,KAAM,UAAW,GAClB,gBACA,QACA,SACA,UACA,YACA,UACA,WACA,UACA,WACA,UACA,YACA,UACA,kBACA,QACA,OACA,QACA,WACA,UACA,iBACA,QACA,QACA,WAGFn1B,KAAKi7J,uBACH,OACAlmI,EAAMM,iBACN,kBACAN,EAAMI,eAAe,UACrB,QACA,SACA,cACA,UACA,SACA,UACA,QACA,QACA,YACA,WAGFn1B,KAAKk7J,uBACH,UACAnmI,EAAMI,eAAen1B,KAAK+6J,yBAC1B,QACAhmI,EAAMI,eAAen1B,KAAKg7J,uBAC1B,QACAjmI,EAAMI,eAAen1B,KAAKi7J,wBAG5Bj7J,KAAKm7J,4BACH,QACA,UACA,UACA,UACA,YACC,KAAM,UAAW,GAClB,QACApmI,EAAMM,kBAGRr1B,KAAKo7J,wBACH,QACArmI,EAAMM,iBACN,QACA,SACA,cACA,UACA,YACA,UACA,OACA,UACA,eACA,UACA,UACA,UACA,kBACA,UACA,OACA,UACA,SACC,KAAM,UAAW,GAClB,gBACA,UACA,YACA,QACA,iBACC,KAAM,UAAW,GAClB,wBACA,UACA,oBACA,QACA,QACAN,EAAMI,eAAen1B,KAAKm7J,4BAC1B,iBACC,KAAM,UAAW,GAClB,wBACA,UACA,oBACA,QACA,SACC,KAAM,UAAW,GAClB,gBACA,UACA,YACA,SAGFn7J,KAAKq7J,sBACH,gBACA,SACA,QACA,SACA,YACA,SACA,YACAtmI,EAAMI,eAAe,SACrB,UACAJ,EAAMI,eAAe,UACr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A,QACA,UACA,UACA,SACA,UACA,OACA,UACA,YACA,QACA,OACAt9J,KAAKu7H,eACL,UACAxmG,EAAMI,eAAe,UACrB,YACA,SACA,SACAJ,EAAMI,eAAen1B,KAAKm9J,wBAC1B,YACApoI,EAAMI,eAAe,SACrB,kBACAJ,EAAMI,eAAen1B,KAAKo9J,yBAC1B,kBACAroI,EAAMI,eAAen1B,KAAKo9J,yBAC1B,kBACA,SACA,cACAroI,EAAMI,eAAe,UACrB,oBACAJ,EAAMI,gBAAgB,KAAM,UAAW,IACvC,qBACAJ,EAAMI,eAAe,UACrB,YACAJ,EAAMI,eAAen1B,KAAKq9J,wBAG5Br9J,KAAKu9J,yBACH,OACAxoI,EAAMM,iBACN,cACAN,EAAMI,eAAe,UACrB,QACA,SACA,gBACA,UAGFn1B,KAAKw9J,uBACH,OACAzoI,EAAMM,iBACN,cACAN,EAAMI,eAAe,UACrB,cACC,KAAM,SAAU,GACjB,YACC,KAAM,SAAU,GACjB,cACA,UACA,gBACC,KAAM,UAAW,GAClB,QACA,SACA,MACA,UACA,cACA,UACA,YACC,KAAM,UAAW,GAClB,cACA,SACA,WACC,KAAM,UAAW,GAClB,gBACA,QACA,SACA,UACA,YACA,UACA,WACA,UACA,WACA,UACA,YACA,UACA,kBACA,QACA,OACA,QACA,WACA,UACA,iBACA,QACA,QACA,WAGFn1B,KAAKy9J,uBACH,OACA1oI,EAAMM,iBACN,kBACAN,EAAMI,eAAe,UACrB,QACA,SACA,cACA,UACA,SACA,UACA,QACA,QACA,YACA,WAGFn1B,KAAK09J,uBACH,UACA3oI,EAAMI,eAAen1B,KAAKu9J,yBAC1B,QACAxoI,EAAMI,eAAen1B,KAAKw9J,uBAC1B,QACAzoI,EAAMI,eAAen1B,KAAKy9J,wBAG5Bz9J,KAAK29J,4BACH,QACA,UACA,UACA,UACA,YACC,KAAM,UAAW,GAClB,QACA5oI,EAAMM,kBAGRr1B,KAAK49J,wBACH,QACA7oI,EAAMM,iBACN,QACA,SACA,cACA,UACA,YACA,UACA,OACA,UACA,eACA,UACA,UACA,UACA,kBACA,UA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BAAiBv1B,KAAKg/J,uBAC5B,qBACA,SACA,QACA,SACA,WACAjqI,EAAMQ,iBAAiBv1B,KAAKi/J,0BAC5B,YACC,KAAM,UAAW,GAClB,kBACC,KAAM,UAAW,GAClB,eACA,UACA,mBACC,KAAM,UAAW,GAClB,eACC,MAAO,KAAM,UAAW,GAAI,GAC7B,gBACC,MAAO,KAAM,UAAW,GAAI,GAC7B,aACAlqI,EAAMQ,iBAAiBv1B,KAAKg/J,uBAC5B,mBACA,SACA,YACC,MAAO,KAAM,UAAW,GAAI,GAC7B,qBACC,KAAM,UAAW,GAClB,qBACC,KAAM,UAAW,GAClB,mBACC,KAAM,UAAW,GAClB,kBACC,KAAM,UAAW,GAClB,cACA,UACA,mBACA,UACA,eACC,KAAM,UAAW,GAClB,aACA,QACA,iBACC,KAAM,UAAW,GAClB,kBACC,KAAM,UAAW,GAClB,gBACC,KAAM,UAAW,GAClB,gBACA,SAGFh/J,KAAKm/J,mBACH,SACApqI,EAAMI,eAAen1B,KAAK++J,uBAC1B,WACAhqI,EAAMI,eAAen1B,KAAKk/J,0BAG5Bl/J,KAAKo/J,sBACH,OACArqI,EAAMM,iBACN,WACA,UACA,QACA,SACA,WACC,KAAM,UAAW,GAClB,cACA,UACA,WACA,QACA,OACA,SAGFr1B,KAAKq/J,gBACH,gBACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,gBACAtqI,EAAMI,eAAe,UACrB,OACAJ,EAAMM,iBACN,QACA,SACA,SACA,UACA,gBACA,SACA,QACA,UACA,YACA,UACA,WACA,UACA,OACA,WAGFr1B,KAAKs/J,sBACH,OACAvqI,EAAMM,iBACN,aACA,SACA,WACA,SACA,UACA,UACA,WACA,UACA,QACA,SACA,OACA,WAGFr1B,KAAKu/J,oBACH,UACAxqI,EAAMI,eAAen1B,KAAKq/J,gBAC1B,UACAtqI,EAAMI,eAAen1B,KAAKs/J,uBAG5Bt/J,KAAKw/J,qBACH,OACAzqI,EAAMM,iBACN,SACC,KAAM,QAAS,GAChB,cACA,UACA,YACA,UACA,eACA,WAGFr1B,KAAKy/J,mBAAqB,eAAgB1qI,EAA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W,GAClB,gBACA,QACA,gBACC,KAAM,UAAW,GAClB,OACA1sI,EAAMM,iBACN,cACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,cACA,UACA,gBACC,KAAM,UAAW,GAClB,OACA,UACA,eACA,SACA,SACA,UACA,eACAN,EAAMQ,iBAAiBv1B,KAAKuhK,uBAC5B,qBACA,SACA,QACA,SACA,WACAxsI,EAAMQ,iBAAiBv1B,KAAKwhK,0BAC5B,YACC,KAAM,UAAW,GAClB,kBACC,KAAM,UAAW,GAClB,eACA,UACA,mBACC,KAAM,UAAW,GAClB,eACC,MAAO,KAAM,UAAW,GAAI,GAC7B,gBACC,MAAO,KAAM,UAAW,GAAI,GAC7B,aACAzsI,EAAMQ,iBAAiBv1B,KAAKuhK,uBAC5B,mBACA,SACA,YACC,MAAO,KAAM,UAAW,GAAI,GAC7B,qBACC,KAAM,UAAW,GAClB,qBACC,KAAM,UAAW,GAClB,mBACC,KAAM,UAAW,GAClB,kBACC,KAAM,UAAW,GAClB,cACA,UACA,mBACA,UACA,eACC,KAAM,UAAW,GAClB,aACA,QACA,iBACC,KAAM,UAAW,GAClB,kBACC,KAAM,UAAW,GAClB,gBACC,KAAM,UAAW,GAClB,gBACA,SAGFvhK,KAAK0hK,mBACH,SACA3sI,EAAMI,eAAen1B,KAAKshK,uBAC1B,WACAvsI,EAAMI,eAAen1B,KAAKyhK,0BAG5BzhK,KAAK2hK,sBACH,OACA5sI,EAAMM,iBACN,WACA,UACA,QACA,SACA,WACC,KAAM,UAAW,GAClB,cACA,UACA,WACA,QACA,OACA,SAGFr1B,KAAK4hK,gBACH,gBACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,gBACA7sI,EAAMI,eAAe,UACrB,OACAJ,EAAMM,iBACN,QACA,SACA,SACA,UACA,gBACA,SACA,QACA,UACA,YACA,UACA,WACA,UACA,OACA,WAGFr1B,KAAK6hK,sBACH,OACA9sI,EAAMM,iBACN,aACA,SACA,WACA,SACA,UACA,UACA,WACA,UACA,QACA,SACA,OACA,WAGFr1B,KAAK8hK,oBACH,UACA/sI,EAAMI,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YACC,KAAM,SAAU,GACjB,cACA,UACA,gBACC,KAAM,UAAW,GAClB,QACA,SACA,MACA,UACA,cACA,UACA,YACC,KAAM,UAAW,GAClB,cACA,SACA,WACC,KAAM,UAAW,GAClB,gBACA,QACA,SACA,UACA,YACA,UACA,WACA,UACA,WACA,UACA,YACA,UACA,kBACA,QACA,OACA,QACA,WACA,UACA,iBACA,QACA,QACA,WAGFn1B,KAAK+kK,uBACH,OACAhwI,EAAMM,iBACN,kBACAN,EAAMI,eAAe,UACrB,QACA,SACA,cACA,UACA,SACA,UACA,QACA,QACA,YACA,WAGFn1B,KAAKglK,uBACH,UACAjwI,EAAMI,eAAen1B,KAAK6kK,yBAC1B,QACA9vI,EAAMI,eAAen1B,KAAK8kK,uBAC1B,QACA/vI,EAAMI,eAAen1B,KAAK+kK,wBAG5B/kK,KAAKilK,4BACH,QACA,UACA,UACA,UACA,YACC,KAAM,UAAW,GAClB,QACAlwI,EAAMM,kBAGRr1B,KAAKklK,wBACH,QACAnwI,EAAMM,iBACN,QACA,SACA,cACA,UACA,YACA,UACA,OACA,UACA,eACA,UACA,UACA,UACA,kBACA,UACA,OACA,UACA,SACC,KAAM,UAAW,GAClB,gBACA,UACA,YACA,QACA,iBACC,KAAM,UAAW,GAClB,wBACA,UACA,oBACA,QACA,QACAN,EAAMI,eAAen1B,KAAKilK,4BAC1B,iBACC,KAAM,UAAW,GAClB,wBACA,UACA,oBACA,QACA,SACC,KAAM,UAAW,GAClB,gBACA,UACA,YACA,SAGFjlK,KAAKmlK,sBACH,gBACA,SACA,QACA,SACA,YACA,SACA,YACApwI,EAAMI,eAAe,SACrB,UACAJ,EAAMI,eAAe,UACrB,QACAJ,EAAMI,eAAeJ,EAAMM,mBAG7Br1B,KAAKg3B,OAASh3B,KAAKolK,kBACjB,YACArwI,EAAM6qB,kBAAkB5/C,KAAKkjK,sBAC7B,SACAnuI,EAAM6qB,kBAAkB5/C,KAAKqjK,kBAC7B,QACAtuI,EAAMQ,iBAAiBv1B,KAAK2jK,mBAC5B,aACA5uI,EAAMI,eAAen1B,KAAK4j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K,uBACH,OACAtyI,EAAMM,iBACN,cACAN,EAAMI,eAAe,UACrB,cACC,KAAM,SAAU,GACjB,YACC,KAAM,SAAU,GACjB,cACA,UACA,gBACC,KAAM,UAAW,GAClB,QACA,SACA,MACA,UACA,cACA,UACA,YACC,KAAM,UAAW,GAClB,cACA,SACA,WACC,KAAM,UAAW,GAClB,gBACA,QACA,SACA,UACA,YACA,UACA,WACA,UACA,WACA,UACA,YACA,UACA,kBACA,QACA,OACA,QACA,WACA,UACA,iBACA,QACA,QACA,WAGFn1B,KAAKsnK,uBACH,OACAvyI,EAAMM,iBACN,kBACAN,EAAMI,eAAe,UACrB,QACA,SACA,cACA,UACA,SACA,UACA,QACA,QACA,YACA,WAGFn1B,KAAKunK,uBACH,UACAxyI,EAAMI,eAAen1B,KAAKonK,yBAC1B,QACAryI,EAAMI,eAAen1B,KAAKqnK,uBAC1B,QACAtyI,EAAMI,eAAen1B,KAAKsnK,wBAG5BtnK,KAAKwnK,4BACH,QACA,UACA,UACA,UACA,YACC,KAAM,UAAW,GAClB,QACAzyI,EAAMM,kBAGRr1B,KAAKynK,wBACH,QACA1yI,EAAMM,iBACN,QACA,SACA,cACA,UACA,YACA,UACA,OACA,UACA,eACA,UACA,UACA,UACA,kBACA,UACA,OACA,UACA,SACC,KAAM,UAAW,GAClB,gBACA,UACA,YACA,QACA,iBACC,KAAM,UAAW,GAClB,wBACA,UACA,oBACA,QACA,QACAN,EAAMI,eAAen1B,KAAKwnK,4BAC1B,iBACC,KAAM,UAAW,GAClB,wBACA,UACA,oBACA,QACA,SACC,KAAM,UAAW,GAClB,gBACA,UACA,YACA,SAGFxnK,KAAK0nK,sBACH,gBACA,SACA,QACA,SACA,YACA,SACA,YACA3yI,EAAMI,eAAe,SACrB,UACAJ,EAAMI,eAAe,UACrB,QACAJ,EAAMI,eAAeJ,EAAMM,mBAG7Br1B,KAAKg3B,OAASh3B,KAAK2nK,kBACjB,YACA5yI,EAAM6qB,kBAAkB5/C,KAAKylK,sBAC7B,SACA1wI,EAAM6qB,kBAAkB5/C,KAAK4lK,kB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ACA50I,EAAMI,eAAe,UACrB,QACA,SACA,gBACA,UAGFn1B,KAAK4pK,uBACH,OACA70I,EAAMM,iBACN,cACAN,EAAMI,eAAe,UACrB,cACC,KAAM,SAAU,GACjB,YACC,KAAM,SAAU,GACjB,cACA,UACA,gBACC,KAAM,UAAW,GAClB,QACA,SACA,MACA,UACA,cACA,UACA,YACC,KAAM,UAAW,GAClB,cACA,SACA,WACC,KAAM,UAAW,GAClB,gBACA,QACA,SACA,UACA,YACA,UACA,WACA,UACA,WACA,UACA,YACA,UACA,kBACA,QACA,OACA,QACA,WACA,UACA,iBACA,QACA,QACA,WAGFn1B,KAAK6pK,uBACH,OACA90I,EAAMM,iBACN,kBACAN,EAAMI,eAAe,UACrB,QACA,SACA,cACA,UACA,SACA,UACA,QACA,QACA,YACA,WAGFn1B,KAAK8pK,uBACH,UACA/0I,EAAMI,eAAen1B,KAAK2pK,yBAC1B,QACA50I,EAAMI,eAAen1B,KAAK4pK,uBAC1B,QACA70I,EAAMI,eAAen1B,KAAK6pK,wBAG5B7pK,KAAK+pK,4BACH,QACA,UACA,UACA,UACA,YACC,KAAM,UAAW,GAClB,QACAh1I,EAAMM,kBAGRr1B,KAAKgqK,wBACH,QACAj1I,EAAMM,iBACN,QACA,SACA,cACA,UACA,YACA,UACA,OACA,UACA,eACA,UACA,UACA,UACA,kBACA,UACA,OACA,UACA,SACC,KAAM,UAAW,GAClB,gBACA,UACA,YACA,QACA,iBACC,KAAM,UAAW,GAClB,wBACA,UACA,oBACA,QACA,QACAN,EAAMI,eAAen1B,KAAK+pK,4BAC1B,iBACC,KAAM,UAAW,GAClB,wBACA,UACA,oBACA,QACA,SACC,KAAM,UAAW,GAClB,gBACA,UACA,YACA,SAGF/pK,KAAKiqK,sBACH,gBACA,SACA,QACA,SACA,YACA,SACA,YACAl1I,EAAMI,eAAe,SACrB,UACAJ,EAAMI,eAAe,UACrB,QACAJ,EAAMI,eAAeJ,EAAMM,mBAG7Br1B,KAAKg3B,OAASh3B,KAAKkqK,kBACjB,YACAn1I,EAAM6qB,kBAAkB5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,YACAJ,EAAMI,eAAen1B,KAAKgsK,wBAG5BhsK,KAAKksK,yBACH,cACAn3I,EAAMI,eAAe,UACrB,QACA,SACA,gBACA,UAGFn1B,KAAKmsK,uBACH,OACAp3I,EAAMM,iBACN,cACAN,EAAMI,eAAe,UACrB,cACC,KAAM,SAAU,GACjB,YACC,KAAM,SAAU,GACjB,cACA,UACA,gBACC,KAAM,UAAW,GAClB,QACA,SACA,MACA,UACA,cACA,UACA,YACC,KAAM,UAAW,GAClB,cACA,SACA,WACC,KAAM,UAAW,GAClB,gBACA,QACA,SACA,UACA,YACA,UACA,WACA,UACA,WACA,UACA,YACA,UACA,kBACA,QACA,OACA,QACA,WACA,UACA,iBACA,QACA,QACA,WAGFn1B,KAAKosK,uBACH,OACAr3I,EAAMM,iBACN,kBACAN,EAAMI,eAAe,UACrB,QACA,SACA,cACA,UACA,SACA,UACA,QACA,QACA,YACA,WAGFn1B,KAAKqsK,uBACH,UACAt3I,EAAMI,eAAen1B,KAAKksK,yBAC1B,QACAn3I,EAAMI,eAAen1B,KAAKmsK,uBAC1B,QACAp3I,EAAMI,eAAen1B,KAAKosK,wBAG5BpsK,KAAKssK,4BACH,QACA,UACA,UACA,UACA,YACC,KAAM,UAAW,GAClB,QACAv3I,EAAMM,kBAGRr1B,KAAKusK,wBACH,QACAx3I,EAAMM,iBACN,QACA,SACA,cACA,UACA,YACA,UACA,OACA,UACA,eACA,UACA,UACA,UACA,kBACA,UACA,OACA,UACA,SACC,KAAM,UAAW,GAClB,gBACA,UACA,YACA,QACA,iBACC,KAAM,UAAW,GAClB,wBACA,UACA,oBACA,QACA,QACAN,EAAMI,eAAen1B,KAAKssK,4BAC1B,iBACC,KAAM,UAAW,GAClB,wBACA,UACA,oBACA,QACA,SACC,KAAM,UAAW,GAClB,gBACA,UACA,YACA,SAGFtsK,KAAKg3B,OAASh3B,KAAKwsK,kBACjB,YACAz3I,EAAM6qB,kBAAkB5/C,KAAKuqK,sBAC7B,SACAx1I,EAAM6qB,kBAAkB5/C,KAAK0qK,kBAC7B,QACA31I,EAAMQ,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,UACrB,cACC,KAAM,SAAU,GACjB,YACC,KAAM,SAAU,GACjB,cACA,UACA,gBACC,KAAM,UAAW,GAClB,QACA,SACA,MACA,UACA,cACA,UACA,YACC,KAAM,UAAW,GAClB,cACA,SACA,WACC,KAAM,UAAW,GAClB,gBACA,QACA,SACA,UACA,YACA,UACA,WACA,UACA,WACA,UACA,YACA,UACA,kBACA,QACA,OACA,QACA,WACA,UACA,iBACA,QACA,QACA,WAGFn1B,KAAK0uK,uBACH,OACA35I,EAAMM,iBACN,kBACAN,EAAMI,eAAe,UACrB,QACA,SACA,cACA,UACA,SACA,UACA,QACA,QACA,YACA,WAGFn1B,KAAK2uK,uBACH,UACA55I,EAAMI,eAAen1B,KAAKwuK,yBAC1B,QACAz5I,EAAMI,eAAen1B,KAAKyuK,uBAC1B,QACA15I,EAAMI,eAAen1B,KAAK0uK,wBAG5B1uK,KAAK4uK,4BACH,QACA,UACA,UACA,UACA,YACC,KAAM,UAAW,GAClB,QACA75I,EAAMM,kBAGRr1B,KAAK6uK,wBACH,QACA95I,EAAMM,iBACN,QACA,SACA,cACA,UACA,YACA,UACA,OACA,UACA,eACA,UACA,UACA,UACA,kBACA,UACA,OACA,UACA,SACC,KAAM,UAAW,GAClB,gBACA,UACA,YACA,QACA,iBACC,KAAM,UAAW,GAClB,wBACA,UACA,oBACA,QACA,QACAN,EAAMI,eAAen1B,KAAK4uK,4BAC1B,iBACC,KAAM,UAAW,GAClB,wBACA,UACA,oBACA,QACA,SACC,KAAM,UAAW,GAClB,gBACA,UACA,YACA,SAGF5uK,KAAKg3B,OAASh3B,KAAK8uK,kBACjB,YACA/5I,EAAM6qB,kBAAkB5/C,KAAK6sK,sBAC7B,SACA93I,EAAM6qB,kBAAkB5/C,KAAKgtK,kBAC7B,QACAj4I,EAAMQ,iBAAiBv1B,KAAKstK,mBAC5B,aACAv4I,EAAMI,eAAen1B,KAAKutK,sBAC1B,YACAx4I,EAAMQ,iBAAiBv1B,KAAK4tK,mBAC5B,YACA74I,EAAMI,eAAen1B,KAAK6tK,sBAC1B,aACA94I,EAAMQ,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ACA,QACA,QACA,SAGFhwK,KAAKiwK,yBACH,gBACC,MAAO,KAAM,UAAW,GAAI,GAC7B,yBACC,KAAM,UAAW,GAClB,yBACC,KAAM,UAAW,GAClB,gBACA,QACA,gBACC,KAAM,UAAW,GAClB,OACAl7I,EAAMM,iBACN,cACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,cACA,UACA,gBACC,KAAM,UAAW,GAClB,OACA,UACA,eACA,SACA,eACAN,EAAMQ,iBAAiBv1B,KAAK+vK,uBAC5B,qBACA,SACA,QACA,SACA,WACAh7I,EAAMQ,iBAAiBv1B,KAAKgwK,0BAC5B,YACC,KAAM,UAAW,GAClB,kBACC,KAAM,UAAW,GAClB,eACA,UACA,mBACC,KAAM,UAAW,GAClB,eACC,MAAO,KAAM,UAAW,GAAI,GAC7B,gBACC,MAAO,KAAM,UAAW,GAAI,GAC7B,aACAj7I,EAAMQ,iBAAiBv1B,KAAK+vK,uBAC5B,mBACA,SACA,YACC,MAAO,KAAM,UAAW,GAAI,GAC7B,qBACC,KAAM,UAAW,GAClB,qBACC,KAAM,UAAW,GAClB,kBACC,KAAM,UAAW,GAClB,cACA,UACA,mBACA,UACA,eACC,KAAM,UAAW,GAClB,aACA,QACA,iBACC,KAAM,UAAW,GAClB,kBACC,KAAM,UAAW,GAClB,gBACC,KAAM,UAAW,GAClB,gBACA,SAGF/vK,KAAKkwK,mBACH,SACAn7I,EAAMI,eAAen1B,KAAK8vK,uBAC1B,WACA/6I,EAAMI,eAAen1B,KAAKiwK,0BAG5BjwK,KAAKmwK,sBACH,OACAp7I,EAAMM,iBACN,WACA,UACA,QACA,SACA,WACC,KAAM,UAAW,GAClB,cACA,UACA,WACA,QACA,OACA,SAGFr1B,KAAKowK,gBACH,gBACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,gBACAr7I,EAAMI,eAAe,UACrB,OACAJ,EAAMM,iBACN,QACA,SACA,SACA,UACA,gBACA,SACA,QACA,UACA,YACA,UACA,WACA,UACA,OACA,WAGFr1B,KAAKqwK,sBACH,OACAt7I,EAAMM,iBACN,QACA,SACA,UACA,UACA,WACA,UACA,QACA,SACA,OACA,WAGFr1B,KAAKswK,oBACH,UACAv7I,EAAMI,eAAen1B,KAAKowK,gBAC1B,UACAr7I,EAAMI,eAAen1B,KAAKqwK,uBAG5BrwK,KAAKuwK,qBACH,OACAx7I,EAAMM,iBACN,SACC,KAAM,QAAS,GAChB,cACA,UACA,YACA,UACA,eACA,WAGFr1B,KAAKwwK,mBAAqB,eAAgBz7I,EAAMI,eAAen1B,KAAKuwK,sBAEpEvwK,KAAKu7H,gBAAkB,MAAO,SAAU,WAAYxmG,EAAMI,eAAe,UAEzEn1B,KAAKywK,yBAA2B,QAAS17I,EAAMM,iBAAkB,SAAU,SAE3Er1B,KAAK0wK,wBAA0B,UAAW37I,EAAMI,eAAen1B,KAAKywK,0BAEpEzwK,KAAK2wK,yBAA2B,aAAc,SAAU,aAAc,SAAU,WAAY,WAE5F3wK,KAAK4wK,uBAAyB,OAAQ77I,EAAMM,iBAAkB,OAAQ,SAEtEr1B,KAAK6wK,mBACH,gBACA,SACA,QACA,QACA,UACA,UACA,SACA,UACA,OACA,UACA,YACA,QACA,OACA7wK,KAAKu7H,eACL,UACAxmG,EAAMI,eAAe,UACrB,YACA,SACA,SACAJ,EAAMI,eAAen1B,KAAK0wK,wBAC1B,YACA37I,EAAMI,eAAe,SACrB,kBACAJ,EAAMI,eAAen1B,KAAK2wK,yBAC1B,kBACA57I,EAAMI,eAAen1B,KAAK2wK,yBAC1B,kBACA,SACA,cACA57I,EAAMI,eAAe,UACrB,oBACAJ,EAAMI,gBAAgB,KAAM,UAAW,IACvC,qBACAJ,EAAMI,eAAe,UACrB,YACAJ,EAAMI,eAAen1B,KAAK4wK,wBAG5B5wK,KAAK8wK,yBACH,cACA/7I,EAAMI,eAAe,UACrB,QACA,SACA,gBACA,UAGFn1B,KAAK+wK,uBACH,OACAh8I,EAAMM,iBACN,cACAN,EAAMI,eAAe,UACrB,cACC,KAAM,SAAU,GACjB,YACC,KAAM,SAAU,GACjB,cACA,UACA,gBACC,KAAM,UAAW,GAClB,QACA,SACA,MACA,UACA,cACA,UACA,YACC,KAAM,UAAW,GAClB,cACA,SACA,WACC,KAAM,UAAW,GAClB,gBACA,QACA,SACA,UACA,YACA,UACA,WACA,UACA,WACA,UACA,YACA,UACA,kBACA,QACA,OACA,QACA,WACA,UACA,iBACA,QACA,QACA,WAGFn1B,KAAKgxK,uBACH,OACAj8I,EAAMM,iBACN,kBACAN,EAAMI,eAAe,UACrB,QACA,SACA,cACA,UACA,SACA,UACA,QACA,QACA,YACA,WAGFn1B,KAAKixK,uBACH,UACAl8I,EAAMI,eAAen1B,KAAK8wK,yBAC1B,QACA/7I,EAAMI,eAAen1B,KAAK+wK,uBAC1B,QACAh8I,EAAMI,eAAen1B,KAAKgxK,wBAG5BhxK,KAAKkxK,4BACH,QACA,UACA,UACA,UACA,YACC,KAAM,UAAW,GAClB,QACAn8I,EAAMM,kBAGRr1B,KAAKmxK,wBACH,QACAp8I,EAAMM,iBACN,QACA,SACA,cACA,UACA,YACA,UACA,OACA,UACA,eACA,UACA,UACA,UACA,kBACA,UACA,OACA,UACA,SACC,KAAM,UAAW,GAClB,gBACA,UACA,YACA,QACA,iBACC,KAAM,UAAW,GAClB,wBACA,UACA,oBACA,QACA,QACAN,EAAMI,eAAen1B,KAAKkxK,4BAC1B,iBACC,KAAM,UAAW,GAClB,wBACA,UACA,oBACA,QACA,SACC,KAAM,UAAW,GAClB,gBACA,UACA,YACA,SAGFlxK,KAAKg3B,OAASh3B,KAAKoxK,kBACjB,YACAr8I,EAAM6qB,kBAAkB5/C,KAAKmvK,sBAC7B,SACAp6I,EAAM6qB,kBAAkB5/C,KAAKsvK,kBAC7B,QACAv6I,EAAMQ,iBAAiBv1B,KAAK4vK,mBAC5B,aACA76I,EAAMI,eAAen1B,KAAK6vK,sBAC1B,YACA96I,EAAMQ,iBAAiBv1B,KAAKkwK,mBAC5B,YACAn7I,EAAMI,eAAen1B,KAAKmwK,sBAC1B,aACAp7I,EAAMQ,iBAAiBv1B,KAAKswK,oBAC5B,YACAv7I,EAAMQ,iBAAiBv1B,KAAKwwK,mBAC5B,YACAz7I,EAAMI,eAAen1B,KAAK6wK,mBAC1B,oBACA97I,EAAMI,eAAeJ,EAAMM,kBAC3B,gBACAN,EAAMI,gBAAgB,KAAM,UA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CN,cACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,cACA,UACA,gBACC,KAAM,UAAW,GAClB,OACA,UACA,eACA,SACA,eACAN,EAAMQ,iBAAiBv1B,KAAKqyK,uBAC5B,qBACA,SACA,QACA,SACA,WACAt9I,EAAMQ,iBAAiBv1B,KAAKsyK,0BAC5B,YACC,KAAM,UAAW,GAClB,kBACC,KAAM,UAAW,GAClB,eACA,UACA,mBACC,KAAM,UAAW,GAClB,eACC,MAAO,KAAM,UAAW,GAAI,GAC7B,gBACC,MAAO,KAAM,UAAW,GAAI,GAC7B,aACAv9I,EAAMQ,iBAAiBv1B,KAAKqyK,uBAC5B,mBACA,SACA,YACC,MAAO,KAAM,UAAW,GAAI,GAC7B,qBACC,KAAM,UAAW,GAClB,qBACC,KAAM,UAAW,GAClB,kBACC,KAAM,UAAW,GAClB,cACA,UACA,mBACA,UACA,eACC,KAAM,UAAW,GAClB,aACA,QACA,iBACC,KAAM,UAAW,GAClB,kBACC,KAAM,UAAW,GAClB,gBACC,KAAM,UAAW,GAClB,gBACA,SAGFryK,KAAKwyK,mBACH,SACAz9I,EAAMI,eAAen1B,KAAKoyK,uBAC1B,WACAr9I,EAAMI,eAAen1B,KAAKuyK,0BAG5BvyK,KAAKyyK,sBACH,OACA19I,EAAMM,iBACN,WACA,UACA,QACA,SACA,WACC,KAAM,UAAW,GAClB,cACA,UACA,WACA,QACA,OACA,SAGFr1B,KAAK0yK,gBACH,gBACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,gBACA39I,EAAMI,eAAe,UACrB,OACAJ,EAAMM,iBACN,QACA,SACA,SACA,UACA,gBACA,SACA,QACA,UACA,YACA,UACA,WACA,UACA,OACA,WAGFr1B,KAAK2yK,sBACH,OACA59I,EAAMM,iBACN,QACA,SACA,UACA,UACA,WACA,UACA,QACA,SACA,OACA,WAGFr1B,KAAK4yK,oBACH,UACA79I,EAAMI,eAAen1B,KAAK0yK,gBAC1B,UACA39I,EAAMI,eAAen1B,KAAK2yK,uBAG5B3yK,KAAK6yK,qBACH,OACA99I,EAAMM,iBACN,SAC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BAA2B,aAAc,SAAU,aAAc,SAAU,WAAY,WAE5F73K,KAAK83K,uBAAyB,OAAQ/iJ,EAAMM,iBAAkB,OAAQ,SAEtEr1B,KAAK+3K,mBACH,gBACA,SACA,QACA,QACA,UACA,UACA,SACA,UACA,OACA,UACA,YACA,QACA,OACA/3K,KAAKu7H,eACL,UACAxmG,EAAMI,eAAe,UACrB,YACA,SACA,SACAJ,EAAMI,eAAen1B,KAAK43K,wBAC1B,YACA7iJ,EAAMI,eAAe,SACrB,kBACAJ,EAAMI,eAAen1B,KAAK63K,yBAC1B,kBACA9iJ,EAAMI,eAAen1B,KAAK63K,yBAC1B,kBACA,SACA,cACA9iJ,EAAMI,eAAe,UACrB,oBACAJ,EAAMI,gBAAgB,KAAM,UAAW,IACvC,qBACAJ,EAAMI,eAAe,UACrB,YACAJ,EAAMI,eAAen1B,KAAK83K,wBAG5B93K,KAAKg4K,yBACH,cACAjjJ,EAAMI,eAAe,UACrB,QACA,SACA,gBACA,UAGFn1B,KAAKi4K,uBACH,OACAljJ,EAAMM,iBACN,cACAN,EAAMI,eAAe,UACrB,cACC,KAAM,SAAU,GACjB,YACC,KAAM,SAAU,GACjB,cACA,UACA,gBACC,KAAM,UAAW,GAClB,QACA,SACA,MACA,UACA,cACA,UACA,YACC,KAAM,UAAW,GAClB,cACA,SACA,WACC,KAAM,UAAW,GAClB,gBACA,QACA,SACA,UACA,YACA,UACA,WACA,UACA,WACA,UACA,YACA,UACA,kBACA,QACA,OACA,QACA,WACA,UACA,iBACA,QACA,QACA,WAGFn1B,KAAKk4K,uBACH,OACAnjJ,EAAMM,iBACN,kBACAN,EAAMI,eAAe,UACrB,QACA,SACA,cACA,UACA,SACA,UACA,QACA,QACA,YACA,WAGFn1B,KAAKm4K,uBACH,UACApjJ,EAAMI,eAAen1B,KAAKg4K,yBAC1B,QACAjjJ,EAAMI,eAAen1B,KAAKi4K,uBAC1B,QACAljJ,EAAMI,eAAen1B,KAAKk4K,wBAG5Bl4K,KAAKo4K,wBACH,QACArjJ,EAAMM,iBACN,QACA,SACA,cACA,UACA,YACA,QACA,OACA,QACA,eACA,U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BAC1B,YACAllJ,EAAMI,eAAe,SACrB,kBACAJ,EAAMI,eAAen1B,KAAKk6K,yBAC1B,kBACAnlJ,EAAMI,eAAen1B,KAAKk6K,yBAC1B,kBACA,SACA,cACAnlJ,EAAMI,eAAe,UACrB,oBACAJ,EAAMI,gBAAgB,KAAM,UAAW,IACvC,qBACAJ,EAAMI,eAAe,UACrB,YACAJ,EAAMI,eAAen1B,KAAKm6K,wBAG5Bn6K,KAAKq6K,yBACH,cACAtlJ,EAAMI,eAAe,UACrB,QACA,SACA,gBACA,UAGFn1B,KAAKs6K,uBACH,OACAvlJ,EAAMM,iBACN,cACAN,EAAMI,eAAe,UACrB,aACA,SACA,WACA,SACA,cACA,UACA,gBACC,KAAM,UAAW,GAClB,QACA,SACA,MACA,UACA,cACA,UACA,YACC,KAAM,UAAW,GAClB,cACA,SACA,SACA,UACA,YACA,UACA,WACA,UACA,WACA,UACA,YACA,UACA,kBACA,QACA,OACA,QACA,WACA,UACA,iBACA,QACA,QACA,WAGFn1B,KAAKu6K,uBACH,OACAxlJ,EAAMM,iBACN,kBACAN,EAAMI,eAAe,UACrB,QACA,SACA,cACA,UACA,SACA,UACA,QACA,SAGFn1B,KAAKw6K,uBACH,UACAzlJ,EAAMI,eAAen1B,KAAKq6K,yBAC1B,QACAtlJ,EAAMI,eAAen1B,KAAKs6K,uBAC1B,QACAvlJ,EAAMI,eAAen1B,KAAKu6K,wBAG5Bv6K,KAAKy6K,wBACH,QACA1lJ,EAAMM,iBACN,QACA,SACA,cACA,UACA,YACA,QACA,OACA,QACA,eACA,UACA,UACA,QACA,kBACA,UACA,OACA,QACA,SACC,KAAM,UAAW,GAClB,gBACA,QACA,YACA,QACA,iBACC,KAAM,UAAW,GAClB,wBACA,QACA,oBACA,QACA,iBACC,KAAM,UAAW,GAClB,wBACA,QACA,oBACA,QACA,SACC,KAAM,UAAW,GAClB,gBACA,QACA,YACA,SAGFr1B,KAAKg3B,OAASh3B,KAAK06K,kBACjB,YACA3lJ,EAAM6qB,kBAAkB5/C,KAAK04K,sBAC7B,SACA3jJ,EAAM6qB,kBAAkB5/C,KAAK64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BACA,UAGFn1B,KAAK28K,uBACH,OACA5nJ,EAAMM,iBACN,cACAN,EAAMI,eAAe,UACrB,aACA,SACA,WACA,SACA,cACA,UACA,gBACC,KAAM,UAAW,GAClB,QACA,SACA,MACA,UACA,cACA,UACA,YACC,KAAM,UAAW,GAClB,cACA,SACA,SACA,UACA,YACA,UACA,WACA,UACA,WACA,UACA,YACA,UACA,kBACA,QACA,OACA,QACA,WACA,UACA,iBACA,QACA,QACA,WAGFn1B,KAAK48K,uBACH,OACA7nJ,EAAMM,iBACN,kBACAN,EAAMI,eAAe,UACrB,QACA,SACA,cACA,UACA,SACA,UACA,QACA,QACA,eACA,UAGFn1B,KAAK68K,uBACH,UACA9nJ,EAAMI,eAAen1B,KAAK08K,yBAC1B,QACA3nJ,EAAMI,eAAen1B,KAAK28K,uBAC1B,QACA5nJ,EAAMI,eAAen1B,KAAK48K,wBAG5B58K,KAAK88K,wBACH,QACA/nJ,EAAMM,iBACN,QACA,SACA,cACA,UACA,YACA,QACA,OACA,QACA,eACA,UACA,UACA,QACA,kBACA,UACA,OACA,QACA,SACC,KAAM,UAAW,GAClB,gBACA,QACA,YACA,QACA,iBACC,KAAM,UAAW,GAClB,wBACA,QACA,oBACA,QACA,iBACC,KAAM,UAAW,GAClB,wBACA,QACA,oBACA,QACA,SACC,KAAM,UAAW,GAClB,gBACA,QACA,YACA,SAGFr1B,KAAKg3B,OAASh3B,KAAK+8K,kBACjB,YACAhoJ,EAAM6qB,kBAAkB5/C,KAAK+6K,sBAC7B,SACAhmJ,EAAM6qB,kBAAkB5/C,KAAKk7K,kBAC7B,QACAnmJ,EAAMQ,iBAAiBv1B,KAAKw7K,mBAC5B,aACAzmJ,EAAMI,eAAen1B,KAAKy7K,sBAC1B,YACA1mJ,EAAMQ,iBAAiBv1B,KAAK87K,mBAC5B,YACA/mJ,EAAMI,eAAen1B,KAAK+7K,sBAC1B,aACAhnJ,EAAMQ,iBAAiBv1B,KAAKk8K,oBAC5B,YACAnnJ,EAAMQ,iBAAiBv1B,KAAKo8K,mBAC5B,YACArnJ,EAAMI,eAAen1B,KAAKy8K,mBAC1B,oBACA1nJ,EAAMI,eAAeJ,EAAMM,kBAC3B,gBACAN,EAAMI,gBAAgB,KAAM,UAAW,IACvC,eACC,KAAM,UAAW,GAClB,cACAJ,EAAMoB,oBACN,gBACApB,EAAMQ,iBAAiBv1B,KAAK68K,uBAC5B,kBACA9nJ,EAAMI,eAAen1B,KAAK88K,0BAK9BxvG,GAAI,WACFttE,KAAKg9K,qBACH,WACAjoJ,EAAMoB,oBACN,eACA,SACA,QACApB,EAAMM,iBACN,SACAN,EAAMM,iBACN,WACA,SACA,iBACA,SAGFr1B,KAAKi9K,sBAAwB,OAAQ,SAAU,SAAU,KAAM,UAAW,GAAI,gBAAiB,UAE/Fj9K,KAAKk9K,sBAAwB,YAAanoJ,EAAMM,iBAAkB,gBAAiB,UAEnFr1B,KAAKm9K,qBAAuB,YAAapoJ,EAAMM,iBAAkB,WAAY,SAAU,OAAQ,SAE/Fr1B,KAAKo9K,sBACH,WACAroJ,EAAMoB,oBACN,gBACA,SACA,YACA,SACA,gBACA,QACA,WACApB,EAAMI,eAAen1B,KAAKg9K,qBAC1B,YACAjoJ,EAAMI,eAAen1B,KAAKi9K,sBAC1B,gBACAloJ,EAAMI,eAAen1B,KAAKk9K,sBAC1B,eACAnoJ,EAAMI,eAAen1B,KAAKm9K,sBAG5Bn9K,KAAKq9K,qBAAuB,UAAWtoJ,EAAMI,eAAe,WAE5Dn1B,KAAKs9K,yBACH,kBACAvoJ,EAAMI,eAAe,UACrB,YACAJ,EAAMI,gBAAgB,KAAM,UAAW,IACvC,gBACAJ,EAAMI,eAAe,UACrB,UACAJ,EAAMI,gBAAgB,KAAM,UAAW,IACvC,WACAJ,EAAMk4D,mBAGRjtF,KAAKgrI,oBAAsB,OAAQj2G,EAAMI,eAAe,UAExDn1B,KAAKu9K,kBACH,OACAxoJ,EAAMI,eAAen1B,KAAKq9K,qBAC1B,eACAtoJ,EAAMI,eAAen1B,KAAKs9K,yBAC1B,OACAt9K,KAAKgrI,mBACL,QACA,SACA,iBACAj2G,EAAMI,eAAe,UACrB,kBACAJ,EAAMI,eAAe,UACrB,WACAJ,EAAMM,iBACN,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,IAGpBr1B,KAAKw9K,uBACH,QACA,SACA,YACC,KAAM,UAAW,GAClB,eACC,KAAM,UAAW,GAClB,cACC,MAAO,KAAM,UAAW,GAAI,IAG/Bx9K,KAAKy9K,kBACH,OACA1oJ,EAAMk4D,kBACN,cACA,SACA,iBACAjtF,KAAKw9K,sBACL,mBACC,MAAO,KAAM,UAAW,GAAI,GAC7B,WACA,UACA,oBACAzoJ,EAAMQ,iBAAiB,SACvB,sBACAR,EAAMQ,iBAAiB,UAGzBv1B,KAAK09K,sBACH,OACA3oJ,EAAMk4D,kBACN,QACAl4D,EAAMI,eAAen1B,KAAKy9K,kBAC1B,UACA,UAGFz9K,KAAK29K,yBAA2B,OAAQ5oJ,EAAMQ,iBAAiB,UAE/Dv1B,KAAK4yI,yBAA2B,YAAa79G,EAAMI,eAAe,UAElEn1B,KAAK49K,mBAAqB,YAAa59K,KAAK4yI,wBAAyB,QAAS79G,EAAMM,kBAEpFr1B,KAAK69K,mBACH,OACA9oJ,EAAMk4D,kBACN,WACAl4D,EAAMQ,iBAAiBv1B,KAAK09K,sBAC5B,mBACA19K,KAAKw9K,sBACL,eACAzoJ,EAAMI,eAAen1B,KAAK29K,yBAC1B,YACA5oJ,EAAMI,eAAe,UACrB,eACAJ,EAAMI,eAAe,UACrB,aACAJ,EAAMI,eAAen1B,KAAK49K,mBAC1B,eACA7oJ,EAAMI,eAAe,SACrB,UACC,KAAM,UAAW,GAClB,SACA,WAGFn1B,KAAK89K,sBACH,KACA/oJ,EAAMM,iBACN,OACA,SACA,aACA,SACA,OACA,UACA,MACAN,EAAMM,iBACN,SACAN,EAAMoB,qBAGRn2B,KAAK+9K,uBACH,gBACC,KAAM,UAAW,GAClB,OACAhpJ,EAAMM,iBACN,OACA,UACA,iBACAN,EAAMI,eAAe,UACrB,QACA,SACA,gBACA,SACA,kBACAJ,EAAMI,eAAe,UACrB,YACC,KAAM,UAAW,IAGpBn1B,KAAKg+K,uBAAyB,YAAa,QAAS,OAAQjpJ,EAAMI,gBAAgB,KAAM,UAAW,KAEnGn1B,KAAKi+K,0BACH,UACA,QACA,QACA,QACA,MACA,UACA,OACA,QACA,QACA,SAGFj+K,KAAKk+K,yBACH,gBACC,MAAO,KAAM,UAAW,GAAI,GAC7B,yBACC,KAAM,UAAW,GAClB,yBACC,KAAM,UAAW,GAClB,gBACA,QACA,gBACC,KAAM,UAAW,GAClB,OACAnpJ,EAAMM,iBACN,cACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,cACA,UACA,gBACC,KAAM,UAAW,GAClB,OACA,UACA,eACA,SACA,eACAN,EAAMQ,iBAAiBv1B,KAAKg+K,uBAC5B,qBACA,SACA,QACA,SACA,WACAjpJ,EAAMQ,iBAAiBv1B,KAAKi+K,0BAC5B,YACC,KAAM,UAAW,GAClB,kBACC,KAAM,UAAW,GAClB,eACA,UACA,mBACC,KAAM,UAAW,GAClB,eACC,MAAO,KAAM,UAAW,GAAI,GAC7B,gBACC,MAAO,KAAM,UAAW,GAAI,GAC7B,aACAlpJ,EAAMQ,iBAAiBv1B,KAAKg+K,uBAC5B,mBACA,SACA,YACC,MAAO,KAAM,UAAW,GAAI,GAC7B,qBACC,KAAM,UAAW,GAClB,qBACC,KAAM,UAAW,GAClB,kBACC,KAAM,UAAW,GAClB,cACA,UACA,mBACA,UACA,eACC,KAAM,UAAW,GAClB,aACA,QACA,iBACC,KAAM,UAAW,GAClB,kBACC,KAAM,UAAW,GAClB,gBACC,KAAM,UAAW,GAClB,eACA,SACA,gBACA,SAGFh+K,KAAKm+K,mBACH,SACAppJ,EAAMI,eAAen1B,KAAK+9K,uBAC1B,WACAhpJ,EAAMI,eAAen1B,KAAKk+K,0BAG5Bl+K,KAAKo+K,sBACH,OACArpJ,EAAMM,iBACN,WACA,UACA,QACA,SACA,WACC,KAAM,UAAW,GAClB,cACA,UACA,WACA,QACA,OACA,QACA,eACA,UAGFr1B,KAAKq+K,gBACH,gBACC,KAAM,UAAW,GAClB,gBACAtpJ,EAAMI,eAAe,UACrB,OACAJ,EAAMM,iBACN,QACA,SACA,SACA,UACA,gBACA,SACA,QACA,UACA,YACA,UACA,WACA,UACA,eACA,SACA,OACA,WAGFr1B,KAAKs+K,sBACH,OACAvpJ,EAAMM,iBACN,QACA,SACA,UACA,UACA,WACA,UACA,QACA,SACA,OACA,WAGFr1B,KAAKu+K,oBACH,UACAxpJ,EAAMI,eAAen1B,KAAKq+K,gBAC1B,UACAtpJ,EAAMI,eAAen1B,KAAKs+K,uBAG5Bt+K,KAAKw+K,qBACH,OACAzpJ,EAAMM,iBACN,SACC,KAAM,QAAS,GAChB,cACA,UACA,YACA,UACA,eACA,UACA,eACA,UAGFr1B,KAAKy+K,mBAAqB,eAAgB1pJ,EAAMI,eAAen1B,KAAKw+K,sBAEpEx+K,KAAKu7H,gBAAkB,MAAO,SAAU,WAAYxmG,EAAMI,eAAe,UAEzEn1B,KAAK0+K,yBAA2B,QAAS3pJ,EAAMM,iBAAkB,SAAU,SAE3Er1B,KAAK2+K,wBAA0B,UAAW5pJ,EAAMI,eAAen1B,KAAK0+K,0BAEpE1+K,KAAK4+K,yBAA2B,aAAc,SAAU,aAAc,SAAU,WAAY,WAE5F5+K,KAAK6+K,uBAAyB,OAAQ9pJ,EAAMM,iBAAkB,OAAQ,SAEtEr1B,KAAK8+K,mBACH,gBACA,SACA,QACA,QACA,UACA,UACA,SACA,UACA,OACA,UACA,YACA,QACA,OACA9+K,KAAKu7H,eACL,UACAxmG,EAAMI,eAAe,UACrB,YACA,SACA,SACAJ,EAAMI,eAAen1B,KAAK2+K,wBAC1B,YACA5pJ,EAAMI,eAAe,SACrB,kBACAJ,EAAMI,eAAen1B,KAAK4+K,yBAC1B,kBACA7pJ,EAAMI,eAAen1B,KAAK4+K,yBAC1B,kBACA,SACA,cACA7pJ,EAAMI,eAAe,UACrB,oBACAJ,EAAMI,gBAAgB,KAAM,UAAW,IACvC,qBACAJ,EAAMI,eAAe,UACrB,YACAJ,EAAMI,eAAen1B,KAAK6+K,wBAG5B7+K,KAAK++K,yBACH,cACAhqJ,EAAMI,eAAe,UACrB,QACA,SACA,gBACA,UAGFn1B,KAAKg/K,uBACH,OACAjqJ,EAAMM,iBACN,cACAN,EAAMI,eAAe,UACrB,aACA,SACA,WACA,SACA,cACA,UACA,gBACC,KAAM,UAAW,GAClB,QACA,SACA,MACA,UACA,cACA,UACA,YACC,KAAM,UAAW,GAClB,cACA,SACA,SACA,UACA,YACA,UACA,WACA,UACA,WACA,UACA,YACA,UACA,kBACA,QACA,OACA,QACA,WACA,UACA,iBACA,QACA,QACA,WAGFn1B,KAAKi/K,uBACH,OACAlqJ,EAAMM,iBACN,kBACAN,EAAMI,eAAe,UACrB,QACA,SACA,cACA,UACA,SACA,UACA,QACA,QACA,eACA,UAGFn1B,KAAKk/K,uBACH,UACAnqJ,EAAMI,eAAen1B,KAAK++K,yBAC1B,QACAhqJ,EAAMI,eAAen1B,KAAKg/K,uBAC1B,QACAjqJ,EAAMI,eAAen1B,KAAKi/K,wBAG5Bj/K,KAAKg3B,OAASh3B,KAAKm/K,kBACjB,YACApqJ,EAAM6qB,kBAAkB5/C,KAAKo9K,sBAC7B,SACAroJ,EAAM6qB,kBAAkB5/C,KAAKu9K,kBAC7B,QACAxoJ,EAAMQ,iBAAiBv1B,KAAK69K,mBAC5B,aACA9oJ,EAAMI,eAAen1B,KAAK89K,sBAC1B,YACA/oJ,EAAMQ,iBAAiBv1B,KAAKm+K,mBAC5B,YACAppJ,EAAMI,eAAen1B,KAAKo+K,sBAC1B,aACArpJ,EAAMQ,iBAAiBv1B,KAAKu+K,oBAC5B,YACAxpJ,EAAMQ,iBAAiBv1B,KAAKy+K,mBAC5B,YACA1pJ,EAAMI,eAAen1B,KAAK8+K,mBAC1B,oBACA/pJ,EAAMI,eAAeJ,EAAMM,kBAC3B,gBACAN,EAAMI,gBAAgB,KAAM,UAAW,IACvC,eACC,KAAM,UAAW,GAClB,cACAJ,EAAMoB,oBACN,gBACApB,EAAMQ,iBAAiBv1B,KAAKk/K,yBAKhC5wG,GAAI,WACFtuE,KAAKo/K,qBACH,WACArqJ,EAAMoB,oBACN,eACA,SACA,QACApB,EAAMM,iBACN,SACAN,EAAMM,iBACN,WACA,SACA,iBACA,SAGFr1B,KAAKq/K,sBAAwB,OAAQ,SAAU,SAAU,KAAM,UAAW,GAAI,gBAAiB,UAE/Fr/K,KAAKs/K,sBAAwB,YAAavqJ,EAAMM,iBAAkB,gBAAiB,UAEnFr1B,KAAKu/K,qBAAuB,YAAaxqJ,EAAMM,iBAAkB,WAAY,SAAU,OAAQ,SAE/Fr1B,KAAKw/K,sBACH,WACAzqJ,EAAMoB,oBACN,gBACA,SACA,YACA,SACA,gBACA,QACA,WACApB,EAAMI,eAAen1B,KAAKo/K,qBAC1B,YACArqJ,EAAMI,eAAen1B,KAAKq/K,sBAC1B,gBACAtqJ,EAAMI,eAAen1B,KAAKs/K,sBAC1B,eACAvqJ,EAAMI,eAAen1B,KAAKu/K,sBAG5Bv/K,KAAKy/K,qBAAuB,UAAW1qJ,EAAMI,eAAe,WAE5Dn1B,KAAK0/K,yBACH,kBACA3qJ,EAAMI,eAAe,UACrB,YACAJ,EAAMI,gBAAgB,KAAM,UAAW,IACvC,gBACAJ,EAAMI,eAAe,UACrB,UACAJ,EAAMI,gBAAgB,KAAM,UAAW,IACvC,WACAJ,EAAMk4D,mBAGRjtF,KAAKgrI,oBAAsB,OAAQj2G,EAAMI,eAAe,UAExDn1B,KAAK2/K,kBACH,OACA5qJ,EAAMI,eAAen1B,KAAKy/K,qBAC1B,eACA1qJ,EAAMI,eAAen1B,KAAK0/K,yBAC1B,OACA1/K,KAAKgrI,mBACL,QACA,SACA,iBACAj2G,EAAMI,eAAe,UACrB,kBACAJ,EAAMI,eAAe,UACrB,WACAJ,EAAMM,iBACN,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,IAGpBr1B,KAAK4/K,uBACH,QACA,SACA,YACC,KAAM,UAAW,GAClB,eACC,KAAM,UAAW,GAClB,cACC,MAAO,KAAM,UAAW,GAAI,IAG/B5/K,KAAK6/K,kBACH,OACA9qJ,EAAMk4D,kBACN,cACA,SACA,iBACAjtF,KAAK4/K,sBACL,mBACC,MAAO,KAAM,UAAW,GAAI,GAC7B,WACA,UACA,oBACA7qJ,EAAMQ,iBAAiB,SACvB,sBACAR,EAAMQ,iBAAiB,UAGzBv1B,KAAK8/K,sBACH,OACA/qJ,EAAMk4D,kBACN,QACAl4D,EAAMI,eAAen1B,KAAK6/K,kBAC1B,UACA,UAGF7/K,KAAK+/K,yBAA2B,OAAQhrJ,EAAMQ,iBAAiB,UAE/Dv1B,KAAK4yI,yBAA2B,YAAa79G,EAAMI,eAAe,UAElEn1B,KAAKggL,mBAAqB,YAAahgL,KAAK4yI,wBAAyB,QAAS79G,EAAMM,kBAEpFr1B,KAAKigL,mBACH,OACAlrJ,EAAMk4D,kBACN,WACAl4D,EAAMQ,iBAAiBv1B,KAAK8/K,sBAC5B,mBACA9/K,KAAK4/K,sBACL,eACA7qJ,EAAMI,eAAen1B,KAAK+/K,yBAC1B,YACAhrJ,EAAMI,eAAe,UACrB,eACAJ,EAAMI,eAAe,UACrB,aACAJ,EAAMI,eAAen1B,KAAKggL,mBAC1B,eACAjrJ,EAAMI,eAAe,SACrB,UACC,KAAM,UAAW,GAClB,SACA,WAGFn1B,KAAKkgL,sBACH,KACAnrJ,EAAMM,iBACN,OACA,SACA,aACA,SACA,OACA,UACA,MACAN,EAAMM,iBACN,SACAN,EAAMoB,qBAGRn2B,KAAKmgL,uBACH,gBACC,KAAM,UAAW,GAClB,OACAprJ,EAAMM,iBACN,OACA,UACA,iBACAN,EAAMI,eAAe,UACrB,QACA,SACA,gBACA,SACA,kBACAJ,EAAMI,eAAe,UACrB,YACC,KAAM,UAAW,IAGpBn1B,KAAKogL,uBAAyB,YAAa,QAAS,OAAQrrJ,EAAMI,gBAAgB,KAAM,UAAW,KAEnGn1B,KAAKqgL,0BACH,UACA,QACA,QACA,QACA,MACA,UACA,OACA,QACA,QACA,SAGFrgL,KAAKsgL,yBACH,gBACC,MAAO,KAAM,UAAW,GAAI,GAC7B,yBACC,KAAM,UAAW,GAClB,yBACC,KAAM,UAAW,GAClB,gBACA,QACA,gBACC,KAAM,UAAW,GAClB,OACAvrJ,EAAMM,iBACN,cACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,cACA,UACA,gBACC,KAAM,UAAW,GAClB,OACA,UACA,eACA,SACA,eACAN,EAAMQ,iBAAiBv1B,KAAKogL,uBAC5B,qBACA,SACA,QACA,SACA,WACArrJ,EAAMQ,iBAAiBv1B,KAAKqgL,0BAC5B,YACC,KAAM,UAAW,GAClB,kBACC,KAAM,UAAW,GAClB,eACA,UACA,mBACC,KAAM,UAAW,GAClB,eACC,MAAO,KAAM,UAAW,GAAI,GAC7B,gBACC,MAAO,KAAM,UAAW,GAAI,GAC7B,aACAtrJ,EAAMQ,iBAAiBv1B,KAAKogL,uBAC5B,mBACA,SACA,YACC,MAAO,KAAM,UAAW,GAAI,GAC7B,qBACC,KAAM,UAAW,GAClB,qBACC,KAAM,UAAW,GAClB,kBACC,KAAM,UAAW,GAClB,cACA,UACA,mBACA,UACA,eACC,KAAM,UAAW,GAClB,aACA,QACA,iBACC,KAAM,UAAW,GAClB,kBACC,KAAM,UAAW,GAClB,gBACC,KAAM,UAAW,GAClB,eACA,SACA,gBACA,SAGFpgL,KAAKugL,mBACH,SACAxrJ,EAAMI,eAAen1B,KAAKmgL,uBAC1B,WACAprJ,EAAMI,eAAen1B,KAAKsgL,0BAG5BtgL,KAAKwgL,sBACH,OACAzrJ,EAAMM,iBACN,WACA,UACA,QACA,SACA,WACC,KAAM,UAAW,GAClB,cACA,UACA,WACA,QACA,OACA,QACA,eACA,UAGFr1B,KAAKygL,gBACH,gBACC,KAAM,UAAW,GAClB,gBACA1rJ,EAAMI,eAAe,UACrB,OACAJ,EAAMM,iBACN,QACA,SACA,SACA,UACA,gBACA,SACA,QACA,UACA,YACA,UACA,WACA,UACA,eACA,SACA,OACA,WAGFr1B,KAAK0gL,sBACH,OACA3rJ,EAAMM,iBACN,QACA,SACA,UACA,UACA,WACA,UACA,QACA,SACA,OACA,WAGFr1B,KAAK2gL,oBACH,UACA5rJ,EAAMI,eAAen1B,KAAKygL,gBAC1B,UACA1rJ,EAAMI,eAAen1B,KAAK0gL,uBAG5B1gL,KAAK4gL,qBACH,OACA7rJ,EAAMM,iBACN,SACC,KAAM,QAAS,GAChB,cACA,UACA,YACA,UACA,eACA,UACA,eACA,UAGFr1B,KAAK6gL,mBAAqB,eAAgB9rJ,EAAMI,eAAen1B,KAAK4gL,sBAEpE5gL,KAAKu7H,gBAAkB,MAAO,SAAU,WAAYxmG,EAAMI,eAAe,UAEzEn1B,KAAK8gL,yBAA2B,QAAS/rJ,EAAMM,iBAAkB,SAAU,SAE3Er1B,KAAK+gL,wBAA0B,UAAWhsJ,EAAMI,eAAen1B,KAAK8gL,0BAEpE9gL,KAAKghL,yBAA2B,aAAc,SAAU,aAAc,SAAU,WAAY,WAE5FhhL,KAAKihL,uBAAyB,OAAQlsJ,EAAMM,iBAAkB,OAAQ,SAEtEr1B,KAAKkhL,mBACH,gBACA,SACA,QACA,QACA,UACA,UACA,SACA,UACA,OACA,UACA,YACA,QACA,OACAlhL,KAAKu7H,eACL,UACAxmG,EAAMI,eAAe,UACrB,YACA,SACA,SACAJ,EAAMI,eAAen1B,KAAK+gL,wBAC1B,YACAhsJ,EAAMI,eAAe,SACrB,kBACAJ,EAAMI,eAAen1B,KAAKghL,yBAC1B,kBACAjsJ,EAAMI,eAAen1B,KAAKghL,yBAC1B,kBACA,SACA,cACAjsJ,EAAMI,eAAe,UACrB,oBACAJ,EAAMI,gBAAgB,KAAM,UAAW,IACvC,qBACAJ,EAAMI,eAAe,UACrB,YACAJ,EAAMI,eAAen1B,KAAKihL,wBAG5BjhL,KAAKg3B,OAASh3B,KAAKmhL,kBACjB,YACApsJ,EAAM6qB,kBAAkB5/C,KAAKw/K,sBAC7B,SACAzqJ,EAAM6qB,kBAAkB5/C,KAAK2/K,kBAC7B,QACA5qJ,EAAMQ,iBAAiBv1B,KAAKigL,mBAC5B,aACAlrJ,EAAMI,eAAen1B,KAAKkgL,sBAC1B,YACAnrJ,EAAMQ,iBAAiBv1B,KAAKugL,mBAC5B,YACAxrJ,EAAMI,eAAen1B,KAAKwgL,sBAC1B,aACAzrJ,EAAMQ,iBAAiBv1B,KAAK2gL,oBAC5B,YACA5rJ,EAAMQ,iBAAiBv1B,KAAK6gL,mBAC5B,YACA9rJ,EAAMI,eAAen1B,KAAKkhL,mBAC1B,oBACAnsJ,EAAMI,eAAeJ,EAAMM,kBAC3B,gBACAN,EAAMI,gBAAgB,KAAM,UAAW,IACvC,eACC,KAAM,UAAW,GAClB,cACAJ,EAAMoB,sBAKVm5C,GAAI,WACFtvE,KAAKohL,qBACH,WACArsJ,EAAMoB,oBACN,eACA,SACA,QACApB,EAAMM,iBACN,SACAN,EAAMM,iBACN,WACA,SACA,iBACA,SAGFr1B,KAAKqhL,sBAAwB,OAAQ,SAAU,SAAU,KAAM,UAAW,GAAI,gBAAiB,UAE/FrhL,KAAKshL,sBAAwB,YAAavsJ,EAAMM,iBAAkB,gBAAiB,UAEnFr1B,KAAKuhL,qBAAuB,YAAaxsJ,EAAMM,iBAAkB,WAAY,SAAU,OAAQ,SAE/Fr1B,KAAKwhL,sBACH,WACAzsJ,EAAMoB,oBACN,gBACA,SACA,YACA,SACA,gBACA,QACA,WACApB,EAAMI,eAAen1B,KAAKohL,qBAC1B,YACArsJ,EAAMI,eAAen1B,KAAKqhL,sBAC1B,gBACAtsJ,EAAMI,eAAen1B,KAAKshL,sBAC1B,eACAvsJ,EAAMI,eAAen1B,KAAKuhL,sBAG5BvhL,KAAKyhL,qBAAuB,UAAW1sJ,EAAMI,eAAe,WAE5Dn1B,KAAK0hL,yBACH,kBACA3sJ,EAAMI,eAAe,UACrB,YACAJ,EAAMI,gBAAgB,KAAM,UAAW,IACvC,gBACAJ,EAAMI,eAAe,UACrB,UACAJ,EAAMI,gBAAgB,KAAM,UAAW,IACvC,WACAJ,EAAMk4D,mBAGRjtF,KAAKgrI,oBAAsB,OAAQj2G,EAAMI,eAAe,UAExDn1B,KAAK2hL,kBACH,OACA5sJ,EAAMI,eAAen1B,KAAKyhL,qBAC1B,eACA1sJ,EAAMI,eAAen1B,KAAK0hL,yBAC1B,OACA1hL,KAAKgrI,mBACL,QACA,SACA,iBACAj2G,EAAMI,eAAe,UACrB,kBACAJ,EAAMI,eAAe,UACrB,WACAJ,EAAMM,iBACN,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,IAGpBr1B,KAAK4hL,uBACH,QACA,SACA,YACC,KAAM,UAAW,GAClB,eACC,KAAM,UAAW,GAClB,cACC,MAAO,KAAM,UAAW,GAAI,IAG/B5hL,KAAK6hL,kBACH,OACA9sJ,EAAMk4D,kBACN,cACA,SACA,iBACAjtF,KAAK4hL,sBACL,mBACC,MAAO,KAAM,UAAW,GAAI,GAC7B,WACA,UACA,oBACA7sJ,EAAMQ,iBAAiB,SACvB,sBACAR,EAAMQ,iBAAiB,UAGzBv1B,KAAK8hL,sBACH,OACA/sJ,EAAMk4D,kBACN,QACAl4D,EAAMI,eAAen1B,KAAK6hL,kBAC1B,UACA,UAGF7hL,KAAK+hL,yBAA2B,OAAQhtJ,EAAMQ,iBAAiB,UAE/Dv1B,KAAK4yI,yBAA2B,YAAa79G,EAAMI,eAAe,UAElEn1B,KAAKgiL,mBAAqB,YAAahiL,KAAK4yI,wBAAyB,QAAS79G,EAAMM,kBAEpFr1B,KAAKiiL,mBACH,OACAltJ,EAAMk4D,kBACN,WACAl4D,EAAMQ,iBAAiBv1B,KAAK8hL,sBAC5B,mBACA9hL,KAAK4hL,sBACL,eACA7sJ,EAAMI,eAAen1B,KAAK+hL,yBAC1B,YACAhtJ,EAAMI,eAAe,UACrB,eACAJ,EAAMI,eAAe,UACrB,aACAJ,EAAMI,eAAen1B,KAAKgiL,mBAC1B,eACAjtJ,EAAMI,eAAe,SACrB,UACC,KAAM,UAAW,GAClB,SACA,WAGFn1B,KAAKkiL,sBACH,KACAntJ,EAAMM,iBACN,OACA,SACA,aACA,SACA,OACA,UACA,MACAN,EAAMM,iBACN,SACAN,EAAMoB,qBAGRn2B,KAAKmiL,uBACH,gBACC,KAAM,UAAW,GAClB,OACAptJ,EAAMM,iBACN,OACA,UACA,iBACAN,EAAMI,eAAe,UACrB,QACA,SACA,gBACA,SACA,kBACAJ,EAAMI,eAAe,UACrB,YACC,KAAM,UAAW,IAGpBn1B,KAAKoiL,uBAAyB,YAAa,QAAS,OAAQrtJ,EAAMI,gBAAgB,KAAM,UAAW,KAEnGn1B,KAAKqiL,0BACH,UACA,QACA,QACA,QACA,MACA,UACA,OACA,QACA,QACA,SAGFriL,KAAKsiL,yBACH,gBACC,MAAO,KAAM,UAAW,GAAI,GAC7B,yBACC,KAAM,UAAW,GAClB,yBACC,KAAM,UAAW,GAClB,gBACA,QACA,gBACC,KAAM,UAAW,GAClB,OACAvtJ,EAAMM,iBACN,cACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,cACA,UACA,gBACC,KAAM,UAAW,GAClB,OACA,UACA,eACA,SACA,eACAN,EAAMQ,iBAAiBv1B,KAAKoiL,uBAC5B,qBACA,SACA,QACA,SACA,WACArtJ,EAAMQ,iBAAiBv1B,KAAKqiL,0BAC5B,YACC,KAAM,UAAW,GAClB,kBACC,KAAM,UAAW,GAClB,eACA,UACA,mBACC,KAAM,UAAW,GAClB,eACC,MAAO,KAAM,UAAW,GAAI,GAC7B,gBACC,MAAO,KAAM,UAAW,GAAI,GAC7B,aACAttJ,EAAMQ,iBAAiBv1B,KAAKoiL,uBAC5B,mBACA,SACA,YACC,MAAO,KAAM,UAAW,GAAI,GAC7B,qBACC,KAAM,UAAW,GAClB,qBACC,KAAM,UAAW,GAClB,kBACC,KAAM,UAAW,GAClB,cACA,UACA,mBACA,UACA,eACC,KAAM,UAAW,GAClB,aACA,QACA,iBACC,KAAM,UAAW,GAClB,kBACC,KAAM,UAAW,GAClB,gBACC,KAAM,UAAW,GAClB,eACA,SACA,gBACA,SAGFpiL,KAAKuiL,mBACH,SACAxtJ,EAAMI,eAAen1B,KAAKmiL,uBAC1B,WACAptJ,EAAMI,eAAen1B,KAAKsiL,0BAG5BtiL,KAAKwiL,sBACH,OACAztJ,EAAMM,iBACN,WACA,UACA,QACA,SACA,WACC,KAAM,UAAW,GAClB,cACA,UACA,WACA,QACA,OACA,QACA,eACA,UAGFr1B,KAAKyiL,gBACH,gBACC,KAAM,UAAW,GAClB,gBACA1tJ,EAAMI,eAAe,UACrB,OACAJ,EAAMM,iBACN,QACA,SACA,SACA,UACA,gBACA,SACA,QACA,UACA,YACA,UACA,cACA,UACA,WACA,UACA,eACA,SACA,OACA,WAGFr1B,KAAK0iL,sBACH,OACA3tJ,EAAMM,iBACN,QACA,SACA,UACA,UACA,WACA,WAGFr1B,KAAK2iL,oBACH,UACA5tJ,EAAMI,eAAen1B,KAAKyiL,gBAC1B,UACA1tJ,EAAMI,eAAen1B,KAAK0iL,uBAG5B1iL,KAAK4iL,qBACH,OACA7tJ,EAAMM,iBACN,SACC,KAAM,QAAS,GAChB,cACA,UACA,YACA,UACA,eACA,UACA,eACA,UAGFr1B,KAAK6iL,mBAAqB,eAAgB9tJ,EAAMI,eAAen1B,KAAK4iL,sBAEpE5iL,KAAKu7H,gBAAkB,MAAO,SAAU,WAAYxmG,EAAMI,eAAe,UAEzEn1B,KAAK8iL,yBAA2B,QAAS/tJ,EAAMM,iBAAkB,SAAU,SAE3Er1B,KAAK+iL,wBAA0B,UAAWhuJ,EAAMI,eAAen1B,KAAK8iL,0BAEpE9iL,KAAKgjL,yBAA2B,aAAc,SAAU,aAAc,SAAU,WAAY,WAE5FhjL,KAAKijL,uBAAyB,OAAQluJ,EAAMM,iBAAkB,OAAQ,SAEtEr1B,KAAKkjL,mBACH,gBACA,SACA,QACA,QACA,UACA,UACA,SACA,UACA,OACA,UACA,YACA,QACA,OACAljL,KAAKu7H,eACL,UACAxmG,EAAMI,eAAe,UACrB,YACA,SACA,SACAJ,EAAMI,eAAen1B,KAAK+iL,wBAC1B,YACAhuJ,EAAMI,eAAe,SACrB,kBACAJ,EAAMI,eAAen1B,KAAKgjL,yBAC1B,kBACAjuJ,EAAMI,eAAen1B,KAAKgjL,yBAC1B,kBACA,SACA,cACAjuJ,EAAMI,eAAe,UACrB,oBACAJ,EAAMI,gBAAgB,KAAM,UAAW,IACvC,qBACAJ,EAAMI,eAAe,UACrB,YACAJ,EAAMI,eAAen1B,KAAKijL,wBAG5BjjL,KAAKg3B,OAASh3B,KAAKmjL,kBACjB,YACApuJ,EAAM6qB,kBAAkB5/C,KAAKwhL,sBAC7B,SACAzsJ,EAAM6qB,kBAAkB5/C,KAAK2hL,kBAC7B,QACA5sJ,EAAMQ,iBAAiBv1B,KAAKiiL,mBAC5B,aACAltJ,EAAMI,eAAen1B,KAAKkiL,sBAC1B,YACAntJ,EAAMQ,iBAAiBv1B,KAAKuiL,mBAC5B,YACAxtJ,EAAMI,eAAen1B,KAAKwiL,sBAC1B,aACAztJ,EAAMQ,iBAAiBv1B,KAAK2iL,oBAC5B,YACA5tJ,EAAMQ,iBAAiBv1B,KAAK6iL,mBAC5B,YACA9tJ,EAAMI,eAAen1B,KAAKkjL,mBAC1B,oBACAnuJ,EAAMI,eAAeJ,EAAMM,kBAC3B,gBACAN,EAAMI,gBAAgB,KAAM,UAAW,IACvC,eACC,KAAM,UAAW,GAClB,cACAJ,EAAMoB,sBAKVlB,GAAI,WACFj1B,KAAKojL,qBACH,WACAruJ,EAAMoB,oBACN,eACA,SACA,QACApB,EAAMM,iBACN,SACAN,EAAMM,iBACN,WACA,SACA,iBACA,SAGFr1B,KAAKqjL,sBAAwB,OAAQ,SAAU,SAAU,KAAM,UAAW,GAAI,gBAAiB,UAE/FrjL,KAAKsjL,sBAAwB,YAAavuJ,EAAMM,iBAAkB,gBAAiB,UAEnFr1B,KAAKujL,qBAAuB,YAAaxuJ,EAAMM,iBAAkB,WAAY,SAAU,OAAQ,SAE/Fr1B,KAAKwjL,sBACH,WACAzuJ,EAAMoB,oBACN,gBACA,SACA,YACA,SACA,gBACA,QACA,WACApB,EAAMI,eAAen1B,KAAKojL,qBAC1B,YACAruJ,EAAMI,eAAen1B,KAAKqjL,sBAC1B,gBACAtuJ,EAAMI,eAAen1B,KAAKsjL,sBAC1B,eACAvuJ,EAAMI,eAAen1B,KAAKujL,sBAG5BvjL,KAAKyjL,qBAAuB,UAAW1uJ,EAAMI,eAAe,WAE5Dn1B,KAAK0jL,yBACH,kBACA3uJ,EAAMI,eAAe,UACrB,YACAJ,EAAMI,gBAAgB,KAAM,UAAW,IACvC,gBACAJ,EAAMI,eAAe,UACrB,UACAJ,EAAMI,gBAAgB,KAAM,UAAW,IACvC,WACAJ,EAAMk4D,mBAGRjtF,KAAKgrI,oBAAsB,OAAQj2G,EAAMI,eAAe,UAExDn1B,KAAK2jL,kBACH,OACA5uJ,EAAMI,eAAen1B,KAAKyjL,qBAC1B,eACA1uJ,EAAMI,eAAen1B,KAAK0jL,yBAC1B,OACA1jL,KAAKgrI,mBACL,QACA,SACA,iBACAj2G,EAAMI,eAAe,UACrB,kBACAJ,EAAMI,eAAe,UACrB,WACAJ,EAAMM,iBACN,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,IAGpBr1B,KAAK4jL,uBACH,QACA,SACA,YACC,KAAM,UAAW,GAClB,eACC,KAAM,UAAW,GAClB,cACC,MAAO,KAAM,UAAW,GAAI,IAG/B5jL,KAAK6jL,kBACH,OACA9uJ,EAAMk4D,kBACN,cACA,SACA,iBACAjtF,KAAK4jL,sBACL,mBACC,MAAO,KAAM,UAAW,GAAI,GAC7B,WACA,UACA,oBACA7uJ,EAAMQ,iBAAiB,SACvB,sBACAR,EAAMQ,iBAAiB,UAGzBv1B,KAAK8jL,sBACH,OACA/uJ,EAAMk4D,kBACN,QACAl4D,EAAMI,eAAen1B,KAAK6jL,kBAC1B,UACA,UAGF7jL,KAAK+jL,yBAA2B,OAAQhvJ,EAAMQ,iBAAiB,UAE/Dv1B,KAAK4yI,yBAA2B,YAAa79G,EAAMI,eAAe,UAElEn1B,KAAKgkL,mBAAqB,YAAahkL,KAAK4yI,wBAAyB,QAAS79G,EAAMM,kBAEpFr1B,KAAKikL,mBACH,OACAlvJ,EAAMk4D,kBACN,WACAl4D,EAAMQ,iBAAiBv1B,KAAK8jL,sBAC5B,mBACA9jL,KAAK4jL,sBACL,eACA7uJ,EAAMI,eAAen1B,KAAK+jL,yBAC1B,YACAhvJ,EAAMI,eAAe,UACrB,eACAJ,EAAMI,eAAe,UACrB,aACAJ,EAAMI,eAAen1B,KAAKgkL,mBAC1B,eACAjvJ,EAAMI,eAAe,SACrB,UACC,KAAM,UAAW,GAClB,SACA,WAGFn1B,KAAKkkL,sBACH,KACAnvJ,EAAMM,iBACN,OACA,SACA,aACA,SACA,MACAN,EAAMM,iBACN,SACAN,EAAMoB,qBAGRn2B,KAAKmkL,uBACH,gBACC,KAAM,UAAW,GAClB,OACApvJ,EAAMM,iBACN,OACA,UACA,iBACAN,EAAMI,eAAe,UACrB,QACA,SACA,gBACA,SACA,kBACAJ,EAAMI,eAAe,UACrB,YACC,KAAM,UAAW,IAGpBn1B,KAAKokL,uBAAyB,YAAa,QAAS,OAAQrvJ,EAAMI,gBAAgB,KAAM,UAAW,KAEnGn1B,KAAKqkL,0BACH,UACA,QACA,QACA,QACA,MACA,UACA,OACA,QACA,QACA,SAGFrkL,KAAKskL,yBACH,gBACC,MAAO,KAAM,UAAW,GAAI,GAC7B,yBACC,KAAM,UAAW,GAClB,yBACC,KAAM,UAAW,GAClB,gBACA,QACA,gBACC,KAAM,UAAW,GAClB,OACAvvJ,EAAMM,iBACN,cACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,cACA,UACA,gBACC,KAAM,UAAW,GAClB,OACA,UACA,eACA,SACA,eACAN,EAAMQ,iBAAiBv1B,KAAKokL,uBAC5B,qBACA,SACA,QACA,SACA,WACArvJ,EAAMQ,iBAAiBv1B,KAAKqkL,0BAC5B,YACC,KAAM,UAAW,GAClB,kBACC,KAAM,UAAW,GAClB,eACA,UACA,mBACC,KAAM,UAAW,GAClB,eACC,MAAO,KAAM,UAAW,GAAI,GAC7B,gBACC,MAAO,KAAM,UAAW,GAAI,GAC7B,aACAtvJ,EAAMQ,iBAAiBv1B,KAAKokL,uBAC5B,mBACA,SACA,YACC,MAAO,KAAM,UAAW,GAAI,GAC7B,qBACC,KAAM,UAAW,GAClB,qBACC,KAAM,UAAW,GAClB,kBACC,KAAM,UAAW,GAClB,cACA,UACA,mBACA,UACA,eACC,KAAM,UAAW,GAClB,aACA,QACA,iBACC,KAAM,UAAW,GAClB,kBACC,KAAM,UAAW,GAClB,gBACC,KAAM,UAAW,GAClB,eACA,SACA,gBACA,SAGFpkL,KAAKukL,mBACH,SACAxvJ,EAAMI,eAAen1B,KAAKmkL,uBAC1B,WACApvJ,EAAMI,eAAen1B,KAAKskL,0BAG5BtkL,KAAKwkL,sBACH,OACAzvJ,EAAMM,iBACN,WACA,UACA,QACA,SACA,WACC,KAAM,UAAW,GAClB,cACA,UACA,WACA,QACA,OACA,QACA,eACA,UAGFr1B,KAAKykL,gBACH,gBACC,KAAM,UAAW,GAClB,gBACA1vJ,EAAMI,eAAe,UACrB,OACAJ,EAAMM,iBACN,QACA,SACA,SACA,UACA,gBACA,SACA,QACA,UACA,YACA,UACA,cACA,UACA,WACA,UACA,eACA,SACA,OACA,WAGFr1B,KAAK0kL,sBACH,OACA3vJ,EAAMM,iBACN,QACA,SACA,UACA,UACA,WACA,WAGFr1B,KAAK2kL,oBACH,UACA5vJ,EAAMI,eAAen1B,KAAKykL,gBAC1B,UACA1vJ,EAAMI,eAAen1B,KAAK0kL,uBAG5B1kL,KAAK4kL,qBACH,OACA7vJ,EAAMM,iBACN,SACC,KAAM,QAAS,GAChB,cACA,UACA,YACA,UACA,eACA,UACA,eACA,UAGFr1B,KAAK6kL,mBAAqB,eAAgB9vJ,EAAMI,eAAen1B,KAAK4kL,sBAEpE5kL,KAAKu7H,gBAAkB,MAAO,SAAU,WAAYxmG,EAAMI,eAAe,UAEzEn1B,KAAK8kL,yBAA2B,QAAS/vJ,EAAMM,iBAAkB,SAAU,SAE3Er1B,KAAK+kL,wBAA0B,UAAWhwJ,EAAMI,eAAen1B,KAAK8kL,0BAEpE9kL,KAAKglL,yBAA2B,aAAc,SAAU,aAAc,SAAU,WAAY,WAE5FhlL,KAAKilL,uBAAyB,OAAQlwJ,EAAMM,iBAAkB,OAAQ,SAEtEr1B,KAAKklL,mBACH,gBACA,SACA,QACA,QACA,UACA,UACA,SACA,UACA,OACA,UACA,YACA,QACA,OACAllL,KAAKu7H,eACL,UACAxmG,EAAMI,eAAe,UACrB,YACA,SACA,SACAJ,EAAMI,eAAen1B,KAAK+kL,wBAC1B,YACAhwJ,EAAMI,eAAe,SACrB,kBACAJ,EAAMI,eAAen1B,KAAKglL,yBAC1B,kBACAjwJ,EAAMI,eAAen1B,KAAKglL,yBAC1B,kBACA,SACA,cACAjwJ,EAAMI,eAAe,UACrB,oBACAJ,EAAMI,gBAAgB,KAAM,UAAW,IACvC,qBACAJ,EAAMI,eAAe,UACrB,YACAJ,EAAMI,eAAen1B,KAAKilL,wBAG5BjlL,KAAKg3B,OAASh3B,KAAKmlL,kBACjB,YACApwJ,EAAM6qB,kBAAkB5/C,KAAKwjL,sBAC7B,SACAzuJ,EAAM6qB,kBAAkB5/C,KAAK2jL,kBAC7B,QACA5uJ,EAAMQ,iBAAiBv1B,KAAKikL,mBAC5B,aACAlvJ,EAAMI,eAAen1B,KAAKkkL,sBAC1B,YACAnvJ,EAAMQ,iBAAiBv1B,KAAKukL,mBAC5B,YACAxvJ,EAAMI,eAAen1B,KAAKwkL,sBAC1B,aACAzvJ,EAAMQ,iBAAiBv1B,KAAK2kL,oBAC5B,YACA5vJ,EAAMQ,iBAAiBv1B,KAAK6kL,mBAC5B,YACA9vJ,EAAMI,eAAen1B,KAAKklL,mBAC1B,oBACAnwJ,EAAMI,eAAeJ,EAAMM,kBAC3B,gBACAN,EAAMI,gBAAgB,KAAM,UAAW,IACvC,eACC,KAAM,UAAW,GAClB,cACAJ,EAAMoB,sBAKVe,GAAI,WACFl3B,KAAKolL,qBACH,WACArwJ,EAAMoB,oBACN,eACA,SACA,QACApB,EAAMM,iBACN,SACAN,EAAMM,iBACN,WACA,QACA,iBACA,SAGFr1B,KAAKqlL,sBAAwB,OAAQ,SAAU,SAAU,KAAM,UAAW,GAAI,gBAAiB,UAE/FrlL,KAAKslL,sBACH,WACAvwJ,EAAMoB,oBACN,gBACA,SACA,YACA,SACA,gBACA,QACA,WACApB,EAAMI,eAAen1B,KAAKolL,qBAC1B,YACArwJ,EAAMI,eAAen1B,KAAKqlL,uBAG5BrlL,KAAKulL,qBAAuB,UAAWxwJ,EAAMI,eAAe,WAE5Dn1B,KAAKwlL,yBACH,kBACAzwJ,EAAMI,eAAe,UACrB,YACAJ,EAAMI,gBAAgB,KAAM,UAAW,IACvC,gBACAJ,EAAMI,eAAe,UACrB,UACAJ,EAAMI,gBAAgB,KAAM,UAAW,IACvC,WACAJ,EAAMk4D,mBAGRjtF,KAAKgrI,oBAAsB,OAAQj2G,EAAMI,eAAe,UAExDn1B,KAAKylL,kBACH,OACA1wJ,EAAMI,eAAen1B,KAAKulL,qBAC1B,eACAxwJ,EAAMI,eAAen1B,KAAKwlL,yBAC1B,OACAxlL,KAAKgrI,mBACL,QACA,SACA,iBACAj2G,EAAMI,eAAe,UACrB,kBACAJ,EAAMI,eAAe,UACrB,WACAJ,EAAMM,iBACN,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,IAGpBr1B,KAAK0lL,uBACH,QACA,SACA,YACC,KAAM,UAAW,GAClB,eACC,KAAM,UAAW,GAClB,cACC,MAAO,KAAM,UAAW,GAAI,IAG/B1lL,KAAK2lL,kBACH,OACA5wJ,EAAMk4D,kBACN,cACA,SACA,iBACAjtF,KAAK0lL,sBACL,mBACC,MAAO,KAAM,UAAW,GAAI,GAC7B,WACA,UACA,oBACA3wJ,EAAMQ,iBAAiB,SACvB,sBACAR,EAAMQ,iBAAiB,UAGzBv1B,KAAK4lL,sBACH,OACA7wJ,EAAMk4D,kBACN,QACAl4D,EAAMI,eAAen1B,KAAK2lL,kBAC1B,UACA,UAGF3lL,KAAK6lL,yBAA2B,OAAQ9wJ,EAAMQ,iBAAiB,UAE/Dv1B,KAAK4yI,yBAA2B,YAAa79G,EAAMI,eAAe,UAElEn1B,KAAK8lL,mBAAqB,YAAa9lL,KAAK4yI,wBAAyB,QAAS79G,EAAMM,kBAEpFr1B,KAAK+lL,mBACH,OACAhxJ,EAAMk4D,kBACN,WACAl4D,EAAMQ,iBAAiBv1B,KAAK4lL,sBAC5B,mBACA5lL,KAAK0lL,sBACL,eACA3wJ,EAAMI,eAAen1B,KAAK6lL,yBAC1B,YACA9wJ,EAAMI,eAAe,UACrB,eACAJ,EAAMI,eAAe,UACrB,aACAJ,EAAMI,eAAen1B,KAAK8lL,mBAC1B,eACA/wJ,EAAMI,eAAe,SACrB,UACC,KAAM,UAAW,GAClB,SACA,WAGFn1B,KAAKgmL,sBACH,KACAjxJ,EAAMM,iBACN,OACA,SACA,aACA,SACA,MACAN,EAAMM,iBACN,SACAN,EAAMoB,qBAGRn2B,KAAKimL,uBACH,gBACC,KAAM,UAAW,GAClB,OACAlxJ,EAAMM,iBACN,OACA,UACA,iBACAN,EAAMI,eAAe,UACrB,QACA,SACA,gBACA,SACA,kBACAJ,EAAMI,eAAe,UACrB,YACC,KAAM,UAAW,IAGpBn1B,KAAKkmL,uBAAyB,YAAa,QAAS,OAAQnxJ,EAAMI,gBAAgB,KAAM,UAAW,KAEnGn1B,KAAKmmL,0BACH,UACA,QACA,QACA,QACA,MACA,UACA,OACA,QACA,QACA,SAGFnmL,KAAKomL,yBACH,gBACC,MAAO,KAAM,UAAW,GAAI,GAC7B,yBACC,KAAM,UAAW,GAClB,yBACC,KAAM,UAAW,GAClB,gBACA,QACA,gBACC,KAAM,UAAW,GAClB,OACArxJ,EAAMM,iBACN,cACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,cACA,UACA,gBACC,KAAM,UAAW,GAClB,OACA,UACA,eACA,SACA,eACAN,EAAMQ,iBAAiBv1B,KAAKkmL,uBAC5B,qBACA,SACA,QACA,SACA,WACAnxJ,EAAMQ,iBAAiBv1B,KAAKmmL,0BAC5B,YACC,KAAM,UAAW,GAClB,kBACC,KAAM,UAAW,GAClB,eACA,UACA,mBACC,KAAM,UAAW,GAClB,eACC,MAAO,KAAM,UAAW,GAAI,GAC7B,gBACC,MAAO,KAAM,UAAW,GAAI,GAC7B,aACApxJ,EAAMQ,iBAAiBv1B,KAAKkmL,uBAC5B,mBACA,SACA,YACC,MAAO,KAAM,UAAW,GAAI,GAC7B,qBACC,KAAM,UAAW,GAClB,qBACC,KAAM,UAAW,GAClB,kBACC,KAAM,UAAW,GAClB,cACA,UACA,mBACA,UACA,eACC,KAAM,UAAW,GAClB,aACA,QACA,iBACC,KAAM,UAAW,GAClB,kBACC,KAAM,UAAW,GAClB,gBACC,KAAM,UAAW,GAClB,eACA,SACA,gBACA,SAGFlmL,KAAKqmL,mBACH,SACAtxJ,EAAMI,eAAen1B,KAAKimL,uBAC1B,WACAlxJ,EAAMI,eAAen1B,KAAKomL,0BAG5BpmL,KAAKsmL,sBACH,OACAvxJ,EAAMM,iBACN,WACA,UACA,QACA,SACA,WACC,KAAM,UAAW,GAClB,cACA,UACA,WACA,QACA,OACA,QACA,eACA,UAGFr1B,KAAKumL,gBACH,gBACC,KAAM,UAAW,GAClB,gBACAxxJ,EAAMI,eAAe,UACrB,OACAJ,EAAMM,iBACN,QACA,SACA,SACA,UACA,gBACA,SACA,QACA,UACA,YACA,UACA,cACA,UACA,WACA,UACA,eACA,SACA,OACA,WAGFr1B,KAAKwmL,sBACH,OACAzxJ,EAAMM,iBACN,QACA,SACA,UACA,UACA,WACA,WAGFr1B,KAAKymL,oBACH,UACA1xJ,EAAMI,eAAen1B,KAAKumL,gBAC1B,UACAxxJ,EAAMI,eAAen1B,KAAKwmL,uBAG5BxmL,KAAK0mL,qBACH,OACA3xJ,EAAMM,iBACN,SACC,KAAM,QAAS,GAChB,cACA,UACA,YACA,UACA,eACA,UACA,eACA,UAGFr1B,KAAK2mL,mBAAqB,eAAgB5xJ,EAAMI,eAAen1B,KAAK0mL,sBAEpE1mL,KAAKu7H,gBAAkB,MAAO,SAAU,WAAYxmG,EAAMI,eAAe,UAEzEn1B,KAAK4mL,yBAA2B,QAAS7xJ,EAAMM,iBAAkB,SAAU,SAE3Er1B,KAAK6mL,wBAA0B,UAAW9xJ,EAAMI,eAAen1B,KAAK4mL,0BAEpE5mL,KAAK8mL,yBAA2B,aAAc,SAAU,aAAc,SAAU,WAAY,WAE5F9mL,KAAK+mL,mBACH,gBACA,SACA,QACA,QACA,UACA,UACA,SACA,UACA,OACA,UACA,YACA,QACA,OACA/mL,KAAKu7H,eACL,UACAxmG,EAAMI,eAAe,UACrB,YACA,SACA,SACAJ,EAAMI,eAAen1B,KAAK6mL,wBAC1B,YACA9xJ,EAAMI,eAAe,SACrB,kBACAJ,EAAMI,eAAen1B,KAAK8mL,yBAC1B,kBACA/xJ,EAAMI,eAAen1B,KAAK8mL,yBAC1B,kBACA,SACA,cACA/xJ,EAAMI,eAAe,UACrB,oBACAJ,EAAMI,gBAAgB,KAAM,UAAW,IACvC,qBACAJ,EAAMI,eAAe,WAGvBn1B,KAAKg3B,OAASh3B,KAAKgnL,kBACjB,YACAjyJ,EAAM6qB,kBAAkB5/C,KAAKslL,sBAC7B,SACAvwJ,EAAM6qB,kBAAkB5/C,KAAKylL,kBAC7B,QACA1wJ,EAAMQ,iBAAiBv1B,KAAK+lL,mBAC5B,aACAhxJ,EAAMI,eAAen1B,KAAKgmL,sBAC1B,YACAjxJ,EAAMQ,iBAAiBv1B,KAAKqmL,mBAC5B,YACAtxJ,EAAMI,eAAen1B,KAAKsmL,sBAC1B,aACAvxJ,EAAMQ,iBAAiBv1B,KAAKymL,oBAC5B,YACA1xJ,EAAMQ,iBAAiBv1B,KAAK2mL,mBAC5B,YACA5xJ,EAAMI,eAAen1B,KAAK+mL,mBAC1B,oBACAhyJ,EAAMI,eAAeJ,EAAMM,kBAC3B,gBACAN,EAAMI,gBAAgB,KAAM,UAAW,IACvC,eACC,KAAM,UAAW,GAClB,cACAJ,EAAMoB,sBAKVyC,GAAI,WACF54B,KAAKinL,qBACH,WACAlyJ,EAAMoB,oBACN,eACA,SACA,QACApB,EAAMM,iBACN,SACAN,EAAMM,iBACN,WACA,QACA,iBACA,SAGFr1B,KAAKknL,sBAAwB,OAAQ,SAAU,SAAU,KAAM,UAAW,GAAI,gBAAiB,UAE/FlnL,KAAKmnL,sBACH,WACApyJ,EAAMoB,oBACN,gBACA,SACA,YACA,SACA,gBACA,QACA,WACApB,EAAMI,eAAen1B,KAAKinL,qBAC1B,YACAlyJ,EAAMI,eAAen1B,KAAKknL,uBAG5BlnL,KAAKonL,qBAAuB,UAAWryJ,EAAMI,eAAe,WAE5Dn1B,KAAKqnL,yBACH,kBACAtyJ,EAAMI,eAAe,UACrB,YACAJ,EAAMI,gBAAgB,KAAM,UAAW,IACvC,gBACAJ,EAAMI,eAAe,UACrB,UACAJ,EAAMI,gBAAgB,KAAM,UAAW,IACvC,WACAJ,EAAMk4D,mBAGRjtF,KAAKgrI,oBAAsB,OAAQj2G,EAAMI,eAAe,UAExDn1B,KAAKsnL,kBACH,OACAvyJ,EAAMI,eAAen1B,KAAKonL,qBAC1B,eACAryJ,EAAMI,eAAen1B,KAAKqnL,yBAC1B,OACArnL,KAAKgrI,mBACL,QACA,SACA,iBACAj2G,EAAMI,eAAe,UACrB,kBACAJ,EAAMI,eAAe,UACrB,WACAJ,EAAMM,kBAGRr1B,KAAKunL,uBACH,QACA,SACA,YACC,KAAM,UAAW,GAClB,eACC,KAAM,UAAW,GAClB,cACC,MAAO,KAAM,UAAW,GAAI,IAG/BvnL,KAAKwnL,kBACH,OACAzyJ,EAAMk4D,kBACN,cACA,SACA,iBACAjtF,KAAKunL,sBACL,mBACC,MAAO,KAAM,UAAW,GAAI,GAC7B,WACA,UACA,oBACAxyJ,EAAMQ,iBAAiB,SACvB,sBACAR,EAAMQ,iBAAiB,UAGzBv1B,KAAKynL,sBACH,OACA1yJ,EAAMk4D,kBACN,QACAl4D,EAAMI,eAAen1B,KAAKwnL,kBAC1B,UACA,UAGFxnL,KAAK0nL,yBAA2B,OAAQ3yJ,EAAMQ,iBAAiB,UAE/Dv1B,KAAK4yI,yBAA2B,YAAa79G,EAAMI,eAAe,UAElEn1B,KAAK2nL,mBAAqB,YAAa3nL,KAAK4yI,wBAAyB,QAAS79G,EAAMM,kBAEpFr1B,KAAK4nL,mBACH,OACA7yJ,EAAMk4D,kBACN,WACAl4D,EAAMQ,iBAAiBv1B,KAAKynL,sBAC5B,mBACAznL,KAAKunL,sBACL,eACAxyJ,EAAMI,eAAen1B,KAAK0nL,yBAC1B,YACA3yJ,EAAMI,eAAe,UACrB,eACAJ,EAAMI,eAAe,UACrB,aACAJ,EAAMI,eAAen1B,KAAK2nL,mBAC1B,eACA5yJ,EAAMI,eAAe,UAGvBn1B,KAAK6nL,sBACH,KACA9yJ,EAAMM,iBACN,OACA,SACA,aACA,SACA,MACAN,EAAMM,iBACN,SACAN,EAAMoB,qBAGRn2B,KAAK8nL,uBACH,gBACC,KAAM,UAAW,GAClB,OACA/yJ,EAAMM,iBACN,OACA,UACA,iBACAN,EAAMI,eAAe,UACrB,QACA,SACA,gBACA,SACA,kBACAJ,EAAMI,eAAe,UACrB,YACC,KAAM,UAAW,IAGpBn1B,KAAK+nL,uBAAyB,YAAa,QAAS,OAAQhzJ,EAAMI,gBAAgB,KAAM,UAAW,KAEnGn1B,KAAKgoL,0BACH,UACA,QACA,QACA,QACA,MACA,UACA,OACA,QACA,QACA,SAGFhoL,KAAKioL,yBACH,gBACC,MAAO,KAAM,UAAW,GAAI,GAC7B,yBACC,KAAM,UAAW,GAClB,yBACC,KAAM,UAAW,GAClB,gBACA,QACA,gBACC,KAAM,UAAW,GAClB,OACAlzJ,EAAMM,iBACN,cACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,cACA,UACA,gBACC,KAAM,UAAW,GAClB,OACA,UACA,eACA,SACA,eACAN,EAAMQ,iBAAiBv1B,KAAK+nL,uBAC5B,qBACA,SACA,QACA,SACA,WACAhzJ,EAAMQ,iBAAiBv1B,KAAKgoL,0BAC5B,YACC,KAAM,UAAW,GAClB,kBACC,KAAM,UAAW,GAClB,eACA,UACA,mBACC,KAAM,UAAW,GAClB,eACC,MAAO,KAAM,UAAW,GAAI,GAC7B,gBACC,MAAO,KAAM,UAAW,GAAI,GAC7B,aACAjzJ,EAAMQ,iBAAiBv1B,KAAK+nL,uBAC5B,mBACA,SACA,YACC,MAAO,KAAM,UAAW,GAAI,GAC7B,qBACC,KAAM,UAAW,GAClB,qBACC,KAAM,UAAW,GAClB,kBACC,KAAM,UAAW,GAClB,cACA,UACA,mBACA,UACA,eACC,KAAM,UAAW,GAClB,aACA,QACA,iBACC,KAAM,UAAW,GAClB,kBACC,KAAM,UAAW,GAClB,gBACC,KAAM,UAAW,GAClB,eACA,SACA,gBACA,SAGF/nL,KAAKkoL,mBACH,SACAnzJ,EAAMI,eAAen1B,KAAK8nL,uBAC1B,WACA/yJ,EAAMI,eAAen1B,KAAKioL,0BAG5BjoL,KAAKmoL,sBACH,OACApzJ,EAAMM,iBACN,WACA,UACA,QACA,SACA,WACC,KAAM,UAAW,GAClB,cACA,UACA,WACA,QACA,OACA,QACA,eACA,UAGFr1B,KAAKooL,gBACH,gBACC,KAAM,UAAW,GAClB,gBACArzJ,EAAMI,eAAe,UACrB,OACAJ,EAAMM,iBACN,QACA,SACA,SACA,UACA,gBACA,SACA,QACA,UACA,YACA,UACA,cACA,UACA,WACA,UACA,eACA,SACA,OACA,WAGFr1B,KAAKqoL,sBACH,OACAtzJ,EAAMM,iBACN,QACA,SACA,UACA,UACA,WACA,WAGFr1B,KAAKsoL,oBACH,UACAvzJ,EAAMI,eAAen1B,KAAKooL,gBAC1B,UACArzJ,EAAMI,eAAen1B,KAAKqoL,uBAG5BroL,KAAKuoL,qBACH,OACAxzJ,EAAMM,iBACN,SACC,KAAM,QAAS,GAChB,cACA,UACA,YACA,UACA,eACA,UACA,eACA,UAGFr1B,KAAKwoL,mBAAqB,eAAgBzzJ,EAAMI,eAAen1B,KAAKuoL,sBAEpEvoL,KAAKu7H,gBAAkB,MAAO,SAAU,WAAYxmG,EAAMI,eAAe,UAEzEn1B,KAAKyoL,yBAA2B,QAAS1zJ,EAAMM,iBAAkB,SAAU,SAE3Er1B,KAAK0oL,wBAA0B,UAAW3zJ,EAAMI,eAAen1B,KAAKyoL,0BAEpEzoL,KAAK2oL,yBAA2B,aAAc,SAAU,aAAc,SAAU,WAAY,WAE5F3oL,KAAK4oL,mBACH,gBACA,SACA,QACA,QACA,UACA,UACA,SACA,UACA,OACA,UACA,YACA,QACA,OACA5oL,KAAKu7H,eACL,UACAxmG,EAAMI,eAAe,UACrB,YACA,SACA,SACAJ,EAAMI,eAAen1B,KAAK0oL,wBAC1B,YACA3zJ,EAAMI,eAAe,SACrB,kBACAJ,EAAMI,eAAen1B,KAAK2oL,yBAC1B,kBACA5zJ,EAAMI,eAAen1B,KAAK2oL,yBAC1B,kBACA,SACA,cACA5zJ,EAAMI,eAAe,UACrB,oBACAJ,EAAMI,gBAAgB,KAAM,UAAW,IACvC,qBACAJ,EAAMI,eAAe,WAGvBn1B,KAAKg3B,OAASh3B,KAAK6oL,kBACjB,YACA9zJ,EAAM6qB,kBAAkB5/C,KAAKmnL,sBAC7B,SACApyJ,EAAM6qB,kBAAkB5/C,KAAKsnL,kBAC7B,QACAvyJ,EAAMQ,iBAAiBv1B,KAAK4nL,mBAC5B,aACA7yJ,EAAMI,eAAen1B,KAAK6nL,sBAC1B,YACA9yJ,EAAMQ,iBAAiBv1B,KAAKkoL,mBAC5B,YACAnzJ,EAAMI,eAAen1B,KAAKmoL,sBAC1B,aACApzJ,EAAMQ,iBAAiBv1B,KAAKsoL,oBAC5B,YACAvzJ,EAAMQ,iBAAiBv1B,KAAKwoL,mBAC5B,YACAzzJ,EAAMI,eAAen1B,KAAK4oL,mBAC1B,oBACA7zJ,EAAMI,eAAeJ,EAAMM,kBAC3B,gBACAN,EAAMI,gBAAgB,KAAM,UAAW,IACvC,eACC,KAAM,UAAW,GAClB,cACAJ,EAAMoB,sBAKVmE,GAAI,WACFt6B,KAAK8oL,qBACH,WACA/zJ,EAAMoB,oBACN,eACA,SACA,QACApB,EAAMM,iBACN,SACAN,EAAMM,iBACN,WACA,QACA,iBACA,SAGFr1B,KAAK+oL,sBAAwB,OAAQ,SAAU,SAAU,KAAM,UAAW,GAAI,gBAAiB,UAE/F/oL,KAAKgpL,sBACH,WACAj0J,EAAMoB,oBACN,gBACA,SACA,YACA,SACA,gBACA,QACA,WACApB,EAAMI,eAAen1B,KAAK8oL,qBAC1B,YACA/zJ,EAAMI,eAAen1B,KAAK+oL,uBAG5B/oL,KAAKipL,qBAAuB,UAAWl0J,EAAMI,eAAe,WAE5Dn1B,KAAKkpL,yBACH,kBACAn0J,EAAMI,eAAe,UACrB,YACAJ,EAAMI,gBAAgB,KAAM,UAAW,IACvC,gBACAJ,EAAMI,eAAe,UACrB,UACAJ,EAAMI,gBAAgB,KAAM,UAAW,IACvC,WACAJ,EAAMk4D,mBAGRjtF,KAAKgrI,oBAAsB,OAAQj2G,EAAMI,eAAe,UAExDn1B,KAAKmpL,kBACH,OACAp0J,EAAMI,eAAen1B,KAAKipL,qBAC1B,eACAl0J,EAAMI,eAAen1B,KAAKkpL,yBAC1B,OACAlpL,KAAKgrI,mBACL,QACA,SACA,iBACAj2G,EAAMI,eAAe,UACrB,kBACAJ,EAAMI,eAAe,WAGvBn1B,KAAKopL,uBACH,QACA,SACA,YACC,KAAM,UAAW,GAClB,eACC,KAAM,UAAW,GAClB,cACC,MAAO,KAAM,UAAW,GAAI,IAG/BppL,KAAKqpL,kBACH,OACAt0J,EAAMk4D,kBACN,cACA,SACA,iBACAjtF,KAAKopL,sBACL,mBACC,MAAO,KAAM,UAAW,GAAI,GAC7B,WACA,UACA,oBACAr0J,EAAMQ,iBAAiB,SACvB,sBACAR,EAAMQ,iBAAiB,UAGzBv1B,KAAKspL,sBACH,OACAv0J,EAAMk4D,kBACN,QACAl4D,EAAMI,eAAen1B,KAAKqpL,kBAC1B,UACA,UAGFrpL,KAAKupL,yBAA2B,OAAQx0J,EAAMQ,iBAAiB,UAE/Dv1B,KAAK4yI,yBAA2B,YAAa79G,EAAMI,eAAe,UAElEn1B,KAAKwpL,mBAAqB,YAAaxpL,KAAK4yI,wBAAyB,QAAS79G,EAAMM,kBAEpFr1B,KAAKypL,mBACH,OACA10J,EAAMk4D,kBACN,WACAl4D,EAAMQ,iBAAiBv1B,KAAKspL,sBAC5B,mBACAtpL,KAAKopL,sBACL,eACAr0J,EAAMI,eAAen1B,KAAKupL,yBAC1B,YACAx0J,EAAMI,eAAe,UACrB,eACAJ,EAAMI,eAAe,UACrB,aACAJ,EAAMI,eAAen1B,KAAKwpL,mBAC1B,eACAz0J,EAAMI,eAAe,UAGvBn1B,KAAK0pL,sBACH,KACA30J,EAAMM,iBACN,OACA,SACA,aACA,SACA,MACAN,EAAMM,iBACN,SACAN,EAAMoB,qBAGRn2B,KAAK2pL,uBACH,gBACC,KAAM,UAAW,GAClB,OACA50J,EAAMM,iBACN,OACA,UACA,iBACAN,EAAMI,eAAe,UACrB,QACA,SACA,gBACA,SACA,kBACAJ,EAAMI,eAAe,UACrB,YACC,KAAM,UAAW,IAGpBn1B,KAAK4pL,uBAAyB,YAAa,QAAS,OAAQ70J,EAAMI,gBAAgB,KAAM,UAAW,KAEnGn1B,KAAK6pL,0BACH,UACA,QACA,QACA,QACA,MACA,UACA,OACA,QACA,QACA,SAGF7pL,KAAK8pL,yBACH,gBACC,MAAO,KAAM,UAAW,GAAI,GAC7B,yBACC,KAAM,UAAW,GAClB,yBACC,KAAM,UAAW,GAClB,gBACA,QACA,gBACC,KAAM,UAAW,GAClB,OACA/0J,EAAMM,iBACN,cACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,cACA,UACA,gBACC,KAAM,UAAW,GAClB,OACA,UACA,eACA,SACA,eACAN,EAAMQ,iBAAiBv1B,KAAK4pL,uBAC5B,qBACA,SACA,QACA,SACA,WACA70J,EAAMQ,iBAAiBv1B,KAAK6pL,0BAC5B,YACC,KAAM,UAAW,GAClB,kBACC,KAAM,UAAW,GAClB,eACA,UACA,mBACC,KAAM,UAAW,GAClB,eACC,MAAO,KAAM,UAAW,GAAI,GAC7B,gBACC,MAAO,KAAM,UAAW,GAAI,GAC7B,aACA90J,EAAMQ,iBAAiBv1B,KAAK4pL,uBAC5B,mBACA,SACA,YACC,MAAO,KAAM,UAAW,GAAI,GAC7B,qBACC,KAAM,UAAW,GAClB,qBACC,KAAM,UAAW,GAClB,kBACC,KAAM,UAAW,GAClB,cACA,UACA,mBACA,UACA,eACC,KAAM,UAAW,GAClB,aACA,QACA,iBACC,KAAM,UAAW,GAClB,kBACC,KAAM,UAAW,GAClB,gBACC,KAAM,UAAW,GAClB,eACA,SACA,gBACA,SAGF5pL,KAAK+pL,mBACH,SACAh1J,EAAMI,eAAen1B,KAAK2pL,uBAC1B,WACA50J,EAAMI,eAAen1B,KAAK8pL,0BAG5B9pL,KAAKgqL,sBACH,OACAj1J,EAAMM,iBACN,WACA,UACA,QACA,SACA,WACC,KAAM,UAAW,GAClB,cACA,UACA,WACA,QACA,OACA,QACA,eACA,UAGFr1B,KAAKiqL,gBACH,gBACC,KAAM,UAAW,GAClB,gBACAl1J,EAAMI,eAAe,UACrB,OACAJ,EAAMM,iBACN,QACA,SACA,SACA,UACA,gBACA,SACA,QACA,UACA,YACA,UACA,cACA,UACA,WACA,UACA,eACA,SACA,OACA,WAGFr1B,KAAKkqL,sBACH,OACAn1J,EAAMM,iBACN,QACA,SACA,UACA,UACA,WACA,WAGFr1B,KAAKmqL,oBACH,UACAp1J,EAAMI,eAAen1B,KAAKiqL,gBAC1B,UACAl1J,EAAMI,eAAen1B,KAAKkqL,uBAG5BlqL,KAAKoqL,qBACH,OACAr1J,EAAMM,iBACN,SACC,KAAM,QAAS,GAChB,cACA,UACA,YACA,UACA,eACA,UACA,eACA,UAGFr1B,KAAKqqL,mBAAqB,eAAgBt1J,EAAMI,eAAen1B,KAAKoqL,sBAEpEpqL,KAAKu7H,gBAAkB,MAAO,SAAU,WAAYxmG,EAAMI,eAAe,UAEzEn1B,KAAKsqL,yBAA2B,QAASv1J,EAAMM,iBAAkB,SAAU,SAE3Er1B,KAAKuqL,wBAA0B,UAAWx1J,EAAMI,eAAen1B,KAAKsqL,0BAEpEtqL,KAAKwqL,yBAA2B,aAAc,SAAU,aAAc,SAAU,WAAY,WAE5FxqL,KAAKyqL,mBACH,gBACA,SACA,QACA,QACA,UACA,UACA,SACA,UACA,OACA,UACA,YACA,QACA,OACAzqL,KAAKu7H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,GAClB,gBACA,QACA,gBACC,KAAM,UAAW,GAClB,OACA34J,EAAMM,iBACN,cACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,cACA,UACA,gBACC,KAAM,UAAW,GAClB,OACA,UACA,eACA,SACA,eACAN,EAAMQ,iBAAiBv1B,KAAKwtL,uBAC5B,qBACA,SACA,QACA,SACA,WACAz4J,EAAMQ,iBAAiBv1B,KAAKytL,0BAC5B,YACC,KAAM,UAAW,GAClB,kBACC,KAAM,UAAW,GAClB,eACA,UACA,mBACC,KAAM,UAAW,GAClB,eACC,MAAO,KAAM,UAAW,GAAI,GAC7B,gBACC,MAAO,KAAM,UAAW,GAAI,GAC7B,aACA14J,EAAMQ,iBAAiBv1B,KAAKwtL,uBAC5B,mBACA,SACA,YACC,MAAO,KAAM,UAAW,GAAI,GAC7B,qBACC,KAAM,UAAW,GAClB,qBACC,KAAM,UAAW,GAClB,kBACC,KAAM,UAAW,GAClB,cACA,UACA,mBACA,UACA,eACC,KAAM,UAAW,GAClB,aACA,QACA,iBACC,KAAM,UAAW,GAClB,kBACC,KAAM,UAAW,GAClB,gBACC,KAAM,UAAW,GAClB,eACA,SACA,gBACA,SAGFxtL,KAAK2tL,mBACH,SACA54J,EAAMI,eAAen1B,KAAKutL,uBAC1B,WACAx4J,EAAMI,eAAen1B,KAAK0tL,0BAG5B1tL,KAAK4tL,sBACH,OACA74J,EAAMM,iBACN,WACA,UACA,QACA,SACA,WACC,KAAM,UAAW,GAClB,cACA,UACA,WACA,QACA,OACA,QACA,eACA,UAGFr1B,KAAK6tL,gBACH,gBACC,KAAM,UAAW,GAClB,gBACA94J,EAAMI,eAAe,UACrB,OACAJ,EAAMM,iBACN,QACA,SACA,gBACA,SACA,QACA,UACA,YACA,UACA,cACA,UACA,WACA,UACA,eACA,SACA,OACA,WAGFr1B,KAAK8tL,sBACH,OACA/4J,EAAMM,iBACN,QACA,SACA,UACA,UACA,WACA,WAGFr1B,KAAK+tL,oBACH,UACAh5J,EAAMI,eAAen1B,KAAK6tL,gBAC1B,UACA94J,EAAMI,eAAen1B,KAAK8tL,u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KAAM,UAAW,GAAI,GAC7B,yBACC,KAAM,UAAW,GAClB,yBACC,KAAM,UAAW,GAClB,gBACA,QACA,gBACC,KAAM,UAAW,GAClB,OACAr+J,EAAMM,iBACN,cACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,cACA,UACA,gBACC,KAAM,UAAW,GAClB,OACA,UACA,eACAN,EAAMQ,iBAAiBv1B,KAAKkzL,uBAC5B,qBACA,SACA,QACA,SACA,WACAn+J,EAAMQ,iBAAiBv1B,KAAKmzL,0BAC5B,YACC,KAAM,UAAW,GAClB,kBACC,KAAM,UAAW,GAClB,eACA,UACA,mBACC,KAAM,UAAW,GAClB,eACC,MAAO,KAAM,UAAW,GAAI,GAC7B,gBACC,MAAO,KAAM,UAAW,GAAI,GAC7B,aACAp+J,EAAMQ,iBAAiBv1B,KAAKkzL,uBAC5B,mBACA,SACA,YACC,MAAO,KAAM,UAAW,GAAI,GAC7B,qBACC,KAAM,UAAW,GAClB,qBACC,KAAM,UAAW,GAClB,kBACC,KAAM,UAAW,GAClB,cACA,UACA,mBACA,UACA,eACC,KAAM,UAAW,GAClB,aACA,QACA,iBACC,KAAM,UAAW,GAClB,kBACC,KAAM,UAAW,GAClB,gBACC,KAAM,UAAW,GAClB,eACA,SACA,gBACA,SAGFlzL,KAAKqzL,0BACH,OACAt+J,EAAMM,iBACN,WACA,UACA,QACA,SACA,WACC,KAAM,UAAW,GAClB,cACA,UACA,WACA,QACA,OACA,QACA,eACA,UAGFr1B,KAAKszL,mBACH,SACAv+J,EAAMI,eAAen1B,KAAKizL,uBAC1B,WACAl+J,EAAMI,eAAen1B,KAAKozL,yBAC1B,YACAr+J,EAAMI,eAAen1B,KAAKqzL,2BAG5BrzL,KAAKuzL,gBACH,gBACC,KAAM,UAAW,GAClB,gBACAx+J,EAAMI,eAAe,UACrB,OACAJ,EAAMM,iBACN,QACA,SACA,gBACA,SACA,QACA,UACA,YACA,UACA,cACA,UACA,WACA,UACA,eACA,SACA,OACA,WAGFr1B,KAAKwzL,sBACH,OACAz+J,EAAMM,iBACN,QACA,SACA,UACA,UACA,WACA,WAGFr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Aen1B,KAAKkpM,sBAC1B,SACAn0K,EAAMI,eAAen1B,KAAKmpM,uBAC1B,QACAp0K,EAAMI,eAAen1B,KAAKopM,sBAC1B,UACAr0K,EAAMI,eAAen1B,KAAKqpM,wBAC1B,WACAt0K,EAAMI,eAAen1B,KAAKspM,0BAG5BtpM,KAAKwpM,yBACH,UACA,QACA,QACA,QACA,QACA,QACA,MACA,SACA,OACA,QACA,QACA,SAGFxpM,KAAKypM,sBACH,gBACC,KAAM,UAAW,GAClB,OACA10K,EAAMM,iBACN,OACA,UACA,iBACAN,EAAMI,eAAe,UACrB,QACA,SACA,WACAJ,EAAMI,eAAen1B,KAAKwpM,yBAC1B,gBACA,SACA,kBACAz0K,EAAMI,eAAe,UACrB,mBACA,QACA,cACAJ,EAAMI,gBAAgB,KAAM,UAAW,IACvC,iBACA,QACA,YACAJ,EAAMI,gBAAgB,KAAM,UAAW,KAGzCn1B,KAAK0pM,wBACH,gBACC,MAAO,KAAM,UAAW,GAAI,GAC7B,OACA30K,EAAMM,iBACN,cACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,eACC,KAAM,UAAW,GAClB,QACA,SACA,YACC,KAAM,UAAW,GAClB,kBACC,KAAM,UAAW,GAClB,mBACC,KAAM,UAAW,GAClB,eACC,MAAO,KAAM,UAAW,GAAI,GAC7B,gBACC,MAAO,KAAM,UAAW,GAAI,GAC7B,YACC,MAAO,KAAM,UAAW,GAAI,GAC7B,qBACC,KAAM,UAAW,GAClB,qBACC,KAAM,UAAW,GAClB,kBACC,KAAM,UAAW,GAClB,cACA,UACA,mBACA,UACA,eACC,KAAM,UAAW,GAClB,aACA,QACA,eACA,UAGFr1B,KAAK2pM,yBACH,OACA50K,EAAMM,iBACN,WACA,UACA,QACA,SACA,WACC,KAAM,UAAW,GAClB,cACA,UACA,WACA,QACA,OACA,QACA,eACA,UAGFr1B,KAAK4pM,kBACH,SACA70K,EAAMI,eAAen1B,KAAKypM,sBAC1B,WACA10K,EAAMI,eAAen1B,KAAK0pM,wBAC1B,YACA30K,EAAMI,eAAen1B,KAAK2pM,0BAG5B3pM,KAAKg3B,OAASh3B,KAAK6pM,iBACjB,YACA90K,EAAM6qB,kBAAkB5/C,KAAKsoM,qBAC7B,SACAvzK,EAAM6qB,kBAAkB5/C,KAAKuoM,iBAC7B,aACAxzK,EAAM6qB,kBAAkB5/C,KAAKyoM,sBAC7B,qBACA1zK,EAAMI,eAAeJ,EAAMM,kBAC3B,mBACAN,EAAMI,eAAen1B,KAAK0oM,4BAC1B,QACA3zK,EAAMQ,iBAAiBv1B,KAAK+oM,kBAC5B,aACAh0K,EAAMQ,iBAAiBv1B,KAAKipM,qBAC5B,gBACAl0K,EAAMQ,iBAAiBv1B,KAAKupM,sBAC5B,YACAx0K,EAAMQ,iBAAiBv1B,KAAK4pM,oBAKhC7xJ,EAAG,WACD/3C,KAAK8pM,oBACH,WACA/0K,EAAMoB,oBACN,eACA,SACA,QACApB,EAAMM,iBACN,SACAN,EAAMM,kBAGRr1B,KAAK+pM,qBAAuB,OAAQ,SAAU,SAAU,KAAM,UAAW,GAAI,gBAAiB,UAE9F/pM,KAAKgqM,qBACH,WACAj1K,EAAMoB,oBACN,gBACA,SACA,YACA,SACA,WACApB,EAAMI,eAAen1B,KAAK8pM,oBAC1B,YACA/0K,EAAMI,eAAen1B,KAAK+pM,sBAG5B/pM,KAAKgrI,oBAAsB,OAAQj2G,EAAMI,eAAe,UAExDn1B,KAAKiqM,iBACH,OACAjqM,KAAKgrI,mBACL,QACA,SACA,YACAj2G,EAAMI,eAAeJ,EAAMM,mBAG7Br1B,KAAK8/C,2BAA6B,YAAa/qB,EAAMI,eAAe,UAEpEn1B,KAAKkqM,qBAAuB,QAASn1K,EAAMM,iBAAkB,OAAQN,EAAMI,eAAe,YAE1Fn1B,KAAKmqM,sBACH,QACAp1K,EAAMM,iBACN,YACAr1B,KAAK8/C,0BACL,YACA,UACA,eACA/qB,EAAMI,eAAen1B,KAAKkqM,sBAG5BlqM,KAAKoqM,sBACH,QACA,SACA,YACC,KAAM,UAAW,GAClB,eACC,KAAM,UAAW,GAClB,cACC,MAAO,KAAM,UAAW,GAAI,IAG/BpqM,KAAKqqM,iBACH,OACAt1K,EAAMk4D,kBACN,cACA,SACA,iBACAjtF,KAAKoqM,qBACL,mBACC,MAAO,KAAM,UAAW,GAAI,GAC7B,WACA,UACA,oBACAr1K,EAAMQ,iBAAiB,SACvB,sBACAR,EAAMQ,iBAAiB,UAGzBv1B,KAAKsqM,qBACH,OACAv1K,EAAMk4D,kBACN,QACAl4D,EAAMI,eAAen1B,KAAKqqM,iBAC1B,UACA,UAGFrqM,KAAKuqM,wBAA0B,OAAQx1K,EAAMQ,iBAAiB,UAE9Dv1B,KAAKwqM,kBACH,OACAz1K,EAAMk4D,kBACN,WACAl4D,EAAMQ,iBAAiBv1B,KAAKsqM,qBAC5B,mBACAtqM,KAAKoqM,qBACL,eACAr1K,EAAMI,eAAen1B,KAAKuqM,yBAG5BvqM,KAAKyqM,0BAA4B,QAAS11K,EAAMM,iBAAkB,QAAS,WAE3Er1B,KAAK0qM,qBACH,aACA31K,EAAMI,eAAeJ,EAAMM,kBAC3B,cACAN,EAAMI,eAAen1B,KAAKyqM,2BAG5BzqM,KAAK2qM,sBACH,oBACA51K,EAAMM,iBACN,WACAN,EAAMI,gBAAgB,KAAM,UAAW,IACvC,UACAJ,EAAMI,eAAe,UACrB,WACAJ,EAAMI,eAAe,UAGvBn1B,KAAK4qM,uBACH,oBACA71K,EAAMM,iBACN,SACAN,EAAMI,gBAAgB,KAAM,UAAW,IACvC,UACA,SAGFn1B,KAAK6qM,sBAAwB,aAAc,MAAO,KAAM,UAAW,GAAI,GAAI,UAAW,SAEtF7qM,KAAK8qM,wBAA0B,SAAU,UAAW,YAAa,KAAM,UAAW,GAAI,UAAW,SAEjG9qM,KAAK+qM,yBAA2B,SAAUh2K,EAAMI,eAAeJ,EAAMM,mBAErEr1B,KAAKgrM,sBACH,SACAj2K,EAAMI,eAAen1B,KAAK2qM,sBAC1B,SACA51K,EAAMI,eAAen1B,KAAK4qM,uBAC1B,QACA71K,EAAMI,eAAen1B,KAAK6qM,sBAC1B,UACA91K,EAAMI,eAAen1B,KAAK8qM,wBAC1B,WACA/1K,EAAMI,eAAen1B,KAAK+qM,0BAG5B/qM,KAAKirM,yBACH,UACA,QACA,QACA,QACA,QACA,QACA,MACA,SACA,OACA,QACA,QACA,SAGFjrM,KAAKkrM,sBACH,gBACC,KAAM,UAAW,GAClB,OACAn2K,EAAMM,iBACN,OACA,UACA,iBACAN,EAAMI,eAAe,UACrB,QACA,SACA,WACAJ,EAAMI,eAAen1B,KAAKirM,yBAC1B,gBACA,SACA,kBACAl2K,EAAMI,eAAe,UACrB,mBACA,QACA,cACAJ,EAAMI,gBAAgB,KAAM,UAAW,IACvC,iBACA,QACA,YACAJ,EAAMI,gBAAgB,KAAM,UAAW,KAGzCn1B,KAAKmrM,wBACH,gBACC,MAAO,KAAM,UAAW,GAAI,GAC7B,OACAp2K,EAAMM,iBACN,cACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,eACC,KAAM,UAAW,GAClB,QACA,SACA,YACC,KAAM,UAAW,GAClB,kBACC,KAAM,UAAW,GAClB,mBACC,KAAM,UAAW,GAClB,eACC,MAAO,KAAM,UAAW,GAAI,GAC7B,gBACC,MAAO,KAAM,UAAW,GAAI,GAC7B,YACC,MAAO,KAAM,UAAW,GAAI,GAC7B,qBACC,KAAM,UAAW,GAClB,qBACC,KAAM,UAAW,GAClB,kBACC,KAAM,UAAW,GAClB,cACA,UACA,mBACA,UACA,eACC,KAAM,UAAW,GAClB,aACA,SAGFr1B,KAAKorM,yBACH,OACAr2K,EAAMM,iBACN,WACA,UACA,QACA,SACA,WACC,KAAM,UAAW,GAClB,cACA,UACA,WACA,QACA,OACA,SAGFr1B,KAAKqrM,kBACH,SACAt2K,EAAMI,eAAen1B,KAAKkrM,sBAC1B,WACAn2K,EAAMI,eAAen1B,KAAKmrM,wBAC1B,YACAp2K,EAAMI,eAAen1B,KAAKorM,0BAG5BprM,KAAKg3B,OAASh3B,KAAKsrM,iBACjB,YACAv2K,EAAM6qB,kBAAkB5/C,KAAKgqM,qBAC7B,SACAj1K,EAAM6qB,kBAAkB5/C,KAAKiqM,iBAC7B,aACAl1K,EAAM6qB,kBAAkB5/C,KAAKmqM,sBAC7B,QACAp1K,EAAMQ,iBAAiBv1B,KAAKwqM,kBAC5B,aACAz1K,EAAMQ,iBAAiBv1B,KAAK0qM,qBAC5B,gBACA31K,EAAMQ,iBAAiBv1B,KAAKgrM,sBAC5B,YACAj2K,EAAMQ,iBAAiBv1B,KAAKqrM,oBAKhCnyJ,EAAG,WACDl5C,KAAKurM,oBACH,WACAx2K,EAAMoB,oBACN,eACA,SACA,QACApB,EAAMM,iBACN,SACAN,EAAMM,kBAGRr1B,KAAKwrM,qBAAuB,OAAQ,SAAU,SAAU,KAAM,UAAW,GAAI,gBAAiB,UAE9FxrM,KAAKyrM,qBACH,WACA12K,EAAMoB,oBACN,gBACA,SACA,YACA,SACA,WACApB,EAAMI,eAAen1B,KAAKurM,oBAC1B,YACAx2K,EAAMI,eAAen1B,KAAKwrM,sBAG5BxrM,KAAKgrI,oBAAsB,OAAQj2G,EAAMI,eAAe,UAExDn1B,KAAK0rM,iBACH,OACA1rM,KAAKgrI,mBACL,YACAj2G,EAAMI,eAAeJ,EAAMM,mBAG7Br1B,KAAK8/C,2BAA6B,YAAa/qB,EAAMI,eAAe,UAEpEn1B,KAAK2rM,qBAAuB,QAAS52K,EAAMM,iBAAkB,OAAQN,EAAMI,eAAe,YAE1Fn1B,KAAK4rM,sBACH,QACA72K,EAAMM,iBACN,YACAr1B,KAAK8/C,0BACL,YACA,UACA,eACA/qB,EAAMI,eAAen1B,KAAK2rM,sBAG5B3rM,KAAK6rM,sBACH,QACA,SACA,YACC,KAAM,UAAW,GAClB,eACC,KAAM,UAAW,GAClB,cACC,MAAO,KAAM,UAAW,GAAI,IAG/B7rM,KAAK8rM,iBACH,OACA/2K,EAAMk4D,kBACN,cACA,SACA,iBACAjtF,KAAK6rM,qBACL,mBACC,MAAO,KAAM,UAAW,GAAI,GAC7B,WACA,UACA,oBACA92K,EAAMQ,iBAAiB,SACvB,sBACAR,EAAMQ,iBAAiB,UAGzBv1B,KAAK+rM,qBACH,OACAh3K,EAAMk4D,kBACN,QACAl4D,EAAMI,eAAen1B,KAAK8rM,iBAC1B,UACA,UAGF9rM,KAAKgsM,wBAA0B,OAAQj3K,EAAMQ,iBAAiB,UAE9Dv1B,KAAKisM,kBACH,OACAl3K,EAAMk4D,kBACN,WACAl4D,EAAMQ,iBAAiBv1B,KAAK+rM,qBAC5B,mBACA/rM,KAAK6rM,qBACL,eACA92K,EAAMI,eAAen1B,KAAKgsM,yBAG5BhsM,KAAKksM,0BAA4B,QAASn3K,EAAMM,iBAAkB,QAAS,WAE3Er1B,KAAKmsM,qBACH,aACAp3K,EAAMI,eAAeJ,EAAMM,kBAC3B,cACAN,EAAMI,eAAen1B,KAAKksM,2BAG5BlsM,KAAKosM,sBACH,oBACAr3K,EAAMM,iBACN,WACAN,EAAMI,gBAAgB,KAAM,UAAW,IACvC,UACAJ,EAAMI,eAAe,UACrB,WACAJ,EAAMI,eAAe,UAGvBn1B,KAAKqsM,uBACH,oBACAt3K,EAAMM,iBACN,SACAN,EAAMI,gBAAgB,KAAM,UAAW,IACvC,UACA,SAGFn1B,KAAKssM,sBAAwB,aAAc,MAAO,KAAM,UAAW,GAAI,GAAI,UAAW,SAEtFtsM,KAAKusM,wBAA0B,SAAU,UAAW,YAAa,KAAM,UAAW,GAAI,UAAW,SAEjGvsM,KAAKwsM,yBAA2B,SAAUz3K,EAAMI,eAAeJ,EAAMM,mBAErEr1B,KAAKysM,sBACH,SACA13K,EAAMI,eAAen1B,KAAKosM,sBAC1B,SACAr3K,EAAMI,eAAen1B,KAAKqsM,uBAC1B,QACAt3K,EAAMI,eAAen1B,KAAKssM,sBAC1B,UACAv3K,EAAMI,eAAen1B,KAAKusM,wBAC1B,WACAx3K,EAAMI,eAAen1B,KAAKwsM,0BAG5BxsM,KAAK0sM,yBACH,UACA,QACA,QACA,QACA,QACA,QACA,MACA,SACA,OACA,QACA,QACA,SAGF1sM,KAAK2sM,sBACH,gBACC,KAAM,UAAW,GAClB,OACA53K,EAAMM,iBACN,OACA,UACA,iBACAN,EAAMI,eAAe,UACrB,WACAJ,EAAMI,eAAen1B,KAAK0sM,yBAC1B,gBACA,SACA,kBACA33K,EAAMI,eAAe,UACrB,mBACA,QACA,cACAJ,EAAMI,gBAAgB,KAAM,UAAW,IACvC,iBACA,QACA,YACAJ,EAAMI,gBAAgB,KAAM,UAAW,KAGzCn1B,KAAK4sM,wBACH,gBACC,MAAO,KAAM,UAAW,GAAI,GAC7B,OACA73K,EAAMM,iBACN,cACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,eACC,KAAM,UAAW,GAClB,QACA,SACA,YACC,KAAM,UAAW,GAClB,kBACC,KAAM,UAAW,GAClB,mBACC,KAAM,UAAW,GAClB,eACC,MAAO,KAAM,UAAW,GAAI,GAC7B,gBACC,MAAO,KAAM,UAAW,GAAI,GAC7B,YACC,MAAO,KAAM,UAAW,GAAI,GAC7B,qBACC,KAAM,UAAW,GAClB,qBACC,KAAM,UAAW,GAClB,kBACC,KAAM,UAAW,GAClB,cACA,UACA,mBACA,UACA,eACC,KAAM,UAAW,GAClB,aACA,SAGFr1B,KAAK6sM,yBACH,OACA93K,EAAMM,iBACN,WACA,UACA,QACA,SACA,WACC,KAAM,UAAW,GAClB,cACA,UACA,WACA,QACA,OACA,SAGFr1B,KAAK8sM,kBACH,SACA/3K,EAAMI,eAAen1B,KAAK2sM,sBAC1B,WACA53K,EAAMI,eAAen1B,KAAK4sM,wBAC1B,YACA73K,EAAMI,eAAen1B,KAAK6sM,0BAG5B7sM,KAAKg3B,OAASh3B,KAAK+sM,iBACjB,YACAh4K,EAAM6qB,kBAAkB5/C,KAAKyrM,qBAC7B,SACA12K,EAAM6qB,kBAAkB5/C,KAAK0rM,iBAC7B,aACA32K,EAAM6qB,kBAAkB5/C,KAAK4rM,sBAC7B,QACA72K,EAAMQ,iBAAiBv1B,KAAKisM,kBAC5B,aACAl3K,EAAMQ,iBAAiBv1B,KAAKmsM,qBAC5B,gBACAp3K,EAAMQ,iBAAiBv1B,KAAKysM,sBAC5B,YACA13K,EAAMQ,iBAAiBv1B,KAAK8sM,oBAKhC1yJ,EAAG,WACDp6C,KAAKgtM,oBACH,WACAj4K,EAAMoB,oBACN,eACA,SACA,QACApB,EAAMM,iBACN,SACAN,EAAMM,kBAGRr1B,KAAKitM,qBAAuB,OAAQ,SAAU,SAAU,KAAM,UAAW,GAAI,gBAAiB,UAE9FjtM,KAAKktM,qBACH,WACAn4K,EAAMoB,oBACN,gBACA,SACA,YACA,SACA,WACApB,EAAMI,eAAen1B,KAAKgtM,oBAC1B,YACAj4K,EAAMI,eAAen1B,KAAKitM,sBAG5BjtM,KAAKgrI,oBAAsB,OAAQj2G,EAAMI,eAAe,UAExDn1B,KAAKmtM,iBAAmB,OAAQntM,KAAKgrI,oBAErChrI,KAAK8/C,2BAA6B,YAAa/qB,EAAMI,eAAe,UAEpEn1B,KAAKotM,sBAAwB,QAASr4K,EAAMM,iBAAkB,YAAar1B,KAAK8/C,2BAEhF9/C,KAAKqtM,sBACH,QACA,SACA,YACC,KAAM,UAAW,GAClB,eACC,KAAM,UAAW,GAClB,cACC,MAAO,KAAM,UAAW,GAAI,IAG/BrtM,KAAKstM,iBACH,OACAv4K,EAAMk4D,kBACN,cACA,SACA,iBACAjtF,KAAKqtM,qBACL,mBACC,MAAO,KAAM,UAAW,GAAI,GAC7B,WACA,UACA,oBACAt4K,EAAMQ,iBAAiB,SACvB,sBACAR,EAAMQ,iBAAiB,UAGzBv1B,KAAKutM,qBACH,OACAx4K,EAAMk4D,kBACN,QACAl4D,EAAMI,eAAen1B,KAAKstM,iBAC1B,UACA,UAGFttM,KAAKwtM,wBAA0B,OAAQz4K,EAAMQ,iBAAiB,UAE9Dv1B,KAAKytM,kBACH,OACA14K,EAAMk4D,kBACN,WACAl4D,EAAMQ,iBAAiBv1B,KAAKutM,qBAC5B,mBACAvtM,KAAKqtM,qBACL,eACAt4K,EAAMI,eAAen1B,KAAKwtM,yBAG5BxtM,KAAK0tM,0BAA4B,QAAS34K,EAAMM,iBAAkB,QAAS,WAE3Er1B,KAAK2tM,qBACH,aACA54K,EAAMI,eAAeJ,EAAMM,kBAC3B,cACAN,EAAMI,eAAen1B,KAAK0tM,2BAG5B1tM,KAAK4tM,sBACH,oBACA74K,EAAMM,iBACN,WACAN,EAAMI,gBAAgB,KAAM,UAAW,IACvC,UACAJ,EAAMI,eAAe,UACrB,WACAJ,EAAMI,eAAe,UAGvBn1B,KAAK6tM,uBACH,oBACA94K,EAAMM,iBACN,SACAN,EAAMI,gBAAgB,KAAM,UAAW,IACvC,UACA,SAGFn1B,KAAK8tM,sBAAwB,aAAc,MAAO,KAAM,UAAW,GAAI,GAAI,UAAW,SAEtF9tM,KAAK+tM,wBAA0B,SAAU,UAAW,YAAa,KAAM,UAAW,GAAI,UAAW,SAEjG/tM,KAAKguM,yBAA2B,SAAUj5K,EAAMI,eAAeJ,EAAMM,mBAErEr1B,KAAKiuM,sBACH,SACAl5K,EAAMI,eAAen1B,KAAK4tM,sBAC1B,SACA74K,EAAMI,eAAen1B,KAAK6tM,uBAC1B,QACA94K,EAAMI,eAAen1B,KAAK8tM,sBAC1B,UACA/4K,EAAMI,eAAen1B,KAAK+tM,wBAC1B,WACAh5K,EAAMI,eAAen1B,KAAKguM,0BAG5BhuM,KAAKkuM,yBACH,UACA,QACA,QACA,QACA,QACA,QACA,MACA,SACA,OACA,QACA,QACA,SAGFluM,KAAKmuM,sBACH,gBACC,KAAM,UAAW,GAClB,OACAp5K,EAAMM,iBACN,OACA,UACA,iBACAN,EAAMI,eAAe,UACrB,WACAJ,EAAMI,eAAen1B,KAAKkuM,yBAC1B,gBACA,SACA,kBACAn5K,EAAMI,eAAe,UACrB,mBACA,QACA,cACAJ,EAAMI,gBAAgB,KAAM,UAAW,IACvC,iBACA,QACA,YACAJ,EAAMI,gBAAgB,KAAM,UAAW,KAGzCn1B,KAAKouM,wBACH,gBACC,MAAO,KAAM,UAAW,GAAI,GAC7B,OACAr5K,EAAMM,iBACN,cACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,eACC,KAAM,UAAW,GAClB,QACA,SACA,YACC,KAAM,UAAW,GAClB,kBACC,KAAM,UAAW,GAClB,mBACC,KAAM,UAAW,GAClB,eACC,MAAO,KAAM,UAAW,GAAI,GAC7B,gBACC,MAAO,KAAM,UAAW,GAAI,GAC7B,YACC,MAAO,KAAM,UAAW,GAAI,GAC7B,qBACC,KAAM,UAAW,GAClB,qBACC,KAAM,UAAW,GAClB,kBACC,KAAM,UAAW,GAClB,cACA,UACA,mBACA,UACA,eACC,KAAM,UAAW,GAClB,aACA,SAGFr1B,KAAKquM,yBACH,OACAt5K,EAAMM,iBACN,WACA,UACA,QACA,SACA,WACC,KAAM,UAAW,GAClB,cACA,UACA,WACA,QACA,OACA,SAGFr1B,KAAKsuM,kBACH,SACAv5K,EAAMI,eAAen1B,KAAKmuM,sBAC1B,WACAp5K,EAAMI,eAAen1B,KAAKouM,wBAC1B,YACAr5K,EAAMI,eAAen1B,KAAKquM,0BAG5BruM,KAAKg3B,OAASh3B,KAAKuuM,iBACjB,YACAx5K,EAAM6qB,kBAAkB5/C,KAAKktM,qBAC7B,SACAn4K,EAAM6qB,kBAAkB5/C,KAAKmtM,iBAC7B,aACAp4K,EAAM6qB,kBAAkB5/C,KAAKotM,sBAC7B,QACAr4K,EAAMQ,iBAAiBv1B,KAAKytM,kBAC5B,aACA14K,EAAMQ,iBAAiBv1B,KAAK2tM,qBAC5B,gBACA54K,EAAMQ,iBAAiBv1B,KAAKiuM,sBAC5B,YACAl5K,EAAMQ,iBAAiBv1B,KAAKsuM,oBAKhChzJ,EAAG,WACDt7C,KAAKwuM,oBACH,WACAz5K,EAAMoB,oBACN,eACA,SACA,QACApB,EAAMM,iBACN,SACAN,EAAMM,kBAGRr1B,KAAKyuM,qBAAuB,OAAQ,SAAU,SAAU,KAAM,UAAW,GAAI,gBAAiB,UAE9FzuM,KAAK0uM,qBACH,WACA35K,EAAMoB,oBACN,gBACA,SACA,YACA,SACA,WACApB,EAAMI,eAAen1B,KAAKwuM,oBAC1B,YACAz5K,EAAMI,eAAen1B,KAAKyuM,sBAG5BzuM,KAAKgrI,oBAAsB,OAAQj2G,EAAMI,eAAe,UAExDn1B,KAAK2uM,iBAAmB,OAAQ3uM,KAAKgrI,oBAErChrI,KAAK8/C,2BAA6B,YAAa/qB,EAAMI,eAAe,UAEpEn1B,KAAK4uM,sBAAwB,QAAS75K,EAAMM,iBAAkB,YAAar1B,KAAK8/C,2BAEhF9/C,KAAK6uM,sBACH,QACA,SACA,YACC,KAAM,UAAW,GAClB,eACC,KAAM,UAAW,GAClB,cACC,MAAO,KAAM,UAAW,GAAI,IAG/B7uM,KAAK8uM,iBACH,OACA/5K,EAAMk4D,kBACN,cACA,SACA,iBACAjtF,KAAK6uM,qBACL,mBACC,MAAO,KAAM,UAAW,GAAI,GAC7B,WACA,UACA,oBACA95K,EAAMQ,iBAAiB,SACvB,sBACAR,EAAMQ,iBAAiB,UAGzBv1B,KAAK+uM,qBACH,OACAh6K,EAAMk4D,kBACN,QACAl4D,EAAMI,eAAen1B,KAAK8uM,iBAC1B,UACA,UAGF9uM,KAAKgvM,wBAA0B,OAAQj6K,EAAMQ,iBAAiB,UAE9Dv1B,KAAKivM,kBACH,OACAl6K,EAAMk4D,kBACN,WACAl4D,EAAMQ,iBAAiBv1B,KAAK+uM,qBAC5B,mBACA/uM,KAAK6uM,qBACL,eACA95K,EAAMI,eAAen1B,KAAKgvM,yBAG5BhvM,KAAKkvM,0BAA4B,QAASn6K,EAAMM,iBAAkB,QAAS,WAE3Er1B,KAAKmvM,qBACH,aACAp6K,EAAMI,eAAeJ,EAAMM,kBAC3B,cACAN,EAAMI,eAAen1B,KAAKkvM,2BAG5BlvM,KAAKovM,sBACH,oBACAr6K,EAAMM,iBACN,WACAN,EAAMI,gBAAgB,KAAM,UAAW,IACvC,UACAJ,EAAMI,eAAe,UACrB,WACAJ,EAAMI,eAAe,UAGvBn1B,KAAKqvM,uBACH,oBACAt6K,EAAMM,iBACN,SACAN,EAAMI,gBAAgB,KAAM,UAAW,IACvC,UACA,SAGFn1B,KAAKsvM,yBAA2B,SAAUv6K,EAAMI,eAAeJ,EAAMM,mBAErEr1B,KAAKuvM,sBACH,SACAx6K,EAAMI,eAAen1B,KAAKovM,sBAC1B,SACAr6K,EAAMI,eAAen1B,KAAKqvM,uBAC1B,WACAt6K,EAAMI,eAAen1B,KAAKsvM,0BAG5BtvM,KAAKwvM,yBACH,UACA,QACA,QACA,QACA,QACA,QACA,MACA,SACA,OACA,QACA,QACA,SAGFxvM,KAAKyvM,sBACH,gBACC,KAAM,UAAW,GAClB,OACA16K,EAAMM,iBACN,OACA,UACA,iBACAN,EAAMI,eAAe,UACrB,WACAJ,EAAMI,eAAen1B,KAAKwvM,yBAC1B,gBACA,SACA,kBACAz6K,EAAMI,eAAe,UACrB,mBACA,QACA,cACAJ,EAAMI,gBAAgB,KAAM,UAAW,IACvC,iBACA,QACA,YACAJ,EAAMI,gBAAgB,KAAM,UAAW,KAGzCn1B,KAAK0vM,wBACH,gBACC,MAAO,KAAM,UAAW,GAAI,GAC7B,OACA36K,EAAMM,iBACN,cACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,eACC,KAAM,UAAW,GAClB,QACA,SACA,YACC,KAAM,UAAW,GAClB,kBACC,KAAM,UAAW,GAClB,mBACC,KAAM,UAAW,GAClB,eACC,MAAO,KAAM,UAAW,GAAI,GAC7B,gBACC,MAAO,KAAM,UAAW,GAAI,GAC7B,YACC,MAAO,KAAM,UAAW,GAAI,GAC7B,qBACC,KAAM,UAAW,GAClB,qBACC,KAAM,UAAW,GAClB,kBACC,KAAM,UAAW,GAClB,cACA,UACA,mBACA,UACA,eACC,KAAM,UAAW,GAClB,aACA,SAGFr1B,KAAK2vM,yBACH,OACA56K,EAAMM,iBACN,WACA,UACA,QACA,SACA,WACC,KAAM,UAAW,GAClB,cACA,UACA,WACA,QACA,OACA,SAGFr1B,KAAK4vM,kBACH,SACA76K,EAAMI,eAAen1B,KAAKyvM,sBAC1B,WACA16K,EAAMI,eAAen1B,KAAK0vM,wBAC1B,YACA36K,EAAMI,eAAen1B,KAAK2vM,0BAG5B3vM,KAAKg3B,OAASh3B,KAAK6vM,iBACjB,YACA96K,EAAM6qB,kBAAkB5/C,KAAK0uM,qBAC7B,SACA35K,EAAM6qB,kBAAkB5/C,KAAK2uM,iBAC7B,aACA55K,EAAM6qB,kBAAkB5/C,KAAK4uM,sBAC7B,QACA75K,EAAMQ,iBAAiBv1B,KAAKivM,kBAC5B,aACAl6K,EAAMQ,iBAAiBv1B,KAAKmvM,qBAC5B,gBACAp6K,EAAMQ,iBAAiBv1B,KAAKuvM,sBAC5B,YACAx6K,EAAMQ,iBAAiBv1B,KAAK4vM,oBAKhC3uM,EAAG,WACDjB,KAAK8vM,oBACH,WACA/6K,EAAMoB,oBACN,eACA,SACA,QACApB,EAAMM,iBACN,SACAN,EAAMM,kBAGRr1B,KAAK+vM,qBAAuB,OAAQ,SAAU,SAAU,KAAM,UAAW,GAAI,gBAAiB,UAE9F/vM,KAAKgwM,qBACH,WACAj7K,EAAMoB,oBACN,gBACA,SACA,YACA,SACA,WACApB,EAAMI,eAAen1B,KAAK8vM,oBAC1B,YACA/6K,EAAMI,eAAen1B,KAAK+vM,sBAG5B/vM,KAAKgrI,oBAAsB,OAAQj2G,EAAMI,eAAe,UAExDn1B,KAAKiwM,iBAAmB,OAAQjwM,KAAKgrI,oBAErChrI,KAAK8/C,2BAA6B,YAAa/qB,EAAMI,eAAe,UAEpEn1B,KAAKkwM,sBAAwB,QAASn7K,EAAMM,iBAAkB,YAAar1B,KAAK8/C,2BAEhF9/C,KAAKmwM,sBACH,QACA,SACA,YACC,KAAM,UAAW,GAClB,eACC,KAAM,UAAW,GAClB,cACC,MAAO,KAAM,UAAW,GAAI,IAG/BnwM,KAAKowM,iBACH,OACAr7K,EAAMk4D,kBACN,cACA,SACA,iBACAjtF,KAAKmwM,qBACL,mBACC,MAAO,KAAM,UAAW,GAAI,GAC7B,WACA,UACA,oBACAp7K,EAAMQ,iBAAiB,SACvB,sBACAR,EAAMQ,iBAAiB,UAGzBv1B,KAAKqwM,qBACH,OACAt7K,EAAMk4D,kBACN,QACAl4D,EAAMI,eAAen1B,KAAKowM,iBAC1B,UACA,UAGFpwM,KAAKswM,wBAA0B,OAAQv7K,EAAMQ,iBAAiB,UAE9Dv1B,KAAKuwM,kBACH,OACAx7K,EAAMk4D,kBACN,WACAl4D,EAAMQ,iBAAiBv1B,KAAKqwM,qBAC5B,mBACArwM,KAAKmwM,qBACL,eACAp7K,EAAMI,eAAen1B,KAAKswM,yBAG5BtwM,KAAKwwM,0BAA4B,QAASz7K,EAAMM,iBAAkB,QAAS,WAE3Er1B,KAAKywM,qBACH,aACA17K,EAAMI,eAAeJ,EAAMM,kBAC3B,cACAN,EAAMI,eAAen1B,KAAKwwM,2BAG5BxwM,KAAK0wM,2BACH,oBACA37K,EAAMM,iBACN,WACAN,EAAMI,gBAAgB,KAAM,UAAW,IACvC,UACAJ,EAAMI,eAAe,UACrB,WACAJ,EAAMI,eAAe,UAGvBn1B,KAAK2wM,4BACH,oBACA57K,EAAMM,iBACN,SACAN,EAAMI,gBAAgB,KAAM,UAAW,IACvC,UACA,SAGFn1B,KAAK4wM,8BAAgC,SAAU77K,EAAMI,eAAeJ,EAAMM,mBAE1Er1B,KAAK6wM,2BACH,SACA97K,EAAMI,eAAen1B,KAAK0wM,2BAC1B,SACA37K,EAAMI,eAAen1B,KAAK2wM,4BAC1B,WACA57K,EAAMI,eAAen1B,KAAK4wM,+BAG5B5wM,KAAKg3B,OAASh3B,KAAK8wM,iBACjB,YACA/7K,EAAM6qB,kBAAkB5/C,KAAKgwM,qBAC7B,SACAj7K,EAAM6qB,kBAAkB5/C,KAAKiwM,iBAC7B,aACAl7K,EAAM6qB,kBAAkB5/C,KAAKkwM,sBAC7B,QACAn7K,EAAMQ,iBAAiBv1B,KAAKuwM,kBAC5B,aACAx7K,EAAMQ,iBAAiBv1B,KAAKywM,qBAC5B,gBACA17K,EAAMQ,iBAAiBv1B,KAAK6wM,6BAKhCpzJ,EAAG,WACDz9C,KAAK+wM,oBACH,WACAh8K,EAAMoB,oBACN,eACA,SACA,QACApB,EAAMM,iBACN,SACAN,EAAMM,kBAGRr1B,KAAKgxM,qBAAuB,OAAQ,SAAU,SAAU,KAAM,UAAW,GAAI,gBAAiB,UAE9FhxM,KAAKixM,qBACH,WACAl8K,EAAMoB,oBACN,gBACA,SACA,YACA,SACA,WACApB,EAAMI,eAAen1B,KAAK+wM,oBAC1B,YACAh8K,EAAMI,eAAen1B,KAAKgxM,sBAG5BhxM,KAAKgrI,oBAAsB,OAAQj2G,EAAMI,eAAe,UAExDn1B,KAAKkxM,iBAAmB,OAAQlxM,KAAKgrI,oBAErChrI,KAAK8/C,2BAA6B,YAAa/qB,EAAMI,eAAe,UAEpEn1B,KAAKmxM,sBAAwB,QAASp8K,EAAMM,iBAAkB,YAAar1B,KAAK8/C,2BAEhF9/C,KAAKoxM,sBACH,QACA,SACA,YACC,KAAM,UAAW,GAClB,eACC,KAAM,UAAW,GAClB,cACC,MAAO,KAAM,UAAW,GAAI,IAG/BpxM,KAAKqxM,iBACH,OACAt8K,EAAMk4D,kBACN,cACA,SACA,iBACAjtF,KAAKoxM,qBACL,mBACC,MAAO,KAAM,UAAW,GAAI,GAC7B,WACA,UACA,oBACAr8K,EAAMQ,iBAAiB,SACvB,sBACAR,EAAMQ,iBAAiB,UAGzBv1B,KAAKsxM,qBACH,OACAv8K,EAAMk4D,kBACN,QACAl4D,EAAMI,eAAen1B,KAAKqxM,iBAC1B,UACA,UAGFrxM,KAAKuxM,wBAA0B,OAAQx8K,EAAMQ,iBAAiB,UAE9Dv1B,KAAKwxM,kBACH,OACAz8K,EAAMk4D,kBACN,WACAl4D,EAAMQ,iBAAiBv1B,KAAKsxM,qBAC5B,mBACAtxM,KAAKoxM,qBACL,eACAr8K,EAAMI,eAAen1B,KAAKuxM,yBAG5BvxM,KAAKyxM,0BAA4B,QAAS18K,EAAMM,iBAAkB,QAAS,WAE3Er1B,KAAK0xM,qBACH,aACA38K,EAAMI,eAAeJ,EAAMM,kBAC3B,cACAN,EAAMI,eAAen1B,KAAKyxM,2BAG5BzxM,KAAKg3B,OAASh3B,KAAK2xM,iBACjB,YACA58K,EAAM6qB,kBAAkB5/C,KAAKixM,qBAC7B,SACAl8K,EAAM6qB,kBAAkB5/C,KAAKkxM,iBAC7B,aACAn8K,EAAM6qB,kBAAkB5/C,KAAKmxM,sBAC7B,QACAp8K,EAAMQ,iBAAiBv1B,KAAKwxM,kBAC5B,aACAz8K,EAAMQ,iBAAiBv1B,KAAK0xM,kFCp6+BtC,IAAM38K,EAAQt0B,EAAQ,6BAEtBf,EAAOD,UAMHyB,KAAM,OACN8zB,UAEEyoB,EAAG,WACDz9C,KAAK4xM,yBAA2B,QAAS,SAAU,WAAY,SAAU,WAAY,UAErF5xM,KAAK6xM,iBACH,gBACA,SACA,aACA98K,EAAMI,eAAe,SACrB,eACAJ,EAAMI,eAAe,SACrB,YACAJ,EAAMI,eAAen1B,KAAK4xM,yBAC1B,WACA78K,EAAMI,eAAen1B,KAAK4xM,0BAG5B5xM,KAAK8xM,sBACH,WACA,SACA,eACA,SACA,mBACA,SACA,eACA,SACA,kBACA,SACA,mBACA,SACA,gBACA,SACA,YACA,WAGF9xM,KAAK+xM,eACH,cACA/xM,KAAK8xM,qBACL,cACA,SACA,eACA,SACA,aACA/8K,EAAMoB,oBACN,aACApB,EAAMoB,qBAGRn2B,KAAKgyM,iBAAmB,QAASj9K,EAAMM,iBAAkB,SAAUN,EAAMI,eAAen1B,KAAK+xM,gBAE7F/xM,KAAKiyM,uBACH,WACA,SACA,WACA,SACA,WACA,SACA,cACA,SACA,YACA,SACA,gBACA,SACA,cACA,SACA,YACA,SACA,YACA,SACA,gBACA,WAGFjyM,KAAKg3B,OAASh3B,KAAKkyM,mBACjB,OACAn9K,EAAMk4D,kBACN,UACAl4D,EAAMI,eAAen1B,KAAK6xM,iBAC1B,UACA98K,EAAMI,eAAen1B,KAAKgyM,iBAC1B,WACAj9K,EAAMI,eAAen1B,KAAKiyM,oFC5FpC,IAAMl9K,EAAQt0B,EAAQ,6BAEtBf,EAAOD,UAMHyB,KAAM,MACN8zB,UAEEsmB,EAAG,WACDt7C,KAAKmyM,sBACH,YACC,KAAM,UAAW,GAClB,WACC,KAAM,UAAW,GAClB,cACAp9K,EAAM2B,qBAGR12B,KAAKg3B,OAASh3B,KAAKoyM,YAAc,gBAAiBr9K,EAAMI,eAAen1B,KAAKmyM,wBAI9ElxM,EAAG,WACDjB,KAAKmyM,sBAAwB,YAAa,KAAM,UAAW,GAAI,WAAY,KAAM,UAAW,IAE5FnyM,KAAKg3B,OAASh3B,KAAKoyM,YAAc,gBAAiBr9K,EAAMI,eAAen1B,KAAKmyM,mFC5BpF,IAAMp9K,EAAQt0B,EAAQ,6BAEtBf,EAAOD,UAMHyB,KAAM,OACN8zB,UAEEolB,EAAG,WACDp6C,KAAKqyM,uBACH,aACA,SACA,aACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,cACAt9K,EAAMI,eAAe,SACrB,kBACAJ,EAAMI,eAAe,SACrB,wBACAJ,EAAMI,eAAe,UAGvBn1B,KAAKsyM,uBACH,aACA,SACA,YACAv9K,EAAMM,iBACN,cACAN,EAAMI,eAAe,SACrB,kBACAJ,EAAMI,eAAe,SACrB,eACAJ,EAAMI,eAAe,UAGvBn1B,KAAKg3B,OAASh3B,KAAKuyM,kBACjB,aACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,aACC,KAAM,SAAU,GACjB,aACAx9K,EAAMI,eAAen1B,KAAKqyM,uBAC1B,eACAt9K,EAAMI,eAAen1B,KAAKsyM,yBAK9Bh3J,EAAG,WACDt7C,KAAKwyM,uBACH,aACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,cACAz9K,EAAMI,eAAe,SACrB,kBACAJ,EAAMI,eAAe,SACrB,wBACAJ,EAAMI,eAAe,UAGvBn1B,KAAKyyM,uBACH,YACA19K,EAAMM,iBACN,cACAN,EAAMI,eAAe,SACrB,kBACAJ,EAAMI,eAAe,SACrB,eACAJ,EAAMI,eAAe,UAGvBn1B,KAAKg3B,OAASh3B,KAAK0yM,kBACjB,aACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,aACC,KAAM,SAAU,GACjB,aACA39K,EAAMI,eAAen1B,KAAKwyM,uBAC1B,eACAz9K,EAAMI,eAAen1B,KAAKyyM,yBAK9BxxM,EAAG,WACDjB,KAAK2yM,uBACH,aACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,cACA59K,EAAMI,eAAe,SACrB,kBACAJ,EAAMI,eAAe,SACrB,wBACAJ,EAAMI,eAAe,UAGvBn1B,KAAKg3B,OAASh3B,KAAK4yM,kBACjB,aACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,aACC,KAAM,SAAU,GACjB,aACA79K,EAAMI,eAAen1B,KAAK2yM,yBAK9Bl1J,EAAG,WACDz9C,KAAK6yM,uBACH,aACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,cACA99K,EAAMI,eAAe,SACrB,kBACAJ,EAAMI,eAAe,SACrB,wBACAJ,EAAMI,eAAe,UAGvBn1B,KAAKg3B,OAASh3B,KAAK8yM,kBACjB,aACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,aACC,KAAM,SAAU,GACjB,aACA/9K,EAAMI,eAAen1B,KAAK6yM,4BAWhC3xM,KAAM,OACN8zB,UAEEolB,EAAG,WACDp6C,KAAKg3B,OAASh3B,KAAKqyM,uBACjB,aACA,SACA,aACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,cACAt9K,EAAMI,eAAe,SACrB,kBACAJ,EAAMI,eAAe,SACrB,wBACAJ,EAAMI,eAAe,WAKzBmmB,EAAG,WACDt7C,KAAKg3B,OAASh3B,KAAKwyM,uBACjB,aACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,cACAz9K,EAAMI,eAAe,SACrB,kBACAJ,EAAMI,eAAe,SACrB,wBACAJ,EAAMI,eAAe,WAKzBl0B,EAAG,WACDjB,KAAKg3B,OAASh3B,KAAK2yM,uBACjB,aACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,cACA59K,EAAMI,eAAe,SACrB,kBACAJ,EAAMI,eAAe,SACrB,wBACAJ,EAAMI,eAAe,WAKzBsoB,EAAG,WACDz9C,KAAKg3B,OAASh3B,KAAK6yM,uBACjB,aACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,cACA99K,EAAMI,eAAe,SACrB,kBACAJ,EAAMI,eAAe,SACrB,wBACAJ,EAAMI,eAAe,sEC3N/B,IAAMJ,EAAQt0B,EAAQ,6BAEtBf,EAAOD,UAMHyB,KAAM,OACN8zB,UAEEolB,EAAG,WACDp6C,KAAK+yM,+BACH,aACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,WACAh+K,EAAMoB,qBAGRn2B,KAAKsyM,uBACH,aACA,SACA,YACAv9K,EAAMM,iBACN,cACAN,EAAMI,eAAe,SACrB,kBACAJ,EAAMI,eAAe,SACrB,eACAJ,EAAMI,eAAe,UAGvBn1B,KAAKg3B,OAASh3B,KAAKgzM,0BACjB,aACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,aACC,KAAM,SAAU,GACjB,aACAj+K,EAAMI,eAAen1B,KAAK+yM,+BAC1B,eACAh+K,EAAMI,eAAen1B,KAAKsyM,yBAK9Bh3J,EAAG,WACDt7C,KAAKizM,+BACH,aACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,WACAl+K,EAAMoB,qBAGRn2B,KAAKyyM,uBACH,YACA19K,EAAMM,iBACN,cACAN,EAAMI,eAAe,SACrB,kBACAJ,EAAMI,eAAe,SACrB,eACAJ,EAAMI,eAAe,UAGvBn1B,KAAKg3B,OAASh3B,KAAKkzM,0BACjB,aACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,aACC,KAAM,SAAU,GACjB,aACAn+K,EAAMI,eAAen1B,KAAKizM,+BAC1B,eACAl+K,EAAMI,eAAen1B,KAAKyyM,yBAK9BxxM,EAAG,WACDjB,KAAKmzM,+BACH,aACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,WACAp+K,EAAMoB,qBAGRn2B,KAAKg3B,OAASh3B,KAAKozM,0BACjB,aACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,aACC,KAAM,SAAU,GACjB,aACAr+K,EAAMI,eAAen1B,KAAKmzM,iCAK9B11J,EAAG,WACDz9C,KAAKqzM,+BACH,aACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,WACAt+K,EAAMoB,qBAGRn2B,KAAKg3B,OAASh3B,KAAKszM,0BACjB,aACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,aACC,KAAM,SAAU,GACjB,aACAv+K,EAAMI,eAAen1B,KAAKqzM,4FC9HpC,IAAMt+K,EAAQt0B,EAAQ,6BAEtBf,EAAOD,UAMHyB,KAAM,MACN8zB,UAEEsmB,EAAG,WACDt7C,KAAKuzM,sBACH,QACA,SACA,QACA,SACA,gBACAx+K,EAAMI,gBAAgB,KAAM,UAAW,IACvC,cACAJ,EAAMI,gBAAgB,KAAM,UAAW,IACvC,OACAJ,EAAM2B,oBACN,UACA3B,EAAMM,kBAGRr1B,KAAKg3B,OAASh3B,KAAKwzM,cAAgB,YAAaz+K,EAAMI,eAAen1B,KAAKuzM,wBAI5EtyM,EAAG,WACDjB,KAAKuzM,sBACH,QACA,SACA,QACA,SACA,gBACAx+K,EAAMI,gBAAgB,KAAM,UAAW,IACvC,cACAJ,EAAMI,gBAAgB,KAAM,UAAW,IACvC,OACAJ,EAAM2B,qBAGR12B,KAAKg3B,OAASh3B,KAAKwzM,cAAgB,YAAaz+K,EAAMI,eAAen1B,KAAKuzM,wBAI5E91J,EAAG,WACDz9C,KAAKuzM,sBACH,QACA,SACA,QACA,SACA,gBACAx+K,EAAMI,gBAAgB,KAAM,UAAW,IACvC,cACAJ,EAAMI,gBAAgB,KAAM,UAAW,KAGzCn1B,KAAKg3B,OAASh3B,KAAKwzM,cAAgB,YAAaz+K,EAAMI,eAAen1B,KAAKuzM,mFC7DlF,IAAMx+K,EAAQt0B,EAAQ,6BAEtBf,EAAOD,UAMHyB,KAAM,MACN8zB,UAEEyoB,EAAG,WACDz9C,KAAKyzM,cACH,QACA,SACA,QACA,SACA,WACA1+K,EAAMI,gBAAgB,KAAM,UAAW,IACvC,OACAJ,EAAM2B,qBAGR12B,KAAKg3B,OAASh3B,KAAK0zM,eAAiB,aAAc3+K,EAAMI,eAAen1B,KAAKyzM,2ECvBpF,IAAM1+K,EAAQt0B,EAAQ,6BAEtBf,EAAOD,UAMHyB,KAAM,OACN8zB,UAEEyoB,EAAG,WACDz9C,KAAKg3B,OAASh3B,KAAK2zM,kBACjB,oBACA,SACA,OACA5+K,EAAMI,eAAe,SACrB,YACAJ,EAAMI,eAAe,SACrB,WACAJ,EAAMI,eAAe,sECpB/B,IAAMJ,EAAQt0B,EAAQ,6BAEtBf,EAAOD,UAMHyB,KAAM,OACN8zB,UAEEyoB,EAAG,WACDz9C,KAAK4zM,YACH,OACA7+K,EAAM2B,oBACN,OACA3B,EAAM2B,oBACN,QACA3B,EAAMM,iBACN,QACA,UAGFr1B,KAAKg3B,OAASh3B,KAAK6zM,YACjB,WACA9+K,EAAMoB,oBACN,WACApB,EAAMI,eAAen1B,KAAK4zM,YAC1B,QACA,sEC7BVl0M,EAAOD,UAMHyB,KAAM,OACN8zB,UAEEyoB,EAAG,WACDz9C,KAAKg3B,OAASh3B,KAAK8zM,UAAY,QAAS,KAAM,UAAW,GAAI,QAAS,SAAU,QAAS,KAAM,QAAS,kCCVhH,IAAM/+K,EAAQt0B,EAAQ,6BAEtBf,EAAOD,UAMHyB,KAAM,OACN8zB,UAEEolB,EAAG,WACDp6C,KAAK0qF,uBACH,WACC,KAAM,SAAU,GACjB,gBACC,KAAM,SAAU,GACjB,YACA,SACA,iBACA,SACA,aACA,UAGF1qF,KAAK2qF,sBACH,QACA,SACA,SACC,KAAM,SAAU,GACjB,WACA51D,EAAMoB,oBACN,QACA,SACA,cACC,KAAM,QAAS,IAGlBn2B,KAAKg3B,OAASh3B,KAAK4qF,uBACjB,SACA71D,EAAMI,eAAen1B,KAAK0qF,uBAC1B,WACA31D,EAAMI,eAAen1B,KAAK2qF,sBAC1B,gBACA51D,EAAMI,eAAen1B,KAAK2qF,sBAC1B,QACA,WAKJrvC,EAAG,WACDt7C,KAAK6qF,uBACH,QACC,KAAM,SAAU,GACjB,WACC,KAAM,SAAU,GACjB,aACA,SACA,YACA,SACA,iBACA,UAGF7qF,KAAK8qF,sBACH,QACA,SACA,SACC,KAAM,SAAU,GACjB,WACA/1D,EAAMoB,oBACN,QACA,SACA,cACC,KAAM,QAAS,IAGlBn2B,KAAKg3B,OAASh3B,KAAK+qF,uBACjB,SACAh2D,EAAMI,eAAen1B,KAAK6qF,uBAC1B,QACA91D,EAAMI,eAAen1B,KAAK8qF,sBAC1B,QACA,WAKJ7pF,EAAG,WACDjB,KAAKgrF,uBACH,QACC,KAAM,SAAU,GACjB,WACC,KAAM,SAAU,GACjB,aACA,SACA,YACA,SACA,iBACA,UAGFhrF,KAAKirF,sBACH,QACA,SACA,SACC,KAAM,SAAU,GACjB,WACAl2D,EAAMoB,oBACN,QACA,SACA,cACC,KAAM,QAAS,IAGlBn2B,KAAKg3B,OAASh3B,KAAKkrF,uBACjB,SACAn2D,EAAMI,eAAen1B,KAAKgrF,uBAC1B,QACAj2D,EAAMI,eAAen1B,KAAKirF,wBAK9BxtC,EAAG,WACDz9C,KAAK+zM,uBACH,QACC,KAAM,SAAU,GACjB,WACC,KAAM,SAAU,GACjB,aACA,SACA,YACA,SACA,iBACA,UAGF/zM,KAAKg0M,sBACH,QACA,SACA,SACC,KAAM,SAAU,GACjB,WACAj/K,EAAMoB,oBACN,QACA,UAGFn2B,KAAKg3B,OAASh3B,KAAKi0M,uBACjB,SACAl/K,EAAMI,eAAen1B,KAAK+zM,uBAC1B,QACAh/K,EAAMI,eAAen1B,KAAKg0M,mFC1JpC,IAAMj/K,EAAQt0B,EAAQ,6BAEtBf,EAAOD,UAMHyB,KAAM,OACN8zB,UAEEoc,GAAI,WACFpxC,KAAKk0M,uBACH,aACAn/K,EAAMI,eAAe,UACrB,cACAJ,EAAMI,gBAAgB,KAAM,UAAW,IACvC,eACAJ,EAAMI,eAAe,UAGvBn1B,KAAKm0M,yBACH,OACAp/K,EAAMQ,iBAAiBv1B,KAAKk0M,uBAC5B,eACAn/K,EAAMI,eAAe,UAGvBn1B,KAAKo0M,4BAA8B,WAAYr/K,EAAMM,iBAAkB,cAAe,UAEtFr1B,KAAKq0M,2BACH,WACAt/K,EAAM2B,oBACN,mBACA,QACA,cACA3B,EAAMI,eAAen1B,KAAKo0M,4BAC1B,UACAr/K,EAAMI,eAAe,WAGvBn1B,KAAKs0M,4BACH,QACAv/K,EAAMM,iBACN,QACA,UACA,aACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,gBACA,UAGFr1B,KAAKu0M,2BACH,QACA,UACA,aACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,gBACA,UAGFv0M,KAAKw0M,gCAAkC,aAAc,KAAM,UAAW,GAAI,gBAAiB,UAE3Fx0M,KAAKy0M,wBACH,aACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,cACA1/K,EAAMI,eAAen1B,KAAKm0M,yBAC1B,gBACAp/K,EAAMI,eAAen1B,KAAKq0M,2BAC1B,iBACAt/K,EAAMI,eAAen1B,KAAKs0M,4BAC1B,mBACAv/K,EAAMI,eAAen1B,KAAKs0M,4BAC1B,iBACAv/K,EAAMI,eAAen1B,KAAKu0M,2BAC1B,gBACAx/K,EAAMI,eAAen1B,KAAKw0M,iCAG5Bx0M,KAAKg3B,OAASh3B,KAAK00M,mBACjB,aACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,aACA3/K,EAAMI,eAAen1B,KAAKy0M,0BAK9B/hK,EAAG,WACD1yC,KAAK20M,sBACH,aACA5/K,EAAMI,eAAe,UACrB,cACAJ,EAAMI,gBAAgB,KAAM,UAAW,IACvC,eACAJ,EAAMI,eAAe,UAGvBn1B,KAAK40M,wBACH,OACA7/K,EAAMQ,iBAAiBv1B,KAAK20M,sBAC5B,eACA5/K,EAAMI,eAAe,UAGvBn1B,KAAK60M,2BAA6B,WAAY9/K,EAAMM,iBAAkB,cAAe,UAErFr1B,KAAK80M,0BACH,WACA//K,EAAM2B,oBACN,mBACA,QACA,cACA3B,EAAMI,eAAen1B,KAAK60M,4BAG5B70M,KAAK+0M,2BACH,QACAhgL,EAAMM,iBACN,QACA,UACA,aACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,gBACA,UAGFr1B,KAAKg1M,2BACH,QACA,UACA,aACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,gBACA,UAGFh1M,KAAKi1M,+BAAiC,aAAc,KAAM,UAAW,GAAI,gBAAiB,UAE1Fj1M,KAAKk1M,uBACH,aACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,cACAngL,EAAMI,eAAen1B,KAAK40M,wBAC1B,gBACA7/K,EAAMI,eAAen1B,KAAK80M,0BAC1B,iBACA//K,EAAMI,eAAen1B,KAAK+0M,2BAC1B,mBACAhgL,EAAMI,eAAen1B,KAAK+0M,2BAC1B,iBACAhgL,EAAMI,eAAen1B,KAAKg1M,2BAC1B,gBACAjgL,EAAMI,eAAen1B,KAAKi1M,gCAG5Bj1M,KAAKg3B,OAASh3B,KAAKm1M,kBACjB,aACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,aACApgL,EAAMI,eAAen1B,KAAKk1M,yBAK9BlhK,EAAG,WACDh0C,KAAKo1M,sBACH,aACArgL,EAAMI,eAAe,UACrB,cACAJ,EAAMI,gBAAgB,KAAM,UAAW,IACvC,eACAJ,EAAMI,eAAe,UAGvBn1B,KAAKq1M,iBACH,cACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,IAGpBr1M,KAAKs1M,oBAAsB,UAAW,KAAM,UAAW,GAAI,SAAU,WAErEt1M,KAAKu1M,qBAAuB,MAAO,KAAM,UAAW,GAAI,MAAO,KAAM,UAAW,GAAI,SAAU,WAE9Fv1M,KAAKw1M,kBACH,UACAzgL,EAAMI,eAAe,UACrB,WACAJ,EAAMI,gBAAgB,KAAM,UAAW,IACvC,YACC,KAAM,UAAW,GAClB,YACAJ,EAAMI,eAAe,UAGvBn1B,KAAKy1M,oBACH,QACA1gL,EAAMI,eAAen1B,KAAKq1M,iBAC1B,UACAtgL,EAAMI,eAAen1B,KAAKs1M,oBAC1B,WACAvgL,EAAMI,eAAen1B,KAAKu1M,qBAC1B,SACAxgL,EAAMI,eAAen1B,KAAKw1M,mBAG5Bx1M,KAAK64H,iBACH,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,QACA,SACA,YACA,UACA,cACA,SAGF74H,KAAK84H,aACH,aACA/jG,EAAMI,eAAeJ,EAAMM,kBAC3B,SACAN,EAAMI,eAAen1B,KAAK64H,iBAC1B,SACA,SAGF74H,KAAK+4H,aAAe,WAAY,KAAM,SAAU,GAAI,YAAahkG,EAAMI,eAAe,WAEtFn1B,KAAKg5H,iBACH,UACAjkG,EAAMI,eAAe,UACrB,WACAJ,EAAMI,gBAAgB,KAAM,UAAW,IACvC,QACAJ,EAAMI,eAAen1B,KAAK+4H,aAC1B,YACC,KAAM,UAAW,GAClB,YACAhkG,EAAMI,eAAe,SACrB,WACAJ,EAAMI,eAAe,UAGvBn1B,KAAKi5H,oBAAsB,SAAUlkG,EAAMI,eAAeJ,EAAMM,mBAEhEr1B,KAAKk5H,iBACH,QACAnkG,EAAMI,eAAen1B,KAAK84H,aAC1B,SACA/jG,EAAMI,eAAen1B,KAAKg5H,iBAC1B,WACAjkG,EAAMI,eAAen1B,KAAKi5H,qBAG5Bj5H,KAAK01M,wBACH,OACA3gL,EAAMQ,iBAAiBv1B,KAAKo1M,sBAC5B,UACArgL,EAAMQ,iBAAiBv1B,KAAKy1M,oBAC5B,OACA1gL,EAAMQ,iBAAiBv1B,KAAKk5H,kBAG9Bl5H,KAAK21M,2BAA6B,WAAY5gL,EAAMM,iBAAkB,cAAe,UAErFr1B,KAAK41M,0BACH,WACA7gL,EAAM2B,oBACN,mBACA,QACA,cACA3B,EAAMI,eAAen1B,KAAK21M,4BAG5B31M,KAAK61M,2BACH,QACA9gL,EAAMM,iBACN,QACA,UACA,aACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,gBACA,UAGFr1B,KAAK81M,2BACH,QACA,UACA,aACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,gBACA,UAGF91M,KAAK+1M,+BAAiC,aAAc,KAAM,UAAW,GAAI,gBAAiB,UAE1F/1M,KAAKg2M,uBACH,aACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,cACAjhL,EAAMI,eAAen1B,KAAK01M,wBAC1B,gBACA3gL,EAAMI,eAAen1B,KAAK41M,0BAC1B,iBACA7gL,EAAMI,eAAen1B,KAAK61M,2BAC1B,mBACA9gL,EAAMI,eAAen1B,KAAK61M,2BAC1B,iBACA9gL,EAAMI,eAAen1B,KAAK81M,2BAC1B,gBACA/gL,EAAMI,eAAen1B,KAAK+1M,gCAG5B/1M,KAAKg3B,OAASh3B,KAAKi2M,kBACjB,aACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,aACAlhL,EAAMI,eAAen1B,KAAKg2M,yBAK9B1gK,EAAG,WACDt1C,KAAKk2M,sBACH,aACAnhL,EAAMI,eAAe,UACrB,cACAJ,EAAMI,gBAAgB,KAAM,UAAW,IACvC,eACAJ,EAAMI,eAAe,UAGvBn1B,KAAKq1M,iBACH,cACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,IAGpBr1M,KAAKs1M,oBAAsB,UAAW,KAAM,UAAW,GAAI,SAAU,WAErEt1M,KAAKu1M,qBAAuB,MAAO,KAAM,UAAW,GAAI,MAAO,KAAM,UAAW,GAAI,SAAU,WAE9Fv1M,KAAKw1M,kBACH,UACAzgL,EAAMI,eAAe,UACrB,WACAJ,EAAMI,gBAAgB,KAAM,UAAW,IACvC,YACC,KAAM,UAAW,GAClB,YACAJ,EAAMI,eAAe,UAGvBn1B,KAAKy1M,oBACH,QACA1gL,EAAMI,eAAen1B,KAAKq1M,iBAC1B,UACAtgL,EAAMI,eAAen1B,KAAKs1M,oBAC1B,WACAvgL,EAAMI,eAAen1B,KAAKu1M,qBAC1B,SACAxgL,EAAMI,eAAen1B,KAAKw1M,mBAG5Bx1M,KAAK64H,iBACH,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,QACA,SACA,YACA,UACA,cACA,SAGF74H,KAAK84H,aACH,aACA/jG,EAAMI,eAAeJ,EAAMM,kBAC3B,SACAN,EAAMI,eAAen1B,KAAK64H,iBAC1B,SACA,SAGF74H,KAAK+4H,aAAe,WAAY,KAAM,SAAU,GAAI,YAAahkG,EAAMI,eAAe,WAEtFn1B,KAAKg5H,iBACH,UACAjkG,EAAMI,eAAe,UACrB,WACAJ,EAAMI,gBAAgB,KAAM,UAAW,IACvC,QACAJ,EAAMI,eAAen1B,KAAK+4H,aAC1B,YACC,KAAM,UAAW,GAClB,YACAhkG,EAAMI,eAAe,SACrB,WACAJ,EAAMI,eAAe,UAGvBn1B,KAAKi5H,oBAAsB,SAAUlkG,EAAMI,eAAeJ,EAAMM,mBAEhEr1B,KAAKk5H,iBACH,QACAnkG,EAAMI,eAAen1B,KAAK84H,aAC1B,SACA/jG,EAAMI,eAAen1B,KAAKg5H,iBAC1B,WACAjkG,EAAMI,eAAen1B,KAAKi5H,qBAG5Bj5H,KAAKm2M,wBACH,OACAphL,EAAMQ,iBAAiBv1B,KAAKk2M,sBAC5B,UACAnhL,EAAMQ,iBAAiBv1B,KAAKy1M,oBAC5B,OACA1gL,EAAMQ,iBAAiBv1B,KAAKk5H,kBAG9Bl5H,KAAKo2M,2BAA6B,WAAYrhL,EAAMM,iBAAkB,cAAe,UAErFr1B,KAAKq2M,0BACH,WACAthL,EAAM2B,oBACN,mBACA,QACA,cACA3B,EAAMI,eAAen1B,KAAKo2M,4BAG5Bp2M,KAAKs2M,2BACH,QACAvhL,EAAMM,iBACN,QACA,UACA,aACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,gBACA,UAGFr1B,KAAKu2M,2BACH,QACA,UACA,aACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,gBACA,UAGFv2M,KAAKw2M,+BAAiC,aAAc,KAAM,UAAW,GAAI,gBAAiB,UAE1Fx2M,KAAKy2M,uBACH,aACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,cACA1hL,EAAMI,eAAen1B,KAAKm2M,wBAC1B,gBACAphL,EAAMI,eAAen1B,KAAKq2M,0BAC1B,iBACAthL,EAAMI,eAAen1B,KAAKs2M,2BAC1B,iBACAvhL,EAAMI,eAAen1B,KAAKu2M,2BAC1B,gBACAxhL,EAAMI,eAAen1B,KAAKw2M,gCAG5Bx2M,KAAKg3B,OAASh3B,KAAK02M,kBACjB,aACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,aACA3hL,EAAMI,eAAen1B,KAAKy2M,yBAK9B9/J,EAAG,WACD32C,KAAK22M,sBACH,aACA5hL,EAAMI,eAAe,UACrB,cACAJ,EAAMI,gBAAgB,KAAM,UAAW,IACvC,eACAJ,EAAMI,eAAe,UAGvBn1B,KAAKq1M,iBACH,cACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,IAGpBr1M,KAAKs1M,oBAAsB,UAAW,KAAM,UAAW,GAAI,SAAU,WAErEt1M,KAAKu1M,qBAAuB,MAAO,KAAM,UAAW,GAAI,MAAO,KAAM,UAAW,GAAI,SAAU,WAE9Fv1M,KAAKw1M,kBACH,UACAzgL,EAAMI,eAAe,UACrB,WACAJ,EAAMI,gBAAgB,KAAM,UAAW,IACvC,YACC,KAAM,UAAW,GAClB,YACAJ,EAAMI,eAAe,UAGvBn1B,KAAKy1M,oBACH,QACA1gL,EAAMI,eAAen1B,KAAKq1M,iBAC1B,UACAtgL,EAAMI,eAAen1B,KAAKs1M,oBAC1B,WACAvgL,EAAMI,eAAen1B,KAAKu1M,qBAC1B,SACAxgL,EAAMI,eAAen1B,KAAKw1M,mBAG5Bx1M,KAAK64H,iBACH,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,QACA,SACA,YACA,UACA,cACA,SAGF74H,KAAK84H,aACH,aACA/jG,EAAMI,eAAeJ,EAAMM,kBAC3B,SACAN,EAAMI,eAAen1B,KAAK64H,iBAC1B,SACA,SAGF74H,KAAK+4H,aAAe,WAAY,KAAM,SAAU,GAAI,YAAahkG,EAAMI,eAAe,WAEtFn1B,KAAKg5H,iBACH,UACAjkG,EAAMI,eAAe,UACrB,WACAJ,EAAMI,gBAAgB,KAAM,UAAW,IACvC,QACAJ,EAAMI,eAAen1B,KAAK+4H,aAC1B,YACC,KAAM,UAAW,GAClB,YACAhkG,EAAMI,eAAe,SACrB,WACAJ,EAAMI,eAAe,UAGvBn1B,KAAKi5H,oBAAsB,SAAUlkG,EAAMI,eAAeJ,EAAMM,mBAEhEr1B,KAAKk5H,iBACH,QACAnkG,EAAMI,eAAen1B,KAAK84H,aAC1B,SACA/jG,EAAMI,eAAen1B,KAAKg5H,iBAC1B,WACAjkG,EAAMI,eAAen1B,KAAKi5H,qBAG5Bj5H,KAAK42M,wBACH,OACA7hL,EAAMQ,iBAAiBv1B,KAAK22M,sBAC5B,UACA5hL,EAAMQ,iBAAiBv1B,KAAKy1M,oBAC5B,OACA1gL,EAAMQ,iBAAiBv1B,KAAKk5H,kBAG9Bl5H,KAAK62M,2BAA6B,WAAY9hL,EAAMM,iBAAkB,cAAe,UAErFr1B,KAAK82M,0BACH,WACA/hL,EAAM2B,oBACN,mBACA,QACA,cACA3B,EAAMI,eAAen1B,KAAK62M,4BAG5B72M,KAAK+2M,2BACH,QACAhiL,EAAMM,iBACN,QACA,UACA,aACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,gBACA,UAGFr1B,KAAKg3M,2BACH,QACA,UACA,aACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,gBACA,UAGFh3M,KAAKi3M,+BAAiC,aAAc,KAAM,UAAW,GAAI,gBAAiB,UAE1Fj3M,KAAKg3B,OAASh3B,KAAKk3M,kBACjB,aACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,cACAniL,EAAMI,eAAen1B,KAAK42M,wBAC1B,gBACA7hL,EAAMI,eAAen1B,KAAK82M,0BAC1B,iBACA/hL,EAAMI,eAAen1B,KAAK+2M,2BAC1B,iBACAhiL,EAAMI,eAAen1B,KAAKg3M,2BAC1B,gBACAjiL,EAAMI,eAAen1B,KAAKi3M,iCAK9Bl/J,EAAG,WACD/3C,KAAKm3M,sBACH,aACApiL,EAAMI,eAAe,UACrB,cACAJ,EAAMI,gBAAgB,KAAM,UAAW,IACvC,eACAJ,EAAMI,eAAe,UAGvBn1B,KAAKq1M,iBACH,cACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,IAGpBr1M,KAAKs1M,oBAAsB,UAAW,KAAM,UAAW,GAAI,SAAU,WAErEt1M,KAAKu1M,qBAAuB,MAAO,KAAM,UAAW,GAAI,MAAO,KAAM,UAAW,GAAI,SAAU,WAE9Fv1M,KAAKw1M,kBACH,UACAzgL,EAAMI,eAAe,UACrB,WACAJ,EAAMI,gBAAgB,KAAM,UAAW,IACvC,YACC,KAAM,UAAW,GAClB,YACAJ,EAAMI,eAAe,UAGvBn1B,KAAKy1M,oBACH,QACA1gL,EAAMI,eAAen1B,KAAKq1M,iBAC1B,UACAtgL,EAAMI,eAAen1B,KAAKs1M,oBAC1B,WACAvgL,EAAMI,eAAen1B,KAAKu1M,qBAC1B,SACAxgL,EAAMI,eAAen1B,KAAKw1M,mBAG5Bx1M,KAAKm5H,iBACH,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,SACA,UACA,QACA,SACA,YACA,UACA,cACA,SAGFn5H,KAAKo5H,aACH,aACArkG,EAAMI,eAAeJ,EAAMM,kBAC3B,SACAN,EAAMI,eAAen1B,KAAKm5H,iBAC1B,SACA,SAGFn5H,KAAKq5H,aAAe,WAAY,KAAM,SAAU,GAAI,YAAatkG,EAAMI,eAAe,WAEtFn1B,KAAKs5H,iBACH,UACAvkG,EAAMI,eAAe,UACrB,WACAJ,EAAMI,gBAAgB,KAAM,UAAW,IACvC,QACAJ,EAAMI,eAAen1B,KAAKq5H,aAC1B,YACC,KAAM,UAAW,GAClB,YACAtkG,EAAMI,eAAe,SACrB,eACAJ,EAAMI,eAAe,WAGvBn1B,KAAKu5H,iBACH,QACAxkG,EAAMI,eAAen1B,KAAKo5H,aAC1B,SACArkG,EAAMI,eAAen1B,KAAKs5H,kBAG5Bt5H,KAAKo3M,wBACH,OACAriL,EAAMQ,iBAAiBv1B,KAAKm3M,sBAC5B,UACApiL,EAAMQ,iBAAiBv1B,KAAKy1M,oBAC5B,OACA1gL,EAAMQ,iBAAiBv1B,KAAKu5H,kBAG9Bv5H,KAAKq3M,2BAA6B,WAAYtiL,EAAMM,iBAAkB,cAAe,UAErFr1B,KAAKs3M,0BACH,WACAviL,EAAM2B,oBACN,mBACA,QACA,cACA3B,EAAMI,eAAen1B,KAAKq3M,4BAG5Br3M,KAAKu3M,2BACH,QACAxiL,EAAMM,iBACN,QACA,UACA,aACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,gBACA,UAGFr1B,KAAKw3M,2BACH,QACA,UACA,aACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,gBACA,UAGFx3M,KAAKy3M,+BAAiC,aAAc,KAAM,UAAW,GAAI,gBAAiB,UAE1Fz3M,KAAKg3B,OAASh3B,KAAK03M,kBACjB,aACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,cACA3iL,EAAMI,eAAen1B,KAAKo3M,wBAC1B,gBACAriL,EAAMI,eAAen1B,KAAKs3M,0BAC1B,iBACAviL,EAAMI,eAAen1B,KAAKu3M,2BAC1B,iBACAxiL,EAAMI,eAAen1B,KAAKw3M,2BAC1B,gBACAziL,EAAMI,eAAen1B,KAAKy3M,iCAK9Bv+J,EAAG,WACDl5C,KAAK23M,sBACH,aACA5iL,EAAMI,eAAe,UACrB,cACAJ,EAAMI,gBAAgB,KAAM,UAAW,IACvC,eACAJ,EAAMI,eAAe,UAGvBn1B,KAAKq1M,iBACH,cACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,IAGpBr1M,KAAKs1M,oBAAsB,UAAW,KAAM,UAAW,GAAI,SAAU,WAErEt1M,KAAKu1M,qBAAuB,MAAO,KAAM,UAAW,GAAI,MAAO,KAAM,UAAW,GAAI,SAAU,WAE9Fv1M,KAAKw1M,kBACH,UACAzgL,EAAMI,eAAe,UACrB,WACAJ,EAAMI,gBAAgB,KAAM,UAAW,IACvC,YACC,KAAM,UAAW,GAClB,YACAJ,EAAMI,eAAe,UAGvBn1B,KAAKy1M,oBACH,QACA1gL,EAAMI,eAAen1B,KAAKq1M,iBAC1B,UACAtgL,EAAMI,eAAen1B,KAAKs1M,oBAC1B,WACAvgL,EAAMI,eAAen1B,KAAKu1M,qBAC1B,SACAxgL,EAAMI,eAAen1B,KAAKw1M,mBAG5Bx1M,KAAKm5H,iBACH,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,SACA,UACA,QACA,SACA,YACA,UACA,cACA,SAGFn5H,KAAKo5H,aACH,aACArkG,EAAMI,eAAeJ,EAAMM,kBAC3B,SACAN,EAAMI,eAAen1B,KAAKm5H,iBAC1B,SACA,SAGFn5H,KAAKq5H,aAAe,WAAY,KAAM,SAAU,GAAI,YAAatkG,EAAMI,eAAe,WAEtFn1B,KAAKs5H,iBACH,UACAvkG,EAAMI,eAAe,UACrB,WACAJ,EAAMI,gBAAgB,KAAM,UAAW,IACvC,QACAJ,EAAMI,eAAen1B,KAAKq5H,aAC1B,YACC,KAAM,UAAW,GAClB,YACAtkG,EAAMI,eAAe,SACrB,eACAJ,EAAMI,eAAe,WAGvBn1B,KAAKu5H,iBACH,QACAxkG,EAAMI,eAAen1B,KAAKo5H,aAC1B,SACArkG,EAAMI,eAAen1B,KAAKs5H,kBAG5Bt5H,KAAK43M,wBACH,OACA7iL,EAAMQ,iBAAiBv1B,KAAK23M,sBAC5B,UACA5iL,EAAMQ,iBAAiBv1B,KAAKy1M,oBAC5B,OACA1gL,EAAMQ,iBAAiBv1B,KAAKu5H,kBAG9Bv5H,KAAK63M,2BAA6B,WAAY9iL,EAAMM,iBAAkB,cAAe,UAErFr1B,KAAK83M,0BACH,WACA/iL,EAAMoB,oBACN,mBACA,QACA,cACApB,EAAMI,eAAen1B,KAAK63M,4BAG5B73M,KAAK+3M,2BACH,QACAhjL,EAAMM,iBACN,QACA,UACA,aACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,gBACA,UAGFr1B,KAAKg4M,2BACH,QACA,UACA,aACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,gBACA,UAGFh4M,KAAKi4M,+BAAiC,aAAc,KAAM,UAAW,GAAI,gBAAiB,UAE1Fj4M,KAAKg3B,OAASh3B,KAAKk4M,kBACjB,aACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,cACAnjL,EAAMI,eAAen1B,KAAK43M,wBAC1B,gBACA7iL,EAAMI,eAAen1B,KAAK83M,0BAC1B,iBACA/iL,EAAMI,eAAen1B,KAAK+3M,2BAC1B,iBACAhjL,EAAMI,eAAen1B,KAAKg4M,2BAC1B,gBACAjjL,EAAMI,eAAen1B,KAAKi4M,iCAK9B79J,EAAG,WACDp6C,KAAKm4M,sBACH,aACApjL,EAAMI,eAAe,UACrB,cACAJ,EAAMI,gBAAgB,KAAM,UAAW,IACvC,eACAJ,EAAMI,eAAe,UAGvBn1B,KAAKo4M,2BAA6B,QAAS,UAAW,cAAerjL,EAAMI,eAAe,UAE1Fn1B,KAAKq4M,0BAA4B,sBAAuBtjL,EAAMI,eAAe,WAE7En1B,KAAKs4M,2BACH,SACC,KAAM,SAAU,GACjB,QACA,UACA,aACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,gBACA,UAGFt4M,KAAKu4M,2BACH,QACA,UACA,aACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,gBACA,UAGFv4M,KAAKg3B,OAASh3B,KAAKw4M,kBACjB,aACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,YACAzjL,EAAMI,eAAen1B,KAAKm4M,sBAC1B,aACApjL,EAAMI,eAAen1B,KAAKo4M,2BAC1B,gBACArjL,EAAMI,eAAen1B,KAAKq4M,0BAC1B,iBACAtjL,EAAMI,eAAen1B,KAAKs4M,2BAC1B,iBACAvjL,EAAMI,eAAen1B,KAAKu4M,6BAK9Bj9J,EAAG,WACDt7C,KAAKy4M,2BAA6B,QAAS,UAAW,cAAe1jL,EAAMI,eAAe,UAE1Fn1B,KAAK04M,0BAA4B,sBAAuB3jL,EAAMI,eAAe,WAE7En1B,KAAK24M,2BACH,SACC,KAAM,SAAU,GACjB,QACA,UACA,aACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,gBACA,UAGF34M,KAAK44M,2BACH,QACA,UACA,aACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,gBACA,UAGF54M,KAAKg3B,OAASh3B,KAAK64M,kBACjB,aACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,aACA9jL,EAAMI,eAAen1B,KAAKy4M,2BAC1B,gBACA1jL,EAAMI,eAAen1B,KAAK04M,0BAC1B,iBACA3jL,EAAMI,eAAen1B,KAAK24M,2BAC1B,iBACA5jL,EAAMI,eAAen1B,KAAK44M,6BAK9B33M,EAAG,WACDjB,KAAK84M,2BAA6B,QAAS,UAAW,cAAe/jL,EAAMI,eAAe,UAE1Fn1B,KAAK+4M,0BAA4B,sBAAuBhkL,EAAMI,eAAe,WAE7En1B,KAAKg5M,2BACH,SACC,KAAM,SAAU,GACjB,QACA,UACA,aACC,KAAM,UAAW,GAClB,UACC,KAAM,UAAW,GAClB,gBACA,UAGFh5M,KAAKg3B,OAASh3B,KAAKi5M,kBACjB,aACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,aACAlkL,EAAMI,eAAen1B,KAAK84M,2BAC1B,gBACA/jL,EAAMI,eAAen1B,KAAK+4M,0BAC1B,iBACAhkL,EAAMI,eAAen1B,KAAKg5M,wFCxmCpC,IAAMjkL,EAAQt0B,EAAQ,6BAEtBf,EAAOD,UAMHyB,KAAM,OACN8zB,UAEEgf,EAAG,WACDh0C,KAAKk5M,iBACH,cACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,IAGpBl5M,KAAKm5M,oBAAsB,UAAW,KAAM,UAAW,GAAI,SAAU,WAErEn5M,KAAKo5M,qBAAuB,MAAO,KAAM,UAAW,GAAI,MAAO,KAAM,UAAW,GAAI,SAAU,WAE9Fp5M,KAAKq5M,kBACH,UACAtkL,EAAMI,eAAe,UACrB,WACAJ,EAAMI,gBAAgB,KAAM,UAAW,IACvC,YACC,KAAM,UAAW,GAClB,YACAJ,EAAMI,eAAe,SACrB,WACAJ,EAAMI,eAAe,UAGvBn1B,KAAKs5M,gBAAkB,SAAUvkL,EAAMI,eAAeJ,EAAMM,mBAE5Dr1B,KAAKg3B,OAASh3B,KAAKu5M,oBACjB,QACAxkL,EAAMI,eAAen1B,KAAKk5M,iBAC1B,UACAnkL,EAAMI,eAAen1B,KAAKm5M,oBAC1B,WACApkL,EAAMI,eAAen1B,KAAKo5M,qBAC1B,SACArkL,EAAMI,eAAen1B,KAAKq5M,kBAC1B,WACAtkL,EAAMI,eAAen1B,KAAKs5M,kBAK9BhkK,EAAG,WACDt1C,KAAKq1M,iBACH,cACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,IAGpBr1M,KAAKs1M,oBAAsB,UAAW,KAAM,UAAW,GAAI,SAAU,WAErEt1M,KAAKu1M,qBAAuB,MAAO,KAAM,UAAW,GAAI,MAAO,KAAM,UAAW,GAAI,SAAU,WAE9Fv1M,KAAKw1M,kBACH,UACAzgL,EAAMI,eAAe,UACrB,WACAJ,EAAMI,gBAAgB,KAAM,UAAW,IACvC,YACC,KAAM,UAAW,GAClB,YACAJ,EAAMI,eAAe,UAGvBn1B,KAAKg3B,OAASh3B,KAAKy1M,oBACjB,QACA1gL,EAAMI,eAAen1B,KAAKq1M,iBAC1B,UACAtgL,EAAMI,eAAen1B,KAAKs1M,oBAC1B,WACAvgL,EAAMI,eAAen1B,KAAKu1M,qBAC1B,SACAxgL,EAAMI,eAAen1B,KAAKw1M,oBAK9B7+J,EAAG,WACD32C,KAAKw5M,qBAAuB,SAAUzkL,EAAMI,eAAeJ,EAAMM,mBAEjEr1B,KAAKy5M,iBACH,UACA,QACA,cACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,IAGpBz5M,KAAK05M,oBAAsB,UAAW,QAAS,UAAW,KAAM,UAAW,GAAI,SAAU,WAEzF15M,KAAK25M,qBACH,UACA,QACA,MACC,KAAM,UAAW,GAClB,MACC,KAAM,UAAW,GAClB,SACA,WAGF35M,KAAK45M,kBACH,WACA7kL,EAAMI,eAAe,SACrB,UACAJ,EAAMI,eAAe,UACrB,WACAJ,EAAMI,gBAAgB,KAAM,UAAW,IACvC,YACC,KAAM,UAAW,GAClB,YACAJ,EAAMI,eAAe,UAGvBn1B,KAAK65M,uBAAyB,aAAc,UAE5C75M,KAAK85M,qBAAuB,aAAc,SAAU,QAAS,UAE7D95M,KAAK+5M,mBAAqB,aAAc,UAExC/5M,KAAKg3B,OAASh3B,KAAKg6M,oBACjB,WACAjlL,EAAMI,eAAen1B,KAAKw5M,qBAC1B,QACAzkL,EAAMI,eAAen1B,KAAKy5M,iBAC1B,UACA1kL,EAAMI,eAAen1B,KAAK05M,oBAC1B,WACA3kL,EAAMI,eAAen1B,KAAK25M,qBAC1B,SACA5kL,EAAMI,eAAen1B,KAAK45M,kBAC1B,kBACA7kL,EAAMI,eAAen1B,KAAK65M,uBAC1B,gBACA9kL,EAAMI,eAAen1B,KAAK85M,qBAC1B,cACA/kL,EAAMI,eAAen1B,KAAK+5M,qBAK9BhiK,EAAG,WACD/3C,KAAKi6M,qBAAuB,SAAUllL,EAAMI,eAAeJ,EAAMM,mBAEjEr1B,KAAKk6M,iBACH,UACA,QACA,cACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,IAGpBl6M,KAAKm6M,oBAAsB,UAAW,QAAS,UAAW,KAAM,UAAW,GAAI,SAAU,WAEzFn6M,KAAKo6M,kBACH,WACArlL,EAAMI,eAAe,SACrB,UACAJ,EAAMI,eAAe,UACrB,WACAJ,EAAMI,gBAAgB,KAAM,UAAW,IACvC,YACC,KAAM,UAAW,GAClB,YACAJ,EAAMI,eAAe,UAGvBn1B,KAAKq6M,uBAAyB,aAAc,UAE5Cr6M,KAAKs6M,qBAAuB,aAAc,SAAU,QAAS,UAE7Dt6M,KAAKu6M,mBAAqB,aAAc,UAExCv6M,KAAKg3B,OAASh3B,KAAKw6M,oBACjB,WACAzlL,EAAMI,eAAen1B,KAAKi6M,qBAC1B,QACAllL,EAAMI,eAAen1B,KAAKk6M,iBAC1B,UACAnlL,EAAMI,eAAen1B,KAAKm6M,oBAC1B,SACAplL,EAAMI,eAAen1B,KAAKo6M,kBAC1B,kBACArlL,EAAMI,eAAen1B,KAAKq6M,uBAC1B,gBACAtlL,EAAMI,eAAen1B,KAAKs6M,qBAC1B,cACAvlL,EAAMI,eAAen1B,KAAKu6M,qBAK9BrhK,EAAG,WACDl5C,KAAKy6M,cAAgB,WAAY1lL,EAAMI,eAAe,UAEtDn1B,KAAK06M,qBAAuB,SAAU3lL,EAAMI,eAAeJ,EAAMM,mBAEjEr1B,KAAK26M,uBAAyB,aAAc,UAE5C36M,KAAK46M,qBAAuB,aAAc,SAAU,QAAS,UAE7D56M,KAAK66M,mBAAqB,aAAc,UAExC76M,KAAKg3B,OAASh3B,KAAK86M,oBACjB,YACA/lL,EAAMI,eAAe,SACrB,SACAJ,EAAMI,eAAen1B,KAAKy6M,cAC1B,WACA1lL,EAAMI,eAAen1B,KAAK06M,qBAC1B,kBACA3lL,EAAMI,eAAen1B,KAAK26M,uBAC1B,gBACA5lL,EAAMI,eAAen1B,KAAK46M,qBAC1B,cACA7lL,EAAMI,eAAen1B,KAAK66M,qBAK9BzgK,EAAG,WACDp6C,KAAK+6M,cAAgB,WAAYhmL,EAAMI,eAAe,UAEtDn1B,KAAKg7M,qBAAuB,SAAUjmL,EAAMI,eAAeJ,EAAMM,mBAEjEr1B,KAAKi7M,uBAAyB,aAAc,UAE5Cj7M,KAAKk7M,qBAAuB,aAAc,SAAU,QAAS,UAE7Dl7M,KAAKm7M,mBAAqB,aAAc,UAExCn7M,KAAKo7M,oBAAsB,WAAYrmL,EAAMI,gBAAgB,KAAM,UAAW,KAE9En1B,KAAKg3B,OAASh3B,KAAKq7M,oBACjB,YACAtmL,EAAMI,eAAe,SACrB,SACAJ,EAAMI,eAAen1B,KAAK+6M,cAC1B,WACAhmL,EAAMI,eAAen1B,KAAKg7M,qBAC1B,kBACAjmL,EAAMI,eAAen1B,KAAKi7M,uBAC1B,gBACAlmL,EAAMI,eAAen1B,KAAKk7M,qBAC1B,cACAnmL,EAAMI,eAAen1B,KAAKm7M,mBAC1B,QACApmL,EAAMI,eAAen1B,KAAKo7M,sBAK9B9/J,EAAG,WACDt7C,KAAKs7M,cAAgB,cAAe,UAEpCt7M,KAAKu7M,uBAAyB,aAAc,UAE5Cv7M,KAAKw7M,mBAAqB,aAAc,UAExCx7M,KAAKy7M,mBAAqB,aAAc,UAExCz7M,KAAK07M,oBAAsB,WAAY3mL,EAAMI,gBAAgB,KAAM,UAAW,KAE9En1B,KAAKg3B,OAASh3B,KAAK27M,oBACjB,YACA5mL,EAAMI,eAAe,SACrB,SACAJ,EAAMI,eAAen1B,KAAKs7M,cAC1B,kBACAvmL,EAAMI,eAAen1B,KAAKu7M,uBAC1B,cACAxmL,EAAMI,eAAen1B,KAAKw7M,mBAC1B,cACAzmL,EAAMI,eAAen1B,KAAKy7M,mBAC1B,QACA1mL,EAAMI,eAAen1B,KAAK07M,sBAK9Bz6M,EAAG,WACDjB,KAAK47M,cAAgB,cAAe,UAEpC57M,KAAK67M,uBAAyB,aAAc,UAE5C77M,KAAK87M,mBAAqB,aAAc,UAExC97M,KAAK+7M,oBAAsB,WAAYhnL,EAAMI,gBAAgB,KAAM,UAAW,KAE9En1B,KAAKg3B,OAASh3B,KAAKg8M,oBACjB,YACAjnL,EAAMI,eAAe,SACrB,SACAJ,EAAMI,eAAen1B,KAAK47M,cAC1B,kBACA7mL,EAAMI,eAAen1B,KAAK67M,uBAC1B,cACA9mL,EAAMI,eAAen1B,KAAK87M,mBAC1B,QACA/mL,EAAMI,eAAen1B,KAAK+7M,sBAK9Bt+J,EAAG,WACDz9C,KAAKi8M,cAAgB,cAAe,UAEpCj8M,KAAKk8M,uBAAyB,aAAc,UAE5Cl8M,KAAKm8M,mBAAqB,aAAc,UAExCn8M,KAAKg3B,OAASh3B,KAAKo8M,oBACjB,YACArnL,EAAMI,eAAe,SACrB,SACAJ,EAAMI,eAAen1B,KAAKi8M,cAC1B,kBACAlnL,EAAMI,eAAen1B,KAAKk8M,uBAC1B,cACAnnL,EAAMI,eAAen1B,KAAKm8M,gFCrVpC,IAAMpnL,EAAQt0B,EAAQ,6BAEtBf,EAAOD,UAMHyB,KAAM,OACN8zB,UAEEsmB,EAAG,WACDt7C,KAAKq8M,8BACH,cACAtnL,EAAMI,eAAe,SACrB,mBACAJ,EAAMI,eAAe,SACrB,kBACAJ,EAAMI,eAAe,UAGvBn1B,KAAKg3B,OAASh3B,KAAKs8M,yBACjB,aACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,aACC,KAAM,SAAU,GACjB,gBACA,UACA,aACAvnL,EAAMI,eAAen1B,KAAKq8M,gCAK9Bp7M,EAAG,WACDjB,KAAKu8M,8BACH,aACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,cACAxnL,EAAMI,eAAe,SACrB,mBACAJ,EAAMI,eAAe,SACrB,kBACAJ,EAAMI,eAAe,UAGvBn1B,KAAKg3B,OAASh3B,KAAKw8M,yBACjB,aACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,aACC,KAAM,SAAU,GACjB,aACAznL,EAAMI,eAAen1B,KAAKu8M,gCAK9B9+J,EAAG,WACDz9C,KAAKy8M,8BACH,aACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,cACA1nL,EAAMI,eAAe,SACrB,mBACAJ,EAAMI,eAAe,UAGvBn1B,KAAKg3B,OAASh3B,KAAK08M,yBACjB,aACC,KAAM,UAAW,GAClB,aACC,KAAM,UAAW,GAClB,aACC,KAAM,SAAU,GACjB,aACA3nL,EAAMI,eAAen1B,KAAKy8M,2FCnFpC,IAAM1nL,EAAQt0B,EAAQ,6BAEtBf,EAAOD,UAMHyB,KAAM,OACN8zB,UAEEyoB,EAAG,WACDz9C,KAAK28M,uBACH,QACA,SACA,WACA,SACA,WACA,SACA,YACC,KAAM,UAAW,GAClB,OACA,UAGF38M,KAAK48M,wBAA0B,WAAY,SAAU,aAAc,SAAU,WAAY,UAEzF58M,KAAKg3B,OAASh3B,KAAK68M,6BACjB,SACA,SACA,qBACA,SACA,qBACA,SACA,cACA,SACA,oBACA,SACA,kBACA,SACA,gBACA,SACA,YACA9nL,EAAMI,eAAen1B,KAAK28M,uBAC1B,WACA5nL,EAAMI,eAAen1B,KAAK48M,wBAC1B,OACA7nL,EAAMI,eAAe,sEC/C/B,IAAMJ,EAAQt0B,EAAQ,6BAEtBf,EAAOD,UAMHyB,KAAM,OACN8zB,UAEEgN,GAAI,WACFhiC,KAAK88M,wBAA0B,QAAS,SAAU,YAAa,KAAM,UAAW,GAAI,WAAY,UAEhG98M,KAAK+8M,mBACH,WACAhoL,EAAMoB,oBACN,eACApB,EAAMI,eAAeJ,EAAMoB,qBAC3B,YACApB,EAAMI,eAAen1B,KAAK88M,wBAC1B,OACA/nL,EAAMM,iBACN,cACAN,EAAMM,iBACN,UACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,SACC,KAAM,QAAS,GAChB,QACA,UACA,OACA,UACA,OACA,UACA,QACA,SACA,WACA,SACA,UACA,SACA,WACA,SACA,OACA,QACA,YACA,SAGFr1B,KAAKg9M,0BACH,WACAjoL,EAAMoB,oBACN,eACApB,EAAMI,eAAeJ,EAAMoB,qBAC3B,YACApB,EAAMI,eAAen1B,KAAK88M,wBAC1B,OACA/nL,EAAMM,iBACN,cACAN,EAAMM,iBACN,UACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,SACC,KAAM,QAAS,GAChB,QACA,UACA,OACA,UACA,OACA,UACA,QACA,SACA,WACA,SACA,UACA,SACA,WACA,SACA,OACA,QACA,YACA,QACA,eACAN,EAAMM,kBAGRr1B,KAAKi9M,yBACH,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,QACA,WAGFj9M,KAAKk9M,2BACH,WACAnoL,EAAMoB,oBACN,eACApB,EAAMI,eAAeJ,EAAMoB,qBAC3B,YACApB,EAAMI,eAAen1B,KAAK88M,wBAC1B,OACA/nL,EAAMM,iBACN,cACAN,EAAMM,iBACN,UACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,SACC,KAAM,QAAS,GAChB,QACA,UACA,OACA,UACA,OACA,UACA,QACA,SACA,WACA,SACA,UACA,SACA,WACA,SACA,OACA,QACA,YACA,QACA,aACAN,EAAMI,eAAen1B,KAAKi9M,yBAC1B,gBACAloL,EAAMI,eAAeJ,EAAMM,mBAG7Br1B,KAAKm9M,uBACH,OACApoL,EAAMM,iBACN,YACA,SACA,WACA,QACA,WACAN,EAAMI,eAAeJ,EAAMM,mBAG7Br1B,KAAKo9M,uBACH,WACAroL,EAAMoB,oBACN,eACApB,EAAMI,eAAeJ,EAAMoB,qBAC3B,YACApB,EAAMI,eAAen1B,KAAK88M,wBAC1B,OACA/nL,EAAMM,iBACN,cACAN,EAAMM,iBACN,UACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,SACC,KAAM,QAAS,GAChB,QACA,UACA,OACA,UACA,OACA,UACA,QACA,SACA,WACA,SACA,UACA,SACA,WACA,SACA,OACA,QACA,YACA,QACA,YACA,SACA,WACA,QACA,SACAN,EAAMM,iBACN,cACC,KAAM,UAAW,IAGpBr1B,KAAKq9M,yBACH,OACAtoL,EAAMM,iBACN,YACA,SACA,WACA,QACA,WACAN,EAAMI,eAAeJ,EAAMM,kBAC3B,iBACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,QACA,WAGFr1B,KAAK2iI,oBAAsB,iBAAkB5tG,EAAMI,eAAe,UAElEn1B,KAAKg3B,OAASh3B,KAAKs9M,gBACjB,YACAvoL,EAAMI,eAAen1B,KAAK+8M,mBAC1B,gBACAhoL,EAAMI,eAAen1B,KAAKg9M,0BAC1B,oBACAjoL,EAAMI,eAAen1B,KAAKk9M,2BAC1B,gBACAnoL,EAAMI,eAAen1B,KAAKm9M,uBAC1B,gBACApoL,EAAMI,eAAen1B,KAAKo9M,uBAC1B,kBACAroL,EAAMI,eAAen1B,KAAKq9M,yBAC1B,WACAtoL,EAAM2B,oBACN,aACA12B,KAAK2iI,mBACL,cACA,WAKJn/F,GAAI,WACFxjC,KAAKu9M,wBAA0B,QAAS,SAAU,YAAa,KAAM,UAAW,GAAI,WAAY,UAEhGv9M,KAAKw9M,mBACH,WACAzoL,EAAMoB,oBACN,eACApB,EAAMI,eAAeJ,EAAMoB,qBAC3B,YACApB,EAAMI,eAAen1B,KAAKu9M,wBAC1B,OACAxoL,EAAMM,iBACN,cACAN,EAAMM,iBACN,UACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,SACC,KAAM,QAAS,GAChB,QACA,UACA,OACA,UACA,OACA,UACA,QACA,SACA,UACA,SACA,WACA,SACA,OACA,QACA,YACA,SAGFr1B,KAAKy9M,0BACH,WACA1oL,EAAMoB,oBACN,eACApB,EAAMI,eAAeJ,EAAMoB,qBAC3B,YACApB,EAAMI,eAAen1B,KAAKu9M,wBAC1B,OACAxoL,EAAMM,iBACN,cACAN,EAAMM,iBACN,UACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,SACC,KAAM,QAAS,GAChB,QACA,UACA,OACA,UACA,OACA,UACA,QACA,SACA,UACA,SACA,WACA,SACA,OACA,QACA,YACA,QACA,eACAN,EAAMM,kBAGRr1B,KAAK09M,yBACH,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,QACA,WAGF19M,KAAK29M,2BACH,WACA5oL,EAAMoB,oBACN,eACApB,EAAMI,eAAeJ,EAAMoB,qBAC3B,YACApB,EAAMI,eAAen1B,KAAKu9M,wBAC1B,OACAxoL,EAAMM,iBACN,cACAN,EAAMM,iBACN,UACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,SACC,KAAM,QAAS,GAChB,QACA,UACA,OACA,UACA,OACA,UACA,QACA,SACA,UACA,SACA,WACA,SACA,OACA,QACA,YACA,QACA,aACAN,EAAMI,eAAen1B,KAAK09M,yBAC1B,gBACA3oL,EAAMI,eAAeJ,EAAMM,mBAG7Br1B,KAAK49M,uBACH,OACA7oL,EAAMM,iBACN,YACA,SACA,WACA,QACA,WACAN,EAAMI,eAAeJ,EAAMM,mBAG7Br1B,KAAK69M,uBACH,WACA9oL,EAAMoB,oBACN,eACApB,EAAMI,eAAeJ,EAAMoB,qBAC3B,YACApB,EAAMI,eAAen1B,KAAKu9M,wBAC1B,OACAxoL,EAAMM,iBACN,cACAN,EAAMM,iBACN,UACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,SACC,KAAM,QAAS,GAChB,QACA,UACA,OACA,UACA,OACA,UACA,QACA,SACA,UACA,SACA,WACA,SACA,OACA,QACA,YACA,QACA,YACA,SACA,WACA,QACA,SACAN,EAAMM,iBACN,cACC,KAAM,UAAW,IAGpBr1B,KAAK89M,yBACH,OACA/oL,EAAMM,iBACN,YACA,SACA,WACA,QACA,WACAN,EAAMI,eAAeJ,EAAMM,kBAC3B,iBACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,G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B,gBACArpL,EAAMI,eAAen1B,KAAKq+M,uBAC1B,kBACAtpL,EAAMI,eAAen1B,KAAKs+M,yBAC1B,aACAt+M,KAAK2iI,mBACL,cACA,WAKJv8F,GAAI,WACFpmC,KAAKw+M,mBACH,WACAzpL,EAAMoB,oBACN,eACApB,EAAMI,eAAeJ,EAAMoB,qBAC3B,OACApB,EAAMM,iBACN,cACAN,EAAMM,iBACN,UACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,SACC,KAAM,QAAS,GAChB,QACA,UACA,OACA,UACA,OACA,UACA,QACA,SACA,UACA,SACA,WACA,SACA,OACA,QACA,YACA,SAGFr1B,KAAKy+M,0BACH,WACA1pL,EAAMoB,oBACN,eACApB,EAAMI,eAAeJ,EAAMoB,qBAC3B,OACApB,EAAMM,iBACN,cACAN,EAAMM,iBACN,UACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,SACC,KAAM,QAAS,GAChB,QACA,UACA,OACA,UACA,OACA,UACA,QACA,SACA,UACA,SACA,WACA,SACA,OACA,QACA,YACA,QACA,eACAN,EAAMM,kBAGRr1B,KAAK0+M,yBACH,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,QACA,WAGF1+M,KAAK2+M,2BACH,WACA5pL,EAAMoB,oBACN,eACApB,EAAMI,eAAeJ,EAAMoB,qBAC3B,OACApB,EAAMM,iBACN,cACAN,EAAMM,iBACN,UACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,SACC,KAAM,QAAS,GAChB,QACA,UACA,OACA,UACA,OACA,UACA,QACA,SACA,UACA,SACA,WACA,SACA,OACA,QACA,YACA,QACA,aACAN,EAAMI,eAAen1B,KAAK0+M,yBAC1B,gBACA3pL,EAAMI,eAAeJ,EAAMM,mBAG7Br1B,KAAK4+M,uBACH,OACA7pL,EAAMM,iBACN,YACA,SACA,WACA,QACA,WACAN,EAAMI,eAAeJ,EAAMM,mBAG7Br1B,KAAK6+M,uBACH,WACA9pL,EAAMoB,oBACN,eACApB,EAAMI,eAAeJ,EAAMoB,qBAC3B,OACApB,EAAMM,iBACN,cACAN,EAAMM,iBACN,UACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,SACC,KAAM,QAAS,GAChB,QACA,UACA,OACA,UACA,OACA,UACA,QACA,SACA,UACA,SACA,WACA,SACA,OACA,QACA,YACA,QACA,YACA,SACA,WACA,QACA,SACAN,EAAMM,iBACN,cACC,KAAM,UAAW,IAGpBr1B,KAAK8+M,yBACH,OACA/pL,EAAMM,iBACN,YACA,SACA,WACA,QACA,WACAN,EAAMI,eAAeJ,EAAMM,kBAC3B,iBACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,QACA,WAGFr1B,KAAK2iI,oBAAsB,iBAAkB5tG,EAAMI,eAAe,UAElEn1B,KAAKg3B,OAASh3B,KAAK++M,gBACjB,YACAhqL,EAAMI,eAAen1B,KAAKw+M,mBAC1B,gBACAzpL,EAAMI,eAAen1B,KAAKy+M,0BAC1B,oBACA1pL,EAAMI,eAAen1B,KAAK2+M,2BAC1B,gBACA5pL,EAAMI,eAAen1B,KAAK4+M,uBAC1B,gBACA7pL,EAAMI,eAAen1B,KAAK6+M,uBAC1B,kBACA9pL,EAAMI,eAAen1B,KAAK8+M,yBAC1B,aACA9+M,KAAK2iI,mBACL,cACA,WAKJj7F,GAAI,WACF1nC,KAAKg/M,mBACH,WACAjqL,EAAMoB,oBACN,eACApB,EAAMI,eAAeJ,EAAMoB,qBAC3B,OACApB,EAAMM,iBACN,cACAN,EAAMM,iBACN,UACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,SACC,KAAM,QAAS,GAChB,QACA,UACA,OACA,UACA,OACA,UACA,QACA,SACA,UACA,SACA,WACA,SACA,OACA,SAGFr1B,KAAKi/M,0BACH,WACAlqL,EAAMoB,oBACN,eACApB,EAAMI,eAAeJ,EAAMoB,qBAC3B,OACApB,EAAMM,iBACN,cACAN,EAAMM,iBACN,UACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,SACC,KAAM,QAAS,GAChB,QACA,UACA,OACA,UACA,OACA,UACA,QACA,SACA,UACA,SACA,WACA,SACA,OACA,QACA,eACAN,EAAMM,kBAGRr1B,KAAKk/M,yBACH,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,QACA,WAGFl/M,KAAKm/M,2BACH,WACApqL,EAAMoB,oBACN,eACApB,EAAMI,eAAeJ,EAAMoB,qBAC3B,OACApB,EAAMM,iBACN,cACAN,EAAMM,iBACN,UACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,SACC,KAAM,QAAS,GAChB,QACA,UACA,OACA,UACA,OACA,UACA,QACA,SACA,UACA,SACA,WACA,SACA,OACA,QACA,aACAN,EAAMI,eAAen1B,KAAKk/M,yBAC1B,gBACAnqL,EAAMI,eAAeJ,EAAMM,mBAG7Br1B,KAAKo/M,uBACH,OACArqL,EAAMM,iBACN,YACA,SACA,WACA,QACA,WACAN,EAAMI,eAAeJ,EAAMM,mBAG7Br1B,KAAKq/M,uBACH,WACAtqL,EAAMoB,oBACN,eACApB,EAAMI,eAAeJ,EAAMoB,qBAC3B,OACApB,EAAMM,iBACN,cACAN,EAAMM,iBACN,UACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,SACC,KAAM,QAAS,GAChB,QACA,UACA,OACA,UACA,OACA,UACA,QACA,SACA,UACA,SACA,WACA,SACA,OACA,QACA,YACA,SACA,WACA,QACA,SACAN,EAAMM,iBACN,cACC,KAAM,UAAW,IAGpBr1B,KAAKs/M,yBACH,OACAvqL,EAAMM,iBACN,YACA,SACA,WACA,QACA,WACAN,EAAMI,eAAeJ,EAAMM,kBAC3B,iBACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,QACA,WAGFr1B,KAAK2iI,oBAAsB,iBAAkB5tG,EAAMI,eAAe,UAElEn1B,KAAKg3B,OAASh3B,KAAKu/M,gBACjB,YACAxqL,EAAMI,eAAen1B,KAAKg/M,mBAC1B,gBACAjqL,EAAMI,eAAen1B,KAAKi/M,0BAC1B,oBACAlqL,EAAMI,eAAen1B,KAAKm/M,2BAC1B,gBACApqL,EAAMI,eAAen1B,KAAKo/M,uBAC1B,gBACArqL,EAAMI,eAAen1B,KAAKq/M,uBAC1B,kBACAtqL,EAAMI,eAAen1B,KAAKs/M,yBAC1B,aACAt/M,KAAK2iI,mBACL,cACA,WAKJ35F,GAAI,WACFhpC,KAAKw/M,mBACH,WACAzqL,EAAMoB,oBACN,eACApB,EAAMI,eAAeJ,EAAMoB,qBAC3B,OACApB,EAAMM,iBACN,cACAN,EAAMM,iBACN,UACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,SACC,KAAM,QAAS,GAChB,QACA,UACA,OACA,UACA,OACA,UACA,QACA,SACA,UACA,SACA,WACA,SACA,OACA,SAGFr1B,KAAKy/M,0BACH,WACA1qL,EAAMoB,oBACN,eACApB,EAAMI,eAAeJ,EAAMoB,qBAC3B,OACApB,EAAMM,iBACN,cACAN,EAAMM,iBACN,UACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,SACC,KAAM,QAAS,GAChB,QACA,UACA,OACA,UACA,OACA,UACA,QACA,SACA,UACA,SACA,WACA,SACA,OACA,QACA,eACAN,EAAMM,kBAGRr1B,KAAK0/M,yBACH,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,QACA,WAGF1/M,KAAK2/M,2BACH,WACA5qL,EAAMoB,oBACN,eACApB,EAAMI,eAAeJ,EAAMoB,qBAC3B,OACApB,EAAMM,iBACN,cACAN,EAAMM,iBACN,UACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,SACC,KAAM,QAAS,GAChB,QACA,UACA,OACA,UACA,OACA,UACA,QACA,SACA,UACA,SACA,WACA,SACA,OACA,QACA,aACAN,EAAMI,eAAen1B,KAAK0/M,yBAC1B,gBACA3qL,EAAMI,eAAeJ,EAAMM,mBAG7Br1B,KAAK4/M,uBACH,OACA7qL,EAAMM,iBACN,YACA,SACA,WACA,QACA,WACAN,EAAMI,eAAeJ,EAAMM,mBAG7Br1B,KAAK6/M,uBACH,WACA9qL,EAAMoB,oBACN,eACApB,EAAMI,eAAeJ,EAAMoB,qBAC3B,OACApB,EAAMM,iBACN,cACAN,EAAMM,iBACN,UACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,SACC,KAAM,QAAS,GAChB,QACA,UACA,OACA,UACA,OACA,UACA,QACA,SACA,UACA,SACA,WACA,SACA,OACA,QACA,YACA,SACA,WACA,QACA,SACAN,EAAMM,iBACN,cACC,KAAM,UAAW,IAGpBr1B,KAAK8/M,yBACH,OACA/qL,EAAMM,iBACN,YACA,SACA,WACA,QACA,WACAN,EAAMI,eAAeJ,EAAMM,kBAC3B,iBACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,QACA,WAGFr1B,KAAK2iI,oBAAsB,iBAAkB5tG,EAAMI,eAAe,UAElEn1B,KAAKg3B,OAASh3B,KAAK+/M,gBACjB,YACAhrL,EAAMI,eAAen1B,KAAKw/M,mBAC1B,gBACAzqL,EAAMI,eAAen1B,KAAKy/M,0BAC1B,oBACA1qL,EAAMI,eAAen1B,KAAK2/M,2BAC1B,gBACA5qL,EAAMI,eAAen1B,KAAK4/M,uBAC1B,gBACA7qL,EAAMI,eAAen1B,KAAK6/M,uBAC1B,kBACA9qL,EAAMI,eAAen1B,KAAK8/M,yBAC1B,aACA9/M,KAAK2iI,mBACL,cACA,WAKJr4F,GAAI,WACFtqC,KAAKggN,mBACH,WACAjrL,EAAMoB,oBACN,eACApB,EAAMI,eAAeJ,EAAMoB,qBAC3B,OACApB,EAAMM,iBACN,UACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,SACC,KAAM,QAAS,GAChB,QACA,UACA,OACA,UACA,OACA,UACA,QACA,SACA,UACA,SACA,WACA,SACA,OACA,SAGFr1B,KAAKigN,0BACH,WACAlrL,EAAMoB,oBACN,eACApB,EAAMI,eAAeJ,EAAMoB,qBAC3B,OACApB,EAAMM,iBACN,UACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,SACC,KAAM,QAAS,GAChB,QACA,UACA,OACA,UACA,OACA,UACA,QACA,SACA,UACA,SACA,WACA,SACA,OACA,QACA,eACAN,EAAMM,kBAGRr1B,KAAKkgN,yBACH,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,QACA,WAGFlgN,KAAKmgN,2BACH,WACAprL,EAAMoB,oBACN,eACApB,EAAMI,eAAeJ,EAAMoB,qBAC3B,OACApB,EAAMM,iBACN,UACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,SACC,KAAM,QAAS,GAChB,QACA,UACA,OACA,UACA,OACA,UACA,QACA,SACA,UACA,SACA,WACA,SACA,OACA,QACA,aACAN,EAAMI,eAAen1B,KAAKkgN,yBAC1B,gBACAnrL,EAAMI,eAAeJ,EAAMM,mBAG7Br1B,KAAKogN,uBACH,OACArrL,EAAMM,iBACN,YACA,SACA,WACA,QACA,WACAN,EAAMI,eAAeJ,EAAMM,mBAG7Br1B,KAAKqgN,uBACH,WACAtrL,EAAMoB,oBACN,eACApB,EAAMI,eAAeJ,EAAMoB,qBAC3B,OACApB,EAAMM,iBACN,UACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,SACC,KAAM,QAAS,GAChB,QACA,UACA,OACA,UACA,OACA,UACA,QACA,SACA,UACA,SACA,WACA,SACA,OACA,QACA,YACA,SACA,WACA,QACA,SACAN,EAAMM,iBACN,cACC,KAAM,UAAW,IAGpBr1B,KAAKsgN,yBACH,OACAvrL,EAAMM,iBACN,YACA,SACA,WACA,QACA,WACAN,EAAMI,eAAeJ,EAAMM,kBAC3B,iBACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,QACA,WAGFr1B,KAAK2iI,oBAAsB,iBAAkB5tG,EAAMI,eAAe,UAElEn1B,KAAKg3B,OAASh3B,KAAKugN,gBACjB,YACAxrL,EAAMI,eAAen1B,KAAKggN,mBAC1B,gBACAjrL,EAAMI,eAAen1B,KAAKigN,0BAC1B,oBACAlrL,EAAMI,eAAen1B,KAAKmgN,2BAC1B,gBACAprL,EAAMI,eAAen1B,KAAKogN,uBAC1B,gBACArrL,EAAMI,eAAen1B,KAAKqgN,uBAC1B,kBACAtrL,EAAMI,eAAen1B,KAAKsgN,yBAC1B,aACAtgN,KAAK2iI,mBACL,cACA,WAKJ/2F,GAAI,WACF5rC,KAAKwgN,mBACH,WACAzrL,EAAMoB,oBACN,eACApB,EAAMI,eAAeJ,EAAMoB,qBAC3B,OACApB,EAAMM,iBACN,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,SACC,KAAM,QAAS,GAChB,QACA,UACA,OACA,UACA,OACA,UACA,QACA,SACA,UACA,SACA,WACA,SACA,OACA,SAGFr1B,KAAKygN,0BACH,WACA1rL,EAAMoB,oBACN,eACApB,EAAMI,eAAeJ,EAAMoB,qBAC3B,OACApB,EAAMM,iBACN,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,SACC,KAAM,QAAS,GAChB,QACA,UACA,OACA,UACA,OACA,UACA,QACA,SACA,UACA,SACA,WACA,SACA,OACA,QACA,eACAN,EAAMM,kBAGRr1B,KAAK0gN,uBACH,OACA3rL,EAAMM,iBACN,YACA,SACA,WACA,QACA,WACAN,EAAMI,eAAeJ,EAAMM,mBAG7Br1B,KAAK2gN,uBACH,WACA5rL,EAAMoB,oBACN,eACApB,EAAMI,eAAeJ,EAAMoB,qBAC3B,OACApB,EAAMM,iBACN,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,SACC,KAAM,QAAS,GAChB,QACA,UACA,OACA,UACA,OACA,UACA,QACA,SACA,UACA,SACA,WACA,SACA,OACA,QACA,YACA,SACA,WACA,QACA,SACAN,EAAMM,iBACN,cACC,KAAM,UAAW,IAGpBr1B,KAAK4gN,yBACH,OACA7rL,EAAMM,iBACN,YACA,SACA,WACA,QACA,WACAN,EAAMI,eAAeJ,EAAMM,kBAC3B,iBACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,QACA,WAGFr1B,KAAK2iI,oBAAsB,iBAAkB5tG,EAAMI,eAAe,UAElEn1B,KAAKg3B,OAASh3B,KAAK6gN,gBACjB,YACA9rL,EAAMI,eAAen1B,KAAKwgN,mBAC1B,gBACAzrL,EAAMI,eAAen1B,KAAKygN,0BAC1B,gBACA1rL,EAAMI,eAAen1B,KAAK0gN,uBAC1B,gBACA3rL,EAAMI,eAAen1B,KAAK2gN,uBAC1B,kBACA5rL,EAAMI,eAAen1B,KAAK4gN,yBAC1B,aACA5gN,KAAK2iI,mBACL,cACA,WAKJz1F,GAAI,WACFltC,KAAK8gN,mBACH,WACA/rL,EAAMoB,oBACN,eACApB,EAAMI,eAAeJ,EAAMoB,qBAC3B,OACApB,EAAMM,iBACN,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,SACC,KAAM,QAAS,GAChB,QACA,UACA,OACA,UACA,OACA,UACA,QACA,SACA,UACA,SACA,OACA,SAGFr1B,KAAK+gN,0BACH,WACAhsL,EAAMoB,oBACN,eACApB,EAAMI,eAAeJ,EAAMoB,qBAC3B,OACApB,EAAMM,iBACN,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,SACC,KAAM,QAAS,GAChB,QACA,UACA,OACA,UACA,OACA,UACA,QACA,SACA,UACA,SACA,OACA,QACA,eACAN,EAAMM,kBAGRr1B,KAAKghN,uBACH,OACAjsL,EAAMM,iBACN,YACA,SACA,WACA,QACA,WACAN,EAAMI,eAAeJ,EAAMM,mBAG7Br1B,KAAKihN,uBACH,WACAlsL,EAAMoB,oBACN,eACApB,EAAMI,eAAeJ,EAAMoB,qBAC3B,OACApB,EAAMM,iBACN,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,SACC,KAAM,QAAS,GAChB,QACA,UACA,OACA,UACA,OACA,UACA,QACA,SACA,UACA,SACA,OACA,QACA,YACA,SACA,WACA,QACA,SACAN,EAAMM,iBACN,cACC,KAAM,UAAW,IAGpBr1B,KAAKkhN,yBACH,OACAnsL,EAAMM,iBACN,YACA,SACA,WACA,QACA,WACAN,EAAMI,eAAeJ,EAAMM,kBAC3B,iBACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,QACA,WAGFr1B,KAAK2iI,oBAAsB,iBAAkB5tG,EAAMI,eAAe,UAElEn1B,KAAKg3B,OAASh3B,KAAKmhN,gBACjB,YACApsL,EAAMI,eAAen1B,KAAK8gN,mBAC1B,gBACA/rL,EAAMI,eAAen1B,KAAK+gN,0BAC1B,gBACAhsL,EAAMI,eAAen1B,KAAKghN,uBAC1B,gBACAjsL,EAAMI,eAAen1B,KAAKihN,uBAC1B,kBACAlsL,EAAMI,eAAen1B,KAAKkhN,yBAC1B,aACAlhN,KAAK2iI,mBACL,cACA,WAKJn0F,GAAI,WACFxuC,KAAKohN,mBACH,WACArsL,EAAMoB,oBACN,eACApB,EAAMI,eAAeJ,EAAMoB,qBAC3B,OACApB,EAAMM,iBACN,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,SACC,KAAM,QAAS,GAChB,QACA,UACA,OACA,UACA,OACA,UACA,QACA,SACA,UACA,SACA,OACA,SAGFr1B,KAAKqhN,0BACH,WACAtsL,EAAMoB,oBACN,eACApB,EAAMI,eAAeJ,EAAMoB,qBAC3B,OACApB,EAAMM,iBACN,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,SACC,KAAM,QAAS,GAChB,QACA,UACA,OACA,UACA,OACA,UACA,QACA,SACA,UACA,SACA,OACA,QACA,eACAN,EAAMM,kBAGRr1B,KAAKshN,uBAAyB,OAAQvsL,EAAMM,iBAAkB,YAAa,SAAU,WAAY,SAEjGr1B,KAAKuhN,uBACH,WACAxsL,EAAMoB,oBACN,eACApB,EAAMI,eAAeJ,EAAMoB,qBAC3B,OACApB,EAAMM,iBACN,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,SACC,KAAM,QAAS,GAChB,QACA,UACA,OACA,UACA,OACA,UACA,QACA,SACA,UACA,SACA,OACA,QACA,YACA,SACA,WACA,QACA,SACAN,EAAMM,iBACN,cACC,KAAM,UAAW,IAGpBr1B,KAAKwhN,yBACH,OACAzsL,EAAMM,iBACN,YACA,SACA,WACA,QACA,iBACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,QACA,WAGFr1B,KAAK2iI,oBAAsB,iBAAkB5tG,EAAMI,eAAe,UAElEn1B,KAAKg3B,OAASh3B,KAAKyhN,gBACjB,YACA1sL,EAAMI,eAAen1B,KAAKohN,mBAC1B,gBACArsL,EAAMI,eAAen1B,KAAKqhN,0BAC1B,gBACAtsL,EAAMI,eAAen1B,KAAKshN,uBAC1B,gBACAvsL,EAAMI,eAAen1B,KAAKuhN,uBAC1B,kBACAxsL,EAAMI,eAAen1B,KAAKwhN,yBAC1B,aACAxhN,KAAK2iI,mBACL,cACA,WAKJ7yF,GAAI,WACF9vC,KAAK0hN,mBACH,WACA3sL,EAAMoB,oBACN,eACApB,EAAMI,eAAeJ,EAAMoB,qBAC3B,OACApB,EAAMM,iBACN,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,SACC,KAAM,QAAS,GAChB,QACA,UACA,OACA,UACA,OACA,UACA,QACA,SACA,UACA,SACA,OACA,SAGFr1B,KAAK2hN,0BACH,WACA5sL,EAAMoB,oBACN,eACApB,EAAMI,eAAeJ,EAAMoB,qBAC3B,OACApB,EAAMM,iBACN,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,SACC,KAAM,QAAS,GAChB,QACA,UACA,OACA,UACA,OACA,UACA,QACA,SACA,UACA,SACA,OACA,QACA,eACAN,EAAMM,kBAGRr1B,KAAK4hN,uBACH,OACA7sL,EAAMM,iBACN,YACA,SACA,cACC,KAAM,UAAW,GAClB,iBACC,KAAM,UAAW,GAClB,eACAN,EAAMM,iBACN,WACA,SAGFr1B,KAAK2iI,oBAAsB,iBAAkB5tG,EAAMI,eAAe,UAElEn1B,KAAKg3B,OAASh3B,KAAK6hN,gBACjB,YACA9sL,EAAMI,eAAen1B,KAAK0hN,mBAC1B,gBACA3sL,EAAMI,eAAen1B,KAAK2hN,0BAC1B,gBACA5sL,EAAMI,eAAen1B,KAAK4hN,uBAC1B,aACA5hN,KAAK2iI,mBACL,cACA,WAKJvxF,GAAI,WACFpxC,KAAK8hN,mBACH,WACA/sL,EAAMoB,oBACN,eACApB,EAAMI,eAAeJ,EAAMoB,qBAC3B,OACApB,EAAMM,iBACN,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,SACC,KAAM,QAAS,GAChB,QACA,UACA,OACA,UACA,OACA,UACA,QACA,SACA,OACA,SAGFr1B,KAAK+hN,0BACH,WACAhtL,EAAMoB,oBACN,eACApB,EAAMI,eAAeJ,EAAMoB,qBAC3B,OACApB,EAAMM,iBACN,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,SACC,KAAM,QAAS,GAChB,QACA,UACA,OACA,UACA,OACA,UACA,QACA,SACA,OACA,QACA,eACAN,EAAMM,kBAGRr1B,KAAKgiN,uBACH,OACAjtL,EAAMM,iBACN,YACA,SACA,cACC,KAAM,UAAW,GAClB,iBACC,KAAM,UAAW,GAClB,eACAN,EAAMM,iBACN,WACA,SAGFr1B,KAAKg3B,OAASh3B,KAAKiiN,gBACjB,YACAltL,EAAMI,eAAen1B,KAAK8hN,mBAC1B,gBACA/sL,EAAMI,eAAen1B,KAAK+hN,0BAC1B,gBACAhtL,EAAMI,eAAen1B,KAAKgiN,yBAK9BtvK,EAAG,WACD1yC,KAAKkiN,kBACH,WACAntL,EAAMoB,oBACN,eACApB,EAAMI,eAAeJ,EAAMoB,qBAC3B,OACApB,EAAMM,iBACN,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,SACC,KAAM,QAAS,GAChB,QACA,UACA,OACA,UACA,OACA,UACA,QACA,SACA,OACA,SAGFr1B,KAAKmiN,yBACH,WACAptL,EAAMoB,oBACN,eACApB,EAAMI,eAAeJ,EAAMoB,qBAC3B,OACApB,EAAMM,iBACN,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,SACC,KAAM,QAAS,GAChB,QACA,UACA,OACA,UACA,OACA,UACA,QACA,SACA,OACA,QACA,eACAN,EAAMM,kBAGRr1B,KAAKoiN,sBACH,OACArtL,EAAMM,iBACN,YACA,SACA,cACC,KAAM,UAAW,GAClB,iBACC,KAAM,UAAW,GAClB,eACAN,EAAMM,iBACN,WACA,SAGFr1B,KAAKg3B,OAASh3B,KAAKqiN,eACjB,YACAttL,EAAMI,eAAen1B,KAAKkiN,kBAC1B,gBACAntL,EAAMI,eAAen1B,KAAKmiN,yBAC1B,gBACAptL,EAAMI,eAAen1B,KAAKoiN,wBAK9BpuK,EAAG,WACDh0C,KAAKsiN,kBACH,WACAvtL,EAAMoB,oBACN,eACApB,EAAMI,eAAeJ,EAAMoB,qBAC3B,OACApB,EAAMM,iBACN,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,SACC,KAAM,QAAS,GAChB,QACA,UACA,OACA,UACA,OACA,UACA,QACA,SACA,OACA,SAGFr1B,KAAKuiN,yBACH,WACAxtL,EAAMoB,oBACN,eACApB,EAAMI,eAAeJ,EAAMoB,qBAC3B,OACApB,EAAMM,iBACN,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,SACC,KAAM,QAAS,GAChB,QACA,UACA,OACA,UACA,OACA,UACA,QACA,SACA,OACA,QACA,eACAN,EAAMM,kBAGRr1B,KAAKwiN,sBACH,OACAztL,EAAMM,iBACN,YACA,SACA,cACC,KAAM,UAAW,GAClB,iBACC,KAAM,UAAW,GAClB,eACAN,EAAMM,iBACN,WACA,SAGFr1B,KAAKg3B,OAASh3B,KAAKyiN,eACjB,YACA1tL,EAAMI,eAAen1B,KAAKsiN,kBAC1B,gBACAvtL,EAAMI,eAAen1B,KAAKuiN,yBAC1B,gBACAxtL,EAAMI,eAAen1B,KAAKwiN,wBAK9BltK,EAAG,WACDt1C,KAAK0iN,kBACH,WACA3tL,EAAMoB,oBACN,OACApB,EAAMM,iBACN,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,SACC,KAAM,QAAS,GAChB,QACA,UACA,OACA,UACA,OACA,UACA,QACA,SACA,OACA,SAGFr1B,KAAK2iN,yBACH,WACA5tL,EAAMoB,oBACN,OACApB,EAAMM,iBACN,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,SACC,KAAM,QAAS,GAChB,QACA,UACA,OACA,UACA,OACA,UACA,QACA,SACA,OACA,QACA,eACAN,EAAMM,kBAGRr1B,KAAK4iN,sBACH,OACA7tL,EAAMM,iBACN,YACA,SACA,cACC,KAAM,UAAW,GAClB,iBACC,KAAM,UAAW,GAClB,eACAN,EAAMM,iBACN,WACA,SAGFr1B,KAAKg3B,OAASh3B,KAAK6iN,eACjB,YACA9tL,EAAMI,eAAen1B,KAAK0iN,kBAC1B,gBACA3tL,EAAMI,eAAen1B,KAAK2iN,yBAC1B,gBACA5tL,EAAMI,eAAen1B,KAAK4iN,wBAK9BjsK,EAAG,WACD32C,KAAK8iN,kBACH,WACA/tL,EAAMoB,oBACN,OACApB,EAAMM,iBACN,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,QACA,UACA,OACA,UACA,OACA,UACA,QACA,SACA,OACA,SAGFr1B,KAAK+iN,yBACH,WACAhuL,EAAMoB,oBACN,OACApB,EAAMM,iBACN,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,QACA,UACA,OACA,UACA,OACA,UACA,QACA,SACA,OACA,QACA,eACAN,EAAMM,kBAGRr1B,KAAKgjN,sBACH,OACAjuL,EAAMM,iBACN,YACA,SACA,cACC,KAAM,UAAW,GAClB,iBACC,KAAM,UAAW,GAClB,eACAN,EAAMM,iBACN,WACA,SAGFr1B,KAAKg3B,OAASh3B,KAAKijN,eACjB,YACAluL,EAAMI,eAAen1B,KAAK8iN,kBAC1B,gBACA/tL,EAAMI,eAAen1B,KAAK+iN,yBAC1B,gBACAhuL,EAAMI,eAAen1B,KAAKgjN,wBAK9BjrK,EAAG,WACD/3C,KAAKkjN,kBACH,WACAnuL,EAAMoB,oBACN,OACApB,EAAMM,iBACN,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,QACA,UACA,OACA,SACA,OACA,SACA,QACA,SACA,OACA,SAGFr1B,KAAKmjN,yBACH,WACApuL,EAAMoB,oBACN,OACApB,EAAMM,iBACN,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,QACA,UACA,OACA,SACA,OACA,SACA,QACA,SACA,OACA,QACA,eACAN,EAAMM,kBAGRr1B,KAAKojN,sBACH,OACAruL,EAAMM,iBACN,YACA,SACA,cACC,KAAM,UAAW,GAClB,iBACC,KAAM,UAAW,GAClB,eACAN,EAAMM,iBACN,WACA,SAGFr1B,KAAKg3B,OAASh3B,KAAKqjN,eACjB,YACAtuL,EAAMI,eAAen1B,KAAKkjN,kBAC1B,gBACAnuL,EAAMI,eAAen1B,KAAKmjN,yBAC1B,gBACApuL,EAAMI,eAAen1B,KAAKojN,wBAK9BlqK,EAAG,WACDl5C,KAAKsjN,kBACH,WACAvuL,EAAMoB,oBACN,OACApB,EAAMM,iBACN,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,QACA,UACA,OACA,SACA,OACA,SACA,QACA,SACA,OACA,SAGFr1B,KAAKujN,yBACH,WACAxuL,EAAMoB,oBACN,OACApB,EAAMM,iBACN,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,QACA,UACA,OACA,SACA,OACA,SACA,QACA,SACA,OACA,QACA,eACAN,EAAMM,kBAGRr1B,KAAKwjN,sBAAwB,OAAQzuL,EAAMM,iBAAkB,YAAa,UAE1Er1B,KAAKg3B,OAASh3B,KAAKyjN,eACjB,YACA1uL,EAAMI,eAAen1B,KAAKsjN,kBAC1B,gBACAvuL,EAAMI,eAAen1B,KAAKujN,yBAC1B,gBACAxuL,EAAMI,eAAen1B,KAAKwjN,wBAK9BppK,EAAG,WACDp6C,KAAK0jN,kBACH,WACA3uL,EAAMoB,oBACN,OACApB,EAAMM,iBACN,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,QACA,UACA,OACA,SACA,OACA,SACA,QACA,UAGFr1B,KAAK2jN,yBACH,WACA5uL,EAAMoB,oBACN,OACApB,EAAMM,iBACN,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,GAClB,QACA,UACA,OACA,SACA,OACA,SACA,QACA,SACA,eACAN,EAAMM,kBAGRr1B,KAAK4jN,sBAAwB,OAAQ7uL,EAAMM,iBAAkB,YAAa,UAE1Er1B,KAAKg3B,OAASh3B,KAAK6jN,eACjB,YACA9uL,EAAMI,eAAen1B,KAAK0jN,kBAC1B,gBACA3uL,EAAMI,eAAen1B,KAAK2jN,yBAC1B,gBACA5uL,EAAMI,eAAen1B,KAAK4jN,mFC1jFpC,IAAM7uL,EAAQt0B,EAAQ,6BAEtBf,EAAOD,UAMHyB,KAAM,OACN8zB,UAEEyoB,EAAG,WACDz9C,KAAK8jN,sBACH,OACA/uL,EAAMM,iBACN,aACAN,EAAMM,iBACN,eACC,KAAM,UAAW,IAGpBr1B,KAAK+jN,mBACH,KACAhvL,EAAMM,iBACN,OACA,SACA,aACA,SACA,OACA,UACA,MACAN,EAAMM,iBACN,SACAN,EAAMoB,qBAGRn2B,KAAKg3B,OAASh3B,KAAKgkN,qBACjB,kBACAjvL,EAAMI,eAAen1B,KAAK8jN,sBAC1B,aACA/uL,EAAMI,eAAen1B,KAAK+jN,gFCxCpC,IAAMhvL,EAAQt0B,EAAQ,6BAEtBf,EAAOD,UAMHyB,KAAM,OACN8zB,UAEEyoB,EAAG,WACDz9C,KAAK28M,uBACH,QACA,SACA,WACA,SACA,WACA,SACA,YACC,KAAM,UAAW,GAClB,OACA,UAGF38M,KAAK48M,wBAA0B,WAAY,SAAU,aAAc,SAAU,WAAY,UAEzF58M,KAAK68M,6BACH,SACA,SACA,qBACA,SACA,qBACA,SACA,cACA,SACA,oBACA,SACA,kBACA,SACA,gBACA,SACA,YACA9nL,EAAMI,eAAen1B,KAAK28M,uBAC1B,WACA5nL,EAAMI,eAAen1B,KAAK48M,wBAC1B,OACA7nL,EAAMI,eAAe,UAGvBn1B,KAAKikN,2BACH,kBACA,SACA,mBACA,SACA,qBACA,SACA,gBACA,SACA,YACAlvL,EAAMI,eAAen1B,KAAK28M,uBAC1B,WACA5nL,EAAMI,eAAen1B,KAAK48M,wBAC1B,OACA7nL,EAAMI,eAAe,UAGvBn1B,KAAKkkN,oBACH,WACA,SACA,YACA,SACA,WACA,SACA,UACA,SACA,WACA,SACA,WACA,SACA,YACA,SACA,aACA,SACA,YACA,SACA,YACA,WAGFlkN,KAAKmkN,aACH,cACAnkN,KAAKkkN,mBACL,cACA,SACA,eACA,SACA,aACAnvL,EAAMoB,oBACN,aACApB,EAAMoB,qBAGRn2B,KAAKokN,eAAiB,QAASrvL,EAAMM,iBAAkB,SAAUN,EAAMI,eAAen1B,KAAKmkN,cAE3FnkN,KAAKqkN,gBACH,QACA,SACA,QACA,SACA,WACA,SACA,YACA,SACA,YACA,SACA,aACA,UAGFrkN,KAAKg3B,OAASh3B,KAAKskN,iBACjB,OACAvvL,EAAMk4D,kBACN,kBACAl4D,EAAMI,eAAen1B,KAAK68M,6BAC1B,gBACA9nL,EAAMI,eAAen1B,KAAKikN,2BAC1B,UACAlvL,EAAMI,eAAen1B,KAAKokN,eAC1B,WACArvL,EAAMI,eAAen1B,KAAKqkN,6EClIpC,IAAMtvL,EAAQt0B,EAAQ,6BAEtBf,EAAOD,UAMHyB,KAAM,OACN8zB,UAEEyoB,EAAG,WACDz9C,KAAK28M,uBACH,QACA,SACA,WACA,SACA,WACA,SACA,YACC,KAAM,UAAW,GAClB,OACA,UAGF38M,KAAK48M,wBAA0B,WAAY,SAAU,aAAc,SAAU,WAAY,UAEzF58M,KAAKg3B,OAASh3B,KAAKikN,2BACjB,kBACA,SACA,mBACA,SACA,qBACA,SACA,gBACA,SACA,YACAlvL,EAAMI,eAAen1B,KAAK28M,uBAC1B,WACA5nL,EAAMI,eAAen1B,KAAK48M,wBAC1B,OACA7nL,EAAMI,eAAe,sECzC/B,IAAMJ,EAAQt0B,EAAQ,6BAEtBf,EAAOD,UAMHyB,KAAM,OACN8zB,UAEE/zB,EAAG,WACDjB,KAAKukN,8BACH,WACAxvL,EAAMoB,oBACN,OACA,SACA,cACApB,EAAMM,kBAGRr1B,KAAKwkN,0BACH,YACC,KAAM,UAAW,GAClB,QACA,SACA,YACAzvL,EAAMI,eAAen1B,KAAKukN,+BAG5BvkN,KAAKg3B,OAASh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g3B,OAASh3B,KAAKupN,iBAAmB,UAAWx0L,EAAMI,eAAen1B,KAAKspN,kFCrBnF,IAAMv0L,EAAQt0B,EAAQ,6BAEtBf,EAAOD,UAMHyB,KAAM,OACN8zB,UAEEolB,EAAG,WACDp6C,KAAKwpN,kBACH,QACA,SACA,cACAz0L,EAAM2B,oBACN,gBACC,KAAM,UAAW,GAClB,QACA,SACA,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,IAGpB12B,KAAKypN,iBACH,UACA10L,EAAM2B,oBACN,iBACA3B,EAAM2B,oBACN,QACA,SACA,SACA3B,EAAMI,eAAe,WAGvBn1B,KAAKg3B,OAASh3B,KAAK0pN,gBACjB,cACA30L,EAAM2B,oBACN,QACA,SACA,gBACA,QACA,oBACA,QACA,wBACA,SACA,iBACA3B,EAAMI,eAAe,SACrB,YACAJ,EAAMI,eAAen1B,KAAKwpN,kBAC1B,WACAz0L,EAAMI,eAAen1B,KAAKypN,mBAK9BnuK,EAAG,WACDt7C,KAAKwpN,kBACH,QACA,SACA,cACAz0L,EAAM2B,oBACN,gBACC,KAAM,UAAW,GAClB,QACA,SACA,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,IAGpB12B,KAAKypN,iBACH,UACA10L,EAAM2B,oBACN,iBACA3B,EAAM2B,oBACN,QACA,SACA,SACA3B,EAAMI,eAAe,UACrB,eACAJ,EAAMI,eAAe,WAGvBn1B,KAAKg3B,OAASh3B,KAAK0pN,gBACjB,cACA30L,EAAM2B,oBACN,QACA,SACA,OACA3B,EAAMk4D,kBACN,gBACA,QACA,oBACA,QACA,YACAl4D,EAAMI,eAAen1B,KAAKwpN,kBAC1B,WACAz0L,EAAMI,eAAen1B,KAAKypN,mBAK9BxoN,EAAG,WACDjB,KAAK2pN,oBACH,QACA,SACA,cACA50L,EAAM2B,oBACN,gBACC,KAAM,UAAW,GAClB,QACA,SACA,YACC,KAAM,UAAW,GAClB,YACC,KAAM,UAAW,IAGpB12B,KAAK4pN,mBACH,UACA70L,EAAM2B,oBACN,iBACA3B,EAAM2B,oBACN,QACA,SACA,SACA3B,EAAMI,eAA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","file":"T3D.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","module.exports={\n  \"name\": \"t3d-lib\",\n  \"version\": \"2.3.0\",\n  \"scripts\": {\n    \"build\": \"gulp\",\n    \"version\": \"npm run build; git add build\",\n    \"lint\": \"eslint src\",\n    \"lint:fix\": \"eslint src --fix\",\n    \"format\": \"prettier --write 'src/**/*.js'\",\n    \"format:check\": \"prettier --check 'src/**/*.js'\"\n  },\n  \"dependencies\": {\n    \"DataStream.js\": \"github:kig/DataStream.js\",\n    \"vblob\": \"^1.0.2\",\n    \"web-worker\": \"^1.0.0\"\n  },\n  \"devDependencies\": {\n    \"browserify\": \"^16.5.1\",\n    \"eslint\": \"^7.9.0\",\n    \"gulp\": \"^4.0.2\",\n    \"gulp-sourcemaps\": \"^2.6.5\",\n    \"gulp-uglify\": \"^3.0.2\",\n    \"gulplog\": \"^1.0.0\",\n    \"prettier\": \"^2.1.2\",\n    \"tsify\": \"^5.0.4\",\n    \"typescript\": \"^4.5.2\",\n    \"uglify-es\": \"^3.3.9\",\n    \"vinyl-buffer\": \"^1.0.1\",\n    \"vinyl-source-stream\": \"^2.0.0\"\n  },\n  \"main\": \"src/T3DLib.js\",\n  \"prettier\": {\n    \"useTabs\": false,\n    \"trailingComma\": \"es5\",\n    \"tabWidth\": 2,\n    \"printWidth\": 120\n  }\n}\n","/*\nCopyright © Tyria3DLibrary project contributors\n\nThis file is part of the Tyria 3D Library.\n\nTyria 3D Library is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nTyria 3D Library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with the Tyria 3D Library. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nconst MathUtils = require(\"../util/MathUtils\");\n\n/**\n * @file The ArchiveParser module is a set of helper tools to correctly read the Archive.\n * @namespace ArchiveParser\n */\n\n/**\n *    All in one function to read a GW2.dat file and parse all the needed informations to work with it\n *\n * @memberof ArchiveParser\n * @param {File} file\n * @returns {Promise<{archiveHeader: ArchiveHeader, metaTable: MetaTable, indexTable: IndexTable}>}\n */\nasync function readArchive(file) {\n  try {\n    const archiveHeader = parseANDatHeader((await getFilePart(file, 0, 40)).ds);\n    const mftData = parseMFTTable((await getFilePart(file, archiveHeader.mftOffset, archiveHeader.mftSize)).ds);\n    const { ds, len } = await getFilePart(file, mftData.mftIndexOffset, mftData.mftIndexSize);\n    const indexTable = parseMFTIndex(ds, len);\n\n    return {\n      archiveHeader: archiveHeader,\n      metaTable: mftData.table,\n      indexTable: indexTable,\n    };\n  } catch (error) {\n    T3D.Logger.log(T3D.Logger.TYPE_ERROR, \"Couldn't parse archive\");\n    throw error;\n  }\n}\n\n/**\n * The header of the archive.\n * @typedef {Object} ArchiveHeader\n * @property {number} version\n * @property {number} magic\n * @property {number} headerSize\n * @property {number} chunkSize\n * @property {number} crc\n * @property {number} mftOffset\n * @property {number} mftSize\n * @property {number} flags\n */\n\n/**\n *   Parse the main information about the archive like format version, positions of information tables, crc etc...\n *\n * @memberof ArchiveParser\n * @param {DataStream} ds\n * @returns {ArchiveIndex} Returns undefined if the header couldn't be parsed\n */\nfunction parseANDatHeader(ds) {\n  const header = {};\n\n  // Header parsing\n  header.version = ds.readUint8();\n  header.magic = ds.readString(3);\n  header.headerSize = ds.readUint32();\n  ds.seek(ds.position + 4); // Skip uint32\n  header.chunkSize = ds.readUint32();\n  header.crc = ds.readUint32();\n  ds.seek(ds.position + 4); // Skip uint32\n  header.mftOffset = MathUtils.arr32To64([ds.readUint32(), ds.readUint32()]);\n  header.mftSize = ds.readUint32();\n  header.flags = ds.readUint32();\n  // End header parsing\n\n  // Check MAGIC\n  if (header.magic !== \"AN\\u001A\") {\n    T3D.Logger.log(T3D.Logger.TYPE_ERROR, \"ANDat header is not valid\", header.magic);\n    return undefined;\n  }\n\n  T3D.Logger.log(T3D.Logger.TYPE_DEBUG, \"Loaded Main .dat header\");\n\n  return header;\n}\n\n/**\n * The array containing all the meta information concerning the contained files\n * @typedef {Array<{offset: number, size: number, compressed: number, crc: number}>} MetaTable\n */\n\n/**\n *   Parse the main information table that contains the offset, size, compression flags and crc\n *\n * @memberof ArchiveParser\n * @param {Datastream}  ds\n * @returns {{header: {magic: String, nbOfEntries: number}, table: MetaTable, mftIndexOffset: number, mftIndexSize: number}|undefined}\n *   Returns undefined if it couldn't parse the table\n */\nfunction parseMFTTable(ds) {\n  // Parse the table header\n  const header = {};\n  header.magic = ds.readString(4);\n  ds.seek(ds.position + 8); // Skip uint64\n  header.nbOfEntries = ds.readUint32();\n  ds.seek(ds.position + 4 + 4); // Skip uint32 * 2\n\n  // check MAGIC\n  if (header.magic !== \"Mft\\u001A\") {\n    T3D.Logger.log(T3D.Logger.TYPE_ERROR, \"MFTTable header is not valid\", header.magic);\n    return undefined;\n  }\n\n  // Where we put all the parsed data\n  // We don't pre-alloc anymore since not having the data aligned together procs too many\n  // cache misses during a fullscan\n  const fullTable = [];\n\n  // Go through the table\n  for (let i = 1; i < header.nbOfEntries; i++) {\n    const item = {};\n    item[\"offset\"] = MathUtils.arr32To64([ds.readUint32(), ds.readUint32()]);\n    item[\"size\"] = ds.readUint32();\n    item[\"compressed\"] = ds.readUint16();\n    ds.seek(ds.position + 4 + 2); // Skip uint16 + uint32\n    item[\"crc\"] = ds.readUint32();\n    fullTable[i] = item;\n  }\n\n  T3D.Logger.log(T3D.Logger.TYPE_DEBUG, \"Loaded MFTTable\");\n\n  return {\n    header: header,\n    table: fullTable,\n    // Register the MFTIndex table position and size\n    mftIndexOffset: fullTable[2].offset,\n    mftIndexSize: fullTable[2].size,\n  };\n}\n\n/**\n * The array linking all the file indexes to their respective files\n * @typedef {Array<number>} IndexTable\n */\n\n/**\n *   This function used to be much more complex with the use of\n *   a \"fileId\" which in the end was just the equivalent of\n *   MFTbaseIds[mftId].sort().reverse()[0] (aka the bigger baseId found)\n *\n * @memberof ArchiveParser\n * @param {DataStream} ds\n * @param {number} size\n * @returns {IndexTable}\n */\nfunction parseMFTIndex(ds, size) {\n  const length = size / 8;\n\n  const indexTable = [];\n\n  for (let i = 0; i < length; i++) {\n    // Parse table\n    const id = ds.readUint32();\n    const mftIndex = ds.readUint32();\n    // Store the values\n    indexTable[id] = mftIndex;\n  }\n\n  T3D.Logger.log(T3D.Logger.TYPE_DEBUG, \"Finished indexing MFT\");\n\n  return indexTable;\n}\n\n/**\n *   Get a chunk of the specified file. Used mainly to take parts of the Archive before parsing.\n *\n * @memberof ArchiveParser\n * @param {File} file\n * @param {number} offset\n * @param {number} length\n * @returns {Promise<{ds: DataStream, len: number}>}\n */\nfunction getFilePart(file, offset, length) {\n  // Node compatibility workaround\n  if (global.process && global.fs) {\n    const fd = global.fs.openSync(file);\n    const buffer = global.Buffer.alloc(length);\n    const readLen = global.fs.readSync(fd, buffer, 0, length, offset);\n    const ds = new DataStream(buffer);\n    ds.endianness = DataStream.LITTLE_ENDIAN;\n    global.fs.closeSync(fd);\n    return { ds, len: readLen };\n  }\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n\n    reader.onerror = reject;\n\n    reader.onload = function (fileEvent) {\n      const buffer = fileEvent.target.result;\n      const ds = new DataStream(buffer);\n      ds.endianness = DataStream.LITTLE_ENDIAN;\n      // Pass data stream and data length to callback function\n      resolve({ ds: ds, len: length });\n    };\n\n    // Slicing a File is just reducing the scope of the ArrayBuffer, but doesn't load anything in memory.\n    reader.readAsArrayBuffer(file.slice(offset, offset + length));\n  });\n}\n\nmodule.exports = {\n  readArchive: readArchive,\n  parseANDatHeader: parseANDatHeader,\n  parseMFTTable: parseMFTTable,\n  parseMFTIndex: parseMFTIndex,\n  getFilePart: getFilePart,\n};\n","/*\nCopyright © Tyria3DLibrary project contributors\n\nThis file is part of the Tyria 3D Library.\n\nTyria 3D Library is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nTyria 3D Library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with the Tyria 3D Library. If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/**\n * Organized thread pool of extractors\n * @class DataReader\n */\nclass DataReader {\n  /**\n   * @constructor\n   * @param {Object} settings\n   * @param {number} settings.workersNb Amount of concurrent spawned workers\n   * @param {string} settings.workerPath Path to the worker script\n   */\n  constructor(settings) {\n    this._settings = settings;\n    this._workerPool = [];\n    this._workerLoad = [];\n    this._inflateCallbacks = [];\n    for (let i = 0; i < settings.workersNb; i++) {\n      this._startWorker(settings.workerPath);\n    }\n  }\n\n  /**\n   * @param {DataStream} ds\n   * @param {number} size\n   * @param {number} mftId\n   * @param {boolean} [isImage] Parses the output as a dxt texture\n   * @param {number} [capLength] Output size\n   * @returns {Promise<{buffer: ArrayBuffer, dxtType: number, imageWidth: number, imageHeight: number}>}\n   */\n  inflate(ds, size, mftId, isImage, capLength) {\n    return new Promise((resolve, reject) => {\n      const arrayBuffer = ds.buffer;\n\n      // If no capLength then inflate the whole file\n      if (!capLength || capLength < 0) {\n        capLength = 0;\n      }\n\n      // Buffer length size check\n      if (arrayBuffer.byteLength < 12) {\n        T3D.Logger.log(\n          T3D.Logger.TYPE_WARNING,\n          `not inflating, length is too short (${arrayBuffer.byteLength})`,\n          mftId\n        );\n        reject(new Error(\"Couldn't inflate \" + mftId + \" (mftId)\"));\n        return;\n      }\n\n      // Register the callback\n      if (this._inflateCallbacks[mftId]) {\n        this._inflateCallbacks[mftId].push({\n          resolve: resolve,\n          reject: reject,\n        });\n\n        /// No need to make another call, just wait for callback event to fire.\n        return;\n      } else {\n        this._inflateCallbacks[mftId] = [{ resolve: resolve, reject: reject }];\n      }\n\n      // Add the load to the worker\n      const workerId = this._getBestWorkerIndex();\n      this._workerLoad[workerId] += 1;\n      this._workerPool[workerId].postMessage([mftId, arrayBuffer, isImage === true, capLength]);\n    });\n  }\n\n  // Initialization function for creating a new worker (thread)\n  _startWorker(path) {\n    const self = this;\n    const worker = new Worker(path);\n    const selfWorkerId = this._workerPool.push(worker) - 1;\n    if (this._workerLoad.push(0) !== selfWorkerId + 1) {\n      throw new Error(\"WorkerLoad and WorkerPool don't have the same length\");\n    }\n\n    worker.onmessage = function (message_event) {\n      let mftId;\n      // Remove load\n      self._workerLoad[selfWorkerId] -= 1;\n\n      // If error\n      if (typeof message_event.data === \"string\") {\n        T3D.Logger.log(T3D.Logger.TYPE_WARNING, \"Inflater threw an error\", message_event.data);\n        mftId = message_event.data.split(\":\")[0];\n        for (const callback of self._inflateCallbacks[mftId]) {\n          callback.reject();\n        }\n      } else {\n        mftId = message_event.data[0];\n        // On success\n        if (self._inflateCallbacks[mftId]) {\n          for (const callback of self._inflateCallbacks[mftId]) {\n            const data = message_event.data;\n            // Array buffer, dxtType, imageWidth, imageHeight\n            callback.resolve({\n              buffer: data[1],\n              dxtType: data[2],\n              imageWidth: data[3],\n              imageHeight: data[4],\n            });\n          }\n          // Remove triggered listeners\n          self._inflateCallbacks[mftId] = null;\n        }\n\n        // Unknown error\n        else {\n          T3D.Logger.log(T3D.Logger.TYPE_ERROR, \"Inflater threw an error\", message_event.data);\n        }\n      }\n    };\n  }\n\n  // Get the worker with the less load\n  _getBestWorkerIndex() {\n    return this._workerLoad.indexOf(Math.min(...this._workerLoad));\n  }\n}\n\nmodule.exports = DataReader;\n","/*\nCopyright © Tyria3DLibrary project contributors\n\nThis file is part of the Tyria 3D Library.\n\nTyria 3D Library is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nTyria 3D Library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with the Tyria 3D Library. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nconst GW2File = require(\"../format/file/GW2File.js\");\n\n/**\n * @namespace FileTypes\n */\n\nconst FileTypes = {};\n\n/**\n * Parse the beginning of a file to find its type\n *\n * @memberof FileTypes\n * @param {DataStream} ds\n * @return {number}\n */\nFileTypes.getFileType = function (ds) {\n  const first4 = ds.readCString(4);\n\n  // Parse textures\n  switch (first4) {\n    case \"ATEC\":\n      return \"TEXTURE_ATEC\";\n    case \"ATEP\":\n      return \"TEXTURE_ATEP\";\n    case \"ATET\":\n      return \"TEXTURE_ATET\";\n    case \"ATEU\":\n      return \"TEXTURE_ATEU\";\n    case \"ATEX\":\n      return \"TEXTURE_ATEX\";\n    case \"ATTX\":\n      return \"TEXTURE_ATTX\";\n  }\n\n  if (first4.indexOf(\"DDS\") === 0) return \"TEXTURE_DDS\";\n\n  if (first4.indexOf(\"PNG\") === 1) return \"TEXTURE_PNG\";\n\n  if (first4.indexOf(\"RIFF\") === 0) return \"TEXTURE_RIFF\";\n\n  if (first4.indexOf(\"YUI\") === 0) return \"TEXT_YUI\";\n\n  // PackFiles\n  if (first4.indexOf(\"PF\") === 0) {\n    const file = new GW2File(ds, 0, true); /// true for \"plz no load chunkz\"\n    return \"PF_\" + file.header.type;\n  }\n\n  // Binaries\n  if (first4.indexOf(\"MZ\") === 0) return \"BINARIES\";\n\n  // Strings\n  if (first4.indexOf(\"strs\") === 0) return \"STRINGS\";\n\n  // Raw asnd chunk (without pack file)\n  if (first4.indexOf(\"asnd\") === 0) return \"CHUNK_ASND\";\n\n  // TODO: parse all datastream and if all bytes are valid unicode symbols then\n  // return TEXT_UNKNOWN;\n\n  // Unknown\n  return \"UNKNOWN\";\n};\n\nmodule.exports = FileTypes;\n","/*\nCopyright © Tyria3DLibrary project contributors\n\nThis file is part of the Tyria 3D Library.\n\nTyria 3D Library is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nTyria 3D Library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with the Tyria 3D Library. If not, see <http://www.gnu.org/licenses/>.\n*/\ndeclare var T3D: any;\nvar DataStream: any = globalThis.DataStream;\n\nconst ArchiveParser = require(\"./ArchiveParser\");\nconst PersistantStore = require(\"./PersistantStore\");\nconst DataReader = require(\"./DataReader\");\nconst MapFileList = require(\"../MapFileList\");\nconst FileTypes = require(\"./FileTypes\");\n\ninterface LocalReaderSettings {\n  noIndexedDB?: boolean; // Do not use indexedDB (persistant storage, default is true)\n  workerPath: String; // workerPath: the path to the t3dtools worker script file.\n  workersNb: number; // amount of threads spawned for decompression.\n}\n\ninterface FileItem {\n  mftId: number;\n  baseIdList: number[];\n  size: number;\n  crc: number;\n  fileType: string;\n}\n\n/**\n *   \"Meta\" informations to deal with files in the archive.\n */\ninterface FileMetaData {\n  offset: number;\n  size: number;\n  compressed: number;\n  crc: number;\n}\n\n/**\n * A statefull class that handles reading and inflating data from a local GW2 dat file.\n */\nclass LocalReader {\n  _settings: LocalReaderSettings;\n  _dataReader: typeof DataReader;\n  _persistantStore: typeof PersistantStore;\n  _file: File;\n  _indexTable: Array<number>;\n  _fileMetaTable: Array<{ offset: number; size: number; compressed: number; crc: number }>;\n  _persistantData: Array<{\n    baseId: number;\n    size: number;\n    crc: number;\n    fileType: string;\n  }>;\n  _fileTypeCache: any;\n\n  constructor(settings: LocalReaderSettings) {\n    this._settings = settings;\n\n    this._dataReader = new DataReader(settings);\n    this._persistantStore;\n    this._file = undefined;\n    this._indexTable = [];\n    this._fileMetaTable = [];\n\n    if (settings.noIndexedDB !== false) {\n      this._persistantStore = new PersistantStore();\n    }\n  }\n\n  /**\n   *   Asynchronously loads the archive by parsing its file index and header.\n   */\n  async openArchive(file: File): Promise<void> {\n    const { metaTable, indexTable } = await ArchiveParser.readArchive(file);\n    this._fileMetaTable = metaTable;\n    this._indexTable = indexTable;\n    this._file = file;\n  }\n\n  /**\n   *   Gets MFT index by baseId\n   */\n  getFileIndex(baseId: number): number /* MFT index */ {\n    return this._indexTable[baseId];\n  }\n\n  /**\n   *   Returns the metadata of a file stored in the archive\n   */\n  getFileMeta(mftId: number): FileMetaData {\n    return this._fileMetaTable[mftId];\n  }\n\n  /**\n   *   Fetch a file and uncompress it if needed / required.\n   */\n  async readFile(\n    mftId: number,\n    isImage?: boolean,\n    raw?: boolean,\n    fileLength?: number,\n    extractLength?: number\n  ): Promise<{\n    buffer: ArrayBuffer;\n    dxtType?: number;\n    imageWidth?: number;\n    imageHeight?: number;\n  }> {\n    //let buffer, dxtType, imageWidth, imageHeight;\n    const meta = this.getFileMeta(mftId);\n    if (!meta) throw new Error(\"Unexistant file\");\n\n    // Slice up the data\n    const { ds, len } = await ArchiveParser.getFilePart(this._file, meta.offset, fileLength || meta.size);\n\n    // If needed we decompress, if not we keep raw\n    if (raw || meta.compressed) {\n      let data;\n      await this._dataReader\n        .inflate(ds, len, mftId, isImage, extractLength || 0)\n        .then((result) => {\n          data = result;\n        })\n        .catch(() => {\n          data = {\n            buffer: undefined,\n            dxtType: undefined,\n            imageWidth: undefined,\n            imageHeight: undefined,\n          };\n        });\n      return data;\n    } else return { buffer: ds.buffer };\n  }\n\n  /**\n   *   Scans asynchronously the types of all the files listed in the archive.\n   *   Uses persistant store to cache and speed up a rescan.\n   */\n  async readFileList(\n    // This is a way for platforms not supporting indexDB to provide their own persistant storage.\n    oldFileList?: Array<{ baseId: number; size: number; crc: number; fileType: string }>\n  ): Promise<Array<FileItem>> {\n    const self = this;\n\n    let persistantList = oldFileList || [];\n    let persistantId;\n\n    // Load previously saved data\n    if (this._persistantStore) {\n      const lastListing = await this._persistantStore.getLastListing(this._file.name);\n      persistantList = lastListing.array;\n      // If the last scan was not completed then we will just update it..\n      if (!lastListing.complete) {\n        persistantId = lastListing.key;\n      }\n    }\n\n    // Create a list of all the baseIds we need to inspect\n    const iterateList = Object.keys(self._indexTable).map((i) => Number(i));\n    for (const index in persistantList) {\n      if (!(index in self._indexTable)) iterateList.push(index as any);\n    }\n\n    // Spawn the decompression tasks\n    const taskArray = [];\n    for (let i = 0; i < 1; i++) {\n      taskArray[i] = Promise.resolve({ task: i });\n    }\n\n    // Helps us to know when we need to update the persistant store\n    let persistantNeedsUpdate = false;\n\n    // Iterate through the array\n    for (const index in iterateList) {\n      const baseId = iterateList[index];\n\n      // First use a synchronous function to know if we need to scan the file\n      const result = this._needsScan(baseId, persistantList);\n      if (result.scan === true) {\n        const taskId = (await Promise.race(taskArray)).task;\n        taskArray[taskId] = this._readFileType(baseId).then((scanResult) => {\n          // Put the result into our persistant storage\n          persistantList[baseId] = {\n            baseId: baseId,\n            size: scanResult.size,\n            crc: scanResult.crc,\n            fileType: scanResult.fileType,\n          };\n          return { task: taskId };\n        });\n      }\n      if (result.change === \"removed\") {\n        // Update the persistant storage\n        delete persistantList[baseId];\n      }\n\n      // Handle persistant storage update\n      if (result.change !== \"none\") persistantNeedsUpdate = true;\n\n      // Tasks to do only every %\n      if (((index as unknown) as number) % Math.floor(iterateList.length / 100) === 0) {\n        // Print progress\n        T3D.Logger.log(\n          T3D.Logger.TYPE_PROGRESS,\n          \"Finding types\",\n          ((index as unknown) as number) / Math.floor(iterateList.length / 100)\n        );\n\n        // Update the persistant storage if needed\n        if (self._persistantStore && persistantNeedsUpdate) {\n          persistantNeedsUpdate = false;\n          self._persistantStore\n            .putListing(persistantId, persistantList, self._file.name, false)\n            .then((res) => (persistantId = res));\n        }\n      }\n    }\n\n    await Promise.all(taskArray).then(() => {\n      // Finally update the listing as complete\n      if (self._persistantStore) {\n        self._persistantStore.putListing(persistantId, persistantList, self._file.name, true);\n      }\n    });\n    this._persistantData = persistantList;\n    return this.getFileList();\n  }\n\n  /**\n   * Cheap version of the readFileList which will only scan files registered in the mapFileList\n   * This helps us being sure that we only return files that contain a mapc chunk when using\n   * the getMapList function\n   */\n  async readMapList(): Promise<void> {\n    const fileList = MapFileList.maps.reduce((maps, category) => {\n      return maps.concat(category.maps.map((entry) => entry.fileName));\n    }, []);\n    const temporaryStore = [];\n\n    for (const fileName of fileList) {\n      const baseId = fileName.split(\".data\")[0];\n      if (this._indexTable[baseId]) {\n        const scanResult = await this._readFileType(baseId);\n        temporaryStore[baseId] = {\n          baseId: Number(baseId),\n          size: scanResult.size,\n          crc: scanResult.crc,\n          fileType: scanResult.fileType,\n        };\n      }\n    }\n\n    // Fill the store without saving it to disk\n    this._persistantData = temporaryStore;\n  }\n\n  /**\n   *   Returns a list of all the maps with their name and category.\n   *   Uncategorized maps are available only if readFileList have been used before.\n   */\n  async getMapList(): Promise<Array<{ name: string; category: string; baseId: number }>> {\n    const self = this;\n    const mapArray = [];\n    // If the archive hasn't been completely scanned we do a partial scan for the map files.\n    // It should be fast\n    if (!this._persistantData) {\n      await this.readMapList();\n    }\n\n    // Filter the maps out of all our files\n    const reversedIndex = this.getReverseIndex();\n    const maps = this._persistantData\n      .filter((file) => file.fileType === \"PF_mapc\")\n      .filter((id) => id.baseId === reversedIndex[self.getFileIndex(id.baseId)][0]);\n\n    for (const map of maps) {\n      let found = false;\n      // Try to see if we already have some informations on this map\n      for (const category of MapFileList.maps) {\n        const fileMap = category.maps.find((item) => Number(item.fileName.split(\".data\")[0]) === map.baseId);\n        if (fileMap) {\n          mapArray.push({\n            name: fileMap.name,\n            category: category.name,\n            baseId: map.baseId,\n          });\n          found = true;\n          break;\n        }\n      }\n      // If not we register it as Uncategorized\n      if (!found) {\n        mapArray.push({\n          name: map.baseId.toString(),\n          category: \"Uncategorized\",\n          baseId: map.baseId,\n        });\n      }\n    }\n\n    mapArray.sort((a, b) => a.category.localeCompare(b.category));\n\n    return mapArray;\n  }\n\n  /**\n   *   Return the meta table with extra information such as an array of baseIds and the file types.\n   *   The filetype is available only if readFileList have been used before of course.\n   */\n  getFileList(): Array<FileItem> {\n    const typeList = this._persistantData ? this._persistantData.map((i) => i.fileType) : [];\n    const reverseBaseIdList = this.getReverseIndex();\n\n    const fileList = this._fileMetaTable.map((meta, mftId) => {\n      const baseIds = reverseBaseIdList[mftId] ? reverseBaseIdList[mftId] : [];\n      const type = reverseBaseIdList[mftId] ? typeList[baseIds[0]] : \"Non-Registered\";\n      return {\n        mftId: mftId,\n        baseIdList: baseIds,\n        size: meta.size,\n        crc: meta.crc,\n        fileType: type,\n      };\n    });\n    fileList[0] = {\n      mftId: 0,\n      baseIdList: [],\n      size: 0,\n      crc: 0,\n      fileType: \"Non-Registered\",\n    };\n    return fileList;\n  }\n\n  /**\n   * @returns {Array<Array<number>>}\n   */\n  getReverseIndex() {\n    return this._indexTable.reduce((reversed, mftId, baseId) => {\n      if (mftId in reversed) reversed[mftId].push(baseId);\n      else reversed[mftId] = [baseId];\n      return reversed;\n    }, []);\n  }\n\n  // Callback wrapper\n\n  /**\n   * Reads data from a file in the dat.\n   * If `raw` is true, any infation is skipped and raw data is returned.\n   */\n  loadFile(\n    baseId: number,\n    callback: (rawData?: ArrayBuffer, dxtType?: number, width?: number, height?: number) => void,\n    isImage: boolean,\n    raw: boolean\n  ) {\n    const mftId = this.getFileIndex(baseId);\n    if (mftId <= 0) return callback(null);\n    this.readFile(mftId, isImage, raw).then((result) => {\n      if (result.buffer === undefined) return callback(null);\n      callback(result.buffer, result.dxtType, result.imageWidth, result.imageHeight);\n    });\n  }\n\n  // Private\n  _needsScan(\n    baseId: number,\n    persistantData: Array<{ baseId: number; crc: number; size: number; fileType: string }>\n  ): { scan: boolean; change: string } {\n    if (baseId <= 0) return { change: \"none\", scan: false };\n\n    const mftId = this.getFileIndex(baseId);\n    const metaData = this.getFileMeta(mftId);\n\n    // Nothing interesting\n    if (metaData === undefined && !(baseId in persistantData)) {\n      return { change: \"none\", scan: false };\n    }\n    // If the file have been deleted\n    else if (metaData === undefined) {\n      return { change: \"removed\", scan: false };\n    }\n    // If the file is new\n    else if (!(baseId in persistantData)) {\n      return { change: \"added\", scan: true };\n    }\n    // If the size or crc don't match\n    else if (metaData.size !== persistantData[baseId].size || metaData.crc !== persistantData[baseId].crc) {\n      return { change: \"modified\", scan: true };\n    }\n    // If everything is the same\n    else {\n      return { change: \"none\", scan: false };\n    }\n  }\n\n  async _readFileType(baseId: number): Promise<{ fileType: string; crc: number; size: number }> {\n    if (!this._fileTypeCache) this._fileTypeCache = [];\n\n    const mftId = this.getFileIndex(baseId);\n    const metaData = this.getFileMeta(mftId);\n\n    let fileType;\n    if (this._fileTypeCache[baseId] !== undefined) {\n      fileType = this._fileTypeCache[baseId];\n    } else {\n      const fileBuffer = (await this.readFile(mftId, false, false, Math.min(metaData.size, 1000), 32)).buffer;\n      if (fileBuffer === undefined) return undefined;\n      fileType = FileTypes.getFileType(new DataStream(fileBuffer));\n    }\n    return { fileType: fileType, crc: metaData.crc, size: metaData.size };\n  }\n}\n\nmodule.exports = LocalReader;\n","/*\nCopyright © Tyria3DLibrary project contributors\n\nThis file is part of the Tyria 3D Library.\n\nTyria 3D Library is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nTyria 3D Library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with the Tyria 3D Library. If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/// Indexed DB versioning\nconst DB_VERSION = 4;\n\n/**\n * This class handles offline storage of the .dat indexes and files metadata\n * @class PersistantStore\n */\nclass PersistantStore {\n  constructor() {\n    // They may be multiple connection request issued at the same time, but it's actually okay since\n    // as soon as they are registered, the not-used ones will get garbage collected\n    this._dbConnection = undefined;\n    this._getConnection(() => {});\n  }\n\n  /**\n   *   Initialize the IndexedDB connection and manages version changes.\n   *\n   * @async\n   * @private\n   * @returns {Promise<IDBDatabase>} Promise to the Database connection\n   */\n  _getConnection() {\n    const self = this;\n    return new Promise((resolve, reject) => {\n      if (self._dbConnection) resolve(self._dbConnection);\n\n      // Let us open our database\n      const request = window.indexedDB.open(\"Tyria3DLibrary\", DB_VERSION);\n\n      /// onblocked is fired when the db needs an upgrade but an older version is opened in another tab\n      request.onblocked = () => {\n        T3D.Logger.log(\n          T3D.Logger.TYPE_ERROR,\n          \"The T3D persistant database cannot be upgraded while the app is opened somewhere else.\"\n        );\n      };\n\n      /// fired when the database needs to be upgraded (or the first time)\n      request.onupgradeneeded = (event) => {\n        /** @type {IDBDatabase} */\n        const db = event.target.result;\n        const currentVersion = event.oldVersion;\n\n        if (currentVersion < 2) {\n          db.createObjectStore(\"listings\", {\n            autoIncrement: true,\n          });\n        }\n\n        if (currentVersion < 3) {\n          const storeListing = event.currentTarget.transaction.objectStore(\"listings\");\n          storeListing.createIndex(\"filename\", \"filename\", { unique: false });\n        }\n      };\n\n      request.onsuccess = (event) => {\n        self._dbConnection = event.target.result;\n        self.isReady = true;\n        resolve(self._dbConnection);\n      };\n\n      request.onerror = () => {\n        T3D.Logger.log(T3D.Logger.TYPE_ERROR, \"The T3D persistant database could not be opened.\");\n        reject();\n      };\n    });\n  }\n\n  /**\n   *   Add or update a listing into the database\n   *\n   * @async\n   * @param {number|undefined} id This ID doesn't really matter, it's just the index of the object in the database, can be undefined\n   * @param {Array} listing\n   * @param {string} fileName .dat file name, allows to have multiple listings for different .dat files.\n   * @param {boolean} isComplete Keep back the information if that was the last update on the current scan or not.\n   * @returns {Promise<number>} On success, the number is the object key in the database\n   */\n  putListing(id, listing, fileName, isComplete) {\n    const self = this;\n    return new Promise((resolve, reject) => {\n      self._getConnection().then((db) => {\n        const store = db.transaction([\"listings\"], \"readwrite\").objectStore(\"listings\");\n\n        const request = id\n          ? store.put({ array: listing, filename: fileName, complete: isComplete }, id)\n          : store.put({ array: listing, name: fileName });\n\n        request.onsuccess = () => {\n          resolve(request.result);\n        };\n        request.onerror = () => {\n          reject();\n        };\n      });\n    });\n  }\n\n  /**\n   * Returns the last valid listing in the database\n   *\n   * @async\n   * @param {string} fileName .dat file name, allows to have multiple listings for different .dat files.\n   * @returns {Promise<{array: Array, key: number, complete: boolean}>}\n   *      array: the last listing\n   *      key: the index of the last listing in the database\n   */\n  getLastListing(fileName) {\n    const self = this;\n    return new Promise((resolve) => {\n      self._getConnection().then((db) => {\n        const listingsStore = db.transaction([\"listings\"], \"readonly\").objectStore(\"listings\").index(\"filename\");\n\n        listingsStore.openCursor(IDBKeyRange.only(fileName), \"prev\").onsuccess = (event) => {\n          const cursor = event.target.result;\n          if (!cursor) resolve({ array: [], key: undefined, complete: true });\n          else {\n            resolve({\n              array: cursor.value.array,\n              key: cursor.primaryKey,\n              complete: cursor.value.complete,\n            });\n          }\n        };\n      });\n    });\n  }\n}\n\nmodule.exports = PersistantStore;\n","/*\nCopyright © Tyria3DLibrary project contributors\n\nThis file is part of the Tyria 3D Library.\n\nTyria 3D Library is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nTyria 3D Library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with the Tyria 3D Library. If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/**\n * A Logger class for T3D\n *\n * This satic class defines severity levels of messages and provides\n * basic logging functionality. Replacing the reference to\n *\n * @namespace\n * @static\n */\nconst Logger = {};\n\n/**\n * @readonly\n * @property {number} TYPE_ERROR\n */\nLogger.TYPE_ERROR = 4;\n\n/**\n * @readonly\n * @property {number} TYPE_WARNING\n */\nLogger.TYPE_WARNING = 3;\n\n/**\n * @readonly\n * @property {number} TYPE_MESSAGE\n */\nLogger.TYPE_MESSAGE = 2;\n\n/**\n * @readonly\n * @property {number} TYPE_PROGRESS\n */\nLogger.TYPE_PROGRESS = 1;\n\n/**\n * @readonly\n * @property {number} TYPE_DEBUG\n */\nLogger.TYPE_DEBUG = 0;\n\n/**\n * The logging functions, indexed by severity/type.\n *\n * @property logFunctions\n * @type Function[]\n */\nLogger.logFunctions = new Array(5);\n\n/**\n * Main logging method. Takes 1 to N arguments. If there are more than 1 arguments\n * the first argument is interpreted as severity. If there is only one argument\n * severity defaults to\n * {{#crossLink \"Logger/TYPE_MESSAGE:property\"}}{{/crossLink}}.\n *\n * The following arguments are passed to a logging function matching the\n * severity.\n *\n\n *\n */\nLogger.log = function () {\n  /// Require at least 1 argument\n  if (arguments.length === 0) {\n    return;\n  }\n\n  /// Parse arguments to an actual array\n  const argArr = Logger.argsToArr(arguments);\n\n  /// Default to message if just one argument was passed\n  if (argArr.length === 1) {\n    argArr.unshift(Logger.TYPE_MESSAGE);\n  }\n\n  /// Otherwise 1st arg is severity, log/warn/error\n  const severity = Math.max(0, Math.min(Logger.logFunctions.length, argArr.shift()));\n  const logFunc = Logger.logFunctions[severity];\n\n  /// Ouput the rest of the arguments\n  logFunc.apply(this, argArr);\n};\n\nLogger.argsToArr = function (args) {\n  const argArr = new Array(args.length);\n  for (let i = 0; i < argArr.length; ++i) {\n    argArr[i] = args[i];\n  }\n  return argArr;\n};\n\nLogger.logFunctions[Logger.TYPE_ERROR] = function () {\n  console.error.apply(console, arguments);\n};\n\nLogger.logFunctions[Logger.TYPE_WARNING] = function () {\n  console.warn.apply(console, arguments);\n};\n\nLogger.logFunctions[Logger.TYPE_MESSAGE] = function () {\n  console.log.apply(console, arguments);\n};\n\nLogger.logFunctions[Logger.TYPE_PROGRESS] = function () {\n  const argArr = Logger.argsToArr(arguments);\n  argArr.unshift(\"Progress: \");\n  console.log.apply(console, argArr);\n};\n\nLogger.logFunctions[Logger.TYPE_DEBUG] = function () {\n  const argArr = Logger.argsToArr(arguments);\n  console.debug.apply(console, argArr);\n};\n\nmodule.exports = Logger;\n","/*\nCopyright © Tyria3DLibrary project contributors\n\nThis file is part of the Tyria 3D Library.\n\nTyria 3D Library is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nTyria 3D Library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with the Tyria 3D Library. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nmodule.exports = {\n  /**\n   * @property maps\n   * @type {Array.<{name: String, maps: Array.<{fileName: String, name: String}>}>}\n   */\n  maps: [\n    {\n      name: \"01. Shiverpeaks\",\n      maps: [\n        { fileName: \"125199.data\", name: \"Wayfarer Foothills (0)\" },\n        { fileName: \"187611.data\", name: \"Wayfarer Foothills (1)\" },\n        { fileName: \"568778.data\", name: \"Cragstead\" },\n        { fileName: \"132434.data\", name: \"Hoelbrak (0)\" },\n        { fileName: \"197122.data\", name: \"Hoelbrak (1)\" },\n        { fileName: \"1966018.data\", name: \"Hoelbrak (2)\" },\n        { fileName: \"124093.data\", name: \"Snowden Drifts (0)\" },\n        { fileName: \"186397.data\", name: \"Snowden Drifts (1)\" },\n        { fileName: \"275155.data\", name: \"Dredgehaunt Cliffs\" },\n        { fileName: \"276252.data\", name: \"Frostgorge Sound\" },\n        { fileName: \"277587.data\", name: \"Lornar's Pass\" },\n        { fileName: \"278717.data\", name: \"Timberline Falls (0)\" },\n        { fileName: \"846866.data\", name: \"Timberline Falls (1)\" },\n        { fileName: \"1018612.data\", name: \"Timberline Falls (2)\" },\n        { fileName: \"295282.data\", name: \"Eye of the North\" },\n      ],\n    },\n    {\n      name: \"02. Ascalon\",\n      maps: [\n        { fileName: \"126118.data\", name: \"Plains of Ashford (0)\" },\n        { fileName: \"188591.data\", name: \"Plains of Ashford (1)\" },\n        { fileName: \"127888.data\", name: \"Diessa Plateau (0)\" },\n        { fileName: \"190490.data\", name: \"Diessa Plateau (1)\" },\n        { fileName: \"131944.data\", name: \"Black Citadel (0)\" },\n        { fileName: \"196585.data\", name: \"Black Citadel (1)\" },\n        { fileName: \"1968107.data\", name: \"Black Citadel (2)\" },\n        { fileName: \"280025.data\", name: \"Blazeridge Steppes\" },\n        { fileName: \"281313.data\", name: \"Fireheart Rise\" },\n        { fileName: \"282668.data\", name: \"Iron Marches\" },\n        { fileName: \"283574.data\", name: \"Fields of Ruin\" },\n      ],\n    },\n    {\n      name: \"03. Kryta\",\n      maps: [\n        { fileName: \"191000.data\", name: \"Lion's Arch (0)\" },\n        { fileName: \"814803.data\", name: \"Lion's Arch (1)\" },\n        { fileName: \"1019669.data\", name: \"Lion's Arch (Legacy)\" },\n        { fileName: \"1796999.data\", name: \"Lion's Arch (2)\" },\n        { fileName: \"1869665.data\", name: \"Lion's Arch (3)\" },\n        { fileName: \"1968576.data\", name: \"Lion's Arch (4)\" },\n        { fileName: \"128151.data\", name: \"Divinity's Reach (0)\" },\n        { fileName: \"191265.data\", name: \"Divinity's Reach (1)\" },\n        { fileName: \"705746.data\", name: \"Divinity's Reach (2)\" },\n        { fileName: \"1968748.data\", name: \"Divinity's Reach (3)\" },\n        { fileName: \"129834.data\", name: \"North of Divinity's Reach (0)\" },\n        { fileName: \"193081.data\", name: \"North of Divinity's Reach (1)\" },\n        { fileName: \"129524.data\", name: \"Queensdale (0)\" },\n        { fileName: \"192711.data\", name: \"Queensdale (1)\" },\n        { fileName: \"130970.data\", name: \"Kessex Hills (0)\" },\n        { fileName: \"194288.data\", name: \"Kessex Hills (1)\" },\n        { fileName: \"672138.data\", name: \"Kessex Hills (2)\" },\n        { fileName: \"861815.data\", name: \"Kessex Hills (3)\" },\n        { fileName: \"286945.data\", name: \"Bloodtide Coast\" },\n        { fileName: \"287870.data\", name: \"Harathi Hinterlands\" },\n        { fileName: \"289176.data\", name: \"Gendarran Fields\" },\n        { fileName: \"295005.data\", name: \"Chantry of Secrets\" },\n        { fileName: \"294938.data\", name: \"Claw Island\" },\n      ],\n    },\n    {\n      name: \"04. Maguuma Jungle\",\n      maps: [\n        { fileName: \"195149.data\", name: \"Caledon Forest\" },\n        { fileName: \"195493.data\", name: \"Metrica Province\" },\n        { fileName: \"922320.data\", name: \"Metrica Province Instance\" },\n        { fileName: \"198076.data\", name: \"The Grove (0)\" },\n        { fileName: \"1969341.data\", name: \"The Grove (1)\" },\n        { fileName: \"198272.data\", name: \"Rata Sum (0)\" },\n        { fileName: \"1968896.data\", name: \"Rata Sum (1)\" },\n        { fileName: \"291064.data\", name: \"Mount Maelstrom\" },\n        { fileName: \"292254.data\", name: \"Sparkfly Fen\" },\n        { fileName: \"293307.data\", name: \"Brisban Wildlands\" },\n      ],\n    },\n    {\n      name: \"05. Ruins of Orr\",\n      maps: [\n        { fileName: \"284829.data\", name: \"Straits of Devastation\" },\n        { fileName: \"285089.data\", name: \"Malchor's Leap\" },\n        { fileName: \"285634.data\", name: \"Cursed Shore\" },\n        { fileName: \"295179.data\", name: \"Cathedral of Hidden Depths\" },\n        { fileName: \"295962.data\", name: \"A Light in the Darkness\" },\n      ],\n    },\n    {\n      name: \"06. Living World S1\",\n      maps: [\n        { fileName: \"520479.data\", name: \"Southsun Cove\" },\n        { fileName: \"679089.data\", name: \"Tower of Nightmares\" },\n        { fileName: \"2469960.data\", name: \"Twisted Marionette\" },\n      ],\n    },\n    {\n      name: \"07. Living World S2\",\n      maps: [\n        { fileName: \"836211.data\", name: \"Dry top (0)\" },\n        { fileName: \"861770.data\", name: \"Dry top (1)\" },\n        { fileName: \"909361.data\", name: \"The Silverwastes (0)\" },\n        { fileName: \"996202.data\", name: \"The Silverwastes (1)\" },\n        { fileName: \"908730.data\", name: \"Glint's Lair\" },\n      ],\n    },\n    {\n      name: \"08. Heart of Maguuma\",\n      maps: [\n        { fileName: \"969663.data\", name: \"Verdant Brink\" },\n        { fileName: \"1262460.data\", name: \"Hearts and Minds\" },\n        { fileName: \"969964.data\", name: \"Unknown Airship in tree\" },\n        { fileName: \"1262310.data\", name: \"Dragon Stand\" },\n        { fileName: \"1263739.data\", name: \"Tarir\" },\n        { fileName: \"1264291.data\", name: \"Tangled Depths\" },\n      ],\n    },\n    {\n      name: \"09. Living World S3\",\n      maps: [\n        { fileName: \"1472635.data\", name: \"(E1) Bloodstone Fen\" },\n        { fileName: \"1498071.data\", name: \"(E2) Taimi Simulator\" },\n        { fileName: \"1498578.data\", name: \"(E2) Ring of Fire\" },\n        { fileName: \"1605211.data\", name: \"(E3) Bitterfrost Frontier\" },\n        { fileName: \"1645474.data\", name: \"(E4) Caudecus Manor\" },\n        { fileName: \"1646520.data\", name: \"(E4) Lake Doric\" },\n        { fileName: \"1682493.data\", name: \"(E5) Draconis Mons\" },\n        { fileName: \"1682763.data\", name: \"(E5) Titan's Throat\" },\n        { fileName: \"1734839.data\", name: \"(E6) White Mantle Fortress\" },\n        { fileName: \"1735346.data\", name: \"(E6) Siren's Landing\" },\n        { fileName: \"1735440.data\", name: \"(E6) Shining Blade Headquarters\" },\n      ],\n    },\n    {\n      name: \"10. Crystal Desert\",\n      maps: [\n        { fileName: \"1794574.data\", name: \"Crystal Oasis\" },\n        { fileName: \"1833034.data\", name: \"Desert Highlands\" },\n        { fileName: \"1833726.data\", name: \"PoF story instances\" },\n        { fileName: \"1839188.data\", name: \"Domain of Vabbi\" },\n        { fileName: \"1840103.data\", name: \"Elon Riverlands\" },\n        { fileName: \"1840368.data\", name: \"Kormir Sanctuary\" },\n        { fileName: \"1842533.data\", name: \"The Desolation\" },\n      ],\n    },\n    {\n      name: \"11. Living World S4\",\n      maps: [\n        { fileName: \"1901428.data\", name: \"(E1) Fahranur\" },\n        { fileName: \"1902235.data\", name: \"(E1) Istan\" },\n        { fileName: \"1903523.data\", name: \"(E1) Crystal Oasis\" },\n        { fileName: \"1954984.data\", name: \"(E2) Desert Highlands\" },\n        { fileName: \"1955224.data\", name: \"(E2) Inquest Lab Tower\" },\n        { fileName: \"1955471.data\", name: \"(E2) Rata Primus\" },\n        { fileName: \"1955642.data\", name: \"(E2) Divinity's Reach\" },\n        { fileName: \"1955915.data\", name: \"(E2) Mount Maelstrom\" },\n        { fileName: \"1956140.data\", name: \"(E2) Frostgorge Sound\" },\n        { fileName: \"1956245.data\", name: \"(E2) Void\" },\n        { fileName: \"1956299.data\", name: \"(E2) Hided Inquest Lab\" },\n        { fileName: \"1957526.data\", name: \"(E2) Sandswept Isles\" },\n        { fileName: \"2004704.data\", name: \"(E3) Domain of Kourna\" },\n        { fileName: \"2005467.data\", name: \"(E3) Crystal Oasis\" },\n        { fileName: \"2044320.data\", name: \"(E4) Jahai Bluffs\" },\n        { fileName: \"2044502.data\", name: \"(E4) The Mists\" },\n        { fileName: \"2124612.data\", name: \"Mists Rift\" },\n        { fileName: \"2092435.data\", name: \"(E5) Thunderhead Peaks\" },\n        { fileName: \"2092812.data\", name: \"(E5) The Auditorium (0)\" },\n        { fileName: \"2093450.data\", name: \"(E5) The Auditorium (1)\" },\n        { fileName: \"2093791.data\", name: \"(E5) Glint's Trials\" },\n        { fileName: \"2146125.data\", name: \"(E6) Dragonfall\" },\n        { fileName: \"2146312.data\", name: \"(E6) The Auditorium\" },\n        { fileName: \"2146346.data\", name: \"(E6) Dragonflight\" },\n        { fileName: \"2146376.data\", name: \"(E6) Sayida's Airship\" },\n        { fileName: \"2146510.data\", name: \"(E6) Descent\" },\n      ],\n    },\n    {\n      name: \"12. The Icebrood Saga\",\n      maps: [\n        { fileName: \"2203371.data\", name: \"Grothmar Valley\" },\n        {\n          fileName: \"2204239.data\",\n          name: \"Grothmar Valley (Blood Keep instances)\",\n        },\n        { fileName: \"2251232.data\", name: \"Bjora Marches\" },\n        { fileName: \"2249817.data\", name: \"Voice in the Deep (story)\" },\n        { fileName: \"2251447.data\", name: \"Eye of the North\" },\n        { fileName: \"2273128.data\", name: \"Darkrime Delves\" },\n        { fileName: \"2298865.data\", name: \"(E3) Drizzlewood Coast\" },\n        {\n          fileName: \"2299088.data\",\n          name: \"Drizzlewood Coast (Turnabout instance)\",\n        },\n        { fileName: \"2318029.data\", name: \"(E4) Drizzlewood Coast\" },\n        { fileName: \"2369116.data\", name: \"(E5C1) Dragon Response Mission: Gendarran Fields\" },\n        { fileName: \"2369582.data\", name: \"(E5C1) Rata Sum (Primordus Rising instance)\" },\n        { fileName: \"2370017.data\", name: \"(E5C1) Dragon Response Mission: Brisban Wildlands\" },\n        { fileName: \"2370614.data\", name: \"(E5C1) Dragon Response Mission: Metrica Province\" },\n        { fileName: \"2368400.data\", name: \"(E5C2) Dragon Response Mission: Lake Doric\" },\n        { fileName: \"2366776.data\", name: \"(E5C2) Dragon Response Mission: Fields of Ruin\" },\n        { fileName: \"2364032.data\", name: \"(E5C2) Dragon Response Mission: Thunderhead Peaks\" },\n        { fileName: \"2365787.data\", name: \"(E5C2) Dragon Response Mission: Snowden Drifts\" },\n        { fileName: \"2366368.data\", name: \"(E5C3) Dragon Response Mission: Fireheart Rise\" },\n        { fileName: \"2367211.data\", name: \"(E5C3) Dragon Response Mission: Bloodtide Coast\" },\n        { fileName: \"2369398.data\", name: \"(E5C3) Dragon Response Mission: Caledon Forest\" },\n        { fileName: \"2414140.data\", name: \"(E5C3) Draconis Mons (Wildfire instance)\" },\n        { fileName: \"2434582.data\", name: \"(E5C4) Dragonstorm\" },\n        { fileName: \"2434675.data\", name: \"(E5C4) Champion's End\" },\n      ],\n    },\n    {\n      name: \"13. End of Dragons (Beware, spoilers)\",\n      maps: [\n        { fileName: \"2639738\", name: \"Uncategorized: 2639738\" },\n        { fileName: \"2639795\", name: \"Uncategorized: 2639795\" },\n        { fileName: \"2640407\", name: \"Uncategorized: 2640407\" },\n        { fileName: \"2641850\", name: \"Uncategorized: 2641850\" },\n        { fileName: \"2642769\", name: \"Uncategorized: 2642769\" },\n        { fileName: \"2644196\", name: \"Uncategorized: 2644196\" },\n        { fileName: \"2644298\", name: \"Uncategorized: 2644298\" },\n        { fileName: \"2645519\", name: \"Uncategorized: 2645519\" },\n        { fileName: \"2645805\", name: \"Uncategorized: 2645805\" },\n        { fileName: \"2646104\", name: \"Uncategorized: 2646104\" },\n        { fileName: \"2647516\", name: \"Uncategorized: 2647516\" },\n        { fileName: \"2648082\", name: \"Uncategorized: 2648082\" },\n        { fileName: \"2649061\", name: \"Uncategorized: 2649061\" },\n        { fileName: \"2649141\", name: \"Uncategorized: 2649141\" },\n      ],\n    },\n    {\n      name: \"14. Seasonal Activities\",\n      maps: [\n        { fileName: \"506592.data\", name: \"Ascent to Madness\" },\n        { fileName: \"506670.data\", name: \"Mad King's Labyrinth (Past)\" },\n        { fileName: \"662436.data\", name: \"Mad King's Labyrinth (Present)\" },\n        { fileName: \"2499169.data\", name: \"Mad King's Labyrinth\" },\n        { fileName: \"506739.data\", name: \"Mad King's Clock Tower\" },\n        { fileName: \"622681.data\", name: \"The Crown Pavilion\" },\n        { fileName: \"569756.data\", name: \"SAB Hub (0)\" },\n        { fileName: \"636133.data\", name: \"SAB Hub (1)\" },\n        { fileName: \"635555.data\", name: \"SAB World 1\" },\n        { fileName: \"635960.data\", name: \"SAB World 2\" },\n        { fileName: \"606255.data\", name: \"Zephyr Sanctum\" },\n        { fileName: \"529896.data\", name: \"Tixx's Infinirarium\" },\n        { fileName: \"529945.data\", name: \"Winter Wonderland\" },\n        { fileName: \"2076921.data\", name: \"Secret Lair of the Snowmen\" },\n        { fileName: \"2164993.data\", name: \"Dragon Bash Arena\" },\n      ],\n    },\n    {\n      name: \"15. Activites\",\n      maps: [\n        { fileName: \"605983.data\", name: \"Sanctum Sprint\" },\n        { fileName: \"606030.data\", name: \"Basket Brawl\" },\n      ],\n    },\n    {\n      name: \"16. Dungeons\",\n      maps: [\n        { fileName: \"126840.data\", name: \"Ascalonian Catacombs (0)\" },\n        { fileName: \"189364.data\", name: \"Ascalonian Catacombs (1)\" },\n        { fileName: \"275474.data\", name: \"Sorrow's Embrace\" },\n        { fileName: \"276520.data\", name: \"Honor of the Waves\" },\n        { fileName: \"284039.data\", name: \"Citadel of Flame\" },\n        { fileName: \"287214.data\", name: \"Caudecus's Manor\" },\n        { fileName: \"291284.data\", name: \"Twilight Arbor (0)\" },\n        { fileName: \"645968.data\", name: \"Twilight Arbor (1)\" },\n        { fileName: \"293606.data\", name: \"Crucible of Eternity\" },\n        { fileName: \"473930.data\", name: \"The Ruined City of Arah\" },\n        { fileName: \"473765.data\", name: \"Arah - Story\" },\n        { fileName: \"580061.data\", name: \"Molten Facility\" },\n        { fileName: \"595722.data\", name: \"Aetherblade Retreat\" },\n      ],\n    },\n    {\n      name: \"17. Fractals\",\n      maps: [\n        { fileName: \"519839.data\", name: \"Fractals of the Mists\" },\n        { fileName: \"697450.data\", name: \"Thaumanova Reactor\" },\n        { fileName: \"1426653.data\", name: \"Cliffside Fractal\" },\n        { fileName: \"1472361.data\", name: \"Chaos Isle Fractal\" },\n        { fileName: \"1472382.data\", name: \"Snowblind Fractal\" },\n        { fileName: \"1472406.data\", name: \"Swampland Fractal\" },\n        { fileName: \"1498016.data\", name: \"Mistlock Observatory\" },\n        { fileName: \"1498798.data\", name: \"Aetherblade/Mai Trin Fractal\" },\n        { fileName: \"1605344.data\", name: \"Nightmare Fractal\" },\n        { fileName: \"1733857.data\", name: \"Shattered Observatory Fractal\" },\n        { fileName: \"1733961.data\", name: \"Mistlock Sanctuary\" },\n        { fileName: \"1905739.data\", name: \"Molten Boss Fractal\" },\n        { fileName: \"1905889.data\", name: \"Twilight Oasis Fractal\" },\n        { fileName: \"2005713.data\", name: \"Deepstone Fractal\" },\n        { fileName: \"2094098.data\", name: \"Siren's Reef Fractal\" },\n        { fileName: \"2187042.data\", name: \"Aquatic Ruins Fractal\" },\n        { fileName: \"2333932.data\", name: \"Sunqua Peak\" },\n      ],\n    },\n    {\n      name: \"18. Raid\",\n      maps: [\n        { fileName: \"1151420.data\", name: \"(W1) Spirit Vale\" },\n        { fileName: \"1383309.data\", name: \"(W2) Salvation Pass\" },\n        { fileName: \"1427048.data\", name: \"Special Forces Training Area\" },\n        { fileName: \"1454070.data\", name: \"(W3) Stronghold of the Faithful\" },\n        { fileName: \"1645215.data\", name: \"(W4) Bastion of the Penitent\" },\n        { fileName: \"1906329.data\", name: \"(W5) Hall of Chains\" },\n        { fileName: \"2045250.data\", name: \"(W6) Mythwright Gambit\" },\n        { fileName: \"2157962.data\", name: \"(W7) The Key of Ahdashim\" },\n      ],\n    },\n    {\n      name: \"19. Strike Missions\",\n      maps: [\n        {\n          fileName: \"2224355.data\",\n          name: \"Raven's Sanctum - Voice and Claw of the Fallen\",\n        },\n        {\n          fileName: \"2224381.data\",\n          name: \"Raven's Sanctum - Fraenir of Jormag\",\n        },\n        { fileName: \"2224406.data\", name: \"Raven's Sanctum - Boneskinner\" },\n        { fileName: \"2251486.data\", name: \"Voice in the Frozen Deep\" },\n        { fileName: \"2272807.data\", name: \"Forging Steel\" },\n      ],\n    },\n    {\n      name: \"20. Structured PvP\",\n      maps: [\n        { fileName: \"871093.data\", name: \"Original Stronghold\" },\n        { fileName: \"870987.data\", name: \"Battle of Champion's Dusk (0)\" },\n        { fileName: \"1666233.data\", name: \"Battle of Champion's Dusk (1)\" },\n        { fileName: \"132570.data\", name: \"Heart of the Mists (0)\" },\n        { fileName: \"197249.data\", name: \"Heart of the Mists (1)\" },\n        { fileName: \"1734729.data\", name: \"Heart of the Mists (2)\" },\n        { fileName: \"2129692.data\", name: \"Heart of the Mists (4)\" },\n        { fileName: \"1712986.data\", name: \"Hall of the Mists\" },\n        { fileName: \"132710.data\", name: \"The Battle of Khylo (0)\" },\n        { fileName: \"197402.data\", name: \"The Battle of Khylo (1)\" },\n        { fileName: \"132837.data\", name: \"Forest of Niflhel (0)\" },\n        { fileName: \"197545.data\", name: \"Forest of Niflhel (1)\" },\n        { fileName: \"376916.data\", name: \"Legacy of the Foefire\" },\n        { fileName: \"467374.data\", name: \"Raid on the Capricorn\" },\n        { fileName: \"520609.data\", name: \"Temple of the Silent Storm\" },\n        { fileName: \"579383.data\", name: \"Skyhammer (0)\" },\n        { fileName: \"677968.data\", name: \"Skyhammer (1)\" },\n        { fileName: \"1934470.data\", name: \"Skyhammer (2)\" },\n        { fileName: \"791564.data\", name: \"Courtyard (0)\" },\n        { fileName: \"1713054.data\", name: \"Courtyard (1)\" },\n        { fileName: \"556199.data\", name: \"Spirit Watch (0)\" },\n        { fileName: \"1473061.data\", name: \"Spirit Watch (1)\" },\n        { fileName: \"506539.data\", name: \"Reaper's Rumble\" },\n        { fileName: \"529718.data\", name: \"Snowball Mayhem\" },\n        { fileName: \"595582.data\", name: \"Dragon Ball Arena\" },\n        { fileName: \"617120.data\", name: \"Aspect Arena\" },\n        { fileName: \"1644624.data\", name: \"Revenge of the Capricorn\" },\n        { fileName: \"1704155.data\", name: \"Eternal Coliseum\" },\n        { fileName: \"2128880.data\", name: \"Eternal Coliseum (1)\" },\n        { fileName: \"2128938.data\", name: \"Djinn's Dominion\" },\n        { fileName: \"2175965.data\", name: \"Djinn's Dominion (1)\" },\n        { fileName: \"2187125.data\", name: \"Auric Span\" },\n      ],\n    },\n    {\n      name: \"21. World vs World\",\n      maps: [\n        { fileName: \"131235.data\", name: \"Eternal Battlegrounds (0)\" },\n        { fileName: \"195806.data\", name: \"Eternal Battlegrounds (1)\" },\n        { fileName: \"1885693.data\", name: \"Eternal Battlegrounds (2)\" },\n        { fileName: \"1918037.data\", name: \"Eternal Battlegrounds (3)\" },\n        { fileName: \"2263889.data\", name: \"Eternal Battlegrounds (4)\" },\n        { fileName: \"131574.data\", name: \"Alpine Borderlands (0)\" },\n        { fileName: \"641501.data\", name: \"Alpine Borderlands (1)\" },\n        { fileName: \"1799855.data\", name: \"Alpine Borderlands (2)\" },\n        { fileName: \"1647236.data\", name: \"Desert Borderlands (0)\" },\n        { fileName: \"1799442.data\", name: \"Desert Borderlands (1)\" },\n        { fileName: \"2112733.data\", name: \"Desert Borderlands (3)\" },\n        { fileName: \"736241.data\", name: \"Edge of the Mists\" },\n        { fileName: \"2113077.data\", name: \"Armistice Bastion\" },\n      ],\n    },\n    {\n      name: \"22. Guild Halls\",\n      maps: [\n        { fileName: \"1255378.data\", name: \"Gilded Hollow\" },\n        { fileName: \"1256064.data\", name: \"Lost Precipice\" },\n        { fileName: \"1843274.data\", name: \"Windswept Haven\" },\n      ],\n    },\n    {\n      name: \"23. Concept and not released\",\n      maps: [\n        { fileName: \"122695.data\", name: \"Empty Plane\" },\n        { fileName: \"184799.data\", name: \"Empty Plane v1\" },\n        { fileName: \"197562.data\", name: \"Empty Plane v2\" },\n        { fileName: \"2224624.data\", name: \"Empty Plane v3\" },\n        { fileName: \"2257438.data\", name: \"Empty Plane v4\" },\n        { fileName: \"875614.data\", name: \"Unknown Mists Platforms\" },\n        { fileName: \"132853.data\", name: \"Empty Box\" },\n        { fileName: \"1255516.data\", name: \"Guild Coliseum\" },\n        { fileName: \"1498193.data\", name: \"Concept sPVP Map 1\" },\n        { fileName: \"1513556.data\", name: \"Concept sPVP Map 2\" },\n        { fileName: \"1513607.data\", name: \"Concept sPVP Map 3\" },\n        { fileName: \"1513620.data\", name: \"Concept sPVP Map 4\" },\n        { fileName: \"1513675.data\", name: \"Concept sPVP Map 5\" },\n        { fileName: \"1712945.data\", name: \"Concept sPVP Map 6\" },\n        { fileName: \"2224545.data\", name: \"Norrhart Domains prototype\" },\n      ],\n    },\n  ],\n};\n","/*\nCopyright © Tyria3DLibrary project contributors\n\nThis file is part of the Tyria 3D Library.\n\nTyria 3D Library is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nTyria 3D Library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with the Tyria 3D Library. If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/* INCLUDES */\nconst LocalReader = require(\"./LocalReader/LocalReader\");\n\n/* PRIVATE VARS */\nconst _version = require(\"../package.json\").version;\nconst _settings = {\n  t3dtoolsWorker: \"modules/t3dtools/t3dworker.js\",\n  concurrentTasks: typeof navigator !== \"undefined\" ? navigator.hardwareConcurrency : 1,\n};\n\n/* PUBLIC PROPERTIES */\n\n/**\n * Tyria 3D Library main module.\n *\n * Use this static class to access file parsers- and data renderer classes.\n *\n * This class also works as a factory for creating\n * LocalReader instances that looks up and inflates files from the Guild Wars 2 .dat.\n * @module T3D\n */\nconst T3D = (module.exports = {\n  /**\n   * The current library version. Used to make sure local storage caches are not\n   * shared between different releases.\n   *\n   * @property version\n   * @type String\n   */\n  version: _version,\n\n  /* FILES */\n\n  /**\n   * A static reference to the GW2File class, the preferred way of\n   * accessing this class.\n   *\n   * @memberof T3D\n   * @property GW2File\n   * @type Class\n   */\n  GW2File: require(\"./format/file/GW2File\"),\n\n  /**\n   * A static reference to the GW2Chunk class, the preferred way of\n   * accessing this class.\n   *\n   * @memberOf T3D\n   * @property GW2Chunk\n   * @type Class\n   */\n  GW2Chunk: require(\"./format/file/GW2Chunk\"),\n\n  /* RENDERERS */\n\n  /**\n   * A static reference to the DataRenderer class, the preferred way of\n   * accessing this class.\n   *\n   * @readonly\n   * @property DataRenderer\n   * @type Class\n   */\n  DataRenderer: require(\"./dataRenderer/DataRenderer\"),\n\n  /**\n   * A static reference to the EnvironmentRenderer class, the preferred way of\n   * accessing this class.\n   *\n   * @readonly\n   * @property EnvironmentRenderer\n   * @type Class\n   */\n  EnvironmentRenderer: require(\"./dataRenderer/EnvironmentRenderer\"),\n\n  /**\n   * A static reference to the HavokRenderer class, the preferred way of\n   * accessing this class.\n   *\n   * @readonly\n   * @property HavokRenderer\n   * @type Class\n   */\n  HavokRenderer: require(\"./dataRenderer/HavokRenderer\"),\n\n  /**\n   * A static reference to the PropertiesRenderer class, the preferred way of\n   * accessing this class.\n   *\n   * @readonly\n   * @property PropertiesRenderer\n   * @type Class\n   */\n  PropertiesRenderer: require(\"./dataRenderer/PropertiesRenderer\"),\n\n  /**\n   * A static reference to the SingleModelRenderer class, the preferred way of\n   * accessing this class.\n   *\n   * @readonly\n   * @property SingleModelRenderer\n   * @type Class\n   */\n  SingleModelRenderer: require(\"./dataRenderer/SingleModelRenderer\"),\n\n  /**\n   * A static reference to the TerrainRenderer class, the preferred way of\n   * accessing this class.\n   *\n   * @readonly\n   * @property TerrainRenderer\n   * @type Class\n   */\n  TerrainRenderer: require(\"./dataRenderer/TerrainRenderer\"),\n\n  /**\n   * A static reference to the ZoneRenderer class, the preferred way of\n   * accessing this class.\n   *\n   * @readonly\n   * @property ZoneRenderer\n   * @type Class\n   */\n  ZoneRenderer: require(\"./dataRenderer/ZoneRenderer\"),\n\n  /**\n   * A static reference to the StringRenderer class, the preferred way of\n   * accessing this class.\n   *\n   * @readonly\n   * @property StringRenderer\n   * @type Class\n   */\n  StringRenderer: require(\"./dataRenderer/StringRenderer\"),\n\n  /* LOGGING */\n\n  /**\n   * A static reference to the static Logger object, the preferred way of\n   * accessing this object. A simple way of providing your own logging methods\n   * is to simply overwrite any or all of the logging methods specified in\n   * {{#crossLink \"Logger/logFunctions:property\"}}{{/crossLink}}\n   *\n   * @property Logger\n   * @type Object\n   */\n  Logger: require(\"./Logger\"),\n\n  /* SETTINGS */\n\n  /**\n   * Contains a list of known map fileID:s and their names. Used in order to quickly\n   * look up what maps are in a .dat file. Note that this property is hard coded and\n   * has high probablity of being outdated. Also note that the names are just guesses\n   * by RequestTimeout.\n   *\n   * The format of this list objects is\n   *\n   *\n   *   {\n   *    maps : [\n   *        {\n   *           name:\"World Area Name\",\n   *             maps:[\n   *               { fileName :\"[numeric fileId].data\", name:\"Map Name One\" },\n   *                 { fileName :\"[numeric fileId].data\", name:\"Map Name Two\" },\n   *                 { fileName :\"[numeric fileId].data\", name:\"Map Name Three\" }\n   *                ]\n   *           },\n   *           {\n   *          name:\"Another World Area Name\",\n   *            maps:[\n   *              { fileName :\"[numeric fileId].data\", name:\"Map Name 408\" }\n   *          ]\n   *         }\n   *     ]\n   *   }\n   *\n   * @readonly\n   * @property MapFileList\n   * @type Object\n   */\n  MapFileList: require(\"./MapFileList\"),\n\n  /* UTILS */\n\n  /**\n   * A static reference to the MaterialUtils class.\n   *\n   * @readonly\n   * @property MaterialUtils\n   * @type Object\n   */\n  MaterialUtils: require(\"./util/MaterialUtils.js\"),\n\n  /**\n   * A static reference to the MathUtils class.\n   *\n   * @readonly\n   * @property MathUtils\n   * @type Object\n   */\n  MathUtils: require(\"./util/MathUtils.js\"),\n\n  /**\n   * A static reference to the ParserUtils class.\n   *\n   * @readonly\n   * @property ParserUtils\n   * @type Object\n   */\n  ParserUtils: require(\"./util/ParserUtils.js\"),\n\n  /**\n   * A static reference to the RenderUtils class.\n   *\n   * @readonly\n   * @property RenderUtils\n   * @type Object\n   */\n  RenderUtils: require(\"./util/RenderUtils.js\"),\n\n  /**\n   * A static reference to the PersistantStore class.\n   *\n   * @readonly\n   * @property PersistantStore\n   * @type Class\n   */\n  PersistantStore: require(\"./LocalReader/PersistantStore\"),\n\n  /**\n   * A static reference to the FileTypes tools and list.\n   *\n   * @readonly\n   * @property FileTypes\n   * @type Object\n   */\n  FileTypes: require(\"./LocalReader/FileTypes\"),\n\n  /* PUBLIC METHODS */\n\n  /**\n   * Creates a new instance of LocalReader with an pNaCl inflater connected to it.\n   *\n   * @async\n   * @param  {File}     file    Core JS File instance, must refer to a GW2 .dat file\n   * @param  {Function}  callback  Callback function, fired when the file index is fully\n   *                                 constructed. Takes no arguments.\n   *\n   * @param  {String}   t3dtoolsWorker URL to the inflater file. If omitted\n   *                                 _settings.t3dtoolsWorker will be used instead.\n   *\n   * @return {LocalReader}      The contructed LocalReader, note that this object\n   *                                 will not be fully initialized until the callback\n   *                                 is fired.\n   */\n  getLocalReader: function (file, callback, t3dtoolsWorker, noIndexedDB) {\n    const path = t3dtoolsWorker || _settings.t3dtoolsWorker;\n\n    // Create the instance and init the threads\n    const lrInstance = new LocalReader({\n      workerPath: path,\n      workersNb: _settings.concurrentTasks,\n      noIndexedDB,\n    });\n\n    /// Callback with the lrInstance\n    lrInstance.openArchive(file).then(() => {\n      callback(lrInstance);\n    });\n\n    return lrInstance;\n  },\n\n  /**\n   * Utility method for acceccing a list containing information about all files\n   * in the .dat connected to the provided LocalReader instance. This method first\n   * tries to read a local indexing list from the client's localstorage and\n   * fallbacks to generating the list by scanning the MFT indices of the .dat\n   * and peeking each file in order to find out what filetype it has.\n   *\n   * Note that peeking the files is the time consuming task, so if you don't want\n   * yout application to spend time indexing the .dat and have a priori knowledge\n   * about the required file Id's you should not use this method.\n   *\n   * @async\n   * @param  {LocalReader}  localReader A fully initialized LocalReader instance\n   * @param  {Function}    callback    Fires when the index has been loaded\n   *                                     from the localstorage or after it has\n   *                                     been built and stored in localstorage.\n   *                                     Takes the generated object list of\n   *                                     files as an argument. This list groups\n   *                                     arrays of MFT indices per file type,\n   *                                     for exmample:\n   *\n   *\n   *   {\n   *      \"Unknown\"  : [444, 555, 333],\n   *      \"MODL\"    : [444, 555, 333],\n   *       \"String\"  : [666, 777, 888]\n   *   }\n   *\n   * For more details see\n   * {{#crossLink \"LocalReader/listFiles:method\"}}{{/crossLink}}\n   */\n  getFileListAsync: function (localReader, callback) {\n    localReader.readFileList().then((result) => {\n      const returnObj = {};\n      for (const fileEntry of result) {\n        if (returnObj[fileEntry.fileType] === undefined) {\n          returnObj[fileEntry.fileType] = [];\n        }\n        returnObj[fileEntry.fileType].push(fileEntry.mftId);\n      }\n      callback(returnObj);\n    });\n  },\n\n  /**\n   * Utility method for acceccing a list containing information about all map files\n   * in the .dat connected to the provided LocalReader instance. This method first\n   * tries to read a local indexing list from the client's localstorage and\n   * fallbacks to generating the list by scanning the MFT indices of the .dat\n   * and peeking each file in order to find out what filetype it has.\n   *\n   * If the searchAll flag is not set to true, this process will only scan files\n   * from the {{#crossLink \"T3D/MapFileList:property\"}}{{/crossLink}}\n   *\n   * @async\n   * @param {LocalReader}  localReader  A fully initialized LocalReader instance\n   * @param {Function}  callback  Fires when the index has been loaded\n   *                                   from the localstorage or after it has\n   *                                   been built and stored in localstorage.\n   *                                   Takes the generated object list of\n   *                                   files as an argument. This list groups\n   *                                   arrays of MFT indices per file type,\n   *                                   for exmample:\n   *\n   *     {\n   *       maps:[\n   *         {\n   *           name: 'Heart of Maguuma',\n   *           maps: [\n   *             {fileName:1151420, name:'HoT BWE3 Raid'},\n   *             {fileName:969663, name:'Verdant Brink}\n   *           ]\n   *         },\n   *         {\n   *           name: 'Unknown maps',\n   *           maps: [\n   *             {fileName:12345678, name:'Unknown map 12345678'}\n   *           ]\n   *         }\n   *       ]\n\n  *      };\n  * @param {boolean} searchAll if true forces re-indexing of entire dat.\n  */\n  getMapListAsync: function (localReader, callback, searchAll) {\n    function restoreOuput(array) {\n      const returnArray = [];\n      for (const elt of array) {\n        let category = returnArray.findIndex((i) => i.name === elt.category);\n        if (category === -1) {\n          category = returnArray.push({ name: elt.category, maps: [] }) - 1;\n        }\n        returnArray[category].maps.push({\n          fileName: elt.baseId,\n          name: elt.name,\n        });\n      }\n      // And resort it in order\n      returnArray.sort((i, j) => {\n        if (i.name < j.name) return -1;\n        if (i.name > j.name) return 1;\n        return 0;\n      });\n      return { maps: returnArray };\n    }\n\n    /// If seachAll flag is true, force a deep search\n    if (searchAll) {\n      localReader.readFileList().then(() => {\n        callback(restoreOuput(localReader.getMapList()));\n      });\n      return;\n    } else {\n      callback(restoreOuput(localReader.getMapList()));\n    }\n  },\n\n  /**\n   * Utility method used for rendering map files. Loads a map file and applies\n   * the provided renderers to it.\n   *\n   * @async\n   * @param  {LocalReader}  localReader A fully initialized LocalReader instance\n   * @param  {Number}       fileName  The File Id of a mapc file.\n   * @param  {Array}       renderers  An array of renderer classes. Each\n   *                                   class should extend\n   *                                   {{#crossLink \"DataRenderer\"}}{{/crossLink}}\n   * @param  {Function}    callback    Callback function, takes the shared\n   *                                     renderer context as an argument.\n   * @param  {Class}      logger      A logger class of the same type as\n   *                                   {{#crossLink \"Logger\"}}{{/crossLink}}\n   */\n  renderMapContentsAsync: function (localReader, fileName, renderers, callback, logger) {\n    /// VO for storing result from renderers\n    const context = {};\n\n    let runAllRenderers;\n\n    /// Make sure we got an actuall ID number\n    if (parseInt(fileName)) {\n      /// File name is baseId, load using local reader.\n      localReader.loadFile(fileName, function (arrayBuffer) {\n        /// Set up datastream\n        const ds = new DataStream(arrayBuffer, 0, DataStream.LITTLE_ENDIAN);\n\n        /// Initiate Map file object. Connect callback\n        const mapFile = new T3D.GW2File(ds, 0);\n\n        /// Populate VO by running the renderers\n        runAllRenderers = function (i) {\n          /// Run each renderer\n          if (i < renderers.length) {\n            T3D.runRenderer(\n              renderers[i].renderClass,\n              localReader,\n              Object.assign(renderers[i].settings, { mapFile: mapFile }),\n              context,\n              runAllRenderers.bind(this, i + 1)\n            );\n          }\n\n          /// Fire callback with VO when done\n          else {\n            callback(context);\n          }\n        };\n\n        /// Starting point for running each renderer\n        runAllRenderers(0);\n      });\n    }\n\n    /// Primitive error message...\n    else {\n      const outputLogger = logger || T3D.Logger;\n      outputLogger.log(T3D.Logger.TYPE_ERROR, \"Map id must be an integer!, was:\", fileName);\n    }\n  },\n\n  /**\n   * Utility method for applying a single renderer to a LocalReader insatnce.\n   *\n   * @async\n   *\n   * @param  {Class}    renderClass  A class extending\n   *                                  {{#crossLink \"DataRenderer\"}}{{/crossLink}}\n   * @param  {LocalReader}localReader A fully initialized LocalReader instance\n   * @param  {Object}    settings    Settings passed to the renderer. Often\n   *                                 specifies thinks like what file ID should\n   *                                 be loaded.\n   * @param  {Object}    context     The shared renderer context value object.\n   * @param  {Function}   cb          Callback method passed to the renderAsync\n   *                                   method of the renderer.\n   */\n  runRenderer: function (renderClass, localReader, settings, context, cb) {\n    const r = new renderClass(localReader, settings, context, undefined, renderClass.rendererName);\n\n    r.renderAsync(cb);\n  },\n\n  /**\n   * @param  {Object} context        A shared renderer context value object.\n   * @param  {Class}   clazz         A class extending\n   *                                  {{#crossLink \"DataRenderer\"}}{{/crossLink}}.\n   *                                  Specifies for renderer class you want to read\n   *                                  output.\n   * @param  {String} propName       The name of the property written by the\n   *                                  renderer that should retrtieved.\n   * @param  {any}   defaultValue   This value is passed back if no data could\n   *                                be found.\n   * @return {any}            The specified value from the conext if any,\n   *                              otherwise defaultValue.\n   */\n  getContextValue: function (context, clazz, propName, defaultValue) {\n    const output = context[clazz.rendererName];\n    if (output) {\n      return output[propName] ? output[propName] : defaultValue;\n    }\n    return defaultValue;\n  },\n\n  /**\n   * Check if the client web browser can render WebGL 3D content.\n   *\n   * @private\n   * @param  {boolean} return_context flag making this method return the canvas object instead of true\n   * @return {boolean} true if the client is WebGL enabled, false otherwise\n   */\n  hasWebGL: function (return_context) {\n    if (window.WebGLRenderingContext) {\n      const canvas = document.createElement(\"canvas\");\n      const names = [\"webgl\", \"experimental-webgl\", \"moz-webgl\", \"webkit-3d\"];\n      let context = false;\n\n      for (let i = 0; i < 4; i++) {\n        try {\n          context = canvas.getContext(names[i]);\n          if (context && typeof context.getParameter === \"function\") {\n            // WebGL is enabled\n            if (return_context) {\n              // return WebGL object if the function's argument is present\n              return { name: names[i], gl: context };\n            }\n            // else, return just true\n            return true;\n          }\n        } catch (e) {\n          //continue\n        }\n      }\n\n      // WebGL is supported, but disabled\n      return false;\n    }\n\n    // WebGL not supported\n    return false;\n  },\n\n  formats: require(\"./format/chunks/AllFormats\"),\n});\n\n/* PRIVATE METHODS */\n\n/**\n * Performs checks for required browser capabilities and required third party libraries.\n * Loggs any warnings or error messages.\n *\n * @private\n * @return {Number} The ammount of errors and warnings generated.\n */\nfunction checkRequirements() {\n  let numErrors = 0;\n\n  if (!global.window || !window.indexedDB) {\n    T3D.Logger.log(T3D.Logger.TYPE_ERROR, \"T3D persistant storing and loading requires indexedDB support.\");\n    numErrors++;\n  }\n\n  if (typeof DataStream === \"undefined\") {\n    T3D.Logger.log(T3D.Logger.TYPE_ERROR, \"T3D core functionality requires DataStream library.\");\n    numErrors++;\n  }\n\n  if (typeof THREE === \"undefined\") {\n    T3D.Logger.log(T3D.Logger.TYPE_WARNING, \"T3D mesh generation requires three.js library.\");\n    numErrors++;\n  }\n\n  if (numErrors < 1) {\n    T3D.Logger.log(T3D.Logger.TYPE_MESSAGE, \"Tyria 3D API v\" + T3D.version + \" initialized.\");\n  }\n\n  return numErrors;\n}\n\n/**\n * Performs a quick and dirty check to find what chunk name definitions\n * appear multiple times in th formats array. Note that anything that\n * appears more than 2 times wil get a too hight value due to the\n * algorithm being... incorrect.\n *\n * @private\n * @return {Object} An object mapping duplicate chunk definition names.\n * to the number of apperances.\n */\n// eslint-disable-next-line no-unused-vars\nfunction findDuplicateChunkDefs() {\n  const dups = {};\n  T3D.formats.forEach(function (f1) {\n    T3D.formats.forEach(function (f2) {\n      if (f2.name === f1.name && f2 !== f1) {\n        if (dups[f1.name]) {\n          dups[f1.name]++;\n        } else {\n          dups[f1.name] = 1;\n        }\n      }\n    });\n  });\n  return dups;\n}\n\n/// Library checks requirements on startup\ncheckRequirements();\n","/*\nCopyright © Tyria3DLibrary project contributors\n\nThis file is part of the Tyria 3D Library.\n\nTyria 3D Library is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nTyria 3D Library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with the Tyria 3D Library. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nconst GW2File = require(\"../format/file/GW2File\");\n\n/**\n * Base class for data interpretors a.k.a. 'Renderers'\n *\n * Renderers are classes that collect and interpret data from the dat file.\n *\n * A {{#crossLink \"LocalReader\"}}{{/crossLink}} instance is used for accessing data from the dat.\n *\n * A {{#crossLink \"Logger\"}}{{/crossLink}} is used for posting progress output or error messages.\n *\n * Most Renderers use one or more\n * {{#crossLink \"GW2Chunk\"}}GW2Chunks{{/crossLink}}, typed data structures that can be read from\n * {{#crossLink \"GW2File\"}}GW2Files{{/crossLink}}.\n *\n * The generated data, be it strings, numbers or meshes are put into a value object structure called\n * the 'context'. The context can store data generated by multiple renderers and makes sure each\n * renderer type, or class has it's own value object within the context. This enables one renderer\n * to read data written by another renderer wihtout having to worry about overwriting existing data\n * within the context. Keep in mind that you will have to manually pass and clean the conext object!\n *\n * A clean context object should just be the empty javasript object : {}.\n *\n * When a Renderer is done it will fire the callback and any view interrested in retrieving the generated\n * data from the context can read it using\n * {{#crossLink \"T3D/getContextValue:method\"}}{{/crossLink}}.\n *\n *\n *\n *\n * @class DataRenderer\n * @constructor\n * @param  {LocalReader} localReader  The LocalReader instance to read data from.\n * @param  {Object} settings     Any settings used by this renderer.\n * @param  {Object} context      Shared value object between renderers.\n * @param  {Logger} logger       The logging class to use for progress, warnings, errors et cetera.\n */\nclass DataRenderer {\n  constructor(localReader, settings, context, logger, rendererName = \"DataRenderer\") {\n    this.rendererName = rendererName;\n    /// Just storing parameters\n    this.localReader = localReader;\n    this.settings = settings;\n    if (!settings) {\n      settings = {};\n    }\n    this.context = context;\n    this.context[rendererName] = {};\n\n    if (logger) this.logger = logger;\n    else this.logger = T3D.Logger;\n  }\n\n  /**\n   * Gets the output value object for a specified class within the context.\n   *\n   * @param  {Class} otherClass The class to fetch the output value object for.\n   * If not specified the class of this instance will be used.\n   * @return {Object}            The output value object for this class within the context.\n   */\n  getOutput(otherClass) {\n    return this.context[otherClass ? otherClass.rendererName : this.rendererName];\n  }\n\n  /**\n   * Basic rendering of unknown files. Output fileds generated:\n   *\n   * - *fileId* The fileId passed in the settings parameter when constructing this instance.\n   *\n   * - *rawData* An ArrayBuffer containg the infalted binary data of the loaded file.\n   *\n   * - *rawString* A string representation of the rawData\n   *\n   * - *image* A value object witht he fields 'width', 'height' and 'data' describing a RGBA bitmap\n   * image. Only set if the loaded file was a texture.\n   *\n   * - *file* A GW2File representation of the loaded file. Only set if the loaded file was a Pack File.\n   *\n   * @async\n   * @param  {Function} callback Fires when renderer is finished, does not take arguments.\n   */\n  renderAsync(callback) {\n    const self = this;\n\n    this.localReader.loadFile(this.settings.id, function (inflatedData) {\n      /// Set fileId so callers can identify this VO\n      self.getOutput().fileId = self.settings.id;\n\n      /// Share inflated data\n      self.getOutput().rawData = inflatedData;\n\n      /// Construct raw string\n      const uarr = new Uint8Array(inflatedData);\n      const rawStrings = [];\n      const chunksize = 0xffff;\n      const len = Math.min(uarr.length, 10000);\n\n      // There is a maximum stack size. We cannot call String.fromCharCode with as many arguments as we want\n      for (let i = 0; i * chunksize < len; i++) {\n        rawStrings.push(String.fromCharCode.apply(null, uarr.subarray(i * chunksize, (i + 1) * chunksize)));\n      }\n\n      if (len < uarr.length) {\n        rawStrings.push(\"T3D Ignored the last \" + (uarr.length - len) + \" bytes when generating this raw output\");\n      }\n\n      self.getOutput().rawString = rawStrings.join();\n\n      /// Check if this is an PF or ATEX file\n      // Binareis are MZ\n      const ds = new DataStream(inflatedData);\n      const first4 = ds.readCString(4);\n\n      /// Do special stuff for different fcc signatures\n      ///\n      /// fourcc != fcc::ATEX && fourcc != fcc::ATEC && fourcc != fcc::ATEP &&\n      /// fourcc != fcc::ATET && fourcc != fcc::ATEU && fourcc != fcc::ATTX)\n      ///\n      if (\n        first4 === \"ATEX\" ||\n        first4 === \"ATEC\" ||\n        first4 === \"ATEP\" ||\n        first4 === \"ATET\" ||\n        first4 === \"ATEU\" ||\n        first4 === \"ATTX\"\n      ) {\n        /// TODO: MOVE TO GW2 texture file!!\n        /// Load file using LocalReader.\n        self.localReader.loadFile(\n          self.settings.id,\n          function (inflatedData, dxtType, imageWidth, imageHeigth) {\n            /// Create image using returned data.\n            const image = {\n              data: new Uint8Array(inflatedData),\n              width: imageWidth,\n              height: imageHeigth,\n            };\n\n            self.getOutput().image = image;\n            callback();\n          },\n          true\n        );\n      } else if (first4.indexOf(\"PF\") === 0) {\n        self.getOutput().file = new GW2File(ds, 0);\n        callback();\n      } else {\n        self.getOutput().file = null;\n        callback();\n      }\n    });\n  }\n}\n\nDataRenderer.rendererName = \"DataRenderer\";\nmodule.exports = DataRenderer;\n","/*\nCopyright © Tyria3DLibrary project contributors\n\nThis file is part of the Tyria 3D Library.\n\nTyria 3D Library is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nTyria 3D Library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with the Tyria 3D Library. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nconst MaterialUtils = require(\"../util/MaterialUtils\");\nconst DataRenderer = require(\"./DataRenderer\");\n\n/**\n *\n * A renderer that generates some of the environment objects of a map.\n *\n * @class EnvironmentRenderer\n * @constructor\n * @extends DataRenderer\n * @param  {LocalReader} localReader  The LocalReader instance to read data from.\n * @param  {Object} settings     Any settings used by this renderer.\n * *Must* specify \"mapFile\", a GW2File.\n * @param  {Object} context      Shared value object between renderers.\n * @param  {Logger} logger       The logging class to use for progress, warnings, errors et cetera.\n */\nclass EnvironmentRenderer extends DataRenderer {\n  constructor(localReader, settings, context, logger) {\n    super(localReader, settings, context, logger, \"EnvironmentRenderer\");\n\n    this.mapFile = this.settings.mapFile;\n  }\n\n  getMat(tex) {\n    return new THREE.MeshBasicMaterial({\n      map: tex,\n      side: THREE.BackSide,\n      fog: false,\n      depthWrite: false,\n    });\n  }\n\n  loadTextureWithFallback(targetMatIndices, materialArray, filename, fallbackFilename, hazeColorAsInt) {\n    const self = this;\n\n    function writeMat(mat) {\n      targetMatIndices.forEach(function (i) {\n        materialArray[i] = mat;\n      });\n    }\n\n    function loadFallback() {\n      const mat = self.getMat(new THREE.TextureLoader().load(fallbackFilename));\n\n      writeMat(mat);\n    }\n\n    function errorCallback() {\n      setTimeout(loadFallback, 1);\n    }\n\n    const mat = self.getMat(\n      MaterialUtils.loadLocalTexture(this.localReader, filename, null, hazeColorAsInt, errorCallback)\n    );\n\n    writeMat(mat);\n  }\n\n  getHazeColor(environmentChunkData) {\n    const hazes = environmentChunkData && environmentChunkData.dataGlobal.haze;\n\n    if (!hazes || hazes.length <= 0) {\n      return [190, 160, 60];\n    } else {\n      return hazes[0].farColor;\n    }\n  }\n\n  parseLights(environmentChunkData) {\n    const self = this;\n\n    /// Set up output array\n    self.getOutput().lights = [];\n\n    const lights = environmentChunkData\n      ? environmentChunkData.dataGlobal.lighting\n      : [\n          {\n            lights: [],\n            backlightIntensity: 1.0,\n            backlightColor: [255, 255, 255],\n          },\n        ];\n\n    let ambientLight;\n\n    // var light = lights[0];\n    //\n    let hasLight = false;\n    lights.forEach(function (light /*, idx*/) {\n      if (hasLight) return;\n\n      /// Directional lights\n      /* eslint-disable-next-line no-unused-vars */\n      let sumDirLightIntensity = 0;\n\n      light.lights.forEach(function (dirLightData /*, idx*/) {\n        hasLight = true;\n\n        const color = new THREE.Color(\n          dirLightData.color[2] / 255.0,\n          dirLightData.color[1] / 255.0,\n          dirLightData.color[0] / 255.0\n        );\n\n        const directionalLight = new THREE.DirectionalLight(color.getHex(), dirLightData.intensity);\n\n        directionalLight.position\n          .set(-dirLightData.direction[0], dirLightData.direction[2], dirLightData.direction[1])\n          .normalize();\n\n        sumDirLightIntensity += dirLightData.intensity;\n\n        self.getOutput().lights.push(directionalLight);\n      }); // END for each directional light in light\n\n      /// Add some random directional lighting if there was no, in order to se SOME depth on models\n      if (!light.lights || light.lights.length === 0) {\n        const directions = [\n          [0, 1, 0, 0.3],\n          [1, 2, 1, 0.3],\n          [-1, -2, -1, 0.3],\n        ];\n\n        directions.forEach(function (lightDir) {\n          const color = new THREE.Color(1, 1, 1);\n          const intensity = lightDir[3];\n          const directionalLight = new THREE.DirectionalLight(color.getHex(), intensity);\n\n          directionalLight.position.set(lightDir[0], lightDir[1], lightDir[2]).normalize();\n\n          // eslint-disable-next-line no-unused-vars\n          sumDirLightIntensity += intensity;\n\n          self.getOutput().lights.push(directionalLight);\n        });\n      }\n\n      /// Ambient light\n      // light.backlightIntensity /= sumDirLightIntensity +light.backlightIntensity;\n      // light.backlightIntensity = light.backlightIntensity;\n      const color = new THREE.Color(\n        (light.backlightIntensity * (255.0 - light.backlightColor[2])) / 255.0,\n        (light.backlightIntensity * (255.0 - light.backlightColor[1])) / 255.0,\n        (light.backlightIntensity * (255.0 - light.backlightColor[0])) / 255.0\n      );\n\n      ambientLight = new THREE.AmbientLight(color);\n    }); // END for each light in lighting\n\n    let ambientTotal = 0;\n    if (ambientLight) {\n      ambientTotal = ambientLight.color.r + ambientLight.color.g + ambientLight.color.b;\n      this.getOutput().lights.push(ambientLight);\n    }\n\n    /// Parsing done, set hasLight flag and return\n    this.getOutput().hasLight = hasLight || ambientTotal > 0;\n  }\n\n  parseSkybox(environmentChunkData, parameterChunkData, hazeColorAsInt) {\n    /// set up output array\n    this.getOutput().skyCubeTexture = null;\n    this.getOutput().skyBox = null;\n\n    /// Grab sky texture.\n    /// index 0 and 1 day\n    /// index 2 and 3 evening\n    let skyModeTex = environmentChunkData && environmentChunkData.dataGlobal.skyModeTex[0];\n\n    /// Fallback skyboxfrom dat.\n    if (!skyModeTex) {\n      skyModeTex = {\n        texPathNE: 187554,\n        texPathSW: 187556,\n        texPathT: 187558,\n      };\n    }\n\n    /// Calculate bounds\n    const bounds = parameterChunkData.rect;\n    const mapW = Math.abs(bounds[0] - bounds[2]);\n    const mapD = Math.abs(bounds[1] - bounds[3]);\n    // eslint-disable-next-line no-unused-vars\n    const boundSide = Math.max(mapW, mapD);\n\n    const materialArray = [];\n\n    /// Load skybox textures, fallback to hosted png files.\n    this.loadTextureWithFallback([1, 4], materialArray, skyModeTex.texPathNE + 1, \"img/193068.png\", hazeColorAsInt);\n    this.loadTextureWithFallback([0, 5], materialArray, skyModeTex.texPathSW + 1, \"img/193070.png\", hazeColorAsInt);\n    this.loadTextureWithFallback([2], materialArray, skyModeTex.texPathT + 1, \"img/193072.png\", hazeColorAsInt);\n    materialArray[3] = new THREE.MeshBasicMaterial({ visible: false });\n\n    /// Create skybox geometry\n    const boxSize = 1024; // boundSide * 2;\n    const skyGeometry = new THREE.BoxGeometry(boxSize, boxSize / 2, boxSize); // Width Height Depth\n\n    /// Ugly way of fixing UV maps for the skybox (I think)\n    skyGeometry.faceVertexUvs[0].forEach((vecs, idx) => {\n      const face = Math.floor(idx / 2);\n\n      // PX NX\n      // PY NY\n      // PZ NZ\n\n      /// PX - WEST   NX - EAST\n      if (face === 0 || face === 1) {\n        vecs.forEach((vec2) => {\n          vec2.x = 1 - vec2.x;\n          vec2.y /= 2.0;\n          vec2.y += 0.5;\n        });\n      }\n\n      /// NZ - SOUTH   PZ - NORTH\n      else if (face === 5 || face === 4) {\n        vecs.forEach((vec2) => {\n          vec2.y /= -2.0;\n          vec2.y += 0.5;\n        });\n      } else {\n        vecs.forEach((vec2) => {\n          vec2.x = 1 - vec2.x;\n        });\n      }\n    });\n\n    skyGeometry.uvsNeedUpdate = true;\n\n    /// Generate final skybox\n    const skyBox = new THREE.Mesh(skyGeometry, materialArray);\n\n    /// Put horizon in camera center\n    // skyBox.translateY(-(boxSize / 8));\n    // skyBox.translateY( -environmentChunk.data.dataGlobal.sky.verticalOffset );\n\n    /// Write to output\n    this.getOutput().skyBox = skyBox;\n  }\n\n  /**\n   * Output fileds generated:\n   *\n   * - *hazeColor* Array of RGBA values describing the global haze color of the map.\n   * - *lights* An array of THREE.DirectionalLight and  THREE.AmbientLight objects.\n   * - *hasLight* Boolean is false if no directional lights were added to \"lights\".\n   * - *skyBox* A textured THREE.Mesh skybox.\n   *\n   * @async\n   * @param  {Function} callback Fires when renderer is finished, does not take arguments.\n   */\n  renderAsync(callback) {\n    const environmentChunkData = this.mapFile.getChunk(\"env\").data;\n    const parameterChunkData = this.mapFile.getChunk(\"parm\").data;\n\n    /// Set renderer clear color from environment haze\n    const hazeColor = this.getHazeColor(environmentChunkData);\n    const hazeColorAsInt = hazeColor[2] * 256 * 256 + hazeColor[1] * 256 + hazeColor[0];\n    this.getOutput().hazeColor = hazeColor;\n\n    /// Add directional lights to output. Also write hasLight flag\n    this.parseLights(environmentChunkData);\n\n    /// Generate skybox\n    this.parseSkybox(environmentChunkData, parameterChunkData, hazeColorAsInt);\n\n    /// All parsing is synchronous, just fire callback\n    callback();\n  }\n}\n\nEnvironmentRenderer.rendererName = \"EnvironmentRenderer\";\nmodule.exports = EnvironmentRenderer;\n","/*\nCopyright © Tyria3DLibrary project contributors\n\nThis file is part of the Tyria 3D Library.\n\nTyria 3D Library is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nTyria 3D Library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with the Tyria 3D Library. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nconst DataRenderer = require(\"./DataRenderer\");\n\n/**\n *\n * A renderer that generates meshes describing the collisions of a map.\n *\n * @class HavokRenderer\n * @constructor\n * @extends DataRenderer\n * @param  {LocalReader} localReader  The LocalReader instance to read data from.\n * @param  {Object} settings     Any settings used by this renderer.\n * *Must* specify \"mapFile\", a GW2File. If \"visible\" is specified and true, the generated meshes will be textured\n * with a MeshNormalMaterial, otherwise they will not be visible.\n * @param  {Object} context      Shared value object between renderers.\n * @param  {Logger} logger       The logging class to use for progress, warnings, errors et cetera.\n */\nclass HavokRenderer extends DataRenderer {\n  constructor(localReader, settings, context, logger) {\n    super(localReader, settings, context, logger, \"HavokRenderer\");\n\n    this.mapFile = this.settings.mapFile;\n\n    this.lastP = -1;\n    this.seed = 1;\n    this.meshes = [];\n  }\n\n  /**\n   * TODO\n   *\n   * @param  {Function} callback         [description]\n   * @async\n   */\n  renderModels(models, title, callback) {\n    let mat;\n    if (this.settings && this.settings.visible) {\n      mat = new THREE.MeshNormalMaterial({ side: THREE.DoubleSide });\n    } else if (this.settings && this.settings.export) {\n      mat = new THREE.MeshBasicMaterial({ visible: true });\n    } else {\n      mat = new THREE.MeshBasicMaterial({ visible: false });\n    }\n\n    this.parseAllModels(models, mat, title, 200, 0, callback);\n  }\n\n  /**\n   * TODO\n   *\n   * @param  {*} animation  [description]\n   * @param  {*} collisions [description]\n   * @return {*}            [description]\n   */\n  getCollisionsForAnimation(animation, collisions) {\n    const ret = [];\n\n    for (let i = 0; i < animation.collisionIndices.length; i++) {\n      const index = animation.collisionIndices[i];\n      const collision = collisions[index];\n      collision.index = index;\n      ret.push(collision);\n    }\n\n    return ret;\n  }\n\n  /**\n   * TODO\n   *\n   * @param  {*} models       [description]\n   * @param  {*} mat       [description]\n   * @param  {*} title     [description]\n   * @param  {*} chunkSize [description]\n   * @param  {*} offset    [description]\n   * @return {*} callback          [description]\n   * @async\n   */\n  parseAllModels(models, mat, title, chunkSize, offset, callback) {\n    let i = offset;\n\n    for (; i < offset + chunkSize && i < models.length; i++) {\n      const p = Math.round((i * 100) / models.length);\n      if (p !== this.lastP) {\n        this.logger.log(T3D.Logger.TYPE_PROGRESS, \"Loading Collision Models (\" + title + \")\", p);\n        this.lastP = p;\n      }\n\n      /// Get animation object\n      const animation = this.animationFromGeomIndex(models[i].geometryIndex, this.geometries, this.animations);\n\n      const collisions = this.getCollisionsForAnimation(animation, this.havokChunkData.collisions);\n\n      for (let j = 0; j < collisions.length; j++) {\n        const collision = collisions[j];\n        this.renderMesh(collision, models[i], mat);\n      }\n    }\n\n    if (i < models.length) {\n      setTimeout(\n        this.parseAllModels.bind(this, models, mat, title, chunkSize, offset + chunkSize, callback),\n        10 /* time in ms to next call */\n      );\n    } else {\n      callback();\n    }\n  }\n\n  /**\n   * TODO\n   *\n   * @param  {*} propGeomIndex [description]\n   * @param  {*} geometries    [description]\n   * @param  {*} animations    [description]\n   * @return {*}               [description]\n   */\n  animationFromGeomIndex(propGeomIndex, geometries, animations) {\n    // geometries is just list of all geometries.animations[end] for now\n    const l = geometries[propGeomIndex].animations.length;\n\n    return animations[geometries[propGeomIndex].animations[l - 1]];\n    // return animations[ geometries[propGeomIndex].animations[0] ];\n  }\n\n  /**\n   * TODO\n   *\n   * @param  {*} collision [description]\n   * @param  {*} model     [description]\n   * @param  {*} mat       [description]\n   * @return {*}           [description]\n   */\n  renderMesh(collision, model, mat) {\n    const pos = model.translate;\n    const rot = model.rotate;\n    const scale = 32 * model.scale;\n\n    /// Generate mesh\n    const mesh = this.parseHavokMesh(collision, mat);\n\n    /// Position mesh\n    /// \"x\",\"float32\",\"z\",\"float32\",\"y\",\"float32\"\n    mesh.position.set(pos[0], -pos[2], -pos[1]);\n\n    /// Scale mesh\n    if (scale) mesh.scale.set(scale, scale, scale);\n\n    /// Rotate mesh\n    if (rot) {\n      mesh.rotation.order = \"ZXY\";\n\n      // [\"x\",\"float32\",\"z\",\"float32\",\"y\",\"float32\"],\n      mesh.rotation.set(rot[0], -rot[2], -rot[1]);\n    }\n\n    /// Add mesh to scene and collisions\n    this.getOutput().meshes.push(mesh);\n  }\n\n  /**\n   * TODO\n   *\n   * @return {*} [description]\n   */\n  seedRandom() {\n    const x = Math.sin(this.seed++) * 10000;\n    return x - Math.floor(x);\n  }\n\n  /**\n   * TODO\n   *\n   * @param  {*} collision [description]\n   * @param  {*} mat       [description]\n   * @return {*}           [description]\n   */\n  parseHavokMesh(collision, mat) {\n    const index = collision.index;\n\n    if (!this.meshes[index]) {\n      const geom = new THREE.Geometry();\n\n      /// Pass vertices\n      for (let i = 0; i < collision.vertices.length; i++) {\n        const v = collision.vertices[i];\n        // \"x\",\"float32\",\"z\",\"float32\",\"y\",\"float32\"]\n        geom.vertices.push(new THREE.Vector3(v[0], v[2], -v[1]));\n      }\n\n      /// Pass faces\n      for (let i = 0; i < collision.indices.length; i += 3) {\n        const f1 = collision.indices[i];\n        const f2 = collision.indices[i + 1];\n        const f3 = collision.indices[i + 2];\n\n        if (f1 <= collision.vertices.length && f2 <= collision.vertices.length && f3 <= collision.vertices.length) {\n          geom.faces.push(new THREE.Face3(f1, f2, f3));\n        } else {\n          this.logger.log(T3D.Logger.TYPE_ERROR, \"Errorus index in havok model geometry.\");\n        }\n      }\n\n      /// Prepare geometry and pass new mesh\n      geom.computeFaceNormals();\n      // geom.computeVertexNormals();\n\n      this.meshes[index] = new THREE.Mesh(geom, mat);\n\n      return this.meshes[index];\n    } else {\n      return this.meshes[index].clone();\n    }\n  }\n\n  /**\n   * Output fileds generated:\n   *\n   * - *boundingBox* Array of values describing the bounding box of all collision.\n   * - *meshes* An array of THREE.Mesh objects visualizing all collision in the map.\n   *\n   * @async\n   * @param  {Function} callback Fires when renderer is finished, does not take arguments.\n   */\n  renderAsync(callback) {\n    const self = this;\n\n    // TODO:The design of this method pretty much requires one instance\n    // of the class per parallel async render. Should probably fix this\n    // at some point...\n\n    /// Get required chunks\n    this.havokChunkData = this.mapFile.getChunk(\"havk\").data;\n\n    /// Set static bounds to the bounds of the havk models\n    this.getOutput().boundingBox = this.havokChunkData.boundsMax;\n\n    /// Clear old meshes\n    this.meshes = [];\n\n    /// Set up output array\n    this.getOutput().meshes = [];\n\n    /// Grab model raw data from the chunk.\n    /// Add missing scale value to obs models.\n    const propModels = this.havokChunkData.propModels;\n    const zoneModels = this.havokChunkData.zoneModels;\n    const obsModels = this.havokChunkData.obsModels;\n    obsModels.forEach(function (mdl) {\n      mdl.scale = 1;\n    });\n\n    /// Store geoms and animations from the file in hte instance so we don't\n    /// have to pass them arround too much. (fix this later)\n    this.geometries = this.havokChunkData.geometries;\n    this.animations = this.havokChunkData.animations;\n\n    /// Render \"prop\", \"zone\" and \"obs\" models in that order.\n    const renderZoneModelsCB = function () {\n      self.renderModels(obsModels, \"obs\", callback);\n    };\n    const renderPropModelsCB = function () {\n      self.renderModels(zoneModels, \"zone\", renderZoneModelsCB);\n    };\n    self.renderModels(propModels, \"prop\", renderPropModelsCB);\n  }\n}\n\nHavokRenderer.rendererName = \"HavokRenderer\";\nmodule.exports = HavokRenderer;\n","/*\nCopyright © Tyria3DLibrary project contributors\n\nThis file is part of the Tyria 3D Library.\n\nTyria 3D Library is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nTyria 3D Library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with the Tyria 3D Library. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nconst RenderUtils = require(\"../util/RenderUtils\");\nconst DataRenderer = require(\"./DataRenderer\");\nconst LogsUtils = require(\"../util/Logs\");\n\n/**\n *\n * A renderer that generates property models for a map.\n *\n * @class PropertiesRenderer\n * @constructor\n * @extends DataRenderer\n * @param  {LocalReader} localReader  The LocalReader instance to read data from.\n * @param  {Object} settings     Any settings used by this renderer.\n * *Must* specify \"mapFile\", a GW2File.\n * @param  {Object} context      Shared value object between renderers.\n * @param  {Logger} logger       The logging class to use for progress, warnings, errors et cetera.\n */\nclass PropertiesRenderer extends DataRenderer {\n  constructor(localReader, settings, context, logger) {\n    super(localReader, settings, context, logger, \"PropertiesRenderer\");\n    this.mapFile = this.settings.mapFile;\n    this.showUnmaterialized = this.settings.showUnmaterialized || false;\n\n    this.meshCache = {};\n    this.textureCache = {};\n    this.models = {};\n  }\n\n  /**\n   * Renders all property meshes in a GW2 map described by the map's PROP chunk.\n   * Output fileds generated:\n   *\n   * - *meshes* An array of THREE.Mesh objects visualizing all property models refered by this map.\n   *\n   * @async\n   * @param  {Function} callback Fires when renderer is finished, does not take arguments.\n   */\n  renderAsync(callback) {\n    this.getOutput().meshes = [];\n\n    const propertiesChunkData = this.mapFile.getChunk(\"prp2\").data;\n\n    if (!propertiesChunkData) {\n      return callback();\n    }\n\n    // Get all different prop types\n    const props = []\n      .concat(propertiesChunkData.propArray)\n      .concat(propertiesChunkData.propAnimArray)\n      .concat(propertiesChunkData.propInstanceArray)\n      .concat(propertiesChunkData.propMetaArray);\n\n    /// Build an object containing all the data we need for each prop\n    this.models = props.reduce((models, prop) => {\n      const propSize = prop.transforms ? prop.transforms.length + 1 : 1;\n      if (models[prop.filename]) {\n        models[prop.filename].props.push(prop);\n        models[prop.filename].size += propSize;\n      } else {\n        models[prop.filename] = {\n          props: [prop],\n          size: propSize,\n        };\n      }\n      return models;\n    }, {});\n    this.modelsList = Object.keys(this.models);\n\n    this.renderModel(0, callback);\n  }\n\n  getFileIdsAsync(callback) {\n    this.logger.log(T3D.Logger.TYPE_WARNING, \"PropertiesRenderer.getFileIdsAsync is not implemented\");\n    callback([]);\n  }\n\n  /**\n   * PRIVATE METHODS\n   */\n\n  /**\n   * To optimize the rendering on the GPU we render each model only once and use instances for\n   * any other place using the same model. This allows us to have a much lower amount of draw calls\n   * and usage of GPU memory compared to a naive approach having a mesh for each model.\n   */\n  renderModel(index, callback) {\n    if (index >= this.modelsList.length) {\n      this.meshCache = {};\n      this.textureCache = {};\n      this.models = {};\n      return callback();\n    }\n\n    LogsUtils.progress(this.logger, index, this.modelsList.length, \"Loading 3D Models (Props)\");\n\n    const modelName = this.modelsList[index];\n    RenderUtils.getMeshesForFilename(\n      modelName,\n      this.models[modelName].props[0].color,\n      this.localReader,\n      this.meshCache,\n      this.textureCache,\n      this.showUnmaterialized,\n      // We don't care about cached meshes since we know we only ask for each meshes once.\n      (meshes, _isCached, boundingSphere) => {\n        if (meshes) {\n          this.placeModelOnScene(modelName, meshes, boundingSphere);\n        }\n\n        this.renderModel(index + 1, callback);\n      }\n    );\n  }\n\n  /**\n   * Gets the meshes of a specific model, merge them together as an instanced mesh\n   * and place them in the scene where they are referenced by the props.\n   * @param {number} modelName The baseId of the model\n   * @param {*} meshes The 3d models of the model\n   */\n  placeModelOnScene(modelName, meshes) {\n    const model = this.models[modelName];\n    const instancedMesh = RenderUtils.getInstancedMesh(meshes, model.size);\n    let instancedIndex = 0;\n    for (const prop of model.props) {\n      instancedMesh.setMatrixAt(instancedIndex, getMatrixForProp(prop));\n      instancedIndex += 1;\n      for (const transform of prop.transforms || []) {\n        instancedMesh.setMatrixAt(instancedIndex, getMatrixForProp(transform));\n        instancedIndex += 1;\n      }\n    }\n    this.getOutput().meshes.push(instancedMesh);\n  }\n}\n\n/**\n * Return a Matrix4 for a given prop defining the Scale Rotation and Location of a model\n * @param {Object} propData\n * @returns {THREE.Matrix4}\n */\nfunction getMatrixForProp(propData) {\n  const matrix = new THREE.Matrix4();\n  matrix.makeRotationFromEuler(\n    new THREE.Euler(propData.rotation[0], -propData.rotation[2], -propData.rotation[1], \"ZXY\")\n  );\n  matrix.scale(new THREE.Vector3(propData.scale, propData.scale, propData.scale));\n  matrix.setPosition(propData.position[0], -propData.position[2], -propData.position[1]);\n\n  return matrix;\n}\n\nPropertiesRenderer.rendererName = \"PropertiesRenderer\";\nmodule.exports = PropertiesRenderer;\n","/*\nCopyright © Tyria3DLibrary project contributors\n\nThis file is part of the Tyria 3D Library.\n\nTyria 3D Library is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nTyria 3D Library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with the Tyria 3D Library. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nconst RenderUtils = require(\"../util/RenderUtils\");\nconst DataRenderer = require(\"./DataRenderer\");\n\n/**\n *\n * A renderer that generates meshes for a single model file.\n *\n * @class SingleModelRenderer\n * @constructor\n * @extends DataRenderer\n * @param  {LocalReader} localReader  The LocalReader instance to read data from.\n * @param  {Object} settings     Any settings used by this renderer.\n * *Must* specify \"id\" the base ID or file ID of the model to generate meshes for.\n * @param  {Object} context      Shared value object between renderers.\n * @param  {Logger} logger       The logging class to use for progress, warnings, errors et cetera.\n */\nclass SingleModelRenderer extends DataRenderer {\n  constructor(localReader, settings, context, logger) {\n    super(localReader, settings, context, logger, \"SingleModelRenderer\");\n  }\n\n  /**\n   * Output fileds generated:\n   *\n   * - *meshes* An array of THREE.Mesh objects visualizing this model file.\n   *\n   * @async\n   * @param  {Function} callback Fires when renderer is finished, does not take arguments.\n   */\n  renderAsync(callback) {\n    const self = this;\n\n    /// Get file id\n    const fileId = this.settings.id;\n    const showUnmaterialed = true;\n\n    /// Load the model file\n    let meshCache = {};\n    const textureCache = {};\n\n    /// Set up output array\n    self.getOutput().meshes = [];\n\n    RenderUtils.getMeshesForFilename(\n      fileId,\n      0x00ff00,\n      self.localReader,\n      meshCache,\n      textureCache,\n      showUnmaterialed,\n      function (meshes, isCached, boundingSphere) {\n        if (meshes) {\n          meshes.forEach(function (mesh) {\n            mesh.boundingSphere = boundingSphere;\n            self.getOutput().meshes.push(mesh);\n          });\n        }\n\n        /// Fire callback after all meshes have been added.\n        meshCache = {};\n        callback();\n      }\n    );\n  }\n}\n\nSingleModelRenderer.rendererName = \"SingleModelRenderer\";\nmodule.exports = SingleModelRenderer;\n","/*\nCopyright © Tyria3DLibrary project contributors\n\nThis file is part of the Tyria 3D Library.\n\nTyria 3D Library is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nTyria 3D Library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with the Tyria 3D Library. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nconst DataRenderer = require(\"./DataRenderer\");\n\n/**\n *\n * A renderer that generates a list of readable strings from a \"strs\" file.\n *\n * @class StringRenderer\n * @constructor\n * @extends DataRenderer\n * @param  {LocalReader} localReader  The LocalReader instance to read data from.\n * @param  {Object} settings     Any settings used by this renderer.\n * *Must* specify \"id\" the base ID or file ID of the string file to read strings from.\n * @param  {Object} context      Shared value object between renderers.\n * @param  {Logger} logger       The logging class to use for progress, warnings, errors et cetera.\n */\nclass StringRenderer extends DataRenderer {\n  constructor(localReader, settings, context, logger) {\n    super(localReader, settings, context, logger, \"StringRenderer\");\n  }\n\n  /**\n   * Output fileds generated:\n   *\n   * - *strings* An array of objects. Each object has a \"recid\"-property specifing on what index within the file\n   * a given string was found, and a \"value\"-property specigying the string value.\n   *\n   * - *language* An integer specifing the language of the loaded file.\n   *\n   * @async\n   * @param  {Function} callback Fires when renderer is finished, does not take arguments.\n   */\n  renderAsync(callback) {\n    const self = this;\n\n    /// Get file id\n    // eslint-disable-next-line no-unused-vars\n    const fileId = this.settings.id;\n    // eslint-disable-next-line no-unused-vars\n    const showUnmaterialed = true;\n\n    /// Load the string file\n\n    /// Set up output array\n    this.getOutput().strings = [];\n\n    this.localReader.loadFile(this.settings.id, function (inflatedData) {\n      const ds = new DataStream(inflatedData);\n      const end = ds.byteLength - 2;\n\n      /// skip past fcc\n      ds.seek(4);\n\n      const entryHeaderDef = [\"size\", \"uint16\", \"decryptionOffset\", \"uint16\", \"bitsPerSymbol\", \"uint16\"];\n\n      let entryIndex = 0;\n\n      while (end - ds.position > 6) {\n        const entry = ds.readStruct(entryHeaderDef);\n        entry.size -= 6;\n\n        if (entry.size > 0) {\n          const isEncrypted = entry.decryptionOffset !== 0 || entry.bitsPerSymbol !== 0x10;\n\n          /// UTF-16\n          if (!isEncrypted) {\n            const value = ds.readUCS2String(entry.size / 2);\n            self.getOutput().strings.push({\n              value: value,\n              recid: entryIndex,\n            });\n          }\n\n          /// Other... ignored\n          else {\n            //continue\n          }\n        }\n\n        entryIndex++;\n      }\n\n      ds.seek(ds.byteLength - 2);\n      self.getOutput().language = ds.readUint16();\n      callback();\n    });\n  }\n}\n\nStringRenderer.rendererName = \"StringRenderer\";\nmodule.exports = StringRenderer;\n","/*\nCopyright © Tyria3DLibrary project contributors\n\nThis file is part of the Tyria 3D Library.\n\nTyria 3D Library is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nTyria 3D Library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with the Tyria 3D Library. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nconst RenderUtils = require(\"../util/RenderUtils\");\nconst MaterialUtils = require(\"../util/MaterialUtils\");\nconst DataRenderer = require(\"./DataRenderer\");\nconst GW2File = require(\"../format/file/GW2File.js\");\n\nconst TerrainShader = require(\"../util/TerrainShader.js\");\n\n/**\n *\n * A renderer that generates the meshes for the terrain of a map.\n *\n *\n * Requires a context previously populated by a\n * {{#crossLink \"EnvironmentRenderer\"}}{{/crossLink}}.\n *\n * @class TerrainRenderer\n * @constructor\n * @extends DataRenderer\n * @param  {LocalReader} localReader  The LocalReader instance to read data from.\n * @param  {Object} settings     Any settings used by this renderer.\n * *Must* specify \"mapFile\", a GW2File.\n * @param  {Object} context      Shared value object between renderers.\n * @param  {Logger} logger       The logging class to use for progress, warnings, errors et cetera.\n */\nclass TerrainRenderer extends DataRenderer {\n  constructor(localReader, mapFile, settings, context, logger) {\n    super(localReader, mapFile, settings, context, logger, \"TerrainRenderer\");\n    this.mapFile = this.settings.mapFile;\n  }\n\n  drawWater(rect) {\n    /// Add Water\n    const material = new THREE.MeshBasicMaterial({\n      color: 0x5bb1e8,\n      wireframe: false,\n      opacity: 0.35,\n    });\n\n    material.transparent = true;\n    return RenderUtils.renderRect(rect, 0, material);\n  }\n\n  parseNumChunks(terrainData) {\n    terrainData.numChunksD_1 = Math.sqrt((terrainData.dims[0] * terrainData.chunkArray.length) / terrainData.dims[1]);\n    terrainData.numChunksD_2 = terrainData.chunkArray.length / terrainData.numChunksD_1;\n  }\n\n  loadPagedImageCallback(callback, infaltedBuffer) {\n    const self = this;\n\n    // Prep output array\n    self.getOutput().terrainTiles = [];\n\n    const pimgDS = new DataStream(infaltedBuffer);\n    const pimgFile = new GW2File(pimgDS, 0);\n    const pimgTableDataChunk = pimgFile.getChunk(\"pgtb\");\n    const pimgData = pimgTableDataChunk && pimgTableDataChunk.data;\n\n    this.mapRect = null;\n\n    /// Fetch chunks\n    const terrainData = this.mapFile.getChunk(\"trn\").data;\n    const parameterData = this.mapFile.getChunk(\"parm\").data;\n\n    /// Read settings\n    const maxAnisotropy = this.settings.anisotropy ? this.settings.anisotropy : 1;\n\n    //let chunks = [];\n    const chunkW = 35;\n\n    /// Calculate numChunksD_1 and _2\n    this.parseNumChunks(terrainData);\n\n    const xChunks = terrainData.numChunksD_1;\n    const yChunks = terrainData.numChunksD_2;\n\n    const allMaterials = terrainData.materials.materials;\n    const allTextures = terrainData.materials.texFileArray;\n\n    // Total map dx and dy\n    /*\n    old parameter data definition:\n    \"x1\", \"float32\",\n    \"y1\", \"float32\",\n    \"x2\", \"float32\",\n    \"y2\", \"float32\"\n    */\n    // var dx = parameterData.rect.x2 - parameterData.rect.x1;\n    // var dy = parameterData.rect.y2 - parameterData.rect.y1;\n    const dx = parameterData.rect[2] - parameterData.rect[0];\n    const dy = parameterData.rect[3] - parameterData.rect[1];\n\n    // Each chunk dx and dy\n    const cdx = (dx / terrainData.numChunksD_1) * 1; //  35/33;\n    const cdy = (dy / terrainData.numChunksD_2) * 1; // 35/33;\n    let n = 0;\n    const allMats = [];\n    const customMaterial = new THREE.MeshLambertMaterial({\n      side: THREE.DoubleSide,\n      color: 0x666666,\n      flatShading: true,\n    });\n    //let texMats = {};\n\n    /// Load textures from PIMG and inject as material maps (textures)\n    const chunkTextures = {};\n\n    /// Load textures\n    if (pimgData) {\n      const strippedPages = pimgData.strippedPages;\n\n      /// Only use layer 0\n      strippedPages.forEach(function (page) {\n        /// Only load layer 0 and 1\n        if (page.layer <= 1) {\n          const filename = page.filename;\n          //let color = page.solidColor;\n          const coord = page.coord;\n\n          let matName = coord[0] + \",\" + coord[1];\n          if (page.layer === 1) matName += \"-2\";\n\n          /// Add texture to list, note that coord name is used, not actual file name\n          if (!chunkTextures[matName]) {\n            /// Load local texture, here we use file name!\n            const chunkTex = MaterialUtils.loadLocalTexture(self.localReader, filename);\n\n            if (chunkTex) {\n              /// Set repeat, antistropy and repeat Y\n              chunkTex.anisotropy = maxAnisotropy;\n              chunkTex.wrapS = THREE.RepeatWrapping;\n              chunkTex.wrapT = THREE.RepeatWrapping;\n            }\n\n            /// ...But store in coord name\n            chunkTextures[matName] = chunkTex;\n          }\n        }\n      }); /// end for each stripped page in pimgData\n    }\n\n    /// Render Each chunk\n    /// We'll make this async in order for the screen to be able to update\n\n    const renderChunk = function (cx, cy) {\n      const chunkIndex = cy * xChunks + cx;\n\n      const pageX = Math.floor(cx / 4);\n      const pageY = Math.floor(cy / 4);\n\n      // TODO: Terrain texture LOD ?\n      const chunkTextureIndices = allMaterials[chunkIndex].loResMaterial.texIndexArray;\n      // let matFileName = allMaterials[chunkIndex].loResMaterial.materialFile;\n      // let chunkTextureIndices = allMaterials[chunkIndex].hiResMaterial.texIndexArray;\n      // let matFileName = allMaterials[chunkIndex].hiResMaterial.materialFile;\n      // let chunkData = terrainData.chunkArray[chunkIndex];\n      // let mainTex = allTextures[chunkTextureIndices[0]];\n      let mat = customMaterial;\n\n      /// TODO: just tick invert y = false...?\n      const pageOffetX = (cx % 4) / 4.0;\n      const pageOffetY = 0.75 - (cy % 4) / 4.0;\n\n      // offset 0 -> 0.75\n\n      // Make sure we have shared textures\n\n      /// Load and store all tiled textures\n      const fileNames = [];\n      for (let gi = 0; gi < chunkTextureIndices.length / 2; gi++) {\n        const textureFileName = allTextures[chunkTextureIndices[gi]].filename;\n\n        fileNames.push(textureFileName);\n\n        /// If the texture is not already loaded, read it from the .dat!\n        if (!chunkTextures[textureFileName]) {\n          /// Load local texture\n          const chunkTex = MaterialUtils.loadLocalTexture(self.localReader, textureFileName);\n\n          if (chunkTex) {\n            /// Set repeat, antistropy and repeat Y\n            chunkTex.anisotropy = maxAnisotropy;\n            chunkTex.wrapS = THREE.RepeatWrapping;\n            chunkTex.wrapT = THREE.RepeatWrapping;\n          }\n\n          chunkTextures[textureFileName] = chunkTex;\n        }\n      } /// End for each chunkTextureIndices\n\n      /// Create Composite texture material, refering the shared textures\n      const pageTexName = pageX + \",\" + pageY;\n      const pageTexName2 = pageX + \",\" + pageY + \"-2\";\n\n      /// TODO USe mapData (Chunk: env -> haze)\n      // var fog = SceneUtils.getScene().fog;\n      const fog = {\n        color: { r: 1, g: 1, b: 1 },\n        near: 0,\n        far: 0,\n      };\n\n      /// Get haze color from environment rednerer\n      const envOutput = self.getOutput(T3D.EnvironmentRenderer);\n      if (envOutput.hazeColor) {\n        fog.color.r = envOutput.hazeColor[2] / 255.0;\n        fog.color.g = envOutput.hazeColor[1] / 255.0;\n        fog.color.b = envOutput.hazeColor[0] / 255.0;\n      }\n\n      const uniforms = THREE.UniformsUtils.merge([THREE.UniformsLib[\"lights\"]]);\n\n      /// TODO: READ FROM VO, don't default to hard coded scale\n      uniforms.uvScale = { type: \"v2\", value: new THREE.Vector2(8.0, 8.0) };\n      uniforms.offset = {\n        type: \"v2\",\n        value: new THREE.Vector2(pageOffetX, pageOffetY),\n      };\n\n      uniforms.texturePicker = {\n        type: \"t\",\n        value: chunkTextures[pageTexName],\n      };\n      uniforms.texturePicker2 = {\n        type: \"t\",\n        value: chunkTextures[pageTexName2],\n      };\n\n      uniforms.texture1 = { type: \"t\", value: chunkTextures[fileNames[0]] };\n      uniforms.texture2 = { type: \"t\", value: chunkTextures[fileNames[1]] };\n      uniforms.texture3 = { type: \"t\", value: chunkTextures[fileNames[2]] };\n      uniforms.texture4 = { type: \"t\", value: chunkTextures[fileNames[3]] };\n\n      if (self.settings && self.settings.export) {\n        mat = new THREE.MeshBasicMaterial({ visible: true });\n      } else {\n        mat = new THREE.ShaderMaterial({\n          uniforms: uniforms,\n          fragmentShader: TerrainShader.getFragmentShader(),\n          vertexShader: TerrainShader.getVertexShader(),\n        });\n      }\n\n      /// Store referenceto each material\n      allMats.push(mat);\n\n      /// -1 for faces -> vertices , -2 for ignoring outer faces\n      const chunkGeo = new THREE.PlaneBufferGeometry(cdx, cdy, chunkW - 3, chunkW - 3);\n\n      let cn = 0;\n\n      /// Render chunk\n\n      /// Each chunk vertex\n      for (let y = 0; y < chunkW; y++) {\n        for (let x = 0; x < chunkW; x++) {\n          if (x !== 0 && x !== chunkW - 1 && y !== 0 && y !== chunkW - 1) {\n            chunkGeo.getAttribute(\"position\").array[cn * 3 + 2] = terrainData.heightMapArray[n];\n            cn++;\n          }\n\n          n++;\n        }\n      } // End each chunk vertex\n\n      /// Flip the plane to fit wonky THREE js world axes\n      const mS = new THREE.Matrix4().identity();\n      mS.elements[5] = -1;\n      chunkGeo.applyMatrix4(mS);\n\n      /// Compute face normals for lighting, not used when textured\n      chunkGeo.computeFaceNormals();\n      chunkGeo.computeVertexNormals();\n\n      /// Build chunk mesh!\n      let chunk;\n      chunk = new THREE.Mesh(chunkGeo, customMaterial);\n      if (mat.length) {\n        chunk = THREE.SceneUtils.createMultiMaterialObject(chunkGeo, mat);\n      } else {\n        chunk = new THREE.Mesh(chunkGeo, mat);\n      }\n\n      /// Move and rotate Mesh to fit in place\n      chunk.rotation.set(Math.PI / 2, 0, 0);\n\n      /// Last term is the new one: -cdx*(2/35)\n      const globalOffsetX = parameterData.rect[0] + cdx / 2;\n      const chunkOffsetX = cx * cdx;\n\n      chunk.position.x = globalOffsetX + chunkOffsetX;\n\n      /// Adjust for odd / even number of chunks\n      if (terrainData.numChunksD_2 % 2 === 0) {\n        /// Last term is the new one: -cdx*(2/35)\n        const globalOffsetY = parameterData.rect[1] + cdy / 2 - 0; // -cdy*(1/35);\n        const chunkOffsetY = cy * cdy * 1; // 33/35;\n\n        chunk.position.z = chunkOffsetY + globalOffsetY;\n      } else {\n        const globalOffsetY = parameterData.rect[1] - cdy / 2 + 0; // cdy*(1/35);\n        const chunkOffsetY = cy * cdy * 1; // 33/35;\n\n        chunk.position.z = globalOffsetY + chunkOffsetY;\n      }\n\n      const px = chunk.position.x;\n      const py = chunk.position.z;\n\n      if (!self.mapRect) {\n        self.mapRect = {\n          x1: px - cdx / 2,\n          x2: px + cdx / 2,\n          y1: py - cdy / 2,\n          y2: py + cdy / 2,\n        };\n      }\n\n      self.mapRect.x1 = Math.min(self.mapRect.x1, px - cdx / 2);\n      self.mapRect.x2 = Math.max(self.mapRect.x2, px + cdx / 2);\n\n      self.mapRect.y1 = Math.min(self.mapRect.y1, py - cdy / 2);\n      self.mapRect.y2 = Math.max(self.mapRect.y2, py + cdy / 2);\n\n      chunk.updateMatrix();\n      chunk.updateMatrixWorld();\n\n      /// Add to list of stuff to render\n      /// TODO: Perhaps use some kind of props for each entry instead?\n      self.getOutput().terrainTiles.push(chunk);\n    }; /// End render chunk function\n\n    const stepChunk = function (cx, cy) {\n      if (cx >= xChunks) {\n        cx = 0;\n        cy++;\n      }\n\n      if (cy >= yChunks) {\n        /// Draw water surface using map bounds\n        self.getOutput().water = self.drawWater(self.mapRect);\n\n        /// Set bounds in output VO\n        self.getOutput().bounds = self.mapRect;\n\n        /// Fire call back, we're done rendering.\n        callback();\n        return;\n      }\n\n      const pct = Math.floor((100 * (cy * xChunks + cx)) / (xChunks * yChunks));\n\n      self.logger.log(T3D.Logger.TYPE_PROGRESS, \"Loading Terrain\", pct);\n\n      renderChunk(cx, cy);\n      setTimeout(stepChunk, 1, cx + 1, cy);\n    };\n\n    stepChunk(0, 0);\n  }\n\n  /**\n   * Output fileds generated:\n   *\n   * - *terrainTiles* An array of THREE.Mesh objects visualizing terrain of the map.\n   *\n   * - *water* A THREE.Mesh object visualizing the bounds of the map.\n   *\n   * - *bounds* An object wiht x1, x2, y1, and y2 properties specifying the bounds of the map.\n   *\n   * @async\n   * @param  {Function} callback Fires when renderer is finished, does not take arguments.\n   */\n  renderAsync(callback) {\n    /// Load all paged Images, requires inflation of other pack files!\n    const pagedImageId = this.mapFile.getChunk(\"trn\").data.materials.pagedImage;\n    this.localReader.loadFile(pagedImageId, this.loadPagedImageCallback.bind(this, callback));\n  }\n\n  /**\n   * TODO: write description. Used for export feature\n   *\n   * @param  {Function} callback [description]\n   * @return {*}            [description]\n   */\n  getFileIdsAsync(/* callback */) {\n    const terrainChunk = this.mapFile.getChunk(\"trn\");\n    const pimgTableDataChunk = this.mapFile.getChunk(\"pimg\");\n    const fileIds = [];\n\n    /// ------------ SPLASH TEXTURES ------------\n    const pimgData = pimgTableDataChunk && pimgTableDataChunk.data;\n    const strippedPages = pimgData.strippedPages;\n\n    /// Only use layer 0\n    strippedPages.forEach(function (page) {\n      /// Only load layer 0 and 1\n      if (page.layer <= 1 && page.filename > 0) {\n        fileIds.push(page.filename);\n      }\n    });\n    /// ------------ END SPLASH TEXTURES ------------\n\n    /// ------------ TILED IMAGES ------------\n    const terrainData = terrainChunk.data;\n    const allTextures = terrainData.materials.texFileArray;\n    allTextures.forEach(function (texture) {\n      if (texture.filename > 0) fileIds.push(texture.filename);\n    });\n    /// ------------ END TILED IMAGES ------------\n\n    return fileIds;\n  }\n}\n\nTerrainRenderer.rendererName = \"TerrainRenderer\";\nmodule.exports = TerrainRenderer;\n","/*\nCopyright © Tyria3DLibrary project contributors\n\nThis file is part of the Tyria 3D Library.\n\nTyria 3D Library is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nTyria 3D Library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with the Tyria 3D Library. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nconst RenderUtils = require(\"../util/RenderUtils\");\nconst DataRenderer = require(\"./DataRenderer\");\n\n/**\n *\n * A renderer that generates zone models for a map.\n *\n * @class ZoneRenderer\n * @constructor\n * @extends DataRenderer\n * @param  {LocalReader} localReader  The LocalReader instance to read data from.\n * @param  {Object} settings     Any settings used by this renderer.\n * *Must* specify \"mapFile\", a GW2File.\n * @param  {Object} context      Shared value object between renderers.\n * @param  {Logger} logger       The logging class to use for progress, warnings, errors et cetera.\n */\nclass ZoneRenderer extends DataRenderer {\n  constructor(localReader, settings, context, logger) {\n    super(localReader, settings, context, logger, \"ZoneRenderer\");\n    this.mapFile = this.settings.mapFile;\n  }\n  /**\n   * TODO\n   *\n   * @param  {*} zone               [description]\n   * @param  {*} zoneDefs           [description]\n   * @param  {*} mapRect            [description]\n   * @param  {*} renderZoneCallback [description]\n   * @return {*}                    [description]\n   */\n  renderZone(zone, zoneDefs, mapRect, renderZoneCallback) {\n    const self = this;\n\n    /// Get Zone Definition\n    let zoneDef = null;\n    zoneDefs.forEach(function (zd) {\n      if (!zoneDef && zd.token === zone.defToken) zoneDef = zd;\n    });\n\n    /// Create array of all models to add:\n    // let models = []\n    const modelGroups = this.getModelGroups(zone, zoneDef, mapRect);\n\n    /// Create empty mesh cache\n    self.meshCache = {};\n    self.textureCache = {};\n\n    /*\n     * ---Keeping this out of the doc for now---\n     * Steps trough each model and renders it to the scene, allowing for efficient caching.\n     * @param  {Number} i - Current index within the models array\n     */\n    // var lastPct = -1;\n    const groupKeys = Object.keys(modelGroups);\n    function stepModels(i) {\n      /* var pct = Math.round(100.0*i / groupKeys.length);\n      if(lastPct!=pct){\n        console.log(\"Rendering ZONE models \"+pct);\n        lastPct = pct;\n      } */\n\n      if (i >= groupKeys.length) {\n        /// Empty mesh cache\n        self.meshCache = {};\n        self.textureCache = {};\n\n        /// Tell caller this zone is done loading\n        renderZoneCallback();\n        return;\n      }\n\n      /// Read model at index\n      /// var model = models[i];\n      const key = groupKeys[i]; /// key is model filename\n      const group = modelGroups[key];\n\n      const meshGroups = [];\n\n      /// Get model just once for this group\n      const showUnmaterialed = false;\n      RenderUtils.getMeshesForFilename(\n        key,\n        null,\n        self.localReader,\n        self.meshCache,\n        self.textureCache,\n        showUnmaterialed,\n\n        function (meshes /*, isCached*/) {\n          /// If there were meshes, add them to the scene with correct scaling rotation etc.\n          if (meshes /* && meshes.length == 3 */) {\n            /// Add one copy per model instance\n            /// TODO: add rotation!\n            /// TODO: fine tune position?\n            /// TODO: POTIMIZE!\n\n            group.forEach(function (model, instanceIdx) {\n              //let isCached = true;\n              //let scale = 1.0;\n\n              /// For each Mesh in the model\n              meshes.forEach(function (mesh, meshIdx) {\n                if (mesh.materialFlags === 525 /* || mesh.materialFlags == 520 || mesh.materialFlags == 521 */) {\n                  // console.log(\"Skipping lod\");\n                  return;\n                }\n\n                const move = { x: 0, y: 0, z: 0 };\n\n                /// Add to big mesh\n                if (!meshGroups[meshIdx]) {\n                  const mg = mesh.geometry.clone();\n                  meshGroups[meshIdx] = {\n                    readVerts: mg.getAttribute(\"position\").array,\n                    verts: new Float32Array(group.length * mg.getAttribute(\"position\").array.length),\n\n                    readIndices: mg.getIndex().array,\n                    indices: new Uint32Array(group.length * mg.getIndex().array.length),\n\n                    readUVs: mg.getAttribute(\"uv\").array,\n                    uvs: new Float32Array(group.length * mg.getAttribute(\"uv\").array.length),\n\n                    readNormals: mg.getAttribute(\"normal\").array,\n                    normals: new Float32Array(group.length * mg.getAttribute(\"normal\").array.length),\n\n                    material: mesh.material,\n                    // material:new THREE.MeshBasicMaterial( {color: 0xffcccc, wireframe:true} ),\n                    /* material : new THREE.PointCloudMaterial ({\n                        color: 0xFF0000,\n                        size: 20\n                      }), */\n                    position: { x: model.x, y: model.y, z: model.z },\n                  };\n                } else {\n                  /// Translate\n                  move.x = model.x - meshGroups[meshIdx].position.x;\n                  move.y = model.z - meshGroups[meshIdx].position.z;\n                  move.z = model.y - meshGroups[meshIdx].position.y;\n                }\n\n                /// Add geom verts\n                const readVerts = meshGroups[meshIdx].readVerts;\n                const writeVerts = meshGroups[meshIdx].verts;\n                const stride = readVerts.length;\n\n                for (let i = 0, j = instanceIdx * stride; i < stride; i += 3, j += 3) {\n                  writeVerts[j + 0] = readVerts[i + 0] + move.x;\n                  writeVerts[j + 1] = readVerts[i + 1] + move.y;\n                  writeVerts[j + 2] = readVerts[i + 2] + move.z;\n                }\n\n                const readIndices = meshGroups[meshIdx].readIndices;\n                const writeIndices = meshGroups[meshIdx].indices;\n                const strideIndices = readIndices.length;\n                const shift = (stride * instanceIdx) / 3;\n\n                for (let i = 0, j = instanceIdx * strideIndices; i < strideIndices; i++, j++) {\n                  writeIndices[j] = readIndices[i] + shift;\n                }\n\n                const readUVs = meshGroups[meshIdx].readUVs;\n                const writeUvs = meshGroups[meshIdx].uvs;\n                const uvStride = readUVs.length;\n                for (let i = 0, j = instanceIdx * uvStride; i < uvStride; i++, j++) {\n                  writeUvs[j] = readUVs[i];\n                }\n\n                const readNormals = meshGroups[meshIdx].readNormals;\n                const writeNormals = meshGroups[meshIdx].normals;\n                const normalStride = readNormals.length;\n                for (let i = 0, j = instanceIdx * normalStride; i < normalStride; i++, j++) {\n                  writeNormals[j] = readNormals[i];\n                }\n              });\n            }); // End for each model in group\n          } /// End if meshes\n\n          /// Add each cluster of merged meshes to scene\n          meshGroups.forEach(function (meshGroup) {\n            const mergedGeom = new THREE.BufferGeometry();\n\n            mergedGeom.setAttribute(\"position\", new THREE.BufferAttribute(meshGroup.verts, 3));\n            // mergedGeom.setAttribute( 'index', new THREE.BufferAttribute( meshGroup.indices, 1) );\n            mergedGeom.setIndex(new THREE.BufferAttribute(meshGroup.indices, 1));\n            mergedGeom.setAttribute(\"normal\", new THREE.BufferAttribute(meshGroup.normals, 3));\n            mergedGeom.setAttribute(\"uv\", new THREE.BufferAttribute(meshGroup.uvs, 2));\n\n            mergedGeom.buffersNeedUpdate = true;\n\n            const mesh = new THREE.Mesh(mergedGeom, meshGroup.material);\n            mesh.position.set(meshGroup.position.x, meshGroup.position.z, meshGroup.position.y);\n\n            self.getOutput().meshes.push(mesh);\n          }); // End for each meshgroup\n\n          /// Rendering is done, render next.\n          stepModels(i + 1);\n        }\n      );\n    } /// End function stepModels\n\n    /// Begin stepping trough the models, rendering them.\n    stepModels(0);\n  }\n\n  /**\n   * TODO\n   *\n   * @param  {*} zone    [description]\n   * @param  {*} zoneDef [description]\n   * @param  {*} mapRect [description]\n   * @return {*}         [description]\n   */\n  getModelGroups(zone, zoneDef, mapRect) {\n    /// Calculate rect in global coordinates\n    // let zPos = zone.zPos;\n\n    const mapX = mapRect[0];\n    const mapY = mapRect[1];\n    const c = 32 + 16;\n\n    // [\"x1\",\"uint32\",\"y1\",\"uint32\",\"x2\",\"uint32\", \"y2\", \"uint32\"]\n    const zoneRect = {\n      x1: zone.vertRect[0] * c + mapX,\n      x2: zone.vertRect[2] * c + mapX,\n      y1: zone.vertRect[1] * -c - mapY,\n      y2: zone.vertRect[3] * -c - mapY,\n    };\n\n    /// Zone width and depth in local corrdinates\n    /* var zdx = zone.vertRect.x1-zone.vertRect.x2;\n    var zdy = zone.vertRect.y1-zone.vertRect.y2; */\n\n    /// These zones seems to overflow :/\n    if (zone.encodeData.length === 0) {\n      return {};\n    }\n\n    // console.log(\"Get mdl groups\", zone);\n    /// Testing: Render Zone Vert Rect\n    // RenderUtils.renderRect(zoneRect, -zPos);\n\n    const zdx = zone.vertRect[0] - zone.vertRect[2];\n    // let zdy = zone.vertRect[1] - zone.vertRect[3];\n\n    /// Zone Flags increases a linear position, used to step trough the Zone.\n    let linearPos = 0;\n\n    const modelGroups = {};\n\n    const terrainTiles = this.getOutput(T3D.TerrainRenderer).terrainTiles;\n\n    for (let i = 0; i < zone.flags.length; i += 2) {\n      /// Step forward\n      linearPos += zone.flags[i];\n\n      /// Check if a model should be placed\n      const flag = zone.flags[i + 1];\n      if (flag !== 0) {\n        /// Extract flag data\n        /// Layer is written in the last 4 bytes\n        const zoneDefLayer = flag >> 4;\n\n        /// Get Zone Definition Layer\n        const layer = zoneDef.layerDefArray[zoneDefLayer - 1];\n\n        /// TESTING Only show layers with height >= 3\n        if (layer /* && layer.height >= 0 */) {\n          /// Get X and Y from linear position\n          const modelX = (linearPos % zdx) * c + zoneRect.x1;\n          const modelY = Math.floor(linearPos / zdx) * c + zoneRect.y1;\n\n          /// Get Z from intersection with terrain\n          let modelZ = null;\n\n          const startZ = 100000;\n\n          const raycaster = new THREE.Raycaster(new THREE.Vector3(modelX, startZ, modelY), new THREE.Vector3(0, -1, 0));\n\n          /// TODO: OPT?\n          terrainTiles.forEach(function (chunk) {\n            if (modelZ === null) {\n              const intersections = raycaster.intersectObject(chunk);\n              if (intersections.length > 0) {\n                modelZ = startZ - intersections[0].distance;\n              }\n            }\n          });\n\n          /// Get model id\n          /// TODO: check with modelIdx = flag & 0xf;\n          const modelIdx = 0;\n          const model = layer.modelArray[modelIdx];\n          const modelFilename = model.filename;\n          // let zOffsets = model.zOffsets;\n\n          // let layerFlags = layer.layerFlags; // NOrmaly 128, 128\n\n          // TODO: flip z,y?\n          const rotRangeX = layer.rotRangeX; // max min\n          const rotRangeY = layer.rotRangeY; // max min\n          const rotRangeZ = layer.rotRangeZ; // max min\n          const scaleRange = layer.scaleRange; // max min\n          const fadeRange = layer.fadeRange; // max min\n\n          // Unused\n          // tiling: 3\n          // type: 1\n          // width: 2\n          // radiusGround: 2\n\n          /// Create modelGroup (this zone only)\n          if (!modelGroups[modelFilename]) {\n            modelGroups[modelFilename] = [];\n          }\n\n          /// Add entry to model group\n          modelGroups[modelFilename].push({\n            x: modelX,\n            y: modelY,\n            z: modelZ,\n            rotRangeX: rotRangeX,\n            rotRangeY: rotRangeY,\n            rotRangeZ: rotRangeZ,\n            scaleRange: scaleRange,\n            fadeRange: fadeRange,\n          });\n        } /// End if layer\n      } /// End if flag != 0\n    } /// End for each flag\n\n    return modelGroups;\n  }\n\n  /**\n   * Renders all zone meshes in a GW2 map described by the map's \"zon2\" chunk.\n   * Output fileds generated:\n   *\n   * - *meshes* An array of THREE.Mesh objects visualizing all zone models refered by this map.\n   *\n   * @async\n   * @param  {Function} callback Fires when renderer is finished, does not take arguments.\n   */\n  renderAsync(callback) {\n    const self = this;\n\n    /// Set up output array\n    self.getOutput().meshes = [];\n\n    const zoneChunkData = this.mapFile.getChunk(\"zon2\").data;\n    const parameterChunkData = this.mapFile.getChunk(\"parm\").data;\n    // let terrainChunkData = this.mapFile.getChunk(\"trn\").data;\n    const mapRect = parameterChunkData.rect;\n\n    /// Zone data\n    const zones = zoneChunkData.zoneArray;\n    const zoneDefs = zoneChunkData.zoneDefArray;\n\n    /// Render each zone\n    let lastPct = -1;\n\n    /// Main render loop, render each zone\n    function stepZone(i) {\n      const pct = Math.round((100.0 * i) / zones.length);\n      if (lastPct !== pct) {\n        self.logger.log(T3D.Logger.TYPE_PROGRESS, \"Loading 3D Models (Zone)\", pct);\n        lastPct = pct;\n      }\n\n      if (i >= zones.length) {\n        callback();\n        return;\n      }\n\n      /// Main zone render function call\n      self.renderZone(zones[i], zoneDefs, mapRect, stepZone.bind(self, i + 1));\n    }\n\n    stepZone(0);\n  }\n}\n\nZoneRenderer.rendererName = \"ZoneRenderer\";\nmodule.exports = ZoneRenderer;\n\n/// NOT USED??\n// eslint-disable-next-line no-unused-vars\nfunction addZoneMeshesToScene(meshes, isCached, position, scale, rotation) {\n  /// Called for each mesh in the zone\n  /// TODO: Opt opt opt...\n\n  meshes.forEach(function (mesh) {\n    /// Create new mesh if we got back a cached original.\n    if (isCached) mesh = new THREE.Mesh(mesh.geometry, mesh.material);\n\n    /// Scale, position and rotate.\n    mesh.scale.set(scale, scale, scale);\n    if (rotation) {\n      mesh.rotation.order = \"ZXY\";\n      mesh.rotation.set(rotation.x, rotation.y, rotation.z);\n    }\n    mesh.position.set(position.x, position.y, position.z);\n\n    /// Add to export\n    this.getOutput().meshes.push(mesh);\n  });\n}\n\n/// / Not used: zone defintion per chunk data \"images\" 32*32 points\n/*\n//Total map dx and dy\nvar d = terrainChunkHeader.data;\nvar pd = parameterChunkHeader.data;\nvar dx = (pd.rect.x2-pd.rect.x1);\nvar dy = (pd.rect.y2-pd.rect.y1);\n\n//Each chunk dx and dy\n\nvar c =1;\nvar cdx = c*dx/d.dims.dim1;\n\nvar cdy = c*dy/d.dims.dim2;\n\nvar cdx = dx/(d.numChunksD_1*2);\nvar cdy =dy/(d.numChunksD_2*2);\n\nfor(var i=0; i<zoneDefs.length; i++){\n  var zoneDef = zoneDefs[i];\n\n  //TODO: opt!\n  zoneDef.layerDefs.forEach(function(layer){\n\n    layer.modelArray.forEach(function(model){\n\n    });\n\n  });\n\n  var chunkMat = new THREE.MeshBasicMaterial(\n    {\n      color: 0x00ff00,\n      wireframe:true,\n       opacity: 1.0,\n    }\n  );\n\n  //TODO: opt!\n\n  if(\n    zoneDef.token == 597  ||\n    zoneDef.token == 1369  ||\n    zoneDef.token == 903\n  ){\n\n    zoneDef.pageTable.pageArray.forEach(function(page){\n      var flags = page.flags;\n      var coord = page.chunkCoord;\n\n      //Hightlight this coord\n      var rect = {};\n\n      //var globalOffsetX = pd.rect.x2 - cdx;\n      var globalOffsetX = pd.rect.x1 + cdx/2;\n      var chunkOffsetX = coord[0] * cdx;\n\n      rect.x1  = globalOffsetX + chunkOffsetX;\n\n      ///Adjust for odd / even number of chunks\n      if(d.numChunksD_2 % 2 == 0){\n\n        var globalOffsetY = -pd.rect.y1;\n        var chunkOffsetY = -coord[1] * cdy;\n\n        rect.y1  =  chunkOffsetY + globalOffsetY;\n      }\n      else{\n\n        var globalOffsetY =  -pd.rect.y1;\n        var chunkOffsetY = -coord[1] * cdy;\n\n        rect.y1 = globalOffsetY +  chunkOffsetY;\n      }\n\n      rect.x2 = rect.x1+cdx;\n      rect.y2 = rect.y1+cdy;\n\n      RenderUtils.renderRect(rect, 4000,chunkMat, 4000);\n\n      //for(var j=0; j<flags.length; j++){\n      //  if(flags[j]>0){\n      //    console.log(\"Found flag\",flags[j],\"@ zoneDef\",zoneDef.token,\"coord\",coord,\"index\",j);\n      //  }\n      //}\n    });\n\n  }\n\n} */\n","/*\nCopyright © Tyria3DLibrary project contributors\n\nThis file is part of the Tyria 3D Library.\n\nTyria 3D Library is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nTyria 3D Library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with the Tyria 3D Library. If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/**\n * An auto-generated structure of arrays describing Chunk formats\n * in the GW2 dat. The main contents of this file is generated\n * using the IDA script file 'IDA_generator_script.idc'\n * located in the IDA folder.\n *\n * @for T3D\n * @property formats\n * @type {Array<{name: string, versions: {Object}>}\n */\n\nlet definitionArray = [];\n\n// Definition for chunks GRMT:\nconst GRMT = require(\"./grmt.js\");\ndefinitionArray = definitionArray.concat(GRMT);\n\n// Definition for chunks DX9S:\nconst DX9S = require(\"./dx9s.js\");\ndefinitionArray = definitionArray.concat(DX9S);\n\n// Definition for chunks TOOL:\nconst TOOL = require(\"./tool.js\");\ndefinitionArray = definitionArray.concat(TOOL);\n\n// Definition for chunks XBXS:\nconst XBXS = require(\"./xbxs.js\");\ndefinitionArray = definitionArray.concat(XBXS);\n\n// Definition for chunks UPDB:\nconst UPDB = require(\"./updb.js\");\ndefinitionArray = definitionArray.concat(UPDB);\n\n// Definition for chunks PS3S:\nconst PS3S = require(\"./ps3s.js\");\ndefinitionArray = definitionArray.concat(PS3S);\n\n// Definition for chunks UPDA:\nconst UPDA = require(\"./upda.js\");\ndefinitionArray = definitionArray.concat(UPDA);\n\n// Definition for chunks MRAS:\nconst MRAS = require(\"./mras.js\");\ndefinitionArray = definitionArray.concat(MRAS);\n\n// Definition for chunks XSHD:\nconst XSHD = require(\"./xshd.js\");\ndefinitionArray = definitionArray.concat(XSHD);\n\n// Definition for chunks PPSH:\nconst PPSH = require(\"./ppsh.js\");\ndefinitionArray = definitionArray.concat(PPSH);\n\n// Definition for chunks PVSH:\nconst PVSH = require(\"./pvsh.js\");\ndefinitionArray = definitionArray.concat(PVSH);\n\n// Definition for chunks SPPA:\nconst SPPA = require(\"./sppa.js\");\ndefinitionArray = definitionArray.concat(SPPA);\n\n// Definition for chunks CDHS:\nconst CDHS = require(\"./cdhs.js\");\ndefinitionArray = definitionArray.concat(CDHS);\n\n// Definition for chunks PGTB:\nconst PGTB = require(\"./pgtb.js\");\ndefinitionArray = definitionArray.concat(PGTB);\n\n// Definition for chunks DATA:\nconst DATA = require(\"./data.js\");\ndefinitionArray = definitionArray.concat(DATA);\n\n// Definition for chunks txtm:\nconst txtm = require(\"./txtm.js\");\ndefinitionArray = definitionArray.concat(txtm);\n\n// Definition for chunks txtp:\nconst txtp = require(\"./txtp.js\");\ndefinitionArray = definitionArray.concat(txtp);\n\n// Definition for chunks txtv:\nconst txtv = require(\"./txtv.js\");\ndefinitionArray = definitionArray.concat(txtv);\n\n// Definition for chunks vari:\nconst vari = require(\"./vari.js\");\ndefinitionArray = definitionArray.concat(vari);\n\n// Definition for chunks AMSP:\nconst AMSP = require(\"./amsp.js\");\ndefinitionArray = definitionArray.concat(AMSP);\n\n// Definition for chunks BKCK:\nconst BKCK = require(\"./bkck.js\");\ndefinitionArray = definitionArray.concat(BKCK);\n\n// Definition for chunks BIDX:\nconst BIDX = require(\"./bidx.js\");\ndefinitionArray = definitionArray.concat(BIDX);\n\n// Definition for chunks ASND:\nconst ASND = require(\"./asnd.js\");\ndefinitionArray = definitionArray.concat(ASND);\n\n// Definition for chunks CSCN:\nconst CSCN = require(\"./cscn.js\");\ndefinitionArray = definitionArray.concat(CSCN);\n\n// Definition for chunks havk:\nconst havk = require(\"./havk.js\");\ndefinitionArray = definitionArray.concat(havk);\n\n// Definition for chunks shad:\nconst shad = require(\"./shad.js\");\ndefinitionArray = definitionArray.concat(shad);\n\n// Definition for chunks area:\nconst area = require(\"./area.js\");\ndefinitionArray = definitionArray.concat(area);\n\n// Definition for chunks audi:\nconst audi = require(\"./audi.js\");\ndefinitionArray = definitionArray.concat(audi);\n\n// Definition for chunks bloc:\nconst bloc = require(\"./bloc.js\");\ndefinitionArray = definitionArray.concat(bloc);\n\n// Definition for chunks cg15:\nconst cg15 = require(\"./cg15.js\");\ndefinitionArray = definitionArray.concat(cg15);\n\n// Definition for chunks cube:\nconst cube = require(\"./cube.js\");\ndefinitionArray = definitionArray.concat(cube);\n\n// Definition for chunks env:\nconst env = require(\"./env.js\");\ndefinitionArray = definitionArray.concat(env);\n\n// Definition for chunks laye:\nconst laye = require(\"./laye.js\");\ndefinitionArray = definitionArray.concat(laye);\n\n// Definition for chunks lght:\nconst lght = require(\"./lght.js\");\ndefinitionArray = definitionArray.concat(lght);\n\n// Definition for chunks msn:\nconst msn = require(\"./msn.js\");\ndefinitionArray = definitionArray.concat(msn);\n\n// Definition for chunks nm15:\nconst nm15 = require(\"./nm15.js\");\ndefinitionArray = definitionArray.concat(nm15);\n\n// Definition for chunks nmex:\nconst nmex = require(\"./nmex.js\");\ndefinitionArray = definitionArray.concat(nmex);\n\n// Definition for chunks obs:\nconst obs = require(\"./obs.js\");\ndefinitionArray = definitionArray.concat(obs);\n\n// Definition for chunks occ:\nconst occ = require(\"./occ.js\");\ndefinitionArray = definitionArray.concat(occ);\n\n// Definition for chunks octm:\nconst octm = require(\"./octm.js\");\ndefinitionArray = definitionArray.concat(octm);\n\n// Definition for chunks parm:\nconst parm = require(\"./parm.js\");\ndefinitionArray = definitionArray.concat(parm);\n\n// Definition for chunks phys:\nconst phys = require(\"./phys-0.js\");\ndefinitionArray = definitionArray.concat(phys);\n\n// Definition for chunks pnvm:\nconst pnvm = require(\"./pnvm.js\");\ndefinitionArray = definitionArray.concat(pnvm);\n\n// Definition for chunks prp2:\nconst prp2 = require(\"./prp2.js\");\ndefinitionArray = definitionArray.concat(prp2);\n\n// Definition for chunks reso:\nconst reso = require(\"./reso.js\");\ndefinitionArray = definitionArray.concat(reso);\n\n// Definition for chunks rive:\nconst rive = require(\"./rive.js\");\ndefinitionArray = definitionArray.concat(rive);\n\n// Definition for chunks tlfs:\nconst tlfs = require(\"./tlfs.js\");\ndefinitionArray = definitionArray.concat(tlfs);\n\n// Definition for chunks shex:\nconst shex = require(\"./shex.js\");\ndefinitionArray = definitionArray.concat(shex);\n\n// Definition for chunks shor:\nconst shor = require(\"./shor.js\");\ndefinitionArray = definitionArray.concat(shor);\n\n// Definition for chunks snd:\nconst snd = require(\"./snd.js\");\ndefinitionArray = definitionArray.concat(snd);\n\n// Definition for chunks surf:\nconst surf = require(\"./surf.js\");\ndefinitionArray = definitionArray.concat(surf);\n\n// Definition for chunks zon2:\nconst zon2 = require(\"./zon2.js\");\ndefinitionArray = definitionArray.concat(zon2);\n\n// Definition for chunks trn:\nconst trn = require(\"./trn.js\");\ndefinitionArray = definitionArray.concat(trn);\n\n// Definition for chunks trni:\nconst trni = require(\"./trni.js\");\ndefinitionArray = definitionArray.concat(trni);\n\n// Definition for chunks watr:\nconst watr = require(\"./watr.js\");\ndefinitionArray = definitionArray.concat(watr);\n\n// Definition for chunks edit:\nconst edit = require(\"./edit.js\");\ndefinitionArray = definitionArray.concat(edit);\n\n// Definition for chunks dcal:\nconst dcal = require(\"./dcal.js\");\ndefinitionArray = definitionArray.concat(dcal);\n\n// Definition for chunks exp:\nconst exp = require(\"./exp.js\");\ndefinitionArray = definitionArray.concat(exp);\n\n// Definition for chunks pack:\nconst pack = require(\"./pack.js\");\ndefinitionArray = definitionArray.concat(pack);\n\n// Definition for chunks MODL:\nconst MODL = require(\"./modl.js\");\ndefinitionArray = definitionArray.concat(MODL);\n\n// Definition for chunks ANIM:\nconst ANIM = require(\"./anim-0.js\");\ndefinitionArray = definitionArray.concat(ANIM);\n\n// Definition for chunks COLL:\nconst COLL = require(\"./coll.js\");\ndefinitionArray = definitionArray.concat(COLL);\n\n// Definition for chunks GR2S:\nconst GR2S = require(\"./gr2s.js\");\ndefinitionArray = definitionArray.concat(GR2S);\n\n// Definition for chunks ROOT:\nconst ROOT = require(\"./root.js\");\ndefinitionArray = definitionArray.concat(ROOT);\n\n// Definition for chunks GAME:\nconst GAME = require(\"./game.js\");\ndefinitionArray = definitionArray.concat(GAME);\n\n// Definition for chunks ICON:\nconst ICON = require(\"./icon.js\");\ndefinitionArray = definitionArray.concat(ICON);\n\n// Definition for chunks SKEL:\nconst SKEL = require(\"./skel.js\");\ndefinitionArray = definitionArray.concat(SKEL);\n\n// Definition for chunks PRPS:\nconst PRPS = require(\"./prps.js\");\ndefinitionArray = definitionArray.concat(PRPS);\n\n// Definition for chunks GEOM:\nconst GEOM = require(\"./geom.js\");\ndefinitionArray = definitionArray.concat(GEOM);\n\n// Definition for chunks EXPA:\nconst EXPA = require(\"./expa.js\");\ndefinitionArray = definitionArray.concat(EXPA);\n\n// Definition for chunks PHYS:\nconst PHYS = require(\"./phys-1.js\");\ndefinitionArray = definitionArray.concat(PHYS);\n\n// Definition for chunks MFST:\nconst MFST = require(\"./mfst-0.js\");\ndefinitionArray = definitionArray.concat(MFST);\n\n// Definition for chunks ARMF:\nconst ARMF = require(\"./armf.js\");\ndefinitionArray = definitionArray.concat(ARMF);\n\n// Definition for chunks TKAC:\nconst TKAC = require(\"./tkac.js\");\ndefinitionArray = definitionArray.concat(TKAC);\n\n// Definition for chunks main:\nconst main = require(\"./main-0.js\");\ndefinitionArray = definitionArray.concat(main);\n\n// Definition for chunks comp:\nconst comp = require(\"./comp.js\");\ndefinitionArray = definitionArray.concat(comp);\n\n// Definition for chunks Main:\nconst Main = require(\"./main-1.js\");\ndefinitionArray = definitionArray.concat(Main);\n\n// Definition for chunks anim:\nconst anim = require(\"./anim-1.js\");\ndefinitionArray = definitionArray.concat(anim);\n\n// Definition for chunks eula:\nconst eula = require(\"./eula.js\");\ndefinitionArray = definitionArray.concat(eula);\n\n// Definition for chunks mach:\nconst mach = require(\"./mach.js\");\ndefinitionArray = definitionArray.concat(mach);\n\n// Definition for chunks fall:\nconst fall = require(\"./fall.js\");\ndefinitionArray = definitionArray.concat(fall);\n\n// Definition for chunks seqn:\nconst seqn = require(\"./seqn.js\");\ndefinitionArray = definitionArray.concat(seqn);\n\n// Definition for chunks cnfg:\nconst cnfg = require(\"./cnfg.js\");\ndefinitionArray = definitionArray.concat(cnfg);\n\n// Definition for chunks mfst:\nconst mfst = require(\"./mfst-1.js\");\ndefinitionArray = definitionArray.concat(mfst);\n\nmodule.exports = definitionArray;\n","const Utils = require(\"../../util/ParserUtils.js\");\n\nmodule.exports = [\n  /// ==================================================\n  /// Chunk: AMSP, versions: 30, strucTab: 0x16CF138\n  /// ==================================================\n\n  {\n    name: \"AMSP\",\n    versions: {\n      // => Version: 29\n      29: function () {\n        this.DspDataV29 = [\"type\", \"uint32\", \"flags\", \"uint32\", \"property\", Utils.getArrayReader(\"float32\")];\n\n        this.BussDynamicDataV29 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"volume\",\n          \"float32\",\n          \"dsp\",\n          Utils.getArrayReader(this.DspDataV29),\n        ];\n\n        this.BussDataV29 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"output\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"normalizeFadeTime\",\n          \"float32\",\n          \"normalizeThreshold\",\n          \"float32\",\n          \"normalizeMaxAmp\",\n          \"float32\",\n          \"compressorThreshold\",\n          \"float32\",\n          \"compressorAttack\",\n          \"float32\",\n          \"compressorRelease\",\n          \"float32\",\n          \"compressorGainMakeup\",\n          \"float32\",\n          \"dynamicData\",\n          Utils.getPointerReader(this.BussDynamicDataV29),\n        ];\n\n        this.EnvelopePointDataV29 = [\"offset\", \"float32\", \"value\", \"float32\"];\n\n        this.EnvelopeDataV29 = [\n          \"offsetParameter\",\n          Utils.getQWordReader(),\n          \"envelopePoint\",\n          Utils.getArrayReader(this.EnvelopePointDataV29),\n          \"offsetType\",\n          \"uint8\",\n        ];\n\n        this.RangeDataV29 = [\"max\", \"float32\", \"min\", \"float32\", \"min\", \"uint8\"];\n\n        this.RandomParamDataV29 = [\"time\", this.RangeDataV29, \"value\", this.RangeDataV29];\n\n        this.DynamicParamDataV29 = [\n          \"envelopeData\",\n          Utils.getPointerReader(this.EnvelopeDataV29),\n          \"randomParamData\",\n          Utils.getPointerReader(this.RandomParamDataV29),\n          \"value\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.AttenuationDataV29 = [\n          \"doppler\",\n          \"float32\",\n          \"lowPass\",\n          this.DynamicParamDataV29,\n          \"highPass\",\n          this.DynamicParamDataV29,\n          \"pan3D\",\n          this.DynamicParamDataV29,\n          \"reverb\",\n          this.DynamicParamDataV29,\n          \"spread3D\",\n          this.DynamicParamDataV29,\n          \"volumeA\",\n          this.DynamicParamDataV29,\n          \"volumeB\",\n          this.DynamicParamDataV29,\n          \"lfe\",\n          this.DynamicParamDataV29,\n        ];\n\n        this.CategoryDynamicDataV29 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"volume\",\n          \"float32\",\n          \"nonFocusGain\",\n          \"float32\",\n          \"lowPass\",\n          \"float32\",\n          \"highPass\",\n          \"float32\",\n          \"reverbDirect\",\n          \"float32\",\n          \"reverbRoom\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"minAudible\",\n          \"uint32\",\n          \"maxAudibleLQ\",\n          \"uint32\",\n          \"maxAudibleHG\",\n          \"uint32\",\n        ];\n\n        this.CategoryDataV29 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"volumeGroupName\",\n          Utils.getQWordReader(),\n          \"outputBussName\",\n          Utils.getQWordReader(),\n          \"attenuation\",\n          Utils.getPointerReader(this.AttenuationDataV29),\n          \"dynamicData\",\n          Utils.getPointerReader(this.CategoryDynamicDataV29),\n          \"focusReserve\",\n          \"float32\",\n          \"muteFadeTime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"maxAudible\",\n          \"uint32\",\n          \"maxAudibleBehavior\",\n          \"uint8\",\n          \"priority\",\n          \"uint8\",\n        ];\n\n        this.MaterialDataV29 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"absorptionLF\",\n          \"float32\",\n          \"absorptionMF\",\n          \"float32\",\n          \"absorptionHF\",\n          \"float32\",\n          \"occlusion\",\n          \"float32\",\n        ];\n\n        this.MusicConditionDataV29 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"byteCode\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.FileNameDataV29 = [\n          \"condition\",\n          Utils.getQWordReader(),\n          \"language\",\n          Utils.getQWordReader(),\n          \"volume\",\n          \"float32\",\n          \"weight\",\n          \"float32\",\n          \"fileName\",\n          Utils.getFileNameReader(),\n          \"audioType\",\n          \"uint8\",\n          \"noteBase\",\n          \"uint8\",\n          \"noteMin\",\n          \"uint8\",\n          \"noteMax\",\n          \"uint8\",\n        ];\n\n        this.MusicPlaylistDataV29 = [\n          \"category\",\n          Utils.getQWordReader(),\n          \"name\",\n          Utils.getQWordReader(),\n          \"primaryPlaylistId\",\n          Utils.getQWordReader(),\n          \"secondaryPlaylistId\",\n          Utils.getQWordReader(),\n          \"fileName\",\n          Utils.getArrayReader(this.FileNameDataV29),\n          \"fadeInTime\",\n          \"float32\",\n          \"fadeOutTime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"initialSilence\",\n          this.RangeDataV29,\n          \"intervalSilence\",\n          this.RangeDataV29,\n          \"maxPlayLength\",\n          this.RangeDataV29,\n          \"volume\",\n          this.DynamicParamDataV29,\n          \"fileIterateMode\",\n          \"uint8\",\n        ];\n\n        this.PropertyDataV29 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"tokenValue\",\n          Utils.getQWordReader(),\n          \"floatValue\",\n          \"float32\",\n        ];\n\n        this.ReverbDataV29 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"room\",\n          \"float32\",\n          \"roomHF\",\n          \"float32\",\n          \"roomLF\",\n          \"float32\",\n          \"decayTime\",\n          \"float32\",\n          \"decayHFRatio\",\n          \"float32\",\n          \"reflections\",\n          \"float32\",\n          \"reflectionsDelay\",\n          \"float32\",\n          \"reverb\",\n          \"float32\",\n          \"reverbDelay\",\n          \"float32\",\n          \"referenceHF\",\n          \"float32\",\n          \"referenceLF\",\n          \"float32\",\n          \"diffusion\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"echoDelay\",\n          \"float32\",\n          \"echoDecayRatio\",\n          \"float32\",\n          \"echoWetMix\",\n          \"float32\",\n          \"echoDryMix\",\n          \"float32\",\n        ];\n\n        this.ScriptRefDataV29 = [\"name\", Utils.getQWordReader(), \"fileName\", Utils.getFileNameReader()];\n\n        this.SnapshotDataV29 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"blendInTime\",\n          \"float32\",\n          \"blendOutTime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"buss\",\n          Utils.getArrayReader(this.BussDynamicDataV29),\n          \"category\",\n          Utils.getArrayReader(this.CategoryDynamicDataV29),\n          \"priority\",\n          \"uint8\",\n        ];\n\n        this.MusicExternalDataV29 = [\"name\", Utils.getQWordReader(), \"externalPlaylist\", Utils.getString16Reader()];\n\n        this.AudioSettingsDataV29 = [\n          \"defaultSnapshot\",\n          Utils.getQWordReader(),\n          \"effectsBuss\",\n          Utils.getQWordReader(),\n          \"distanceScale\",\n          \"float32\",\n          \"dopplerScale\",\n          \"float32\",\n          \"echoLevel\",\n          \"float32\",\n          \"focusTransition\",\n          \"float32\",\n          \"memoryPool\",\n          \"float32\",\n          \"reverbLevel\",\n          \"float32\",\n          \"minChannelsLQ\",\n          \"uint32\",\n          \"maxChannelsLQ\",\n          \"uint32\",\n          \"buss\",\n          Utils.getArrayReader(this.BussDataV29),\n          \"category\",\n          Utils.getArrayReader(this.CategoryDataV29),\n          \"material\",\n          Utils.getArrayReader(this.MaterialDataV29),\n          \"musicCondition\",\n          Utils.getArrayReader(this.MusicConditionDataV29),\n          \"musicPlaylist\",\n          Utils.getArrayReader(this.MusicPlaylistDataV29),\n          \"property\",\n          Utils.getArrayReader(this.PropertyDataV29),\n          \"reverb\",\n          Utils.getArrayReader(this.ReverbDataV29),\n          \"scriptRef\",\n          Utils.getArrayReader(this.ScriptRefDataV29),\n          \"snapshot\",\n          Utils.getArrayReader(this.SnapshotDataV29),\n          \"bankIndexFileName\",\n          Utils.getFileNameReader(),\n          \"bankScriptFileName\",\n          Utils.getFileNameReader(),\n          \"musicScriptFileName\",\n          Utils.getFileNameReader(),\n          \"musicExternal\",\n          Utils.getArrayReader(this.MusicExternalDataV29),\n        ];\n\n        this.HandlerDataV29 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"byteCode\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.MetaSoundDataV29 = [\n          \"category\",\n          Utils.getQWordReader(),\n          \"endCue\",\n          Utils.getQWordReader(),\n          \"name\",\n          Utils.getQWordReader(),\n          \"offsetBone\",\n          Utils.getQWordReader(),\n          \"playlistId\",\n          Utils.getQWordReader(),\n          \"dsp\",\n          Utils.getArrayReader(this.DspDataV29),\n          \"attenuation\",\n          Utils.getPointerReader(this.AttenuationDataV29),\n          \"fileName\",\n          Utils.getArrayReader(this.FileNameDataV29),\n          \"channelFadeIn\",\n          \"float32\",\n          \"channelFadeOut\",\n          \"float32\",\n          \"endCueOffset\",\n          \"float32\",\n          \"fadeInTime\",\n          \"float32\",\n          \"fadeOutTime\",\n          \"float32\",\n          \"positionOffset\",\n          [\"[]\", \"float32\", 3],\n          \"channelMax\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"loopCount\",\n          \"uint32\",\n          \"depth\",\n          this.DynamicParamDataV29,\n          \"pan\",\n          this.DynamicParamDataV29,\n          \"pitch\",\n          this.DynamicParamDataV29,\n          \"pitchMS\",\n          this.DynamicParamDataV29,\n          \"volume\",\n          this.DynamicParamDataV29,\n          \"volumeMS\",\n          this.DynamicParamDataV29,\n          \"initialDelay\",\n          this.RangeDataV29,\n          \"playLength\",\n          this.RangeDataV29,\n          \"positionOffsetAngle\",\n          this.RangeDataV29,\n          \"positionRange\",\n          this.RangeDataV29,\n          \"repeatCount\",\n          this.RangeDataV29,\n          \"repeatTime\",\n          this.RangeDataV29,\n          \"replayDelay\",\n          this.RangeDataV29,\n          \"startTimeOffset\",\n          this.RangeDataV29,\n          \"channelMode\",\n          \"uint8\",\n          \"channelPriority\",\n          \"uint8\",\n          \"fileIterateMode\",\n          \"uint8\",\n          \"loopMode\",\n          \"uint8\",\n          \"musicPriority\",\n          \"uint8\",\n          \"playbackMode\",\n          \"uint8\",\n          \"positionMode\",\n          \"uint8\",\n          \"repeatTimeFrom\",\n          \"uint8\",\n        ];\n\n        this.TriggerMarkerDataV29 = [\n          \"cue\",\n          Utils.getQWordReader(),\n          \"end\",\n          Utils.getQWordReader(),\n          \"time\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.TriggerKeyDataV29 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"triggerMarker\",\n          Utils.getArrayReader(this.TriggerMarkerDataV29),\n        ];\n\n        this.__root = this.ScriptFileDataV29 = [\n          \"musicCue\",\n          Utils.getQWordReader(),\n          \"reverbOverride\",\n          Utils.getQWordReader(),\n          \"snapshot\",\n          Utils.getQWordReader(),\n          \"audioSettings\",\n          Utils.getPointerReader(this.AudioSettingsDataV29),\n          \"handler\",\n          Utils.getArrayReader(this.HandlerDataV29),\n          \"metaSound\",\n          Utils.getArrayReader(this.MetaSoundDataV29),\n          \"scriptRef\",\n          Utils.getArrayReader(this.ScriptRefDataV29),\n          \"triggerKey\",\n          Utils.getArrayReader(this.TriggerKeyDataV29),\n          \"property\",\n          Utils.getArrayReader(this.PropertyDataV29),\n          \"flags\",\n          \"uint32\",\n          \"soundPoolCount\",\n          \"uint32\",\n          \"fadeInTime\",\n          \"float32\",\n          \"soundPoolDelay\",\n          \"float32\",\n          \"volume\",\n          \"float32\",\n          \"musicCuePriority\",\n          \"uint8\",\n          \"musicMutePriority\",\n          \"uint8\",\n          \"soundPoolMode\",\n          \"uint8\",\n        ];\n      },\n\n      // => Version: 28\n      28: function () {\n        this.DspDataV28 = [\"type\", \"uint32\", \"flags\", \"uint32\", \"property\", Utils.getArrayReader(\"float32\")];\n\n        this.BussDynamicDataV28 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"volume\",\n          \"float32\",\n          \"dsp\",\n          Utils.getArrayReader(this.DspDataV28),\n        ];\n\n        this.BussDataV28 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"output\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"normalizeFadeTime\",\n          \"float32\",\n          \"normalizeThreshold\",\n          \"float32\",\n          \"normalizeMaxAmp\",\n          \"float32\",\n          \"compressorThreshold\",\n          \"float32\",\n          \"compressorAttack\",\n          \"float32\",\n          \"compressorRelease\",\n          \"float32\",\n          \"compressorGainMakeup\",\n          \"float32\",\n          \"dynamicData\",\n          Utils.getPointerReader(this.BussDynamicDataV28),\n        ];\n\n        this.EnvelopePointDataV28 = [\"offset\", \"float32\", \"value\", \"float32\"];\n\n        this.EnvelopeDataV28 = [\n          \"offsetParameter\",\n          Utils.getQWordReader(),\n          \"envelopePoint\",\n          Utils.getArrayReader(this.EnvelopePointDataV28),\n          \"offsetType\",\n          \"uint8\",\n        ];\n\n        this.RangeDataV28 = [\"max\", \"float32\", \"min\", \"float32\", \"min\", \"uint8\"];\n\n        this.RandomParamDataV28 = [\"time\", this.RangeDataV28, \"value\", this.RangeDataV28];\n\n        this.DynamicParamDataV28 = [\n          \"envelopeData\",\n          Utils.getPointerReader(this.EnvelopeDataV28),\n          \"randomParamData\",\n          Utils.getPointerReader(this.RandomParamDataV28),\n          \"value\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.AttenuationDataV28 = [\n          \"doppler\",\n          \"float32\",\n          \"lowPass\",\n          this.DynamicParamDataV28,\n          \"highPass\",\n          this.DynamicParamDataV28,\n          \"pan3D\",\n          this.DynamicParamDataV28,\n          \"reverb\",\n          this.DynamicParamDataV28,\n          \"spread3D\",\n          this.DynamicParamDataV28,\n          \"volumeA\",\n          this.DynamicParamDataV28,\n          \"volumeB\",\n          this.DynamicParamDataV28,\n          \"lfe\",\n          this.DynamicParamDataV28,\n        ];\n\n        this.CategoryDynamicDataV28 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"volume\",\n          \"float32\",\n          \"nonFocusGain\",\n          \"float32\",\n          \"lowPass\",\n          \"float32\",\n          \"highPass\",\n          \"float32\",\n          \"reverbDirect\",\n          \"float32\",\n          \"reverbRoom\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"minAudible\",\n          \"uint32\",\n          \"maxAudibleLQ\",\n          \"uint32\",\n          \"maxAudibleHG\",\n          \"uint32\",\n        ];\n\n        this.CategoryDataV28 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"volumeGroupName\",\n          Utils.getQWordReader(),\n          \"outputBussName\",\n          Utils.getQWordReader(),\n          \"attenuation\",\n          Utils.getPointerReader(this.AttenuationDataV28),\n          \"dynamicData\",\n          Utils.getPointerReader(this.CategoryDynamicDataV28),\n          \"focusReserve\",\n          \"float32\",\n          \"muteFadeTime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"maxAudible\",\n          \"uint32\",\n          \"maxAudibleBehavior\",\n          \"uint8\",\n          \"priority\",\n          \"uint8\",\n        ];\n\n        this.MaterialDataV28 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"absorptionLF\",\n          \"float32\",\n          \"absorptionMF\",\n          \"float32\",\n          \"absorptionHF\",\n          \"float32\",\n          \"occlusion\",\n          \"float32\",\n        ];\n\n        this.MusicConditionDataV28 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"byteCode\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.FileNameDataV28 = [\n          \"condition\",\n          Utils.getQWordReader(),\n          \"language\",\n          Utils.getQWordReader(),\n          \"volume\",\n          \"float32\",\n          \"weight\",\n          \"float32\",\n          \"fileName\",\n          Utils.getFileNameReader(),\n          \"audioType\",\n          \"uint8\",\n          \"noteBase\",\n          \"uint8\",\n          \"noteMin\",\n          \"uint8\",\n          \"noteMax\",\n          \"uint8\",\n        ];\n\n        this.MusicPlaylistDataV28 = [\n          \"category\",\n          Utils.getQWordReader(),\n          \"name\",\n          Utils.getQWordReader(),\n          \"primaryPlaylistId\",\n          Utils.getQWordReader(),\n          \"secondaryPlaylistId\",\n          Utils.getQWordReader(),\n          \"fileName\",\n          Utils.getArrayReader(this.FileNameDataV28),\n          \"fadeInTime\",\n          \"float32\",\n          \"fadeOutTime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"initialSilence\",\n          this.RangeDataV28,\n          \"intervalSilence\",\n          this.RangeDataV28,\n          \"maxPlayLength\",\n          this.RangeDataV28,\n          \"volume\",\n          this.DynamicParamDataV28,\n          \"fileIterateMode\",\n          \"uint8\",\n        ];\n\n        this.PropertyDataV28 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"tokenValue\",\n          Utils.getQWordReader(),\n          \"floatValue\",\n          \"float32\",\n        ];\n\n        this.ReverbDataV28 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"room\",\n          \"float32\",\n          \"roomHF\",\n          \"float32\",\n          \"roomLF\",\n          \"float32\",\n          \"decayTime\",\n          \"float32\",\n          \"decayHFRatio\",\n          \"float32\",\n          \"reflections\",\n          \"float32\",\n          \"reflectionsDelay\",\n          \"float32\",\n          \"reverb\",\n          \"float32\",\n          \"reverbDelay\",\n          \"float32\",\n          \"referenceHF\",\n          \"float32\",\n          \"referenceLF\",\n          \"float32\",\n          \"diffusion\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"echoDelay\",\n          \"float32\",\n          \"echoDecayRatio\",\n          \"float32\",\n          \"echoWetMix\",\n          \"float32\",\n          \"echoDryMix\",\n          \"float32\",\n        ];\n\n        this.ScriptRefDataV28 = [\"name\", Utils.getQWordReader(), \"fileName\", Utils.getFileNameReader()];\n\n        this.SnapshotDataV28 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"blendInTime\",\n          \"float32\",\n          \"blendOutTime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"buss\",\n          Utils.getArrayReader(this.BussDynamicDataV28),\n          \"category\",\n          Utils.getArrayReader(this.CategoryDynamicDataV28),\n          \"priority\",\n          \"uint8\",\n        ];\n\n        this.AudioSettingsDataV28 = [\n          \"defaultSnapshot\",\n          Utils.getQWordReader(),\n          \"effectsBuss\",\n          Utils.getQWordReader(),\n          \"distanceScale\",\n          \"float32\",\n          \"dopplerScale\",\n          \"float32\",\n          \"echoLevel\",\n          \"float32\",\n          \"focusTransition\",\n          \"float32\",\n          \"memoryPool\",\n          \"float32\",\n          \"reverbLevel\",\n          \"float32\",\n          \"minChannelsLQ\",\n          \"uint32\",\n          \"maxChannelsLQ\",\n          \"uint32\",\n          \"buss\",\n          Utils.getArrayReader(this.BussDataV28),\n          \"category\",\n          Utils.getArrayReader(this.CategoryDataV28),\n          \"material\",\n          Utils.getArrayReader(this.MaterialDataV28),\n          \"musicCondition\",\n          Utils.getArrayReader(this.MusicConditionDataV28),\n          \"musicPlaylist\",\n          Utils.getArrayReader(this.MusicPlaylistDataV28),\n          \"property\",\n          Utils.getArrayReader(this.PropertyDataV28),\n          \"reverb\",\n          Utils.getArrayReader(this.ReverbDataV28),\n          \"scriptRef\",\n          Utils.getArrayReader(this.ScriptRefDataV28),\n          \"snapshot\",\n          Utils.getArrayReader(this.SnapshotDataV28),\n          \"bankIndexFileName\",\n          Utils.getFileNameReader(),\n          \"bankScriptFileName\",\n          Utils.getFileNameReader(),\n          \"musicScriptFileName\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.HandlerDataV28 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"byteCode\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.MetaSoundDataV28 = [\n          \"category\",\n          Utils.getQWordReader(),\n          \"endCue\",\n          Utils.getQWordReader(),\n          \"name\",\n          Utils.getQWordReader(),\n          \"offsetBone\",\n          Utils.getQWordReader(),\n          \"playlistId\",\n          Utils.getQWordReader(),\n          \"dsp\",\n          Utils.getArrayReader(this.DspDataV28),\n          \"attenuation\",\n          Utils.getPointerReader(this.AttenuationDataV28),\n          \"fileName\",\n          Utils.getArrayReader(this.FileNameDataV28),\n          \"channelFadeIn\",\n          \"float32\",\n          \"channelFadeOut\",\n          \"float32\",\n          \"endCueOffset\",\n          \"float32\",\n          \"fadeInTime\",\n          \"float32\",\n          \"fadeOutTime\",\n          \"float32\",\n          \"positionOffset\",\n          [\"[]\", \"float32\", 3],\n          \"channelMax\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"loopCount\",\n          \"uint32\",\n          \"depth\",\n          this.DynamicParamDataV28,\n          \"pan\",\n          this.DynamicParamDataV28,\n          \"pitch\",\n          this.DynamicParamDataV28,\n          \"pitchMS\",\n          this.DynamicParamDataV28,\n          \"volume\",\n          this.DynamicParamDataV28,\n          \"volumeMS\",\n          this.DynamicParamDataV28,\n          \"initialDelay\",\n          this.RangeDataV28,\n          \"playLength\",\n          this.RangeDataV28,\n          \"positionOffsetAngle\",\n          this.RangeDataV28,\n          \"positionRange\",\n          this.RangeDataV28,\n          \"repeatCount\",\n          this.RangeDataV28,\n          \"repeatTime\",\n          this.RangeDataV28,\n          \"replayDelay\",\n          this.RangeDataV28,\n          \"startTimeOffset\",\n          this.RangeDataV28,\n          \"channelMode\",\n          \"uint8\",\n          \"channelPriority\",\n          \"uint8\",\n          \"fileIterateMode\",\n          \"uint8\",\n          \"loopMode\",\n          \"uint8\",\n          \"musicPriority\",\n          \"uint8\",\n          \"playbackMode\",\n          \"uint8\",\n          \"positionMode\",\n          \"uint8\",\n          \"repeatTimeFrom\",\n          \"uint8\",\n        ];\n\n        this.TriggerMarkerDataV28 = [\n          \"cue\",\n          Utils.getQWordReader(),\n          \"end\",\n          Utils.getQWordReader(),\n          \"time\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.TriggerKeyDataV28 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"triggerMarker\",\n          Utils.getArrayReader(this.TriggerMarkerDataV28),\n        ];\n\n        this.__root = this.ScriptFileDataV28 = [\n          \"musicCue\",\n          Utils.getQWordReader(),\n          \"reverbOverride\",\n          Utils.getQWordReader(),\n          \"snapshot\",\n          Utils.getQWordReader(),\n          \"audioSettings\",\n          Utils.getPointerReader(this.AudioSettingsDataV28),\n          \"handler\",\n          Utils.getArrayReader(this.HandlerDataV28),\n          \"metaSound\",\n          Utils.getArrayReader(this.MetaSoundDataV28),\n          \"scriptRef\",\n          Utils.getArrayReader(this.ScriptRefDataV28),\n          \"triggerKey\",\n          Utils.getArrayReader(this.TriggerKeyDataV28),\n          \"property\",\n          Utils.getArrayReader(this.PropertyDataV28),\n          \"flags\",\n          \"uint32\",\n          \"soundPoolCount\",\n          \"uint32\",\n          \"fadeInTime\",\n          \"float32\",\n          \"soundPoolDelay\",\n          \"float32\",\n          \"volume\",\n          \"float32\",\n          \"musicCuePriority\",\n          \"uint8\",\n          \"musicMutePriority\",\n          \"uint8\",\n          \"soundPoolMode\",\n          \"uint8\",\n        ];\n      },\n\n      // => Version: 27\n      27: function () {\n        this.DspDataV27 = [\"type\", \"uint32\", \"flags\", \"uint32\", \"property\", Utils.getArrayReader(\"float32\")];\n\n        this.BussDynamicDataV27 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"volume\",\n          \"float32\",\n          \"dsp\",\n          Utils.getArrayReader(this.DspDataV27),\n        ];\n\n        this.BussDataV27 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"output\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"normalizeFadeTime\",\n          \"float32\",\n          \"normalizeThreshold\",\n          \"float32\",\n          \"normalizeMaxAmp\",\n          \"float32\",\n          \"compressorThreshold\",\n          \"float32\",\n          \"compressorAttack\",\n          \"float32\",\n          \"compressorRelease\",\n          \"float32\",\n          \"compressorGainMakeup\",\n          \"float32\",\n          \"dynamicData\",\n          Utils.getPointerReader(this.BussDynamicDataV27),\n        ];\n\n        this.EnvelopePointDataV27 = [\"offset\", \"float32\", \"value\", \"float32\"];\n\n        this.EnvelopeDataV27 = [\n          \"offsetParameter\",\n          Utils.getQWordReader(),\n          \"envelopePoint\",\n          Utils.getArrayReader(this.EnvelopePointDataV27),\n          \"offsetType\",\n          \"uint8\",\n        ];\n\n        this.RangeDataV27 = [\"max\", \"float32\", \"min\", \"float32\", \"min\", \"uint8\"];\n\n        this.RandomParamDataV27 = [\"time\", this.RangeDataV27, \"value\", this.RangeDataV27];\n\n        this.DynamicParamDataV27 = [\n          \"envelopeData\",\n          Utils.getPointerReader(this.EnvelopeDataV27),\n          \"randomParamData\",\n          Utils.getPointerReader(this.RandomParamDataV27),\n          \"value\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.AttenuationDataV27 = [\n          \"doppler\",\n          \"float32\",\n          \"lowPass\",\n          this.DynamicParamDataV27,\n          \"highPass\",\n          this.DynamicParamDataV27,\n          \"pan3D\",\n          this.DynamicParamDataV27,\n          \"reverb\",\n          this.DynamicParamDataV27,\n          \"spread3D\",\n          this.DynamicParamDataV27,\n          \"volumeA\",\n          this.DynamicParamDataV27,\n          \"volumeB\",\n          this.DynamicParamDataV27,\n          \"lfe\",\n          this.DynamicParamDataV27,\n        ];\n\n        this.CategoryDynamicDataV27 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"volume\",\n          \"float32\",\n          \"nonFocusGain\",\n          \"float32\",\n          \"lowPass\",\n          \"float32\",\n          \"highPass\",\n          \"float32\",\n          \"reverbDirect\",\n          \"float32\",\n          \"reverbRoom\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"minAudible\",\n          \"uint32\",\n          \"maxAudibleLQ\",\n          \"uint32\",\n          \"maxAudibleHG\",\n          \"uint32\",\n        ];\n\n        this.CategoryDataV27 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"volumeGroupName\",\n          Utils.getQWordReader(),\n          \"outputBussName\",\n          Utils.getQWordReader(),\n          \"attenuation\",\n          Utils.getPointerReader(this.AttenuationDataV27),\n          \"dynamicData\",\n          Utils.getPointerReader(this.CategoryDynamicDataV27),\n          \"focusReserve\",\n          \"float32\",\n          \"muteFadeTime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"maxAudible\",\n          \"uint32\",\n          \"maxAudibleBehavior\",\n          \"uint8\",\n          \"priority\",\n          \"uint8\",\n        ];\n\n        this.MaterialDataV27 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"absorptionLF\",\n          \"float32\",\n          \"absorptionMF\",\n          \"float32\",\n          \"absorptionHF\",\n          \"float32\",\n          \"occlusion\",\n          \"float32\",\n        ];\n\n        this.MusicConditionDataV27 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"byteCode\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.FileNameDataV27 = [\n          \"condition\",\n          Utils.getQWordReader(),\n          \"language\",\n          Utils.getQWordReader(),\n          \"volume\",\n          \"float32\",\n          \"weight\",\n          \"float32\",\n          \"fileName\",\n          Utils.getFileNameReader(),\n          \"audioType\",\n          \"uint8\",\n          \"noteBase\",\n          \"uint8\",\n          \"noteMin\",\n          \"uint8\",\n          \"noteMax\",\n          \"uint8\",\n        ];\n\n        this.MusicPlaylistDataV27 = [\n          \"category\",\n          Utils.getQWordReader(),\n          \"name\",\n          Utils.getQWordReader(),\n          \"primaryPlaylistId\",\n          Utils.getQWordReader(),\n          \"secondaryPlaylistId\",\n          Utils.getQWordReader(),\n          \"fileName\",\n          Utils.getArrayReader(this.FileNameDataV27),\n          \"fadeInTime\",\n          \"float32\",\n          \"fadeOutTime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"initialSilence\",\n          this.RangeDataV27,\n          \"intervalSilence\",\n          this.RangeDataV27,\n          \"maxPlayLength\",\n          this.RangeDataV27,\n          \"volume\",\n          this.DynamicParamDataV27,\n          \"fileIterateMode\",\n          \"uint8\",\n        ];\n\n        this.PropertyDataV27 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"tokenValue\",\n          Utils.getQWordReader(),\n          \"floatValue\",\n          \"float32\",\n        ];\n\n        this.ReverbDataV27 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"room\",\n          \"float32\",\n          \"roomHF\",\n          \"float32\",\n          \"roomLF\",\n          \"float32\",\n          \"decayTime\",\n          \"float32\",\n          \"decayHFRatio\",\n          \"float32\",\n          \"reflections\",\n          \"float32\",\n          \"reflectionsDelay\",\n          \"float32\",\n          \"reverb\",\n          \"float32\",\n          \"reverbDelay\",\n          \"float32\",\n          \"referenceHF\",\n          \"float32\",\n          \"referenceLF\",\n          \"float32\",\n          \"diffusion\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"echoDelay\",\n          \"float32\",\n          \"echoDecayRatio\",\n          \"float32\",\n          \"echoWetMix\",\n          \"float32\",\n          \"echoDryMix\",\n          \"float32\",\n        ];\n\n        this.ScriptRefDataV27 = [\"name\", Utils.getQWordReader(), \"fileName\", Utils.getFileNameReader()];\n\n        this.SnapshotDataV27 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"blendInTime\",\n          \"float32\",\n          \"blendOutTime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"buss\",\n          Utils.getArrayReader(this.BussDynamicDataV27),\n          \"category\",\n          Utils.getArrayReader(this.CategoryDynamicDataV27),\n          \"priority\",\n          \"uint8\",\n        ];\n\n        this.AudioSettingsDataV27 = [\n          \"defaultSnapshot\",\n          Utils.getQWordReader(),\n          \"effectsBuss\",\n          Utils.getQWordReader(),\n          \"distanceScale\",\n          \"float32\",\n          \"dopplerScale\",\n          \"float32\",\n          \"echoLevel\",\n          \"float32\",\n          \"focusTransition\",\n          \"float32\",\n          \"memoryPool\",\n          \"float32\",\n          \"reverbLevel\",\n          \"float32\",\n          \"minChannelsLQ\",\n          \"uint32\",\n          \"maxChannelsLQ\",\n          \"uint32\",\n          \"buss\",\n          Utils.getArrayReader(this.BussDataV27),\n          \"category\",\n          Utils.getArrayReader(this.CategoryDataV27),\n          \"material\",\n          Utils.getArrayReader(this.MaterialDataV27),\n          \"musicCondition\",\n          Utils.getArrayReader(this.MusicConditionDataV27),\n          \"musicPlaylist\",\n          Utils.getArrayReader(this.MusicPlaylistDataV27),\n          \"property\",\n          Utils.getArrayReader(this.PropertyDataV27),\n          \"reverb\",\n          Utils.getArrayReader(this.ReverbDataV27),\n          \"scriptRef\",\n          Utils.getArrayReader(this.ScriptRefDataV27),\n          \"snapshot\",\n          Utils.getArrayReader(this.SnapshotDataV27),\n          \"bankIndexFileName\",\n          Utils.getFileNameReader(),\n          \"bankScriptFileName\",\n          Utils.getFileNameReader(),\n          \"musicScriptFileName\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.HandlerDataV27 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"byteCode\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.MetaSoundDataV27 = [\n          \"category\",\n          Utils.getQWordReader(),\n          \"endCue\",\n          Utils.getQWordReader(),\n          \"name\",\n          Utils.getQWordReader(),\n          \"offsetBone\",\n          Utils.getQWordReader(),\n          \"playlistId\",\n          Utils.getQWordReader(),\n          \"dsp\",\n          Utils.getArrayReader(this.DspDataV27),\n          \"attenuation\",\n          Utils.getPointerReader(this.AttenuationDataV27),\n          \"fileName\",\n          Utils.getArrayReader(this.FileNameDataV27),\n          \"channelFadeIn\",\n          \"float32\",\n          \"channelFadeOut\",\n          \"float32\",\n          \"endCueOffset\",\n          \"float32\",\n          \"fadeInTime\",\n          \"float32\",\n          \"fadeOutTime\",\n          \"float32\",\n          \"positionOffset\",\n          [\"[]\", \"float32\", 3],\n          \"channelMax\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"loopCount\",\n          \"uint32\",\n          \"depth\",\n          this.DynamicParamDataV27,\n          \"pan\",\n          this.DynamicParamDataV27,\n          \"pitch\",\n          this.DynamicParamDataV27,\n          \"pitchMS\",\n          this.DynamicParamDataV27,\n          \"volume\",\n          this.DynamicParamDataV27,\n          \"volumeMS\",\n          this.DynamicParamDataV27,\n          \"initialDelay\",\n          this.RangeDataV27,\n          \"playLength\",\n          this.RangeDataV27,\n          \"positionOffsetAngle\",\n          this.RangeDataV27,\n          \"positionRange\",\n          this.RangeDataV27,\n          \"repeatCount\",\n          this.RangeDataV27,\n          \"repeatTime\",\n          this.RangeDataV27,\n          \"startTimeOffset\",\n          this.RangeDataV27,\n          \"channelMode\",\n          \"uint8\",\n          \"channelPriority\",\n          \"uint8\",\n          \"fileIterateMode\",\n          \"uint8\",\n          \"loopMode\",\n          \"uint8\",\n          \"musicPriority\",\n          \"uint8\",\n          \"playbackMode\",\n          \"uint8\",\n          \"positionMode\",\n          \"uint8\",\n          \"repeatTimeFrom\",\n          \"uint8\",\n        ];\n\n        this.TriggerMarkerDataV27 = [\n          \"cue\",\n          Utils.getQWordReader(),\n          \"end\",\n          Utils.getQWordReader(),\n          \"time\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.TriggerKeyDataV27 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"triggerMarker\",\n          Utils.getArrayReader(this.TriggerMarkerDataV27),\n        ];\n\n        this.__root = this.ScriptFileDataV27 = [\n          \"musicCue\",\n          Utils.getQWordReader(),\n          \"reverbOverride\",\n          Utils.getQWordReader(),\n          \"snapshot\",\n          Utils.getQWordReader(),\n          \"audioSettings\",\n          Utils.getPointerReader(this.AudioSettingsDataV27),\n          \"handler\",\n          Utils.getArrayReader(this.HandlerDataV27),\n          \"metaSound\",\n          Utils.getArrayReader(this.MetaSoundDataV27),\n          \"scriptRef\",\n          Utils.getArrayReader(this.ScriptRefDataV27),\n          \"triggerKey\",\n          Utils.getArrayReader(this.TriggerKeyDataV27),\n          \"property\",\n          Utils.getArrayReader(this.PropertyDataV27),\n          \"flags\",\n          \"uint32\",\n          \"soundPoolCount\",\n          \"uint32\",\n          \"fadeInTime\",\n          \"float32\",\n          \"soundPoolDelay\",\n          \"float32\",\n          \"volume\",\n          \"float32\",\n          \"musicCuePriority\",\n          \"uint8\",\n          \"musicMutePriority\",\n          \"uint8\",\n        ];\n      },\n\n      // => Version: 26\n      26: function () {\n        this.DspDataV26 = [\"type\", \"uint32\", \"flags\", \"uint32\", \"property\", Utils.getArrayReader(\"float32\")];\n\n        this.BussDynamicDataV26 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"volume\",\n          \"float32\",\n          \"dsp\",\n          Utils.getArrayReader(this.DspDataV26),\n        ];\n\n        this.BussDataV26 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"output\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"normalizeFadeTime\",\n          \"float32\",\n          \"normalizeThreshold\",\n          \"float32\",\n          \"normalizeMaxAmp\",\n          \"float32\",\n          \"compressorThreshold\",\n          \"float32\",\n          \"compressorAttack\",\n          \"float32\",\n          \"compressorRelease\",\n          \"float32\",\n          \"compressorGainMakeup\",\n          \"float32\",\n          \"dynamicData\",\n          Utils.getPointerReader(this.BussDynamicDataV26),\n        ];\n\n        this.EnvelopePointDataV26 = [\"offset\", \"float32\", \"value\", \"float32\"];\n\n        this.EnvelopeDataV26 = [\n          \"offsetParameter\",\n          Utils.getQWordReader(),\n          \"envelopePoint\",\n          Utils.getArrayReader(this.EnvelopePointDataV26),\n          \"offsetType\",\n          \"uint8\",\n        ];\n\n        this.RangeDataV26 = [\"max\", \"float32\", \"min\", \"float32\", \"min\", \"uint8\"];\n\n        this.RandomParamDataV26 = [\"time\", this.RangeDataV26, \"value\", this.RangeDataV26];\n\n        this.DynamicParamDataV26 = [\n          \"envelopeData\",\n          Utils.getPointerReader(this.EnvelopeDataV26),\n          \"randomParamData\",\n          Utils.getPointerReader(this.RandomParamDataV26),\n          \"value\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.AttenuationDataV26 = [\n          \"doppler\",\n          \"float32\",\n          \"lowPass\",\n          this.DynamicParamDataV26,\n          \"highPass\",\n          this.DynamicParamDataV26,\n          \"pan3D\",\n          this.DynamicParamDataV26,\n          \"reverb\",\n          this.DynamicParamDataV26,\n          \"spread3D\",\n          this.DynamicParamDataV26,\n          \"volumeA\",\n          this.DynamicParamDataV26,\n          \"volumeB\",\n          this.DynamicParamDataV26,\n          \"lfe\",\n          this.DynamicParamDataV26,\n        ];\n\n        this.CategoryDynamicDataV26 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"volume\",\n          \"float32\",\n          \"nonFocusGain\",\n          \"float32\",\n          \"lowPass\",\n          \"float32\",\n          \"highPass\",\n          \"float32\",\n          \"reverbDirect\",\n          \"float32\",\n          \"reverbRoom\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"minAudible\",\n          \"uint32\",\n          \"maxAudibleLQ\",\n          \"uint32\",\n          \"maxAudibleHG\",\n          \"uint32\",\n        ];\n\n        this.CategoryDataV26 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"volumeGroupName\",\n          Utils.getQWordReader(),\n          \"outputBussName\",\n          Utils.getQWordReader(),\n          \"attenuation\",\n          Utils.getPointerReader(this.AttenuationDataV26),\n          \"dynamicData\",\n          Utils.getPointerReader(this.CategoryDynamicDataV26),\n          \"focusReserve\",\n          \"float32\",\n          \"muteFadeTime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"maxAudible\",\n          \"uint32\",\n          \"maxAudibleBehavior\",\n          \"uint8\",\n          \"priority\",\n          \"uint8\",\n        ];\n\n        this.MaterialDataV26 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"absorptionLF\",\n          \"float32\",\n          \"absorptionMF\",\n          \"float32\",\n          \"absorptionHF\",\n          \"float32\",\n          \"occlusion\",\n          \"float32\",\n        ];\n\n        this.MusicConditionDataV26 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"byteCode\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.FileNameDataV26 = [\n          \"condition\",\n          Utils.getQWordReader(),\n          \"language\",\n          Utils.getQWordReader(),\n          \"volume\",\n          \"float32\",\n          \"weight\",\n          \"float32\",\n          \"fileName\",\n          Utils.getFileNameReader(),\n          \"audioType\",\n          \"uint8\",\n          \"noteBase\",\n          \"uint8\",\n          \"noteMin\",\n          \"uint8\",\n          \"noteMax\",\n          \"uint8\",\n        ];\n\n        this.MusicPlaylistDataV26 = [\n          \"category\",\n          Utils.getQWordReader(),\n          \"name\",\n          Utils.getQWordReader(),\n          \"primaryPlaylistId\",\n          Utils.getQWordReader(),\n          \"secondaryPlaylistId\",\n          Utils.getQWordReader(),\n          \"fileName\",\n          Utils.getArrayReader(this.FileNameDataV26),\n          \"fadeInTime\",\n          \"float32\",\n          \"fadeOutTime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"initialSilence\",\n          this.RangeDataV26,\n          \"intervalSilence\",\n          this.RangeDataV26,\n          \"maxPlayLength\",\n          this.RangeDataV26,\n          \"volume\",\n          this.DynamicParamDataV26,\n          \"fileIterateMode\",\n          \"uint8\",\n        ];\n\n        this.ReverbDataV26 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"room\",\n          \"float32\",\n          \"roomHF\",\n          \"float32\",\n          \"roomLF\",\n          \"float32\",\n          \"decayTime\",\n          \"float32\",\n          \"decayHFRatio\",\n          \"float32\",\n          \"reflections\",\n          \"float32\",\n          \"reflectionsDelay\",\n          \"float32\",\n          \"reverb\",\n          \"float32\",\n          \"reverbDelay\",\n          \"float32\",\n          \"referenceHF\",\n          \"float32\",\n          \"referenceLF\",\n          \"float32\",\n          \"diffusion\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"echoDelay\",\n          \"float32\",\n          \"echoDecayRatio\",\n          \"float32\",\n          \"echoWetMix\",\n          \"float32\",\n          \"echoDryMix\",\n          \"float32\",\n        ];\n\n        this.SnapshotDataV26 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"blendInTime\",\n          \"float32\",\n          \"blendOutTime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"buss\",\n          Utils.getArrayReader(this.BussDynamicDataV26),\n          \"category\",\n          Utils.getArrayReader(this.CategoryDynamicDataV26),\n          \"priority\",\n          \"uint8\",\n        ];\n\n        this.AudioSettingsDataV26 = [\n          \"defaultSnapshot\",\n          Utils.getQWordReader(),\n          \"effectsBuss\",\n          Utils.getQWordReader(),\n          \"distanceScale\",\n          \"float32\",\n          \"dopplerScale\",\n          \"float32\",\n          \"focusTransition\",\n          \"float32\",\n          \"memoryPool\",\n          \"float32\",\n          \"reverbLevel\",\n          \"float32\",\n          \"minChannelsLQ\",\n          \"uint32\",\n          \"maxChannelsLQ\",\n          \"uint32\",\n          \"buss\",\n          Utils.getArrayReader(this.BussDataV26),\n          \"category\",\n          Utils.getArrayReader(this.CategoryDataV26),\n          \"material\",\n          Utils.getArrayReader(this.MaterialDataV26),\n          \"musicCondition\",\n          Utils.getArrayReader(this.MusicConditionDataV26),\n          \"musicPlaylist\",\n          Utils.getArrayReader(this.MusicPlaylistDataV26),\n          \"reverb\",\n          Utils.getArrayReader(this.ReverbDataV26),\n          \"snapshot\",\n          Utils.getArrayReader(this.SnapshotDataV26),\n          \"bankIndexFileName\",\n          Utils.getFileNameReader(),\n          \"bankScriptFileName\",\n          Utils.getFileNameReader(),\n          \"musicScriptFileName\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.HandlerDataV26 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"byteCode\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.MetaSoundDataV26 = [\n          \"category\",\n          Utils.getQWordReader(),\n          \"endCue\",\n          Utils.getQWordReader(),\n          \"name\",\n          Utils.getQWordReader(),\n          \"offsetBone\",\n          Utils.getQWordReader(),\n          \"playlistId\",\n          Utils.getQWordReader(),\n          \"dsp\",\n          Utils.getArrayReader(this.DspDataV26),\n          \"attenuation\",\n          Utils.getPointerReader(this.AttenuationDataV26),\n          \"fileName\",\n          Utils.getArrayReader(this.FileNameDataV26),\n          \"channelFadeIn\",\n          \"float32\",\n          \"channelFadeOut\",\n          \"float32\",\n          \"endCueOffset\",\n          \"float32\",\n          \"fadeInTime\",\n          \"float32\",\n          \"fadeOutTime\",\n          \"float32\",\n          \"positionOffset\",\n          [\"[]\", \"float32\", 3],\n          \"channelMax\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"loopCount\",\n          \"uint32\",\n          \"depth\",\n          this.DynamicParamDataV26,\n          \"pan\",\n          this.DynamicParamDataV26,\n          \"pitch\",\n          this.DynamicParamDataV26,\n          \"pitchMS\",\n          this.DynamicParamDataV26,\n          \"volume\",\n          this.DynamicParamDataV26,\n          \"volumeMS\",\n          this.DynamicParamDataV26,\n          \"initialDelay\",\n          this.RangeDataV26,\n          \"playLength\",\n          this.RangeDataV26,\n          \"positionOffsetAngle\",\n          this.RangeDataV26,\n          \"positionRange\",\n          this.RangeDataV26,\n          \"repeatCount\",\n          this.RangeDataV26,\n          \"repeatTime\",\n          this.RangeDataV26,\n          \"startTimeOffset\",\n          this.RangeDataV26,\n          \"channelMode\",\n          \"uint8\",\n          \"channelPriority\",\n          \"uint8\",\n          \"fileIterateMode\",\n          \"uint8\",\n          \"loopMode\",\n          \"uint8\",\n          \"musicPriority\",\n          \"uint8\",\n          \"playbackMode\",\n          \"uint8\",\n          \"positionMode\",\n          \"uint8\",\n          \"repeatTimeFrom\",\n          \"uint8\",\n        ];\n\n        this.ScriptRefDataV26 = [\"name\", Utils.getQWordReader(), \"fileName\", Utils.getFileNameReader()];\n\n        this.TriggerMarkerDataV26 = [\n          \"cue\",\n          Utils.getQWordReader(),\n          \"end\",\n          Utils.getQWordReader(),\n          \"time\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.TriggerKeyDataV26 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"triggerMarker\",\n          Utils.getArrayReader(this.TriggerMarkerDataV26),\n        ];\n\n        this.__root = this.ScriptFileDataV26 = [\n          \"musicCue\",\n          Utils.getQWordReader(),\n          \"reverbOverride\",\n          Utils.getQWordReader(),\n          \"snapshot\",\n          Utils.getQWordReader(),\n          \"audioSettings\",\n          Utils.getPointerReader(this.AudioSettingsDataV26),\n          \"handler\",\n          Utils.getArrayReader(this.HandlerDataV26),\n          \"metaSound\",\n          Utils.getArrayReader(this.MetaSoundDataV26),\n          \"scriptRef\",\n          Utils.getArrayReader(this.ScriptRefDataV26),\n          \"triggerKey\",\n          Utils.getArrayReader(this.TriggerKeyDataV26),\n          \"flags\",\n          \"uint32\",\n          \"soundPoolCount\",\n          \"uint32\",\n          \"fadeInTime\",\n          \"float32\",\n          \"soundPoolDelay\",\n          \"float32\",\n          \"volume\",\n          \"float32\",\n          \"musicCuePriority\",\n          \"uint8\",\n          \"musicMutePriority\",\n          \"uint8\",\n        ];\n      },\n\n      // => Version: 25\n      25: function () {\n        this.DspDataV25 = [\"type\", \"uint32\", \"flags\", \"uint32\", \"property\", Utils.getArrayReader(\"float32\")];\n\n        this.BussDynamicDataV25 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"volume\",\n          \"float32\",\n          \"dsp\",\n          Utils.getArrayReader(this.DspDataV25),\n        ];\n\n        this.BussDataV25 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"output\",\n          Utils.getQWordReader(),\n          \"dynamicData\",\n          Utils.getPointerReader(this.BussDynamicDataV25),\n        ];\n\n        this.EnvelopePointDataV25 = [\"offset\", \"float32\", \"value\", \"float32\"];\n\n        this.EnvelopeDataV25 = [\n          \"offsetParameter\",\n          Utils.getQWordReader(),\n          \"envelopePoint\",\n          Utils.getArrayReader(this.EnvelopePointDataV25),\n          \"offsetType\",\n          \"uint8\",\n        ];\n\n        this.RangeDataV25 = [\"max\", \"float32\", \"min\", \"float32\", \"min\", \"uint8\"];\n\n        this.RandomParamDataV25 = [\"time\", this.RangeDataV25, \"value\", this.RangeDataV25];\n\n        this.DynamicParamDataV25 = [\n          \"envelopeData\",\n          Utils.getPointerReader(this.EnvelopeDataV25),\n          \"randomParamData\",\n          Utils.getPointerReader(this.RandomParamDataV25),\n          \"value\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.AttenuationDataV25 = [\n          \"doppler\",\n          \"float32\",\n          \"lowPass\",\n          this.DynamicParamDataV25,\n          \"highPass\",\n          this.DynamicParamDataV25,\n          \"pan3D\",\n          this.DynamicParamDataV25,\n          \"reverb\",\n          this.DynamicParamDataV25,\n          \"spread3D\",\n          this.DynamicParamDataV25,\n          \"volumeA\",\n          this.DynamicParamDataV25,\n          \"volumeB\",\n          this.DynamicParamDataV25,\n        ];\n\n        this.CategoryDynamicDataV25 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"volume\",\n          \"float32\",\n          \"nonFocusGain\",\n          \"float32\",\n          \"lowPass\",\n          \"float32\",\n          \"highPass\",\n          \"float32\",\n          \"reverbDirect\",\n          \"float32\",\n          \"reverbRoom\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n        ];\n\n        this.CategoryDataV25 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"volumeGroupName\",\n          Utils.getQWordReader(),\n          \"outputBussName\",\n          Utils.getQWordReader(),\n          \"attenuation\",\n          Utils.getPointerReader(this.AttenuationDataV25),\n          \"dynamicData\",\n          Utils.getPointerReader(this.CategoryDynamicDataV25),\n          \"muteFadeTime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"maxAudible\",\n          \"uint32\",\n          \"maxAudibleBehavior\",\n          \"uint8\",\n        ];\n\n        this.MaterialDataV25 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"absorptionLF\",\n          \"float32\",\n          \"absorptionMF\",\n          \"float32\",\n          \"absorptionHF\",\n          \"float32\",\n          \"occlusion\",\n          \"float32\",\n        ];\n\n        this.MusicConditionDataV25 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"byteCode\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.FileNameDataV25 = [\n          \"condition\",\n          Utils.getQWordReader(),\n          \"language\",\n          Utils.getQWordReader(),\n          \"volume\",\n          \"float32\",\n          \"weight\",\n          \"float32\",\n          \"fileName\",\n          Utils.getFileNameReader(),\n          \"audioType\",\n          \"uint8\",\n          \"noteBase\",\n          \"uint8\",\n          \"noteMin\",\n          \"uint8\",\n          \"noteMax\",\n          \"uint8\",\n        ];\n\n        this.MusicPlaylistDataV25 = [\n          \"category\",\n          Utils.getQWordReader(),\n          \"name\",\n          Utils.getQWordReader(),\n          \"primaryPlaylistId\",\n          Utils.getQWordReader(),\n          \"secondaryPlaylistId\",\n          Utils.getQWordReader(),\n          \"fileName\",\n          Utils.getArrayReader(this.FileNameDataV25),\n          \"fadeInTime\",\n          \"float32\",\n          \"fadeOutTime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"initialSilence\",\n          this.RangeDataV25,\n          \"intervalSilence\",\n          this.RangeDataV25,\n          \"maxPlayLength\",\n          this.RangeDataV25,\n          \"volume\",\n          this.DynamicParamDataV25,\n          \"fileIterateMode\",\n          \"uint8\",\n        ];\n\n        this.ReverbDataV25 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"room\",\n          \"float32\",\n          \"roomHF\",\n          \"float32\",\n          \"roomLF\",\n          \"float32\",\n          \"decayTime\",\n          \"float32\",\n          \"decayHFRatio\",\n          \"float32\",\n          \"reflections\",\n          \"float32\",\n          \"reflectionsDelay\",\n          \"float32\",\n          \"reverb\",\n          \"float32\",\n          \"reverbDelay\",\n          \"float32\",\n          \"referenceHF\",\n          \"float32\",\n          \"referenceLF\",\n          \"float32\",\n          \"diffusion\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"echoDelay\",\n          \"float32\",\n          \"echoDecayRatio\",\n          \"float32\",\n          \"echoWetMix\",\n          \"float32\",\n          \"echoDryMix\",\n          \"float32\",\n        ];\n\n        this.SnapshotDataV25 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"blendInTime\",\n          \"float32\",\n          \"blendOutTime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"buss\",\n          Utils.getArrayReader(this.BussDynamicDataV25),\n          \"category\",\n          Utils.getArrayReader(this.CategoryDynamicDataV25),\n          \"priority\",\n          \"uint8\",\n        ];\n\n        this.AudioSettingsDataV25 = [\n          \"defaultSnapshot\",\n          Utils.getQWordReader(),\n          \"effectsBuss\",\n          Utils.getQWordReader(),\n          \"distanceScale\",\n          \"float32\",\n          \"dopplerScale\",\n          \"float32\",\n          \"focusTransition\",\n          \"float32\",\n          \"buss\",\n          Utils.getArrayReader(this.BussDataV25),\n          \"category\",\n          Utils.getArrayReader(this.CategoryDataV25),\n          \"material\",\n          Utils.getArrayReader(this.MaterialDataV25),\n          \"musicCondition\",\n          Utils.getArrayReader(this.MusicConditionDataV25),\n          \"musicPlaylist\",\n          Utils.getArrayReader(this.MusicPlaylistDataV25),\n          \"reverb\",\n          Utils.getArrayReader(this.ReverbDataV25),\n          \"snapshot\",\n          Utils.getArrayReader(this.SnapshotDataV25),\n          \"bankIndexFileName\",\n          Utils.getFileNameReader(),\n          \"bankScriptFileName\",\n          Utils.getFileNameReader(),\n          \"musicScriptFileName\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.HandlerDataV25 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"byteCode\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.MetaSoundDataV25 = [\n          \"category\",\n          Utils.getQWordReader(),\n          \"endCue\",\n          Utils.getQWordReader(),\n          \"name\",\n          Utils.getQWordReader(),\n          \"offsetBone\",\n          Utils.getQWordReader(),\n          \"playlistId\",\n          Utils.getQWordReader(),\n          \"dsp\",\n          Utils.getArrayReader(this.DspDataV25),\n          \"attenuation\",\n          Utils.getPointerReader(this.AttenuationDataV25),\n          \"fileName\",\n          Utils.getArrayReader(this.FileNameDataV25),\n          \"channelFadeIn\",\n          \"float32\",\n          \"channelFadeOut\",\n          \"float32\",\n          \"endCueOffset\",\n          \"float32\",\n          \"fadeInTime\",\n          \"float32\",\n          \"fadeOutTime\",\n          \"float32\",\n          \"positionOffset\",\n          [\"[]\", \"float32\", 3],\n          \"channelMax\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"loopCount\",\n          \"uint32\",\n          \"depth\",\n          this.DynamicParamDataV25,\n          \"pan\",\n          this.DynamicParamDataV25,\n          \"pitch\",\n          this.DynamicParamDataV25,\n          \"pitchMS\",\n          this.DynamicParamDataV25,\n          \"volume\",\n          this.DynamicParamDataV25,\n          \"volumeMS\",\n          this.DynamicParamDataV25,\n          \"initialDelay\",\n          this.RangeDataV25,\n          \"playLength\",\n          this.RangeDataV25,\n          \"positionOffsetAngle\",\n          this.RangeDataV25,\n          \"positionRange\",\n          this.RangeDataV25,\n          \"repeatCount\",\n          this.RangeDataV25,\n          \"repeatTime\",\n          this.RangeDataV25,\n          \"startTimeOffset\",\n          this.RangeDataV25,\n          \"channelMode\",\n          \"uint8\",\n          \"channelPriority\",\n          \"uint8\",\n          \"fileIterateMode\",\n          \"uint8\",\n          \"loopMode\",\n          \"uint8\",\n          \"musicPriority\",\n          \"uint8\",\n          \"playbackMode\",\n          \"uint8\",\n          \"positionMode\",\n          \"uint8\",\n          \"repeatTimeFrom\",\n          \"uint8\",\n        ];\n\n        this.ScriptRefDataV25 = [\"name\", Utils.getQWordReader(), \"fileName\", Utils.getFileNameReader()];\n\n        this.TriggerMarkerDataV25 = [\n          \"cue\",\n          Utils.getQWordReader(),\n          \"end\",\n          Utils.getQWordReader(),\n          \"time\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.TriggerKeyDataV25 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"triggerMarker\",\n          Utils.getArrayReader(this.TriggerMarkerDataV25),\n        ];\n\n        this.__root = this.ScriptFileDataV25 = [\n          \"musicCue\",\n          Utils.getQWordReader(),\n          \"reverbOverride\",\n          Utils.getQWordReader(),\n          \"snapshot\",\n          Utils.getQWordReader(),\n          \"audioSettings\",\n          Utils.getPointerReader(this.AudioSettingsDataV25),\n          \"handler\",\n          Utils.getArrayReader(this.HandlerDataV25),\n          \"metaSound\",\n          Utils.getArrayReader(this.MetaSoundDataV25),\n          \"scriptRef\",\n          Utils.getArrayReader(this.ScriptRefDataV25),\n          \"triggerKey\",\n          Utils.getArrayReader(this.TriggerKeyDataV25),\n          \"flags\",\n          \"uint32\",\n          \"soundPoolCount\",\n          \"uint32\",\n          \"fadeInTime\",\n          \"float32\",\n          \"soundPoolDelay\",\n          \"float32\",\n          \"volume\",\n          \"float32\",\n          \"musicCuePriority\",\n          \"uint8\",\n          \"musicMutePriority\",\n          \"uint8\",\n        ];\n      },\n\n      // => Version: 24\n      24: function () {\n        this.DspDataV24 = [\"type\", \"uint32\", \"flags\", \"uint32\", \"property\", Utils.getArrayReader(\"float32\")];\n\n        this.BussDynamicDataV24 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"volume\",\n          \"float32\",\n          \"dsp\",\n          Utils.getArrayReader(this.DspDataV24),\n        ];\n\n        this.BussDataV24 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"output\",\n          Utils.getQWordReader(),\n          \"dynamicData\",\n          Utils.getPointerReader(this.BussDynamicDataV24),\n        ];\n\n        this.EnvelopePointDataV24 = [\"offset\", \"float32\", \"value\", \"float32\"];\n\n        this.EnvelopeDataV24 = [\n          \"offsetParameter\",\n          Utils.getQWordReader(),\n          \"envelopePoint\",\n          Utils.getArrayReader(this.EnvelopePointDataV24),\n          \"offsetType\",\n          \"uint8\",\n        ];\n\n        this.RangeDataV24 = [\"max\", \"float32\", \"min\", \"float32\", \"min\", \"uint8\"];\n\n        this.RandomParamDataV24 = [\"time\", this.RangeDataV24, \"value\", this.RangeDataV24];\n\n        this.DynamicParamDataV24 = [\n          \"envelopeData\",\n          Utils.getPointerReader(this.EnvelopeDataV24),\n          \"randomParamData\",\n          Utils.getPointerReader(this.RandomParamDataV24),\n          \"value\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.AttenuationDataV24 = [\n          \"doppler\",\n          \"float32\",\n          \"lowPass\",\n          this.DynamicParamDataV24,\n          \"highPass\",\n          this.DynamicParamDataV24,\n          \"pan3D\",\n          this.DynamicParamDataV24,\n          \"reverb\",\n          this.DynamicParamDataV24,\n          \"spread3D\",\n          this.DynamicParamDataV24,\n          \"volumeA\",\n          this.DynamicParamDataV24,\n          \"volumeB\",\n          this.DynamicParamDataV24,\n        ];\n\n        this.CategoryDynamicDataV24 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"volume\",\n          \"float32\",\n          \"nonFocusGain\",\n          \"float32\",\n          \"lowPass\",\n          \"float32\",\n          \"highPass\",\n          \"float32\",\n          \"reverbDirect\",\n          \"float32\",\n          \"reverbRoom\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n        ];\n\n        this.CategoryDataV24 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"volumeGroupName\",\n          Utils.getQWordReader(),\n          \"outputBussName\",\n          Utils.getQWordReader(),\n          \"attenuation\",\n          Utils.getPointerReader(this.AttenuationDataV24),\n          \"dynamicData\",\n          Utils.getPointerReader(this.CategoryDynamicDataV24),\n          \"muteFadeTime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"maxAudible\",\n          \"uint32\",\n          \"maxAudibleBehavior\",\n          \"uint8\",\n        ];\n\n        this.MusicConditionDataV24 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"byteCode\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.FileNameDataV24 = [\n          \"condition\",\n          Utils.getQWordReader(),\n          \"language\",\n          Utils.getQWordReader(),\n          \"volume\",\n          \"float32\",\n          \"weight\",\n          \"float32\",\n          \"fileName\",\n          Utils.getFileNameReader(),\n          \"audioType\",\n          \"uint8\",\n          \"noteBase\",\n          \"uint8\",\n          \"noteMin\",\n          \"uint8\",\n          \"noteMax\",\n          \"uint8\",\n        ];\n\n        this.MusicPlaylistDataV24 = [\n          \"category\",\n          Utils.getQWordReader(),\n          \"name\",\n          Utils.getQWordReader(),\n          \"primaryPlaylistId\",\n          Utils.getQWordReader(),\n          \"secondaryPlaylistId\",\n          Utils.getQWordReader(),\n          \"fileName\",\n          Utils.getArrayReader(this.FileNameDataV24),\n          \"fadeInTime\",\n          \"float32\",\n          \"fadeOutTime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"initialSilence\",\n          this.RangeDataV24,\n          \"intervalSilence\",\n          this.RangeDataV24,\n          \"maxPlayLength\",\n          this.RangeDataV24,\n          \"volume\",\n          this.DynamicParamDataV24,\n          \"fileIterateMode\",\n          \"uint8\",\n        ];\n\n        this.ReverbDataV24 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"room\",\n          \"float32\",\n          \"roomHF\",\n          \"float32\",\n          \"roomLF\",\n          \"float32\",\n          \"decayTime\",\n          \"float32\",\n          \"decayHFRatio\",\n          \"float32\",\n          \"reflections\",\n          \"float32\",\n          \"reflectionsDelay\",\n          \"float32\",\n          \"reverb\",\n          \"float32\",\n          \"reverbDelay\",\n          \"float32\",\n          \"referenceHF\",\n          \"float32\",\n          \"referenceLF\",\n          \"float32\",\n          \"diffusion\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"echoDelay\",\n          \"float32\",\n          \"echoDecayRatio\",\n          \"float32\",\n          \"echoWetMix\",\n          \"float32\",\n          \"echoDryMix\",\n          \"float32\",\n        ];\n\n        this.SnapshotDataV24 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"blendInTime\",\n          \"float32\",\n          \"blendOutTime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"buss\",\n          Utils.getArrayReader(this.BussDynamicDataV24),\n          \"category\",\n          Utils.getArrayReader(this.CategoryDynamicDataV24),\n          \"priority\",\n          \"uint8\",\n        ];\n\n        this.AudioSettingsDataV24 = [\n          \"defaultSnapshot\",\n          Utils.getQWordReader(),\n          \"effectsBuss\",\n          Utils.getQWordReader(),\n          \"distanceScale\",\n          \"float32\",\n          \"dopplerScale\",\n          \"float32\",\n          \"focusTransition\",\n          \"float32\",\n          \"buss\",\n          Utils.getArrayReader(this.BussDataV24),\n          \"category\",\n          Utils.getArrayReader(this.CategoryDataV24),\n          \"musicCondition\",\n          Utils.getArrayReader(this.MusicConditionDataV24),\n          \"musicPlaylist\",\n          Utils.getArrayReader(this.MusicPlaylistDataV24),\n          \"reverb\",\n          Utils.getArrayReader(this.ReverbDataV24),\n          \"snapshot\",\n          Utils.getArrayReader(this.SnapshotDataV24),\n          \"bankIndexFileName\",\n          Utils.getFileNameReader(),\n          \"bankScriptFileName\",\n          Utils.getFileNameReader(),\n          \"musicScriptFileName\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.HandlerDataV24 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"byteCode\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.MetaSoundDataV24 = [\n          \"category\",\n          Utils.getQWordReader(),\n          \"endCue\",\n          Utils.getQWordReader(),\n          \"name\",\n          Utils.getQWordReader(),\n          \"offsetBone\",\n          Utils.getQWordReader(),\n          \"playlistId\",\n          Utils.getQWordReader(),\n          \"dsp\",\n          Utils.getArrayReader(this.DspDataV24),\n          \"attenuation\",\n          Utils.getPointerReader(this.AttenuationDataV24),\n          \"fileName\",\n          Utils.getArrayReader(this.FileNameDataV24),\n          \"channelFadeIn\",\n          \"float32\",\n          \"channelFadeOut\",\n          \"float32\",\n          \"endCueOffset\",\n          \"float32\",\n          \"fadeInTime\",\n          \"float32\",\n          \"fadeOutTime\",\n          \"float32\",\n          \"positionOffset\",\n          [\"[]\", \"float32\", 3],\n          \"channelMax\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"loopCount\",\n          \"uint32\",\n          \"depth\",\n          this.DynamicParamDataV24,\n          \"pan\",\n          this.DynamicParamDataV24,\n          \"pitch\",\n          this.DynamicParamDataV24,\n          \"pitchMS\",\n          this.DynamicParamDataV24,\n          \"volume\",\n          this.DynamicParamDataV24,\n          \"volumeMS\",\n          this.DynamicParamDataV24,\n          \"initialDelay\",\n          this.RangeDataV24,\n          \"playLength\",\n          this.RangeDataV24,\n          \"positionOffsetAngle\",\n          this.RangeDataV24,\n          \"positionRange\",\n          this.RangeDataV24,\n          \"repeatCount\",\n          this.RangeDataV24,\n          \"repeatTime\",\n          this.RangeDataV24,\n          \"startTimeOffset\",\n          this.RangeDataV24,\n          \"channelMode\",\n          \"uint8\",\n          \"channelPriority\",\n          \"uint8\",\n          \"fileIterateMode\",\n          \"uint8\",\n          \"loopMode\",\n          \"uint8\",\n          \"musicPriority\",\n          \"uint8\",\n          \"playbackMode\",\n          \"uint8\",\n          \"positionMode\",\n          \"uint8\",\n          \"repeatTimeFrom\",\n          \"uint8\",\n        ];\n\n        this.ScriptRefDataV24 = [\"name\", Utils.getQWordReader(), \"fileName\", Utils.getFileNameReader()];\n\n        this.TriggerMarkerDataV24 = [\n          \"cue\",\n          Utils.getQWordReader(),\n          \"end\",\n          Utils.getQWordReader(),\n          \"time\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.TriggerKeyDataV24 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"triggerMarker\",\n          Utils.getArrayReader(this.TriggerMarkerDataV24),\n        ];\n\n        this.__root = this.ScriptFileDataV24 = [\n          \"musicCue\",\n          Utils.getQWordReader(),\n          \"reverbOverride\",\n          Utils.getQWordReader(),\n          \"snapshot\",\n          Utils.getQWordReader(),\n          \"audioSettings\",\n          Utils.getPointerReader(this.AudioSettingsDataV24),\n          \"handler\",\n          Utils.getArrayReader(this.HandlerDataV24),\n          \"metaSound\",\n          Utils.getArrayReader(this.MetaSoundDataV24),\n          \"scriptRef\",\n          Utils.getArrayReader(this.ScriptRefDataV24),\n          \"triggerKey\",\n          Utils.getArrayReader(this.TriggerKeyDataV24),\n          \"flags\",\n          \"uint32\",\n          \"soundPoolCount\",\n          \"uint32\",\n          \"fadeInTime\",\n          \"float32\",\n          \"soundPoolDelay\",\n          \"float32\",\n          \"volume\",\n          \"float32\",\n          \"musicCuePriority\",\n          \"uint8\",\n          \"musicMutePriority\",\n          \"uint8\",\n        ];\n      },\n\n      // => Version: 23\n      23: function () {\n        this.DspDataV23 = [\"type\", \"uint32\", \"flags\", \"uint32\", \"property\", Utils.getArrayReader(\"float32\")];\n\n        this.BussDynamicDataV23 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"volume\",\n          \"float32\",\n          \"dsp\",\n          Utils.getArrayReader(this.DspDataV23),\n        ];\n\n        this.BussDataV23 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"output\",\n          Utils.getQWordReader(),\n          \"dynamicData\",\n          Utils.getPointerReader(this.BussDynamicDataV23),\n        ];\n\n        this.EnvelopePointDataV23 = [\"offset\", \"float32\", \"value\", \"float32\"];\n\n        this.EnvelopeDataV23 = [\n          \"offsetParameter\",\n          Utils.getQWordReader(),\n          \"envelopePoint\",\n          Utils.getArrayReader(this.EnvelopePointDataV23),\n          \"offsetType\",\n          \"uint8\",\n        ];\n\n        this.RangeDataV23 = [\"max\", \"float32\", \"min\", \"float32\", \"min\", \"uint8\"];\n\n        this.RandomParamDataV23 = [\"time\", this.RangeDataV23, \"value\", this.RangeDataV23];\n\n        this.DynamicParamDataV23 = [\n          \"envelopeData\",\n          Utils.getPointerReader(this.EnvelopeDataV23),\n          \"randomParamData\",\n          Utils.getPointerReader(this.RandomParamDataV23),\n          \"value\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.AttenuationDataV23 = [\n          \"doppler\",\n          \"float32\",\n          \"lowPass\",\n          this.DynamicParamDataV23,\n          \"highPass\",\n          this.DynamicParamDataV23,\n          \"pan3D\",\n          this.DynamicParamDataV23,\n          \"reverb\",\n          this.DynamicParamDataV23,\n          \"spread3D\",\n          this.DynamicParamDataV23,\n          \"volumeA\",\n          this.DynamicParamDataV23,\n          \"volumeB\",\n          this.DynamicParamDataV23,\n        ];\n\n        this.CategoryDynamicDataV23 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"volume\",\n          \"float32\",\n          \"nonFocusGain\",\n          \"float32\",\n          \"lowPass\",\n          \"float32\",\n          \"highPass\",\n          \"float32\",\n          \"reverbDirect\",\n          \"float32\",\n          \"reverbRoom\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n        ];\n\n        this.CategoryDataV23 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"volumeGroupName\",\n          Utils.getQWordReader(),\n          \"outputBussName\",\n          Utils.getQWordReader(),\n          \"attenuation\",\n          Utils.getPointerReader(this.AttenuationDataV23),\n          \"dynamicData\",\n          Utils.getPointerReader(this.CategoryDynamicDataV23),\n          \"muteFadeTime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"maxAudible\",\n          \"uint32\",\n          \"maxAudibleBehavior\",\n          \"uint8\",\n        ];\n\n        this.MusicConditionDataV23 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"byteCode\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.FileNameDataV23 = [\n          \"condition\",\n          Utils.getQWordReader(),\n          \"language\",\n          Utils.getQWordReader(),\n          \"volume\",\n          \"float32\",\n          \"weight\",\n          \"float32\",\n          \"fileName\",\n          Utils.getFileNameReader(),\n          \"audioType\",\n          \"uint8\",\n        ];\n\n        this.MusicPlaylistDataV23 = [\n          \"category\",\n          Utils.getQWordReader(),\n          \"name\",\n          Utils.getQWordReader(),\n          \"primaryPlaylistId\",\n          Utils.getQWordReader(),\n          \"secondaryPlaylistId\",\n          Utils.getQWordReader(),\n          \"fileName\",\n          Utils.getArrayReader(this.FileNameDataV23),\n          \"fadeInTime\",\n          \"float32\",\n          \"fadeOutTime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"initialSilence\",\n          this.RangeDataV23,\n          \"intervalSilence\",\n          this.RangeDataV23,\n          \"maxPlayLength\",\n          this.RangeDataV23,\n          \"volume\",\n          this.DynamicParamDataV23,\n          \"fileIterateMode\",\n          \"uint8\",\n        ];\n\n        this.ReverbDataV23 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"room\",\n          \"float32\",\n          \"roomHF\",\n          \"float32\",\n          \"roomLF\",\n          \"float32\",\n          \"decayTime\",\n          \"float32\",\n          \"decayHFRatio\",\n          \"float32\",\n          \"reflections\",\n          \"float32\",\n          \"reflectionsDelay\",\n          \"float32\",\n          \"reverb\",\n          \"float32\",\n          \"reverbDelay\",\n          \"float32\",\n          \"referenceHF\",\n          \"float32\",\n          \"referenceLF\",\n          \"float32\",\n          \"diffusion\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"echoDelay\",\n          \"float32\",\n          \"echoDecayRatio\",\n          \"float32\",\n          \"echoWetMix\",\n          \"float32\",\n          \"echoDryMix\",\n          \"float32\",\n        ];\n\n        this.SnapshotDataV23 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"blendInTime\",\n          \"float32\",\n          \"blendOutTime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"buss\",\n          Utils.getArrayReader(this.BussDynamicDataV23),\n          \"category\",\n          Utils.getArrayReader(this.CategoryDynamicDataV23),\n          \"priority\",\n          \"uint8\",\n        ];\n\n        this.AudioSettingsDataV23 = [\n          \"defaultSnapshot\",\n          Utils.getQWordReader(),\n          \"effectsBuss\",\n          Utils.getQWordReader(),\n          \"distanceScale\",\n          \"float32\",\n          \"dopplerScale\",\n          \"float32\",\n          \"focusTransition\",\n          \"float32\",\n          \"buss\",\n          Utils.getArrayReader(this.BussDataV23),\n          \"category\",\n          Utils.getArrayReader(this.CategoryDataV23),\n          \"musicCondition\",\n          Utils.getArrayReader(this.MusicConditionDataV23),\n          \"musicPlaylist\",\n          Utils.getArrayReader(this.MusicPlaylistDataV23),\n          \"reverb\",\n          Utils.getArrayReader(this.ReverbDataV23),\n          \"snapshot\",\n          Utils.getArrayReader(this.SnapshotDataV23),\n          \"bankIndexFileName\",\n          Utils.getFileNameReader(),\n          \"bankScriptFileName\",\n          Utils.getFileNameReader(),\n          \"musicScriptFileName\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.HandlerDataV23 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"byteCode\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.MetaSoundDataV23 = [\n          \"category\",\n          Utils.getQWordReader(),\n          \"endCue\",\n          Utils.getQWordReader(),\n          \"name\",\n          Utils.getQWordReader(),\n          \"offsetBone\",\n          Utils.getQWordReader(),\n          \"playlistId\",\n          Utils.getQWordReader(),\n          \"dsp\",\n          Utils.getArrayReader(this.DspDataV23),\n          \"attenuation\",\n          Utils.getPointerReader(this.AttenuationDataV23),\n          \"fileName\",\n          Utils.getArrayReader(this.FileNameDataV23),\n          \"channelFadeIn\",\n          \"float32\",\n          \"channelFadeOut\",\n          \"float32\",\n          \"endCueOffset\",\n          \"float32\",\n          \"fadeInTime\",\n          \"float32\",\n          \"fadeOutTime\",\n          \"float32\",\n          \"positionOffset\",\n          [\"[]\", \"float32\", 3],\n          \"channelMax\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"loopCount\",\n          \"uint32\",\n          \"depth\",\n          this.DynamicParamDataV23,\n          \"pan\",\n          this.DynamicParamDataV23,\n          \"pitch\",\n          this.DynamicParamDataV23,\n          \"pitchMS\",\n          this.DynamicParamDataV23,\n          \"volume\",\n          this.DynamicParamDataV23,\n          \"volumeMS\",\n          this.DynamicParamDataV23,\n          \"initialDelay\",\n          this.RangeDataV23,\n          \"playLength\",\n          this.RangeDataV23,\n          \"positionOffsetAngle\",\n          this.RangeDataV23,\n          \"positionRange\",\n          this.RangeDataV23,\n          \"repeatCount\",\n          this.RangeDataV23,\n          \"repeatTime\",\n          this.RangeDataV23,\n          \"startTimeOffset\",\n          this.RangeDataV23,\n          \"channelMode\",\n          \"uint8\",\n          \"channelPriority\",\n          \"uint8\",\n          \"fileIterateMode\",\n          \"uint8\",\n          \"loopMode\",\n          \"uint8\",\n          \"musicPriority\",\n          \"uint8\",\n          \"playbackMode\",\n          \"uint8\",\n          \"positionMode\",\n          \"uint8\",\n          \"repeatTimeFrom\",\n          \"uint8\",\n        ];\n\n        this.ScriptRefDataV23 = [\"name\", Utils.getQWordReader(), \"fileName\", Utils.getFileNameReader()];\n\n        this.TriggerMarkerDataV23 = [\n          \"cue\",\n          Utils.getQWordReader(),\n          \"end\",\n          Utils.getQWordReader(),\n          \"time\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.TriggerKeyDataV23 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"triggerMarker\",\n          Utils.getArrayReader(this.TriggerMarkerDataV23),\n        ];\n\n        this.__root = this.ScriptFileDataV23 = [\n          \"musicCue\",\n          Utils.getQWordReader(),\n          \"reverbOverride\",\n          Utils.getQWordReader(),\n          \"snapshot\",\n          Utils.getQWordReader(),\n          \"audioSettings\",\n          Utils.getPointerReader(this.AudioSettingsDataV23),\n          \"handler\",\n          Utils.getArrayReader(this.HandlerDataV23),\n          \"metaSound\",\n          Utils.getArrayReader(this.MetaSoundDataV23),\n          \"scriptRef\",\n          Utils.getArrayReader(this.ScriptRefDataV23),\n          \"triggerKey\",\n          Utils.getArrayReader(this.TriggerKeyDataV23),\n          \"flags\",\n          \"uint32\",\n          \"soundPoolCount\",\n          \"uint32\",\n          \"fadeInTime\",\n          \"float32\",\n          \"soundPoolDelay\",\n          \"float32\",\n          \"volume\",\n          \"float32\",\n          \"musicCuePriority\",\n          \"uint8\",\n          \"musicMutePriority\",\n          \"uint8\",\n        ];\n      },\n\n      // => Version: 22\n      22: function () {\n        this.DspDataV22 = [\"type\", \"uint32\", \"flags\", \"uint32\", \"property\", Utils.getArrayReader(\"float32\")];\n\n        this.BussDynamicDataV22 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"volume\",\n          \"float32\",\n          \"dsp\",\n          Utils.getArrayReader(this.DspDataV22),\n        ];\n\n        this.BussDataV22 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"output\",\n          Utils.getQWordReader(),\n          \"dynamicData\",\n          Utils.getPointerReader(this.BussDynamicDataV22),\n        ];\n\n        this.EnvelopePointDataV22 = [\"offset\", \"float32\", \"value\", \"float32\"];\n\n        this.EnvelopeDataV22 = [\n          \"offsetParameter\",\n          Utils.getQWordReader(),\n          \"envelopePoint\",\n          Utils.getArrayReader(this.EnvelopePointDataV22),\n          \"offsetType\",\n          \"uint8\",\n        ];\n\n        this.RangeDataV22 = [\"max\", \"float32\", \"min\", \"float32\", \"min\", \"uint8\"];\n\n        this.RandomParamDataV22 = [\"time\", this.RangeDataV22, \"value\", this.RangeDataV22];\n\n        this.DynamicParamDataV22 = [\n          \"envelopeData\",\n          Utils.getPointerReader(this.EnvelopeDataV22),\n          \"randomParamData\",\n          Utils.getPointerReader(this.RandomParamDataV22),\n          \"value\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.AttenuationDataV22 = [\n          \"doppler\",\n          \"float32\",\n          \"lowPass\",\n          this.DynamicParamDataV22,\n          \"highPass\",\n          this.DynamicParamDataV22,\n          \"pan3D\",\n          this.DynamicParamDataV22,\n          \"reverb\",\n          this.DynamicParamDataV22,\n          \"spread3D\",\n          this.DynamicParamDataV22,\n          \"volumeA\",\n          this.DynamicParamDataV22,\n          \"volumeB\",\n          this.DynamicParamDataV22,\n        ];\n\n        this.CategoryDynamicDataV22 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"volume\",\n          \"float32\",\n          \"nonFocusGain\",\n          \"float32\",\n          \"lowPass\",\n          \"float32\",\n          \"highPass\",\n          \"float32\",\n          \"reverbDirect\",\n          \"float32\",\n          \"reverbRoom\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n        ];\n\n        this.CategoryDataV22 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"volumeGroupName\",\n          Utils.getQWordReader(),\n          \"outputBussName\",\n          Utils.getQWordReader(),\n          \"attenuation\",\n          Utils.getPointerReader(this.AttenuationDataV22),\n          \"dynamicData\",\n          Utils.getPointerReader(this.CategoryDynamicDataV22),\n          \"muteFadeTime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"maxAudible\",\n          \"uint32\",\n          \"maxAudibleBehavior\",\n          \"uint8\",\n        ];\n\n        this.MusicConditionDataV22 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"byteCode\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.FileNameDataV22 = [\n          \"condition\",\n          Utils.getQWordReader(),\n          \"language\",\n          Utils.getQWordReader(),\n          \"volume\",\n          \"float32\",\n          \"weight\",\n          \"float32\",\n          \"fileName\",\n          Utils.getFileNameReader(),\n          \"audioType\",\n          \"uint8\",\n        ];\n\n        this.MusicPlaylistDataV22 = [\n          \"category\",\n          Utils.getQWordReader(),\n          \"name\",\n          Utils.getQWordReader(),\n          \"primaryPlaylistId\",\n          Utils.getQWordReader(),\n          \"secondaryPlaylistId\",\n          Utils.getQWordReader(),\n          \"fileName\",\n          Utils.getArrayReader(this.FileNameDataV22),\n          \"fadeInTime\",\n          \"float32\",\n          \"fadeOutTime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"initialSilence\",\n          this.RangeDataV22,\n          \"intervalSilence\",\n          this.RangeDataV22,\n          \"maxPlayLength\",\n          this.RangeDataV22,\n          \"volume\",\n          this.DynamicParamDataV22,\n          \"fileIterateMode\",\n          \"uint8\",\n        ];\n\n        this.ReverbDataV22 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"room\",\n          \"float32\",\n          \"roomHF\",\n          \"float32\",\n          \"roomLF\",\n          \"float32\",\n          \"decayTime\",\n          \"float32\",\n          \"decayHFRatio\",\n          \"float32\",\n          \"reflections\",\n          \"float32\",\n          \"reflectionsDelay\",\n          \"float32\",\n          \"reverb\",\n          \"float32\",\n          \"reverbDelay\",\n          \"float32\",\n          \"referenceHF\",\n          \"float32\",\n          \"referenceLF\",\n          \"float32\",\n          \"diffusion\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"echoDelay\",\n          \"float32\",\n          \"echoDecayRatio\",\n          \"float32\",\n          \"echoWetMix\",\n          \"float32\",\n          \"echoDryMix\",\n          \"float32\",\n        ];\n\n        this.SnapshotDataV22 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"blendInTime\",\n          \"float32\",\n          \"blendOutTime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"buss\",\n          Utils.getArrayReader(this.BussDynamicDataV22),\n          \"category\",\n          Utils.getArrayReader(this.CategoryDynamicDataV22),\n          \"priority\",\n          \"uint8\",\n        ];\n\n        this.AudioSettingsDataV22 = [\n          \"defaultSnapshot\",\n          Utils.getQWordReader(),\n          \"effectsBuss\",\n          Utils.getQWordReader(),\n          \"distanceScale\",\n          \"float32\",\n          \"dopplerScale\",\n          \"float32\",\n          \"focusTransition\",\n          \"float32\",\n          \"buss\",\n          Utils.getArrayReader(this.BussDataV22),\n          \"category\",\n          Utils.getArrayReader(this.CategoryDataV22),\n          \"musicCondition\",\n          Utils.getArrayReader(this.MusicConditionDataV22),\n          \"musicPlaylist\",\n          Utils.getArrayReader(this.MusicPlaylistDataV22),\n          \"reverb\",\n          Utils.getArrayReader(this.ReverbDataV22),\n          \"snapshot\",\n          Utils.getArrayReader(this.SnapshotDataV22),\n          \"bankIndexFileName\",\n          Utils.getFileNameReader(),\n          \"bankScriptFileName\",\n          Utils.getFileNameReader(),\n          \"musicScriptFileName\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.HandlerDataV22 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"byteCode\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.MetaSoundDataV22 = [\n          \"category\",\n          Utils.getQWordReader(),\n          \"endCue\",\n          Utils.getQWordReader(),\n          \"name\",\n          Utils.getQWordReader(),\n          \"offsetBone\",\n          Utils.getQWordReader(),\n          \"playlistId\",\n          Utils.getQWordReader(),\n          \"dsp\",\n          Utils.getArrayReader(this.DspDataV22),\n          \"attenuation\",\n          Utils.getPointerReader(this.AttenuationDataV22),\n          \"fileName\",\n          Utils.getArrayReader(this.FileNameDataV22),\n          \"channelFadeIn\",\n          \"float32\",\n          \"channelFadeOut\",\n          \"float32\",\n          \"endCueOffset\",\n          \"float32\",\n          \"fadeInTime\",\n          \"float32\",\n          \"fadeOutTime\",\n          \"float32\",\n          \"positionOffset\",\n          [\"[]\", \"float32\", 3],\n          \"channelMax\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"loopCount\",\n          \"uint32\",\n          \"depth\",\n          this.DynamicParamDataV22,\n          \"pan\",\n          this.DynamicParamDataV22,\n          \"pitch\",\n          this.DynamicParamDataV22,\n          \"pitchMS\",\n          this.DynamicParamDataV22,\n          \"volume\",\n          this.DynamicParamDataV22,\n          \"volumeMS\",\n          this.DynamicParamDataV22,\n          \"initialDelay\",\n          this.RangeDataV22,\n          \"playLength\",\n          this.RangeDataV22,\n          \"positionOffsetAngle\",\n          this.RangeDataV22,\n          \"positionRange\",\n          this.RangeDataV22,\n          \"repeatCount\",\n          this.RangeDataV22,\n          \"repeatTime\",\n          this.RangeDataV22,\n          \"startTimeOffset\",\n          this.RangeDataV22,\n          \"channelMode\",\n          \"uint8\",\n          \"channelPriority\",\n          \"uint8\",\n          \"fileIterateMode\",\n          \"uint8\",\n          \"loopMode\",\n          \"uint8\",\n          \"musicPriority\",\n          \"uint8\",\n          \"playbackMode\",\n          \"uint8\",\n          \"positionMode\",\n          \"uint8\",\n          \"repeatTimeFrom\",\n          \"uint8\",\n        ];\n\n        this.ScriptRefDataV22 = [\"name\", Utils.getQWordReader(), \"fileName\", Utils.getFileNameReader()];\n\n        this.TriggerMarkerDataV22 = [\n          \"cue\",\n          Utils.getQWordReader(),\n          \"end\",\n          Utils.getQWordReader(),\n          \"time\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.TriggerKeyDataV22 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"triggerMarker\",\n          Utils.getArrayReader(this.TriggerMarkerDataV22),\n        ];\n\n        this.__root = this.ScriptFileDataV22 = [\n          \"musicCue\",\n          Utils.getQWordReader(),\n          \"reverbOverride\",\n          Utils.getQWordReader(),\n          \"snapshot\",\n          Utils.getQWordReader(),\n          \"audioSettings\",\n          Utils.getPointerReader(this.AudioSettingsDataV22),\n          \"handler\",\n          Utils.getArrayReader(this.HandlerDataV22),\n          \"metaSound\",\n          Utils.getArrayReader(this.MetaSoundDataV22),\n          \"scriptRef\",\n          Utils.getArrayReader(this.ScriptRefDataV22),\n          \"triggerKey\",\n          Utils.getArrayReader(this.TriggerKeyDataV22),\n          \"flags\",\n          \"uint32\",\n          \"soundPoolCount\",\n          \"uint32\",\n          \"fadeInTime\",\n          \"float32\",\n          \"soundPoolDelay\",\n          \"float32\",\n          \"volume\",\n          \"float32\",\n          \"musicCuePriority\",\n          \"uint8\",\n        ];\n      },\n\n      // => Version: 21\n      21: function () {\n        this.DspDataV21 = [\"type\", \"uint32\", \"flags\", \"uint32\", \"property\", Utils.getArrayReader(\"float32\")];\n\n        this.BussDynamicDataV21 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"volume\",\n          \"float32\",\n          \"dsp\",\n          Utils.getArrayReader(this.DspDataV21),\n        ];\n\n        this.BussDataV21 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"output\",\n          Utils.getQWordReader(),\n          \"dynamicData\",\n          Utils.getPointerReader(this.BussDynamicDataV21),\n        ];\n\n        this.EnvelopePointDataV21 = [\"offset\", \"float32\", \"value\", \"float32\"];\n\n        this.EnvelopeDataV21 = [\n          \"offsetParameter\",\n          Utils.getQWordReader(),\n          \"envelopePoint\",\n          Utils.getArrayReader(this.EnvelopePointDataV21),\n          \"offsetType\",\n          \"uint8\",\n        ];\n\n        this.RangeDataV21 = [\"max\", \"float32\", \"min\", \"float32\", \"min\", \"uint8\"];\n\n        this.RandomParamDataV21 = [\"time\", this.RangeDataV21, \"value\", this.RangeDataV21];\n\n        this.DynamicParamDataV21 = [\n          \"envelopeData\",\n          Utils.getPointerReader(this.EnvelopeDataV21),\n          \"randomParamData\",\n          Utils.getPointerReader(this.RandomParamDataV21),\n          \"value\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.AttenuationDataV21 = [\n          \"doppler\",\n          \"float32\",\n          \"lowPass\",\n          this.DynamicParamDataV21,\n          \"pan3D\",\n          this.DynamicParamDataV21,\n          \"reverb\",\n          this.DynamicParamDataV21,\n          \"spread3D\",\n          this.DynamicParamDataV21,\n          \"volumeA\",\n          this.DynamicParamDataV21,\n          \"volumeB\",\n          this.DynamicParamDataV21,\n        ];\n\n        this.CategoryDynamicDataV21 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"volume\",\n          \"float32\",\n          \"nonFocusGain\",\n          \"float32\",\n          \"lowPass\",\n          \"float32\",\n          \"reverbDirect\",\n          \"float32\",\n          \"reverbRoom\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n        ];\n\n        this.CategoryDataV21 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"volumeGroupName\",\n          Utils.getQWordReader(),\n          \"outputBussName\",\n          Utils.getQWordReader(),\n          \"attenuation\",\n          Utils.getPointerReader(this.AttenuationDataV21),\n          \"dynamicData\",\n          Utils.getPointerReader(this.CategoryDynamicDataV21),\n          \"muteFadeTime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"maxAudible\",\n          \"uint32\",\n          \"maxAudibleBehavior\",\n          \"uint8\",\n        ];\n\n        this.MusicConditionDataV21 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"byteCode\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.FileNameDataV21 = [\n          \"condition\",\n          Utils.getQWordReader(),\n          \"language\",\n          Utils.getQWordReader(),\n          \"volume\",\n          \"float32\",\n          \"weight\",\n          \"float32\",\n          \"fileName\",\n          Utils.getFileNameReader(),\n          \"audioType\",\n          \"uint8\",\n        ];\n\n        this.MusicPlaylistDataV21 = [\n          \"category\",\n          Utils.getQWordReader(),\n          \"name\",\n          Utils.getQWordReader(),\n          \"primaryPlaylistId\",\n          Utils.getQWordReader(),\n          \"secondaryPlaylistId\",\n          Utils.getQWordReader(),\n          \"fileName\",\n          Utils.getArrayReader(this.FileNameDataV21),\n          \"fadeInTime\",\n          \"float32\",\n          \"fadeOutTime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"initialSilence\",\n          this.RangeDataV21,\n          \"intervalSilence\",\n          this.RangeDataV21,\n          \"maxPlayLength\",\n          this.RangeDataV21,\n          \"volume\",\n          this.DynamicParamDataV21,\n          \"fileIterateMode\",\n          \"uint8\",\n        ];\n\n        this.ReverbDataV21 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"room\",\n          \"float32\",\n          \"roomHF\",\n          \"float32\",\n          \"roomLF\",\n          \"float32\",\n          \"decayTime\",\n          \"float32\",\n          \"decayHFRatio\",\n          \"float32\",\n          \"reflections\",\n          \"float32\",\n          \"reflectionsDelay\",\n          \"float32\",\n          \"reverb\",\n          \"float32\",\n          \"reverbDelay\",\n          \"float32\",\n          \"referenceHF\",\n          \"float32\",\n          \"referenceLF\",\n          \"float32\",\n          \"diffusion\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"echoDelay\",\n          \"float32\",\n          \"echoDecayRatio\",\n          \"float32\",\n          \"echoWetMix\",\n          \"float32\",\n          \"echoDryMix\",\n          \"float32\",\n        ];\n\n        this.SnapshotDataV21 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"blendInTime\",\n          \"float32\",\n          \"blendOutTime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"buss\",\n          Utils.getArrayReader(this.BussDynamicDataV21),\n          \"category\",\n          Utils.getArrayReader(this.CategoryDynamicDataV21),\n          \"priority\",\n          \"uint8\",\n        ];\n\n        this.AudioSettingsDataV21 = [\n          \"defaultSnapshot\",\n          Utils.getQWordReader(),\n          \"effectsBuss\",\n          Utils.getQWordReader(),\n          \"distanceScale\",\n          \"float32\",\n          \"dopplerScale\",\n          \"float32\",\n          \"focusTransition\",\n          \"float32\",\n          \"buss\",\n          Utils.getArrayReader(this.BussDataV21),\n          \"category\",\n          Utils.getArrayReader(this.CategoryDataV21),\n          \"musicCondition\",\n          Utils.getArrayReader(this.MusicConditionDataV21),\n          \"musicPlaylist\",\n          Utils.getArrayReader(this.MusicPlaylistDataV21),\n          \"reverb\",\n          Utils.getArrayReader(this.ReverbDataV21),\n          \"snapshot\",\n          Utils.getArrayReader(this.SnapshotDataV21),\n          \"bankIndexFileName\",\n          Utils.getFileNameReader(),\n          \"bankScriptFileName\",\n          Utils.getFileNameReader(),\n          \"musicScriptFileName\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.HandlerDataV21 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"byteCode\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.MetaSoundDataV21 = [\n          \"category\",\n          Utils.getQWordReader(),\n          \"endCue\",\n          Utils.getQWordReader(),\n          \"name\",\n          Utils.getQWordReader(),\n          \"offsetBone\",\n          Utils.getQWordReader(),\n          \"playlistId\",\n          Utils.getQWordReader(),\n          \"dsp\",\n          Utils.getArrayReader(this.DspDataV21),\n          \"attenuation\",\n          Utils.getPointerReader(this.AttenuationDataV21),\n          \"fileName\",\n          Utils.getArrayReader(this.FileNameDataV21),\n          \"channelFadeIn\",\n          \"float32\",\n          \"channelFadeOut\",\n          \"float32\",\n          \"endCueOffset\",\n          \"float32\",\n          \"fadeInTime\",\n          \"float32\",\n          \"fadeOutTime\",\n          \"float32\",\n          \"positionOffset\",\n          [\"[]\", \"float32\", 3],\n          \"channelMax\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"loopCount\",\n          \"uint32\",\n          \"depth\",\n          this.DynamicParamDataV21,\n          \"pan\",\n          this.DynamicParamDataV21,\n          \"pitch\",\n          this.DynamicParamDataV21,\n          \"pitchMS\",\n          this.DynamicParamDataV21,\n          \"volume\",\n          this.DynamicParamDataV21,\n          \"volumeMS\",\n          this.DynamicParamDataV21,\n          \"initialDelay\",\n          this.RangeDataV21,\n          \"playLength\",\n          this.RangeDataV21,\n          \"positionOffsetAngle\",\n          this.RangeDataV21,\n          \"positionRange\",\n          this.RangeDataV21,\n          \"repeatCount\",\n          this.RangeDataV21,\n          \"repeatTime\",\n          this.RangeDataV21,\n          \"startTimeOffset\",\n          this.RangeDataV21,\n          \"channelMode\",\n          \"uint8\",\n          \"channelPriority\",\n          \"uint8\",\n          \"fileIterateMode\",\n          \"uint8\",\n          \"loopMode\",\n          \"uint8\",\n          \"musicPriority\",\n          \"uint8\",\n          \"playbackMode\",\n          \"uint8\",\n          \"positionMode\",\n          \"uint8\",\n          \"repeatTimeFrom\",\n          \"uint8\",\n        ];\n\n        this.ScriptRefDataV21 = [\"name\", Utils.getQWordReader(), \"fileName\", Utils.getFileNameReader()];\n\n        this.TriggerMarkerDataV21 = [\n          \"cue\",\n          Utils.getQWordReader(),\n          \"end\",\n          Utils.getQWordReader(),\n          \"time\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.TriggerKeyDataV21 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"triggerMarker\",\n          Utils.getArrayReader(this.TriggerMarkerDataV21),\n        ];\n\n        this.__root = this.ScriptFileDataV21 = [\n          \"musicCue\",\n          Utils.getQWordReader(),\n          \"reverbOverride\",\n          Utils.getQWordReader(),\n          \"snapshot\",\n          Utils.getQWordReader(),\n          \"audioSettings\",\n          Utils.getPointerReader(this.AudioSettingsDataV21),\n          \"handler\",\n          Utils.getArrayReader(this.HandlerDataV21),\n          \"metaSound\",\n          Utils.getArrayReader(this.MetaSoundDataV21),\n          \"scriptRef\",\n          Utils.getArrayReader(this.ScriptRefDataV21),\n          \"triggerKey\",\n          Utils.getArrayReader(this.TriggerKeyDataV21),\n          \"flags\",\n          \"uint32\",\n          \"soundPoolCount\",\n          \"uint32\",\n          \"fadeInTime\",\n          \"float32\",\n          \"soundPoolDelay\",\n          \"float32\",\n          \"volume\",\n          \"float32\",\n          \"musicCuePriority\",\n          \"uint8\",\n        ];\n      },\n\n      // => Version: 20\n      20: function () {\n        this.DspDataV20 = [\"type\", \"uint32\", \"flags\", \"uint32\", \"property\", Utils.getArrayReader(\"float32\")];\n\n        this.BussDynamicDataV20 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"volume\",\n          \"float32\",\n          \"dsp\",\n          Utils.getArrayReader(this.DspDataV20),\n        ];\n\n        this.BussDataV20 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"output\",\n          Utils.getQWordReader(),\n          \"dynamicData\",\n          Utils.getPointerReader(this.BussDynamicDataV20),\n        ];\n\n        this.EnvelopePointDataV20 = [\"offset\", \"float32\", \"value\", \"float32\"];\n\n        this.EnvelopeDataV20 = [\n          \"offsetParameter\",\n          Utils.getQWordReader(),\n          \"envelopePoint\",\n          Utils.getArrayReader(this.EnvelopePointDataV20),\n          \"offsetType\",\n          \"uint8\",\n        ];\n\n        this.RangeDataV20 = [\"max\", \"float32\", \"min\", \"float32\", \"min\", \"uint8\"];\n\n        this.RandomParamDataV20 = [\"time\", this.RangeDataV20, \"value\", this.RangeDataV20];\n\n        this.DynamicParamDataV20 = [\n          \"envelopeData\",\n          Utils.getPointerReader(this.EnvelopeDataV20),\n          \"randomParamData\",\n          Utils.getPointerReader(this.RandomParamDataV20),\n          \"value\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.AttenuationDataV20 = [\n          \"doppler\",\n          \"float32\",\n          \"lowPass\",\n          this.DynamicParamDataV20,\n          \"pan3D\",\n          this.DynamicParamDataV20,\n          \"reverb\",\n          this.DynamicParamDataV20,\n          \"spread3D\",\n          this.DynamicParamDataV20,\n          \"volumeA\",\n          this.DynamicParamDataV20,\n          \"volumeB\",\n          this.DynamicParamDataV20,\n        ];\n\n        this.CategoryDynamicDataV20 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"volume\",\n          \"float32\",\n          \"nonFocusGain\",\n          \"float32\",\n          \"lowPass\",\n          \"float32\",\n          \"reverbDirect\",\n          \"float32\",\n          \"reverbRoom\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n        ];\n\n        this.CategoryDataV20 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"volumeGroupName\",\n          Utils.getQWordReader(),\n          \"outputBussName\",\n          Utils.getQWordReader(),\n          \"attenuation\",\n          Utils.getPointerReader(this.AttenuationDataV20),\n          \"dynamicData\",\n          Utils.getPointerReader(this.CategoryDynamicDataV20),\n          \"muteFadeTime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"maxAudible\",\n          \"uint32\",\n          \"maxAudibleBehavior\",\n          \"uint8\",\n        ];\n\n        this.ReverbDataV20 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"room\",\n          \"float32\",\n          \"roomHF\",\n          \"float32\",\n          \"roomLF\",\n          \"float32\",\n          \"decayTime\",\n          \"float32\",\n          \"decayHFRatio\",\n          \"float32\",\n          \"reflections\",\n          \"float32\",\n          \"reflectionsDelay\",\n          \"float32\",\n          \"reverb\",\n          \"float32\",\n          \"reverbDelay\",\n          \"float32\",\n          \"referenceHF\",\n          \"float32\",\n          \"referenceLF\",\n          \"float32\",\n          \"diffusion\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"echoDelay\",\n          \"float32\",\n          \"echoDecayRatio\",\n          \"float32\",\n          \"echoWetMix\",\n          \"float32\",\n          \"echoDryMix\",\n          \"float32\",\n        ];\n\n        this.SnapshotDataV20 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"blendInTime\",\n          \"float32\",\n          \"blendOutTime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"buss\",\n          Utils.getArrayReader(this.BussDynamicDataV20),\n          \"category\",\n          Utils.getArrayReader(this.CategoryDynamicDataV20),\n          \"priority\",\n          \"uint8\",\n        ];\n\n        this.AudioSettingsDataV20 = [\n          \"defaultSnapshot\",\n          Utils.getQWordReader(),\n          \"effectsBuss\",\n          Utils.getQWordReader(),\n          \"distanceScale\",\n          \"float32\",\n          \"dopplerScale\",\n          \"float32\",\n          \"focusTransition\",\n          \"float32\",\n          \"buss\",\n          Utils.getArrayReader(this.BussDataV20),\n          \"category\",\n          Utils.getArrayReader(this.CategoryDataV20),\n          \"reverb\",\n          Utils.getArrayReader(this.ReverbDataV20),\n          \"snapshot\",\n          Utils.getArrayReader(this.SnapshotDataV20),\n          \"bankIndexFileName\",\n          Utils.getFileNameReader(),\n          \"bankScriptFileName\",\n          Utils.getFileNameReader(),\n          \"musicScriptFileName\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.HandlerDataV20 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"byteCode\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.FileNameDataV20 = [\n          \"language\",\n          Utils.getQWordReader(),\n          \"weight\",\n          \"float32\",\n          \"fileName\",\n          Utils.getFileNameReader(),\n          \"audioType\",\n          \"uint8\",\n        ];\n\n        this.MetaSoundDataV20 = [\n          \"category\",\n          Utils.getQWordReader(),\n          \"endCue\",\n          Utils.getQWordReader(),\n          \"name\",\n          Utils.getQWordReader(),\n          \"offsetBone\",\n          Utils.getQWordReader(),\n          \"playlistId\",\n          Utils.getQWordReader(),\n          \"dsp\",\n          Utils.getArrayReader(this.DspDataV20),\n          \"attenuation\",\n          Utils.getPointerReader(this.AttenuationDataV20),\n          \"fileName\",\n          Utils.getArrayReader(this.FileNameDataV20),\n          \"channelFadeIn\",\n          \"float32\",\n          \"channelFadeOut\",\n          \"float32\",\n          \"endCueOffset\",\n          \"float32\",\n          \"fadeInTime\",\n          \"float32\",\n          \"fadeOutTime\",\n          \"float32\",\n          \"positionOffset\",\n          [\"[]\", \"float32\", 3],\n          \"channelMax\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"loopCount\",\n          \"uint32\",\n          \"depth\",\n          this.DynamicParamDataV20,\n          \"pan\",\n          this.DynamicParamDataV20,\n          \"pitch\",\n          this.DynamicParamDataV20,\n          \"pitchMS\",\n          this.DynamicParamDataV20,\n          \"volume\",\n          this.DynamicParamDataV20,\n          \"volumeMS\",\n          this.DynamicParamDataV20,\n          \"initialDelay\",\n          this.RangeDataV20,\n          \"playLength\",\n          this.RangeDataV20,\n          \"positionOffsetAngle\",\n          this.RangeDataV20,\n          \"positionRange\",\n          this.RangeDataV20,\n          \"repeatCount\",\n          this.RangeDataV20,\n          \"repeatTime\",\n          this.RangeDataV20,\n          \"startTimeOffset\",\n          this.RangeDataV20,\n          \"channelMode\",\n          \"uint8\",\n          \"channelPriority\",\n          \"uint8\",\n          \"fileIterateMode\",\n          \"uint8\",\n          \"loopMode\",\n          \"uint8\",\n          \"musicPriority\",\n          \"uint8\",\n          \"playbackMode\",\n          \"uint8\",\n          \"positionMode\",\n          \"uint8\",\n          \"repeatTimeFrom\",\n          \"uint8\",\n        ];\n\n        this.ScriptRefDataV20 = [\"name\", Utils.getQWordReader(), \"fileName\", Utils.getFileNameReader()];\n\n        this.TriggerMarkerDataV20 = [\n          \"cue\",\n          Utils.getQWordReader(),\n          \"end\",\n          Utils.getQWordReader(),\n          \"time\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.TriggerKeyDataV20 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"triggerMarker\",\n          Utils.getArrayReader(this.TriggerMarkerDataV20),\n        ];\n\n        this.__root = this.ScriptFileDataV20 = [\n          \"musicCue\",\n          Utils.getQWordReader(),\n          \"reverbOverride\",\n          Utils.getQWordReader(),\n          \"snapshot\",\n          Utils.getQWordReader(),\n          \"audioSettings\",\n          Utils.getPointerReader(this.AudioSettingsDataV20),\n          \"handler\",\n          Utils.getArrayReader(this.HandlerDataV20),\n          \"metaSound\",\n          Utils.getArrayReader(this.MetaSoundDataV20),\n          \"scriptRef\",\n          Utils.getArrayReader(this.ScriptRefDataV20),\n          \"triggerKey\",\n          Utils.getArrayReader(this.TriggerKeyDataV20),\n          \"flags\",\n          \"uint32\",\n          \"soundPoolCount\",\n          \"uint32\",\n          \"fadeInTime\",\n          \"float32\",\n          \"soundPoolDelay\",\n          \"float32\",\n          \"volume\",\n          \"float32\",\n          \"musicCuePriority\",\n          \"uint8\",\n        ];\n      },\n\n      // => Version: 19, ReferencedFunction: 0xE21080\n      19: function () {\n        this.DspDataV19 = [\"type\", \"uint32\", \"flags\", \"uint32\", \"property\", Utils.getArrayReader(\"float32\")];\n\n        this.BussDynamicDataV19 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"volume\",\n          \"float32\",\n          \"dsp\",\n          Utils.getArrayReader(this.DspDataV19),\n        ];\n\n        this.BussDataV19 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"output\",\n          Utils.getQWordReader(),\n          \"dynamicData\",\n          Utils.getPointerReader(this.BussDynamicDataV19),\n        ];\n\n        this.EnvelopePointDataV19 = [\"offset\", \"float32\", \"value\", \"float32\"];\n\n        this.EnvelopeDataV19 = [\n          \"offsetParameter\",\n          Utils.getQWordReader(),\n          \"envelopePoint\",\n          Utils.getArrayReader(this.EnvelopePointDataV19),\n          \"offsetType\",\n          \"uint8\",\n        ];\n\n        this.RangeDataV19 = [\"max\", \"float32\", \"min\", \"float32\", \"min\", \"uint8\"];\n\n        this.RandomParamDataV19 = [\"time\", this.RangeDataV19, \"value\", this.RangeDataV19];\n\n        this.DynamicParamDataV19 = [\n          \"envelopeData\",\n          Utils.getPointerReader(this.EnvelopeDataV19),\n          \"randomParamData\",\n          Utils.getPointerReader(this.RandomParamDataV19),\n          \"value\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.AttenuationDataV19 = [\n          \"doppler\",\n          \"float32\",\n          \"lowPass\",\n          this.DynamicParamDataV19,\n          \"pan3D\",\n          this.DynamicParamDataV19,\n          \"reverb\",\n          this.DynamicParamDataV19,\n          \"spread3D\",\n          this.DynamicParamDataV19,\n          \"volumeA\",\n          this.DynamicParamDataV19,\n          \"volumeB\",\n          this.DynamicParamDataV19,\n        ];\n\n        this.CategoryDynamicDataV19 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"volume\",\n          \"float32\",\n          \"nonFocusGain\",\n          \"float32\",\n          \"lowPass\",\n          \"float32\",\n          \"reverbDirect\",\n          \"float32\",\n          \"reverbRoom\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n        ];\n\n        this.CategoryDataV19 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"volumeGroupName\",\n          Utils.getQWordReader(),\n          \"outputBussName\",\n          Utils.getQWordReader(),\n          \"attenuation\",\n          Utils.getPointerReader(this.AttenuationDataV19),\n          \"dynamicData\",\n          Utils.getPointerReader(this.CategoryDynamicDataV19),\n          \"muteFadeTime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"maxAudible\",\n          \"uint32\",\n          \"maxAudibleBehavior\",\n          \"uint8\",\n        ];\n\n        this.ReverbDataV19 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"room\",\n          \"float32\",\n          \"roomHF\",\n          \"float32\",\n          \"roomLF\",\n          \"float32\",\n          \"decayTime\",\n          \"float32\",\n          \"decayHFRatio\",\n          \"float32\",\n          \"reflections\",\n          \"float32\",\n          \"reflectionsDelay\",\n          \"float32\",\n          \"reverb\",\n          \"float32\",\n          \"reverbDelay\",\n          \"float32\",\n          \"referenceHF\",\n          \"float32\",\n          \"referenceLF\",\n          \"float32\",\n          \"diffusion\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"echoDelay\",\n          \"float32\",\n          \"echoDecayRatio\",\n          \"float32\",\n          \"echoWetMix\",\n          \"float32\",\n          \"echoDryMix\",\n          \"float32\",\n        ];\n\n        this.SnapshotDataV19 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"blendInTime\",\n          \"float32\",\n          \"blendOutTime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"buss\",\n          Utils.getArrayReader(this.BussDynamicDataV19),\n          \"category\",\n          Utils.getArrayReader(this.CategoryDynamicDataV19),\n          \"priority\",\n          \"uint8\",\n        ];\n\n        this.AudioSettingsDataV19 = [\n          \"defaultSnapshot\",\n          Utils.getQWordReader(),\n          \"effectsBuss\",\n          Utils.getQWordReader(),\n          \"distanceScale\",\n          \"float32\",\n          \"dopplerScale\",\n          \"float32\",\n          \"focusTransition\",\n          \"float32\",\n          \"buss\",\n          Utils.getArrayReader(this.BussDataV19),\n          \"category\",\n          Utils.getArrayReader(this.CategoryDataV19),\n          \"reverb\",\n          Utils.getArrayReader(this.ReverbDataV19),\n          \"snapshot\",\n          Utils.getArrayReader(this.SnapshotDataV19),\n          \"bankIndexFileName\",\n          Utils.getFileNameReader(),\n          \"bankScriptFileName\",\n          Utils.getFileNameReader(),\n          \"musicScriptFileName\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.HandlerDataV19 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"byteCode\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.FileNameDataV19 = [\n          \"language\",\n          Utils.getQWordReader(),\n          \"weight\",\n          \"float32\",\n          \"fileName\",\n          Utils.getFileNameReader(),\n          \"audioType\",\n          \"uint8\",\n        ];\n\n        this.MetaSoundDataV19 = [\n          \"category\",\n          Utils.getQWordReader(),\n          \"endCue\",\n          Utils.getQWordReader(),\n          \"name\",\n          Utils.getQWordReader(),\n          \"offsetBone\",\n          Utils.getQWordReader(),\n          \"playlistId\",\n          Utils.getQWordReader(),\n          \"dsp\",\n          Utils.getArrayReader(this.DspDataV19),\n          \"attenuation\",\n          Utils.getPointerReader(this.AttenuationDataV19),\n          \"fileName\",\n          Utils.getArrayReader(this.FileNameDataV19),\n          \"channelFadeIn\",\n          \"float32\",\n          \"channelFadeOut\",\n          \"float32\",\n          \"endCueOffset\",\n          \"float32\",\n          \"fadeInTime\",\n          \"float32\",\n          \"fadeOutTime\",\n          \"float32\",\n          \"positionOffset\",\n          [\"[]\", \"float32\", 3],\n          \"channelMax\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"loopCount\",\n          \"uint32\",\n          \"depth\",\n          this.DynamicParamDataV19,\n          \"pan\",\n          this.DynamicParamDataV19,\n          \"pitch\",\n          this.DynamicParamDataV19,\n          \"pitchMS\",\n          this.DynamicParamDataV19,\n          \"volume\",\n          this.DynamicParamDataV19,\n          \"volumeMS\",\n          this.DynamicParamDataV19,\n          \"initialDelay\",\n          this.RangeDataV19,\n          \"playLength\",\n          this.RangeDataV19,\n          \"positionOffsetAngle\",\n          this.RangeDataV19,\n          \"positionRange\",\n          this.RangeDataV19,\n          \"repeatCount\",\n          this.RangeDataV19,\n          \"repeatTime\",\n          this.RangeDataV19,\n          \"startTimeOffset\",\n          this.RangeDataV19,\n          \"channelMode\",\n          \"uint8\",\n          \"channelPriority\",\n          \"uint8\",\n          \"fileIterateMode\",\n          \"uint8\",\n          \"loopMode\",\n          \"uint8\",\n          \"musicPriority\",\n          \"uint8\",\n          \"playbackMode\",\n          \"uint8\",\n          \"positionMode\",\n          \"uint8\",\n          \"repeatTimeFrom\",\n          \"uint8\",\n        ];\n\n        this.ScriptRefDataV19 = [\"name\", Utils.getQWordReader(), \"fileName\", Utils.getFileNameReader()];\n\n        this.TriggerMarkerDataV19 = [\n          \"cue\",\n          Utils.getQWordReader(),\n          \"end\",\n          Utils.getQWordReader(),\n          \"time\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.TriggerKeyDataV19 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"triggerMarker\",\n          Utils.getArrayReader(this.TriggerMarkerDataV19),\n        ];\n\n        this.__root = this.ScriptFileDataV19 = [\n          \"musicCue\",\n          Utils.getQWordReader(),\n          \"reverbOverride\",\n          Utils.getQWordReader(),\n          \"audioSettings\",\n          Utils.getPointerReader(this.AudioSettingsDataV19),\n          \"handler\",\n          Utils.getArrayReader(this.HandlerDataV19),\n          \"metaSound\",\n          Utils.getArrayReader(this.MetaSoundDataV19),\n          \"scriptRef\",\n          Utils.getArrayReader(this.ScriptRefDataV19),\n          \"triggerKey\",\n          Utils.getArrayReader(this.TriggerKeyDataV19),\n          \"flags\",\n          \"uint32\",\n          \"soundPoolCount\",\n          \"uint32\",\n          \"fadeInTime\",\n          \"float32\",\n          \"soundPoolDelay\",\n          \"float32\",\n          \"volume\",\n          \"float32\",\n          \"musicCuePriority\",\n          \"uint8\",\n        ];\n      },\n\n      // => Version: 18, ReferencedFunction: 0xE20F40\n      18: function () {\n        this.DspDataV18 = [\"type\", \"uint32\", \"flags\", \"uint32\", \"property\", Utils.getArrayReader(\"float32\")];\n\n        this.BussDynamicDataV18 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"volume\",\n          \"float32\",\n          \"dsp\",\n          Utils.getArrayReader(this.DspDataV18),\n        ];\n\n        this.BussDataV18 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"output\",\n          Utils.getQWordReader(),\n          \"dynamicData\",\n          Utils.getPointerReader(this.BussDynamicDataV18),\n        ];\n\n        this.EnvelopePointDataV18 = [\"offset\", \"float32\", \"value\", \"float32\"];\n\n        this.EnvelopeDataV18 = [\n          \"offsetParameter\",\n          Utils.getQWordReader(),\n          \"envelopePoint\",\n          Utils.getArrayReader(this.EnvelopePointDataV18),\n          \"offsetType\",\n          \"uint8\",\n        ];\n\n        this.RangeDataV18 = [\"max\", \"float32\", \"min\", \"float32\", \"min\", \"uint8\"];\n\n        this.RandomParamDataV18 = [\"time\", this.RangeDataV18, \"value\", this.RangeDataV18];\n\n        this.DynamicParamDataV18 = [\n          \"envelopeData\",\n          Utils.getPointerReader(this.EnvelopeDataV18),\n          \"randomParamData\",\n          Utils.getPointerReader(this.RandomParamDataV18),\n          \"value\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.AttenuationDataV18 = [\n          \"doppler\",\n          \"float32\",\n          \"lowPass\",\n          this.DynamicParamDataV18,\n          \"pan3D\",\n          this.DynamicParamDataV18,\n          \"reverb\",\n          this.DynamicParamDataV18,\n          \"spread3D\",\n          this.DynamicParamDataV18,\n          \"volumeA\",\n          this.DynamicParamDataV18,\n          \"volumeB\",\n          this.DynamicParamDataV18,\n        ];\n\n        this.CategoryDynamicDataV18 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"volume\",\n          \"float32\",\n          \"nonFocusGain\",\n          \"float32\",\n          \"lowPass\",\n          \"float32\",\n          \"reverbDirect\",\n          \"float32\",\n          \"reverbRoom\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n        ];\n\n        this.CategoryDataV18 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"volumeGroupName\",\n          Utils.getQWordReader(),\n          \"outputBussName\",\n          Utils.getQWordReader(),\n          \"attenuation\",\n          Utils.getPointerReader(this.AttenuationDataV18),\n          \"dynamicData\",\n          Utils.getPointerReader(this.CategoryDynamicDataV18),\n          \"muteFadeTime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"maxAudible\",\n          \"uint32\",\n          \"maxAudibleBehavior\",\n          \"uint8\",\n        ];\n\n        this.ReverbDataV18 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"room\",\n          \"float32\",\n          \"roomHF\",\n          \"float32\",\n          \"roomLF\",\n          \"float32\",\n          \"decayTime\",\n          \"float32\",\n          \"decayHFRatio\",\n          \"float32\",\n          \"reflections\",\n          \"float32\",\n          \"reflectionsDelay\",\n          \"float32\",\n          \"reverb\",\n          \"float32\",\n          \"reverbDelay\",\n          \"float32\",\n          \"referenceHF\",\n          \"float32\",\n          \"referenceLF\",\n          \"float32\",\n          \"diffusion\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"echoDelay\",\n          \"float32\",\n          \"echoDecayRatio\",\n          \"float32\",\n          \"echoWetMix\",\n          \"float32\",\n          \"echoDryMix\",\n          \"float32\",\n        ];\n\n        this.SnapshotDataV18 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"blendInTime\",\n          \"float32\",\n          \"blendOutTime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"buss\",\n          Utils.getArrayReader(this.BussDynamicDataV18),\n          \"category\",\n          Utils.getArrayReader(this.CategoryDynamicDataV18),\n        ];\n\n        this.AudioSettingsDataV18 = [\n          \"defaultSnapshot\",\n          Utils.getQWordReader(),\n          \"effectsBuss\",\n          Utils.getQWordReader(),\n          \"distanceScale\",\n          \"float32\",\n          \"dopplerScale\",\n          \"float32\",\n          \"focusTransition\",\n          \"float32\",\n          \"buss\",\n          Utils.getArrayReader(this.BussDataV18),\n          \"category\",\n          Utils.getArrayReader(this.CategoryDataV18),\n          \"reverb\",\n          Utils.getArrayReader(this.ReverbDataV18),\n          \"snapshot\",\n          Utils.getArrayReader(this.SnapshotDataV18),\n          \"bankIndexFileName\",\n          Utils.getFileNameReader(),\n          \"bankScriptFileName\",\n          Utils.getFileNameReader(),\n          \"musicScriptFileName\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.HandlerDataV18 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"byteCode\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.FileNameDataV18 = [\n          \"language\",\n          Utils.getQWordReader(),\n          \"weight\",\n          \"float32\",\n          \"fileName\",\n          Utils.getFileNameReader(),\n          \"audioType\",\n          \"uint8\",\n        ];\n\n        this.MetaSoundDataV18 = [\n          \"category\",\n          Utils.getQWordReader(),\n          \"endCue\",\n          Utils.getQWordReader(),\n          \"name\",\n          Utils.getQWordReader(),\n          \"offsetBone\",\n          Utils.getQWordReader(),\n          \"playlistId\",\n          Utils.getQWordReader(),\n          \"dsp\",\n          Utils.getArrayReader(this.DspDataV18),\n          \"attenuation\",\n          Utils.getPointerReader(this.AttenuationDataV18),\n          \"fileName\",\n          Utils.getArrayReader(this.FileNameDataV18),\n          \"channelFadeIn\",\n          \"float32\",\n          \"channelFadeOut\",\n          \"float32\",\n          \"endCueOffset\",\n          \"float32\",\n          \"fadeInTime\",\n          \"float32\",\n          \"fadeOutTime\",\n          \"float32\",\n          \"positionOffset\",\n          [\"[]\", \"float32\", 3],\n          \"channelMax\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"loopCount\",\n          \"uint32\",\n          \"depth\",\n          this.DynamicParamDataV18,\n          \"pan\",\n          this.DynamicParamDataV18,\n          \"pitch\",\n          this.DynamicParamDataV18,\n          \"pitchMS\",\n          this.DynamicParamDataV18,\n          \"volume\",\n          this.DynamicParamDataV18,\n          \"volumeMS\",\n          this.DynamicParamDataV18,\n          \"initialDelay\",\n          this.RangeDataV18,\n          \"playLength\",\n          this.RangeDataV18,\n          \"positionOffsetAngle\",\n          this.RangeDataV18,\n          \"positionRange\",\n          this.RangeDataV18,\n          \"repeatCount\",\n          this.RangeDataV18,\n          \"repeatTime\",\n          this.RangeDataV18,\n          \"startTimeOffset\",\n          this.RangeDataV18,\n          \"channelMode\",\n          \"uint8\",\n          \"channelPriority\",\n          \"uint8\",\n          \"fileIterateMode\",\n          \"uint8\",\n          \"loopMode\",\n          \"uint8\",\n          \"musicPriority\",\n          \"uint8\",\n          \"playbackMode\",\n          \"uint8\",\n          \"positionMode\",\n          \"uint8\",\n          \"repeatTimeFrom\",\n          \"uint8\",\n        ];\n\n        this.ScriptRefDataV18 = [\"name\", Utils.getQWordReader(), \"fileName\", Utils.getFileNameReader()];\n\n        this.TriggerMarkerDataV18 = [\n          \"cue\",\n          Utils.getQWordReader(),\n          \"end\",\n          Utils.getQWordReader(),\n          \"time\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.TriggerKeyDataV18 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"triggerMarker\",\n          Utils.getArrayReader(this.TriggerMarkerDataV18),\n        ];\n\n        this.__root = this.ScriptFileDataV18 = [\n          \"musicCue\",\n          Utils.getQWordReader(),\n          \"reverbOverride\",\n          Utils.getQWordReader(),\n          \"audioSettings\",\n          Utils.getPointerReader(this.AudioSettingsDataV18),\n          \"handler\",\n          Utils.getArrayReader(this.HandlerDataV18),\n          \"metaSound\",\n          Utils.getArrayReader(this.MetaSoundDataV18),\n          \"scriptRef\",\n          Utils.getArrayReader(this.ScriptRefDataV18),\n          \"triggerKey\",\n          Utils.getArrayReader(this.TriggerKeyDataV18),\n          \"flags\",\n          \"uint32\",\n          \"soundPoolCount\",\n          \"uint32\",\n          \"fadeInTime\",\n          \"float32\",\n          \"soundPoolDelay\",\n          \"float32\",\n          \"volume\",\n          \"float32\",\n          \"musicCuePriority\",\n          \"uint8\",\n        ];\n      },\n\n      // => Version: 17\n      17: function () {\n        this.DspDataV17 = [\"type\", \"uint32\", \"flags\", \"uint32\", \"property\", Utils.getArrayReader(\"float32\")];\n\n        this.BussDynamicDataV17 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"volume\",\n          \"float32\",\n          \"dsp\",\n          Utils.getArrayReader(this.DspDataV17),\n        ];\n\n        this.BussDataV17 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"output\",\n          Utils.getQWordReader(),\n          \"dynamicData\",\n          Utils.getPointerReader(this.BussDynamicDataV17),\n        ];\n\n        this.EnvelopePointDataV17 = [\"offset\", \"float32\", \"value\", \"float32\"];\n\n        this.EnvelopeDataV17 = [\n          \"offsetParameter\",\n          Utils.getQWordReader(),\n          \"envelopePoint\",\n          Utils.getArrayReader(this.EnvelopePointDataV17),\n          \"offsetType\",\n          \"uint8\",\n        ];\n\n        this.RangeDataV17 = [\"max\", \"float32\", \"min\", \"float32\", \"min\", \"uint8\"];\n\n        this.RandomParamDataV17 = [\"time\", this.RangeDataV17, \"value\", this.RangeDataV17];\n\n        this.DynamicParamDataV17 = [\n          \"envelopeData\",\n          Utils.getPointerReader(this.EnvelopeDataV17),\n          \"randomParamData\",\n          Utils.getPointerReader(this.RandomParamDataV17),\n          \"value\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.AttenuationDataV17 = [\n          \"doppler\",\n          \"float32\",\n          \"lowPass\",\n          this.DynamicParamDataV17,\n          \"pan3D\",\n          this.DynamicParamDataV17,\n          \"reverb\",\n          this.DynamicParamDataV17,\n          \"spread3D\",\n          this.DynamicParamDataV17,\n          \"volumeA\",\n          this.DynamicParamDataV17,\n          \"volumeB\",\n          this.DynamicParamDataV17,\n        ];\n\n        this.CategoryDynamicDataV17 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"volume\",\n          \"float32\",\n          \"nonFocusGain\",\n          \"float32\",\n          \"lowPass\",\n          \"float32\",\n          \"reverbDirect\",\n          \"float32\",\n          \"reverbRoom\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n        ];\n\n        this.CategoryDataV17 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"volumeGroupName\",\n          Utils.getQWordReader(),\n          \"outputBussName\",\n          Utils.getQWordReader(),\n          \"attenuation\",\n          Utils.getPointerReader(this.AttenuationDataV17),\n          \"dynamicData\",\n          Utils.getPointerReader(this.CategoryDynamicDataV17),\n          \"muteFadeTime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"maxAudible\",\n          \"uint32\",\n          \"maxAudibleBehavior\",\n          \"uint8\",\n        ];\n\n        this.ReverbDataV17 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"room\",\n          \"float32\",\n          \"roomHF\",\n          \"float32\",\n          \"roomLF\",\n          \"float32\",\n          \"decayTime\",\n          \"float32\",\n          \"decayHFRatio\",\n          \"float32\",\n          \"reflections\",\n          \"float32\",\n          \"reflectionsDelay\",\n          \"float32\",\n          \"reverb\",\n          \"float32\",\n          \"reverbDelay\",\n          \"float32\",\n          \"referenceHF\",\n          \"float32\",\n          \"referenceLF\",\n          \"float32\",\n          \"diffusion\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"echoDelay\",\n          \"float32\",\n          \"echoDecayRatio\",\n          \"float32\",\n          \"echoWetMix\",\n          \"float32\",\n          \"echoDryMix\",\n          \"float32\",\n        ];\n\n        this.SnapshotDataV17 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"blendInTime\",\n          \"float32\",\n          \"blendOutTime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"buss\",\n          Utils.getArrayReader(this.BussDynamicDataV17),\n          \"category\",\n          Utils.getArrayReader(this.CategoryDynamicDataV17),\n        ];\n\n        this.AudioSettingsDataV17 = [\n          \"defaultSnapshot\",\n          Utils.getQWordReader(),\n          \"effectsBuss\",\n          Utils.getQWordReader(),\n          \"distanceScale\",\n          \"float32\",\n          \"dopplerScale\",\n          \"float32\",\n          \"focusTransition\",\n          \"float32\",\n          \"buss\",\n          Utils.getArrayReader(this.BussDataV17),\n          \"category\",\n          Utils.getArrayReader(this.CategoryDataV17),\n          \"reverb\",\n          Utils.getArrayReader(this.ReverbDataV17),\n          \"snapshot\",\n          Utils.getArrayReader(this.SnapshotDataV17),\n          \"bankIndexFileName\",\n          Utils.getFileNameReader(),\n          \"bankScriptFileName\",\n          Utils.getFileNameReader(),\n          \"musicScriptFileName\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.HandlerDataV17 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"byteCode\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.FileNameDataV17 = [\n          \"language\",\n          Utils.getQWordReader(),\n          \"weight\",\n          \"float32\",\n          \"fileName\",\n          Utils.getFileNameReader(),\n          \"audioType\",\n          \"uint8\",\n        ];\n\n        this.MetaSoundDataV17 = [\n          \"category\",\n          Utils.getQWordReader(),\n          \"endCue\",\n          Utils.getQWordReader(),\n          \"name\",\n          Utils.getQWordReader(),\n          \"offsetBone\",\n          Utils.getQWordReader(),\n          \"playlistId\",\n          Utils.getQWordReader(),\n          \"dsp\",\n          Utils.getArrayReader(this.DspDataV17),\n          \"attenuation\",\n          Utils.getPointerReader(this.AttenuationDataV17),\n          \"fileName\",\n          Utils.getArrayReader(this.FileNameDataV17),\n          \"channelFadeIn\",\n          \"float32\",\n          \"channelFadeOut\",\n          \"float32\",\n          \"endCueOffset\",\n          \"float32\",\n          \"fadeInTime\",\n          \"float32\",\n          \"fadeOutTime\",\n          \"float32\",\n          \"positionOffset\",\n          [\"[]\", \"float32\", 3],\n          \"channelMax\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"loopCount\",\n          \"uint32\",\n          \"depth\",\n          this.DynamicParamDataV17,\n          \"pan\",\n          this.DynamicParamDataV17,\n          \"pitch\",\n          this.DynamicParamDataV17,\n          \"pitchMS\",\n          this.DynamicParamDataV17,\n          \"volume\",\n          this.DynamicParamDataV17,\n          \"volumeMS\",\n          this.DynamicParamDataV17,\n          \"initialDelay\",\n          this.RangeDataV17,\n          \"playLength\",\n          this.RangeDataV17,\n          \"positionOffsetAngle\",\n          this.RangeDataV17,\n          \"positionRange\",\n          this.RangeDataV17,\n          \"repeatCount\",\n          this.RangeDataV17,\n          \"repeatTime\",\n          this.RangeDataV17,\n          \"startTimeOffset\",\n          this.RangeDataV17,\n          \"channelMode\",\n          \"uint8\",\n          \"channelPriority\",\n          \"uint8\",\n          \"fileIterateMode\",\n          \"uint8\",\n          \"loopMode\",\n          \"uint8\",\n          \"musicPriority\",\n          \"uint8\",\n          \"playbackMode\",\n          \"uint8\",\n          \"positionMode\",\n          \"uint8\",\n          \"repeatTimeFrom\",\n          \"uint8\",\n        ];\n\n        this.ScriptRefDataV17 = [\"name\", Utils.getQWordReader(), \"fileName\", Utils.getFileNameReader()];\n\n        this.TriggerMarkerDataV17 = [\n          \"cue\",\n          Utils.getQWordReader(),\n          \"end\",\n          Utils.getQWordReader(),\n          \"time\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.TriggerKeyDataV17 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"triggerMarker\",\n          Utils.getArrayReader(this.TriggerMarkerDataV17),\n        ];\n\n        this.__root = this.ScriptFileDataV17 = [\n          \"musicCue\",\n          Utils.getQWordReader(),\n          \"reverbOverride\",\n          Utils.getQWordReader(),\n          \"audioSettings\",\n          Utils.getPointerReader(this.AudioSettingsDataV17),\n          \"handler\",\n          Utils.getArrayReader(this.HandlerDataV17),\n          \"metaSound\",\n          Utils.getArrayReader(this.MetaSoundDataV17),\n          \"scriptRef\",\n          Utils.getArrayReader(this.ScriptRefDataV17),\n          \"triggerKey\",\n          Utils.getArrayReader(this.TriggerKeyDataV17),\n          \"flags\",\n          \"uint32\",\n          \"soundPoolCount\",\n          \"uint32\",\n          \"fadeInTime\",\n          \"float32\",\n          \"soundPoolDelay\",\n          \"float32\",\n          \"volume\",\n          \"float32\",\n          \"musicCuePriority\",\n          \"uint8\",\n        ];\n      },\n\n      // => Version: 16\n      16: function () {\n        this.DspDataV16 = [\"type\", \"uint32\", \"flags\", \"uint32\", \"property\", Utils.getArrayReader(\"float32\")];\n\n        this.BussDynamicDataV16 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"volume\",\n          \"float32\",\n          \"dsp\",\n          Utils.getArrayReader(this.DspDataV16),\n        ];\n\n        this.BussDataV16 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"output\",\n          Utils.getQWordReader(),\n          \"dynamicData\",\n          Utils.getPointerReader(this.BussDynamicDataV16),\n        ];\n\n        this.EnvelopePointDataV16 = [\"offset\", \"float32\", \"value\", \"float32\"];\n\n        this.EnvelopeDataV16 = [\n          \"offsetParameter\",\n          Utils.getQWordReader(),\n          \"envelopePoint\",\n          Utils.getArrayReader(this.EnvelopePointDataV16),\n          \"offsetType\",\n          \"uint8\",\n        ];\n\n        this.RangeDataV16 = [\"max\", \"float32\", \"min\", \"float32\", \"min\", \"uint8\"];\n\n        this.RandomParamDataV16 = [\"time\", this.RangeDataV16, \"value\", this.RangeDataV16];\n\n        this.DynamicParamDataV16 = [\n          \"envelopeData\",\n          Utils.getPointerReader(this.EnvelopeDataV16),\n          \"randomParamData\",\n          Utils.getPointerReader(this.RandomParamDataV16),\n          \"value\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.AttenuationDataV16 = [\n          \"doppler\",\n          \"float32\",\n          \"lowPass\",\n          this.DynamicParamDataV16,\n          \"pan3D\",\n          this.DynamicParamDataV16,\n          \"reverb\",\n          this.DynamicParamDataV16,\n          \"spread3D\",\n          this.DynamicParamDataV16,\n          \"volumeA\",\n          this.DynamicParamDataV16,\n          \"volumeB\",\n          this.DynamicParamDataV16,\n        ];\n\n        this.CategoryDynamicDataV16 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"volume\",\n          \"float32\",\n          \"nonFocusGain\",\n          \"float32\",\n          \"lowPass\",\n          \"float32\",\n          \"reverbDirect\",\n          \"float32\",\n          \"reverbRoom\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n        ];\n\n        this.CategoryDataV16 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"volumeGroupName\",\n          Utils.getQWordReader(),\n          \"outputBussName\",\n          Utils.getQWordReader(),\n          \"attenuation\",\n          Utils.getPointerReader(this.AttenuationDataV16),\n          \"dynamicData\",\n          Utils.getPointerReader(this.CategoryDynamicDataV16),\n          \"muteFadeTime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"maxAudible\",\n          \"uint32\",\n          \"maxAudibleBehavior\",\n          \"uint8\",\n        ];\n\n        this.ReverbDataV16 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"room\",\n          \"float32\",\n          \"roomHF\",\n          \"float32\",\n          \"roomLF\",\n          \"float32\",\n          \"decayTime\",\n          \"float32\",\n          \"decayHFRatio\",\n          \"float32\",\n          \"reflections\",\n          \"float32\",\n          \"reflectionsDelay\",\n          \"float32\",\n          \"reverb\",\n          \"float32\",\n          \"reverbDelay\",\n          \"float32\",\n          \"referenceHF\",\n          \"float32\",\n          \"referenceLF\",\n          \"float32\",\n          \"diffusion\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"echoDelay\",\n          \"float32\",\n          \"echoDecayRatio\",\n          \"float32\",\n          \"echoWetMix\",\n          \"float32\",\n          \"echoDryMix\",\n          \"float32\",\n        ];\n\n        this.SnapshotDataV16 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"blendInTime\",\n          \"float32\",\n          \"blendOutTime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"buss\",\n          Utils.getArrayReader(this.BussDynamicDataV16),\n          \"category\",\n          Utils.getArrayReader(this.CategoryDynamicDataV16),\n        ];\n\n        this.AudioSettingsDataV16 = [\n          \"defaultSnapshot\",\n          Utils.getQWordReader(),\n          \"effectsBuss\",\n          Utils.getQWordReader(),\n          \"distanceScale\",\n          \"float32\",\n          \"dopplerScale\",\n          \"float32\",\n          \"focusTransition\",\n          \"float32\",\n          \"buss\",\n          Utils.getArrayReader(this.BussDataV16),\n          \"category\",\n          Utils.getArrayReader(this.CategoryDataV16),\n          \"reverb\",\n          Utils.getArrayReader(this.ReverbDataV16),\n          \"snapshot\",\n          Utils.getArrayReader(this.SnapshotDataV16),\n          \"bankIndexFileName\",\n          Utils.getFileNameReader(),\n          \"bankScriptFileName\",\n          Utils.getFileNameReader(),\n          \"musicScriptFileName\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.HandlerDataV16 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"byteCode\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.FileNameDataV16 = [\n          \"language\",\n          Utils.getQWordReader(),\n          \"weight\",\n          \"float32\",\n          \"fileName\",\n          Utils.getFileNameReader(),\n          \"audioType\",\n          \"uint8\",\n        ];\n\n        this.MetaSoundDataV16 = [\n          \"category\",\n          Utils.getQWordReader(),\n          \"endCue\",\n          Utils.getQWordReader(),\n          \"name\",\n          Utils.getQWordReader(),\n          \"offsetBone\",\n          Utils.getQWordReader(),\n          \"playlistId\",\n          Utils.getQWordReader(),\n          \"dsp\",\n          Utils.getArrayReader(this.DspDataV16),\n          \"attenuation\",\n          Utils.getPointerReader(this.AttenuationDataV16),\n          \"fileName\",\n          Utils.getArrayReader(this.FileNameDataV16),\n          \"endCueOffset\",\n          \"float32\",\n          \"fadeInTime\",\n          \"float32\",\n          \"fadeOutTime\",\n          \"float32\",\n          \"positionOffset\",\n          [\"[]\", \"float32\", 3],\n          \"flags\",\n          \"uint32\",\n          \"loopCount\",\n          \"uint32\",\n          \"depth\",\n          this.DynamicParamDataV16,\n          \"pan\",\n          this.DynamicParamDataV16,\n          \"pitch\",\n          this.DynamicParamDataV16,\n          \"pitchMS\",\n          this.DynamicParamDataV16,\n          \"volume\",\n          this.DynamicParamDataV16,\n          \"volumeMS\",\n          this.DynamicParamDataV16,\n          \"initialDelay\",\n          this.RangeDataV16,\n          \"playLength\",\n          this.RangeDataV16,\n          \"positionOffsetAngle\",\n          this.RangeDataV16,\n          \"positionRange\",\n          this.RangeDataV16,\n          \"repeatCount\",\n          this.RangeDataV16,\n          \"repeatTime\",\n          this.RangeDataV16,\n          \"startTimeOffset\",\n          this.RangeDataV16,\n          \"channelMode\",\n          \"uint8\",\n          \"channelPriority\",\n          \"uint8\",\n          \"fileIterateMode\",\n          \"uint8\",\n          \"loopMode\",\n          \"uint8\",\n          \"musicPriority\",\n          \"uint8\",\n          \"playbackMode\",\n          \"uint8\",\n          \"positionMode\",\n          \"uint8\",\n          \"repeatTimeFrom\",\n          \"uint8\",\n        ];\n\n        this.ScriptRefDataV16 = [\"name\", Utils.getQWordReader(), \"fileName\", Utils.getFileNameReader()];\n\n        this.TriggerMarkerDataV16 = [\n          \"cue\",\n          Utils.getQWordReader(),\n          \"end\",\n          Utils.getQWordReader(),\n          \"time\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.TriggerKeyDataV16 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"triggerMarker\",\n          Utils.getArrayReader(this.TriggerMarkerDataV16),\n        ];\n\n        this.__root = this.ScriptFileDataV16 = [\n          \"musicCue\",\n          Utils.getQWordReader(),\n          \"reverbOverride\",\n          Utils.getQWordReader(),\n          \"audioSettings\",\n          Utils.getPointerReader(this.AudioSettingsDataV16),\n          \"handler\",\n          Utils.getArrayReader(this.HandlerDataV16),\n          \"metaSound\",\n          Utils.getArrayReader(this.MetaSoundDataV16),\n          \"scriptRef\",\n          Utils.getArrayReader(this.ScriptRefDataV16),\n          \"triggerKey\",\n          Utils.getArrayReader(this.TriggerKeyDataV16),\n          \"flags\",\n          \"uint32\",\n          \"soundPoolCount\",\n          \"uint32\",\n          \"fadeInTime\",\n          \"float32\",\n          \"soundPoolDelay\",\n          \"float32\",\n          \"volume\",\n          \"float32\",\n          \"musicCuePriority\",\n          \"uint8\",\n        ];\n      },\n\n      // => Version: 15\n      15: function () {\n        this.DspDataV15 = [\"type\", \"uint32\", \"flags\", \"uint32\", \"property\", Utils.getArrayReader(\"float32\")];\n\n        this.BussDynamicDataV15 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"volume\",\n          \"float32\",\n          \"dsp\",\n          Utils.getArrayReader(this.DspDataV15),\n        ];\n\n        this.BussDataV15 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"output\",\n          Utils.getQWordReader(),\n          \"dynamicData\",\n          Utils.getPointerReader(this.BussDynamicDataV15),\n        ];\n\n        this.EnvelopePointDataV15 = [\"offset\", \"float32\", \"value\", \"float32\"];\n\n        this.EnvelopeDataV15 = [\n          \"offsetParameter\",\n          Utils.getQWordReader(),\n          \"envelopePoint\",\n          Utils.getArrayReader(this.EnvelopePointDataV15),\n          \"offsetType\",\n          \"uint8\",\n        ];\n\n        this.RangeDataV15 = [\"max\", \"float32\", \"min\", \"float32\", \"min\", \"uint8\"];\n\n        this.RandomParamDataV15 = [\"time\", this.RangeDataV15, \"value\", this.RangeDataV15];\n\n        this.DynamicParamDataV15 = [\n          \"envelopeData\",\n          Utils.getPointerReader(this.EnvelopeDataV15),\n          \"randomParamData\",\n          Utils.getPointerReader(this.RandomParamDataV15),\n          \"value\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.AttenuationDataV15 = [\n          \"doppler\",\n          \"float32\",\n          \"lowPass\",\n          this.DynamicParamDataV15,\n          \"pan3D\",\n          this.DynamicParamDataV15,\n          \"reverb\",\n          this.DynamicParamDataV15,\n          \"spread3D\",\n          this.DynamicParamDataV15,\n          \"volumeA\",\n          this.DynamicParamDataV15,\n          \"volumeB\",\n          this.DynamicParamDataV15,\n        ];\n\n        this.CategoryDynamicDataV15 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"volume\",\n          \"float32\",\n          \"nonFocusGain\",\n          \"float32\",\n          \"lowPass\",\n          \"float32\",\n          \"reverbDirect\",\n          \"float32\",\n          \"reverbRoom\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n        ];\n\n        this.CategoryDataV15 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"volumeGroupName\",\n          Utils.getQWordReader(),\n          \"outputBussName\",\n          Utils.getQWordReader(),\n          \"attenuation\",\n          Utils.getPointerReader(this.AttenuationDataV15),\n          \"dynamicData\",\n          Utils.getPointerReader(this.CategoryDynamicDataV15),\n          \"muteFadeTime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"maxAudible\",\n          \"uint32\",\n          \"maxAudibleBehavior\",\n          \"uint8\",\n        ];\n\n        this.ReverbDataV15 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"room\",\n          \"float32\",\n          \"roomHF\",\n          \"float32\",\n          \"roomLF\",\n          \"float32\",\n          \"decayTime\",\n          \"float32\",\n          \"decayHFRatio\",\n          \"float32\",\n          \"reflections\",\n          \"float32\",\n          \"reflectionsDelay\",\n          \"float32\",\n          \"reverb\",\n          \"float32\",\n          \"reverbDelay\",\n          \"float32\",\n          \"referenceHF\",\n          \"float32\",\n          \"referenceLF\",\n          \"float32\",\n          \"diffusion\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n        ];\n\n        this.SnapshotDataV15 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"blendInTime\",\n          \"float32\",\n          \"blendOutTime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"buss\",\n          Utils.getArrayReader(this.BussDynamicDataV15),\n          \"category\",\n          Utils.getArrayReader(this.CategoryDynamicDataV15),\n        ];\n\n        this.AudioSettingsDataV15 = [\n          \"defaultSnapshot\",\n          Utils.getQWordReader(),\n          \"effectsBuss\",\n          Utils.getQWordReader(),\n          \"distanceScale\",\n          \"float32\",\n          \"dopplerScale\",\n          \"float32\",\n          \"focusTransition\",\n          \"float32\",\n          \"buss\",\n          Utils.getArrayReader(this.BussDataV15),\n          \"category\",\n          Utils.getArrayReader(this.CategoryDataV15),\n          \"reverb\",\n          Utils.getArrayReader(this.ReverbDataV15),\n          \"snapshot\",\n          Utils.getArrayReader(this.SnapshotDataV15),\n          \"bankIndexFileName\",\n          Utils.getFileNameReader(),\n          \"bankScriptFileName\",\n          Utils.getFileNameReader(),\n          \"musicScriptFileName\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.HandlerDataV15 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"byteCode\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.FileNameDataV15 = [\n          \"language\",\n          Utils.getQWordReader(),\n          \"weight\",\n          \"float32\",\n          \"fileName\",\n          Utils.getFileNameReader(),\n          \"audioType\",\n          \"uint8\",\n        ];\n\n        this.MetaSoundDataV15 = [\n          \"category\",\n          Utils.getQWordReader(),\n          \"endCue\",\n          Utils.getQWordReader(),\n          \"name\",\n          Utils.getQWordReader(),\n          \"offsetBone\",\n          Utils.getQWordReader(),\n          \"playlistId\",\n          Utils.getQWordReader(),\n          \"dsp\",\n          Utils.getArrayReader(this.DspDataV15),\n          \"attenuation\",\n          Utils.getPointerReader(this.AttenuationDataV15),\n          \"fileName\",\n          Utils.getArrayReader(this.FileNameDataV15),\n          \"endCueOffset\",\n          \"float32\",\n          \"fadeInTime\",\n          \"float32\",\n          \"fadeOutTime\",\n          \"float32\",\n          \"positionOffset\",\n          [\"[]\", \"float32\", 3],\n          \"flags\",\n          \"uint32\",\n          \"loopCount\",\n          \"uint32\",\n          \"depth\",\n          this.DynamicParamDataV15,\n          \"pan\",\n          this.DynamicParamDataV15,\n          \"pitch\",\n          this.DynamicParamDataV15,\n          \"pitchMS\",\n          this.DynamicParamDataV15,\n          \"volume\",\n          this.DynamicParamDataV15,\n          \"volumeMS\",\n          this.DynamicParamDataV15,\n          \"initialDelay\",\n          this.RangeDataV15,\n          \"playLength\",\n          this.RangeDataV15,\n          \"positionOffsetAngle\",\n          this.RangeDataV15,\n          \"positionRange\",\n          this.RangeDataV15,\n          \"repeatCount\",\n          this.RangeDataV15,\n          \"repeatTime\",\n          this.RangeDataV15,\n          \"startTimeOffset\",\n          this.RangeDataV15,\n          \"channelMode\",\n          \"uint8\",\n          \"channelPriority\",\n          \"uint8\",\n          \"fileIterateMode\",\n          \"uint8\",\n          \"loopMode\",\n          \"uint8\",\n          \"musicPriority\",\n          \"uint8\",\n          \"playbackMode\",\n          \"uint8\",\n          \"positionMode\",\n          \"uint8\",\n          \"repeatTimeFrom\",\n          \"uint8\",\n        ];\n\n        this.ScriptRefDataV15 = [\"name\", Utils.getQWordReader(), \"fileName\", Utils.getFileNameReader()];\n\n        this.TriggerMarkerDataV15 = [\n          \"cue\",\n          Utils.getQWordReader(),\n          \"end\",\n          Utils.getQWordReader(),\n          \"time\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.TriggerKeyDataV15 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"triggerMarker\",\n          Utils.getArrayReader(this.TriggerMarkerDataV15),\n        ];\n\n        this.__root = this.ScriptFileDataV15 = [\n          \"musicCue\",\n          Utils.getQWordReader(),\n          \"reverbOverride\",\n          Utils.getQWordReader(),\n          \"audioSettings\",\n          Utils.getPointerReader(this.AudioSettingsDataV15),\n          \"handler\",\n          Utils.getArrayReader(this.HandlerDataV15),\n          \"metaSound\",\n          Utils.getArrayReader(this.MetaSoundDataV15),\n          \"scriptRef\",\n          Utils.getArrayReader(this.ScriptRefDataV15),\n          \"triggerKey\",\n          Utils.getArrayReader(this.TriggerKeyDataV15),\n          \"flags\",\n          \"uint32\",\n          \"soundPoolCount\",\n          \"uint32\",\n          \"fadeInTime\",\n          \"float32\",\n          \"soundPoolDelay\",\n          \"float32\",\n          \"volume\",\n          \"float32\",\n          \"musicCuePriority\",\n          \"uint8\",\n        ];\n      },\n\n      // => Version: 14\n      14: function () {\n        this.DspDataV14 = [\"type\", \"uint32\", \"flags\", \"uint32\", \"property\", Utils.getArrayReader(\"float32\")];\n\n        this.BussDynamicDataV14 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"volume\",\n          \"float32\",\n          \"dsp\",\n          Utils.getArrayReader(this.DspDataV14),\n        ];\n\n        this.BussDataV14 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"output\",\n          Utils.getQWordReader(),\n          \"dynamicData\",\n          Utils.getPointerReader(this.BussDynamicDataV14),\n        ];\n\n        this.EnvelopePointDataV14 = [\"offset\", \"float32\", \"value\", \"float32\"];\n\n        this.EnvelopeDataV14 = [\n          \"offsetParameter\",\n          Utils.getQWordReader(),\n          \"envelopePoint\",\n          Utils.getArrayReader(this.EnvelopePointDataV14),\n          \"offsetType\",\n          \"uint8\",\n        ];\n\n        this.RangeDataV14 = [\"max\", \"float32\", \"min\", \"float32\", \"min\", \"uint8\"];\n\n        this.RandomParamDataV14 = [\"time\", this.RangeDataV14, \"value\", this.RangeDataV14];\n\n        this.DynamicParamDataV14 = [\n          \"envelopeData\",\n          Utils.getPointerReader(this.EnvelopeDataV14),\n          \"randomParamData\",\n          Utils.getPointerReader(this.RandomParamDataV14),\n          \"value\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.AttenuationDataV14 = [\n          \"doppler\",\n          \"float32\",\n          \"lowPass\",\n          this.DynamicParamDataV14,\n          \"pan3D\",\n          this.DynamicParamDataV14,\n          \"spread3D\",\n          this.DynamicParamDataV14,\n          \"volumeA\",\n          this.DynamicParamDataV14,\n          \"volumeB\",\n          this.DynamicParamDataV14,\n        ];\n\n        this.CategoryDynamicDataV14 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"volume\",\n          \"float32\",\n          \"nonFocusGain\",\n          \"float32\",\n          \"lowPass\",\n          \"float32\",\n          \"reverbDirect\",\n          \"float32\",\n          \"reverbRoom\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n        ];\n\n        this.CategoryDataV14 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"volumeGroupName\",\n          Utils.getQWordReader(),\n          \"outputBussName\",\n          Utils.getQWordReader(),\n          \"attenuation\",\n          Utils.getPointerReader(this.AttenuationDataV14),\n          \"dynamicData\",\n          Utils.getPointerReader(this.CategoryDynamicDataV14),\n          \"muteFadeTime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"maxAudible\",\n          \"uint32\",\n          \"maxAudibleBehavior\",\n          \"uint8\",\n        ];\n\n        this.ReverbDataV14 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"room\",\n          \"float32\",\n          \"roomHF\",\n          \"float32\",\n          \"roomLF\",\n          \"float32\",\n          \"decayTime\",\n          \"float32\",\n          \"decayHFRatio\",\n          \"float32\",\n          \"reflections\",\n          \"float32\",\n          \"reflectionsDelay\",\n          \"float32\",\n          \"reverb\",\n          \"float32\",\n          \"reverbDelay\",\n          \"float32\",\n          \"referenceHF\",\n          \"float32\",\n          \"referenceLF\",\n          \"float32\",\n          \"diffusion\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n        ];\n\n        this.SnapshotDataV14 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"blendInTime\",\n          \"float32\",\n          \"blendOutTime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"buss\",\n          Utils.getArrayReader(this.BussDynamicDataV14),\n          \"category\",\n          Utils.getArrayReader(this.CategoryDynamicDataV14),\n        ];\n\n        this.AudioSettingsDataV14 = [\n          \"defaultSnapshot\",\n          Utils.getQWordReader(),\n          \"effectsBuss\",\n          Utils.getQWordReader(),\n          \"distanceScale\",\n          \"float32\",\n          \"dopplerScale\",\n          \"float32\",\n          \"focusTransition\",\n          \"float32\",\n          \"buss\",\n          Utils.getArrayReader(this.BussDataV14),\n          \"category\",\n          Utils.getArrayReader(this.CategoryDataV14),\n          \"reverb\",\n          Utils.getArrayReader(this.ReverbDataV14),\n          \"snapshot\",\n          Utils.getArrayReader(this.SnapshotDataV14),\n          \"bankIndexFileName\",\n          Utils.getFileNameReader(),\n          \"bankScriptFileName\",\n          Utils.getFileNameReader(),\n          \"musicScriptFileName\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.HandlerDataV14 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"byteCode\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.FileNameDataV14 = [\n          \"language\",\n          Utils.getQWordReader(),\n          \"weight\",\n          \"float32\",\n          \"fileName\",\n          Utils.getFileNameReader(),\n          \"audioType\",\n          \"uint8\",\n        ];\n\n        this.MetaSoundDataV14 = [\n          \"category\",\n          Utils.getQWordReader(),\n          \"endCue\",\n          Utils.getQWordReader(),\n          \"name\",\n          Utils.getQWordReader(),\n          \"offsetBone\",\n          Utils.getQWordReader(),\n          \"playlistId\",\n          Utils.getQWordReader(),\n          \"dsp\",\n          Utils.getArrayReader(this.DspDataV14),\n          \"attenuation\",\n          Utils.getPointerReader(this.AttenuationDataV14),\n          \"fileName\",\n          Utils.getArrayReader(this.FileNameDataV14),\n          \"endCueOffset\",\n          \"float32\",\n          \"fadeInTime\",\n          \"float32\",\n          \"fadeOutTime\",\n          \"float32\",\n          \"positionOffset\",\n          [\"[]\", \"float32\", 3],\n          \"flags\",\n          \"uint32\",\n          \"loopCount\",\n          \"uint32\",\n          \"depth\",\n          this.DynamicParamDataV14,\n          \"pan\",\n          this.DynamicParamDataV14,\n          \"pitch\",\n          this.DynamicParamDataV14,\n          \"pitchMS\",\n          this.DynamicParamDataV14,\n          \"volume\",\n          this.DynamicParamDataV14,\n          \"volumeMS\",\n          this.DynamicParamDataV14,\n          \"initialDelay\",\n          this.RangeDataV14,\n          \"playLength\",\n          this.RangeDataV14,\n          \"positionOffsetAngle\",\n          this.RangeDataV14,\n          \"positionRange\",\n          this.RangeDataV14,\n          \"repeatCount\",\n          this.RangeDataV14,\n          \"repeatTime\",\n          this.RangeDataV14,\n          \"startTimeOffset\",\n          this.RangeDataV14,\n          \"channelMode\",\n          \"uint8\",\n          \"channelPriority\",\n          \"uint8\",\n          \"fileIterateMode\",\n          \"uint8\",\n          \"loopMode\",\n          \"uint8\",\n          \"musicPriority\",\n          \"uint8\",\n          \"playbackMode\",\n          \"uint8\",\n          \"positionMode\",\n          \"uint8\",\n          \"repeatTimeFrom\",\n          \"uint8\",\n        ];\n\n        this.ScriptRefDataV14 = [\"name\", Utils.getQWordReader(), \"fileName\", Utils.getFileNameReader()];\n\n        this.TriggerMarkerDataV14 = [\n          \"cue\",\n          Utils.getQWordReader(),\n          \"end\",\n          Utils.getQWordReader(),\n          \"time\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.TriggerKeyDataV14 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"triggerMarker\",\n          Utils.getArrayReader(this.TriggerMarkerDataV14),\n        ];\n\n        this.__root = this.ScriptFileDataV14 = [\n          \"musicCue\",\n          Utils.getQWordReader(),\n          \"reverbOverride\",\n          Utils.getQWordReader(),\n          \"audioSettings\",\n          Utils.getPointerReader(this.AudioSettingsDataV14),\n          \"handler\",\n          Utils.getArrayReader(this.HandlerDataV14),\n          \"metaSound\",\n          Utils.getArrayReader(this.MetaSoundDataV14),\n          \"scriptRef\",\n          Utils.getArrayReader(this.ScriptRefDataV14),\n          \"triggerKey\",\n          Utils.getArrayReader(this.TriggerKeyDataV14),\n          \"flags\",\n          \"uint32\",\n          \"soundPoolCount\",\n          \"uint32\",\n          \"fadeInTime\",\n          \"float32\",\n          \"soundPoolDelay\",\n          \"float32\",\n          \"volume\",\n          \"float32\",\n          \"musicCuePriority\",\n          \"uint8\",\n        ];\n      },\n\n      // => Version: 13\n      13: function () {\n        this.DspDataV13 = [\"type\", \"uint32\", \"flags\", \"uint32\", \"property\", Utils.getArrayReader(\"float32\")];\n\n        this.BussDynamicDataV13 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"volume\",\n          \"float32\",\n          \"dsp\",\n          Utils.getArrayReader(this.DspDataV13),\n        ];\n\n        this.BussDataV13 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"output\",\n          Utils.getQWordReader(),\n          \"dynamicData\",\n          Utils.getPointerReader(this.BussDynamicDataV13),\n        ];\n\n        this.EnvelopePointDataV13 = [\"offset\", \"float32\", \"value\", \"float32\"];\n\n        this.EnvelopeDataV13 = [\n          \"offsetParameter\",\n          Utils.getQWordReader(),\n          \"envelopePoint\",\n          Utils.getArrayReader(this.EnvelopePointDataV13),\n          \"offsetType\",\n          \"uint8\",\n        ];\n\n        this.RangeDataV13 = [\"max\", \"float32\", \"min\", \"float32\", \"min\", \"uint8\"];\n\n        this.RandomParamDataV13 = [\"time\", this.RangeDataV13, \"value\", this.RangeDataV13];\n\n        this.DynamicParamDataV13 = [\n          \"envelopeData\",\n          Utils.getPointerReader(this.EnvelopeDataV13),\n          \"randomParamData\",\n          Utils.getPointerReader(this.RandomParamDataV13),\n          \"value\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.AttenuationDataV13 = [\n          \"coneInsideAngle\",\n          \"float32\",\n          \"coneOutsideAngle\",\n          \"float32\",\n          \"coneOutsideVolume\",\n          \"float32\",\n          \"lowPass\",\n          this.DynamicParamDataV13,\n          \"pan3D\",\n          this.DynamicParamDataV13,\n          \"spread3D\",\n          this.DynamicParamDataV13,\n          \"volumeA\",\n          this.DynamicParamDataV13,\n          \"volumeB\",\n          this.DynamicParamDataV13,\n        ];\n\n        this.CategoryDynamicDataV13 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"volume\",\n          \"float32\",\n          \"nonFocusGain\",\n          \"float32\",\n          \"lowPass\",\n          \"float32\",\n          \"reverbDirect\",\n          \"float32\",\n          \"reverbRoom\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n        ];\n\n        this.CategoryDataV13 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"volumeGroupName\",\n          Utils.getQWordReader(),\n          \"outputBussName\",\n          Utils.getQWordReader(),\n          \"attenuation\",\n          Utils.getPointerReader(this.AttenuationDataV13),\n          \"dynamicData\",\n          Utils.getPointerReader(this.CategoryDynamicDataV13),\n          \"muteFadeTime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"maxAudible\",\n          \"uint32\",\n          \"maxAudibleBehavior\",\n          \"uint8\",\n        ];\n\n        this.ReverbDataV13 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"room\",\n          \"float32\",\n          \"roomHF\",\n          \"float32\",\n          \"roomLF\",\n          \"float32\",\n          \"decayTime\",\n          \"float32\",\n          \"decayHFRatio\",\n          \"float32\",\n          \"reflections\",\n          \"float32\",\n          \"reflectionsDelay\",\n          \"float32\",\n          \"reverb\",\n          \"float32\",\n          \"reverbDelay\",\n          \"float32\",\n          \"referenceHF\",\n          \"float32\",\n          \"referenceLF\",\n          \"float32\",\n          \"diffusion\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n        ];\n\n        this.SnapshotDataV13 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"blendInTime\",\n          \"float32\",\n          \"blendOutTime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"buss\",\n          Utils.getArrayReader(this.BussDynamicDataV13),\n          \"category\",\n          Utils.getArrayReader(this.CategoryDynamicDataV13),\n        ];\n\n        this.AudioSettingsDataV13 = [\n          \"defaultSnapshot\",\n          Utils.getQWordReader(),\n          \"effectsBuss\",\n          Utils.getQWordReader(),\n          \"distanceScale\",\n          \"float32\",\n          \"focusTransition\",\n          \"float32\",\n          \"buss\",\n          Utils.getArrayReader(this.BussDataV13),\n          \"category\",\n          Utils.getArrayReader(this.CategoryDataV13),\n          \"reverb\",\n          Utils.getArrayReader(this.ReverbDataV13),\n          \"snapshot\",\n          Utils.getArrayReader(this.SnapshotDataV13),\n          \"bankIndexFileName\",\n          Utils.getFileNameReader(),\n          \"bankScriptFileName\",\n          Utils.getFileNameReader(),\n          \"musicScriptFileName\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.HandlerDataV13 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"byteCode\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.FileNameDataV13 = [\n          \"language\",\n          Utils.getQWordReader(),\n          \"weight\",\n          \"float32\",\n          \"fileName\",\n          Utils.getFileNameReader(),\n          \"audioType\",\n          \"uint8\",\n        ];\n\n        this.MetaSoundDataV13 = [\n          \"category\",\n          Utils.getQWordReader(),\n          \"endCue\",\n          Utils.getQWordReader(),\n          \"name\",\n          Utils.getQWordReader(),\n          \"offsetBone\",\n          Utils.getQWordReader(),\n          \"playlistId\",\n          Utils.getQWordReader(),\n          \"dsp\",\n          Utils.getArrayReader(this.DspDataV13),\n          \"attenuation\",\n          Utils.getPointerReader(this.AttenuationDataV13),\n          \"fileName\",\n          Utils.getArrayReader(this.FileNameDataV13),\n          \"endCueOffset\",\n          \"float32\",\n          \"fadeInTime\",\n          \"float32\",\n          \"fadeOutTime\",\n          \"float32\",\n          \"positionOffset\",\n          [\"[]\", \"float32\", 3],\n          \"flags\",\n          \"uint32\",\n          \"loopCount\",\n          \"uint32\",\n          \"depth\",\n          this.DynamicParamDataV13,\n          \"pan\",\n          this.DynamicParamDataV13,\n          \"pitch\",\n          this.DynamicParamDataV13,\n          \"pitchMS\",\n          this.DynamicParamDataV13,\n          \"volume\",\n          this.DynamicParamDataV13,\n          \"volumeMS\",\n          this.DynamicParamDataV13,\n          \"initialDelay\",\n          this.RangeDataV13,\n          \"playLength\",\n          this.RangeDataV13,\n          \"positionOffsetAngle\",\n          this.RangeDataV13,\n          \"positionRange\",\n          this.RangeDataV13,\n          \"repeatCount\",\n          this.RangeDataV13,\n          \"repeatTime\",\n          this.RangeDataV13,\n          \"startTimeOffset\",\n          this.RangeDataV13,\n          \"channelMode\",\n          \"uint8\",\n          \"channelPriority\",\n          \"uint8\",\n          \"fileIterateMode\",\n          \"uint8\",\n          \"loopMode\",\n          \"uint8\",\n          \"musicPriority\",\n          \"uint8\",\n          \"playbackMode\",\n          \"uint8\",\n          \"positionMode\",\n          \"uint8\",\n          \"repeatTimeFrom\",\n          \"uint8\",\n        ];\n\n        this.ScriptRefDataV13 = [\"name\", Utils.getQWordReader(), \"fileName\", Utils.getFileNameReader()];\n\n        this.TriggerMarkerDataV13 = [\n          \"cue\",\n          Utils.getQWordReader(),\n          \"end\",\n          Utils.getQWordReader(),\n          \"time\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.TriggerKeyDataV13 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"triggerMarker\",\n          Utils.getArrayReader(this.TriggerMarkerDataV13),\n        ];\n\n        this.__root = this.ScriptFileDataV13 = [\n          \"musicCue\",\n          Utils.getQWordReader(),\n          \"reverbOverride\",\n          Utils.getQWordReader(),\n          \"audioSettings\",\n          Utils.getPointerReader(this.AudioSettingsDataV13),\n          \"handler\",\n          Utils.getArrayReader(this.HandlerDataV13),\n          \"metaSound\",\n          Utils.getArrayReader(this.MetaSoundDataV13),\n          \"scriptRef\",\n          Utils.getArrayReader(this.ScriptRefDataV13),\n          \"triggerKey\",\n          Utils.getArrayReader(this.TriggerKeyDataV13),\n          \"flags\",\n          \"uint32\",\n          \"soundPoolCount\",\n          \"uint32\",\n          \"fadeInTime\",\n          \"float32\",\n          \"soundPoolDelay\",\n          \"float32\",\n          \"volume\",\n          \"float32\",\n          \"musicCuePriority\",\n          \"uint8\",\n        ];\n      },\n\n      // => Version: 12, ReferencedFunction: 0xE20F20\n      12: function () {\n        this.DspDataV12 = [\"type\", \"uint32\", \"flags\", \"uint32\", \"property\", Utils.getArrayReader(\"float32\")];\n\n        this.BussDynamicDataV12 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"volume\",\n          \"float32\",\n          \"dsp\",\n          Utils.getArrayReader(this.DspDataV12),\n        ];\n\n        this.BussDataV12 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"output\",\n          Utils.getQWordReader(),\n          \"dynamicData\",\n          Utils.getPointerReader(this.BussDynamicDataV12),\n        ];\n\n        this.EnvelopePointDataV12 = [\"offset\", \"float32\", \"value\", \"float32\"];\n\n        this.EnvelopeDataV12 = [\n          \"offsetParameter\",\n          Utils.getQWordReader(),\n          \"envelopePoint\",\n          Utils.getArrayReader(this.EnvelopePointDataV12),\n          \"offsetType\",\n          \"uint8\",\n        ];\n\n        this.RangeDataV12 = [\"max\", \"float32\", \"min\", \"float32\", \"min\", \"uint8\"];\n\n        this.RandomParamDataV12 = [\"time\", this.RangeDataV12, \"value\", this.RangeDataV12];\n\n        this.DynamicParamDataV12 = [\n          \"envelopeData\",\n          Utils.getPointerReader(this.EnvelopeDataV12),\n          \"randomParamData\",\n          Utils.getPointerReader(this.RandomParamDataV12),\n          \"value\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.AttenuationDataV12 = [\n          \"coneInsideAngle\",\n          \"float32\",\n          \"coneOutsideAngle\",\n          \"float32\",\n          \"coneOutsideVolume\",\n          \"float32\",\n          \"lowPass\",\n          this.DynamicParamDataV12,\n          \"pan3D\",\n          this.DynamicParamDataV12,\n          \"spread3D\",\n          this.DynamicParamDataV12,\n          \"volumeA\",\n          this.DynamicParamDataV12,\n          \"volumeB\",\n          this.DynamicParamDataV12,\n        ];\n\n        this.CategoryDynamicDataV12 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"volume\",\n          \"float32\",\n          \"nonFocusGain\",\n          \"float32\",\n          \"lowPass\",\n          \"float32\",\n          \"reverbDirect\",\n          \"float32\",\n          \"reverbRoom\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n        ];\n\n        this.CategoryDataV12 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"volumeGroupName\",\n          Utils.getQWordReader(),\n          \"outputBussName\",\n          Utils.getQWordReader(),\n          \"attenuation\",\n          Utils.getPointerReader(this.AttenuationDataV12),\n          \"dynamicData\",\n          Utils.getPointerReader(this.CategoryDynamicDataV12),\n          \"muteFadeTime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"maxAudible\",\n          \"uint32\",\n          \"maxAudibleBehavior\",\n          \"uint8\",\n        ];\n\n        this.ReverbDataV12 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"room\",\n          \"float32\",\n          \"roomHF\",\n          \"float32\",\n          \"roomLF\",\n          \"float32\",\n          \"decayTime\",\n          \"float32\",\n          \"decayHFRatio\",\n          \"float32\",\n          \"reflections\",\n          \"float32\",\n          \"reflectionsDelay\",\n          \"float32\",\n          \"reverb\",\n          \"float32\",\n          \"reverbDelay\",\n          \"float32\",\n          \"referenceHF\",\n          \"float32\",\n          \"referenceLF\",\n          \"float32\",\n          \"diffusion\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n        ];\n\n        this.SnapshotDataV12 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"blendInTime\",\n          \"float32\",\n          \"blendOutTime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"buss\",\n          Utils.getArrayReader(this.BussDynamicDataV12),\n          \"category\",\n          Utils.getArrayReader(this.CategoryDynamicDataV12),\n        ];\n\n        this.AudioSettingsDataV12 = [\n          \"defaultSnapshot\",\n          Utils.getQWordReader(),\n          \"effectsBuss\",\n          Utils.getQWordReader(),\n          \"distanceScale\",\n          \"float32\",\n          \"focusTransition\",\n          \"float32\",\n          \"buss\",\n          Utils.getArrayReader(this.BussDataV12),\n          \"category\",\n          Utils.getArrayReader(this.CategoryDataV12),\n          \"reverb\",\n          Utils.getArrayReader(this.ReverbDataV12),\n          \"snapshot\",\n          Utils.getArrayReader(this.SnapshotDataV12),\n          \"bankIndexFileName\",\n          Utils.getFileNameReader(),\n          \"bankScriptFileName\",\n          Utils.getFileNameReader(),\n          \"musicScriptFileName\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.HandlerDataV12 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"byteCode\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.FileNameDataV12 = [\n          \"language\",\n          Utils.getQWordReader(),\n          \"weight\",\n          \"float32\",\n          \"fileName\",\n          Utils.getFileNameReader(),\n          \"audioType\",\n          \"uint8\",\n        ];\n\n        this.MetaSoundDataV12 = [\n          \"category\",\n          Utils.getQWordReader(),\n          \"endCue\",\n          Utils.getQWordReader(),\n          \"name\",\n          Utils.getQWordReader(),\n          \"offsetBone\",\n          Utils.getQWordReader(),\n          \"playlistId\",\n          Utils.getQWordReader(),\n          \"dsp\",\n          Utils.getArrayReader(this.DspDataV12),\n          \"attenuation\",\n          Utils.getPointerReader(this.AttenuationDataV12),\n          \"fileName\",\n          Utils.getArrayReader(this.FileNameDataV12),\n          \"endCueOffset\",\n          \"float32\",\n          \"fadeInTime\",\n          \"float32\",\n          \"fadeOutTime\",\n          \"float32\",\n          \"positionOffset\",\n          [\"[]\", \"float32\", 3],\n          \"flags\",\n          \"uint32\",\n          \"loopCount\",\n          \"uint32\",\n          \"depth\",\n          this.DynamicParamDataV12,\n          \"pan\",\n          this.DynamicParamDataV12,\n          \"pitch\",\n          this.DynamicParamDataV12,\n          \"pitchMS\",\n          this.DynamicParamDataV12,\n          \"volume\",\n          this.DynamicParamDataV12,\n          \"volumeMS\",\n          this.DynamicParamDataV12,\n          \"initialDelay\",\n          this.RangeDataV12,\n          \"playLength\",\n          this.RangeDataV12,\n          \"positionOffsetAngle\",\n          this.RangeDataV12,\n          \"positionRange\",\n          this.RangeDataV12,\n          \"repeatCount\",\n          this.RangeDataV12,\n          \"repeatTime\",\n          this.RangeDataV12,\n          \"startTimeOffset\",\n          this.RangeDataV12,\n          \"channelMode\",\n          \"uint8\",\n          \"channelPriority\",\n          \"uint8\",\n          \"fileIterateMode\",\n          \"uint8\",\n          \"loopMode\",\n          \"uint8\",\n          \"musicPriority\",\n          \"uint8\",\n          \"playbackMode\",\n          \"uint8\",\n          \"positionMode\",\n          \"uint8\",\n          \"repeatTimeFrom\",\n          \"uint8\",\n        ];\n\n        this.ScriptRefDataV12 = [\"name\", Utils.getQWordReader(), \"fileName\", Utils.getFileNameReader()];\n\n        this.TriggerMarkerDataV12 = [\n          \"cue\",\n          Utils.getQWordReader(),\n          \"end\",\n          Utils.getQWordReader(),\n          \"time\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.TriggerKeyDataV12 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"triggerMarker\",\n          Utils.getArrayReader(this.TriggerMarkerDataV12),\n        ];\n\n        this.__root = this.ScriptFileDataV12 = [\n          \"musicCue\",\n          Utils.getQWordReader(),\n          \"audioSettings\",\n          Utils.getPointerReader(this.AudioSettingsDataV12),\n          \"handler\",\n          Utils.getArrayReader(this.HandlerDataV12),\n          \"metaSound\",\n          Utils.getArrayReader(this.MetaSoundDataV12),\n          \"scriptRef\",\n          Utils.getArrayReader(this.ScriptRefDataV12),\n          \"triggerKey\",\n          Utils.getArrayReader(this.TriggerKeyDataV12),\n          \"flags\",\n          \"uint32\",\n          \"soundPoolCount\",\n          \"uint32\",\n          \"fadeInTime\",\n          \"float32\",\n          \"soundPoolDelay\",\n          \"float32\",\n          \"volume\",\n          \"float32\",\n          \"musicCuePriority\",\n          \"uint8\",\n        ];\n      },\n\n      // => Version: 11\n      11: function () {\n        this.DspDataV11 = [\"type\", \"uint32\", \"flags\", \"uint32\", \"property\", Utils.getArrayReader(\"float32\")];\n\n        this.BussDynamicDataV11 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"volume\",\n          \"float32\",\n          \"dsp\",\n          Utils.getArrayReader(this.DspDataV11),\n        ];\n\n        this.BussDataV11 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"output\",\n          Utils.getQWordReader(),\n          \"dynamicData\",\n          Utils.getPointerReader(this.BussDynamicDataV11),\n        ];\n\n        this.EnvelopePointDataV11 = [\"offset\", \"float32\", \"value\", \"float32\"];\n\n        this.EnvelopeDataV11 = [\n          \"offsetParameter\",\n          Utils.getQWordReader(),\n          \"envelopePoint\",\n          Utils.getArrayReader(this.EnvelopePointDataV11),\n          \"offsetType\",\n          \"uint8\",\n        ];\n\n        this.RangeDataV11 = [\"max\", \"float32\", \"min\", \"float32\", \"min\", \"uint8\"];\n\n        this.RandomParamDataV11 = [\"time\", this.RangeDataV11, \"value\", this.RangeDataV11];\n\n        this.DynamicParamDataV11 = [\n          \"envelopeData\",\n          Utils.getPointerReader(this.EnvelopeDataV11),\n          \"randomParamData\",\n          Utils.getPointerReader(this.RandomParamDataV11),\n          \"value\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.AttenuationDataV11 = [\n          \"coneInsideAngle\",\n          \"float32\",\n          \"coneOutsideAngle\",\n          \"float32\",\n          \"coneOutsideVolume\",\n          \"float32\",\n          \"lowPass\",\n          this.DynamicParamDataV11,\n          \"pan3D\",\n          this.DynamicParamDataV11,\n          \"spread3D\",\n          this.DynamicParamDataV11,\n          \"volumeA\",\n          this.DynamicParamDataV11,\n          \"volumeB\",\n          this.DynamicParamDataV11,\n        ];\n\n        this.CategoryDynamicDataV11 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"volume\",\n          \"float32\",\n          \"nonFocusGain\",\n          \"float32\",\n          \"lowPass\",\n          \"float32\",\n          \"reverbDirect\",\n          \"float32\",\n          \"reverbRoom\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n        ];\n\n        this.CategoryDataV11 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"volumeGroupName\",\n          Utils.getQWordReader(),\n          \"outputBussName\",\n          Utils.getQWordReader(),\n          \"attenuation\",\n          Utils.getPointerReader(this.AttenuationDataV11),\n          \"dynamicData\",\n          Utils.getPointerReader(this.CategoryDynamicDataV11),\n          \"muteFadeTime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"maxAudible\",\n          \"uint32\",\n          \"maxAudibleBehavior\",\n          \"uint8\",\n        ];\n\n        this.ReverbDataV11 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"room\",\n          \"float32\",\n          \"roomHF\",\n          \"float32\",\n          \"roomLF\",\n          \"float32\",\n          \"decayTime\",\n          \"float32\",\n          \"decayHFRatio\",\n          \"float32\",\n          \"reflections\",\n          \"float32\",\n          \"reflectionsDelay\",\n          \"float32\",\n          \"reverb\",\n          \"float32\",\n          \"reverbDelay\",\n          \"float32\",\n          \"referenceHF\",\n          \"float32\",\n          \"referenceLF\",\n          \"float32\",\n          \"diffusion\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n        ];\n\n        this.SnapshotDataV11 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"blendInTime\",\n          \"float32\",\n          \"blendOutTime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"buss\",\n          Utils.getArrayReader(this.BussDynamicDataV11),\n          \"category\",\n          Utils.getArrayReader(this.CategoryDynamicDataV11),\n        ];\n\n        this.AudioSettingsDataV11 = [\n          \"defaultSnapshot\",\n          Utils.getQWordReader(),\n          \"effectsBuss\",\n          Utils.getQWordReader(),\n          \"distanceScale\",\n          \"float32\",\n          \"focusTransition\",\n          \"float32\",\n          \"buss\",\n          Utils.getArrayReader(this.BussDataV11),\n          \"category\",\n          Utils.getArrayReader(this.CategoryDataV11),\n          \"reverb\",\n          Utils.getArrayReader(this.ReverbDataV11),\n          \"snapshot\",\n          Utils.getArrayReader(this.SnapshotDataV11),\n          \"bankIndexFileName\",\n          Utils.getFileNameReader(),\n          \"bankScriptFileName\",\n          Utils.getFileNameReader(),\n          \"musicScriptFileName\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.HandlerDataV11 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"byteCode\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.FileNameDataV11 = [\n          \"language\",\n          Utils.getQWordReader(),\n          \"weight\",\n          \"float32\",\n          \"fileName\",\n          Utils.getFileNameReader(),\n          \"audioType\",\n          \"uint8\",\n        ];\n\n        this.MetaSoundDataV11 = [\n          \"category\",\n          Utils.getQWordReader(),\n          \"endCue\",\n          Utils.getQWordReader(),\n          \"name\",\n          Utils.getQWordReader(),\n          \"offsetBone\",\n          Utils.getQWordReader(),\n          \"playlistId\",\n          Utils.getQWordReader(),\n          \"dsp\",\n          Utils.getArrayReader(this.DspDataV11),\n          \"attenuation\",\n          Utils.getPointerReader(this.AttenuationDataV11),\n          \"fileName\",\n          Utils.getArrayReader(this.FileNameDataV11),\n          \"endCueOffset\",\n          \"float32\",\n          \"fadeInTime\",\n          \"float32\",\n          \"fadeOutTime\",\n          \"float32\",\n          \"positionOffset\",\n          [\"[]\", \"float32\", 3],\n          \"flags\",\n          \"uint32\",\n          \"loopCount\",\n          \"uint32\",\n          \"depth\",\n          this.DynamicParamDataV11,\n          \"pan\",\n          this.DynamicParamDataV11,\n          \"pitch\",\n          this.DynamicParamDataV11,\n          \"pitchMS\",\n          this.DynamicParamDataV11,\n          \"volume\",\n          this.DynamicParamDataV11,\n          \"volumeMS\",\n          this.DynamicParamDataV11,\n          \"initialDelay\",\n          this.RangeDataV11,\n          \"playLength\",\n          this.RangeDataV11,\n          \"positionOffsetAngle\",\n          this.RangeDataV11,\n          \"positionRange\",\n          this.RangeDataV11,\n          \"repeatCount\",\n          this.RangeDataV11,\n          \"repeatTime\",\n          this.RangeDataV11,\n          \"startTimeOffset\",\n          this.RangeDataV11,\n          \"channelMode\",\n          \"uint8\",\n          \"channelPriority\",\n          \"uint8\",\n          \"fileIterateMode\",\n          \"uint8\",\n          \"loopMode\",\n          \"uint8\",\n          \"musicPriority\",\n          \"uint8\",\n          \"playbackMode\",\n          \"uint8\",\n          \"positionMode\",\n          \"uint8\",\n          \"repeatTimeFrom\",\n          \"uint8\",\n        ];\n\n        this.ScriptRefDataV11 = [\"name\", Utils.getQWordReader(), \"fileName\", Utils.getFileNameReader()];\n\n        this.TriggerMarkerDataV11 = [\n          \"cue\",\n          Utils.getQWordReader(),\n          \"end\",\n          Utils.getQWordReader(),\n          \"time\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.TriggerKeyDataV11 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"triggerMarker\",\n          Utils.getArrayReader(this.TriggerMarkerDataV11),\n        ];\n\n        this.__root = this.ScriptFileDataV11 = [\n          \"musicCue\",\n          Utils.getQWordReader(),\n          \"audioSettings\",\n          Utils.getPointerReader(this.AudioSettingsDataV11),\n          \"handler\",\n          Utils.getArrayReader(this.HandlerDataV11),\n          \"metaSound\",\n          Utils.getArrayReader(this.MetaSoundDataV11),\n          \"scriptRef\",\n          Utils.getArrayReader(this.ScriptRefDataV11),\n          \"triggerKey\",\n          Utils.getArrayReader(this.TriggerKeyDataV11),\n          \"flags\",\n          \"uint32\",\n          \"soundPoolCount\",\n          \"uint32\",\n          \"fadeInTime\",\n          \"float32\",\n          \"soundPoolDelay\",\n          \"float32\",\n          \"volume\",\n          \"float32\",\n        ];\n      },\n\n      // => Version: 10\n      10: function () {\n        this.DspDataV10 = [\"type\", \"uint32\", \"flags\", \"uint32\", \"property\", Utils.getArrayReader(\"float32\")];\n\n        this.BussDynamicDataV10 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"volume\",\n          \"float32\",\n          \"dsp\",\n          Utils.getArrayReader(this.DspDataV10),\n        ];\n\n        this.BussDataV10 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"output\",\n          Utils.getQWordReader(),\n          \"dynamicData\",\n          Utils.getPointerReader(this.BussDynamicDataV10),\n        ];\n\n        this.EnvelopePointDataV10 = [\"offset\", \"float32\", \"value\", \"float32\"];\n\n        this.EnvelopeDataV10 = [\n          \"offsetParameter\",\n          Utils.getQWordReader(),\n          \"envelopePoint\",\n          Utils.getArrayReader(this.EnvelopePointDataV10),\n          \"offsetType\",\n          \"uint8\",\n        ];\n\n        this.RangeDataV10 = [\"max\", \"float32\", \"min\", \"float32\", \"min\", \"uint8\"];\n\n        this.RandomParamDataV10 = [\"time\", this.RangeDataV10, \"value\", this.RangeDataV10];\n\n        this.DynamicParamDataV10 = [\n          \"envelopeData\",\n          Utils.getPointerReader(this.EnvelopeDataV10),\n          \"randomParamData\",\n          Utils.getPointerReader(this.RandomParamDataV10),\n          \"value\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.AttenuationDataV10 = [\n          \"coneInsideAngle\",\n          \"float32\",\n          \"coneOutsideAngle\",\n          \"float32\",\n          \"coneOutsideVolume\",\n          \"float32\",\n          \"lowPass\",\n          this.DynamicParamDataV10,\n          \"pan3D\",\n          this.DynamicParamDataV10,\n          \"spread3D\",\n          this.DynamicParamDataV10,\n          \"volumeA\",\n          this.DynamicParamDataV10,\n          \"volumeB\",\n          this.DynamicParamDataV10,\n        ];\n\n        this.CategoryDynamicDataV10 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"volume\",\n          \"float32\",\n          \"nonFocusGain\",\n          \"float32\",\n          \"lowPass\",\n          \"float32\",\n          \"reverbDirect\",\n          \"float32\",\n          \"reverbRoom\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n        ];\n\n        this.CategoryDataV10 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"volumeGroupName\",\n          Utils.getQWordReader(),\n          \"outputBussName\",\n          Utils.getQWordReader(),\n          \"attenuation\",\n          Utils.getPointerReader(this.AttenuationDataV10),\n          \"dynamicData\",\n          Utils.getPointerReader(this.CategoryDynamicDataV10),\n          \"muteFadeTime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"maxAudible\",\n          \"uint32\",\n          \"maxAudibleBehavior\",\n          \"uint8\",\n        ];\n\n        this.ReverbDataV10 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"room\",\n          \"float32\",\n          \"roomHF\",\n          \"float32\",\n          \"roomLF\",\n          \"float32\",\n          \"decayTime\",\n          \"float32\",\n          \"decayHFRatio\",\n          \"float32\",\n          \"reflections\",\n          \"float32\",\n          \"reflectionsDelay\",\n          \"float32\",\n          \"reverb\",\n          \"float32\",\n          \"reverbDelay\",\n          \"float32\",\n          \"referenceHF\",\n          \"float32\",\n          \"referenceLF\",\n          \"float32\",\n          \"diffusion\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n        ];\n\n        this.SnapshotDataV10 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"blendInTime\",\n          \"float32\",\n          \"blendOutTime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"buss\",\n          Utils.getArrayReader(this.BussDynamicDataV10),\n          \"category\",\n          Utils.getArrayReader(this.CategoryDynamicDataV10),\n        ];\n\n        this.AudioSettingsDataV10 = [\n          \"defaultSnapshot\",\n          Utils.getQWordReader(),\n          \"effectsBuss\",\n          Utils.getQWordReader(),\n          \"distanceScale\",\n          \"float32\",\n          \"focusTransition\",\n          \"float32\",\n          \"buss\",\n          Utils.getArrayReader(this.BussDataV10),\n          \"category\",\n          Utils.getArrayReader(this.CategoryDataV10),\n          \"reverb\",\n          Utils.getArrayReader(this.ReverbDataV10),\n          \"snapshot\",\n          Utils.getArrayReader(this.SnapshotDataV10),\n          \"bankIndexFileName\",\n          Utils.getFileNameReader(),\n          \"bankScriptFileName\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.HandlerDataV10 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"byteCode\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.FileNameDataV10 = [\n          \"language\",\n          Utils.getQWordReader(),\n          \"weight\",\n          \"float32\",\n          \"fileName\",\n          Utils.getFileNameReader(),\n          \"audioType\",\n          \"uint8\",\n        ];\n\n        this.MetaSoundDataV10 = [\n          \"category\",\n          Utils.getQWordReader(),\n          \"endCue\",\n          Utils.getQWordReader(),\n          \"name\",\n          Utils.getQWordReader(),\n          \"offsetBone\",\n          Utils.getQWordReader(),\n          \"playlistId\",\n          Utils.getQWordReader(),\n          \"dsp\",\n          Utils.getArrayReader(this.DspDataV10),\n          \"attenuation\",\n          Utils.getPointerReader(this.AttenuationDataV10),\n          \"fileName\",\n          Utils.getArrayReader(this.FileNameDataV10),\n          \"endCueOffset\",\n          \"float32\",\n          \"fadeInTime\",\n          \"float32\",\n          \"fadeOutTime\",\n          \"float32\",\n          \"positionOffset\",\n          [\"[]\", \"float32\", 3],\n          \"flags\",\n          \"uint32\",\n          \"loopCount\",\n          \"uint32\",\n          \"depth\",\n          this.DynamicParamDataV10,\n          \"pan\",\n          this.DynamicParamDataV10,\n          \"pitch\",\n          this.DynamicParamDataV10,\n          \"pitchMS\",\n          this.DynamicParamDataV10,\n          \"volume\",\n          this.DynamicParamDataV10,\n          \"volumeMS\",\n          this.DynamicParamDataV10,\n          \"initialDelay\",\n          this.RangeDataV10,\n          \"playLength\",\n          this.RangeDataV10,\n          \"positionOffsetAngle\",\n          this.RangeDataV10,\n          \"positionRange\",\n          this.RangeDataV10,\n          \"repeatCount\",\n          this.RangeDataV10,\n          \"repeatTime\",\n          this.RangeDataV10,\n          \"startTimeOffset\",\n          this.RangeDataV10,\n          \"channelMode\",\n          \"uint8\",\n          \"channelPriority\",\n          \"uint8\",\n          \"fileIterateMode\",\n          \"uint8\",\n          \"loopMode\",\n          \"uint8\",\n          \"musicPriority\",\n          \"uint8\",\n          \"playbackMode\",\n          \"uint8\",\n          \"positionMode\",\n          \"uint8\",\n          \"repeatTimeFrom\",\n          \"uint8\",\n        ];\n\n        this.ScriptRefDataV10 = [\"name\", Utils.getQWordReader(), \"fileName\", Utils.getFileNameReader()];\n\n        this.TriggerMarkerDataV10 = [\n          \"cue\",\n          Utils.getQWordReader(),\n          \"end\",\n          Utils.getQWordReader(),\n          \"time\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.TriggerKeyDataV10 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"triggerMarker\",\n          Utils.getArrayReader(this.TriggerMarkerDataV10),\n        ];\n\n        this.__root = this.ScriptFileDataV10 = [\n          \"musicCue\",\n          Utils.getQWordReader(),\n          \"audioSettings\",\n          Utils.getPointerReader(this.AudioSettingsDataV10),\n          \"handler\",\n          Utils.getArrayReader(this.HandlerDataV10),\n          \"metaSound\",\n          Utils.getArrayReader(this.MetaSoundDataV10),\n          \"scriptRef\",\n          Utils.getArrayReader(this.ScriptRefDataV10),\n          \"triggerKey\",\n          Utils.getArrayReader(this.TriggerKeyDataV10),\n          \"flags\",\n          \"uint32\",\n          \"soundPoolCount\",\n          \"uint32\",\n          \"fadeInTime\",\n          \"float32\",\n          \"soundPoolDelay\",\n          \"float32\",\n          \"volume\",\n          \"float32\",\n        ];\n      },\n\n      // => Version: 9\n      9: function () {\n        this.DspDataV9 = [\"type\", \"uint32\", \"flags\", \"uint32\", \"property\", Utils.getArrayReader(\"float32\")];\n\n        this.BussDynamicDataV9 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"volume\",\n          \"float32\",\n          \"dsp\",\n          Utils.getArrayReader(this.DspDataV9),\n        ];\n\n        this.BussDataV9 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"output\",\n          Utils.getQWordReader(),\n          \"dynamicData\",\n          Utils.getPointerReader(this.BussDynamicDataV9),\n        ];\n\n        this.EnvelopePointDataV9 = [\"offset\", \"float32\", \"value\", \"float32\"];\n\n        this.EnvelopeDataV9 = [\n          \"offsetParameter\",\n          Utils.getQWordReader(),\n          \"envelopePoint\",\n          Utils.getArrayReader(this.EnvelopePointDataV9),\n          \"offsetType\",\n          \"uint8\",\n        ];\n\n        this.RangeDataV9 = [\"max\", \"float32\", \"min\", \"float32\", \"min\", \"uint8\"];\n\n        this.RandomParamDataV9 = [\"time\", this.RangeDataV9, \"value\", this.RangeDataV9];\n\n        this.DynamicParamDataV9 = [\n          \"envelopeData\",\n          Utils.getPointerReader(this.EnvelopeDataV9),\n          \"randomParamData\",\n          Utils.getPointerReader(this.RandomParamDataV9),\n          \"value\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.AttenuationDataV9 = [\n          \"coneInsideAngle\",\n          \"float32\",\n          \"coneOutsideAngle\",\n          \"float32\",\n          \"coneOutsideVolume\",\n          \"float32\",\n          \"lowPass\",\n          this.DynamicParamDataV9,\n          \"pan3D\",\n          this.DynamicParamDataV9,\n          \"spread3D\",\n          this.DynamicParamDataV9,\n          \"volumeA\",\n          this.DynamicParamDataV9,\n          \"volumeB\",\n          this.DynamicParamDataV9,\n        ];\n\n        this.CategoryDynamicDataV9 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"volume\",\n          \"float32\",\n          \"nonFocusGain\",\n          \"float32\",\n          \"lowPass\",\n          \"float32\",\n          \"reverbDirect\",\n          \"float32\",\n          \"reverbRoom\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n        ];\n\n        this.CategoryDataV9 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"volumeGroupName\",\n          Utils.getQWordReader(),\n          \"outputBussName\",\n          Utils.getQWordReader(),\n          \"soundPoolCategory\",\n          Utils.getQWordReader(),\n          \"attenuation\",\n          Utils.getPointerReader(this.AttenuationDataV9),\n          \"dynamicData\",\n          Utils.getPointerReader(this.CategoryDynamicDataV9),\n          \"muteFadeTime\",\n          \"float32\",\n          \"soundPoolDelay\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"maxAudible\",\n          \"uint32\",\n          \"soundPoolCount\",\n          \"uint32\",\n          \"maxAudibleBehavior\",\n          \"uint8\",\n          \"soundPoolCountBehavior\",\n          \"uint8\",\n          \"soundPoolMode\",\n          \"uint8\",\n        ];\n\n        this.ReverbDataV9 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"room\",\n          \"float32\",\n          \"roomHF\",\n          \"float32\",\n          \"roomLF\",\n          \"float32\",\n          \"decayTime\",\n          \"float32\",\n          \"decayHFRatio\",\n          \"float32\",\n          \"reflections\",\n          \"float32\",\n          \"reflectionsDelay\",\n          \"float32\",\n          \"reverb\",\n          \"float32\",\n          \"reverbDelay\",\n          \"float32\",\n          \"referenceHF\",\n          \"float32\",\n          \"referenceLF\",\n          \"float32\",\n          \"diffusion\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n        ];\n\n        this.SnapshotDataV9 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"blendInTime\",\n          \"float32\",\n          \"blendOutTime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"buss\",\n          Utils.getArrayReader(this.BussDynamicDataV9),\n          \"category\",\n          Utils.getArrayReader(this.CategoryDynamicDataV9),\n        ];\n\n        this.AudioSettingsDataV9 = [\n          \"defaultSnapshot\",\n          Utils.getQWordReader(),\n          \"effectsBuss\",\n          Utils.getQWordReader(),\n          \"distanceScale\",\n          \"float32\",\n          \"focusTransition\",\n          \"float32\",\n          \"buss\",\n          Utils.getArrayReader(this.BussDataV9),\n          \"category\",\n          Utils.getArrayReader(this.CategoryDataV9),\n          \"reverb\",\n          Utils.getArrayReader(this.ReverbDataV9),\n          \"snapshot\",\n          Utils.getArrayReader(this.SnapshotDataV9),\n          \"bankIndexFileName\",\n          Utils.getFileNameReader(),\n          \"bankScriptFileName\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.HandlerDataV9 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"byteCode\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.FileNameDataV9 = [\n          \"language\",\n          Utils.getQWordReader(),\n          \"weight\",\n          \"float32\",\n          \"fileName\",\n          Utils.getFileNameReader(),\n          \"audioType\",\n          \"uint8\",\n        ];\n\n        this.MetaSoundDataV9 = [\n          \"category\",\n          Utils.getQWordReader(),\n          \"endCue\",\n          Utils.getQWordReader(),\n          \"name\",\n          Utils.getQWordReader(),\n          \"offsetBone\",\n          Utils.getQWordReader(),\n          \"playlistId\",\n          Utils.getQWordReader(),\n          \"dsp\",\n          Utils.getArrayReader(this.DspDataV9),\n          \"attenuation\",\n          Utils.getPointerReader(this.AttenuationDataV9),\n          \"fileName\",\n          Utils.getArrayReader(this.FileNameDataV9),\n          \"endCueOffset\",\n          \"float32\",\n          \"fadeInTime\",\n          \"float32\",\n          \"fadeOutTime\",\n          \"float32\",\n          \"positionOffset\",\n          [\"[]\", \"float32\", 3],\n          \"flags\",\n          \"uint32\",\n          \"loopCount\",\n          \"uint32\",\n          \"depth\",\n          this.DynamicParamDataV9,\n          \"pan\",\n          this.DynamicParamDataV9,\n          \"pitch\",\n          this.DynamicParamDataV9,\n          \"pitchMS\",\n          this.DynamicParamDataV9,\n          \"volume\",\n          this.DynamicParamDataV9,\n          \"volumeMS\",\n          this.DynamicParamDataV9,\n          \"initialDelay\",\n          this.RangeDataV9,\n          \"playLength\",\n          this.RangeDataV9,\n          \"positionOffsetAngle\",\n          this.RangeDataV9,\n          \"positionRange\",\n          this.RangeDataV9,\n          \"repeatCount\",\n          this.RangeDataV9,\n          \"repeatTime\",\n          this.RangeDataV9,\n          \"startTimeOffset\",\n          this.RangeDataV9,\n          \"channelMode\",\n          \"uint8\",\n          \"channelPriority\",\n          \"uint8\",\n          \"fileIterateMode\",\n          \"uint8\",\n          \"loopMode\",\n          \"uint8\",\n          \"musicPriority\",\n          \"uint8\",\n          \"playbackMode\",\n          \"uint8\",\n          \"positionMode\",\n          \"uint8\",\n          \"repeatTimeFrom\",\n          \"uint8\",\n        ];\n\n        this.ScriptRefDataV9 = [\"name\", Utils.getQWordReader(), \"fileName\", Utils.getFileNameReader()];\n\n        this.TriggerMarkerDataV9 = [\n          \"cue\",\n          Utils.getQWordReader(),\n          \"end\",\n          Utils.getQWordReader(),\n          \"time\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.TriggerKeyDataV9 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"triggerMarker\",\n          Utils.getArrayReader(this.TriggerMarkerDataV9),\n        ];\n\n        this.__root = this.ScriptFileDataV9 = [\n          \"musicCue\",\n          Utils.getQWordReader(),\n          \"endCue\",\n          Utils.getQWordReader(),\n          \"audioSettings\",\n          Utils.getPointerReader(this.AudioSettingsDataV9),\n          \"handler\",\n          Utils.getArrayReader(this.HandlerDataV9),\n          \"metaSound\",\n          Utils.getArrayReader(this.MetaSoundDataV9),\n          \"scriptRef\",\n          Utils.getArrayReader(this.ScriptRefDataV9),\n          \"triggerKey\",\n          Utils.getArrayReader(this.TriggerKeyDataV9),\n          \"flags\",\n          \"uint32\",\n          \"fadeInTime\",\n          \"float32\",\n          \"volume\",\n          \"float32\",\n        ];\n      },\n\n      // => Version: 8\n      8: function () {\n        this.DspDataV8 = [\"type\", \"uint32\", \"flags\", \"uint32\", \"property\", Utils.getArrayReader(\"float32\")];\n\n        this.BussDynamicDataV8 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"volume\",\n          \"float32\",\n          \"dsp\",\n          Utils.getArrayReader(this.DspDataV8),\n        ];\n\n        this.BussDataV8 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"output\",\n          Utils.getQWordReader(),\n          \"dynamicData\",\n          Utils.getPointerReader(this.BussDynamicDataV8),\n        ];\n\n        this.EnvelopePointDataV8 = [\"offset\", \"float32\", \"value\", \"float32\"];\n\n        this.EnvelopeDataV8 = [\n          \"offsetParameter\",\n          Utils.getQWordReader(),\n          \"envelopePoint\",\n          Utils.getArrayReader(this.EnvelopePointDataV8),\n          \"offsetType\",\n          \"uint8\",\n        ];\n\n        this.RangeDataV8 = [\"max\", \"float32\", \"min\", \"float32\", \"min\", \"uint8\"];\n\n        this.RandomParamDataV8 = [\"time\", this.RangeDataV8, \"value\", this.RangeDataV8];\n\n        this.DynamicParamDataV8 = [\n          \"envelopeData\",\n          Utils.getPointerReader(this.EnvelopeDataV8),\n          \"randomParamData\",\n          Utils.getPointerReader(this.RandomParamDataV8),\n          \"value\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.AttenuationDataV8 = [\n          \"coneInsideAngle\",\n          \"float32\",\n          \"coneOutsideAngle\",\n          \"float32\",\n          \"coneOutsideVolume\",\n          \"float32\",\n          \"lowPass\",\n          this.DynamicParamDataV8,\n          \"pan3D\",\n          this.DynamicParamDataV8,\n          \"spread3D\",\n          this.DynamicParamDataV8,\n          \"volumeA\",\n          this.DynamicParamDataV8,\n          \"volumeB\",\n          this.DynamicParamDataV8,\n        ];\n\n        this.CategoryDynamicDataV8 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"volume\",\n          \"float32\",\n          \"nonFocusGain\",\n          \"float32\",\n          \"lowPass\",\n          \"float32\",\n          \"reverbDirect\",\n          \"float32\",\n          \"reverbRoom\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n        ];\n\n        this.CategoryDataV8 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"volumeGroupName\",\n          Utils.getQWordReader(),\n          \"outputBussName\",\n          Utils.getQWordReader(),\n          \"attenuation\",\n          Utils.getPointerReader(this.AttenuationDataV8),\n          \"dynamicData\",\n          Utils.getPointerReader(this.CategoryDynamicDataV8),\n          \"muteFadeTime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"maxAudible\",\n          \"uint32\",\n          \"maxAudibleBehavior\",\n          \"uint8\",\n        ];\n\n        this.ReverbDataV8 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"room\",\n          \"float32\",\n          \"roomHF\",\n          \"float32\",\n          \"roomLF\",\n          \"float32\",\n          \"decayTime\",\n          \"float32\",\n          \"decayHFRatio\",\n          \"float32\",\n          \"reflections\",\n          \"float32\",\n          \"reflectionsDelay\",\n          \"float32\",\n          \"reverb\",\n          \"float32\",\n          \"reverbDelay\",\n          \"float32\",\n          \"referenceHF\",\n          \"float32\",\n          \"referenceLF\",\n          \"float32\",\n          \"diffusion\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n        ];\n\n        this.SnapshotDataV8 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"blendInTime\",\n          \"float32\",\n          \"blendOutTime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"buss\",\n          Utils.getArrayReader(this.BussDynamicDataV8),\n          \"category\",\n          Utils.getArrayReader(this.CategoryDynamicDataV8),\n        ];\n\n        this.AudioSettingsDataV8 = [\n          \"defaultSnapshot\",\n          Utils.getQWordReader(),\n          \"effectsBuss\",\n          Utils.getQWordReader(),\n          \"distanceScale\",\n          \"float32\",\n          \"focusTransition\",\n          \"float32\",\n          \"buss\",\n          Utils.getArrayReader(this.BussDataV8),\n          \"category\",\n          Utils.getArrayReader(this.CategoryDataV8),\n          \"reverb\",\n          Utils.getArrayReader(this.ReverbDataV8),\n          \"snapshot\",\n          Utils.getArrayReader(this.SnapshotDataV8),\n          \"bankIndexFileName\",\n          Utils.getFileNameReader(),\n          \"bankScriptFileName\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.HandlerDataV8 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"byteCode\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.FileNameDataV8 = [\n          \"language\",\n          Utils.getQWordReader(),\n          \"weight\",\n          \"float32\",\n          \"fileName\",\n          Utils.getFileNameReader(),\n          \"audioType\",\n          \"uint8\",\n        ];\n\n        this.MetaSoundDataV8 = [\n          \"category\",\n          Utils.getQWordReader(),\n          \"endCue\",\n          Utils.getQWordReader(),\n          \"name\",\n          Utils.getQWordReader(),\n          \"offsetBone\",\n          Utils.getQWordReader(),\n          \"playlistId\",\n          Utils.getQWordReader(),\n          \"dsp\",\n          Utils.getArrayReader(this.DspDataV8),\n          \"attenuation\",\n          Utils.getPointerReader(this.AttenuationDataV8),\n          \"fileName\",\n          Utils.getArrayReader(this.FileNameDataV8),\n          \"endCueOffset\",\n          \"float32\",\n          \"fadeInTime\",\n          \"float32\",\n          \"fadeOutTime\",\n          \"float32\",\n          \"positionOffset\",\n          [\"[]\", \"float32\", 3],\n          \"flags\",\n          \"uint32\",\n          \"loopCount\",\n          \"uint32\",\n          \"depth\",\n          this.DynamicParamDataV8,\n          \"pan\",\n          this.DynamicParamDataV8,\n          \"pitch\",\n          this.DynamicParamDataV8,\n          \"pitchMS\",\n          this.DynamicParamDataV8,\n          \"volume\",\n          this.DynamicParamDataV8,\n          \"volumeMS\",\n          this.DynamicParamDataV8,\n          \"initialDelay\",\n          this.RangeDataV8,\n          \"playLength\",\n          this.RangeDataV8,\n          \"positionOffsetAngle\",\n          this.RangeDataV8,\n          \"positionRange\",\n          this.RangeDataV8,\n          \"repeatCount\",\n          this.RangeDataV8,\n          \"repeatTime\",\n          this.RangeDataV8,\n          \"startTimeOffset\",\n          this.RangeDataV8,\n          \"channelMode\",\n          \"uint8\",\n          \"channelPriority\",\n          \"uint8\",\n          \"fileIterateMode\",\n          \"uint8\",\n          \"loopMode\",\n          \"uint8\",\n          \"musicPriority\",\n          \"uint8\",\n          \"playbackMode\",\n          \"uint8\",\n          \"positionMode\",\n          \"uint8\",\n          \"repeatTimeFrom\",\n          \"uint8\",\n        ];\n\n        this.ScriptRefDataV8 = [\"name\", Utils.getQWordReader(), \"fileName\", Utils.getFileNameReader()];\n\n        this.TriggerMarkerDataV8 = [\n          \"cue\",\n          Utils.getQWordReader(),\n          \"end\",\n          Utils.getQWordReader(),\n          \"time\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.TriggerKeyDataV8 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"triggerMarker\",\n          Utils.getArrayReader(this.TriggerMarkerDataV8),\n        ];\n\n        this.__root = this.ScriptFileDataV8 = [\n          \"musicCue\",\n          Utils.getQWordReader(),\n          \"endCue\",\n          Utils.getQWordReader(),\n          \"audioSettings\",\n          Utils.getPointerReader(this.AudioSettingsDataV8),\n          \"handler\",\n          Utils.getArrayReader(this.HandlerDataV8),\n          \"metaSound\",\n          Utils.getArrayReader(this.MetaSoundDataV8),\n          \"scriptRef\",\n          Utils.getArrayReader(this.ScriptRefDataV8),\n          \"triggerKey\",\n          Utils.getArrayReader(this.TriggerKeyDataV8),\n          \"flags\",\n          \"uint32\",\n          \"fadeInTime\",\n          \"float32\",\n          \"volume\",\n          \"float32\",\n        ];\n      },\n\n      // => Version: 7, ReferencedFunction: 0xE20EB0\n      7: function () {\n        this.DspDataV7 = [\"type\", \"uint32\", \"flags\", \"uint32\", \"property\", Utils.getArrayReader(\"float32\")];\n\n        this.BussDynamicDataV7 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"volume\",\n          \"float32\",\n          \"dsp\",\n          Utils.getArrayReader(this.DspDataV7),\n        ];\n\n        this.BussDataV7 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"output\",\n          Utils.getQWordReader(),\n          \"dynamicData\",\n          Utils.getPointerReader(this.BussDynamicDataV7),\n        ];\n\n        this.EnvelopePointDataV7 = [\"offset\", \"float32\", \"value\", \"float32\"];\n\n        this.EnvelopeDataV7 = [\n          \"offsetParameter\",\n          Utils.getQWordReader(),\n          \"envelopePoint\",\n          Utils.getArrayReader(this.EnvelopePointDataV7),\n          \"offsetType\",\n          \"uint8\",\n        ];\n\n        this.RangeDataV7 = [\"max\", \"float32\", \"min\", \"float32\", \"min\", \"uint8\"];\n\n        this.RandomParamDataV7 = [\"time\", this.RangeDataV7, \"value\", this.RangeDataV7];\n\n        this.DynamicParamDataV7 = [\n          \"envelopeData\",\n          Utils.getPointerReader(this.EnvelopeDataV7),\n          \"randomParamData\",\n          Utils.getPointerReader(this.RandomParamDataV7),\n          \"value\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.AttenuationDataV7 = [\n          \"coneInsideAngle\",\n          \"float32\",\n          \"coneOutsideAngle\",\n          \"float32\",\n          \"coneOutsideVolume\",\n          \"float32\",\n          \"lowPass\",\n          this.DynamicParamDataV7,\n          \"pan3D\",\n          this.DynamicParamDataV7,\n          \"spread3D\",\n          this.DynamicParamDataV7,\n          \"volumeA\",\n          this.DynamicParamDataV7,\n          \"volumeB\",\n          this.DynamicParamDataV7,\n        ];\n\n        this.CategoryDynamicDataV7 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"volume\",\n          \"float32\",\n          \"nonFocusGain\",\n          \"float32\",\n          \"lowPass\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n        ];\n\n        this.CategoryDataV7 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"volumeGroupName\",\n          Utils.getQWordReader(),\n          \"outputBussName\",\n          Utils.getQWordReader(),\n          \"attenuation\",\n          Utils.getPointerReader(this.AttenuationDataV7),\n          \"dynamicData\",\n          Utils.getPointerReader(this.CategoryDynamicDataV7),\n          \"muteFadeTime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"maxAudible\",\n          \"uint32\",\n          \"maxAudibleBehavior\",\n          \"uint8\",\n        ];\n\n        this.SnapshotDataV7 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"blendInTime\",\n          \"float32\",\n          \"blendOutTime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"buss\",\n          Utils.getArrayReader(this.BussDynamicDataV7),\n          \"category\",\n          Utils.getArrayReader(this.CategoryDynamicDataV7),\n        ];\n\n        this.AudioSettingsDataV7 = [\n          \"defaultSnapshot\",\n          Utils.getQWordReader(),\n          \"effectsBuss\",\n          Utils.getQWordReader(),\n          \"distanceScale\",\n          \"float32\",\n          \"focusTransition\",\n          \"float32\",\n          \"buss\",\n          Utils.getArrayReader(this.BussDataV7),\n          \"category\",\n          Utils.getArrayReader(this.CategoryDataV7),\n          \"snapshot\",\n          Utils.getArrayReader(this.SnapshotDataV7),\n          \"bankIndexFileName\",\n          Utils.getFileNameReader(),\n          \"bankScriptFileName\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.HandlerDataV7 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"byteCode\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.FileNameDataV7 = [\n          \"language\",\n          Utils.getQWordReader(),\n          \"weight\",\n          \"float32\",\n          \"fileName\",\n          Utils.getFileNameReader(),\n          \"audioType\",\n          \"uint8\",\n        ];\n\n        this.MetaSoundDataV7 = [\n          \"category\",\n          Utils.getQWordReader(),\n          \"endCue\",\n          Utils.getQWordReader(),\n          \"name\",\n          Utils.getQWordReader(),\n          \"offsetBone\",\n          Utils.getQWordReader(),\n          \"playlistId\",\n          Utils.getQWordReader(),\n          \"dsp\",\n          Utils.getArrayReader(this.DspDataV7),\n          \"attenuation\",\n          Utils.getPointerReader(this.AttenuationDataV7),\n          \"fileName\",\n          Utils.getArrayReader(this.FileNameDataV7),\n          \"endCueOffset\",\n          \"float32\",\n          \"fadeInTime\",\n          \"float32\",\n          \"fadeOutTime\",\n          \"float32\",\n          \"positionOffset\",\n          [\"[]\", \"float32\", 3],\n          \"flags\",\n          \"uint32\",\n          \"loopCount\",\n          \"uint32\",\n          \"depth\",\n          this.DynamicParamDataV7,\n          \"pan\",\n          this.DynamicParamDataV7,\n          \"pitch\",\n          this.DynamicParamDataV7,\n          \"pitchMS\",\n          this.DynamicParamDataV7,\n          \"volume\",\n          this.DynamicParamDataV7,\n          \"volumeMS\",\n          this.DynamicParamDataV7,\n          \"initialDelay\",\n          this.RangeDataV7,\n          \"playLength\",\n          this.RangeDataV7,\n          \"positionOffsetAngle\",\n          this.RangeDataV7,\n          \"positionRange\",\n          this.RangeDataV7,\n          \"repeatCount\",\n          this.RangeDataV7,\n          \"repeatTime\",\n          this.RangeDataV7,\n          \"startTimeOffset\",\n          this.RangeDataV7,\n          \"channelMode\",\n          \"uint8\",\n          \"channelPriority\",\n          \"uint8\",\n          \"fileIterateMode\",\n          \"uint8\",\n          \"loopMode\",\n          \"uint8\",\n          \"playbackMode\",\n          \"uint8\",\n          \"positionMode\",\n          \"uint8\",\n          \"repeatTimeFrom\",\n          \"uint8\",\n        ];\n\n        this.ScriptRefDataV7 = [\"name\", Utils.getQWordReader(), \"fileName\", Utils.getFileNameReader()];\n\n        this.TriggerMarkerDataV7 = [\n          \"cue\",\n          Utils.getQWordReader(),\n          \"end\",\n          Utils.getQWordReader(),\n          \"time\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.TriggerKeyDataV7 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"triggerMarker\",\n          Utils.getArrayReader(this.TriggerMarkerDataV7),\n        ];\n\n        this.__root = this.ScriptFileDataV7 = [\n          \"musicCue\",\n          Utils.getQWordReader(),\n          \"endCue\",\n          Utils.getQWordReader(),\n          \"audioSettings\",\n          Utils.getPointerReader(this.AudioSettingsDataV7),\n          \"handler\",\n          Utils.getArrayReader(this.HandlerDataV7),\n          \"metaSound\",\n          Utils.getArrayReader(this.MetaSoundDataV7),\n          \"scriptRef\",\n          Utils.getArrayReader(this.ScriptRefDataV7),\n          \"triggerKey\",\n          Utils.getArrayReader(this.TriggerKeyDataV7),\n          \"flags\",\n          \"uint32\",\n          \"fadeInTime\",\n          \"float32\",\n          \"volume\",\n          \"float32\",\n        ];\n      },\n\n      // => Version: 6\n      6: function () {\n        this.DspDataV6 = [\"type\", \"uint32\", \"flags\", \"uint32\", \"property\", Utils.getArrayReader(\"float32\")];\n\n        this.BussDynamicDataV6 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"volume\",\n          \"float32\",\n          \"dsp\",\n          Utils.getArrayReader(this.DspDataV6),\n        ];\n\n        this.BussDataV6 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"output\",\n          Utils.getQWordReader(),\n          \"dynamicData\",\n          Utils.getPointerReader(this.BussDynamicDataV6),\n        ];\n\n        this.EnvelopePointDataV6 = [\"offset\", \"float32\", \"value\", \"float32\"];\n\n        this.EnvelopeDataV6 = [\n          \"offsetParameter\",\n          Utils.getQWordReader(),\n          \"envelopePoint\",\n          Utils.getArrayReader(this.EnvelopePointDataV6),\n          \"offsetType\",\n          \"uint8\",\n        ];\n\n        this.RangeDataV6 = [\"max\", \"float32\", \"min\", \"float32\", \"min\", \"uint8\"];\n\n        this.RandomParamDataV6 = [\"time\", this.RangeDataV6, \"value\", this.RangeDataV6];\n\n        this.DynamicParamDataV6 = [\n          \"envelopeData\",\n          Utils.getPointerReader(this.EnvelopeDataV6),\n          \"randomParamData\",\n          Utils.getPointerReader(this.RandomParamDataV6),\n          \"value\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.AttenuationDataV6 = [\n          \"coneInsideAngle\",\n          \"float32\",\n          \"coneOutsideAngle\",\n          \"float32\",\n          \"coneOutsideVolume\",\n          \"float32\",\n          \"lowPass\",\n          this.DynamicParamDataV6,\n          \"pan3D\",\n          this.DynamicParamDataV6,\n          \"spread3D\",\n          this.DynamicParamDataV6,\n          \"volumeA\",\n          this.DynamicParamDataV6,\n        ];\n\n        this.CategoryDataV6 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"volumeGroupName\",\n          Utils.getQWordReader(),\n          \"outputBussName\",\n          Utils.getQWordReader(),\n          \"attenuation\",\n          Utils.getPointerReader(this.AttenuationDataV6),\n          \"muteFadeTime\",\n          \"float32\",\n          \"volumeA\",\n          \"float32\",\n          \"volumeAThreshold\",\n          \"float32\",\n          \"volumeB\",\n          \"float32\",\n          \"volumeBThreshold\",\n          \"float32\",\n          \"volumeChangeRate\",\n          \"float32\",\n          \"volumeDucking\",\n          \"float32\",\n          \"volumeDuckingTimeAttack\",\n          \"float32\",\n          \"volumeDuckingTimeRelease\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"maxAudible\",\n          \"uint32\",\n          \"maxAudibleBehavior\",\n          \"uint8\",\n        ];\n\n        this.SnapshotDataV6 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"blendInTime\",\n          \"float32\",\n          \"blendOutTime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"buss\",\n          Utils.getArrayReader(this.BussDynamicDataV6),\n        ];\n\n        this.AudioSettingsDataV6 = [\n          \"defaultSnapshot\",\n          Utils.getQWordReader(),\n          \"effectsBuss\",\n          Utils.getQWordReader(),\n          \"distanceScale\",\n          \"float32\",\n          \"buss\",\n          Utils.getArrayReader(this.BussDataV6),\n          \"category\",\n          Utils.getArrayReader(this.CategoryDataV6),\n          \"snapshot\",\n          Utils.getArrayReader(this.SnapshotDataV6),\n          \"bankIndexFileName\",\n          Utils.getFileNameReader(),\n          \"bankScriptFileName\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.HandlerDataV6 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"byteCode\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.FileNameDataV6 = [\n          \"language\",\n          Utils.getQWordReader(),\n          \"weight\",\n          \"float32\",\n          \"fileName\",\n          Utils.getFileNameReader(),\n          \"audioType\",\n          \"uint8\",\n        ];\n\n        this.MetaSoundDataV6 = [\n          \"category\",\n          Utils.getQWordReader(),\n          \"endCue\",\n          Utils.getQWordReader(),\n          \"name\",\n          Utils.getQWordReader(),\n          \"playlistId\",\n          Utils.getQWordReader(),\n          \"dsp\",\n          Utils.getArrayReader(this.DspDataV6),\n          \"attenuation\",\n          Utils.getPointerReader(this.AttenuationDataV6),\n          \"fileName\",\n          Utils.getArrayReader(this.FileNameDataV6),\n          \"endCueOffset\",\n          \"float32\",\n          \"fadeInTime\",\n          \"float32\",\n          \"fadeOutTime\",\n          \"float32\",\n          \"positionOffset\",\n          [\"[]\", \"float32\", 3],\n          \"flags\",\n          \"uint32\",\n          \"loopCount\",\n          \"uint32\",\n          \"depth\",\n          this.DynamicParamDataV6,\n          \"pan\",\n          this.DynamicParamDataV6,\n          \"pitch\",\n          this.DynamicParamDataV6,\n          \"pitchMS\",\n          this.DynamicParamDataV6,\n          \"volume\",\n          this.DynamicParamDataV6,\n          \"volumeMS\",\n          this.DynamicParamDataV6,\n          \"initialDelay\",\n          this.RangeDataV6,\n          \"playLength\",\n          this.RangeDataV6,\n          \"positionOffsetAngle\",\n          this.RangeDataV6,\n          \"positionRange\",\n          this.RangeDataV6,\n          \"repeatCount\",\n          this.RangeDataV6,\n          \"repeatTime\",\n          this.RangeDataV6,\n          \"startTimeOffset\",\n          this.RangeDataV6,\n          \"channelMode\",\n          \"uint8\",\n          \"channelPriority\",\n          \"uint8\",\n          \"fileIterateMode\",\n          \"uint8\",\n          \"loopMode\",\n          \"uint8\",\n          \"playbackMode\",\n          \"uint8\",\n          \"positionMode\",\n          \"uint8\",\n          \"repeatTimeFrom\",\n          \"uint8\",\n        ];\n\n        this.ScriptRefDataV6 = [\"name\", Utils.getQWordReader(), \"fileName\", Utils.getFileNameReader()];\n\n        this.TriggerMarkerDataV6 = [\n          \"cue\",\n          Utils.getQWordReader(),\n          \"end\",\n          Utils.getQWordReader(),\n          \"time\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.TriggerKeyDataV6 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"triggerMarker\",\n          Utils.getArrayReader(this.TriggerMarkerDataV6),\n        ];\n\n        this.__root = this.ScriptFileDataV6 = [\n          \"musicCue\",\n          Utils.getQWordReader(),\n          \"endCue\",\n          Utils.getQWordReader(),\n          \"audioSettings\",\n          Utils.getPointerReader(this.AudioSettingsDataV6),\n          \"handler\",\n          Utils.getArrayReader(this.HandlerDataV6),\n          \"metaSound\",\n          Utils.getArrayReader(this.MetaSoundDataV6),\n          \"scriptRef\",\n          Utils.getArrayReader(this.ScriptRefDataV6),\n          \"triggerKey\",\n          Utils.getArrayReader(this.TriggerKeyDataV6),\n          \"flags\",\n          \"uint32\",\n          \"fadeInTime\",\n          \"float32\",\n          \"volume\",\n          \"float32\",\n        ];\n      },\n\n      // => Version: 5\n      5: function () {\n        this.EnvelopePointDataV5 = [\"offset\", \"float32\", \"value\", \"float32\"];\n\n        this.EnvelopeDataV5 = [\n          \"offsetParameter\",\n          Utils.getQWordReader(),\n          \"envelopePoint\",\n          Utils.getArrayReader(this.EnvelopePointDataV5),\n          \"offsetType\",\n          \"uint8\",\n        ];\n\n        this.RangeDataV5 = [\"max\", \"float32\", \"min\", \"float32\", \"min\", \"uint8\"];\n\n        this.RandomParamDataV5 = [\"time\", this.RangeDataV5, \"value\", this.RangeDataV5];\n\n        this.DynamicParamDataV5 = [\n          \"envelopeData\",\n          Utils.getPointerReader(this.EnvelopeDataV5),\n          \"randomParamData\",\n          Utils.getPointerReader(this.RandomParamDataV5),\n          \"value\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.AttenuationDataV5 = [\n          \"coneInsideAngle\",\n          \"float32\",\n          \"coneOutsideAngle\",\n          \"float32\",\n          \"coneOutsideVolume\",\n          \"float32\",\n          \"lowPass\",\n          this.DynamicParamDataV5,\n          \"pan3D\",\n          this.DynamicParamDataV5,\n          \"spread3D\",\n          this.DynamicParamDataV5,\n          \"volumeA\",\n          this.DynamicParamDataV5,\n        ];\n\n        this.CategoryDataV5 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"volumeGroupName\",\n          Utils.getQWordReader(),\n          \"attenuation\",\n          Utils.getPointerReader(this.AttenuationDataV5),\n          \"muteFadeTime\",\n          \"float32\",\n          \"volumeA\",\n          \"float32\",\n          \"volumeAThreshold\",\n          \"float32\",\n          \"volumeB\",\n          \"float32\",\n          \"volumeBThreshold\",\n          \"float32\",\n          \"volumeChangeRate\",\n          \"float32\",\n          \"volumeDucking\",\n          \"float32\",\n          \"volumeDuckingTimeAttack\",\n          \"float32\",\n          \"volumeDuckingTimeRelease\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"maxAudible\",\n          \"uint32\",\n          \"maxAudibleBehavior\",\n          \"uint8\",\n        ];\n\n        this.DspDataV5 = [\"type\", \"uint32\", \"flags\", \"uint32\", \"property\", Utils.getArrayReader(\"float32\")];\n\n        this.BussDataV5 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"output\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"dsp\",\n          Utils.getArrayReader(this.DspDataV5),\n          \"volume\",\n          \"float32\",\n        ];\n\n        this.SnapshotDataV5 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"blendInTime\",\n          \"float32\",\n          \"blendOutTime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"buss\",\n          Utils.getArrayReader(this.BussDataV5),\n        ];\n\n        this.AudioSettingsDataV5 = [\n          \"defaultBuss\",\n          Utils.getQWordReader(),\n          \"effectsBuss\",\n          Utils.getQWordReader(),\n          \"distanceScale\",\n          \"float32\",\n          \"category\",\n          Utils.getArrayReader(this.CategoryDataV5),\n          \"snapshot\",\n          Utils.getArrayReader(this.SnapshotDataV5),\n          \"bankIndexFileName\",\n          Utils.getFileNameReader(),\n          \"bankScriptFileName\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.HandlerDataV5 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"byteCode\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.FileNameDataV5 = [\n          \"language\",\n          Utils.getQWordReader(),\n          \"weight\",\n          \"float32\",\n          \"fileName\",\n          Utils.getFileNameReader(),\n          \"audioType\",\n          \"uint8\",\n        ];\n\n        this.MetaSoundDataV5 = [\n          \"category\",\n          Utils.getQWordReader(),\n          \"endCue\",\n          Utils.getQWordReader(),\n          \"name\",\n          Utils.getQWordReader(),\n          \"playlistId\",\n          Utils.getQWordReader(),\n          \"dsp\",\n          Utils.getArrayReader(this.DspDataV5),\n          \"attenuation\",\n          Utils.getPointerReader(this.AttenuationDataV5),\n          \"fileName\",\n          Utils.getArrayReader(this.FileNameDataV5),\n          \"endCueOffset\",\n          \"float32\",\n          \"fadeInTime\",\n          \"float32\",\n          \"fadeOutTime\",\n          \"float32\",\n          \"positionOffset\",\n          [\"[]\", \"float32\", 3],\n          \"flags\",\n          \"uint32\",\n          \"loopCount\",\n          \"uint32\",\n          \"depth\",\n          this.DynamicParamDataV5,\n          \"pan\",\n          this.DynamicParamDataV5,\n          \"pitch\",\n          this.DynamicParamDataV5,\n          \"pitchMS\",\n          this.DynamicParamDataV5,\n          \"volume\",\n          this.DynamicParamDataV5,\n          \"volumeMS\",\n          this.DynamicParamDataV5,\n          \"initialDelay\",\n          this.RangeDataV5,\n          \"playLength\",\n          this.RangeDataV5,\n          \"positionOffsetAngle\",\n          this.RangeDataV5,\n          \"positionRange\",\n          this.RangeDataV5,\n          \"repeatCount\",\n          this.RangeDataV5,\n          \"repeatTime\",\n          this.RangeDataV5,\n          \"startTimeOffset\",\n          this.RangeDataV5,\n          \"channelMode\",\n          \"uint8\",\n          \"channelPriority\",\n          \"uint8\",\n          \"fileIterateMode\",\n          \"uint8\",\n          \"loopMode\",\n          \"uint8\",\n          \"playbackMode\",\n          \"uint8\",\n          \"positionMode\",\n          \"uint8\",\n          \"repeatTimeFrom\",\n          \"uint8\",\n        ];\n\n        this.ScriptRefDataV5 = [\"name\", Utils.getQWordReader(), \"fileName\", Utils.getFileNameReader()];\n\n        this.TriggerMarkerDataV5 = [\n          \"cue\",\n          Utils.getQWordReader(),\n          \"end\",\n          Utils.getQWordReader(),\n          \"time\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.TriggerKeyDataV5 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"triggerMarker\",\n          Utils.getArrayReader(this.TriggerMarkerDataV5),\n        ];\n\n        this.__root = this.ScriptFileDataV5 = [\n          \"musicCue\",\n          Utils.getQWordReader(),\n          \"endCue\",\n          Utils.getQWordReader(),\n          \"audioSettings\",\n          Utils.getPointerReader(this.AudioSettingsDataV5),\n          \"handler\",\n          Utils.getArrayReader(this.HandlerDataV5),\n          \"metaSound\",\n          Utils.getArrayReader(this.MetaSoundDataV5),\n          \"scriptRef\",\n          Utils.getArrayReader(this.ScriptRefDataV5),\n          \"triggerKey\",\n          Utils.getArrayReader(this.TriggerKeyDataV5),\n          \"flags\",\n          \"uint32\",\n          \"fadeInTime\",\n          \"float32\",\n          \"volume\",\n          \"float32\",\n        ];\n      },\n\n      // => Version: 4\n      4: function () {\n        this.VolumeGroupDataV4 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"parentName\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"volume\",\n          \"float32\",\n        ];\n\n        this.EnvelopePointDataV4 = [\"offset\", \"float32\", \"value\", \"float32\"];\n\n        this.EnvelopeDataV4 = [\n          \"offsetParameter\",\n          Utils.getQWordReader(),\n          \"envelopePoint\",\n          Utils.getArrayReader(this.EnvelopePointDataV4),\n          \"offsetType\",\n          \"uint8\",\n        ];\n\n        this.RangeDataV4 = [\"max\", \"float32\", \"min\", \"float32\", \"min\", \"uint8\"];\n\n        this.RandomParamDataV4 = [\"time\", this.RangeDataV4, \"value\", this.RangeDataV4];\n\n        this.DynamicParamDataV4 = [\n          \"envelopeData\",\n          Utils.getPointerReader(this.EnvelopeDataV4),\n          \"randomParamData\",\n          Utils.getPointerReader(this.RandomParamDataV4),\n          \"value\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.AttenuationDataV4 = [\n          \"coneInsideAngle\",\n          \"float32\",\n          \"coneOutsideAngle\",\n          \"float32\",\n          \"coneOutsideVolume\",\n          \"float32\",\n          \"lowPass\",\n          this.DynamicParamDataV4,\n          \"pan3D\",\n          this.DynamicParamDataV4,\n          \"spread3D\",\n          this.DynamicParamDataV4,\n          \"volumeA\",\n          this.DynamicParamDataV4,\n        ];\n\n        this.CategoryDataV4 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"volumeGroupName\",\n          Utils.getQWordReader(),\n          \"attenuation\",\n          Utils.getPointerReader(this.AttenuationDataV4),\n          \"muteFadeTime\",\n          \"float32\",\n          \"volumeA\",\n          \"float32\",\n          \"volumeAThreshold\",\n          \"float32\",\n          \"volumeB\",\n          \"float32\",\n          \"volumeBThreshold\",\n          \"float32\",\n          \"volumeChangeRate\",\n          \"float32\",\n          \"volumeDucking\",\n          \"float32\",\n          \"volumeDuckingTimeAttack\",\n          \"float32\",\n          \"volumeDuckingTimeRelease\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"maxAudible\",\n          \"uint32\",\n          \"maxAudibleBehavior\",\n          \"uint8\",\n        ];\n\n        this.AudioSettingsDataV4 = [\n          \"volumeGroup\",\n          Utils.getArrayReader(this.VolumeGroupDataV4),\n          \"category\",\n          Utils.getArrayReader(this.CategoryDataV4),\n          \"distanceScale\",\n          \"float32\",\n          \"bankIndexFileName\",\n          Utils.getFileNameReader(),\n          \"bankScriptFileName\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.HandlerDataV4 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"byteCode\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.DspDataV4 = [\"param\", Utils.getArrayReader(this.DynamicParamDataV4), \"type\", \"uint8\"];\n\n        this.FileNameDataV4 = [\n          \"language\",\n          Utils.getQWordReader(),\n          \"weight\",\n          \"float32\",\n          \"fileName\",\n          Utils.getFileNameReader(),\n          \"audioType\",\n          \"uint8\",\n        ];\n\n        this.MetaSoundDataV4 = [\n          \"category\",\n          Utils.getQWordReader(),\n          \"endCue\",\n          Utils.getQWordReader(),\n          \"name\",\n          Utils.getQWordReader(),\n          \"playlistId\",\n          Utils.getQWordReader(),\n          \"dsp\",\n          Utils.getArrayReader(this.DspDataV4),\n          \"attenuation\",\n          Utils.getPointerReader(this.AttenuationDataV4),\n          \"fileName\",\n          Utils.getArrayReader(this.FileNameDataV4),\n          \"endCueOffset\",\n          \"float32\",\n          \"fadeInTime\",\n          \"float32\",\n          \"fadeOutTime\",\n          \"float32\",\n          \"positionOffset\",\n          [\"[]\", \"float32\", 3],\n          \"flags\",\n          \"uint32\",\n          \"loopCount\",\n          \"uint32\",\n          \"depth\",\n          this.DynamicParamDataV4,\n          \"pan\",\n          this.DynamicParamDataV4,\n          \"pitch\",\n          this.DynamicParamDataV4,\n          \"pitchMS\",\n          this.DynamicParamDataV4,\n          \"volume\",\n          this.DynamicParamDataV4,\n          \"volumeMS\",\n          this.DynamicParamDataV4,\n          \"initialDelay\",\n          this.RangeDataV4,\n          \"playLength\",\n          this.RangeDataV4,\n          \"positionOffsetAngle\",\n          this.RangeDataV4,\n          \"positionRange\",\n          this.RangeDataV4,\n          \"repeatCount\",\n          this.RangeDataV4,\n          \"repeatTime\",\n          this.RangeDataV4,\n          \"startTimeOffset\",\n          this.RangeDataV4,\n          \"channelMode\",\n          \"uint8\",\n          \"channelPriority\",\n          \"uint8\",\n          \"fileIterateMode\",\n          \"uint8\",\n          \"loopMode\",\n          \"uint8\",\n          \"playbackMode\",\n          \"uint8\",\n          \"positionMode\",\n          \"uint8\",\n          \"repeatTimeFrom\",\n          \"uint8\",\n        ];\n\n        this.ScriptRefDataV4 = [\"name\", Utils.getQWordReader(), \"fileName\", Utils.getFileNameReader()];\n\n        this.TriggerMarkerDataV4 = [\n          \"cue\",\n          Utils.getQWordReader(),\n          \"end\",\n          Utils.getQWordReader(),\n          \"time\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.TriggerKeyDataV4 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"triggerMarker\",\n          Utils.getArrayReader(this.TriggerMarkerDataV4),\n        ];\n\n        this.__root = this.ScriptFileDataV4 = [\n          \"musicCue\",\n          Utils.getQWordReader(),\n          \"endCue\",\n          Utils.getQWordReader(),\n          \"audioSettings\",\n          Utils.getPointerReader(this.AudioSettingsDataV4),\n          \"handler\",\n          Utils.getArrayReader(this.HandlerDataV4),\n          \"metaSound\",\n          Utils.getArrayReader(this.MetaSoundDataV4),\n          \"scriptRef\",\n          Utils.getArrayReader(this.ScriptRefDataV4),\n          \"triggerKey\",\n          Utils.getArrayReader(this.TriggerKeyDataV4),\n          \"flags\",\n          \"uint32\",\n          \"fadeInTime\",\n          \"float32\",\n          \"volume\",\n          \"float32\",\n        ];\n      },\n\n      // => Version: 3\n      3: function () {\n        this.VolumeGroupDataV3 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"parentName\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"volume\",\n          \"float32\",\n        ];\n\n        this.EnvelopePointDataV3 = [\"offset\", \"float32\", \"value\", \"float32\"];\n\n        this.EnvelopeDataV3 = [\n          \"offsetParameter\",\n          Utils.getQWordReader(),\n          \"envelopePoint\",\n          Utils.getArrayReader(this.EnvelopePointDataV3),\n          \"offsetType\",\n          \"uint8\",\n        ];\n\n        this.RangeDataV3 = [\"max\", \"float32\", \"min\", \"float32\", \"min\", \"uint8\"];\n\n        this.RandomParamDataV3 = [\"time\", this.RangeDataV3, \"value\", this.RangeDataV3];\n\n        this.DynamicParamDataV3 = [\n          \"envelopeData\",\n          Utils.getPointerReader(this.EnvelopeDataV3),\n          \"randomParamData\",\n          Utils.getPointerReader(this.RandomParamDataV3),\n          \"value\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.AttenuationDataV3 = [\n          \"coneInsideAngle\",\n          \"float32\",\n          \"coneOutsideAngle\",\n          \"float32\",\n          \"coneOutsideVolume\",\n          \"float32\",\n          \"lowPass\",\n          this.DynamicParamDataV3,\n          \"pan3D\",\n          this.DynamicParamDataV3,\n          \"spread3D\",\n          this.DynamicParamDataV3,\n          \"volumeA\",\n          this.DynamicParamDataV3,\n        ];\n\n        this.CategoryDataV3 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"volumeGroupName\",\n          Utils.getQWordReader(),\n          \"attenuation\",\n          Utils.getPointerReader(this.AttenuationDataV3),\n          \"muteFadeTime\",\n          \"float32\",\n          \"volumeA\",\n          \"float32\",\n          \"volumeAThreshold\",\n          \"float32\",\n          \"volumeB\",\n          \"float32\",\n          \"volumeBThreshold\",\n          \"float32\",\n          \"volumeChangeRate\",\n          \"float32\",\n          \"volumeDucking\",\n          \"float32\",\n          \"volumeDuckingTimeAttack\",\n          \"float32\",\n          \"volumeDuckingTimeRelease\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"maxAudible\",\n          \"uint32\",\n          \"maxAudibleBehavior\",\n          \"uint8\",\n        ];\n\n        this.AudioSettingsDataV3 = [\n          \"volumeGroup\",\n          Utils.getArrayReader(this.VolumeGroupDataV3),\n          \"category\",\n          Utils.getArrayReader(this.CategoryDataV3),\n          \"distanceScale\",\n          \"float32\",\n          \"voiceBankFileName\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.HandlerDataV3 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"byteCode\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.DspDataV3 = [\"param\", Utils.getArrayReader(this.DynamicParamDataV3), \"type\", \"uint8\"];\n\n        this.FileNameDataV3 = [\n          \"language\",\n          Utils.getQWordReader(),\n          \"weight\",\n          \"float32\",\n          \"fileName\",\n          Utils.getFileNameReader(),\n          \"audioType\",\n          \"uint8\",\n        ];\n\n        this.MetaSoundDataV3 = [\n          \"category\",\n          Utils.getQWordReader(),\n          \"endCue\",\n          Utils.getQWordReader(),\n          \"name\",\n          Utils.getQWordReader(),\n          \"playlistId\",\n          Utils.getQWordReader(),\n          \"dsp\",\n          Utils.getArrayReader(this.DspDataV3),\n          \"attenuation\",\n          Utils.getPointerReader(this.AttenuationDataV3),\n          \"fileName\",\n          Utils.getArrayReader(this.FileNameDataV3),\n          \"endCueOffset\",\n          \"float32\",\n          \"fadeInTime\",\n          \"float32\",\n          \"fadeOutTime\",\n          \"float32\",\n          \"positionOffset\",\n          [\"[]\", \"float32\", 3],\n          \"flags\",\n          \"uint32\",\n          \"loopCount\",\n          \"uint32\",\n          \"depth\",\n          this.DynamicParamDataV3,\n          \"pan\",\n          this.DynamicParamDataV3,\n          \"pitch\",\n          this.DynamicParamDataV3,\n          \"pitchMS\",\n          this.DynamicParamDataV3,\n          \"volume\",\n          this.DynamicParamDataV3,\n          \"volumeMS\",\n          this.DynamicParamDataV3,\n          \"initialDelay\",\n          this.RangeDataV3,\n          \"playLength\",\n          this.RangeDataV3,\n          \"positionOffsetAngle\",\n          this.RangeDataV3,\n          \"positionRange\",\n          this.RangeDataV3,\n          \"repeatCount\",\n          this.RangeDataV3,\n          \"repeatTime\",\n          this.RangeDataV3,\n          \"startTimeOffset\",\n          this.RangeDataV3,\n          \"channelMode\",\n          \"uint8\",\n          \"channelPriority\",\n          \"uint8\",\n          \"fileIterateMode\",\n          \"uint8\",\n          \"loopMode\",\n          \"uint8\",\n          \"playbackMode\",\n          \"uint8\",\n          \"positionMode\",\n          \"uint8\",\n          \"repeatTimeFrom\",\n          \"uint8\",\n        ];\n\n        this.ScriptRefDataV3 = [\"name\", Utils.getQWordReader(), \"fileName\", Utils.getFileNameReader()];\n\n        this.TriggerMarkerDataV3 = [\n          \"cue\",\n          Utils.getQWordReader(),\n          \"end\",\n          Utils.getQWordReader(),\n          \"time\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.TriggerKeyDataV3 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"triggerMarker\",\n          Utils.getArrayReader(this.TriggerMarkerDataV3),\n        ];\n\n        this.__root = this.ScriptFileDataV3 = [\n          \"musicCue\",\n          Utils.getQWordReader(),\n          \"endCue\",\n          Utils.getQWordReader(),\n          \"audioSettings\",\n          Utils.getPointerReader(this.AudioSettingsDataV3),\n          \"handler\",\n          Utils.getArrayReader(this.HandlerDataV3),\n          \"metaSound\",\n          Utils.getArrayReader(this.MetaSoundDataV3),\n          \"scriptRef\",\n          Utils.getArrayReader(this.ScriptRefDataV3),\n          \"triggerKey\",\n          Utils.getArrayReader(this.TriggerKeyDataV3),\n          \"flags\",\n          \"uint32\",\n          \"fadeInTime\",\n          \"float32\",\n          \"volume\",\n          \"float32\",\n        ];\n      },\n\n      // => Version: 2\n      2: function () {\n        this.VolumeGroupDataV2 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"parentName\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"volume\",\n          \"float32\",\n        ];\n\n        this.EnvelopePointDataV2 = [\"offset\", \"float32\", \"value\", \"float32\"];\n\n        this.EnvelopeDataV2 = [\n          \"offsetParameter\",\n          Utils.getQWordReader(),\n          \"envelopePoint\",\n          Utils.getArrayReader(this.EnvelopePointDataV2),\n          \"offsetType\",\n          \"uint8\",\n        ];\n\n        this.RangeDataV2 = [\"max\", \"float32\", \"min\", \"float32\", \"min\", \"uint8\"];\n\n        this.RandomParamDataV2 = [\"time\", this.RangeDataV2, \"value\", this.RangeDataV2];\n\n        this.DynamicParamDataV2 = [\n          \"envelopeData\",\n          Utils.getPointerReader(this.EnvelopeDataV2),\n          \"randomParamData\",\n          Utils.getPointerReader(this.RandomParamDataV2),\n          \"value\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.AttenuationDataV2 = [\n          \"coneInsideAngle\",\n          \"float32\",\n          \"coneOutsideAngle\",\n          \"float32\",\n          \"coneOutsideVolume\",\n          \"float32\",\n          \"lowPass\",\n          this.DynamicParamDataV2,\n          \"pan3D\",\n          this.DynamicParamDataV2,\n          \"spread3D\",\n          this.DynamicParamDataV2,\n          \"volumeA\",\n          this.DynamicParamDataV2,\n        ];\n\n        this.CategoryDataV2 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"volumeGroupName\",\n          Utils.getQWordReader(),\n          \"attenuation\",\n          Utils.getPointerReader(this.AttenuationDataV2),\n          \"muteFadeTime\",\n          \"float32\",\n          \"volumeA\",\n          \"float32\",\n          \"volumeAThreshold\",\n          \"float32\",\n          \"volumeB\",\n          \"float32\",\n          \"volumeBThreshold\",\n          \"float32\",\n          \"volumeChangeRate\",\n          \"float32\",\n          \"volumeDucking\",\n          \"float32\",\n          \"volumeDuckingTimeAttack\",\n          \"float32\",\n          \"volumeDuckingTimeRelease\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"maxAudible\",\n          \"uint32\",\n          \"maxAudibleBehavior\",\n          \"uint8\",\n        ];\n\n        this.AudioSettingsDataV2 = [\n          \"volumeGroup\",\n          Utils.getArrayReader(this.VolumeGroupDataV2),\n          \"category\",\n          Utils.getArrayReader(this.CategoryDataV2),\n          \"distanceScale\",\n          \"float32\",\n          \"voiceBankFileName\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.HandlerDataV2 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"byteCode\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.DspDataV2 = [\"param\", Utils.getArrayReader(this.DynamicParamDataV2), \"type\", \"uint8\"];\n\n        this.FileNameDataV2 = [\n          \"language\",\n          Utils.getQWordReader(),\n          \"weight\",\n          \"float32\",\n          \"fileName\",\n          Utils.getFileNameReader(),\n          \"audioType\",\n          \"uint8\",\n        ];\n\n        this.MetaSoundDataV2 = [\n          \"category\",\n          Utils.getQWordReader(),\n          \"endCue\",\n          Utils.getQWordReader(),\n          \"name\",\n          Utils.getQWordReader(),\n          \"playlistId\",\n          Utils.getQWordReader(),\n          \"dsp\",\n          Utils.getArrayReader(this.DspDataV2),\n          \"attenuation\",\n          Utils.getPointerReader(this.AttenuationDataV2),\n          \"fileName\",\n          Utils.getArrayReader(this.FileNameDataV2),\n          \"endCueOffset\",\n          \"float32\",\n          \"fadeInTime\",\n          \"float32\",\n          \"fadeOutTime\",\n          \"float32\",\n          \"positionOffset\",\n          [\"[]\", \"float32\", 3],\n          \"flags\",\n          \"uint32\",\n          \"loopCount\",\n          \"uint32\",\n          \"depth\",\n          this.DynamicParamDataV2,\n          \"pan\",\n          this.DynamicParamDataV2,\n          \"pitch\",\n          this.DynamicParamDataV2,\n          \"pitchMS\",\n          this.DynamicParamDataV2,\n          \"volume\",\n          this.DynamicParamDataV2,\n          \"volumeMS\",\n          this.DynamicParamDataV2,\n          \"initialDelay\",\n          this.RangeDataV2,\n          \"playLength\",\n          this.RangeDataV2,\n          \"positionOffsetAngle\",\n          this.RangeDataV2,\n          \"positionRange\",\n          this.RangeDataV2,\n          \"repeatCount\",\n          this.RangeDataV2,\n          \"repeatTime\",\n          this.RangeDataV2,\n          \"startTimeOffset\",\n          this.RangeDataV2,\n          \"channelMode\",\n          \"uint8\",\n          \"channelPriority\",\n          \"uint8\",\n          \"fileIterateMode\",\n          \"uint8\",\n          \"loopMode\",\n          \"uint8\",\n          \"playbackMode\",\n          \"uint8\",\n          \"positionMode\",\n          \"uint8\",\n          \"repeatTimeFrom\",\n          \"uint8\",\n        ];\n\n        this.ScriptRefDataV2 = [\"name\", Utils.getQWordReader(), \"fileName\", Utils.getFileNameReader()];\n\n        this.TriggerMarkerDataV2 = [\n          \"cue\",\n          Utils.getQWordReader(),\n          \"end\",\n          Utils.getQWordReader(),\n          \"time\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.TriggerKeyDataV2 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"triggerMarker\",\n          Utils.getArrayReader(this.TriggerMarkerDataV2),\n        ];\n\n        this.__root = this.ScriptFileDataV2 = [\n          \"musicCue\",\n          Utils.getQWordReader(),\n          \"audioSettings\",\n          Utils.getPointerReader(this.AudioSettingsDataV2),\n          \"handler\",\n          Utils.getArrayReader(this.HandlerDataV2),\n          \"metaSound\",\n          Utils.getArrayReader(this.MetaSoundDataV2),\n          \"scriptRef\",\n          Utils.getArrayReader(this.ScriptRefDataV2),\n          \"triggerKey\",\n          Utils.getArrayReader(this.TriggerKeyDataV2),\n          \"flags\",\n          \"uint32\",\n          \"fadeInTime\",\n          \"float32\",\n          \"volume\",\n          \"float32\",\n        ];\n      },\n\n      // => Version: 1\n      1: function () {\n        this.EnvelopePointDataV1 = [\"offset\", \"float32\", \"value\", \"float32\"];\n\n        this.EnvelopeDataV1 = [\n          \"envelopePoint\",\n          Utils.getArrayReader(this.EnvelopePointDataV1),\n          \"offsetType\",\n          \"uint8\",\n          \"offsetParameter\",\n          Utils.getQWordReader(),\n        ];\n\n        this.RangeDataV1 = [\"max\", \"float32\", \"min\", \"float32\", \"min\", \"uint8\"];\n\n        this.RandomParamDataV1 = [\"time\", this.RangeDataV1, \"value\", this.RangeDataV1];\n\n        this.DynamicParamDataV1 = [\n          \"envelopeData\",\n          Utils.getPointerReader(this.EnvelopeDataV1),\n          \"randomParamData\",\n          Utils.getPointerReader(this.RandomParamDataV1),\n          \"type\",\n          \"uint8\",\n          \"value\",\n          \"float32\",\n        ];\n\n        this.AttenuationDataV1 = [\n          \"coneInsideAngle\",\n          \"float32\",\n          \"coneOutsideAngle\",\n          \"float32\",\n          \"coneOutsideVolume\",\n          \"float32\",\n          \"lowPass\",\n          this.DynamicParamDataV1,\n          \"pan3D\",\n          this.DynamicParamDataV1,\n          \"spread3D\",\n          this.DynamicParamDataV1,\n          \"volumeA\",\n          this.DynamicParamDataV1,\n        ];\n\n        this.CategoryDataV1 = [\n          \"attenuation\",\n          Utils.getPointerReader(this.AttenuationDataV1),\n          \"flags\",\n          \"uint32\",\n          \"maxAudible\",\n          \"uint32\",\n          \"maxAudibleBehavior\",\n          \"uint8\",\n          \"muteFadeTime\",\n          \"float32\",\n          \"name\",\n          Utils.getQWordReader(),\n          \"volumeA\",\n          \"float32\",\n          \"volumeAThreshold\",\n          \"float32\",\n          \"volumeB\",\n          \"float32\",\n          \"volumeBThreshold\",\n          \"float32\",\n          \"volumeChangeRate\",\n          \"float32\",\n          \"volumeDucking\",\n          \"float32\",\n          \"volumeDuckingTimeAttack\",\n          \"float32\",\n          \"volumeDuckingTimeRelease\",\n          \"float32\",\n          \"volumeGroupName\",\n          Utils.getQWordReader(),\n        ];\n\n        this.VolumeGroupDataV1 = [\n          \"flags\",\n          \"uint32\",\n          \"name\",\n          Utils.getQWordReader(),\n          \"parentName\",\n          Utils.getQWordReader(),\n          \"volume\",\n          \"float32\",\n        ];\n\n        this.AudioSettingsDataV1 = [\n          \"category\",\n          Utils.getArrayReader(this.CategoryDataV1),\n          \"distanceScale\",\n          \"float32\",\n          \"voiceBankFileName\",\n          Utils.getFileNameReader(),\n          \"volumeGroup\",\n          Utils.getArrayReader(this.VolumeGroupDataV1),\n        ];\n\n        this.HandlerDataV1 = [\n          \"byteCode\",\n          Utils.getArrayReader(\"uint8\"),\n          \"flags\",\n          \"uint32\",\n          \"name\",\n          Utils.getQWordReader(),\n        ];\n\n        this.DspDataV1 = [\"param\", Utils.getArrayReader(this.DynamicParamDataV1), \"type\", \"uint8\"];\n\n        this.FileNameDataV1 = [\n          \"audioType\",\n          \"uint8\",\n          \"fileName\",\n          Utils.getFileNameReader(),\n          \"language\",\n          Utils.getQWordReader(),\n          \"weight\",\n          \"float32\",\n        ];\n\n        this.MetaSoundDataV1 = [\n          \"attenuation\",\n          Utils.getPointerReader(this.AttenuationDataV1),\n          \"category\",\n          Utils.getQWordReader(),\n          \"channelMode\",\n          \"uint8\",\n          \"channelPriority\",\n          \"uint8\",\n          \"depth\",\n          this.DynamicParamDataV1,\n          \"dsp\",\n          Utils.getArrayReader(this.DspDataV1),\n          \"endCue\",\n          Utils.getQWordReader(),\n          \"endCueOffset\",\n          \"float32\",\n          \"fadeInTime\",\n          \"float32\",\n          \"fadeOutTime\",\n          \"float32\",\n          \"fileIterateMode\",\n          \"uint8\",\n          \"fileName\",\n          Utils.getArrayReader(this.FileNameDataV1),\n          \"flags\",\n          \"uint32\",\n          \"initialDelay\",\n          this.RangeDataV1,\n          \"loopCount\",\n          \"uint32\",\n          \"loopMode\",\n          \"uint8\",\n          \"name\",\n          Utils.getQWordReader(),\n          \"pan\",\n          this.DynamicParamDataV1,\n          \"pitch\",\n          this.DynamicParamDataV1,\n          \"playbackMode\",\n          \"uint8\",\n          \"playLength\",\n          this.RangeDataV1,\n          \"playlistId\",\n          Utils.getQWordReader(),\n          \"positionMode\",\n          \"uint8\",\n          \"positionOffset\",\n          [\"[]\", \"float32\", 3],\n          \"positionOffsetAngle\",\n          this.RangeDataV1,\n          \"positionRange\",\n          this.RangeDataV1,\n          \"repeatCount\",\n          this.RangeDataV1,\n          \"repeatTime\",\n          this.RangeDataV1,\n          \"startTimeOffset\",\n          this.RangeDataV1,\n          \"repeatTimeFrom\",\n          \"uint8\",\n          \"volume\",\n          this.DynamicParamDataV1,\n        ];\n\n        this.ScriptRefDataV1 = [\"fileName\", Utils.getFileNameReader(), \"name\", Utils.getQWordReader()];\n\n        this.TriggerMarkerDataV1 = [\n          \"cue\",\n          Utils.getQWordReader(),\n          \"end\",\n          Utils.getQWordReader(),\n          \"time\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.TriggerKeyDataV1 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"triggerMarker\",\n          Utils.getArrayReader(this.TriggerMarkerDataV1),\n        ];\n\n        this.__root = this.ScriptFileDataV1 = [\n          \"audioSettings\",\n          Utils.getPointerReader(this.AudioSettingsDataV1),\n          \"fadeInTime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"handler\",\n          Utils.getArrayReader(this.HandlerDataV1),\n          \"metaSound\",\n          Utils.getArrayReader(this.MetaSoundDataV1),\n          \"scriptRef\",\n          Utils.getArrayReader(this.ScriptRefDataV1),\n          \"triggerKey\",\n          Utils.getArrayReader(this.TriggerKeyDataV1),\n          \"volume\",\n          \"float32\",\n        ];\n      },\n\n      // => Version: 0\n      0: function () {\n        this.HandlerDataV0 = [\n          \"byteCode\",\n          Utils.getArrayReader(\"uint8\"),\n          \"flags\",\n          \"uint32\",\n          \"name\",\n          Utils.getQWordReader(),\n        ];\n\n        this.EnvelopePointDataV0 = [\"offset\", \"float32\", \"value\", \"float32\"];\n\n        this.EnvelopeDataV0 = [\n          \"envelopePoint\",\n          Utils.getArrayReader(this.EnvelopePointDataV0),\n          \"offsetType\",\n          \"uint8\",\n          \"offsetParameter\",\n          Utils.getQWordReader(),\n        ];\n\n        this.RangeDataV0 = [\"max\", \"float32\", \"min\", \"float32\", \"min\", \"uint8\"];\n\n        this.RandomParamDataV0 = [\"time\", this.RangeDataV0, \"value\", this.RangeDataV0];\n\n        this.DynamicParamDataV0 = [\n          \"envelopeData\",\n          Utils.getPointerReader(this.EnvelopeDataV0),\n          \"randomParamData\",\n          Utils.getPointerReader(this.RandomParamDataV0),\n          \"type\",\n          \"uint8\",\n          \"value\",\n          \"float32\",\n        ];\n\n        this.AttenuationDataV0 = [\n          \"coneInsideAngle\",\n          \"float32\",\n          \"coneOutsideAngle\",\n          \"float32\",\n          \"coneOutsideVolume\",\n          \"float32\",\n          \"lowPass\",\n          this.DynamicParamDataV0,\n          \"pan3D\",\n          this.DynamicParamDataV0,\n          \"spread3D\",\n          this.DynamicParamDataV0,\n          \"volumeA\",\n          this.DynamicParamDataV0,\n        ];\n\n        this.DspDataV0 = [\"param\", Utils.getArrayReader(this.DynamicParamDataV0), \"type\", \"uint8\"];\n\n        this.FileNameDataV0 = [\n          \"audioType\",\n          \"uint8\",\n          \"fileName\",\n          Utils.getFileNameReader(),\n          \"language\",\n          Utils.getQWordReader(),\n          \"weight\",\n          \"float32\",\n        ];\n\n        this.MetaSoundDataV0 = [\n          \"attenuation\",\n          Utils.getPointerReader(this.AttenuationDataV0),\n          \"category\",\n          Utils.getQWordReader(),\n          \"channelMode\",\n          \"uint8\",\n          \"channelPriority\",\n          \"uint8\",\n          \"depth\",\n          this.DynamicParamDataV0,\n          \"dsp\",\n          Utils.getArrayReader(this.DspDataV0),\n          \"endCue\",\n          Utils.getQWordReader(),\n          \"endCueOffset\",\n          \"float32\",\n          \"fadeInTime\",\n          \"float32\",\n          \"fadeOutTime\",\n          \"float32\",\n          \"fileIterateMode\",\n          \"uint8\",\n          \"fileName\",\n          Utils.getArrayReader(this.FileNameDataV0),\n          \"flags\",\n          \"uint32\",\n          \"initialDelay\",\n          this.RangeDataV0,\n          \"loopCount\",\n          \"uint32\",\n          \"loopMode\",\n          \"uint8\",\n          \"name\",\n          Utils.getQWordReader(),\n          \"pan\",\n          this.DynamicParamDataV0,\n          \"pitch\",\n          this.DynamicParamDataV0,\n          \"playbackMode\",\n          \"uint8\",\n          \"playLength\",\n          this.RangeDataV0,\n          \"playlistId\",\n          Utils.getQWordReader(),\n          \"positionMode\",\n          \"uint8\",\n          \"positionOffset\",\n          [\"[]\", \"float32\", 3],\n          \"positionOffsetAngle\",\n          this.RangeDataV0,\n          \"positionRange\",\n          this.RangeDataV0,\n          \"repeatCount\",\n          this.RangeDataV0,\n          \"repeatTime\",\n          this.RangeDataV0,\n          \"startTimeOffset\",\n          this.RangeDataV0,\n          \"repeatTimeFrom\",\n          \"uint8\",\n          \"volume\",\n          this.DynamicParamDataV0,\n        ];\n\n        this.ScriptRefDataV0 = [\"fileName\", Utils.getFileNameReader(), \"name\", Utils.getQWordReader()];\n\n        this.TriggerMarkerDataV0 = [\n          \"cue\",\n          Utils.getQWordReader(),\n          \"end\",\n          Utils.getQWordReader(),\n          \"time\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.TriggerKeyDataV0 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"triggerMarker\",\n          Utils.getArrayReader(this.TriggerMarkerDataV0),\n        ];\n\n        this.__root = this.ScriptFileDataV0 = [\n          \"fadeInTime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"handler\",\n          Utils.getArrayReader(this.HandlerDataV0),\n          \"metaSound\",\n          Utils.getArrayReader(this.MetaSoundDataV0),\n          \"scriptRef\",\n          Utils.getArrayReader(this.ScriptRefDataV0),\n          \"triggerKey\",\n          Utils.getArrayReader(this.TriggerKeyDataV0),\n          \"volume\",\n          \"float32\",\n        ];\n      },\n    },\n  },\n];\n","const Utils = require(\"../../util/ParserUtils.js\");\n\nmodule.exports = [\n  /// ==================================================\n  /// Chunk: ANIM, versions: 26, strucTab: 0x1772EC8\n  /// ==================================================\n\n  {\n    name: \"ANIM\",\n    versions: {\n      // => Version: 25, ReferencedFunction: 0xF27630\n      25: function () {\n        this.PackGrannyAnimationTypeV1 = [\n          \"animation\",\n          Utils.getArrayReader(\"uint8\"),\n          \"pointers\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n\n        this.ModelAnimationLodV25 = [\"data\", this.PackGrannyAnimationTypeV1, \"fileFull\", Utils.getFileNameReader()];\n\n        this.ModelVisTrackDataV33 = [\"boneToken\", Utils.getQWordReader(), \"keys\", Utils.getArrayReader(\"float32\")];\n\n        this.ModelTrackTypeDataV25 = [\n          \"type\",\n          \"uint8\",\n          \"trackGroupIndex\",\n          \"uint32\",\n          \"vectorTrackIndex\",\n          \"uint32\",\n          \"initialValue\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.ModelUVAnimationV25 = [\n          \"uvAnimId\",\n          \"uint32\",\n          \"uvTransformData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV25),\n        ];\n\n        this.ModelCloudAnimV25 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"cloudTrackData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV25),\n        ];\n\n        this.ModelMatConstAnimV25 = [\n          \"materialId\",\n          \"uint32\",\n          \"constToken\",\n          \"uint32\",\n          \"trackGroupIndex\",\n          \"uint32\",\n          \"vectorTrackIndex\",\n          \"uint32\",\n          \"initialValue\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.ModelLightAnimationV25 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"lightTrackData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV25),\n        ];\n\n        this.ModelAnimPropertyDataV25 = [\n          \"id\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint32\",\n          \"time\",\n          \"float32\",\n          \"val\",\n          Utils.getQWordReader(),\n          \"strVal\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.ModelTokenMapAnimV25 = [\n          \"linkToken\",\n          Utils.getQWordReader(),\n          \"trackGroupIndex\",\n          \"uint32\",\n          \"vectorTrackIndex\",\n          \"uint32\",\n          \"initialValue\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.ModelBoneConstraintAnimV25 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"bcTrackData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV25),\n        ];\n\n        this.ModelAnchorAnimV25 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"anchorTrackData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV25),\n        ];\n\n        this.ModelStreakAnimV25 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"anchorAnim\",\n          Utils.getArrayReader(this.ModelAnchorAnimV25),\n        ];\n\n        this.ModelLightningAnimV25 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"lightningTrackData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV25),\n        ];\n\n        this.ModelWindAnimationV25 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"windTrackData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV25),\n        ];\n\n        this.ModelAnimationDataV33 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"data\",\n          this.PackGrannyAnimationTypeV1,\n          \"animLod\",\n          Utils.getPointerReader(this.ModelAnimationLodV25),\n          \"moveSpeed\",\n          \"float32\",\n          \"visTrackData\",\n          Utils.getArrayReader(this.ModelVisTrackDataV33),\n          \"uvAnimData\",\n          Utils.getArrayReader(this.ModelUVAnimationV25),\n          \"cloudAnim\",\n          Utils.getArrayReader(this.ModelCloudAnimV25),\n          \"matConstAnim\",\n          Utils.getArrayReader(this.ModelMatConstAnimV25),\n          \"morphTrackGroups\",\n          Utils.getArrayReader(\"uint16\"),\n          \"triggerTimes\",\n          Utils.getArrayReader(\"float32\"),\n          \"triggerTokens\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"lightAnimData\",\n          Utils.getArrayReader(this.ModelLightAnimationV25),\n          \"isAdditive\",\n          \"uint32\",\n          \"variantCount\",\n          \"uint32\",\n          \"variantIndices\",\n          [\"[]\", \"uint32\", 3],\n          \"properties\",\n          Utils.getArrayReader(this.ModelAnimPropertyDataV25),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"radius\",\n          \"float32\",\n          \"tokenMapAnims\",\n          Utils.getArrayReader(this.ModelTokenMapAnimV25),\n          \"bcAnim\",\n          Utils.getArrayReader(this.ModelBoneConstraintAnimV25),\n          \"streakAnim\",\n          Utils.getArrayReader(this.ModelStreakAnimV25),\n          \"lightningAnim\",\n          Utils.getArrayReader(this.ModelLightningAnimV25),\n          \"windAnimData\",\n          Utils.getArrayReader(this.ModelWindAnimationV25),\n        ];\n\n        this.ModelCompoundAnimationDataV25 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"start\",\n          Utils.getQWordReader(),\n          \"loop\",\n          Utils.getQWordReader(),\n          \"end\",\n          Utils.getQWordReader(),\n        ];\n\n        this.ModelAnimationImportSequenceV25 = [\"name\", Utils.getQWordReader(), \"duration\", \"float32\"];\n\n        this.ModelAnimationImportDataV33 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"sequences\",\n          Utils.getArrayReader(this.ModelAnimationImportSequenceV25),\n        ];\n\n        this.ModelFileAnimationBankV25 = [\n          \"animations\",\n          Utils.getRefArrayReader(this.ModelAnimationDataV33),\n          \"compoundAnimations\",\n          Utils.getArrayReader(this.ModelCompoundAnimationDataV25),\n          \"fallbacks\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"imports\",\n          Utils.getArrayReader(this.ModelAnimationImportDataV33),\n        ];\n\n        this.__root = this.ModelFileAnimationV25 = [\n          \"bank\",\n          Utils.getPointerReader(this.ModelFileAnimationBankV25),\n          \"anim\",\n          this.PackGrannyAnimationTypeV1,\n        ];\n      },\n\n      // => Version: 24, ReferencedFunction: 0xF27440\n      24: function () {\n        this.PackGrannyAnimationTypeV0 = [\"animation\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelAnimationLodV24 = [\"data\", this.PackGrannyAnimationTypeV0, \"fileFull\", Utils.getFileNameReader()];\n\n        this.ModelVisTrackDataV32 = [\"boneToken\", Utils.getQWordReader(), \"keys\", Utils.getArrayReader(\"float32\")];\n\n        this.ModelTrackTypeDataV24 = [\n          \"type\",\n          \"uint8\",\n          \"trackGroupIndex\",\n          \"uint32\",\n          \"vectorTrackIndex\",\n          \"uint32\",\n          \"initialValue\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.ModelUVAnimationV24 = [\n          \"uvAnimId\",\n          \"uint32\",\n          \"uvTransformData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV24),\n        ];\n\n        this.ModelCloudAnimV24 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"cloudTrackData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV24),\n        ];\n\n        this.ModelMatConstAnimV24 = [\n          \"materialId\",\n          \"uint32\",\n          \"constToken\",\n          \"uint32\",\n          \"trackGroupIndex\",\n          \"uint32\",\n          \"vectorTrackIndex\",\n          \"uint32\",\n          \"initialValue\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.ModelLightAnimationV24 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"lightTrackData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV24),\n        ];\n\n        this.ModelAnimPropertyDataV24 = [\n          \"id\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint32\",\n          \"time\",\n          \"float32\",\n          \"val\",\n          Utils.getQWordReader(),\n          \"strVal\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.ModelTokenMapAnimV24 = [\n          \"linkToken\",\n          Utils.getQWordReader(),\n          \"trackGroupIndex\",\n          \"uint32\",\n          \"vectorTrackIndex\",\n          \"uint32\",\n          \"initialValue\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.ModelBoneConstraintAnimV24 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"bcTrackData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV24),\n        ];\n\n        this.ModelAnchorAnimV24 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"anchorTrackData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV24),\n        ];\n\n        this.ModelStreakAnimV24 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"anchorAnim\",\n          Utils.getArrayReader(this.ModelAnchorAnimV24),\n        ];\n\n        this.ModelLightningAnimV24 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"lightningTrackData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV24),\n        ];\n\n        this.ModelWindAnimationV24 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"windTrackData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV24),\n        ];\n\n        this.ModelAnimationDataV32 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"data\",\n          this.PackGrannyAnimationTypeV0,\n          \"animLod\",\n          Utils.getPointerReader(this.ModelAnimationLodV24),\n          \"moveSpeed\",\n          \"float32\",\n          \"visTrackData\",\n          Utils.getArrayReader(this.ModelVisTrackDataV32),\n          \"uvAnimData\",\n          Utils.getArrayReader(this.ModelUVAnimationV24),\n          \"cloudAnim\",\n          Utils.getArrayReader(this.ModelCloudAnimV24),\n          \"matConstAnim\",\n          Utils.getArrayReader(this.ModelMatConstAnimV24),\n          \"morphTrackGroups\",\n          Utils.getArrayReader(\"uint16\"),\n          \"triggerTimes\",\n          Utils.getArrayReader(\"float32\"),\n          \"triggerTokens\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"lightAnimData\",\n          Utils.getArrayReader(this.ModelLightAnimationV24),\n          \"isAdditive\",\n          \"uint32\",\n          \"variantCount\",\n          \"uint32\",\n          \"variantIndices\",\n          [\"[]\", \"uint32\", 3],\n          \"properties\",\n          Utils.getArrayReader(this.ModelAnimPropertyDataV24),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"radius\",\n          \"float32\",\n          \"tokenMapAnims\",\n          Utils.getArrayReader(this.ModelTokenMapAnimV24),\n          \"bcAnim\",\n          Utils.getArrayReader(this.ModelBoneConstraintAnimV24),\n          \"streakAnim\",\n          Utils.getArrayReader(this.ModelStreakAnimV24),\n          \"lightningAnim\",\n          Utils.getArrayReader(this.ModelLightningAnimV24),\n          \"windAnimData\",\n          Utils.getArrayReader(this.ModelWindAnimationV24),\n        ];\n\n        this.ModelCompoundAnimationDataV24 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"start\",\n          Utils.getQWordReader(),\n          \"loop\",\n          Utils.getQWordReader(),\n          \"end\",\n          Utils.getQWordReader(),\n        ];\n\n        this.ModelAnimationImportSequenceV24 = [\"name\", Utils.getQWordReader(), \"duration\", \"float32\"];\n\n        this.ModelAnimationImportDataV32 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"sequences\",\n          Utils.getArrayReader(this.ModelAnimationImportSequenceV24),\n        ];\n\n        this.ModelFileAnimationBankV24 = [\n          \"animations\",\n          Utils.getRefArrayReader(this.ModelAnimationDataV32),\n          \"compoundAnimations\",\n          Utils.getArrayReader(this.ModelCompoundAnimationDataV24),\n          \"fallbacks\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"imports\",\n          Utils.getArrayReader(this.ModelAnimationImportDataV32),\n        ];\n\n        this.__root = this.ModelFileAnimationV24 = [\n          \"bank\",\n          Utils.getPointerReader(this.ModelFileAnimationBankV24),\n          \"anim\",\n          this.PackGrannyAnimationTypeV0,\n        ];\n      },\n\n      // => Version: 23, ReferencedFunction: 0xF272A0\n      23: function () {\n        this.PackGrannyAnimationTypeV0 = [\"animation\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelVisTrackDataV31 = [\"boneToken\", Utils.getQWordReader(), \"keys\", Utils.getArrayReader(\"float32\")];\n\n        this.ModelTrackTypeDataV23 = [\n          \"type\",\n          \"uint8\",\n          \"trackGroupIndex\",\n          \"uint32\",\n          \"vectorTrackIndex\",\n          \"uint32\",\n          \"initialValue\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.ModelUVAnimationV23 = [\n          \"uvAnimId\",\n          \"uint32\",\n          \"uvTransformData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV23),\n        ];\n\n        this.ModelCloudAnimV23 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"cloudTrackData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV23),\n        ];\n\n        this.ModelMatConstAnimV23 = [\n          \"materialId\",\n          \"uint32\",\n          \"constToken\",\n          \"uint32\",\n          \"trackGroupIndex\",\n          \"uint32\",\n          \"vectorTrackIndex\",\n          \"uint32\",\n          \"initialValue\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.ModelLightAnimationV23 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"lightTrackData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV23),\n        ];\n\n        this.ModelAnimPropertyDataV23 = [\n          \"id\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint32\",\n          \"time\",\n          \"float32\",\n          \"val\",\n          Utils.getQWordReader(),\n          \"strVal\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.ModelTokenMapAnimV23 = [\n          \"linkToken\",\n          Utils.getQWordReader(),\n          \"trackGroupIndex\",\n          \"uint32\",\n          \"vectorTrackIndex\",\n          \"uint32\",\n          \"initialValue\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.ModelBoneConstraintAnimV23 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"bcTrackData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV23),\n        ];\n\n        this.ModelAnchorAnimV23 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"anchorTrackData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV23),\n        ];\n\n        this.ModelStreakAnimV23 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"anchorAnim\",\n          Utils.getArrayReader(this.ModelAnchorAnimV23),\n        ];\n\n        this.ModelLightningAnimV23 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"lightningTrackData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV23),\n        ];\n\n        this.ModelWindAnimationV23 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"windTrackData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV23),\n        ];\n\n        this.ModelAnimationDataV31 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"data\",\n          this.PackGrannyAnimationTypeV0,\n          \"moveSpeed\",\n          \"float32\",\n          \"visTrackData\",\n          Utils.getArrayReader(this.ModelVisTrackDataV31),\n          \"uvAnimData\",\n          Utils.getArrayReader(this.ModelUVAnimationV23),\n          \"cloudAnim\",\n          Utils.getArrayReader(this.ModelCloudAnimV23),\n          \"matConstAnim\",\n          Utils.getArrayReader(this.ModelMatConstAnimV23),\n          \"morphTrackGroups\",\n          Utils.getArrayReader(\"uint16\"),\n          \"triggerTimes\",\n          Utils.getArrayReader(\"float32\"),\n          \"triggerTokens\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"lightAnimData\",\n          Utils.getArrayReader(this.ModelLightAnimationV23),\n          \"isAdditive\",\n          \"uint32\",\n          \"variantCount\",\n          \"uint32\",\n          \"variantIndices\",\n          [\"[]\", \"uint32\", 3],\n          \"properties\",\n          Utils.getArrayReader(this.ModelAnimPropertyDataV23),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"radius\",\n          \"float32\",\n          \"tokenMapAnims\",\n          Utils.getArrayReader(this.ModelTokenMapAnimV23),\n          \"bcAnim\",\n          Utils.getArrayReader(this.ModelBoneConstraintAnimV23),\n          \"streakAnim\",\n          Utils.getArrayReader(this.ModelStreakAnimV23),\n          \"lightningAnim\",\n          Utils.getArrayReader(this.ModelLightningAnimV23),\n          \"windAnimData\",\n          Utils.getArrayReader(this.ModelWindAnimationV23),\n        ];\n\n        this.ModelCompoundAnimationDataV23 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"start\",\n          Utils.getQWordReader(),\n          \"loop\",\n          Utils.getQWordReader(),\n          \"end\",\n          Utils.getQWordReader(),\n        ];\n\n        this.ModelAnimationImportSequenceV23 = [\"name\", Utils.getQWordReader(), \"duration\", \"float32\"];\n\n        this.ModelAnimationImportDataV31 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"sequences\",\n          Utils.getArrayReader(this.ModelAnimationImportSequenceV23),\n        ];\n\n        this.__root = this.ModelFileAnimationBankV23 = [\n          \"animations\",\n          Utils.getRefArrayReader(this.ModelAnimationDataV31),\n          \"compoundAnimations\",\n          Utils.getArrayReader(this.ModelCompoundAnimationDataV23),\n          \"fallbacks\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"imports\",\n          Utils.getArrayReader(this.ModelAnimationImportDataV31),\n        ];\n      },\n\n      // => Version: 22\n      22: function () {\n        this.PackGrannyAnimationTypeV0 = [\"animation\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelVisTrackDataV30 = [\"boneToken\", Utils.getQWordReader(), \"keys\", Utils.getArrayReader(\"float32\")];\n\n        this.ModelTrackTypeDataV22 = [\n          \"type\",\n          \"uint8\",\n          \"trackGroupIndex\",\n          \"uint32\",\n          \"vectorTrackIndex\",\n          \"uint32\",\n          \"initialValue\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.ModelUVAnimationV22 = [\n          \"uvAnimId\",\n          \"uint32\",\n          \"uvTransformData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV22),\n        ];\n\n        this.ModelCloudAnimV22 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"cloudTrackData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV22),\n        ];\n\n        this.ModelMatConstAnimV22 = [\n          \"materialId\",\n          \"uint32\",\n          \"constToken\",\n          \"uint32\",\n          \"trackGroupIndex\",\n          \"uint32\",\n          \"vectorTrackIndex\",\n          \"uint32\",\n          \"initialValue\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.ModelLightAnimationV22 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"lightTrackData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV22),\n        ];\n\n        this.ModelAnimPropertyDataV22 = [\n          \"id\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint32\",\n          \"time\",\n          \"float32\",\n          \"val\",\n          Utils.getQWordReader(),\n          \"strVal\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.ModelTokenMapAnimV22 = [\n          \"linkToken\",\n          Utils.getQWordReader(),\n          \"trackGroupIndex\",\n          \"uint32\",\n          \"vectorTrackIndex\",\n          \"uint32\",\n          \"initialValue\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.ModelBoneConstraintAnimV22 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"bcTrackData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV22),\n        ];\n\n        this.ModelAnchorAnimV22 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"anchorTrackData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV22),\n        ];\n\n        this.ModelStreakAnimV22 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"anchorAnim\",\n          Utils.getArrayReader(this.ModelAnchorAnimV22),\n        ];\n\n        this.ModelLightningAnimV22 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"lightningTrackData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV22),\n        ];\n\n        this.ModelWindAnimationV22 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"windTrackData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV22),\n        ];\n\n        this.ModelAnimationDataV30 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"data\",\n          this.PackGrannyAnimationTypeV0,\n          \"moveSpeed\",\n          \"float32\",\n          \"visTrackData\",\n          Utils.getArrayReader(this.ModelVisTrackDataV30),\n          \"uvAnimData\",\n          Utils.getArrayReader(this.ModelUVAnimationV22),\n          \"cloudAnim\",\n          Utils.getArrayReader(this.ModelCloudAnimV22),\n          \"matConstAnim\",\n          Utils.getArrayReader(this.ModelMatConstAnimV22),\n          \"morphTrackGroups\",\n          Utils.getArrayReader(\"uint16\"),\n          \"triggerTimes\",\n          Utils.getArrayReader(\"float32\"),\n          \"triggerTokens\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"lightAnimData\",\n          Utils.getArrayReader(this.ModelLightAnimationV22),\n          \"isAdditive\",\n          \"uint32\",\n          \"variantCount\",\n          \"uint32\",\n          \"variantIndices\",\n          [\"[]\", \"uint32\", 3],\n          \"properties\",\n          Utils.getArrayReader(this.ModelAnimPropertyDataV22),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"radius\",\n          \"float32\",\n          \"tokenMapAnims\",\n          Utils.getArrayReader(this.ModelTokenMapAnimV22),\n          \"bcAnim\",\n          Utils.getArrayReader(this.ModelBoneConstraintAnimV22),\n          \"streakAnim\",\n          Utils.getArrayReader(this.ModelStreakAnimV22),\n          \"lightningAnim\",\n          Utils.getArrayReader(this.ModelLightningAnimV22),\n          \"windAnimData\",\n          Utils.getArrayReader(this.ModelWindAnimationV22),\n        ];\n\n        this.ModelCompoundAnimationDataV22 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"start\",\n          Utils.getQWordReader(),\n          \"loop\",\n          Utils.getQWordReader(),\n          \"end\",\n          Utils.getQWordReader(),\n        ];\n\n        this.ModelAnimationImportSequenceV22 = [\"name\", Utils.getQWordReader(), \"duration\", \"float32\"];\n\n        this.ModelAnimationImportDataV30 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"sequences\",\n          Utils.getArrayReader(this.ModelAnimationImportSequenceV22),\n        ];\n\n        this.__root = this.ModelFileAnimationBankV22 = [\n          \"animations\",\n          Utils.getRefArrayReader(this.ModelAnimationDataV30),\n          \"compoundAnimations\",\n          Utils.getArrayReader(this.ModelCompoundAnimationDataV22),\n          \"fallbacks\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"imports\",\n          Utils.getArrayReader(this.ModelAnimationImportDataV30),\n        ];\n      },\n\n      // => Version: 21\n      21: function () {\n        this.PackGrannyAnimationTypeV0 = [\"animation\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelVisTrackDataV29 = [\"boneToken\", Utils.getQWordReader(), \"keys\", Utils.getArrayReader(\"float32\")];\n\n        this.ModelTrackTypeDataV21 = [\n          \"type\",\n          \"uint8\",\n          \"trackGroupIndex\",\n          \"uint32\",\n          \"vectorTrackIndex\",\n          \"uint32\",\n          \"initialValue\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.ModelUVAnimationV21 = [\n          \"uvAnimId\",\n          \"uint32\",\n          \"uvTransformData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV21),\n        ];\n\n        this.ModelCloudAnimV21 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"cloudTrackData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV21),\n        ];\n\n        this.ModelMatConstAnimV21 = [\n          \"materialId\",\n          \"uint32\",\n          \"constToken\",\n          \"uint32\",\n          \"trackGroupIndex\",\n          \"uint32\",\n          \"vectorTrackIndex\",\n          \"uint32\",\n          \"initialValue\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.ModelLightAnimationV21 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"lightTrackData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV21),\n        ];\n\n        this.ModelAnimPropertyDataV21 = [\n          \"id\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint32\",\n          \"time\",\n          \"float32\",\n          \"val\",\n          Utils.getQWordReader(),\n          \"strVal\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.ModelTokenMapAnimV21 = [\n          \"linkToken\",\n          Utils.getQWordReader(),\n          \"trackGroupIndex\",\n          \"uint32\",\n          \"vectorTrackIndex\",\n          \"uint32\",\n          \"initialValue\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.ModelBoneConstraintAnimV21 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"bcTrackData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV21),\n        ];\n\n        this.ModelAnchorAnimV21 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"anchorTrackData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV21),\n        ];\n\n        this.ModelStreakAnimV21 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"anchorAnim\",\n          Utils.getArrayReader(this.ModelAnchorAnimV21),\n        ];\n\n        this.ModelLightningAnimV21 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"lightningTrackData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV21),\n        ];\n\n        this.ModelWindAnimationV21 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"windTrackData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV21),\n        ];\n\n        this.ModelAnimationDataV29 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"data\",\n          this.PackGrannyAnimationTypeV0,\n          \"moveSpeed\",\n          \"float32\",\n          \"visTrackData\",\n          Utils.getArrayReader(this.ModelVisTrackDataV29),\n          \"uvAnimData\",\n          Utils.getArrayReader(this.ModelUVAnimationV21),\n          \"cloudAnim\",\n          Utils.getArrayReader(this.ModelCloudAnimV21),\n          \"matConstAnim\",\n          Utils.getArrayReader(this.ModelMatConstAnimV21),\n          \"morphTrackGroups\",\n          Utils.getArrayReader(\"uint16\"),\n          \"triggerTimes\",\n          Utils.getArrayReader(\"float32\"),\n          \"triggerTokens\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"lightAnimData\",\n          Utils.getArrayReader(this.ModelLightAnimationV21),\n          \"isAdditive\",\n          \"uint32\",\n          \"variantCount\",\n          \"uint32\",\n          \"variantIndices\",\n          [\"[]\", \"uint32\", 3],\n          \"properties\",\n          Utils.getArrayReader(this.ModelAnimPropertyDataV21),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"radius\",\n          \"float32\",\n          \"tokenMapAnims\",\n          Utils.getArrayReader(this.ModelTokenMapAnimV21),\n          \"bcAnim\",\n          Utils.getArrayReader(this.ModelBoneConstraintAnimV21),\n          \"streakAnim\",\n          Utils.getArrayReader(this.ModelStreakAnimV21),\n          \"lightningAnim\",\n          Utils.getArrayReader(this.ModelLightningAnimV21),\n          \"windAnimData\",\n          Utils.getArrayReader(this.ModelWindAnimationV21),\n        ];\n\n        this.ModelCompoundAnimationDataV21 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"start\",\n          Utils.getQWordReader(),\n          \"loop\",\n          Utils.getQWordReader(),\n          \"end\",\n          Utils.getQWordReader(),\n        ];\n\n        this.ModelAnimationImportSequenceV21 = [\"name\", Utils.getQWordReader(), \"duration\", \"float32\"];\n\n        this.ModelAnimationImportDataV29 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"sequences\",\n          Utils.getArrayReader(this.ModelAnimationImportSequenceV21),\n        ];\n\n        this.__root = this.ModelFileAnimationBankV21 = [\n          \"animations\",\n          Utils.getRefArrayReader(this.ModelAnimationDataV29),\n          \"compoundAnimations\",\n          Utils.getArrayReader(this.ModelCompoundAnimationDataV21),\n          \"fallbacks\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"imports\",\n          Utils.getArrayReader(this.ModelAnimationImportDataV29),\n          \"modelReference\",\n          Utils.getFileNameReader(),\n        ];\n      },\n\n      // => Version: 20\n      20: function () {\n        this.PackGrannyAnimationTypeV0 = [\"animation\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelVisTrackDataV28 = [\"boneToken\", Utils.getQWordReader(), \"keys\", Utils.getArrayReader(\"float32\")];\n\n        this.ModelTrackTypeDataV20 = [\n          \"type\",\n          \"uint8\",\n          \"trackGroupIndex\",\n          \"uint32\",\n          \"vectorTrackIndex\",\n          \"uint32\",\n          \"initialValue\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.ModelUVAnimationV20 = [\n          \"uvAnimId\",\n          \"uint32\",\n          \"uvTransformData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV20),\n        ];\n\n        this.ModelCloudAnimV20 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"cloudTrackData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV20),\n        ];\n\n        this.ModelMatConstAnimV20 = [\n          \"materialId\",\n          \"uint32\",\n          \"constToken\",\n          \"uint32\",\n          \"trackGroupIndex\",\n          \"uint32\",\n          \"vectorTrackIndex\",\n          \"uint32\",\n          \"initialValue\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.ModelLightAnimationV20 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"lightTrackData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV20),\n        ];\n\n        this.ModelAnimPropertyDataV20 = [\n          \"id\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint32\",\n          \"time\",\n          \"float32\",\n          \"val\",\n          Utils.getQWordReader(),\n          \"strVal\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.ModelTokenMapAnimV20 = [\n          \"linkToken\",\n          Utils.getQWordReader(),\n          \"trackGroupIndex\",\n          \"uint32\",\n          \"vectorTrackIndex\",\n          \"uint32\",\n          \"initialValue\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.ModelBoneConstraintAnimV20 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"bcTrackData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV20),\n        ];\n\n        this.ModelAnchorAnimV20 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"anchorTrackData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV20),\n        ];\n\n        this.ModelStreakAnimV20 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"anchorAnim\",\n          Utils.getArrayReader(this.ModelAnchorAnimV20),\n        ];\n\n        this.ModelLightningAnimV20 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"lightningTrackData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV20),\n        ];\n\n        this.ModelAnimationDataV28 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"data\",\n          this.PackGrannyAnimationTypeV0,\n          \"moveSpeed\",\n          \"float32\",\n          \"visTrackData\",\n          Utils.getArrayReader(this.ModelVisTrackDataV28),\n          \"uvAnimData\",\n          Utils.getArrayReader(this.ModelUVAnimationV20),\n          \"cloudAnim\",\n          Utils.getArrayReader(this.ModelCloudAnimV20),\n          \"matConstAnim\",\n          Utils.getArrayReader(this.ModelMatConstAnimV20),\n          \"morphTrackGroups\",\n          Utils.getArrayReader(\"uint16\"),\n          \"triggerTimes\",\n          Utils.getArrayReader(\"float32\"),\n          \"triggerTokens\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"lightAnimData\",\n          Utils.getArrayReader(this.ModelLightAnimationV20),\n          \"isAdditive\",\n          \"uint32\",\n          \"variantCount\",\n          \"uint32\",\n          \"variantIndices\",\n          [\"[]\", \"uint32\", 3],\n          \"properties\",\n          Utils.getArrayReader(this.ModelAnimPropertyDataV20),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"radius\",\n          \"float32\",\n          \"tokenMapAnims\",\n          Utils.getArrayReader(this.ModelTokenMapAnimV20),\n          \"bcAnim\",\n          Utils.getArrayReader(this.ModelBoneConstraintAnimV20),\n          \"streakAnim\",\n          Utils.getArrayReader(this.ModelStreakAnimV20),\n          \"lightningAnim\",\n          Utils.getArrayReader(this.ModelLightningAnimV20),\n        ];\n\n        this.ModelCompoundAnimationDataV20 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"start\",\n          Utils.getQWordReader(),\n          \"loop\",\n          Utils.getQWordReader(),\n          \"end\",\n          Utils.getQWordReader(),\n        ];\n\n        this.ModelAnimationImportSequenceV20 = [\"name\", Utils.getQWordReader(), \"duration\", \"float32\"];\n\n        this.ModelAnimationImportDataV28 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"sequences\",\n          Utils.getArrayReader(this.ModelAnimationImportSequenceV20),\n        ];\n\n        this.__root = this.ModelFileAnimationBankV20 = [\n          \"animations\",\n          Utils.getRefArrayReader(this.ModelAnimationDataV28),\n          \"compoundAnimations\",\n          Utils.getArrayReader(this.ModelCompoundAnimationDataV20),\n          \"fallbacks\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"imports\",\n          Utils.getArrayReader(this.ModelAnimationImportDataV28),\n          \"modelReference\",\n          Utils.getFileNameReader(),\n        ];\n      },\n\n      // => Version: 19\n      19: function () {\n        this.PackGrannyAnimationTypeV0 = [\"animation\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelVisTrackDataV27 = [\"boneToken\", Utils.getQWordReader(), \"keys\", Utils.getArrayReader(\"float32\")];\n\n        this.ModelTrackTypeDataV19 = [\n          \"type\",\n          \"uint8\",\n          \"trackGroupIndex\",\n          \"uint32\",\n          \"vectorTrackIndex\",\n          \"uint32\",\n          \"initialValue\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.ModelUVAnimationV19 = [\n          \"uvAnimId\",\n          \"uint32\",\n          \"uvTransformData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV19),\n        ];\n\n        this.ModelCloudAnimV19 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"cloudTrackData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV19),\n        ];\n\n        this.ModelMatConstAnimV19 = [\n          \"materialId\",\n          \"uint32\",\n          \"constToken\",\n          \"uint32\",\n          \"trackGroupIndex\",\n          \"uint32\",\n          \"vectorTrackIndex\",\n          \"uint32\",\n          \"initialValue\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.ModelLightAnimationV19 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"lightTrackData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV19),\n        ];\n\n        this.ModelAnimPropertyDataV19 = [\n          \"id\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint32\",\n          \"time\",\n          \"float32\",\n          \"val\",\n          Utils.getQWordReader(),\n          \"strVal\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.ModelTokenMapAnimV19 = [\n          \"linkToken\",\n          Utils.getQWordReader(),\n          \"trackGroupIndex\",\n          \"uint32\",\n          \"vectorTrackIndex\",\n          \"uint32\",\n          \"initialValue\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.ModelBoneConstraintAnimV19 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"bcTrackData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV19),\n        ];\n\n        this.ModelAnchorAnimV19 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"anchorTrackData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV19),\n        ];\n\n        this.ModelStreakAnimV19 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"anchorAnim\",\n          Utils.getArrayReader(this.ModelAnchorAnimV19),\n        ];\n\n        this.ModelAnimationDataV27 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"data\",\n          this.PackGrannyAnimationTypeV0,\n          \"moveSpeed\",\n          \"float32\",\n          \"visTrackData\",\n          Utils.getArrayReader(this.ModelVisTrackDataV27),\n          \"uvAnimData\",\n          Utils.getArrayReader(this.ModelUVAnimationV19),\n          \"cloudAnim\",\n          Utils.getArrayReader(this.ModelCloudAnimV19),\n          \"matConstAnim\",\n          Utils.getArrayReader(this.ModelMatConstAnimV19),\n          \"morphTrackGroups\",\n          Utils.getArrayReader(\"uint16\"),\n          \"triggerTimes\",\n          Utils.getArrayReader(\"float32\"),\n          \"triggerTokens\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"lightAnimData\",\n          Utils.getArrayReader(this.ModelLightAnimationV19),\n          \"isAdditive\",\n          \"uint32\",\n          \"variantCount\",\n          \"uint32\",\n          \"variantIndices\",\n          [\"[]\", \"uint32\", 3],\n          \"properties\",\n          Utils.getArrayReader(this.ModelAnimPropertyDataV19),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"radius\",\n          \"float32\",\n          \"tokenMapAnims\",\n          Utils.getArrayReader(this.ModelTokenMapAnimV19),\n          \"bcAnim\",\n          Utils.getArrayReader(this.ModelBoneConstraintAnimV19),\n          \"streakAnim\",\n          Utils.getArrayReader(this.ModelStreakAnimV19),\n        ];\n\n        this.ModelCompoundAnimationDataV19 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"start\",\n          Utils.getQWordReader(),\n          \"loop\",\n          Utils.getQWordReader(),\n          \"end\",\n          Utils.getQWordReader(),\n        ];\n\n        this.ModelAnimationImportSequenceV19 = [\"name\", Utils.getQWordReader(), \"duration\", \"float32\"];\n\n        this.ModelAnimationImportDataV27 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"sequences\",\n          Utils.getArrayReader(this.ModelAnimationImportSequenceV19),\n        ];\n\n        this.__root = this.ModelFileAnimationBankV19 = [\n          \"animations\",\n          Utils.getRefArrayReader(this.ModelAnimationDataV27),\n          \"compoundAnimations\",\n          Utils.getArrayReader(this.ModelCompoundAnimationDataV19),\n          \"fallbacks\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"imports\",\n          Utils.getArrayReader(this.ModelAnimationImportDataV27),\n          \"modelReference\",\n          Utils.getFileNameReader(),\n        ];\n      },\n\n      // => Version: 18, ReferencedFunction: 0xF271F0\n      18: function () {\n        this.PackGrannyAnimationTypeV0 = [\"animation\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelVisTrackDataV26 = [\"boneToken\", Utils.getQWordReader(), \"keys\", Utils.getArrayReader(\"float32\")];\n\n        this.ModelTrackTypeDataV18 = [\n          \"type\",\n          \"uint8\",\n          \"trackGroupIndex\",\n          \"uint32\",\n          \"vectorTrackIndex\",\n          \"uint32\",\n          \"initialValue\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.ModelUVAnimationV18 = [\n          \"uvAnimId\",\n          \"uint32\",\n          \"uvTransformData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV18),\n        ];\n\n        this.ModelCloudAnimV18 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"cloudTrackData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV18),\n        ];\n\n        this.ModelMatConstAnimV18 = [\n          \"materialId\",\n          \"uint32\",\n          \"constToken\",\n          \"uint32\",\n          \"trackGroupIndex\",\n          \"uint32\",\n          \"vectorTrackIndex\",\n          \"uint32\",\n          \"initialValue\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.ModelLightAnimationV18 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"lightTrackData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV18),\n        ];\n\n        this.ModelAnimPropertyDataV18 = [\n          \"id\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint32\",\n          \"time\",\n          \"float32\",\n          \"val\",\n          Utils.getQWordReader(),\n          \"strVal\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.ModelTokenMapAnimV18 = [\n          \"linkToken\",\n          Utils.getQWordReader(),\n          \"trackGroupIndex\",\n          \"uint32\",\n          \"vectorTrackIndex\",\n          \"uint32\",\n          \"initialValue\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.ModelBoneConstraintAnimV18 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"bcTrackData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV18),\n        ];\n\n        this.ModelAnchorAnimV18 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"anchorTrackData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV18),\n        ];\n\n        this.ModelStreakAnimV18 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"anchorAnim\",\n          Utils.getArrayReader(this.ModelAnchorAnimV18),\n        ];\n\n        this.ModelAnimationDataV26 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"data\",\n          this.PackGrannyAnimationTypeV0,\n          \"moveSpeed\",\n          \"float32\",\n          \"visTrackData\",\n          Utils.getArrayReader(this.ModelVisTrackDataV26),\n          \"uvAnimData\",\n          Utils.getArrayReader(this.ModelUVAnimationV18),\n          \"cloudAnim\",\n          Utils.getArrayReader(this.ModelCloudAnimV18),\n          \"matConstAnim\",\n          Utils.getArrayReader(this.ModelMatConstAnimV18),\n          \"morphTrackGroups\",\n          Utils.getArrayReader(\"uint16\"),\n          \"triggerTimes\",\n          Utils.getArrayReader(\"float32\"),\n          \"triggerTokens\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"lightAnimData\",\n          Utils.getArrayReader(this.ModelLightAnimationV18),\n          \"isAdditive\",\n          \"uint32\",\n          \"variantCount\",\n          \"uint32\",\n          \"variantIndices\",\n          [\"[]\", \"uint32\", 3],\n          \"properties\",\n          Utils.getArrayReader(this.ModelAnimPropertyDataV18),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"radius\",\n          \"float32\",\n          \"tokenMapAnims\",\n          Utils.getArrayReader(this.ModelTokenMapAnimV18),\n          \"bcAnim\",\n          Utils.getArrayReader(this.ModelBoneConstraintAnimV18),\n          \"streakAnim\",\n          Utils.getArrayReader(this.ModelStreakAnimV18),\n        ];\n\n        this.ModelCompoundAnimationDataV18 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"start\",\n          Utils.getQWordReader(),\n          \"loop\",\n          Utils.getQWordReader(),\n          \"end\",\n          Utils.getQWordReader(),\n        ];\n\n        this.ModelAnimationImportSequenceV18 = [\"name\", Utils.getQWordReader(), \"duration\", \"float32\"];\n\n        this.ModelAnimationImportDataV26 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"sequences\",\n          Utils.getArrayReader(this.ModelAnimationImportSequenceV18),\n        ];\n\n        this.__root = this.ModelFileAnimationBankV18 = [\n          \"animations\",\n          Utils.getRefArrayReader(this.ModelAnimationDataV26),\n          \"compoundAnimations\",\n          Utils.getArrayReader(this.ModelCompoundAnimationDataV18),\n          \"fallbacks\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"imports\",\n          Utils.getArrayReader(this.ModelAnimationImportDataV26),\n        ];\n      },\n\n      // => Version: 17, ReferencedFunction: 0xF26BD0\n      17: function () {\n        this.PackGrannyAnimationTypeV0 = [\"animation\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelVisTrackDataV25 = [\"boneToken\", Utils.getQWordReader(), \"keys\", Utils.getArrayReader(\"float32\")];\n\n        this.ModelTrackTypeDataV17 = [\n          \"type\",\n          \"uint8\",\n          \"trackGroupIndex\",\n          \"uint32\",\n          \"vectorTrackIndex\",\n          \"uint32\",\n          \"initialValue\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.ModelUVAnimationV17 = [\n          \"uvAnimId\",\n          \"uint32\",\n          \"uvTransformData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV17),\n        ];\n\n        this.ModelCloudAnimV17 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"cloudTrackData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV17),\n        ];\n\n        this.ModelMatConstAnimV17 = [\n          \"matIndex\",\n          \"uint32\",\n          \"constToken\",\n          \"uint32\",\n          \"trackGroupIndex\",\n          \"uint32\",\n          \"vectorTrackIndex\",\n          \"uint32\",\n          \"initialValue\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.ModelLightAnimationV17 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"lightTrackData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV17),\n        ];\n\n        this.ModelAnimPropertyDataV17 = [\n          \"id\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint32\",\n          \"time\",\n          \"float32\",\n          \"val\",\n          Utils.getQWordReader(),\n          \"strVal\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.ModelTokenMapAnimV17 = [\n          \"linkToken\",\n          Utils.getQWordReader(),\n          \"trackGroupIndex\",\n          \"uint32\",\n          \"vectorTrackIndex\",\n          \"uint32\",\n          \"initialValue\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.ModelBoneConstraintAnimV17 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"bcTrackData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV17),\n        ];\n\n        this.ModelAnchorAnimV17 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"anchorTrackData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV17),\n        ];\n\n        this.ModelStreakAnimV17 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"anchorAnim\",\n          Utils.getArrayReader(this.ModelAnchorAnimV17),\n        ];\n\n        this.ModelAnimationDataV25 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"data\",\n          this.PackGrannyAnimationTypeV0,\n          \"moveSpeed\",\n          \"float32\",\n          \"visTrackData\",\n          Utils.getArrayReader(this.ModelVisTrackDataV25),\n          \"uvAnimData\",\n          Utils.getArrayReader(this.ModelUVAnimationV17),\n          \"cloudAnim\",\n          Utils.getArrayReader(this.ModelCloudAnimV17),\n          \"matConstAnim\",\n          Utils.getArrayReader(this.ModelMatConstAnimV17),\n          \"morphTrackGroups\",\n          Utils.getArrayReader(\"uint16\"),\n          \"triggerTimes\",\n          Utils.getArrayReader(\"float32\"),\n          \"triggerTokens\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"lightAnimData\",\n          Utils.getArrayReader(this.ModelLightAnimationV17),\n          \"isAdditive\",\n          \"uint32\",\n          \"variantCount\",\n          \"uint32\",\n          \"variantIndices\",\n          [\"[]\", \"uint32\", 3],\n          \"properties\",\n          Utils.getArrayReader(this.ModelAnimPropertyDataV17),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"radius\",\n          \"float32\",\n          \"tokenMapAnims\",\n          Utils.getArrayReader(this.ModelTokenMapAnimV17),\n          \"bcAnim\",\n          Utils.getArrayReader(this.ModelBoneConstraintAnimV17),\n          \"streakAnim\",\n          Utils.getArrayReader(this.ModelStreakAnimV17),\n        ];\n\n        this.ModelCompoundAnimationDataV17 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"start\",\n          Utils.getQWordReader(),\n          \"loop\",\n          Utils.getQWordReader(),\n          \"end\",\n          Utils.getQWordReader(),\n        ];\n\n        this.ModelAnimationImportSequenceV17 = [\"name\", Utils.getQWordReader(), \"duration\", \"float32\"];\n\n        this.ModelAnimationImportDataV25 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"sequences\",\n          Utils.getArrayReader(this.ModelAnimationImportSequenceV17),\n        ];\n\n        this.__root = this.ModelFileAnimationBankV17 = [\n          \"animations\",\n          Utils.getRefArrayReader(this.ModelAnimationDataV25),\n          \"compoundAnimations\",\n          Utils.getArrayReader(this.ModelCompoundAnimationDataV17),\n          \"fallbacks\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"imports\",\n          Utils.getArrayReader(this.ModelAnimationImportDataV25),\n        ];\n      },\n\n      // => Version: 16\n      16: function () {\n        this.PackGrannyAnimationTypeV0 = [\"animation\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelVisTrackDataV24 = [\"boneToken\", Utils.getQWordReader(), \"keys\", Utils.getArrayReader(\"float32\")];\n\n        this.ModelTrackTypeDataV16 = [\n          \"type\",\n          \"uint8\",\n          \"trackGroupIndex\",\n          \"uint32\",\n          \"vectorTrackIndex\",\n          \"uint32\",\n          \"initialValue\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.ModelUVAnimationV16 = [\n          \"uvAnimId\",\n          \"uint32\",\n          \"uvTransformData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV16),\n        ];\n\n        this.ModelCloudAnimV16 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"cloudTrackData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV16),\n        ];\n\n        this.ModelMatConstAnimV16 = [\n          \"matIndex\",\n          \"uint32\",\n          \"constToken\",\n          \"uint32\",\n          \"trackGroupIndex\",\n          \"uint32\",\n          \"vectorTrackIndex\",\n          \"uint32\",\n          \"initialValue\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.ModelLightAnimationV16 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"lightTrackData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV16),\n        ];\n\n        this.ModelAnimPropertyDataV16 = [\n          \"id\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint32\",\n          \"time\",\n          \"float32\",\n          \"val\",\n          Utils.getQWordReader(),\n          \"strVal\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.ModelTokenMapAnimV16 = [\n          \"linkToken\",\n          Utils.getQWordReader(),\n          \"trackGroupIndex\",\n          \"uint32\",\n          \"vectorTrackIndex\",\n          \"uint32\",\n          \"initialValue\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.ModelBoneConstraintAnimV16 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"bcTrackData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV16),\n        ];\n\n        this.ModelAnchorAnimV16 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"anchorTrackData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV16),\n        ];\n\n        this.ModelStreakAnimV16 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"anchorAnim\",\n          Utils.getArrayReader(this.ModelAnchorAnimV16),\n        ];\n\n        this.ModelAnimationDataV24 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"data\",\n          this.PackGrannyAnimationTypeV0,\n          \"moveSpeed\",\n          \"float32\",\n          \"visTrackData\",\n          Utils.getArrayReader(this.ModelVisTrackDataV24),\n          \"uvAnimData\",\n          Utils.getArrayReader(this.ModelUVAnimationV16),\n          \"cloudAnim\",\n          Utils.getArrayReader(this.ModelCloudAnimV16),\n          \"matConstAnim\",\n          Utils.getArrayReader(this.ModelMatConstAnimV16),\n          \"morphTrackGroups\",\n          Utils.getArrayReader(\"uint16\"),\n          \"triggerTimes\",\n          Utils.getArrayReader(\"float32\"),\n          \"triggerTokens\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"lightAnimData\",\n          Utils.getArrayReader(this.ModelLightAnimationV16),\n          \"isAdditive\",\n          \"uint32\",\n          \"variantCount\",\n          \"uint32\",\n          \"variantIndices\",\n          [\"[]\", \"uint32\", 3],\n          \"properties\",\n          Utils.getArrayReader(this.ModelAnimPropertyDataV16),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"radius\",\n          \"float32\",\n          \"tokenMapAnims\",\n          Utils.getArrayReader(this.ModelTokenMapAnimV16),\n          \"bcAnim\",\n          Utils.getArrayReader(this.ModelBoneConstraintAnimV16),\n          \"streakAnim\",\n          Utils.getArrayReader(this.ModelStreakAnimV16),\n        ];\n\n        this.ModelCompoundAnimationDataV16 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"start\",\n          Utils.getQWordReader(),\n          \"loop\",\n          Utils.getQWordReader(),\n          \"end\",\n          Utils.getQWordReader(),\n        ];\n\n        this.ModelAnimationImportDataV24 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"sequenceTokens\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.__root = this.ModelFileAnimationBankV16 = [\n          \"animations\",\n          Utils.getRefArrayReader(this.ModelAnimationDataV24),\n          \"compoundAnimations\",\n          Utils.getArrayReader(this.ModelCompoundAnimationDataV16),\n          \"fallbacks\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"imports\",\n          Utils.getArrayReader(this.ModelAnimationImportDataV24),\n        ];\n      },\n\n      // => Version: 15\n      15: function () {\n        this.ModelVisTrackDataV23 = [\"boneToken\", Utils.getQWordReader(), \"keys\", Utils.getArrayReader(\"float32\")];\n\n        this.ModelTrackTypeDataV15 = [\n          \"type\",\n          \"uint8\",\n          \"trackGroupIndex\",\n          \"uint32\",\n          \"vectorTrackIndex\",\n          \"uint32\",\n          \"initialValue\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.ModelUVAnimationV15 = [\n          \"uvAnimId\",\n          \"uint32\",\n          \"uvTransformData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV15),\n        ];\n\n        this.ModelCloudAnimV15 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"cloudTrackData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV15),\n        ];\n\n        this.ModelMatConstAnimV15 = [\n          \"matIndex\",\n          \"uint32\",\n          \"constToken\",\n          \"uint32\",\n          \"trackGroupIndex\",\n          \"uint32\",\n          \"vectorTrackIndex\",\n          \"uint32\",\n          \"initialValue\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.ModelLightAnimationV15 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"lightTrackData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV15),\n        ];\n\n        this.ModelAnimPropertyDataV15 = [\n          \"id\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint32\",\n          \"time\",\n          \"float32\",\n          \"val\",\n          Utils.getQWordReader(),\n          \"strVal\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.ModelTokenMapAnimV15 = [\n          \"linkToken\",\n          Utils.getQWordReader(),\n          \"trackGroupIndex\",\n          \"uint32\",\n          \"vectorTrackIndex\",\n          \"uint32\",\n          \"initialValue\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.ModelBoneConstraintAnimV15 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"bcTrackData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV15),\n        ];\n\n        this.ModelAnimationDataV23 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"data\",\n          Utils.getArrayReader(\"uint8\"),\n          \"moveSpeed\",\n          \"float32\",\n          \"visTrackData\",\n          Utils.getArrayReader(this.ModelVisTrackDataV23),\n          \"uvAnimData\",\n          Utils.getArrayReader(this.ModelUVAnimationV15),\n          \"cloudAnim\",\n          Utils.getArrayReader(this.ModelCloudAnimV15),\n          \"matConstAnim\",\n          Utils.getArrayReader(this.ModelMatConstAnimV15),\n          \"morphTrackGroups\",\n          Utils.getArrayReader(\"uint16\"),\n          \"triggerTimes\",\n          Utils.getArrayReader(\"float32\"),\n          \"triggerTokens\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"lightAnimData\",\n          Utils.getArrayReader(this.ModelLightAnimationV15),\n          \"isAdditive\",\n          \"uint32\",\n          \"variantCount\",\n          \"uint32\",\n          \"variantIndices\",\n          [\"[]\", \"uint32\", 3],\n          \"properties\",\n          Utils.getArrayReader(this.ModelAnimPropertyDataV15),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"radius\",\n          \"float32\",\n          \"tokenMapAnims\",\n          Utils.getArrayReader(this.ModelTokenMapAnimV15),\n          \"bcAnim\",\n          Utils.getArrayReader(this.ModelBoneConstraintAnimV15),\n        ];\n\n        this.ModelCompoundAnimationDataV15 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"start\",\n          Utils.getQWordReader(),\n          \"loop\",\n          Utils.getQWordReader(),\n          \"end\",\n          Utils.getQWordReader(),\n        ];\n\n        this.ModelAnimationImportDataV23 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"sequenceTokens\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.__root = this.ModelFileAnimationBankV15 = [\n          \"animations\",\n          Utils.getRefArrayReader(this.ModelAnimationDataV23),\n          \"compoundAnimations\",\n          Utils.getArrayReader(this.ModelCompoundAnimationDataV15),\n          \"fallbacks\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"imports\",\n          Utils.getArrayReader(this.ModelAnimationImportDataV23),\n        ];\n      },\n\n      // => Version: 14, ReferencedFunction: 0xF26950\n      14: function () {\n        this.ModelVisTrackDataV22 = [\"boneToken\", Utils.getQWordReader(), \"keys\", Utils.getArrayReader(\"float32\")];\n\n        this.ModelTrackTypeDataV14 = [\n          \"type\",\n          \"uint8\",\n          \"trackGroupIndex\",\n          \"uint32\",\n          \"vectorTrackIndex\",\n          \"uint32\",\n          \"initialValue\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.ModelUVAnimationV14 = [\n          \"uvAnimId\",\n          \"uint32\",\n          \"uvTransformData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV14),\n        ];\n\n        this.ModelCloudAnimV14 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"cloudTrackData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV14),\n        ];\n\n        this.ModelMatConstAnimV14 = [\n          \"matIndex\",\n          \"uint32\",\n          \"constToken\",\n          \"uint32\",\n          \"trackGroupIndex\",\n          \"uint32\",\n          \"vectorTrackIndex\",\n          \"uint32\",\n          \"initialValue\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.ModelLightAnimationV14 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"lightTrackData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV14),\n        ];\n\n        this.ModelAnimPropertyDataV14 = [\n          \"id\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint32\",\n          \"time\",\n          \"float32\",\n          \"val\",\n          Utils.getQWordReader(),\n          \"strVal\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.ModelTokenMapAnimV14 = [\n          \"linkToken\",\n          Utils.getQWordReader(),\n          \"trackGroupIndex\",\n          \"uint32\",\n          \"vectorTrackIndex\",\n          \"uint32\",\n          \"initialValue\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.ModelAnimationDataV22 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"data\",\n          Utils.getArrayReader(\"uint8\"),\n          \"moveSpeed\",\n          \"float32\",\n          \"visTrackData\",\n          Utils.getArrayReader(this.ModelVisTrackDataV22),\n          \"uvAnimData\",\n          Utils.getArrayReader(this.ModelUVAnimationV14),\n          \"cloudAnim\",\n          Utils.getArrayReader(this.ModelCloudAnimV14),\n          \"matConstAnim\",\n          Utils.getArrayReader(this.ModelMatConstAnimV14),\n          \"morphTrackGroups\",\n          Utils.getArrayReader(\"uint16\"),\n          \"triggerTimes\",\n          Utils.getArrayReader(\"float32\"),\n          \"triggerTokens\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"lightAnimData\",\n          Utils.getArrayReader(this.ModelLightAnimationV14),\n          \"isAdditive\",\n          \"uint32\",\n          \"variantCount\",\n          \"uint32\",\n          \"variantIndices\",\n          [\"[]\", \"uint32\", 3],\n          \"properties\",\n          Utils.getArrayReader(this.ModelAnimPropertyDataV14),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"radius\",\n          \"float32\",\n          \"tokenMapAnims\",\n          Utils.getArrayReader(this.ModelTokenMapAnimV14),\n        ];\n\n        this.ModelCompoundAnimationDataV14 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"start\",\n          Utils.getQWordReader(),\n          \"loop\",\n          Utils.getQWordReader(),\n          \"end\",\n          Utils.getQWordReader(),\n        ];\n\n        this.ModelAnimationImportDataV22 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"sequenceTokens\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.__root = this.ModelFileAnimationBankV14 = [\n          \"animations\",\n          Utils.getRefArrayReader(this.ModelAnimationDataV22),\n          \"compoundAnimations\",\n          Utils.getArrayReader(this.ModelCompoundAnimationDataV14),\n          \"fallbacks\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"imports\",\n          Utils.getArrayReader(this.ModelAnimationImportDataV22),\n        ];\n      },\n\n      // => Version: 13\n      13: function () {\n        this.ModelVisTrackDataV21 = [\"boneIndex\", \"uint32\", \"keys\", Utils.getArrayReader(\"float32\")];\n\n        this.ModelTrackTypeDataV13 = [\n          \"type\",\n          \"uint8\",\n          \"trackGroupIndex\",\n          \"uint32\",\n          \"vectorTrackIndex\",\n          \"uint32\",\n          \"initialValue\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.ModelUVAnimationV13 = [\n          \"uvAnimId\",\n          \"uint32\",\n          \"uvTransformData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV13),\n        ];\n\n        this.ModelCloudAnimV13 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"cloudTrackData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV13),\n        ];\n\n        this.ModelMatConstAnimV13 = [\n          \"matIndex\",\n          \"uint32\",\n          \"constToken\",\n          \"uint32\",\n          \"trackGroupIndex\",\n          \"uint32\",\n          \"vectorTrackIndex\",\n          \"uint32\",\n          \"initialValue\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.ModelLightAnimationV13 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"lightTrackData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV13),\n        ];\n\n        this.ModelAnimPropertyDataV13 = [\n          \"id\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint32\",\n          \"time\",\n          \"float32\",\n          \"val\",\n          Utils.getQWordReader(),\n          \"strVal\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.ModelTokenMapAnimV13 = [\n          \"linkToken\",\n          Utils.getQWordReader(),\n          \"trackGroupIndex\",\n          \"uint32\",\n          \"vectorTrackIndex\",\n          \"uint32\",\n          \"initialValue\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.ModelAnimationDataV21 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"data\",\n          Utils.getArrayReader(\"uint8\"),\n          \"moveSpeed\",\n          \"float32\",\n          \"visTrackData\",\n          Utils.getArrayReader(this.ModelVisTrackDataV21),\n          \"uvAnimData\",\n          Utils.getArrayReader(this.ModelUVAnimationV13),\n          \"cloudAnim\",\n          Utils.getArrayReader(this.ModelCloudAnimV13),\n          \"matConstAnim\",\n          Utils.getArrayReader(this.ModelMatConstAnimV13),\n          \"morphTrackGroups\",\n          Utils.getArrayReader(\"uint16\"),\n          \"triggerTimes\",\n          Utils.getArrayReader(\"float32\"),\n          \"triggerTokens\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"lightAnimData\",\n          Utils.getArrayReader(this.ModelLightAnimationV13),\n          \"isAdditive\",\n          \"uint32\",\n          \"variantCount\",\n          \"uint32\",\n          \"variantIndices\",\n          [\"[]\", \"uint32\", 3],\n          \"properties\",\n          Utils.getArrayReader(this.ModelAnimPropertyDataV13),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"radius\",\n          \"float32\",\n          \"tokenMapAnims\",\n          Utils.getArrayReader(this.ModelTokenMapAnimV13),\n        ];\n\n        this.ModelCompoundAnimationDataV13 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"start\",\n          Utils.getQWordReader(),\n          \"loop\",\n          Utils.getQWordReader(),\n          \"end\",\n          Utils.getQWordReader(),\n        ];\n\n        this.ModelAnimationImportDataV21 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"sequenceTokens\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.__root = this.ModelFileAnimationBankV13 = [\n          \"animations\",\n          Utils.getRefArrayReader(this.ModelAnimationDataV21),\n          \"compoundAnimations\",\n          Utils.getArrayReader(this.ModelCompoundAnimationDataV13),\n          \"fallbacks\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"imports\",\n          Utils.getArrayReader(this.ModelAnimationImportDataV21),\n        ];\n      },\n\n      // => Version: 12, ReferencedFunction: 0xF268A0\n      12: function () {\n        this.ModelVisTrackDataV20 = [\"boneIndex\", \"uint32\", \"keys\", Utils.getArrayReader(\"float32\")];\n\n        this.ModelTrackTypeDataV12 = [\n          \"type\",\n          \"uint8\",\n          \"trackGroupIndex\",\n          \"uint32\",\n          \"vectorTrackIndex\",\n          \"uint32\",\n          \"initialValue\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.ModelUVAnimationV12 = [\n          \"uvAnimId\",\n          \"uint32\",\n          \"uvTransformData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV12),\n        ];\n\n        this.ModelCloudAnimV12 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"cloudTrackData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV12),\n        ];\n\n        this.ModelMatConstAnimV12 = [\n          \"matIndex\",\n          \"uint32\",\n          \"constToken\",\n          \"uint32\",\n          \"trackGroupIndex\",\n          \"uint32\",\n          \"vectorTrackIndex\",\n          \"uint32\",\n          \"initialValue\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.ModelLightAnimationV12 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"lightTrackData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV12),\n        ];\n\n        this.ModelAnimPropertyDataV12 = [\n          \"id\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint32\",\n          \"val\",\n          Utils.getQWordReader(),\n          \"strVal\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.ModelTokenMapAnimV12 = [\n          \"linkToken\",\n          Utils.getQWordReader(),\n          \"trackGroupIndex\",\n          \"uint32\",\n          \"vectorTrackIndex\",\n          \"uint32\",\n          \"initialValue\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.ModelAnimationDataV20 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"data\",\n          Utils.getArrayReader(\"uint8\"),\n          \"moveSpeed\",\n          \"float32\",\n          \"visTrackData\",\n          Utils.getArrayReader(this.ModelVisTrackDataV20),\n          \"uvAnimData\",\n          Utils.getArrayReader(this.ModelUVAnimationV12),\n          \"cloudAnim\",\n          Utils.getArrayReader(this.ModelCloudAnimV12),\n          \"matConstAnim\",\n          Utils.getArrayReader(this.ModelMatConstAnimV12),\n          \"morphTrackGroups\",\n          Utils.getArrayReader(\"uint16\"),\n          \"triggerTimes\",\n          Utils.getArrayReader(\"float32\"),\n          \"triggerTokens\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"lightAnimData\",\n          Utils.getArrayReader(this.ModelLightAnimationV12),\n          \"isAdditive\",\n          \"uint32\",\n          \"variantCount\",\n          \"uint32\",\n          \"variantIndices\",\n          [\"[]\", \"uint32\", 3],\n          \"properties\",\n          Utils.getArrayReader(this.ModelAnimPropertyDataV12),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"radius\",\n          \"float32\",\n          \"tokenMapAnims\",\n          Utils.getArrayReader(this.ModelTokenMapAnimV12),\n        ];\n\n        this.ModelCompoundAnimationDataV12 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"start\",\n          Utils.getQWordReader(),\n          \"loop\",\n          Utils.getQWordReader(),\n          \"end\",\n          Utils.getQWordReader(),\n        ];\n\n        this.ModelAnimationImportDataV20 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"sequenceTokens\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.__root = this.ModelFileAnimationBankV12 = [\n          \"animations\",\n          Utils.getRefArrayReader(this.ModelAnimationDataV20),\n          \"compoundAnimations\",\n          Utils.getArrayReader(this.ModelCompoundAnimationDataV12),\n          \"fallbacks\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"imports\",\n          Utils.getArrayReader(this.ModelAnimationImportDataV20),\n        ];\n      },\n\n      // => Version: 11\n      11: function () {\n        this.ModelVisTrackDataV19 = [\"boneIndex\", \"uint32\", \"keys\", Utils.getArrayReader(\"float32\")];\n\n        this.ModelTrackTypeDataV11 = [\n          \"type\",\n          \"uint8\",\n          \"trackGroupIndex\",\n          \"uint32\",\n          \"vectorTrackIndex\",\n          \"uint32\",\n          \"initialValue\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.ModelUVAnimationV11 = [\n          \"uvAnimId\",\n          \"uint8\",\n          \"uvTransformData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV11),\n        ];\n\n        this.ModelCloudAnimV11 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"cloudTrackData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV11),\n        ];\n\n        this.ModelMatConstAnimV11 = [\n          \"matIndex\",\n          \"uint32\",\n          \"constToken\",\n          \"uint32\",\n          \"trackGroupIndex\",\n          \"uint32\",\n          \"vectorTrackIndex\",\n          \"uint32\",\n          \"initialValue\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.ModelLightAnimationV11 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"lightTrackData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV11),\n        ];\n\n        this.ModelAnimPropertyDataV11 = [\n          \"id\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint32\",\n          \"val\",\n          Utils.getQWordReader(),\n          \"strVal\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.ModelAnimationDataV19 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"data\",\n          Utils.getArrayReader(\"uint8\"),\n          \"moveSpeed\",\n          \"float32\",\n          \"visTrackData\",\n          Utils.getArrayReader(this.ModelVisTrackDataV19),\n          \"uvAnimData\",\n          Utils.getArrayReader(this.ModelUVAnimationV11),\n          \"cloudAnim\",\n          Utils.getArrayReader(this.ModelCloudAnimV11),\n          \"matConstAnim\",\n          Utils.getArrayReader(this.ModelMatConstAnimV11),\n          \"morphTrackGroups\",\n          Utils.getArrayReader(\"uint16\"),\n          \"triggerTimes\",\n          Utils.getArrayReader(\"float32\"),\n          \"triggerTokens\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"lightAnimData\",\n          Utils.getArrayReader(this.ModelLightAnimationV11),\n          \"isAdditive\",\n          \"uint32\",\n          \"variantCount\",\n          \"uint32\",\n          \"variantIndices\",\n          [\"[]\", \"uint32\", 3],\n          \"properties\",\n          Utils.getArrayReader(this.ModelAnimPropertyDataV11),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"radius\",\n          \"float32\",\n        ];\n\n        this.ModelCompoundAnimationDataV11 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"start\",\n          Utils.getQWordReader(),\n          \"loop\",\n          Utils.getQWordReader(),\n          \"end\",\n          Utils.getQWordReader(),\n        ];\n\n        this.ModelAnimationImportDataV19 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"sequenceTokens\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.__root = this.ModelFileAnimationBankV11 = [\n          \"animations\",\n          Utils.getRefArrayReader(this.ModelAnimationDataV19),\n          \"compoundAnimations\",\n          Utils.getArrayReader(this.ModelCompoundAnimationDataV11),\n          \"fallbacks\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"imports\",\n          Utils.getArrayReader(this.ModelAnimationImportDataV19),\n        ];\n      },\n\n      // => Version: 10\n      10: function () {\n        this.ModelVisTrackDataV18 = [\"boneIndex\", \"uint32\", \"keys\", Utils.getArrayReader(\"float32\")];\n\n        this.ModelTrackTypeDataV10 = [\n          \"type\",\n          \"uint8\",\n          \"trackGroupIndex\",\n          \"uint32\",\n          \"vectorTrackIndex\",\n          \"uint32\",\n          \"initialValue\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.ModelUVAnimationV10 = [\n          \"uvAnimId\",\n          \"uint8\",\n          \"uvTransformData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV10),\n        ];\n\n        this.ModelCloudAnimV10 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"cloudTrackData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV10),\n        ];\n\n        this.ModelMatConstAnimV10 = [\n          \"matIndex\",\n          \"uint32\",\n          \"constToken\",\n          \"uint32\",\n          \"trackGroupIndex\",\n          \"uint32\",\n          \"vectorTrackIndex\",\n          \"uint32\",\n          \"initialValue\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.ModelLightAnimationV10 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"lightTrackData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV10),\n        ];\n\n        this.ModelAnimPropertyDataV10 = [\n          \"id\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint32\",\n          \"val\",\n          Utils.getQWordReader(),\n          \"strVal\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.ModelAnimationDataV18 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"data\",\n          Utils.getArrayReader(\"uint8\"),\n          \"moveSpeed\",\n          \"float32\",\n          \"visTrackData\",\n          Utils.getArrayReader(this.ModelVisTrackDataV18),\n          \"uvAnimData\",\n          Utils.getArrayReader(this.ModelUVAnimationV10),\n          \"cloudAnim\",\n          Utils.getArrayReader(this.ModelCloudAnimV10),\n          \"matConstAnim\",\n          Utils.getArrayReader(this.ModelMatConstAnimV10),\n          \"morphTrackGroups\",\n          Utils.getArrayReader(\"uint16\"),\n          \"triggerTimes\",\n          Utils.getArrayReader(\"float32\"),\n          \"triggerTokens\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"lightAnimData\",\n          Utils.getArrayReader(this.ModelLightAnimationV10),\n          \"isAdditive\",\n          \"uint32\",\n          \"variantCount\",\n          \"uint32\",\n          \"variantIndices\",\n          [\"[]\", \"uint32\", 3],\n          \"properties\",\n          Utils.getArrayReader(this.ModelAnimPropertyDataV10),\n        ];\n\n        this.ModelCompoundAnimationDataV10 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"start\",\n          Utils.getQWordReader(),\n          \"loop\",\n          Utils.getQWordReader(),\n          \"end\",\n          Utils.getQWordReader(),\n        ];\n\n        this.ModelAnimationImportDataV18 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"sequenceTokens\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.__root = this.ModelFileAnimationBankV10 = [\n          \"animations\",\n          Utils.getRefArrayReader(this.ModelAnimationDataV18),\n          \"compoundAnimations\",\n          Utils.getArrayReader(this.ModelCompoundAnimationDataV10),\n          \"fallbacks\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"imports\",\n          Utils.getArrayReader(this.ModelAnimationImportDataV18),\n        ];\n      },\n\n      // => Version: 9\n      9: function () {\n        this.ModelVisTrackDataV17 = [\"boneIndex\", \"uint32\", \"keys\", Utils.getArrayReader(\"float32\")];\n\n        this.ModelTrackTypeDataV9 = [\n          \"type\",\n          \"uint8\",\n          \"trackGroupIndex\",\n          \"uint32\",\n          \"vectorTrackIndex\",\n          \"uint32\",\n          \"initialValue\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.ModelUVAnimationV9 = [\n          \"uvAnimId\",\n          \"uint8\",\n          \"uvTransformData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV9),\n        ];\n\n        this.ModelCloudAnimV9 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"cloudTrackData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV9),\n        ];\n\n        this.ModelMatConstAnimV9 = [\n          \"matIndex\",\n          \"uint32\",\n          \"constToken\",\n          \"uint32\",\n          \"trackGroupIndex\",\n          \"uint32\",\n          \"vectorTrackIndex\",\n          \"uint32\",\n          \"initialValue\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.ModelLightAnimationV9 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"lightTrackData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV9),\n        ];\n\n        this.ModelAnimationDataV17 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"data\",\n          Utils.getArrayReader(\"uint8\"),\n          \"moveSpeed\",\n          \"float32\",\n          \"visTrackData\",\n          Utils.getArrayReader(this.ModelVisTrackDataV17),\n          \"uvAnimData\",\n          Utils.getArrayReader(this.ModelUVAnimationV9),\n          \"cloudAnim\",\n          Utils.getArrayReader(this.ModelCloudAnimV9),\n          \"matConstAnim\",\n          Utils.getArrayReader(this.ModelMatConstAnimV9),\n          \"morphTrackGroups\",\n          Utils.getArrayReader(\"uint16\"),\n          \"triggerTimes\",\n          Utils.getArrayReader(\"float32\"),\n          \"triggerTokens\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"lightAnimData\",\n          Utils.getArrayReader(this.ModelLightAnimationV9),\n          \"isAdditive\",\n          \"uint32\",\n          \"variantCount\",\n          \"uint32\",\n          \"variantIndices\",\n          [\"[]\", \"uint32\", 3],\n        ];\n\n        this.ModelCompoundAnimationDataV9 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"start\",\n          Utils.getQWordReader(),\n          \"loop\",\n          Utils.getQWordReader(),\n          \"end\",\n          Utils.getQWordReader(),\n        ];\n\n        this.ModelAnimationImportDataV17 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"sequenceTokens\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.__root = this.ModelFileAnimationBankV9 = [\n          \"animations\",\n          Utils.getRefArrayReader(this.ModelAnimationDataV17),\n          \"compoundAnimations\",\n          Utils.getArrayReader(this.ModelCompoundAnimationDataV9),\n          \"fallbacks\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"imports\",\n          Utils.getArrayReader(this.ModelAnimationImportDataV17),\n        ];\n      },\n\n      // => Version: 8\n      8: function () {\n        this.ModelVisTrackDataV16 = [\"boneIndex\", \"uint32\", \"keys\", Utils.getArrayReader(\"float32\")];\n\n        this.ModelTrackTypeDataV8 = [\"type\", \"uint8\", \"trackGroupIndex\", \"uint32\", \"vectorTrackIndex\", \"uint32\"];\n\n        this.ModelUVAnimationV8 = [\n          \"uvAnimId\",\n          \"uint8\",\n          \"uvTransformData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV8),\n        ];\n\n        this.ModelCloudAnimV8 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"cloudTrackData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV8),\n        ];\n\n        this.ModelMatConstAnimV8 = [\n          \"matIndex\",\n          \"uint32\",\n          \"constToken\",\n          \"uint32\",\n          \"trackGroupIndex\",\n          \"uint32\",\n          \"vectorTrackIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelLightAnimationV8 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"lightTrackData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV8),\n        ];\n\n        this.ModelAnimationDataV16 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"data\",\n          Utils.getArrayReader(\"uint8\"),\n          \"moveSpeed\",\n          \"float32\",\n          \"visTrackData\",\n          Utils.getArrayReader(this.ModelVisTrackDataV16),\n          \"uvAnimData\",\n          Utils.getArrayReader(this.ModelUVAnimationV8),\n          \"cloudAnim\",\n          Utils.getArrayReader(this.ModelCloudAnimV8),\n          \"matConstAnim\",\n          Utils.getArrayReader(this.ModelMatConstAnimV8),\n          \"morphTrackGroups\",\n          Utils.getArrayReader(\"uint16\"),\n          \"triggerTimes\",\n          Utils.getArrayReader(\"float32\"),\n          \"triggerTokens\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"lightAnimData\",\n          Utils.getArrayReader(this.ModelLightAnimationV8),\n          \"isAdditive\",\n          \"uint32\",\n          \"variantCount\",\n          \"uint32\",\n          \"variantIndices\",\n          [\"[]\", \"uint32\", 3],\n        ];\n\n        this.ModelCompoundAnimationDataV8 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"start\",\n          Utils.getQWordReader(),\n          \"loop\",\n          Utils.getQWordReader(),\n          \"end\",\n          Utils.getQWordReader(),\n        ];\n\n        this.ModelAnimationImportDataV16 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"sequenceTokens\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.__root = this.ModelFileAnimationBankV8 = [\n          \"animations\",\n          Utils.getRefArrayReader(this.ModelAnimationDataV16),\n          \"compoundAnimations\",\n          Utils.getArrayReader(this.ModelCompoundAnimationDataV8),\n          \"fallbacks\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"imports\",\n          Utils.getArrayReader(this.ModelAnimationImportDataV16),\n        ];\n      },\n\n      // => Version: 7\n      7: function () {\n        this.ModelVisTrackDataV15 = [\"boneIndex\", \"uint32\", \"keys\", Utils.getArrayReader(\"float32\")];\n\n        this.ModelTrackTypeDataV7 = [\"type\", \"uint8\", \"trackGroupIndex\", \"uint32\", \"vectorTrackIndex\", \"uint32\"];\n\n        this.ModelUVAnimationV7 = [\n          \"uvAnimId\",\n          \"uint8\",\n          \"uvTransformData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV7),\n        ];\n\n        this.ModelCloudAnimV7 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"cloudTrackData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV7),\n        ];\n\n        this.ModelMatConstAnimV7 = [\n          \"matIndex\",\n          \"uint32\",\n          \"constToken\",\n          \"uint32\",\n          \"trackGroupIndex\",\n          \"uint32\",\n          \"vectorTrackIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelLightAnimationV7 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"lightTrackData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV7),\n        ];\n\n        this.ModelAnimationDataV15 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"data\",\n          Utils.getArrayReader(\"uint8\"),\n          \"moveSpeed\",\n          \"float32\",\n          \"visTrackData\",\n          Utils.getArrayReader(this.ModelVisTrackDataV15),\n          \"uvAnimData\",\n          Utils.getArrayReader(this.ModelUVAnimationV7),\n          \"cloudAnim\",\n          Utils.getArrayReader(this.ModelCloudAnimV7),\n          \"matConstAnim\",\n          Utils.getArrayReader(this.ModelMatConstAnimV7),\n          \"morphTrackGroups\",\n          Utils.getArrayReader(\"uint16\"),\n          \"triggerTimes\",\n          Utils.getArrayReader(\"float32\"),\n          \"triggerTokens\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"lightAnimData\",\n          Utils.getArrayReader(this.ModelLightAnimationV7),\n          \"isAdditive\",\n          \"uint32\",\n        ];\n\n        this.ModelCompoundAnimationDataV7 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"start\",\n          Utils.getQWordReader(),\n          \"loop\",\n          Utils.getQWordReader(),\n          \"end\",\n          Utils.getQWordReader(),\n        ];\n\n        this.ModelAnimationImportDataV15 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"sequenceTokens\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.__root = this.ModelFileAnimationBankV7 = [\n          \"animations\",\n          Utils.getRefArrayReader(this.ModelAnimationDataV15),\n          \"compoundAnimations\",\n          Utils.getArrayReader(this.ModelCompoundAnimationDataV7),\n          \"fallbacks\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"imports\",\n          Utils.getArrayReader(this.ModelAnimationImportDataV15),\n        ];\n      },\n\n      // => Version: 6\n      6: function () {\n        this.ModelVisTrackDataV14 = [\"boneIndex\", \"uint32\", \"keys\", Utils.getArrayReader(\"float32\")];\n\n        this.ModelTrackTypeDataV6 = [\"type\", \"uint8\", \"vectorTrackIndex\", \"uint32\"];\n\n        this.ModelUVAnimationV6 = [\n          \"uvAnimId\",\n          \"uint8\",\n          \"uvTransformData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV6),\n        ];\n\n        this.ModelCloudAnimV6 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"cloudTrackData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV6),\n        ];\n\n        this.ModelMatConstAnimV6 = [\"matIndex\", \"uint32\", \"constToken\", \"uint32\", \"vectorTrackIndex\", \"uint32\"];\n\n        this.ModelLightAnimationV6 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"lightTrackData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV6),\n        ];\n\n        this.ModelAnimationDataV14 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"data\",\n          Utils.getArrayReader(\"uint8\"),\n          \"moveSpeed\",\n          \"float32\",\n          \"visTrackData\",\n          Utils.getArrayReader(this.ModelVisTrackDataV14),\n          \"uvAnimData\",\n          Utils.getArrayReader(this.ModelUVAnimationV6),\n          \"cloudAnim\",\n          Utils.getArrayReader(this.ModelCloudAnimV6),\n          \"matConstAnim\",\n          Utils.getArrayReader(this.ModelMatConstAnimV6),\n          \"morphTrackGroups\",\n          Utils.getArrayReader(\"uint16\"),\n          \"triggerTimes\",\n          Utils.getArrayReader(\"float32\"),\n          \"triggerTokens\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"lightAnimData\",\n          Utils.getArrayReader(this.ModelLightAnimationV6),\n          \"isAdditive\",\n          \"uint32\",\n        ];\n\n        this.ModelCompoundAnimationDataV6 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"start\",\n          Utils.getQWordReader(),\n          \"loop\",\n          Utils.getQWordReader(),\n          \"end\",\n          Utils.getQWordReader(),\n        ];\n\n        this.ModelAnimationImportDataV14 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"sequenceTokens\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.__root = this.ModelFileAnimationBankV6 = [\n          \"animations\",\n          Utils.getRefArrayReader(this.ModelAnimationDataV14),\n          \"compoundAnimations\",\n          Utils.getArrayReader(this.ModelCompoundAnimationDataV6),\n          \"fallbacks\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"imports\",\n          Utils.getArrayReader(this.ModelAnimationImportDataV14),\n        ];\n      },\n\n      // => Version: 5\n      5: function () {\n        this.ModelVisTrackDataV13 = [\"boneIndex\", \"uint32\", \"keys\", Utils.getArrayReader(\"float32\")];\n\n        this.ModelTrackTypeDataV5 = [\"type\", \"uint8\", \"vectorTrackIndex\", \"uint32\"];\n\n        this.ModelUVAnimationV5 = [\n          \"uvAnimId\",\n          \"uint8\",\n          \"uvTransformData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV5),\n        ];\n\n        this.ModelLightAnimationV5 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"lightTrackData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV5),\n        ];\n\n        this.ModelAnimationDataV13 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"data\",\n          Utils.getArrayReader(\"uint8\"),\n          \"moveSpeed\",\n          \"float32\",\n          \"visTrackData\",\n          Utils.getArrayReader(this.ModelVisTrackDataV13),\n          \"uvAnimData\",\n          Utils.getArrayReader(this.ModelUVAnimationV5),\n          \"morphTrackGroups\",\n          Utils.getArrayReader(\"uint16\"),\n          \"triggerTimes\",\n          Utils.getArrayReader(\"float32\"),\n          \"triggerTokens\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"lightAnimData\",\n          Utils.getArrayReader(this.ModelLightAnimationV5),\n          \"isAdditive\",\n          \"uint32\",\n        ];\n\n        this.ModelCompoundAnimationDataV5 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"start\",\n          Utils.getQWordReader(),\n          \"loop\",\n          Utils.getQWordReader(),\n          \"end\",\n          Utils.getQWordReader(),\n        ];\n\n        this.ModelAnimationImportDataV13 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"sequenceTokens\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.__root = this.ModelFileAnimationBankV5 = [\n          \"animations\",\n          Utils.getRefArrayReader(this.ModelAnimationDataV13),\n          \"compoundAnimations\",\n          Utils.getArrayReader(this.ModelCompoundAnimationDataV5),\n          \"fallbacks\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"imports\",\n          Utils.getArrayReader(this.ModelAnimationImportDataV13),\n        ];\n      },\n\n      // => Version: 4\n      4: function () {\n        this.ModelVisTrackDataV12 = [\"boneIndex\", \"uint32\", \"keys\", Utils.getArrayReader(\"float32\")];\n\n        this.ModelTrackTypeDataV4 = [\"type\", \"uint8\", \"vectorTrackIndex\", \"uint32\"];\n\n        this.ModelUVAnimationV4 = [\n          \"uvAnimId\",\n          \"uint8\",\n          \"uvTransformData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV4),\n        ];\n\n        this.ModelLightAnimationV4 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"lightTrackData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV4),\n        ];\n\n        this.ModelAnimationDataV12 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"data\",\n          Utils.getArrayReader(\"uint8\"),\n          \"moveSpeed\",\n          \"float32\",\n          \"visTrackData\",\n          Utils.getArrayReader(this.ModelVisTrackDataV12),\n          \"uvAnimData\",\n          Utils.getArrayReader(this.ModelUVAnimationV4),\n          \"morphTrackGroups\",\n          Utils.getArrayReader(\"uint16\"),\n          \"triggerTimes\",\n          Utils.getArrayReader(\"float32\"),\n          \"triggerTokens\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"lightAnimData\",\n          Utils.getArrayReader(this.ModelLightAnimationV4),\n          \"isAdditive\",\n          \"uint32\",\n        ];\n\n        this.ModelCompoundAnimationDataV4 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"start\",\n          Utils.getQWordReader(),\n          \"loop\",\n          Utils.getQWordReader(),\n          \"end\",\n          Utils.getQWordReader(),\n        ];\n\n        this.ModelAnimationImportDataV12 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"sequenceTokens\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.__root = this.ModelFileAnimationBankV4 = [\n          \"animations\",\n          Utils.getRefArrayReader(this.ModelAnimationDataV12),\n          \"compoundAnimations\",\n          Utils.getArrayReader(this.ModelCompoundAnimationDataV4),\n          \"fallbacks\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"imports\",\n          Utils.getArrayReader(this.ModelAnimationImportDataV12),\n        ];\n      },\n\n      // => Version: 3\n      3: function () {\n        this.ModelVisTrackDataV11 = [\"boneIndex\", \"uint32\", \"keys\", Utils.getArrayReader(\"float32\")];\n\n        this.ModelTrackTypeDataV3 = [\"type\", \"uint8\", \"vectorTrackIndex\", \"uint32\"];\n\n        this.ModelUVAnimationV3 = [\n          \"uvAnimId\",\n          \"uint8\",\n          \"uvTransformData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV3),\n        ];\n\n        this.ModelLightAnimationV3 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"lightTrackData\",\n          Utils.getArrayReader(this.ModelTrackTypeDataV3),\n        ];\n\n        this.ModelAnimationDataV11 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"data\",\n          Utils.getArrayReader(\"uint8\"),\n          \"moveSpeed\",\n          \"float32\",\n          \"visTrackData\",\n          Utils.getArrayReader(this.ModelVisTrackDataV11),\n          \"uvAnimData\",\n          Utils.getArrayReader(this.ModelUVAnimationV3),\n          \"morphTrackGroups\",\n          Utils.getArrayReader(\"uint16\"),\n          \"triggerTimes\",\n          Utils.getArrayReader(\"float32\"),\n          \"triggerTokens\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"lightAnimData\",\n          Utils.getArrayReader(this.ModelLightAnimationV3),\n        ];\n\n        this.ModelCompoundAnimationDataV3 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"start\",\n          Utils.getQWordReader(),\n          \"loop\",\n          Utils.getQWordReader(),\n          \"end\",\n          Utils.getQWordReader(),\n        ];\n\n        this.ModelAnimationImportDataV11 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"sequenceTokens\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.__root = this.ModelFileAnimationBankV3 = [\n          \"animations\",\n          Utils.getRefArrayReader(this.ModelAnimationDataV11),\n          \"compoundAnimations\",\n          Utils.getArrayReader(this.ModelCompoundAnimationDataV3),\n          \"fallbacks\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"imports\",\n          Utils.getArrayReader(this.ModelAnimationImportDataV11),\n        ];\n      },\n\n      // => Version: 2\n      2: function () {\n        this.ModelVisTrackDataV10 = [\"boneIndex\", \"uint32\", \"keys\", Utils.getArrayReader(\"float32\")];\n\n        this.ModelUVTransformV2 = [\"type\", \"uint8\", \"vectorTrackIndex\", \"uint32\"];\n\n        this.ModelUVAnimationV2 = [\n          \"uvAnimId\",\n          \"uint8\",\n          \"uvTransformData\",\n          Utils.getArrayReader(this.ModelUVTransformV2),\n        ];\n\n        this.ModelAnimationDataV10 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"data\",\n          Utils.getArrayReader(\"uint8\"),\n          \"moveSpeed\",\n          \"float32\",\n          \"visTrackData\",\n          Utils.getArrayReader(this.ModelVisTrackDataV10),\n          \"uvAnimData\",\n          Utils.getArrayReader(this.ModelUVAnimationV2),\n          \"morphTrackGroups\",\n          Utils.getArrayReader(\"uint16\"),\n          \"triggerTimes\",\n          Utils.getArrayReader(\"float32\"),\n          \"triggerTokens\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.ModelCompoundAnimationDataV2 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"start\",\n          Utils.getQWordReader(),\n          \"loop\",\n          Utils.getQWordReader(),\n          \"end\",\n          Utils.getQWordReader(),\n        ];\n\n        this.ModelAnimationImportDataV10 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"sequenceTokens\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.__root = this.ModelFileAnimationBankV2 = [\n          \"animations\",\n          Utils.getRefArrayReader(this.ModelAnimationDataV10),\n          \"compoundAnimations\",\n          Utils.getArrayReader(this.ModelCompoundAnimationDataV2),\n          \"fallbacks\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"imports\",\n          Utils.getArrayReader(this.ModelAnimationImportDataV10),\n        ];\n      },\n\n      // => Version: 1\n      1: function () {\n        this.ModelVisTrackDataV9 = [\"boneIndex\", \"uint32\", \"keys\", Utils.getArrayReader(\"float32\")];\n\n        this.ModelUVTransformV1 = [\"type\", \"uint8\", \"vectorTrackIndex\", \"uint32\"];\n\n        this.ModelUVAnimationV1 = [\n          \"uvAnimId\",\n          \"uint8\",\n          \"uvTransformData\",\n          Utils.getArrayReader(this.ModelUVTransformV1),\n        ];\n\n        this.ModelAnimationDataV9 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"data\",\n          Utils.getArrayReader(\"uint8\"),\n          \"moveSpeed\",\n          \"float32\",\n          \"visTrackData\",\n          Utils.getArrayReader(this.ModelVisTrackDataV9),\n          \"uvAnimData\",\n          Utils.getArrayReader(this.ModelUVAnimationV1),\n          \"triggerTimes\",\n          Utils.getArrayReader(\"float32\"),\n          \"triggerTokens\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.ModelCompoundAnimationDataV1 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"start\",\n          Utils.getQWordReader(),\n          \"loop\",\n          Utils.getQWordReader(),\n          \"end\",\n          Utils.getQWordReader(),\n        ];\n\n        this.ModelAnimationImportDataV9 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"sequenceTokens\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.__root = this.ModelFileAnimationV1 = [\n          \"animations\",\n          Utils.getRefArrayReader(this.ModelAnimationDataV9),\n          \"compoundAnimations\",\n          Utils.getArrayReader(this.ModelCompoundAnimationDataV1),\n          \"fallbacks\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"imports\",\n          Utils.getArrayReader(this.ModelAnimationImportDataV9),\n        ];\n      },\n\n      // => Version: 0\n      0: function () {\n        this.ModelVisTrackDataV8 = [\"boneIndex\", \"uint32\", \"keys\", Utils.getArrayReader(\"float32\")];\n\n        this.ModelUVTransformV0 = [\"type\", \"uint8\", \"vectorTrackIndex\", \"uint32\"];\n\n        this.ModelUVAnimationV0 = [\n          \"uvAnimId\",\n          \"uint8\",\n          \"uvTransformData\",\n          Utils.getArrayReader(this.ModelUVTransformV0),\n        ];\n\n        this.ModelAnimationDataV8 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"data\",\n          Utils.getArrayReader(\"uint8\"),\n          \"moveSpeed\",\n          \"float32\",\n          \"visTrackData\",\n          Utils.getArrayReader(this.ModelVisTrackDataV8),\n          \"uvAnimData\",\n          Utils.getArrayReader(this.ModelUVAnimationV0),\n        ];\n\n        this.ModelCompoundAnimationDataV0 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"start\",\n          Utils.getQWordReader(),\n          \"loop\",\n          Utils.getQWordReader(),\n          \"end\",\n          Utils.getQWordReader(),\n        ];\n\n        this.ModelAnimationImportDataV8 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"sequenceTokens\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.__root = this.ModelFileAnimationV0 = [\n          \"animations\",\n          Utils.getRefArrayReader(this.ModelAnimationDataV8),\n          \"compoundAnimations\",\n          Utils.getArrayReader(this.ModelCompoundAnimationDataV0),\n          \"fallbacks\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"imports\",\n          Utils.getArrayReader(this.ModelAnimationImportDataV8),\n        ];\n      },\n    },\n  },\n\n  /// ==================================================\n  /// Chunk: ANIM, versions: 3, strucTab: 0x18304E4\n  /// ==================================================\n\n  {\n    name: \"ANIM\",\n    versions: {\n      // => Version: 2\n      2: function () {\n        this.SceneKeyframeV2 = [\"time\", \"float32\", \"position\", [\"[]\", \"float32\", 3], \"rotation\", [\"[]\", \"float32\", 4]];\n\n        this.SceneMotionV2 = [\"keys\", Utils.getArrayReader(this.SceneKeyframeV2)];\n\n        this.SceneActionPointV2 = [\"name\", Utils.getQWordReader(), \"motion\", this.SceneMotionV2];\n\n        this.SceneAnimationEventV2 = [\"name\", Utils.getQWordReader(), \"time\", \"float32\"];\n\n        this.SceneAnimationV2 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"motion\",\n          this.SceneMotionV2,\n          \"actionPoints\",\n          Utils.getArrayReader(this.SceneActionPointV2),\n          \"events\",\n          Utils.getArrayReader(this.SceneAnimationEventV2),\n        ];\n\n        this.SceneTransformV2 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"translation\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.ScenePoseV2 = [\"name\", Utils.getQWordReader(), \"transforms\", Utils.getArrayReader(this.SceneTransformV2)];\n\n        this.SceneImportSequenceV2 = [\"name\", Utils.getQWordReader()];\n\n        this.SceneAnimationImportV2 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"animNames\",\n          Utils.getArrayReader(this.SceneImportSequenceV2),\n          \"flags\",\n          \"uint32\",\n        ];\n\n        this.__root = this.SceneFileAnimationV2 = [\n          \"animations\",\n          Utils.getArrayReader(this.SceneAnimationV2),\n          \"poses\",\n          Utils.getArrayReader(this.ScenePoseV2),\n          \"imports\",\n          Utils.getArrayReader(this.SceneAnimationImportV2),\n        ];\n      },\n\n      // => Version: 1\n      1: function () {\n        this.SceneKeyframeV1 = [\"time\", \"float32\", \"position\", [\"[]\", \"float32\", 3], \"rotation\", [\"[]\", \"float32\", 4]];\n\n        this.SceneMotionV1 = [\"keys\", Utils.getArrayReader(this.SceneKeyframeV1)];\n\n        this.SceneActionPointV1 = [\"name\", Utils.getQWordReader(), \"motion\", this.SceneMotionV1];\n\n        this.SceneAnimationEventV1 = [\"name\", Utils.getQWordReader(), \"time\", \"float32\"];\n\n        this.SceneAnimationV1 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"motion\",\n          this.SceneMotionV1,\n          \"actionPoints\",\n          Utils.getArrayReader(this.SceneActionPointV1),\n          \"events\",\n          Utils.getArrayReader(this.SceneAnimationEventV1),\n        ];\n\n        this.SceneAnimationImportV1 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"animNames\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.__root = this.SceneFileAnimationV1 = [\n          \"animations\",\n          Utils.getArrayReader(this.SceneAnimationV1),\n          \"imports\",\n          Utils.getArrayReader(this.SceneAnimationImportV1),\n        ];\n      },\n\n      // => Version: 0\n      0: function () {\n        this.SceneKeyframeV0 = [\"time\", \"float32\", \"position\", [\"[]\", \"float32\", 3], \"rotation\", [\"[]\", \"float32\", 4]];\n\n        this.SceneMotionV0 = [\"keys\", Utils.getArrayReader(this.SceneKeyframeV0)];\n\n        this.SceneActionPointV0 = [\"name\", Utils.getQWordReader(), \"motion\", this.SceneMotionV0];\n\n        this.SceneAnimationV0 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"motion\",\n          this.SceneMotionV0,\n          \"actionPoints\",\n          Utils.getArrayReader(this.SceneActionPointV0),\n        ];\n\n        this.SceneAnimationImportV0 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"animNames\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.__root = this.SceneFileAnimationV0 = [\n          \"animations\",\n          Utils.getArrayReader(this.SceneAnimationV0),\n          \"imports\",\n          Utils.getArrayReader(this.SceneAnimationImportV0),\n        ];\n      },\n    },\n  },\n];\n","const Utils = require(\"../../util/ParserUtils.js\");\n\nmodule.exports = [\n  /// ==================================================\n  /// Chunk: anim, versions: 4, strucTab: 0x18843B0\n  /// ==================================================\n\n  {\n    name: \"anim\",\n    versions: {\n      // => Version: 3\n      3: function () {\n        this.PackEmoteTimingV3 = [\n          \"ModelFile\",\n          Utils.getFileNameReader(),\n          \"BlendIn\",\n          \"float32\",\n          \"BlendOut\",\n          \"float32\",\n          \"IntroDuration\",\n          \"uint32\",\n          \"LoopDuration\",\n          \"uint32\",\n          \"OutroDuration\",\n          \"uint32\",\n          \"StartOffset\",\n          \"uint32\",\n        ];\n\n        this.PackEmoteAnimationV3 = [\n          \"Token\",\n          Utils.getQWordReader(),\n          \"Timing\",\n          Utils.getArrayReader(this.PackEmoteTimingV3),\n        ];\n\n        this.__root = this.PackEmoteAnimationsV3 = [\"Animation\", Utils.getArrayReader(this.PackEmoteAnimationV3)];\n      },\n\n      // => Version: 2, ReferencedFunction: 0x1103330\n      2: function () {\n        this.PackEmoteTimingV2 = [\n          \"ModelFile\",\n          Utils.getFileNameReader(),\n          \"BlendIn\",\n          \"float32\",\n          \"BlendOut\",\n          \"float32\",\n          \"IntroDuration\",\n          \"uint32\",\n          \"LoopDuration\",\n          \"uint32\",\n          \"OutroDuration\",\n          \"uint32\",\n        ];\n\n        this.PackEmoteAnimationV2 = [\n          \"Token\",\n          Utils.getQWordReader(),\n          \"Timing\",\n          Utils.getArrayReader(this.PackEmoteTimingV2),\n        ];\n\n        this.__root = this.PackEmoteAnimationsV2 = [\"Animation\", Utils.getArrayReader(this.PackEmoteAnimationV2)];\n      },\n\n      // => Version: 1\n      1: function () {\n        this.PackEmoteTimingV1 = [\n          \"modelFileId\",\n          Utils.getFileNameReader(),\n          \"blendInTime\",\n          \"float32\",\n          \"blendOutTime\",\n          \"float32\",\n          \"duration\",\n          \"uint32\",\n          \"loopDuration\",\n          \"uint32\",\n        ];\n\n        this.PackEmoteAnimationV1 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"timings\",\n          Utils.getArrayReader(this.PackEmoteTimingV1),\n        ];\n\n        this.__root = this.PackEmoteAnimationsV1 = [\"animations\", Utils.getArrayReader(this.PackEmoteAnimationV1)];\n      },\n\n      // => Version: 0\n      0: function () {\n        this.PackEmoteTimingV0 = [\n          \"modelFileId\",\n          Utils.getFileNameReader(),\n          \"blendInTime\",\n          \"float32\",\n          \"blendOutTime\",\n          \"float32\",\n          \"duration\",\n          \"uint32\",\n        ];\n\n        this.PackEmoteAnimationV0 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"timings\",\n          Utils.getArrayReader(this.PackEmoteTimingV0),\n        ];\n\n        this.__root = this.PackEmoteAnimationsV0 = [\"animations\", Utils.getArrayReader(this.PackEmoteAnimationV0)];\n      },\n    },\n  },\n];\n","const Utils = require(\"../../util/ParserUtils.js\");\n\nmodule.exports = [\n  /// ==================================================\n  /// Chunk: area, versions: 5, strucTab: 0x1722F9C\n  /// ==================================================\n\n  {\n    name: \"area\",\n    versions: {\n      // => Version: 4, ReferencedFunction: 0xEBB040\n      4: function () {\n        this.PackMapAreaPolygonV4 = [\"points\", Utils.getArrayReader([\"[]\", \"float32\", 3]), \"height\", \"float32\"];\n\n        this.PackMapAreaPortalV4 = [\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"extents\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.PackMapAreaVolumeV4 = [\n          \"portals\",\n          Utils.getArrayReader(this.PackMapAreaPortalV4),\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"extents\",\n          [\"[]\", \"float32\", 3],\n          \"pointInterior\",\n          [\"[]\", \"float32\", 3],\n          \"pointExterior\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.PackMapAreaV4 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint8\",\n          \"floor\",\n          \"uint8\",\n          \"flags\",\n          \"uint32\",\n          \"polygon\",\n          this.PackMapAreaPolygonV4,\n          \"volume\",\n          this.PackMapAreaVolumeV4,\n        ];\n\n        this.PackMapAreaToolV4 = [\"annotation\", Utils.getString16Reader(), \"renderOffset\", \"float32\"];\n\n        this.__root = this.PackMapAreasV4 = [\n          \"areas\",\n          Utils.getArrayReader(this.PackMapAreaV4),\n          \"areaTools\",\n          Utils.getArrayReader(this.PackMapAreaToolV4),\n        ];\n      },\n\n      // => Version: 3\n      3: function () {\n        this.PackMapAreaPolygonV3 = [\"points\", Utils.getArrayReader([\"[]\", \"float32\", 3]), \"height\", \"float32\"];\n\n        this.PackMapAreaPortalV3 = [\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"extents\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.PackMapAreaVolumeV3 = [\n          \"portals\",\n          Utils.getArrayReader(this.PackMapAreaPortalV3),\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"extents\",\n          [\"[]\", \"float32\", 3],\n          \"pointInterior\",\n          [\"[]\", \"float32\", 3],\n          \"pointExterior\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.PackMapAreaV3 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint8\",\n          \"floor\",\n          \"uint8\",\n          \"flags\",\n          \"uint32\",\n          \"polygon\",\n          this.PackMapAreaPolygonV3,\n          \"volume\",\n          this.PackMapAreaVolumeV3,\n        ];\n\n        this.PackMapAreaToolV3 = [\"annotation\", Utils.getString16Reader(), \"renderOffset\", \"float32\"];\n\n        this.__root = this.PackMapAreasV3 = [\n          \"areas\",\n          Utils.getArrayReader(this.PackMapAreaV3),\n          \"areaTools\",\n          Utils.getArrayReader(this.PackMapAreaToolV3),\n        ];\n      },\n\n      // => Version: 2\n      2: function () {\n        this.PackMapAreaPolygonV2 = [\"points\", Utils.getArrayReader([\"[]\", \"float32\", 3]), \"height\", \"float32\"];\n\n        this.PackMapAreaPortalV2 = [\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"extents\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.PackMapAreaVolumeV2 = [\n          \"portals\",\n          Utils.getArrayReader(this.PackMapAreaPortalV2),\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"extents\",\n          [\"[]\", \"float32\", 3],\n          \"pointInterior\",\n          [\"[]\", \"float32\", 3],\n          \"pointExterior\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.PackMapAreaV2 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint8\",\n          \"floor\",\n          \"uint8\",\n          \"flags\",\n          \"uint32\",\n          \"polygon\",\n          this.PackMapAreaPolygonV2,\n          \"volume\",\n          this.PackMapAreaVolumeV2,\n        ];\n\n        this.PackMapAreaToolV2 = [\"annotation\", Utils.getString16Reader()];\n\n        this.__root = this.PackMapAreasV2 = [\n          \"areas\",\n          Utils.getArrayReader(this.PackMapAreaV2),\n          \"areaTools\",\n          Utils.getArrayReader(this.PackMapAreaToolV2),\n        ];\n      },\n\n      // => Version: 1, ReferencedFunction: 0xE2EE00\n      1: function () {\n        this.PackMapAreaPolygonV1 = [\"points\", Utils.getArrayReader([\"[]\", \"float32\", 3]), \"height\", \"float32\"];\n\n        this.PackMapAreaPortalV1 = [\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"extents\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.PackMapAreaVolumeV1 = [\n          \"portals\",\n          Utils.getArrayReader(this.PackMapAreaPortalV1),\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"extents\",\n          [\"[]\", \"float32\", 3],\n          \"pointInterior\",\n          [\"[]\", \"float32\", 3],\n          \"pointExterior\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.PackMapAreaV1 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint8\",\n          \"floor\",\n          \"uint8\",\n          \"polygon\",\n          this.PackMapAreaPolygonV1,\n          \"volume\",\n          this.PackMapAreaVolumeV1,\n        ];\n\n        this.__root = this.PackMapAreasV1 = [\"areas\", Utils.getArrayReader(this.PackMapAreaV1)];\n      },\n\n      // => Version: 0\n      0: function () {\n        this.PackMapAreaV0 = [\n          \"min\",\n          [\"[]\", \"float32\", 3],\n          \"max\",\n          [\"[]\", \"float32\", 3],\n          \"internal\",\n          [\"[]\", \"float32\", 3],\n          \"external\",\n          [\"[]\", \"float32\", 3],\n          \"token\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n        ];\n\n        this.PackMapPortalV0 = [\"portalVerts\", Utils.getArrayReader([\"[]\", \"float32\", 3])];\n\n        this.__root = this.PackMapAreasV0 = [\n          \"areas\",\n          Utils.getArrayReader(this.PackMapAreaV0),\n          \"portals\",\n          Utils.getArrayReader(this.PackMapPortalV0),\n        ];\n      },\n    },\n  },\n];\n","const Utils = require(\"../../util/ParserUtils.js\");\n\nmodule.exports = [\n  /// ==================================================\n  /// Chunk: ARMF, versions: 2, strucTab: 0x1834230\n  /// ==================================================\n\n  {\n    name: \"ARMF\",\n    versions: {\n      // => Version: 1\n      1: function () {\n        this.PackAssetManifestFile = [\n          \"baseId\",\n          \"uint32\",\n          \"fileId\",\n          \"uint32\",\n          \"size\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackAssetExtraFile = [\"baseId\", \"uint32\", \"fileId\", \"uint32\", \"size\", \"uint32\", \"fileType\", \"uint32\"];\n\n        this.__root = this.PackAssetRootManifest = [\n          \"buildId\",\n          \"uint32\",\n          \"manifests\",\n          Utils.getArrayReader(this.PackAssetManifestFile),\n          \"extraFiles\",\n          Utils.getArrayReader(this.PackAssetExtraFile),\n        ];\n      },\n\n      // => Version: 0\n      0: function () {\n        this.PackAssetExtraFile = [\"baseId\", \"uint32\", \"fileId\", \"uint32\", \"size\", \"uint32\", \"fileType\", \"uint32\"];\n\n        this.__root = this.PackAssetRootManifestV0 = [\n          \"buildId\",\n          \"uint32\",\n          \"extraFiles\",\n          Utils.getArrayReader(this.PackAssetExtraFile),\n        ];\n      },\n    },\n  },\n];\n","const Utils = require(\"../../util/ParserUtils.js\");\n\nmodule.exports = [\n  /// ==================================================\n  /// Chunk: ASND, versions: 3, strucTab: 0x16CF998\n  /// ==================================================\n\n  {\n    name: \"ASND\",\n    versions: {\n      // => Version: 2\n      2: function () {\n        this.ReservedWaveformDataV2 = [\n          \"reserved1\",\n          \"uint32\",\n          \"reserved2\",\n          \"uint32\",\n          \"reserved3\",\n          \"uint32\",\n          \"reserved4\",\n          \"uint32\",\n        ];\n\n        this.__root = this.WaveformDataV2 = [\n          \"length\",\n          \"float32\",\n          \"offset\",\n          \"float32\",\n          \"reservedData\",\n          Utils.getPointerReader(this.ReservedWaveformDataV2),\n          \"reserved1\",\n          \"uint32\",\n          \"reserved2\",\n          \"uint32\",\n          \"crc\",\n          \"uint32\",\n          \"numSamples\",\n          \"uint32\",\n          \"loopStart\",\n          \"uint32\",\n          \"loopEnd\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"format\",\n          \"uint8\",\n          \"reserved3\",\n          \"uint8\",\n          \"reserved4\",\n          \"uint8\",\n          \"reserved5\",\n          \"uint8\",\n          \"numChannels\",\n          \"uint8\",\n          \"reserved6\",\n          \"uint8\",\n          \"reserved7\",\n          \"uint8\",\n          \"reserved8\",\n          \"uint8\",\n          \"audioData\",\n          Utils.getArrayReader(\"uint8\"),\n          \"otherData\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n      },\n\n      // => Version: 1, ReferencedFunction: 0xE21150\n      1: function () {\n        this.__root = this.WaveformDataV1 = [\n          \"length\",\n          \"float32\",\n          \"offset\",\n          \"float32\",\n          \"crc\",\n          \"uint32\",\n          \"numSamples\",\n          \"uint32\",\n          \"loopStart\",\n          \"uint32\",\n          \"loopEnd\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"format\",\n          \"uint8\",\n          \"noteBase\",\n          \"uint8\",\n          \"noteHigh\",\n          \"uint8\",\n          \"noteLow\",\n          \"uint8\",\n          \"numChannels\",\n          \"uint8\",\n          \"reserved1\",\n          \"uint8\",\n          \"reserved2\",\n          \"uint8\",\n          \"reserved3\",\n          \"uint8\",\n          \"audioData\",\n          Utils.getArrayReader(\"uint8\"),\n          \"otherData\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n      },\n\n      // => Version: 0\n      0: function () {\n        this.__root = this.WaveformDataV0 = [\n          \"data\",\n          Utils.getArrayReader(\"uint8\"),\n          \"flags\",\n          \"uint32\",\n          \"length\",\n          \"float32\",\n          \"noteBase\",\n          \"uint8\",\n          \"noteHigh\",\n          \"uint8\",\n          \"noteLow\",\n          \"uint8\",\n          \"numChannels\",\n          \"uint8\",\n          \"numSamples\",\n          \"uint32\",\n          \"waveformDataType\",\n          \"uint8\",\n        ];\n      },\n    },\n  },\n];\n","const Utils = require(\"../../util/ParserUtils.js\");\n\nmodule.exports = [\n  /// ==================================================\n  /// Chunk: audi, versions: 9, strucTab: 0x1723448\n  /// ==================================================\n\n  {\n    name: \"audi\",\n    versions: {\n      // => Version: 8\n      8: function () {\n        this.PackMapAudioRegion = [\n          \"regionType\",\n          \"uint32\",\n          \"overrideMode\",\n          \"uint32\",\n          \"filenameSourceDay\",\n          Utils.getFileNameReader(),\n          \"filenameAmbientDay\",\n          Utils.getFileNameReader(),\n          \"filenameSourceNight\",\n          Utils.getFileNameReader(),\n          \"filenameAmbientNight\",\n          Utils.getFileNameReader(),\n          \"filenameInterior\",\n          Utils.getFileNameReader(),\n          \"exteriorVolume\",\n          \"float32\",\n          \"priority\",\n          \"uint32\",\n          \"points\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"orientation\",\n          [\"[]\", \"float32\", 3],\n          \"fadeBand\",\n          \"float32\",\n          \"height\",\n          \"float32\",\n          \"radius\",\n          \"float32\",\n          \"guid\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n        ];\n\n        this.PackMapAudioRegionTool = [\"annotation\", Utils.getString16Reader()];\n\n        this.PackMapAudioDep = [\"dependency\", Utils.getFileNameReader(), \"flags\", \"uint32\"];\n\n        this.__root = this.MapAudio = [\n          \"filenameAmbientDaySurface\",\n          Utils.getFileNameReader(),\n          \"filenameAmbientDayUnderwater\",\n          Utils.getFileNameReader(),\n          \"filenameAmbientNightSurface\",\n          Utils.getFileNameReader(),\n          \"filenameAmbientNightUnderwater\",\n          Utils.getFileNameReader(),\n          \"audioRegions\",\n          Utils.getArrayReader(this.PackMapAudioRegion),\n          \"audioRegionTools\",\n          Utils.getArrayReader(this.PackMapAudioRegionTool),\n          \"audioDepArray\",\n          Utils.getArrayReader(this.PackMapAudioDep),\n        ];\n      },\n\n      // => Version: 7\n      7: function () {\n        this.PackMapAudioRegion = [\n          \"regionType\",\n          \"uint32\",\n          \"overrideMode\",\n          \"uint32\",\n          \"filenameSourceDay\",\n          Utils.getFileNameReader(),\n          \"filenameAmbientDay\",\n          Utils.getFileNameReader(),\n          \"filenameSourceNight\",\n          Utils.getFileNameReader(),\n          \"filenameAmbientNight\",\n          Utils.getFileNameReader(),\n          \"filenameInterior\",\n          Utils.getFileNameReader(),\n          \"exteriorVolume\",\n          \"float32\",\n          \"priority\",\n          \"uint32\",\n          \"points\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"orientation\",\n          [\"[]\", \"float32\", 3],\n          \"fadeBand\",\n          \"float32\",\n          \"height\",\n          \"float32\",\n          \"radius\",\n          \"float32\",\n          \"guid\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n        ];\n\n        this.PackMapAudioRegionTool = [\"annotation\", Utils.getString16Reader()];\n\n        this.__root = this.MapAudio = [\n          \"filenameAmbientDaySurface\",\n          Utils.getFileNameReader(),\n          \"filenameAmbientDayUnderwater\",\n          Utils.getFileNameReader(),\n          \"filenameAmbientNightSurface\",\n          Utils.getFileNameReader(),\n          \"filenameAmbientNightUnderwater\",\n          Utils.getFileNameReader(),\n          \"audioRegions\",\n          Utils.getArrayReader(this.PackMapAudioRegion),\n          \"audioRegionTools\",\n          Utils.getArrayReader(this.PackMapAudioRegionTool),\n        ];\n      },\n\n      // => Version: 6\n      6: function () {\n        this.PackMapAudioRegion = [\n          \"regionType\",\n          \"uint32\",\n          \"overrideMode\",\n          \"uint32\",\n          \"filenameSourceDay\",\n          Utils.getFileNameReader(),\n          \"filenameAmbientDay\",\n          Utils.getFileNameReader(),\n          \"filenameSourceNight\",\n          Utils.getFileNameReader(),\n          \"filenameAmbientNight\",\n          Utils.getFileNameReader(),\n          \"filenameInterior\",\n          Utils.getFileNameReader(),\n          \"exteriorVolume\",\n          \"float32\",\n          \"priority\",\n          \"uint32\",\n          \"points\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"orientation\",\n          [\"[]\", \"float32\", 3],\n          \"fadeBand\",\n          \"float32\",\n          \"height\",\n          \"float32\",\n          \"radius\",\n          \"float32\",\n          \"guid\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n        ];\n\n        this.__root = this.MapAudio = [\n          \"filenameAmbientDaySurface\",\n          Utils.getFileNameReader(),\n          \"filenameAmbientDayUnderwater\",\n          Utils.getFileNameReader(),\n          \"filenameAmbientNightSurface\",\n          Utils.getFileNameReader(),\n          \"filenameAmbientNightUnderwater\",\n          Utils.getFileNameReader(),\n          \"audioRegions\",\n          Utils.getArrayReader(this.PackMapAudioRegion),\n        ];\n      },\n\n      // => Version: 5\n      5: function () {\n        this.PackMapAudioRegion = [\n          \"regionType\",\n          \"uint32\",\n          \"overrideMode\",\n          \"uint32\",\n          \"filenameSourceDay\",\n          Utils.getFileNameReader(),\n          \"filenameAmbientDay\",\n          Utils.getFileNameReader(),\n          \"filenameSourceNight\",\n          Utils.getFileNameReader(),\n          \"filenameAmbientNight\",\n          Utils.getFileNameReader(),\n          \"points\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"orientation\",\n          [\"[]\", \"float32\", 3],\n          \"fadeBand\",\n          \"float32\",\n          \"height\",\n          \"float32\",\n          \"radius\",\n          \"float32\",\n          \"guid\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n        ];\n\n        this.__root = this.MapAudio = [\n          \"filenameAmbientDaySurface\",\n          Utils.getFileNameReader(),\n          \"filenameAmbientDayUnderwater\",\n          Utils.getFileNameReader(),\n          \"filenameAmbientNightSurface\",\n          Utils.getFileNameReader(),\n          \"filenameAmbientNightUnderwater\",\n          Utils.getFileNameReader(),\n          \"audioRegions\",\n          Utils.getArrayReader(this.PackMapAudioRegion),\n        ];\n      },\n\n      // => Version: 4, ReferencedFunction: 0xEBB190\n      4: function () {\n        this.PackMapAudioRegion = [\n          \"regionType\",\n          \"uint32\",\n          \"overrideMode\",\n          \"uint32\",\n          \"filenameSourceDay\",\n          Utils.getFileNameReader(),\n          \"filenameAmbientDay\",\n          Utils.getFileNameReader(),\n          \"filenameMusicDay\",\n          Utils.getFileNameReader(),\n          \"filenameSourceNight\",\n          Utils.getFileNameReader(),\n          \"filenameAmbientNight\",\n          Utils.getFileNameReader(),\n          \"filenameMusicNight\",\n          Utils.getFileNameReader(),\n          \"points\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"orientation\",\n          [\"[]\", \"float32\", 3],\n          \"fadeBand\",\n          \"float32\",\n          \"height\",\n          \"float32\",\n          \"radius\",\n          \"float32\",\n          \"guid\",\n          Utils.getQWordReader(),\n        ];\n\n        this.__root = this.MapAudio = [\n          \"filenameAmbientDaySurface\",\n          Utils.getFileNameReader(),\n          \"filenameMusicDaySurface\",\n          Utils.getFileNameReader(),\n          \"filenameAmbientDayUnderwater\",\n          Utils.getFileNameReader(),\n          \"filenameMusicDayUnderwater\",\n          Utils.getFileNameReader(),\n          \"filenameAmbientNightSurface\",\n          Utils.getFileNameReader(),\n          \"filenameMusicNightSurface\",\n          Utils.getFileNameReader(),\n          \"filenameAmbientNightUnderwater\",\n          Utils.getFileNameReader(),\n          \"filenameMusicNightUnderwater\",\n          Utils.getFileNameReader(),\n          \"audioRegions\",\n          Utils.getArrayReader(this.PackMapAudioRegion),\n        ];\n      },\n\n      // => Version: 3, ReferencedFunction: 0xEBB080\n      3: function () {\n        this.PackMapAudioRegion = [\n          \"regionType\",\n          \"uint32\",\n          \"overrideMode\",\n          \"uint32\",\n          \"filenameSourceDay\",\n          Utils.getFileNameReader(),\n          \"filenameAmbientDay\",\n          Utils.getFileNameReader(),\n          \"filenameMusicDay\",\n          Utils.getFileNameReader(),\n          \"filenameSourceNight\",\n          Utils.getFileNameReader(),\n          \"filenameAmbientNight\",\n          Utils.getFileNameReader(),\n          \"filenameMusicNight\",\n          Utils.getFileNameReader(),\n          \"points\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"orientation\",\n          [\"[]\", \"float32\", 3],\n          \"fadeBand\",\n          \"float32\",\n          \"height\",\n          \"float32\",\n          \"radius\",\n          \"float32\",\n        ];\n\n        this.__root = this.MapAudio = [\n          \"filenameAmbientDaySurface\",\n          Utils.getFileNameReader(),\n          \"filenameMusicDaySurface\",\n          Utils.getFileNameReader(),\n          \"filenameAmbientDayUnderwater\",\n          Utils.getFileNameReader(),\n          \"filenameMusicDayUnderwater\",\n          Utils.getFileNameReader(),\n          \"filenameAmbientNightSurface\",\n          Utils.getFileNameReader(),\n          \"filenameMusicNightSurface\",\n          Utils.getFileNameReader(),\n          \"filenameAmbientNightUnderwater\",\n          Utils.getFileNameReader(),\n          \"filenameMusicNightUnderwater\",\n          Utils.getFileNameReader(),\n          \"audioRegions\",\n          Utils.getArrayReader(this.PackMapAudioRegion),\n        ];\n      },\n\n      // => Version: 2\n      2: function () {\n        this.PackMapAudioRegion = [\n          \"regionType\",\n          \"uint32\",\n          \"overrideMode\",\n          \"uint32\",\n          \"filenameSource\",\n          Utils.getFileNameReader(),\n          \"filenameAmbient\",\n          Utils.getFileNameReader(),\n          \"filenameMusic\",\n          Utils.getFileNameReader(),\n          \"points\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"orientation\",\n          [\"[]\", \"float32\", 3],\n          \"fadeBand\",\n          \"float32\",\n          \"height\",\n          \"float32\",\n          \"radius\",\n          \"float32\",\n        ];\n\n        this.__root = this.MapAudio = [\n          \"globalAmbientScriptFilename\",\n          Utils.getFileNameReader(),\n          \"globalMusicScriptFilename\",\n          Utils.getFileNameReader(),\n          \"globalAmbientUnderwaterScriptFilename\",\n          Utils.getFileNameReader(),\n          \"globalMusicUnderwaterScriptFilename\",\n          Utils.getFileNameReader(),\n          \"audioRegions\",\n          Utils.getArrayReader(this.PackMapAudioRegion),\n        ];\n      },\n\n      // => Version: 1\n      1: function () {\n        this.PackMapAudioRegion = [\n          \"regionType\",\n          \"uint32\",\n          \"overrideMode\",\n          \"uint32\",\n          \"filenameSource\",\n          Utils.getFileNameReader(),\n          \"filenameAmbient\",\n          Utils.getFileNameReader(),\n          \"filenameMusic\",\n          Utils.getFileNameReader(),\n          \"points\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"orientation\",\n          [\"[]\", \"float32\", 3],\n          \"fadeBand\",\n          \"float32\",\n          \"height\",\n          \"float32\",\n          \"radius\",\n          \"float32\",\n        ];\n\n        this.__root = this.MapAudio = [\n          \"globalAmbientScriptFilename\",\n          Utils.getFileNameReader(),\n          \"globalMusicScriptFilename\",\n          Utils.getFileNameReader(),\n          \"audioRegions\",\n          Utils.getArrayReader(this.PackMapAudioRegion),\n        ];\n      },\n\n      // => Version: 0\n      0: function () {\n        this.__root = this.MapAudio = [\n          \"globalAmbientScriptFilename\",\n          Utils.getFileNameReader(),\n          \"globalMusicScriptFilename\",\n          Utils.getFileNameReader(),\n        ];\n      },\n    },\n  },\n];\n","const Utils = require(\"../../util/ParserUtils.js\");\n\nmodule.exports = [\n  /// ==================================================\n  /// Chunk: BIDX, versions: 1, strucTab: 0x16CF834\n  /// ==================================================\n\n  {\n    name: \"BIDX\",\n    versions: {\n      // => Version: 0\n      0: function () {\n        this.BankFileNameDataV0 = [\"fileName\", Utils.getFileNameReader()];\n\n        this.BankLanguageDataV0 = [\"bankFileName\", Utils.getArrayReader(this.BankFileNameDataV0)];\n\n        this.__root = this.BankIndexDataV0 = [\"bankLanguage\", Utils.getArrayReader(this.BankLanguageDataV0)];\n      },\n    },\n  },\n];\n","const Utils = require(\"../../util/ParserUtils.js\");\n\nmodule.exports = [\n  /// ==================================================\n  /// Chunk: BKCK, versions: 3, strucTab: 0x16CF458\n  /// ==================================================\n\n  {\n    name: \"BKCK\",\n    versions: {\n      // => Version: 2\n      2: function () {\n        this.AsndFileDataV2 = [\n          \"voiceId\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"reserved1\",\n          \"uint32\",\n          \"reserved2\",\n          \"uint32\",\n          \"reserved3\",\n          \"uint32\",\n          \"reserved4\",\n          \"uint32\",\n          \"length\",\n          \"float32\",\n          \"offset\",\n          \"float32\",\n          \"reserved5\",\n          \"uint8\",\n          \"reserved6\",\n          \"uint8\",\n          \"reserved7\",\n          \"uint8\",\n          \"reserved8\",\n          \"uint8\",\n          \"audioData\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.ReservedBankDataV2 = [\n          \"reserved1\",\n          \"uint32\",\n          \"reserved2\",\n          \"uint32\",\n          \"reserved3\",\n          \"uint32\",\n          \"reserved4\",\n          \"uint32\",\n        ];\n\n        this.__root = this.BankFileDataV2 = [\n          \"reserved1\",\n          \"uint32\",\n          \"reserved2\",\n          \"uint32\",\n          \"reserved3\",\n          \"uint32\",\n          \"reserved4\",\n          \"uint32\",\n          \"asndFile\",\n          Utils.getArrayReader(this.AsndFileDataV2),\n          \"reservedData\",\n          Utils.getPointerReader(this.ReservedBankDataV2),\n        ];\n      },\n\n      // => Version: 1\n      1: function () {\n        this.AsndFileDataV1 = [\n          \"voiceId\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"reserved1\",\n          \"uint32\",\n          \"reserved2\",\n          \"uint32\",\n          \"length\",\n          \"float32\",\n          \"offset\",\n          \"float32\",\n          \"audioData\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.__root = this.BankFileDataV1 = [\n          \"reserved1\",\n          \"uint32\",\n          \"reserved2\",\n          \"uint32\",\n          \"asndFile\",\n          Utils.getArrayReader(this.AsndFileDataV1),\n        ];\n      },\n\n      // => Version: 0\n      0: function () {\n        this.AsndFileDataV0 = [\n          \"voiceId\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"reserved1\",\n          \"uint32\",\n          \"reserved2\",\n          \"uint32\",\n          \"length\",\n          \"float32\",\n          \"offset\",\n          \"float32\",\n          \"audioData\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.__root = this.BankFileDataV0 = [\n          \"reserved1\",\n          \"uint32\",\n          \"reserved2\",\n          \"uint32\",\n          \"asndFile\",\n          Utils.getArrayReader(this.AsndFileDataV0),\n        ];\n      },\n    },\n  },\n];\n","const Utils = require(\"../../util/ParserUtils.js\");\n\nmodule.exports = [\n  /// ==================================================\n  /// Chunk: bloc, versions: 1, strucTab: 0x1724304\n  /// ==================================================\n\n  {\n    name: \"bloc\",\n    versions: {\n      // => Version: 0\n      0: function () {\n        this.PackMapBlockRecord = [\"filename\", Utils.getFileNameReader()];\n\n        this.__root = this.PackMapBlock = [\n          \"blockDims\",\n          [\"[]\", \"uint32\", 2],\n          \"blockRecordArray\",\n          Utils.getArrayReader(this.PackMapBlockRecord),\n        ];\n      },\n    },\n  },\n];\n","const Utils = require(\"../../util/ParserUtils.js\");\n\nmodule.exports = [\n  /// ==================================================\n  /// Chunk: CDHS, versions: 2, strucTab: 0x15313C0\n  /// ==================================================\n\n  {\n    name: \"CDHS\",\n    versions: {\n      // => Version: 1, ReferencedFunction: 0x5B0AE0\n      1: function () {\n        this.PackVsGenParams = [\n          \"pointWindCount\",\n          \"uint8\",\n          \"lightPointCount\",\n          \"uint8\",\n          \"lightSpotCount\",\n          \"uint8\",\n          \"texTransCount\",\n          \"uint8\",\n          \"hazeMode\",\n          \"uint8\",\n          \"flags\",\n          \"uint16\",\n        ];\n\n        this.PackVertexShaderKey = [\n          \"vsGenParams\",\n          this.PackVsGenParams,\n          \"vertexFormat\",\n          \"uint32\",\n          \"texGenCount\",\n          \"uint32\",\n          \"texGen\",\n          [\"[]\", \"uint32\", 14],\n          \"vsVersion\",\n          \"uint32\",\n        ];\n\n        this.__root = this.PackShaderCache = [\"data\", Utils.getArrayReader(this.PackVertexShaderKey)];\n      },\n\n      // => Version: 0\n      0: function () {\n        this.PackVertexShaderKeyV0 = [\n          \"params\",\n          \"uint32\",\n          \"vertexFormat\",\n          \"uint32\",\n          \"texGenCount\",\n          \"uint32\",\n          \"texGen\",\n          [\"[]\", \"uint32\", 14],\n          \"vsVersion\",\n          \"uint32\",\n        ];\n\n        this.__root = this.PackShaderCacheV0 = [\"data\", Utils.getArrayReader(this.PackVertexShaderKeyV0)];\n      },\n    },\n  },\n];\n","const Utils = require(\"../../util/ParserUtils.js\");\n\nmodule.exports = [\n  /// ==================================================\n  /// Chunk: cg15, versions: 1, strucTab: 0x17242C8\n  /// ==================================================\n\n  {\n    name: \"cg15\",\n    versions: {\n      // => Version: 0\n      0: function () {\n        this.PackMapCoarseNavGraphNodeV0 = [\n          \"materialId\",\n          \"uint32\",\n          \"bottomLeftBound\",\n          [\"[]\", \"float32\", 3],\n          \"topRightBound\",\n          [\"[]\", \"float32\", 3],\n          \"centroid\",\n          [\"[]\", \"float32\", 3],\n          \"faces\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n\n        this.PackMapCoarseNavGraphConnectionEdgeV0 = [\n          \"edgeStart\",\n          [\"[]\", \"float32\", 3],\n          \"edgeEnd\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.PackMapCoarseNavGraphConnectionV0 = [\n          \"targetSectionUid\",\n          \"uint32\",\n          \"targetNodeIndex\",\n          \"uint32\",\n          \"edges\",\n          Utils.getArrayReader(this.PackMapCoarseNavGraphConnectionEdgeV0),\n        ];\n\n        this.PackMapCoarseNavGraphNodeConnectionsV0 = [\n          \"nodeIndex\",\n          \"uint32\",\n          \"connections\",\n          Utils.getArrayReader(this.PackMapCoarseNavGraphConnectionV0),\n        ];\n\n        this.PackMapCoarseNavGraphSectionV0 = [\n          \"sectionUid\",\n          \"uint32\",\n          \"nodes\",\n          Utils.getArrayReader(this.PackMapCoarseNavGraphNodeV0),\n          \"nodeConnections\",\n          Utils.getArrayReader(this.PackMapCoarseNavGraphNodeConnectionsV0),\n        ];\n\n        this.__root = this.PackMapCoarseNavGraphV0 = [\n          \"sections\",\n          Utils.getArrayReader(this.PackMapCoarseNavGraphSectionV0),\n        ];\n      },\n    },\n  },\n];\n","const Utils = require(\"../../util/ParserUtils.js\");\n\nmodule.exports = [\n  /// ==================================================\n  /// Chunk: cnfg, versions: 1, strucTab: 0x1884668\n  /// ==================================================\n\n  {\n    name: \"cnfg\",\n    versions: {\n      // => Version: 0\n      0: function () {\n        this.PackAnimAimIKBoneV0 = [\n          \"boneToken\",\n          Utils.getQWordReader(),\n          \"clampAngle\",\n          \"float32\",\n          \"weight\",\n          \"float32\",\n          \"smoothingWeight\",\n          \"float32\",\n        ];\n\n        this.PackAnimAimIKConfigV0 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"boneEye\",\n          Utils.getQWordReader(),\n          \"boneSight\",\n          Utils.getQWordReader(),\n          \"endEffector\",\n          Utils.getQWordReader(),\n          \"frustumHAngle\",\n          \"float32\",\n          \"frustumVAngle\",\n          \"float32\",\n          \"frustumLength\",\n          \"float32\",\n          \"targetVelocityConstraint\",\n          \"float32\",\n          \"bones\",\n          Utils.getArrayReader(this.PackAnimAimIKBoneV0),\n          \"targets\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"flags\",\n          \"uint8\",\n        ];\n\n        this.PackAnimIKRaycastTargetV0 = [\"flags\", \"uint32\", \"direction\", [\"[]\", \"float32\", 3]];\n\n        this.PackAnimIKChainV0 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"smoothWeight\",\n          [\"[]\", \"float32\", 3],\n          \"hyperExtensionStart\",\n          \"float32\",\n          \"hyperExtensionScale\",\n          \"float32\",\n          \"bones\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"targetRaycastInfo\",\n          Utils.getPointerReader(this.PackAnimIKRaycastTargetV0),\n          \"targetMode\",\n          \"uint8\",\n          \"chainType\",\n          \"uint8\",\n        ];\n\n        this.PackAnimIKChainGroupV0 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"chains\",\n          Utils.getArrayReader(this.PackAnimIKChainV0),\n        ];\n\n        this.__root = this.PackAnimConfigV0 = [\n          \"aimIKConfigs\",\n          Utils.getArrayReader(this.PackAnimAimIKConfigV0),\n          \"chainGroups\",\n          Utils.getArrayReader(this.PackAnimIKChainGroupV0),\n        ];\n      },\n    },\n  },\n];\n","const Utils = require(\"../../util/ParserUtils.js\");\n\nmodule.exports = [\n  /// ==================================================\n  /// Chunk: COLL, versions: 5, strucTab: 0x1773030\n  /// ==================================================\n\n  {\n    name: \"COLL\",\n    versions: {\n      // => Version: 4\n      4: function () {\n        this.ModelCollisionKeyFrameV10 = [\n          \"time\",\n          \"float32\",\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"orientation\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.ModelCollisionAnimatedObjectV10 = [\n          \"shapeIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"keyFrames\",\n          Utils.getArrayReader(this.ModelCollisionKeyFrameV10),\n        ];\n\n        this.ModelCollisionAnimationV10 = [\n          \"animation\",\n          Utils.getQWordReader(),\n          \"objects\",\n          Utils.getArrayReader(this.ModelCollisionAnimatedObjectV10),\n          \"targetPoints\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n        ];\n\n        this.ModelCollisionMeshV10 = [\n          \"vertices\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"surfaces\",\n          Utils.getArrayReader(\"uint8\"),\n          \"navSeedPoints\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n        ];\n\n        this.ModelCollisionBoxV10 = [\n          \"dimensions\",\n          [\"[]\", \"float32\", 3],\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 4],\n          \"surface\",\n          \"uint8\",\n        ];\n\n        this.ModelCollisionSphereV10 = [\"radius\", \"float32\", \"position\", [\"[]\", \"float32\", 3], \"surface\", \"uint8\"];\n\n        this.ModelCollisionCapsuleV10 = [\n          \"p0\",\n          [\"[]\", \"float32\", 3],\n          \"p1\",\n          [\"[]\", \"float32\", 3],\n          \"radius\",\n          \"float32\",\n          \"surface\",\n          \"uint8\",\n        ];\n\n        this.ModelCollisionSurfaceV10 = [\"tokens\", Utils.getArrayReader(Utils.getQWordReader())];\n\n        this.__root = this.ModelFileCollisionV10 = [\n          \"animations\",\n          Utils.getArrayReader(this.ModelCollisionAnimationV10),\n          \"meshes\",\n          Utils.getArrayReader(this.ModelCollisionMeshV10),\n          \"boxes\",\n          Utils.getArrayReader(this.ModelCollisionBoxV10),\n          \"spheres\",\n          Utils.getArrayReader(this.ModelCollisionSphereV10),\n          \"capsules\",\n          Utils.getArrayReader(this.ModelCollisionCapsuleV10),\n          \"surfaces\",\n          Utils.getArrayReader(this.ModelCollisionSurfaceV10),\n        ];\n      },\n\n      // => Version: 3, ReferencedFunction: 0xF277D0\n      3: function () {\n        this.ModelCollisionKeyFrameV9 = [\n          \"time\",\n          \"float32\",\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"orientation\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.ModelCollisionAnimatedObjectV9 = [\n          \"shapeIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"keyFrames\",\n          Utils.getArrayReader(this.ModelCollisionKeyFrameV9),\n        ];\n\n        this.ModelCollisionAnimationV9 = [\n          \"animation\",\n          Utils.getQWordReader(),\n          \"objects\",\n          Utils.getArrayReader(this.ModelCollisionAnimatedObjectV9),\n        ];\n\n        this.ModelCollisionMeshV9 = [\n          \"vertices\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"surfaces\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.ModelCollisionBoxV9 = [\n          \"dimensions\",\n          [\"[]\", \"float32\", 3],\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 4],\n          \"surface\",\n          \"uint8\",\n        ];\n\n        this.ModelCollisionSphereV9 = [\"radius\", \"float32\", \"position\", [\"[]\", \"float32\", 3], \"surface\", \"uint8\"];\n\n        this.ModelCollisionCapsuleV9 = [\n          \"p0\",\n          [\"[]\", \"float32\", 3],\n          \"p1\",\n          [\"[]\", \"float32\", 3],\n          \"radius\",\n          \"float32\",\n          \"surface\",\n          \"uint8\",\n        ];\n\n        this.ModelCollisionSurfaceV9 = [\"tokens\", Utils.getArrayReader(Utils.getQWordReader())];\n\n        this.__root = this.ModelFileCollisionV9 = [\n          \"animations\",\n          Utils.getArrayReader(this.ModelCollisionAnimationV9),\n          \"meshes\",\n          Utils.getArrayReader(this.ModelCollisionMeshV9),\n          \"boxes\",\n          Utils.getArrayReader(this.ModelCollisionBoxV9),\n          \"spheres\",\n          Utils.getArrayReader(this.ModelCollisionSphereV9),\n          \"capsules\",\n          Utils.getArrayReader(this.ModelCollisionCapsuleV9),\n          \"surfaces\",\n          Utils.getArrayReader(this.ModelCollisionSurfaceV9),\n        ];\n      },\n\n      // => Version: 2\n      2: function () {\n        this.ModelCollisionMeshV8 = [\n          \"animationSequences\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"vertices\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"surfaces\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.ModelCollisionCloudV8 = [\n          \"animationSequence\",\n          Utils.getQWordReader(),\n          \"points\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"surface\",\n          \"uint8\",\n        ];\n\n        this.ModelCollisionCubeV8 = [\"transform\", [\"[]\", [\"[]\", \"float32\", 4], 3], \"surface\", \"uint8\"];\n\n        this.ModelCollisionSphereV8 = [\"radius\", \"float32\", \"position\", [\"[]\", \"float32\", 3], \"surface\", \"uint8\"];\n\n        this.ModelCollisionCapsuleV8 = [\n          \"p0\",\n          [\"[]\", \"float32\", 3],\n          \"p1\",\n          [\"[]\", \"float32\", 3],\n          \"radius\",\n          \"float32\",\n          \"surface\",\n          \"uint8\",\n        ];\n\n        this.ModelCollisionSurfaceV8 = [\"tokens\", Utils.getArrayReader(Utils.getQWordReader())];\n\n        this.__root = this.ModelFileCollisionV8 = [\n          \"meshes\",\n          Utils.getArrayReader(this.ModelCollisionMeshV8),\n          \"clouds\",\n          Utils.getArrayReader(this.ModelCollisionCloudV8),\n          \"cubes\",\n          Utils.getArrayReader(this.ModelCollisionCubeV8),\n          \"spheres\",\n          Utils.getArrayReader(this.ModelCollisionSphereV8),\n          \"capsules\",\n          Utils.getArrayReader(this.ModelCollisionCapsuleV8),\n          \"surfaces\",\n          Utils.getArrayReader(this.ModelCollisionSurfaceV8),\n        ];\n      },\n\n      // => Version: 1\n      1: function () {\n        this.ModelCollisionMeshV1 = [\n          \"animationSequences\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"vertices\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"surfaces\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.ModelCollisionCloudV1 = [\n          \"animationSequence\",\n          Utils.getQWordReader(),\n          \"points\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"surface\",\n          \"uint8\",\n        ];\n\n        this.ModelCollisionCubeV1 = [\"transform\", [\"[]\", [\"[]\", \"float32\", 4], 3], \"surface\", \"uint8\"];\n\n        this.ModelCollisionSphereV1 = [\"radius\", \"float32\", \"position\", [\"[]\", \"float32\", 3], \"surface\", \"uint8\"];\n\n        this.ModelCollisionSurfaceV1 = [\"tokens\", Utils.getArrayReader(Utils.getQWordReader())];\n\n        this.__root = this.ModelFileCollisionV1 = [\n          \"meshes\",\n          Utils.getArrayReader(this.ModelCollisionMeshV1),\n          \"clouds\",\n          Utils.getArrayReader(this.ModelCollisionCloudV1),\n          \"cubes\",\n          Utils.getArrayReader(this.ModelCollisionCubeV1),\n          \"spheres\",\n          Utils.getArrayReader(this.ModelCollisionSphereV1),\n          \"surfaces\",\n          Utils.getArrayReader(this.ModelCollisionSurfaceV1),\n        ];\n      },\n\n      // => Version: 0\n      0: function () {\n        this.ModelCollisionMeshV0 = [\n          \"animationSequence\",\n          Utils.getQWordReader(),\n          \"vertices\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"surfaces\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.ModelCollisionCloudV0 = [\n          \"animationSequence\",\n          Utils.getQWordReader(),\n          \"points\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"surface\",\n          \"uint8\",\n        ];\n\n        this.ModelCollisionCubeV0 = [\"transform\", [\"[]\", [\"[]\", \"float32\", 4], 3], \"surface\", \"uint8\"];\n\n        this.ModelCollisionSphereV0 = [\"radius\", \"float32\", \"position\", [\"[]\", \"float32\", 3], \"surface\", \"uint8\"];\n\n        this.ModelCollisionSurfaceV0 = [\"tokens\", Utils.getArrayReader(Utils.getQWordReader())];\n\n        this.__root = this.ModelFileCollisionV0 = [\n          \"meshes\",\n          Utils.getArrayReader(this.ModelCollisionMeshV0),\n          \"clouds\",\n          Utils.getArrayReader(this.ModelCollisionCloudV0),\n          \"cubes\",\n          Utils.getArrayReader(this.ModelCollisionCubeV0),\n          \"spheres\",\n          Utils.getArrayReader(this.ModelCollisionSphereV0),\n          \"surfaces\",\n          Utils.getArrayReader(this.ModelCollisionSurfaceV0),\n        ];\n      },\n    },\n  },\n];\n","const Utils = require(\"../../util/ParserUtils.js\");\n\nmodule.exports = [\n  /// ==================================================\n  /// Chunk: comp, versions: 20, strucTab: 0x18840B0\n  /// ==================================================\n\n  {\n    name: \"comp\",\n    versions: {\n      // => Version: 19\n      19: function () {\n        this.PackCompositeBlitRectSetV19 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"size\",\n          [\"[]\", \"uint32\", 2],\n          \"rectIndex\",\n          Utils.getArrayReader(\"uint8\"),\n          \"rectArray\",\n          Utils.getArrayReader([\"[]\", \"uint32\", 4]),\n        ];\n\n        this.PackCompositeBoneScaleParamV19 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint8\",\n          \"max\",\n          \"float32\",\n          \"min\",\n          \"float32\",\n          \"rotate\",\n          [\"[]\", \"float32\", 3],\n          \"scale\",\n          [\"[]\", \"float32\", 3],\n          \"translate\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.PackCompositeBoneScaleRegionV19 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"value\",\n          \"float32\",\n          \"Bone\",\n          Utils.getArrayReader(this.PackCompositeBoneScaleParamV19),\n        ];\n\n        this.PackCompositeMorphWeightV19 = [\"name\", Utils.getQWordReader(), \"value\", \"float32\"];\n\n        this.PackCompositeBoneScaleV19 = [\n          \"BodyRegion\",\n          Utils.getArrayReader(this.PackCompositeBoneScaleRegionV19),\n          \"MorphWeight\",\n          Utils.getArrayReader(this.PackCompositeMorphWeightV19),\n        ];\n\n        this.PackCompositeBoneScaleFileV19 = [\"fileName\", Utils.getString16Reader()];\n\n        this.PackCompositeFileDataV19 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint8\",\n          \"flags\",\n          \"uint8\",\n          \"animRoleOverride\",\n          Utils.getQWordReader(),\n          \"meshBase\",\n          Utils.getFileNameReader(),\n          \"meshOverlap\",\n          Utils.getFileNameReader(),\n          \"maskDye1\",\n          Utils.getFileNameReader(),\n          \"maskDye2\",\n          Utils.getFileNameReader(),\n          \"maskDye3\",\n          Utils.getFileNameReader(),\n          \"maskDye4\",\n          Utils.getFileNameReader(),\n          \"maskCut\",\n          Utils.getFileNameReader(),\n          \"textureBase\",\n          Utils.getFileNameReader(),\n          \"textureNormal\",\n          Utils.getFileNameReader(),\n          \"dyeFlags\",\n          \"uint32\",\n          \"hideFlags\",\n          \"uint32\",\n          \"skinFlags\",\n          \"uint32\",\n          \"blitRectIndex\",\n          \"uint8\",\n        ];\n\n        this.PackCompositeSkinPatternV19 = [\n          \"chest\",\n          Utils.getFileNameReader(),\n          \"face\",\n          Utils.getFileNameReader(),\n          \"feet\",\n          Utils.getFileNameReader(),\n          \"hands\",\n          Utils.getFileNameReader(),\n          \"legs\",\n          Utils.getFileNameReader(),\n          \"ears\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackCompositeSkinStyleV19 = [\n          \"chest\",\n          Utils.getQWordReader(),\n          \"feet\",\n          Utils.getQWordReader(),\n          \"hands\",\n          Utils.getQWordReader(),\n          \"legs\",\n          Utils.getQWordReader(),\n        ];\n\n        this.PackCompositeColorV19 = [\n          \"brightness\",\n          \"uint8\",\n          \"contrast\",\n          \"uint8\",\n          \"hue\",\n          \"uint8\",\n          \"saturation\",\n          \"uint8\",\n          \"lightness\",\n          \"uint8\",\n        ];\n\n        this.PackCompositeVariantComponentV19 = [\n          \"nameToken\",\n          Utils.getQWordReader(),\n          \"color0\",\n          this.PackCompositeColorV19,\n          \"color1\",\n          this.PackCompositeColorV19,\n          \"color2\",\n          this.PackCompositeColorV19,\n          \"color3\",\n          this.PackCompositeColorV19,\n        ];\n\n        this.PackCompositeVariantV19 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"boneScaleIndex\",\n          \"uint32\",\n          \"components\",\n          Utils.getArrayReader(this.PackCompositeVariantComponentV19),\n          \"eyeColor\",\n          this.PackCompositeColorV19,\n          \"hairColor\",\n          this.PackCompositeColorV19,\n          \"hairColor2\",\n          this.PackCompositeColorV19,\n          \"patternColor\",\n          this.PackCompositeColorV19,\n          \"skinColor\",\n          this.PackCompositeColorV19,\n          \"skinIndex\",\n          \"uint32\",\n          \"skinStyle\",\n          \"uint32\",\n        ];\n\n        this.PackCompositeAnimOverrideV19 = [\"animRole\", Utils.getQWordReader(), \"filepath\", Utils.getFileNameReader()];\n\n        this.PackCompositeRaceDataV19 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"nameToken\",\n          Utils.getQWordReader(),\n          \"baseHeadToken\",\n          Utils.getQWordReader(),\n          \"beard\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"bodyBoneScales\",\n          Utils.getArrayReader(this.PackCompositeBoneScaleV19),\n          \"bodyBoneScaleFiles\",\n          Utils.getArrayReader(this.PackCompositeBoneScaleFileV19),\n          \"ears\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"eyeColorPalette\",\n          Utils.getString16Reader(),\n          \"faceBoneScales\",\n          Utils.getArrayReader(this.PackCompositeBoneScaleV19),\n          \"faces\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"fileData\",\n          Utils.getArrayReader(this.PackCompositeFileDataV19),\n          \"flags\",\n          \"uint32\",\n          \"hairStyles\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"hairColorPalette\",\n          Utils.getString16Reader(),\n          \"skeletonFile\",\n          Utils.getFileNameReader(),\n          \"skinPatterns\",\n          Utils.getArrayReader(this.PackCompositeSkinPatternV19),\n          \"skinColorPalette\",\n          Utils.getString16Reader(),\n          \"skinPatternPalette\",\n          Utils.getString16Reader(),\n          \"skinStyles\",\n          Utils.getArrayReader(this.PackCompositeSkinStyleV19),\n          \"type\",\n          \"uint32\",\n          \"variantRefRace\",\n          Utils.getQWordReader(),\n          \"variants\",\n          Utils.getArrayReader(this.PackCompositeVariantV19),\n          \"animOverrides\",\n          Utils.getArrayReader(this.PackCompositeAnimOverrideV19),\n        ];\n\n        this.__root = this.PackCompositeV19 = [\n          \"armorColorIds\",\n          Utils.getArrayReader(\"uint32\"),\n          \"blitRects\",\n          Utils.getArrayReader(this.PackCompositeBlitRectSetV19),\n          \"boneScales\",\n          Utils.getArrayReader(this.PackCompositeBoneScaleV19),\n          \"raceSexData\",\n          Utils.getArrayReader(this.PackCompositeRaceDataV19),\n          \"configVersion\",\n          \"uint16\",\n        ];\n      },\n\n      // => Version: 18\n      18: function () {\n        this.PackCompositeBlitRectSetV18 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"size\",\n          [\"[]\", \"uint32\", 2],\n          \"rectIndex\",\n          Utils.getArrayReader(\"uint8\"),\n          \"rectArray\",\n          Utils.getArrayReader([\"[]\", \"uint32\", 4]),\n        ];\n\n        this.PackCompositeBoneScaleParamV18 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint8\",\n          \"max\",\n          \"float32\",\n          \"min\",\n          \"float32\",\n          \"rotate\",\n          [\"[]\", \"float32\", 3],\n          \"scale\",\n          [\"[]\", \"float32\", 3],\n          \"translate\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.PackCompositeBoneScaleRegionV18 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"value\",\n          \"float32\",\n          \"Bone\",\n          Utils.getArrayReader(this.PackCompositeBoneScaleParamV18),\n        ];\n\n        this.PackCompositeMorphWeightV18 = [\"name\", Utils.getQWordReader(), \"value\", \"float32\"];\n\n        this.PackCompositeBoneScaleV18 = [\n          \"BodyRegion\",\n          Utils.getArrayReader(this.PackCompositeBoneScaleRegionV18),\n          \"MorphWeight\",\n          Utils.getArrayReader(this.PackCompositeMorphWeightV18),\n        ];\n\n        this.PackCompositeBoneScaleFileV18 = [\"fileName\", Utils.getString16Reader()];\n\n        this.PackCompositeFileDataV18 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint8\",\n          \"flags\",\n          \"uint8\",\n          \"animRoleOverride\",\n          Utils.getQWordReader(),\n          \"meshBase\",\n          Utils.getFileNameReader(),\n          \"meshOverlap\",\n          Utils.getFileNameReader(),\n          \"maskDye1\",\n          Utils.getFileNameReader(),\n          \"maskDye2\",\n          Utils.getFileNameReader(),\n          \"maskDye3\",\n          Utils.getFileNameReader(),\n          \"maskDye4\",\n          Utils.getFileNameReader(),\n          \"maskCut\",\n          Utils.getFileNameReader(),\n          \"textureBase\",\n          Utils.getFileNameReader(),\n          \"textureNormal\",\n          Utils.getFileNameReader(),\n          \"dyeFlags\",\n          \"uint32\",\n          \"hideFlags\",\n          \"uint32\",\n          \"skinFlags\",\n          \"uint32\",\n          \"blitRectIndex\",\n          \"uint8\",\n        ];\n\n        this.PackCompositeSkinPatternV18 = [\n          \"chest\",\n          Utils.getFileNameReader(),\n          \"face\",\n          Utils.getFileNameReader(),\n          \"feet\",\n          Utils.getFileNameReader(),\n          \"hands\",\n          Utils.getFileNameReader(),\n          \"legs\",\n          Utils.getFileNameReader(),\n          \"ears\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackCompositeSkinStyleV18 = [\n          \"chest\",\n          Utils.getQWordReader(),\n          \"feet\",\n          Utils.getQWordReader(),\n          \"hands\",\n          Utils.getQWordReader(),\n          \"legs\",\n          Utils.getQWordReader(),\n        ];\n\n        this.PackCompositeColorV18 = [\n          \"brightness\",\n          \"uint8\",\n          \"contrast\",\n          \"uint8\",\n          \"hue\",\n          \"uint8\",\n          \"saturation\",\n          \"uint8\",\n          \"lightness\",\n          \"uint8\",\n        ];\n\n        this.PackCompositeVariantComponentV18 = [\n          \"nameToken\",\n          Utils.getQWordReader(),\n          \"color0\",\n          this.PackCompositeColorV18,\n          \"color1\",\n          this.PackCompositeColorV18,\n          \"color2\",\n          this.PackCompositeColorV18,\n          \"color3\",\n          this.PackCompositeColorV18,\n        ];\n\n        this.PackCompositeVariantV18 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"boneScaleIndex\",\n          \"uint32\",\n          \"components\",\n          Utils.getArrayReader(this.PackCompositeVariantComponentV18),\n          \"eyeColor\",\n          this.PackCompositeColorV18,\n          \"hairColor\",\n          this.PackCompositeColorV18,\n          \"hairColor2\",\n          this.PackCompositeColorV18,\n          \"patternColor\",\n          this.PackCompositeColorV18,\n          \"skinColor\",\n          this.PackCompositeColorV18,\n          \"skinIndex\",\n          \"uint32\",\n        ];\n\n        this.PackCompositeAnimOverrideV18 = [\"animRole\", Utils.getQWordReader(), \"filepath\", Utils.getFileNameReader()];\n\n        this.PackCompositeRaceDataV18 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"nameToken\",\n          Utils.getQWordReader(),\n          \"baseHeadToken\",\n          Utils.getQWordReader(),\n          \"beard\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"bodyBoneScales\",\n          Utils.getArrayReader(this.PackCompositeBoneScaleV18),\n          \"bodyBoneScaleFiles\",\n          Utils.getArrayReader(this.PackCompositeBoneScaleFileV18),\n          \"ears\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"eyeColorPalette\",\n          Utils.getString16Reader(),\n          \"faceBoneScales\",\n          Utils.getArrayReader(this.PackCompositeBoneScaleV18),\n          \"faces\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"fileData\",\n          Utils.getArrayReader(this.PackCompositeFileDataV18),\n          \"flags\",\n          \"uint32\",\n          \"hairStyles\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"hairColorPalette\",\n          Utils.getString16Reader(),\n          \"skeletonFile\",\n          Utils.getFileNameReader(),\n          \"skinPatterns\",\n          Utils.getArrayReader(this.PackCompositeSkinPatternV18),\n          \"skinColorPalette\",\n          Utils.getString16Reader(),\n          \"skinPatternPalette\",\n          Utils.getString16Reader(),\n          \"skinStyles\",\n          Utils.getArrayReader(this.PackCompositeSkinStyleV18),\n          \"type\",\n          \"uint32\",\n          \"variantRefRace\",\n          Utils.getQWordReader(),\n          \"variants\",\n          Utils.getArrayReader(this.PackCompositeVariantV18),\n          \"animOverrides\",\n          Utils.getArrayReader(this.PackCompositeAnimOverrideV18),\n        ];\n\n        this.__root = this.PackCompositeV18 = [\n          \"armorColorIds\",\n          Utils.getArrayReader(\"uint32\"),\n          \"blitRects\",\n          Utils.getArrayReader(this.PackCompositeBlitRectSetV18),\n          \"boneScales\",\n          Utils.getArrayReader(this.PackCompositeBoneScaleV18),\n          \"raceSexData\",\n          Utils.getArrayReader(this.PackCompositeRaceDataV18),\n          \"configVersion\",\n          \"uint16\",\n        ];\n      },\n\n      // => Version: 17, ReferencedFunction: 0x1103270\n      17: function () {\n        this.PackCompositeBlitRectSetV17 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"size\",\n          [\"[]\", \"uint32\", 2],\n          \"rectIndex\",\n          Utils.getArrayReader(\"uint8\"),\n          \"rectArray\",\n          Utils.getArrayReader([\"[]\", \"uint32\", 4]),\n        ];\n\n        this.PackCompositeBoneScaleParamV17 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint8\",\n          \"max\",\n          \"float32\",\n          \"min\",\n          \"float32\",\n          \"rotate\",\n          [\"[]\", \"float32\", 3],\n          \"scale\",\n          [\"[]\", \"float32\", 3],\n          \"translate\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.PackCompositeBoneScaleRegionV17 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"value\",\n          \"float32\",\n          \"Bone\",\n          Utils.getArrayReader(this.PackCompositeBoneScaleParamV17),\n        ];\n\n        this.PackCompositeMorphWeightV17 = [\"name\", Utils.getQWordReader(), \"value\", \"float32\"];\n\n        this.PackCompositeBoneScaleV17 = [\n          \"BodyRegion\",\n          Utils.getArrayReader(this.PackCompositeBoneScaleRegionV17),\n          \"MorphWeight\",\n          Utils.getArrayReader(this.PackCompositeMorphWeightV17),\n        ];\n\n        this.PackCompositeBoneScaleFileV17 = [\"fileName\", Utils.getString16Reader()];\n\n        this.PackCompositeFileDataV17 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint8\",\n          \"flags\",\n          \"uint8\",\n          \"meshBase\",\n          Utils.getFileNameReader(),\n          \"meshOverlap\",\n          Utils.getFileNameReader(),\n          \"maskDye1\",\n          Utils.getFileNameReader(),\n          \"maskDye2\",\n          Utils.getFileNameReader(),\n          \"maskDye3\",\n          Utils.getFileNameReader(),\n          \"maskDye4\",\n          Utils.getFileNameReader(),\n          \"maskCut\",\n          Utils.getFileNameReader(),\n          \"textureBase\",\n          Utils.getFileNameReader(),\n          \"textureNormal\",\n          Utils.getFileNameReader(),\n          \"dyeFlags\",\n          \"uint32\",\n          \"hideFlags\",\n          \"uint32\",\n          \"skinFlags\",\n          \"uint32\",\n          \"blitRectIndex\",\n          \"uint8\",\n        ];\n\n        this.PackCompositeSkinPatternV17 = [\n          \"chest\",\n          Utils.getFileNameReader(),\n          \"face\",\n          Utils.getFileNameReader(),\n          \"feet\",\n          Utils.getFileNameReader(),\n          \"hands\",\n          Utils.getFileNameReader(),\n          \"legs\",\n          Utils.getFileNameReader(),\n          \"ears\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackCompositeSkinStyleV17 = [\n          \"chest\",\n          Utils.getQWordReader(),\n          \"feet\",\n          Utils.getQWordReader(),\n          \"hands\",\n          Utils.getQWordReader(),\n          \"legs\",\n          Utils.getQWordReader(),\n        ];\n\n        this.PackCompositeColorV17 = [\n          \"brightness\",\n          \"uint8\",\n          \"contrast\",\n          \"uint8\",\n          \"hue\",\n          \"uint8\",\n          \"saturation\",\n          \"uint8\",\n          \"lightness\",\n          \"uint8\",\n        ];\n\n        this.PackCompositeVariantComponentV17 = [\n          \"nameToken\",\n          Utils.getQWordReader(),\n          \"color0\",\n          this.PackCompositeColorV17,\n          \"color1\",\n          this.PackCompositeColorV17,\n          \"color2\",\n          this.PackCompositeColorV17,\n          \"color3\",\n          this.PackCompositeColorV17,\n        ];\n\n        this.PackCompositeVariantV17 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"boneScaleIndex\",\n          \"uint32\",\n          \"components\",\n          Utils.getArrayReader(this.PackCompositeVariantComponentV17),\n          \"eyeColor\",\n          this.PackCompositeColorV17,\n          \"hairColor\",\n          this.PackCompositeColorV17,\n          \"hairColor2\",\n          this.PackCompositeColorV17,\n          \"patternColor\",\n          this.PackCompositeColorV17,\n          \"skinColor\",\n          this.PackCompositeColorV17,\n          \"skinIndex\",\n          \"uint32\",\n        ];\n\n        this.PackCompositeAnimOverrideV17 = [\"animRole\", Utils.getQWordReader(), \"filepath\", Utils.getFileNameReader()];\n\n        this.PackCompositeRaceDataV17 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"nameToken\",\n          Utils.getQWordReader(),\n          \"baseHeadToken\",\n          Utils.getQWordReader(),\n          \"beard\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"bodyBoneScales\",\n          Utils.getArrayReader(this.PackCompositeBoneScaleV17),\n          \"bodyBoneScaleFiles\",\n          Utils.getArrayReader(this.PackCompositeBoneScaleFileV17),\n          \"ears\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"eyeColorPalette\",\n          Utils.getString16Reader(),\n          \"faceBoneScales\",\n          Utils.getArrayReader(this.PackCompositeBoneScaleV17),\n          \"faces\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"fileData\",\n          Utils.getArrayReader(this.PackCompositeFileDataV17),\n          \"flags\",\n          \"uint32\",\n          \"hairStyles\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"hairColorPalette\",\n          Utils.getString16Reader(),\n          \"skeletonFile\",\n          Utils.getFileNameReader(),\n          \"skinPatterns\",\n          Utils.getArrayReader(this.PackCompositeSkinPatternV17),\n          \"skinColorPalette\",\n          Utils.getString16Reader(),\n          \"skinPatternPalette\",\n          Utils.getString16Reader(),\n          \"skinStyles\",\n          Utils.getArrayReader(this.PackCompositeSkinStyleV17),\n          \"type\",\n          \"uint32\",\n          \"variantRefRace\",\n          Utils.getQWordReader(),\n          \"variants\",\n          Utils.getArrayReader(this.PackCompositeVariantV17),\n          \"animOverrides\",\n          Utils.getArrayReader(this.PackCompositeAnimOverrideV17),\n        ];\n\n        this.__root = this.PackCompositeV17 = [\n          \"armorColorIds\",\n          Utils.getArrayReader(\"uint32\"),\n          \"blitRects\",\n          Utils.getArrayReader(this.PackCompositeBlitRectSetV17),\n          \"boneScales\",\n          Utils.getArrayReader(this.PackCompositeBoneScaleV17),\n          \"raceSexData\",\n          Utils.getArrayReader(this.PackCompositeRaceDataV17),\n          \"configVersion\",\n          \"uint16\",\n        ];\n      },\n\n      // => Version: 16, ReferencedFunction: 0x1102ED0\n      16: function () {\n        this.PackCompositeBlitRectSetV16 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"size\",\n          [\"[]\", \"uint32\", 2],\n          \"rectIndex\",\n          Utils.getArrayReader(\"uint8\"),\n          \"rectArray\",\n          Utils.getArrayReader([\"[]\", \"uint32\", 4]),\n        ];\n\n        this.PackCompositeBoneScaleParamV16 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint8\",\n          \"max\",\n          \"float32\",\n          \"min\",\n          \"float32\",\n          \"rotate\",\n          [\"[]\", \"float32\", 3],\n          \"scale\",\n          [\"[]\", \"float32\", 3],\n          \"translate\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.PackCompositeBoneScaleRegionV16 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"value\",\n          \"float32\",\n          \"Bone\",\n          Utils.getArrayReader(this.PackCompositeBoneScaleParamV16),\n        ];\n\n        this.PackCompositeMorphWeightV16 = [\"name\", Utils.getQWordReader(), \"value\", \"float32\"];\n\n        this.PackCompositeBoneScaleV16 = [\n          \"BodyRegion\",\n          Utils.getArrayReader(this.PackCompositeBoneScaleRegionV16),\n          \"MorphWeight\",\n          Utils.getArrayReader(this.PackCompositeMorphWeightV16),\n        ];\n\n        this.PackCompositeBoneScaleFileV16 = [\"fileName\", Utils.getString16Reader()];\n\n        this.PackCompositeFileDataV16 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint8\",\n          \"flags\",\n          \"uint8\",\n          \"meshBase\",\n          Utils.getFileNameReader(),\n          \"meshOverlap\",\n          Utils.getFileNameReader(),\n          \"maskDye1\",\n          Utils.getFileNameReader(),\n          \"maskDye2\",\n          Utils.getFileNameReader(),\n          \"maskDye3\",\n          Utils.getFileNameReader(),\n          \"maskDye4\",\n          Utils.getFileNameReader(),\n          \"maskCut\",\n          Utils.getFileNameReader(),\n          \"textureBase\",\n          Utils.getFileNameReader(),\n          \"textureNormal\",\n          Utils.getFileNameReader(),\n          \"dyeFlags\",\n          \"uint32\",\n          \"hideFlags\",\n          \"uint32\",\n          \"skinFlags\",\n          \"uint32\",\n          \"blitRectIndex\",\n          \"uint8\",\n        ];\n\n        this.PackCompositeSkinPatternV16 = [\n          \"chest\",\n          Utils.getFileNameReader(),\n          \"face\",\n          Utils.getFileNameReader(),\n          \"feet\",\n          Utils.getFileNameReader(),\n          \"hands\",\n          Utils.getFileNameReader(),\n          \"legs\",\n          Utils.getFileNameReader(),\n          \"ears\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackCompositeColorV16 = [\n          \"brightness\",\n          \"uint8\",\n          \"contrast\",\n          \"uint8\",\n          \"hue\",\n          \"uint8\",\n          \"saturation\",\n          \"uint8\",\n          \"lightness\",\n          \"uint8\",\n        ];\n\n        this.PackCompositeVariantComponentV16 = [\n          \"nameToken\",\n          Utils.getQWordReader(),\n          \"color0\",\n          this.PackCompositeColorV16,\n          \"color1\",\n          this.PackCompositeColorV16,\n          \"color2\",\n          this.PackCompositeColorV16,\n          \"color3\",\n          this.PackCompositeColorV16,\n        ];\n\n        this.PackCompositeVariantV16 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"boneScaleIndex\",\n          \"uint32\",\n          \"components\",\n          Utils.getArrayReader(this.PackCompositeVariantComponentV16),\n          \"eyeColor\",\n          this.PackCompositeColorV16,\n          \"hairColor\",\n          this.PackCompositeColorV16,\n          \"hairColor2\",\n          this.PackCompositeColorV16,\n          \"patternColor\",\n          this.PackCompositeColorV16,\n          \"skinColor\",\n          this.PackCompositeColorV16,\n          \"skinIndex\",\n          \"uint32\",\n        ];\n\n        this.PackCompositeAnimOverrideV16 = [\"animRole\", Utils.getQWordReader(), \"filepath\", Utils.getFileNameReader()];\n\n        this.PackCompositeRaceDataV16 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"nameToken\",\n          Utils.getQWordReader(),\n          \"baseHeadToken\",\n          Utils.getQWordReader(),\n          \"beard\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"bodyBoneScales\",\n          Utils.getArrayReader(this.PackCompositeBoneScaleV16),\n          \"bodyBoneScaleFiles\",\n          Utils.getArrayReader(this.PackCompositeBoneScaleFileV16),\n          \"ears\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"eyeColorPalette\",\n          Utils.getString16Reader(),\n          \"faceBoneScales\",\n          Utils.getArrayReader(this.PackCompositeBoneScaleV16),\n          \"faces\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"fileData\",\n          Utils.getArrayReader(this.PackCompositeFileDataV16),\n          \"flags\",\n          \"uint32\",\n          \"hairStyles\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"hairColorPalette\",\n          Utils.getString16Reader(),\n          \"skeletonFile\",\n          Utils.getFileNameReader(),\n          \"skinPatterns\",\n          Utils.getArrayReader(this.PackCompositeSkinPatternV16),\n          \"skinColorPalette\",\n          Utils.getString16Reader(),\n          \"skinPatternPalette\",\n          Utils.getString16Reader(),\n          \"skinStyleCount\",\n          \"uint8\",\n          \"type\",\n          \"uint32\",\n          \"variantRefRace\",\n          Utils.getQWordReader(),\n          \"variants\",\n          Utils.getArrayReader(this.PackCompositeVariantV16),\n          \"animOverrides\",\n          Utils.getArrayReader(this.PackCompositeAnimOverrideV16),\n        ];\n\n        this.__root = this.PackCompositeV16 = [\n          \"armorColorIds\",\n          Utils.getArrayReader(\"uint32\"),\n          \"blitRects\",\n          Utils.getArrayReader(this.PackCompositeBlitRectSetV16),\n          \"boneScales\",\n          Utils.getArrayReader(this.PackCompositeBoneScaleV16),\n          \"raceSexData\",\n          Utils.getArrayReader(this.PackCompositeRaceDataV16),\n          \"configVersion\",\n          \"uint16\",\n        ];\n      },\n\n      // => Version: 15\n      15: function () {\n        this.PackCompositeBlitRectSetV15 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"size\",\n          [\"[]\", \"uint32\", 2],\n          \"rectIndex\",\n          Utils.getArrayReader(\"uint8\"),\n          \"rectArray\",\n          Utils.getArrayReader([\"[]\", \"uint32\", 4]),\n        ];\n\n        this.PackCompositeBoneScaleParamV15 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint8\",\n          \"max\",\n          \"float32\",\n          \"min\",\n          \"float32\",\n          \"rotate\",\n          [\"[]\", \"float32\", 3],\n          \"scale\",\n          [\"[]\", \"float32\", 3],\n          \"translate\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.PackCompositeBoneScaleRegionV15 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"value\",\n          \"float32\",\n          \"Bone\",\n          Utils.getArrayReader(this.PackCompositeBoneScaleParamV15),\n        ];\n\n        this.PackCompositeMorphWeightV15 = [\"name\", Utils.getQWordReader(), \"value\", \"float32\"];\n\n        this.PackCompositeBoneScaleV15 = [\n          \"BodyRegion\",\n          Utils.getArrayReader(this.PackCompositeBoneScaleRegionV15),\n          \"MorphWeight\",\n          Utils.getArrayReader(this.PackCompositeMorphWeightV15),\n        ];\n\n        this.PackCompositeBoneScaleFileV15 = [\"fileName\", Utils.getString16Reader()];\n\n        this.PackCompositeFileDataV15 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint8\",\n          \"flags\",\n          \"uint8\",\n          \"meshBase\",\n          Utils.getFileNameReader(),\n          \"meshOverlap\",\n          Utils.getFileNameReader(),\n          \"maskDye1\",\n          Utils.getFileNameReader(),\n          \"maskDye2\",\n          Utils.getFileNameReader(),\n          \"maskDye3\",\n          Utils.getFileNameReader(),\n          \"maskDye4\",\n          Utils.getFileNameReader(),\n          \"maskCut\",\n          Utils.getFileNameReader(),\n          \"textureBase\",\n          Utils.getFileNameReader(),\n          \"textureNormal\",\n          Utils.getFileNameReader(),\n          \"dyeFlags\",\n          \"uint32\",\n          \"hideFlags\",\n          \"uint32\",\n          \"skinFlags\",\n          \"uint32\",\n          \"blitRectIndex\",\n          \"uint8\",\n        ];\n\n        this.PackCompositeSkinPatternV15 = [\n          \"chest\",\n          Utils.getFileNameReader(),\n          \"face\",\n          Utils.getFileNameReader(),\n          \"feet\",\n          Utils.getFileNameReader(),\n          \"hands\",\n          Utils.getFileNameReader(),\n          \"legs\",\n          Utils.getFileNameReader(),\n          \"ears\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackCompositeColorV15 = [\n          \"brightness\",\n          \"uint8\",\n          \"contrast\",\n          \"uint8\",\n          \"hue\",\n          \"uint8\",\n          \"saturation\",\n          \"uint8\",\n          \"lightness\",\n          \"uint8\",\n        ];\n\n        this.PackCompositeVariantComponentV15 = [\n          \"nameToken\",\n          Utils.getQWordReader(),\n          \"color0\",\n          this.PackCompositeColorV15,\n          \"color1\",\n          this.PackCompositeColorV15,\n          \"color2\",\n          this.PackCompositeColorV15,\n          \"color3\",\n          this.PackCompositeColorV15,\n        ];\n\n        this.PackCompositeVariantV15 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"boneScaleIndex\",\n          \"uint32\",\n          \"components\",\n          Utils.getArrayReader(this.PackCompositeVariantComponentV15),\n          \"eyeColor\",\n          this.PackCompositeColorV15,\n          \"hairColor\",\n          this.PackCompositeColorV15,\n          \"hairColor2\",\n          this.PackCompositeColorV15,\n          \"patternColor\",\n          this.PackCompositeColorV15,\n          \"skinColor\",\n          this.PackCompositeColorV15,\n          \"skinIndex\",\n          \"uint32\",\n        ];\n\n        this.PackCompositeAnimOverrideV15 = [\"animRole\", Utils.getQWordReader(), \"filepath\", Utils.getFileNameReader()];\n\n        this.PackCompositeRaceDataV15 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"nameToken\",\n          Utils.getQWordReader(),\n          \"baseHeadToken\",\n          Utils.getQWordReader(),\n          \"beard\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"bodyBoneScales\",\n          Utils.getArrayReader(this.PackCompositeBoneScaleV15),\n          \"bodyBoneScaleFiles\",\n          Utils.getArrayReader(this.PackCompositeBoneScaleFileV15),\n          \"ears\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"eyeColorPalette\",\n          Utils.getString16Reader(),\n          \"faceBoneScales\",\n          Utils.getArrayReader(this.PackCompositeBoneScaleV15),\n          \"faces\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"fileData\",\n          Utils.getArrayReader(this.PackCompositeFileDataV15),\n          \"flags\",\n          \"uint32\",\n          \"hairStyles\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"hairColorPalette\",\n          Utils.getString16Reader(),\n          \"skeletonFile\",\n          Utils.getFileNameReader(),\n          \"skinPatterns\",\n          Utils.getArrayReader(this.PackCompositeSkinPatternV15),\n          \"skinColorPalette\",\n          Utils.getString16Reader(),\n          \"skinPatternPalette\",\n          Utils.getString16Reader(),\n          \"skinStyleCount\",\n          \"uint8\",\n          \"type\",\n          \"uint32\",\n          \"variantRefRace\",\n          Utils.getQWordReader(),\n          \"variants\",\n          Utils.getArrayReader(this.PackCompositeVariantV15),\n          \"animOverrides\",\n          Utils.getArrayReader(this.PackCompositeAnimOverrideV15),\n        ];\n\n        this.__root = this.PackCompositeV15 = [\n          \"armorColorIds\",\n          Utils.getArrayReader(\"uint32\"),\n          \"blitRects\",\n          Utils.getArrayReader(this.PackCompositeBlitRectSetV15),\n          \"boneScales\",\n          Utils.getArrayReader(this.PackCompositeBoneScaleV15),\n          \"raceSexData\",\n          Utils.getArrayReader(this.PackCompositeRaceDataV15),\n          \"configVersion\",\n          \"uint16\",\n        ];\n      },\n\n      // => Version: 14\n      14: function () {\n        this.PackCompositeBlitRectSetV14 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"size\",\n          [\"[]\", \"uint32\", 2],\n          \"rectIndex\",\n          Utils.getArrayReader(\"uint8\"),\n          \"rectArray\",\n          Utils.getArrayReader([\"[]\", \"uint32\", 4]),\n        ];\n\n        this.PackCompositeBoneScaleParamV14 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint8\",\n          \"max\",\n          \"float32\",\n          \"min\",\n          \"float32\",\n          \"rotate\",\n          [\"[]\", \"float32\", 3],\n          \"scale\",\n          [\"[]\", \"float32\", 3],\n          \"translate\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.PackCompositeBoneScaleRegionV14 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"value\",\n          \"float32\",\n          \"Bone\",\n          Utils.getArrayReader(this.PackCompositeBoneScaleParamV14),\n        ];\n\n        this.PackCompositeMorphWeightV14 = [\"name\", Utils.getQWordReader(), \"value\", \"float32\"];\n\n        this.PackCompositeBoneScaleV14 = [\n          \"BodyRegion\",\n          Utils.getArrayReader(this.PackCompositeBoneScaleRegionV14),\n          \"MorphWeight\",\n          Utils.getArrayReader(this.PackCompositeMorphWeightV14),\n        ];\n\n        this.PackCompositeBoneScaleFileV14 = [\"fileName\", Utils.getString16Reader()];\n\n        this.PackCompositeFileDataV14 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint8\",\n          \"flags\",\n          \"uint8\",\n          \"meshBase\",\n          Utils.getFileNameReader(),\n          \"meshOverlap\",\n          Utils.getFileNameReader(),\n          \"maskDye1\",\n          Utils.getFileNameReader(),\n          \"maskDye2\",\n          Utils.getFileNameReader(),\n          \"maskDye3\",\n          Utils.getFileNameReader(),\n          \"maskDye4\",\n          Utils.getFileNameReader(),\n          \"maskCut\",\n          Utils.getFileNameReader(),\n          \"textureBase\",\n          Utils.getFileNameReader(),\n          \"textureNormal\",\n          Utils.getFileNameReader(),\n          \"dyeFlags\",\n          \"uint32\",\n          \"hideFlags\",\n          \"uint32\",\n          \"skinFlags\",\n          \"uint32\",\n          \"blitRectIndex\",\n          \"uint8\",\n        ];\n\n        this.PackCompositeSkinPatternV14 = [\n          \"chest\",\n          Utils.getFileNameReader(),\n          \"face\",\n          Utils.getFileNameReader(),\n          \"feet\",\n          Utils.getFileNameReader(),\n          \"hands\",\n          Utils.getFileNameReader(),\n          \"legs\",\n          Utils.getFileNameReader(),\n          \"ears\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackCompositeColorV14 = [\n          \"brightness\",\n          \"uint8\",\n          \"contrast\",\n          \"uint8\",\n          \"hue\",\n          \"uint8\",\n          \"saturation\",\n          \"uint8\",\n          \"lightness\",\n          \"uint8\",\n        ];\n\n        this.PackCompositeVariantComponentV14 = [\n          \"nameToken\",\n          Utils.getQWordReader(),\n          \"color0\",\n          this.PackCompositeColorV14,\n          \"color1\",\n          this.PackCompositeColorV14,\n          \"color2\",\n          this.PackCompositeColorV14,\n          \"color3\",\n          this.PackCompositeColorV14,\n        ];\n\n        this.PackCompositeVariantV14 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"boneScaleIndex\",\n          \"uint32\",\n          \"components\",\n          Utils.getArrayReader(this.PackCompositeVariantComponentV14),\n          \"eyeColor\",\n          this.PackCompositeColorV14,\n          \"hairColor\",\n          this.PackCompositeColorV14,\n          \"hairColor2\",\n          this.PackCompositeColorV14,\n          \"patternColor\",\n          this.PackCompositeColorV14,\n          \"skinColor\",\n          this.PackCompositeColorV14,\n          \"skinIndex\",\n          \"uint32\",\n        ];\n\n        this.PackCompositeRaceDataV14 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"nameToken\",\n          Utils.getQWordReader(),\n          \"baseHeadToken\",\n          Utils.getQWordReader(),\n          \"beard\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"bodyBoneScales\",\n          Utils.getArrayReader(this.PackCompositeBoneScaleV14),\n          \"bodyBoneScaleFiles\",\n          Utils.getArrayReader(this.PackCompositeBoneScaleFileV14),\n          \"ears\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"eyeColorPalette\",\n          Utils.getString16Reader(),\n          \"faceBoneScales\",\n          Utils.getArrayReader(this.PackCompositeBoneScaleV14),\n          \"faces\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"fileData\",\n          Utils.getArrayReader(this.PackCompositeFileDataV14),\n          \"flags\",\n          \"uint32\",\n          \"hairStyles\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"hairColorPalette\",\n          Utils.getString16Reader(),\n          \"skeletonFile\",\n          Utils.getFileNameReader(),\n          \"skinPatterns\",\n          Utils.getArrayReader(this.PackCompositeSkinPatternV14),\n          \"skinColorPalette\",\n          Utils.getString16Reader(),\n          \"skinPatternPalette\",\n          Utils.getString16Reader(),\n          \"skinStyleCount\",\n          \"uint8\",\n          \"type\",\n          \"uint32\",\n          \"variantRefRace\",\n          Utils.getQWordReader(),\n          \"variants\",\n          Utils.getArrayReader(this.PackCompositeVariantV14),\n        ];\n\n        this.__root = this.PackCompositeV14 = [\n          \"armorColorIds\",\n          Utils.getArrayReader(\"uint32\"),\n          \"blitRects\",\n          Utils.getArrayReader(this.PackCompositeBlitRectSetV14),\n          \"boneScales\",\n          Utils.getArrayReader(this.PackCompositeBoneScaleV14),\n          \"raceSexData\",\n          Utils.getArrayReader(this.PackCompositeRaceDataV14),\n          \"configVersion\",\n          \"uint16\",\n        ];\n      },\n\n      // => Version: 13\n      13: function () {\n        this.PackCompositeBlitRectSetV13 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"size\",\n          [\"[]\", \"uint32\", 2],\n          \"rectIndex\",\n          Utils.getArrayReader(\"uint8\"),\n          \"rectArray\",\n          Utils.getArrayReader([\"[]\", \"uint32\", 4]),\n        ];\n\n        this.PackCompositeBoneScaleParamV13 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint8\",\n          \"max\",\n          \"float32\",\n          \"min\",\n          \"float32\",\n          \"rotate\",\n          [\"[]\", \"float32\", 3],\n          \"scale\",\n          [\"[]\", \"float32\", 3],\n          \"translate\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.PackCompositeBoneScaleRegionV13 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"value\",\n          \"float32\",\n          \"Bone\",\n          Utils.getArrayReader(this.PackCompositeBoneScaleParamV13),\n        ];\n\n        this.PackCompositeMorphWeightV13 = [\"value\", \"float32\", \"name\", Utils.getQWordReader()];\n\n        this.PackCompositeBoneScaleV13 = [\n          \"BodyRegion\",\n          Utils.getArrayReader(this.PackCompositeBoneScaleRegionV13),\n          \"MorphWeight\",\n          Utils.getArrayReader(this.PackCompositeMorphWeightV13),\n        ];\n\n        this.PackCompositeBoneScaleFileV13 = [\"fileName\", Utils.getString16Reader()];\n\n        this.PackCompositeFileDataV13 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint8\",\n          \"flags\",\n          \"uint8\",\n          \"meshBase\",\n          Utils.getFileNameReader(),\n          \"meshOverlap\",\n          Utils.getFileNameReader(),\n          \"maskDye1\",\n          Utils.getFileNameReader(),\n          \"maskDye2\",\n          Utils.getFileNameReader(),\n          \"maskDye3\",\n          Utils.getFileNameReader(),\n          \"maskDye4\",\n          Utils.getFileNameReader(),\n          \"maskCut\",\n          Utils.getFileNameReader(),\n          \"textureBase\",\n          Utils.getFileNameReader(),\n          \"textureNormal\",\n          Utils.getFileNameReader(),\n          \"dyeFlags\",\n          \"uint32\",\n          \"hideFlags\",\n          \"uint32\",\n          \"skinFlags\",\n          \"uint32\",\n          \"blitRectIndex\",\n          \"uint8\",\n        ];\n\n        this.PackCompositeSkinPatternV13 = [\n          \"chest\",\n          Utils.getFileNameReader(),\n          \"face\",\n          Utils.getFileNameReader(),\n          \"feet\",\n          Utils.getFileNameReader(),\n          \"hands\",\n          Utils.getFileNameReader(),\n          \"legs\",\n          Utils.getFileNameReader(),\n          \"ears\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackCompositeColorV13 = [\n          \"brightness\",\n          \"uint8\",\n          \"contrast\",\n          \"uint8\",\n          \"hue\",\n          \"uint8\",\n          \"saturation\",\n          \"uint8\",\n          \"lightness\",\n          \"uint8\",\n        ];\n\n        this.PackCompositeVariantComponentV13 = [\n          \"nameToken\",\n          Utils.getQWordReader(),\n          \"color0\",\n          this.PackCompositeColorV13,\n          \"color1\",\n          this.PackCompositeColorV13,\n          \"color2\",\n          this.PackCompositeColorV13,\n          \"color3\",\n          this.PackCompositeColorV13,\n        ];\n\n        this.PackCompositeVariantV13 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"boneScaleIndex\",\n          \"uint32\",\n          \"components\",\n          Utils.getArrayReader(this.PackCompositeVariantComponentV13),\n          \"hairColor\",\n          this.PackCompositeColorV13,\n          \"hairColor2\",\n          this.PackCompositeColorV13,\n          \"patternColor\",\n          this.PackCompositeColorV13,\n          \"skinColor\",\n          this.PackCompositeColorV13,\n          \"skinIndex\",\n          \"uint32\",\n        ];\n\n        this.PackCompositeRaceDataV13 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"nameToken\",\n          Utils.getQWordReader(),\n          \"baseHeadToken\",\n          Utils.getQWordReader(),\n          \"beard\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"bodyBoneScales\",\n          Utils.getArrayReader(this.PackCompositeBoneScaleV13),\n          \"bodyBoneScaleFiles\",\n          Utils.getArrayReader(this.PackCompositeBoneScaleFileV13),\n          \"ears\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"faceBoneScales\",\n          Utils.getArrayReader(this.PackCompositeBoneScaleV13),\n          \"faces\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"fileData\",\n          Utils.getArrayReader(this.PackCompositeFileDataV13),\n          \"flags\",\n          \"uint32\",\n          \"hairStyles\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"hairColorPalette\",\n          Utils.getString16Reader(),\n          \"skeletonFile\",\n          Utils.getFileNameReader(),\n          \"skinPatterns\",\n          Utils.getArrayReader(this.PackCompositeSkinPatternV13),\n          \"skinColorPalette\",\n          Utils.getString16Reader(),\n          \"skinPatternPalette\",\n          Utils.getString16Reader(),\n          \"skinStyleCount\",\n          \"uint8\",\n          \"type\",\n          \"uint32\",\n          \"variantRefRace\",\n          Utils.getQWordReader(),\n          \"variants\",\n          Utils.getArrayReader(this.PackCompositeVariantV13),\n        ];\n\n        this.__root = this.PackCompositeV13 = [\n          \"armorColorIds\",\n          Utils.getArrayReader(\"uint32\"),\n          \"blitRects\",\n          Utils.getArrayReader(this.PackCompositeBlitRectSetV13),\n          \"boneScales\",\n          Utils.getArrayReader(this.PackCompositeBoneScaleV13),\n          \"raceSexData\",\n          Utils.getArrayReader(this.PackCompositeRaceDataV13),\n          \"configVersion\",\n          \"uint16\",\n        ];\n      },\n\n      // => Version: 12\n      12: function () {\n        this.PackCompositeBlitRectSetV12 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"size\",\n          [\"[]\", \"uint32\", 2],\n          \"rectIndex\",\n          Utils.getArrayReader(\"uint8\"),\n          \"rectArray\",\n          Utils.getArrayReader([\"[]\", \"uint32\", 4]),\n        ];\n\n        this.PackCompositeBoneScaleParamV12 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint8\",\n          \"max\",\n          \"float32\",\n          \"min\",\n          \"float32\",\n          \"rotate\",\n          [\"[]\", \"float32\", 3],\n          \"scale\",\n          [\"[]\", \"float32\", 3],\n          \"translate\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.PackCompositeBoneScaleRegionV12 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"value\",\n          \"float32\",\n          \"Bone\",\n          Utils.getArrayReader(this.PackCompositeBoneScaleParamV12),\n        ];\n\n        this.PackCompositeMorphWeightV12 = [\"value\", \"float32\", \"name\", Utils.getQWordReader()];\n\n        this.PackCompositeBoneScaleV12 = [\n          \"BodyRegion\",\n          Utils.getArrayReader(this.PackCompositeBoneScaleRegionV12),\n          \"MorphWeight\",\n          Utils.getArrayReader(this.PackCompositeMorphWeightV12),\n        ];\n\n        this.PackCompositeBoneScaleFileV12 = [\"fileName\", Utils.getString16Reader()];\n\n        this.PackCompositeFileDataV12 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint32\",\n          \"meshBase\",\n          Utils.getFileNameReader(),\n          \"meshOverlap\",\n          Utils.getFileNameReader(),\n          \"maskDye1\",\n          Utils.getFileNameReader(),\n          \"maskDye2\",\n          Utils.getFileNameReader(),\n          \"maskDye3\",\n          Utils.getFileNameReader(),\n          \"maskDye4\",\n          Utils.getFileNameReader(),\n          \"maskCut\",\n          Utils.getFileNameReader(),\n          \"textureBase\",\n          Utils.getFileNameReader(),\n          \"textureNormal\",\n          Utils.getFileNameReader(),\n          \"dyeFlags\",\n          \"uint32\",\n          \"hideFlags\",\n          \"uint32\",\n          \"skinFlags\",\n          \"uint32\",\n          \"blitRectIndex\",\n          \"uint32\",\n        ];\n\n        this.PackCompositeSkinPatternV12 = [\n          \"chest\",\n          Utils.getFileNameReader(),\n          \"face\",\n          Utils.getFileNameReader(),\n          \"feet\",\n          Utils.getFileNameReader(),\n          \"hands\",\n          Utils.getFileNameReader(),\n          \"legs\",\n          Utils.getFileNameReader(),\n          \"ears\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackCompositeColorV12 = [\n          \"brightness\",\n          \"uint8\",\n          \"contrast\",\n          \"uint8\",\n          \"hue\",\n          \"uint8\",\n          \"saturation\",\n          \"uint8\",\n          \"lightness\",\n          \"uint8\",\n        ];\n\n        this.PackCompositeVariantComponentV12 = [\n          \"nameToken\",\n          Utils.getQWordReader(),\n          \"color0\",\n          this.PackCompositeColorV12,\n          \"color1\",\n          this.PackCompositeColorV12,\n          \"color2\",\n          this.PackCompositeColorV12,\n          \"color3\",\n          this.PackCompositeColorV12,\n        ];\n\n        this.PackCompositeVariantV12 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"boneScaleIndex\",\n          \"uint32\",\n          \"components\",\n          Utils.getArrayReader(this.PackCompositeVariantComponentV12),\n          \"hairColor\",\n          this.PackCompositeColorV12,\n          \"hairColor2\",\n          this.PackCompositeColorV12,\n          \"patternColor\",\n          this.PackCompositeColorV12,\n          \"skinColor\",\n          this.PackCompositeColorV12,\n          \"skinIndex\",\n          \"uint32\",\n        ];\n\n        this.PackCompositeRaceDataV12 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"nameToken\",\n          Utils.getQWordReader(),\n          \"baseHeadToken\",\n          Utils.getQWordReader(),\n          \"beard\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"bodyBoneScales\",\n          Utils.getArrayReader(this.PackCompositeBoneScaleV12),\n          \"bodyBoneScaleFiles\",\n          Utils.getArrayReader(this.PackCompositeBoneScaleFileV12),\n          \"ears\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"faceBoneScales\",\n          Utils.getArrayReader(this.PackCompositeBoneScaleV12),\n          \"faces\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"fileData\",\n          Utils.getArrayReader(this.PackCompositeFileDataV12),\n          \"flags\",\n          \"uint32\",\n          \"hairStyles\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"hairColorPalette\",\n          Utils.getString16Reader(),\n          \"skeletonFile\",\n          Utils.getFileNameReader(),\n          \"skinPatterns\",\n          Utils.getArrayReader(this.PackCompositeSkinPatternV12),\n          \"skinColorPalette\",\n          Utils.getString16Reader(),\n          \"skinPatternPalette\",\n          Utils.getString16Reader(),\n          \"skinStyleCount\",\n          \"uint8\",\n          \"type\",\n          \"uint32\",\n          \"variantRefRace\",\n          Utils.getQWordReader(),\n          \"variants\",\n          Utils.getArrayReader(this.PackCompositeVariantV12),\n        ];\n\n        this.__root = this.PackCompositeV12 = [\n          \"armorColorIds\",\n          Utils.getArrayReader(\"uint32\"),\n          \"blitRects\",\n          Utils.getArrayReader(this.PackCompositeBlitRectSetV12),\n          \"boneScales\",\n          Utils.getArrayReader(this.PackCompositeBoneScaleV12),\n          \"raceSexData\",\n          Utils.getArrayReader(this.PackCompositeRaceDataV12),\n          \"configVersion\",\n          \"uint16\",\n        ];\n      },\n\n      // => Version: 11, ReferencedFunction: 0x1102E90\n      11: function () {\n        this.PackCompositeBlitRectSetV11 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"size\",\n          [\"[]\", \"uint32\", 2],\n          \"rectIndex\",\n          Utils.getArrayReader(\"uint8\"),\n          \"rectArray\",\n          Utils.getArrayReader([\"[]\", \"uint32\", 4]),\n        ];\n\n        this.PackCompositeBoneScaleParamV11 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint8\",\n          \"max\",\n          \"float32\",\n          \"min\",\n          \"float32\",\n          \"rotate\",\n          [\"[]\", \"float32\", 3],\n          \"scale\",\n          [\"[]\", \"float32\", 3],\n          \"translate\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.PackCompositeBoneScaleRegionV11 = [\n          \"value\",\n          \"float32\",\n          \"Bone\",\n          Utils.getArrayReader(this.PackCompositeBoneScaleParamV11),\n        ];\n\n        this.PackCompositeBoneScaleV11 = [\"BodyRegion\", Utils.getArrayReader(this.PackCompositeBoneScaleRegionV11)];\n\n        this.PackCompositeFileDataV11 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint32\",\n          \"meshBase\",\n          Utils.getFileNameReader(),\n          \"meshOverlap\",\n          Utils.getFileNameReader(),\n          \"maskDye1\",\n          Utils.getFileNameReader(),\n          \"maskDye2\",\n          Utils.getFileNameReader(),\n          \"maskDye3\",\n          Utils.getFileNameReader(),\n          \"maskDye4\",\n          Utils.getFileNameReader(),\n          \"maskCut\",\n          Utils.getFileNameReader(),\n          \"textureBase\",\n          Utils.getFileNameReader(),\n          \"textureNormal\",\n          Utils.getFileNameReader(),\n          \"dyeFlags\",\n          \"uint32\",\n          \"hideFlags\",\n          \"uint32\",\n          \"skinFlags\",\n          \"uint32\",\n          \"blitRectIndex\",\n          \"uint32\",\n        ];\n\n        this.PackCompositeSkinPatternV11 = [\n          \"chest\",\n          Utils.getFileNameReader(),\n          \"face\",\n          Utils.getFileNameReader(),\n          \"feet\",\n          Utils.getFileNameReader(),\n          \"hands\",\n          Utils.getFileNameReader(),\n          \"legs\",\n          Utils.getFileNameReader(),\n          \"ears\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackCompositeColorV11 = [\n          \"brightness\",\n          \"uint8\",\n          \"contrast\",\n          \"uint8\",\n          \"hue\",\n          \"uint8\",\n          \"saturation\",\n          \"uint8\",\n          \"lightness\",\n          \"uint8\",\n        ];\n\n        this.PackCompositeVariantComponentV11 = [\n          \"nameToken\",\n          Utils.getQWordReader(),\n          \"color0\",\n          this.PackCompositeColorV11,\n          \"color1\",\n          this.PackCompositeColorV11,\n          \"color2\",\n          this.PackCompositeColorV11,\n          \"color3\",\n          this.PackCompositeColorV11,\n        ];\n\n        this.PackCompositeVariantV11 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"boneScaleIndex\",\n          \"uint32\",\n          \"components\",\n          Utils.getArrayReader(this.PackCompositeVariantComponentV11),\n          \"hairColor\",\n          this.PackCompositeColorV11,\n          \"hairColor2\",\n          this.PackCompositeColorV11,\n          \"patternColor\",\n          this.PackCompositeColorV11,\n          \"skinColor\",\n          this.PackCompositeColorV11,\n          \"skinIndex\",\n          \"uint32\",\n        ];\n\n        this.PackCompositeRaceDataV11 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"nameToken\",\n          Utils.getQWordReader(),\n          \"baseHeadToken\",\n          Utils.getQWordReader(),\n          \"beard\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"ears\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"faces\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"fileData\",\n          Utils.getArrayReader(this.PackCompositeFileDataV11),\n          \"flags\",\n          \"uint32\",\n          \"hairStyles\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"hairColorPalette\",\n          Utils.getString16Reader(),\n          \"skeletonFile\",\n          Utils.getFileNameReader(),\n          \"skinPatterns\",\n          Utils.getArrayReader(this.PackCompositeSkinPatternV11),\n          \"skinColorPalette\",\n          Utils.getString16Reader(),\n          \"skinPatternPalette\",\n          Utils.getString16Reader(),\n          \"type\",\n          \"uint32\",\n          \"variantRefRace\",\n          Utils.getQWordReader(),\n          \"variants\",\n          Utils.getArrayReader(this.PackCompositeVariantV11),\n        ];\n\n        this.__root = this.PackCompositeV11 = [\n          \"armorColorIds\",\n          Utils.getArrayReader(\"uint32\"),\n          \"blitRects\",\n          Utils.getArrayReader(this.PackCompositeBlitRectSetV11),\n          \"boneScales\",\n          Utils.getArrayReader(this.PackCompositeBoneScaleV11),\n          \"raceSexData\",\n          Utils.getArrayReader(this.PackCompositeRaceDataV11),\n          \"configVersion\",\n          \"uint16\",\n        ];\n      },\n\n      // => Version: 10\n      10: function () {\n        this.PackCompositeBlitRectSetV10 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"size\",\n          [\"[]\", \"uint32\", 2],\n          \"rectIndex\",\n          Utils.getArrayReader(\"uint8\"),\n          \"rectArray\",\n          Utils.getArrayReader([\"[]\", \"uint32\", 4]),\n        ];\n\n        this.PackCompositeFileDataV10 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint32\",\n          \"meshBase\",\n          Utils.getFileNameReader(),\n          \"meshOverlap\",\n          Utils.getFileNameReader(),\n          \"maskDye1\",\n          Utils.getFileNameReader(),\n          \"maskDye2\",\n          Utils.getFileNameReader(),\n          \"maskDye3\",\n          Utils.getFileNameReader(),\n          \"maskDye4\",\n          Utils.getFileNameReader(),\n          \"maskCut\",\n          Utils.getFileNameReader(),\n          \"textureBase\",\n          Utils.getFileNameReader(),\n          \"textureNormal\",\n          Utils.getFileNameReader(),\n          \"dyeFlags\",\n          \"uint32\",\n          \"hideFlags\",\n          \"uint32\",\n          \"skinFlags\",\n          \"uint32\",\n          \"blitRectIndex\",\n          \"uint32\",\n        ];\n\n        this.PackCompositeSkinPatternV10 = [\n          \"chest\",\n          Utils.getFileNameReader(),\n          \"face\",\n          Utils.getFileNameReader(),\n          \"feet\",\n          Utils.getFileNameReader(),\n          \"hands\",\n          Utils.getFileNameReader(),\n          \"legs\",\n          Utils.getFileNameReader(),\n          \"ears\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackCompositeColorV10 = [\n          \"brightness\",\n          \"uint8\",\n          \"contrast\",\n          \"uint8\",\n          \"hue\",\n          \"uint8\",\n          \"saturation\",\n          \"uint8\",\n          \"lightness\",\n          \"uint8\",\n        ];\n\n        this.PackCompositeVariantComponentV10 = [\n          \"nameToken\",\n          Utils.getQWordReader(),\n          \"color0\",\n          this.PackCompositeColorV10,\n          \"color1\",\n          this.PackCompositeColorV10,\n          \"color2\",\n          this.PackCompositeColorV10,\n          \"color3\",\n          this.PackCompositeColorV10,\n        ];\n\n        this.PackCompositeVariantV10 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"components\",\n          Utils.getArrayReader(this.PackCompositeVariantComponentV10),\n          \"hairColor\",\n          this.PackCompositeColorV10,\n          \"hairColor2\",\n          this.PackCompositeColorV10,\n          \"patternColor\",\n          this.PackCompositeColorV10,\n          \"skinColor\",\n          this.PackCompositeColorV10,\n          \"skinIndex\",\n          \"uint32\",\n        ];\n\n        this.PackCompositeRaceDataV10 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"nameToken\",\n          Utils.getQWordReader(),\n          \"baseHeadToken\",\n          Utils.getQWordReader(),\n          \"beard\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"ears\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"faces\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"fileData\",\n          Utils.getArrayReader(this.PackCompositeFileDataV10),\n          \"flags\",\n          \"uint32\",\n          \"hairStyles\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"hairColorPalette\",\n          Utils.getString16Reader(),\n          \"skeletonFile\",\n          Utils.getFileNameReader(),\n          \"skinPatterns\",\n          Utils.getArrayReader(this.PackCompositeSkinPatternV10),\n          \"skinColorPalette\",\n          Utils.getString16Reader(),\n          \"skinPatternPalette\",\n          Utils.getString16Reader(),\n          \"type\",\n          \"uint32\",\n          \"variantRefRace\",\n          Utils.getQWordReader(),\n          \"variants\",\n          Utils.getArrayReader(this.PackCompositeVariantV10),\n        ];\n\n        this.__root = this.PackCompositeV10 = [\n          \"armorColorIds\",\n          Utils.getArrayReader(\"uint32\"),\n          \"blitRects\",\n          Utils.getArrayReader(this.PackCompositeBlitRectSetV10),\n          \"raceSexData\",\n          Utils.getArrayReader(this.PackCompositeRaceDataV10),\n          \"configVersion\",\n          \"uint16\",\n        ];\n      },\n\n      // => Version: 9\n      9: function () {\n        this.PackCompositeBlitRectSetV9 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"size\",\n          [\"[]\", \"uint32\", 2],\n          \"rectIndex\",\n          Utils.getArrayReader(\"uint8\"),\n          \"rectArray\",\n          Utils.getArrayReader([\"[]\", \"uint32\", 4]),\n        ];\n\n        this.PackCompositeFileDataV9 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint32\",\n          \"meshBase\",\n          Utils.getFileNameReader(),\n          \"meshOverlap\",\n          Utils.getFileNameReader(),\n          \"maskDye1\",\n          Utils.getFileNameReader(),\n          \"maskDye2\",\n          Utils.getFileNameReader(),\n          \"maskDye3\",\n          Utils.getFileNameReader(),\n          \"maskDye4\",\n          Utils.getFileNameReader(),\n          \"maskCut\",\n          Utils.getFileNameReader(),\n          \"textureBase\",\n          Utils.getFileNameReader(),\n          \"textureNormal\",\n          Utils.getFileNameReader(),\n          \"dyeFlags\",\n          \"uint32\",\n          \"hideFlags\",\n          \"uint32\",\n          \"skinFlags\",\n          \"uint32\",\n          \"blitRectIndex\",\n          \"uint32\",\n        ];\n\n        this.PackCompositeSkinPatternV9 = [\n          \"chest\",\n          Utils.getFileNameReader(),\n          \"face\",\n          Utils.getFileNameReader(),\n          \"feet\",\n          Utils.getFileNameReader(),\n          \"hands\",\n          Utils.getFileNameReader(),\n          \"legs\",\n          Utils.getFileNameReader(),\n          \"ears\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackCompositeColorV9 = [\n          \"brightness\",\n          \"uint8\",\n          \"contrast\",\n          \"uint8\",\n          \"hue\",\n          \"uint8\",\n          \"saturation\",\n          \"uint8\",\n          \"lightness\",\n          \"uint8\",\n        ];\n\n        this.PackCompositeVariantComponentV9 = [\n          \"nameToken\",\n          Utils.getQWordReader(),\n          \"color0\",\n          this.PackCompositeColorV9,\n          \"color1\",\n          this.PackCompositeColorV9,\n          \"color2\",\n          this.PackCompositeColorV9,\n          \"color3\",\n          this.PackCompositeColorV9,\n        ];\n\n        this.PackCompositeVariantV9 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"components\",\n          Utils.getArrayReader(this.PackCompositeVariantComponentV9),\n          \"hairColor\",\n          this.PackCompositeColorV9,\n          \"hairColor2\",\n          this.PackCompositeColorV9,\n          \"patternColor\",\n          this.PackCompositeColorV9,\n          \"skinColor\",\n          this.PackCompositeColorV9,\n          \"skinIndex\",\n          \"uint32\",\n        ];\n\n        this.PackCompositeRaceDataV9 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"nameToken\",\n          Utils.getQWordReader(),\n          \"baseHeadToken\",\n          Utils.getQWordReader(),\n          \"beard\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"ears\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"faces\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"fileData\",\n          Utils.getArrayReader(this.PackCompositeFileDataV9),\n          \"hairStyles\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"hairColorPalette\",\n          Utils.getString16Reader(),\n          \"skeletonFile\",\n          Utils.getFileNameReader(),\n          \"skinPatterns\",\n          Utils.getArrayReader(this.PackCompositeSkinPatternV9),\n          \"skinColorPalette\",\n          Utils.getString16Reader(),\n          \"skinPatternPalette\",\n          Utils.getString16Reader(),\n          \"type\",\n          \"uint32\",\n          \"variantRefRace\",\n          Utils.getQWordReader(),\n          \"variants\",\n          Utils.getArrayReader(this.PackCompositeVariantV9),\n        ];\n\n        this.__root = this.PackCompositeV9 = [\n          \"armorColorIds\",\n          Utils.getArrayReader(\"uint32\"),\n          \"blitRects\",\n          Utils.getArrayReader(this.PackCompositeBlitRectSetV9),\n          \"raceSexData\",\n          Utils.getArrayReader(this.PackCompositeRaceDataV9),\n          \"configVersion\",\n          \"uint16\",\n        ];\n      },\n\n      // => Version: 8\n      8: function () {\n        this.PackCompositeBlitRectSetV8 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"size\",\n          [\"[]\", \"uint32\", 2],\n          \"rectIndex\",\n          Utils.getArrayReader(\"uint8\"),\n          \"rectArray\",\n          Utils.getArrayReader([\"[]\", \"uint32\", 4]),\n        ];\n\n        this.PackCompositeFileDataV8 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint32\",\n          \"meshBase\",\n          Utils.getFileNameReader(),\n          \"meshOverlap\",\n          Utils.getFileNameReader(),\n          \"maskDye1\",\n          Utils.getFileNameReader(),\n          \"maskDye2\",\n          Utils.getFileNameReader(),\n          \"maskDye3\",\n          Utils.getFileNameReader(),\n          \"maskDye4\",\n          Utils.getFileNameReader(),\n          \"maskCut\",\n          Utils.getFileNameReader(),\n          \"textureBase\",\n          Utils.getFileNameReader(),\n          \"textureNormal\",\n          Utils.getFileNameReader(),\n          \"dyeFlags\",\n          \"uint32\",\n          \"hideFlags\",\n          \"uint32\",\n          \"skinFlags\",\n          \"uint32\",\n          \"blitRectIndex\",\n          \"uint32\",\n        ];\n\n        this.PackCompositeSkinPatternV8 = [\n          \"chest\",\n          Utils.getFileNameReader(),\n          \"face\",\n          Utils.getFileNameReader(),\n          \"feet\",\n          Utils.getFileNameReader(),\n          \"hands\",\n          Utils.getFileNameReader(),\n          \"legs\",\n          Utils.getFileNameReader(),\n          \"ears\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackCompositeColorV8 = [\n          \"brightness\",\n          \"uint8\",\n          \"contrast\",\n          \"uint8\",\n          \"hue\",\n          \"uint8\",\n          \"saturation\",\n          \"uint8\",\n          \"lightness\",\n          \"uint8\",\n        ];\n\n        this.PackCompositeVariantComponentV8 = [\n          \"nameToken\",\n          Utils.getQWordReader(),\n          \"color0\",\n          this.PackCompositeColorV8,\n          \"color1\",\n          this.PackCompositeColorV8,\n          \"color2\",\n          this.PackCompositeColorV8,\n          \"color3\",\n          this.PackCompositeColorV8,\n        ];\n\n        this.PackCompositeVariantV8 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"components\",\n          Utils.getArrayReader(this.PackCompositeVariantComponentV8),\n          \"hairColor\",\n          this.PackCompositeColorV8,\n          \"hairColor2\",\n          this.PackCompositeColorV8,\n          \"patternColor\",\n          this.PackCompositeColorV8,\n          \"skinColor\",\n          this.PackCompositeColorV8,\n          \"skinIndex\",\n          \"uint32\",\n        ];\n\n        this.PackCompositeRaceDataV8 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"nameToken\",\n          Utils.getQWordReader(),\n          \"baseHeadToken\",\n          Utils.getQWordReader(),\n          \"beard\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"ears\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"faces\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"fileData\",\n          Utils.getArrayReader(this.PackCompositeFileDataV8),\n          \"hairStyles\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"hairColorPalette\",\n          Utils.getString16Reader(),\n          \"skeletonFile\",\n          Utils.getFileNameReader(),\n          \"skinPatterns\",\n          Utils.getArrayReader(this.PackCompositeSkinPatternV8),\n          \"skinColorPalette\",\n          Utils.getString16Reader(),\n          \"skinPatternPalette\",\n          Utils.getString16Reader(),\n          \"type\",\n          \"uint32\",\n          \"variantRefRace\",\n          Utils.getQWordReader(),\n          \"variants\",\n          Utils.getArrayReader(this.PackCompositeVariantV8),\n        ];\n\n        this.__root = this.PackCompositeV8 = [\n          \"armorColorIds\",\n          Utils.getArrayReader(\"uint32\"),\n          \"blitRects\",\n          Utils.getArrayReader(this.PackCompositeBlitRectSetV8),\n          \"raceSexData\",\n          Utils.getArrayReader(this.PackCompositeRaceDataV8),\n        ];\n      },\n\n      // => Version: 7\n      7: function () {\n        this.PackCompositeBlitRectSetV7 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"size\",\n          [\"[]\", \"uint32\", 2],\n          \"rectIndex\",\n          Utils.getArrayReader(\"uint8\"),\n          \"rectArray\",\n          Utils.getArrayReader([\"[]\", \"uint32\", 4]),\n        ];\n\n        this.PackCompositeFileDataV7 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint32\",\n          \"meshBase\",\n          Utils.getFileNameReader(),\n          \"meshOverlap\",\n          Utils.getFileNameReader(),\n          \"maskDye1\",\n          Utils.getFileNameReader(),\n          \"maskDye2\",\n          Utils.getFileNameReader(),\n          \"maskDye3\",\n          Utils.getFileNameReader(),\n          \"maskDye4\",\n          Utils.getFileNameReader(),\n          \"maskCut\",\n          Utils.getFileNameReader(),\n          \"textureBase\",\n          Utils.getFileNameReader(),\n          \"textureNormal\",\n          Utils.getFileNameReader(),\n          \"dyeFlags\",\n          \"uint32\",\n          \"hideFlags\",\n          \"uint32\",\n          \"skinFlags\",\n          \"uint32\",\n          \"blitRectIndex\",\n          \"uint32\",\n        ];\n\n        this.PackCompositeSkinPatternV7 = [\n          \"chest\",\n          Utils.getFileNameReader(),\n          \"face\",\n          Utils.getFileNameReader(),\n          \"feet\",\n          Utils.getFileNameReader(),\n          \"hands\",\n          Utils.getFileNameReader(),\n          \"legs\",\n          Utils.getFileNameReader(),\n          \"ears\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackCompositeColorV7 = [\n          \"brightness\",\n          \"uint8\",\n          \"contrast\",\n          \"uint8\",\n          \"hue\",\n          \"uint8\",\n          \"saturation\",\n          \"uint8\",\n          \"lightness\",\n          \"uint8\",\n        ];\n\n        this.PackCompositeVariantComponentV7 = [\n          \"nameToken\",\n          Utils.getQWordReader(),\n          \"color0\",\n          this.PackCompositeColorV7,\n          \"color1\",\n          this.PackCompositeColorV7,\n          \"color2\",\n          this.PackCompositeColorV7,\n          \"color3\",\n          this.PackCompositeColorV7,\n        ];\n\n        this.PackCompositeVariantV7 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"components\",\n          Utils.getArrayReader(this.PackCompositeVariantComponentV7),\n          \"hairColor\",\n          this.PackCompositeColorV7,\n          \"hairColor2\",\n          this.PackCompositeColorV7,\n          \"patternColor\",\n          this.PackCompositeColorV7,\n          \"skinColor\",\n          this.PackCompositeColorV7,\n          \"skinIndex\",\n          \"uint32\",\n        ];\n\n        this.PackCompositeRaceDataV7 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"nameToken\",\n          Utils.getQWordReader(),\n          \"beard\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"ears\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"faces\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"fileData\",\n          Utils.getArrayReader(this.PackCompositeFileDataV7),\n          \"hairStyles\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"hairColorPalette\",\n          Utils.getString16Reader(),\n          \"skeletonFile\",\n          Utils.getFileNameReader(),\n          \"skinPatterns\",\n          Utils.getArrayReader(this.PackCompositeSkinPatternV7),\n          \"skinColorPalette\",\n          Utils.getString16Reader(),\n          \"skinPatternPalette\",\n          Utils.getString16Reader(),\n          \"type\",\n          \"uint32\",\n          \"variantRefRace\",\n          Utils.getQWordReader(),\n          \"variants\",\n          Utils.getArrayReader(this.PackCompositeVariantV7),\n        ];\n\n        this.__root = this.PackCompositeV7 = [\n          \"armorColorIds\",\n          Utils.getArrayReader(\"uint32\"),\n          \"blitRects\",\n          Utils.getArrayReader(this.PackCompositeBlitRectSetV7),\n          \"raceSexData\",\n          Utils.getArrayReader(this.PackCompositeRaceDataV7),\n        ];\n      },\n\n      // => Version: 6\n      6: function () {\n        this.PackCompositeBlitRectSetV6 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"size\",\n          [\"[]\", \"uint32\", 2],\n          \"rectIndex\",\n          Utils.getArrayReader(\"uint8\"),\n          \"rectArray\",\n          Utils.getArrayReader([\"[]\", \"uint32\", 4]),\n        ];\n\n        this.PackCompositeFileDataV6 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint32\",\n          \"meshBase\",\n          Utils.getFileNameReader(),\n          \"meshOverlap\",\n          Utils.getFileNameReader(),\n          \"maskDye1\",\n          Utils.getFileNameReader(),\n          \"maskDye2\",\n          Utils.getFileNameReader(),\n          \"maskDye3\",\n          Utils.getFileNameReader(),\n          \"maskDye4\",\n          Utils.getFileNameReader(),\n          \"maskCut\",\n          Utils.getFileNameReader(),\n          \"textureBase\",\n          Utils.getFileNameReader(),\n          \"textureNormal\",\n          Utils.getFileNameReader(),\n          \"dyeFlags\",\n          \"uint32\",\n          \"hideFlags\",\n          \"uint32\",\n          \"skinFlags\",\n          \"uint32\",\n          \"blitRectIndex\",\n          \"uint32\",\n        ];\n\n        this.PackCompositeSkinPatternV6 = [\n          \"chest\",\n          Utils.getFileNameReader(),\n          \"face\",\n          Utils.getFileNameReader(),\n          \"feet\",\n          Utils.getFileNameReader(),\n          \"hands\",\n          Utils.getFileNameReader(),\n          \"legs\",\n          Utils.getFileNameReader(),\n          \"ears\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackCompositeColorV6 = [\n          \"brightness\",\n          \"uint8\",\n          \"contrast\",\n          \"uint8\",\n          \"hue\",\n          \"uint8\",\n          \"saturation\",\n          \"uint8\",\n          \"lightness\",\n          \"uint8\",\n        ];\n\n        this.PackCompositeVariantComponentV6 = [\n          \"nameToken\",\n          Utils.getQWordReader(),\n          \"color0\",\n          this.PackCompositeColorV6,\n          \"color1\",\n          this.PackCompositeColorV6,\n          \"color2\",\n          this.PackCompositeColorV6,\n          \"color3\",\n          this.PackCompositeColorV6,\n        ];\n\n        this.PackCompositeVariantV6 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"components\",\n          Utils.getArrayReader(this.PackCompositeVariantComponentV6),\n          \"hairColor\",\n          this.PackCompositeColorV6,\n          \"hairColor2\",\n          this.PackCompositeColorV6,\n          \"patternColor\",\n          this.PackCompositeColorV6,\n          \"skinColor\",\n          this.PackCompositeColorV6,\n          \"skinIndex\",\n          \"uint32\",\n        ];\n\n        this.PackCompositeRaceDataV6 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"nameToken\",\n          Utils.getQWordReader(),\n          \"beard\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"ears\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"faces\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"fileData\",\n          Utils.getArrayReader(this.PackCompositeFileDataV6),\n          \"hairStyles\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"hairColorPalette\",\n          Utils.getString16Reader(),\n          \"skeletonFile\",\n          Utils.getFileNameReader(),\n          \"skinPatterns\",\n          Utils.getArrayReader(this.PackCompositeSkinPatternV6),\n          \"skinColorPalette\",\n          Utils.getString16Reader(),\n          \"type\",\n          \"uint32\",\n          \"variantRefRace\",\n          Utils.getQWordReader(),\n          \"variants\",\n          Utils.getArrayReader(this.PackCompositeVariantV6),\n        ];\n\n        this.__root = this.PackCompositeV6 = [\n          \"armorColorIds\",\n          Utils.getArrayReader(\"uint32\"),\n          \"blitRects\",\n          Utils.getArrayReader(this.PackCompositeBlitRectSetV6),\n          \"raceSexData\",\n          Utils.getArrayReader(this.PackCompositeRaceDataV6),\n        ];\n      },\n\n      // => Version: 5\n      5: function () {\n        this.PackCompositeBlitRectSetV5 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"size\",\n          [\"[]\", \"uint32\", 2],\n          \"rectIndex\",\n          Utils.getArrayReader(\"uint8\"),\n          \"rectArray\",\n          Utils.getArrayReader([\"[]\", \"uint32\", 4]),\n        ];\n\n        this.PackCompositeFileDataV5 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint32\",\n          \"meshBase\",\n          Utils.getFileNameReader(),\n          \"meshOverlap\",\n          Utils.getFileNameReader(),\n          \"maskDye1\",\n          Utils.getFileNameReader(),\n          \"maskDye2\",\n          Utils.getFileNameReader(),\n          \"maskDye3\",\n          Utils.getFileNameReader(),\n          \"maskDye4\",\n          Utils.getFileNameReader(),\n          \"maskCut\",\n          Utils.getFileNameReader(),\n          \"textureBase\",\n          Utils.getFileNameReader(),\n          \"textureNormal\",\n          Utils.getFileNameReader(),\n          \"dyeFlags\",\n          \"uint32\",\n          \"hideFlags\",\n          \"uint32\",\n          \"skinFlags\",\n          \"uint32\",\n          \"blitRectIndex\",\n          \"uint32\",\n        ];\n\n        this.PackCompositeSkinPatternV5 = [\n          \"chest\",\n          Utils.getFileNameReader(),\n          \"face\",\n          Utils.getFileNameReader(),\n          \"feet\",\n          Utils.getFileNameReader(),\n          \"hands\",\n          Utils.getFileNameReader(),\n          \"legs\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackCompositeColorV5 = [\n          \"brightness\",\n          \"uint8\",\n          \"contrast\",\n          \"uint8\",\n          \"hue\",\n          \"uint8\",\n          \"saturation\",\n          \"uint8\",\n          \"lightness\",\n          \"uint8\",\n        ];\n\n        this.PackCompositeVariantComponentV5 = [\n          \"nameToken\",\n          Utils.getQWordReader(),\n          \"color0\",\n          this.PackCompositeColorV5,\n          \"color1\",\n          this.PackCompositeColorV5,\n          \"color2\",\n          this.PackCompositeColorV5,\n          \"color3\",\n          this.PackCompositeColorV5,\n        ];\n\n        this.PackCompositeVariantV5 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"components\",\n          Utils.getArrayReader(this.PackCompositeVariantComponentV5),\n          \"hairColor\",\n          this.PackCompositeColorV5,\n          \"hairColor2\",\n          this.PackCompositeColorV5,\n          \"patternColor\",\n          this.PackCompositeColorV5,\n          \"skinColor\",\n          this.PackCompositeColorV5,\n          \"skinIndex\",\n          \"uint32\",\n        ];\n\n        this.PackCompositeRaceDataV5 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"nameToken\",\n          Utils.getQWordReader(),\n          \"beard\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"ears\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"faces\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"fileData\",\n          Utils.getArrayReader(this.PackCompositeFileDataV5),\n          \"hairStyles\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"hairColorPalette\",\n          Utils.getString16Reader(),\n          \"skeletonFile\",\n          Utils.getFileNameReader(),\n          \"skinPatterns\",\n          Utils.getArrayReader(this.PackCompositeSkinPatternV5),\n          \"skinColorPalette\",\n          Utils.getString16Reader(),\n          \"type\",\n          \"uint32\",\n          \"variantRefRace\",\n          Utils.getQWordReader(),\n          \"variants\",\n          Utils.getArrayReader(this.PackCompositeVariantV5),\n        ];\n\n        this.__root = this.PackCompositeV5 = [\n          \"armorColorIds\",\n          Utils.getArrayReader(\"uint32\"),\n          \"blitRects\",\n          Utils.getArrayReader(this.PackCompositeBlitRectSetV5),\n          \"raceSexData\",\n          Utils.getArrayReader(this.PackCompositeRaceDataV5),\n        ];\n      },\n\n      // => Version: 4\n      4: function () {\n        this.PackCompositeBlitRectSetV4 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"size\",\n          [\"[]\", \"uint32\", 2],\n          \"rectIndex\",\n          Utils.getArrayReader(\"uint8\"),\n          \"rectArray\",\n          Utils.getArrayReader([\"[]\", \"uint32\", 4]),\n        ];\n\n        this.PackCompositeFileDataV4 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint32\",\n          \"meshBase\",\n          Utils.getFileNameReader(),\n          \"meshOverlap\",\n          Utils.getFileNameReader(),\n          \"maskDye1\",\n          Utils.getFileNameReader(),\n          \"maskDye2\",\n          Utils.getFileNameReader(),\n          \"maskDye3\",\n          Utils.getFileNameReader(),\n          \"maskDye4\",\n          Utils.getFileNameReader(),\n          \"maskCut\",\n          Utils.getFileNameReader(),\n          \"textureBase\",\n          Utils.getFileNameReader(),\n          \"textureNormal\",\n          Utils.getFileNameReader(),\n          \"dyeFlags\",\n          \"uint32\",\n          \"hideFlags\",\n          \"uint32\",\n          \"skinFlags\",\n          \"uint32\",\n          \"blitRectIndex\",\n          \"uint32\",\n        ];\n\n        this.PackCompositeSkinPatternV4 = [\n          \"chest\",\n          Utils.getFileNameReader(),\n          \"face\",\n          Utils.getFileNameReader(),\n          \"feet\",\n          Utils.getFileNameReader(),\n          \"hands\",\n          Utils.getFileNameReader(),\n          \"legs\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackCompositeColorV4 = [\n          \"brightness\",\n          \"uint8\",\n          \"contrast\",\n          \"uint8\",\n          \"hue\",\n          \"uint8\",\n          \"saturation\",\n          \"uint8\",\n          \"lightness\",\n          \"uint8\",\n        ];\n\n        this.PackCompositeVariantComponentV4 = [\n          \"nameToken\",\n          Utils.getQWordReader(),\n          \"clothColor\",\n          this.PackCompositeColorV4,\n          \"leatherColor\",\n          this.PackCompositeColorV4,\n          \"metalColor\",\n          this.PackCompositeColorV4,\n        ];\n\n        this.PackCompositeVariantV4 = [\n          \"components\",\n          Utils.getArrayReader(this.PackCompositeVariantComponentV4),\n          \"hairColor\",\n          this.PackCompositeColorV4,\n          \"patternColor\",\n          this.PackCompositeColorV4,\n          \"skinColor\",\n          this.PackCompositeColorV4,\n          \"skinIndex\",\n          \"uint32\",\n        ];\n\n        this.PackCompositeRaceDataV4 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"nameToken\",\n          Utils.getQWordReader(),\n          \"beard\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"ears\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"faces\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"fileData\",\n          Utils.getArrayReader(this.PackCompositeFileDataV4),\n          \"hairStyles\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"hairColorPalette\",\n          Utils.getString16Reader(),\n          \"skeletonFile\",\n          Utils.getFileNameReader(),\n          \"skinPatterns\",\n          Utils.getArrayReader(this.PackCompositeSkinPatternV4),\n          \"skinColorPalette\",\n          Utils.getString16Reader(),\n          \"type\",\n          \"uint32\",\n          \"variantRefRace\",\n          Utils.getQWordReader(),\n          \"variants\",\n          Utils.getArrayReader(this.PackCompositeVariantV4),\n        ];\n\n        this.__root = this.PackCompositeV4 = [\n          \"armorColorIds\",\n          Utils.getArrayReader(\"uint32\"),\n          \"blitRects\",\n          Utils.getArrayReader(this.PackCompositeBlitRectSetV4),\n          \"raceSexData\",\n          Utils.getArrayReader(this.PackCompositeRaceDataV4),\n        ];\n      },\n\n      // => Version: 3\n      3: function () {\n        this.PackCompositeBlitRectSetV3 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"size\",\n          [\"[]\", \"uint32\", 2],\n          \"rectIndex\",\n          Utils.getArrayReader(\"uint32\"),\n          \"rectArray\",\n          Utils.getArrayReader([\"[]\", \"uint32\", 4]),\n        ];\n\n        this.PackCompositeFileDataV3 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint32\",\n          \"meshBase\",\n          Utils.getFileNameReader(),\n          \"meshOverlap\",\n          Utils.getFileNameReader(),\n          \"maskDye1\",\n          Utils.getFileNameReader(),\n          \"maskDye2\",\n          Utils.getFileNameReader(),\n          \"maskDye3\",\n          Utils.getFileNameReader(),\n          \"maskDye4\",\n          Utils.getFileNameReader(),\n          \"maskCut\",\n          Utils.getFileNameReader(),\n          \"textureBase\",\n          Utils.getFileNameReader(),\n          \"textureNormal\",\n          Utils.getFileNameReader(),\n          \"hideFlags\",\n          \"uint32\",\n          \"skinFlags\",\n          \"uint32\",\n          \"blitRectIndex\",\n          \"uint32\",\n        ];\n\n        this.PackCompositeSkinPatternV3 = [\n          \"chest\",\n          Utils.getFileNameReader(),\n          \"face\",\n          Utils.getFileNameReader(),\n          \"feet\",\n          Utils.getFileNameReader(),\n          \"hands\",\n          Utils.getFileNameReader(),\n          \"legs\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackCompositeColorV3 = [\n          \"brightness\",\n          \"uint8\",\n          \"contrast\",\n          \"uint8\",\n          \"hue\",\n          \"uint8\",\n          \"saturation\",\n          \"uint8\",\n          \"lightness\",\n          \"uint8\",\n        ];\n\n        this.PackCompositeVariantComponentV3 = [\n          \"nameToken\",\n          Utils.getQWordReader(),\n          \"clothColor\",\n          this.PackCompositeColorV3,\n          \"leatherColor\",\n          this.PackCompositeColorV3,\n          \"metalColor\",\n          this.PackCompositeColorV3,\n        ];\n\n        this.PackCompositeVariantV3 = [\n          \"components\",\n          Utils.getArrayReader(this.PackCompositeVariantComponentV3),\n          \"hairColor\",\n          this.PackCompositeColorV3,\n          \"patternColor\",\n          this.PackCompositeColorV3,\n          \"skinColor\",\n          this.PackCompositeColorV3,\n          \"skinIndex\",\n          \"uint32\",\n        ];\n\n        this.PackCompositeRaceDataV3 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"nameToken\",\n          Utils.getQWordReader(),\n          \"beard\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"ears\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"faces\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"fileData\",\n          Utils.getArrayReader(this.PackCompositeFileDataV3),\n          \"hairStyles\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"hairColorPalette\",\n          Utils.getString16Reader(),\n          \"skeletonFile\",\n          Utils.getFileNameReader(),\n          \"skinPatterns\",\n          Utils.getArrayReader(this.PackCompositeSkinPatternV3),\n          \"skinColorPalette\",\n          Utils.getString16Reader(),\n          \"type\",\n          \"uint32\",\n          \"variantRefRace\",\n          Utils.getQWordReader(),\n          \"variants\",\n          Utils.getArrayReader(this.PackCompositeVariantV3),\n        ];\n\n        this.__root = this.PackCompositeV3 = [\n          \"blitRects\",\n          Utils.getArrayReader(this.PackCompositeBlitRectSetV3),\n          \"raceSexData\",\n          Utils.getArrayReader(this.PackCompositeRaceDataV3),\n        ];\n      },\n\n      // => Version: 2\n      2: function () {\n        this.PackCompositeBlitRectSetV2 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"size\",\n          [\"[]\", \"uint32\", 2],\n          \"rectIndex\",\n          Utils.getArrayReader(\"uint32\"),\n          \"rectArray\",\n          Utils.getArrayReader([\"[]\", \"uint32\", 4]),\n        ];\n\n        this.PackCompositeFileDataV2 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint32\",\n          \"meshBase\",\n          Utils.getFileNameReader(),\n          \"meshOverlap\",\n          Utils.getFileNameReader(),\n          \"maskDye1\",\n          Utils.getFileNameReader(),\n          \"maskDye2\",\n          Utils.getFileNameReader(),\n          \"maskDye3\",\n          Utils.getFileNameReader(),\n          \"maskDye4\",\n          Utils.getFileNameReader(),\n          \"maskCut\",\n          Utils.getFileNameReader(),\n          \"textureBase\",\n          Utils.getFileNameReader(),\n          \"textureNormal\",\n          Utils.getFileNameReader(),\n          \"hideFlags\",\n          \"uint32\",\n          \"skinFlags\",\n          \"uint32\",\n          \"blitRectIndex\",\n          \"uint32\",\n        ];\n\n        this.PackCompositeSkinPatternV2 = [\n          \"chest\",\n          Utils.getFileNameReader(),\n          \"face\",\n          Utils.getFileNameReader(),\n          \"feet\",\n          Utils.getFileNameReader(),\n          \"hands\",\n          Utils.getFileNameReader(),\n          \"legs\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackCompositeColorV2 = [\n          \"brightness\",\n          \"uint8\",\n          \"contrast\",\n          \"uint8\",\n          \"hue\",\n          \"uint8\",\n          \"saturation\",\n          \"uint8\",\n          \"lightness\",\n          \"uint8\",\n        ];\n\n        this.PackCompositeVariantComponentV2 = [\n          \"nameToken\",\n          Utils.getQWordReader(),\n          \"clothColor\",\n          this.PackCompositeColorV2,\n          \"leatherColor\",\n          this.PackCompositeColorV2,\n          \"metalColor\",\n          this.PackCompositeColorV2,\n        ];\n\n        this.PackCompositeVariantV2 = [\n          \"components\",\n          Utils.getArrayReader(this.PackCompositeVariantComponentV2),\n          \"hairColor\",\n          this.PackCompositeColorV2,\n          \"patternColor\",\n          this.PackCompositeColorV2,\n          \"skinColor\",\n          this.PackCompositeColorV2,\n          \"skinIndex\",\n          \"uint32\",\n        ];\n\n        this.PackCompositeRaceDataV2 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"nameToken\",\n          Utils.getQWordReader(),\n          \"ears\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"faces\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"fileData\",\n          Utils.getArrayReader(this.PackCompositeFileDataV2),\n          \"hairStyles\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"hairColorPalette\",\n          Utils.getString16Reader(),\n          \"skeletonFile\",\n          Utils.getFileNameReader(),\n          \"skinPatterns\",\n          Utils.getArrayReader(this.PackCompositeSkinPatternV2),\n          \"skinColorPalette\",\n          Utils.getString16Reader(),\n          \"type\",\n          \"uint32\",\n          \"variantRefRace\",\n          Utils.getQWordReader(),\n          \"variants\",\n          Utils.getArrayReader(this.PackCompositeVariantV2),\n        ];\n\n        this.__root = this.PackCompositeV2 = [\n          \"blitRects\",\n          Utils.getArrayReader(this.PackCompositeBlitRectSetV2),\n          \"raceSexData\",\n          Utils.getArrayReader(this.PackCompositeRaceDataV2),\n        ];\n      },\n\n      // => Version: 1\n      1: function () {\n        this.PackCompositeBlitRectSetV1 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"size\",\n          [\"[]\", \"uint32\", 2],\n          \"rectIndex\",\n          Utils.getArrayReader(\"uint32\"),\n          \"rectArray\",\n          Utils.getArrayReader([\"[]\", \"uint32\", 4]),\n        ];\n\n        this.PackCompositeFileDataV1 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint32\",\n          \"meshBase\",\n          Utils.getFileNameReader(),\n          \"meshOverlap\",\n          Utils.getFileNameReader(),\n          \"maskDye1\",\n          Utils.getFileNameReader(),\n          \"maskDye2\",\n          Utils.getFileNameReader(),\n          \"maskDye3\",\n          Utils.getFileNameReader(),\n          \"maskDye4\",\n          Utils.getFileNameReader(),\n          \"maskCut\",\n          Utils.getFileNameReader(),\n          \"textureBase\",\n          Utils.getFileNameReader(),\n          \"textureNormal\",\n          Utils.getFileNameReader(),\n          \"dyeFlags\",\n          \"uint32\",\n          \"hideFlags\",\n          \"uint32\",\n          \"skinFlags\",\n          \"uint32\",\n          \"blitRectIndex\",\n          \"uint32\",\n        ];\n\n        this.PackCompositeSkinPatternV1 = [\n          \"chest\",\n          Utils.getFileNameReader(),\n          \"face\",\n          Utils.getFileNameReader(),\n          \"feet\",\n          Utils.getFileNameReader(),\n          \"hands\",\n          Utils.getFileNameReader(),\n          \"legs\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackCompositeColorV1 = [\n          \"brightness\",\n          \"uint8\",\n          \"contrast\",\n          \"uint8\",\n          \"hue\",\n          \"uint8\",\n          \"saturation\",\n          \"uint8\",\n          \"lightness\",\n          \"uint8\",\n        ];\n\n        this.PackCompositeVariantComponentV1 = [\n          \"nameToken\",\n          Utils.getQWordReader(),\n          \"clothColor\",\n          this.PackCompositeColorV1,\n          \"leatherColor\",\n          this.PackCompositeColorV1,\n          \"metalColor\",\n          this.PackCompositeColorV1,\n        ];\n\n        this.PackCompositeVariantV1 = [\n          \"components\",\n          Utils.getArrayReader(this.PackCompositeVariantComponentV1),\n          \"hairColor\",\n          this.PackCompositeColorV1,\n          \"patternColor\",\n          this.PackCompositeColorV1,\n          \"skinColor\",\n          this.PackCompositeColorV1,\n          \"skinIndex\",\n          \"uint32\",\n        ];\n\n        this.PackCompositeRaceDataV1 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"nameToken\",\n          Utils.getQWordReader(),\n          \"ears\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"faces\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"fileData\",\n          Utils.getArrayReader(this.PackCompositeFileDataV1),\n          \"hairStyles\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"hairColorPalette\",\n          Utils.getString16Reader(),\n          \"skeletonFile\",\n          Utils.getFileNameReader(),\n          \"skinPatterns\",\n          Utils.getArrayReader(this.PackCompositeSkinPatternV1),\n          \"skinColorPalette\",\n          Utils.getString16Reader(),\n          \"type\",\n          \"uint32\",\n          \"variantRefRace\",\n          Utils.getQWordReader(),\n          \"variants\",\n          Utils.getArrayReader(this.PackCompositeVariantV1),\n        ];\n\n        this.__root = this.PackCompositeV1 = [\n          \"blitRects\",\n          Utils.getArrayReader(this.PackCompositeBlitRectSetV1),\n          \"raceSexData\",\n          Utils.getArrayReader(this.PackCompositeRaceDataV1),\n        ];\n      },\n\n      // => Version: 0\n      0: function () {\n        this.PackCompositeBlitRectSetV0 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"size\",\n          [\"[]\", \"uint32\", 2],\n          \"rectIndex\",\n          Utils.getArrayReader(\"uint32\"),\n          \"rectArray\",\n          Utils.getArrayReader([\"[]\", \"uint32\", 4]),\n        ];\n\n        this.PackCompositeFileDataV0 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint32\",\n          \"meshBase\",\n          Utils.getFileNameReader(),\n          \"meshOverlap\",\n          Utils.getFileNameReader(),\n          \"maskClothSkin\",\n          Utils.getFileNameReader(),\n          \"maskLeather\",\n          Utils.getFileNameReader(),\n          \"maskMetal\",\n          Utils.getFileNameReader(),\n          \"maskGlow\",\n          Utils.getFileNameReader(),\n          \"textureBase\",\n          Utils.getFileNameReader(),\n          \"textureNormal\",\n          Utils.getFileNameReader(),\n          \"hideFlags\",\n          \"uint32\",\n          \"skinFlags\",\n          \"uint32\",\n          \"blitRectIndex\",\n          \"uint32\",\n        ];\n\n        this.PackCompositeSkinPatternV0 = [\n          \"chest\",\n          Utils.getFileNameReader(),\n          \"face\",\n          Utils.getFileNameReader(),\n          \"feet\",\n          Utils.getFileNameReader(),\n          \"hands\",\n          Utils.getFileNameReader(),\n          \"legs\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackCompositeColorV0 = [\n          \"brightness\",\n          \"uint8\",\n          \"contrast\",\n          \"uint8\",\n          \"hue\",\n          \"uint8\",\n          \"saturation\",\n          \"uint8\",\n          \"lightness\",\n          \"uint8\",\n        ];\n\n        this.PackCompositeVariantComponentV0 = [\n          \"nameToken\",\n          Utils.getQWordReader(),\n          \"clothColor\",\n          this.PackCompositeColorV0,\n          \"leatherColor\",\n          this.PackCompositeColorV0,\n          \"metalColor\",\n          this.PackCompositeColorV0,\n        ];\n\n        this.PackCompositeVariantV0 = [\n          \"components\",\n          Utils.getArrayReader(this.PackCompositeVariantComponentV0),\n          \"hairColor\",\n          this.PackCompositeColorV0,\n          \"patternColor\",\n          this.PackCompositeColorV0,\n          \"skinColor\",\n          this.PackCompositeColorV0,\n          \"skinIndex\",\n          \"uint32\",\n        ];\n\n        this.PackCompositeRaceDataV0 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"nameToken\",\n          Utils.getQWordReader(),\n          \"ears\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"faces\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"fileData\",\n          Utils.getArrayReader(this.PackCompositeFileDataV0),\n          \"hairStyles\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"skeletonFile\",\n          Utils.getFileNameReader(),\n          \"skinPatterns\",\n          Utils.getArrayReader(this.PackCompositeSkinPatternV0),\n          \"type\",\n          \"uint32\",\n          \"variantRefRace\",\n          Utils.getQWordReader(),\n          \"variants\",\n          Utils.getArrayReader(this.PackCompositeVariantV0),\n        ];\n\n        this.__root = this.PackCompositeV0 = [\n          \"blitRects\",\n          Utils.getArrayReader(this.PackCompositeBlitRectSetV0),\n          \"raceSexData\",\n          Utils.getArrayReader(this.PackCompositeRaceDataV0),\n        ];\n      },\n    },\n  },\n];\n","const Utils = require(\"../../util/ParserUtils.js\");\n\nmodule.exports = [\n  /// ==================================================\n  /// Chunk: CSCN, versions: 37, strucTab: 0x16E8BC8\n  /// ==================================================\n\n  {\n    name: \"CSCN\",\n    versions: {\n      // => Version: 36, ReferencedFunction: 0xE37660\n      36: function () {\n        this.PropertyDataV36 = [\"value\", Utils.getQWordReader(), \"pathVal\", Utils.getFileNameReader(), \"type\", \"uint8\"];\n\n        this.CurveKeyDataV36 = [\"time\", \"float32\", \"value\", \"float32\", \"inTangent\", \"float32\", \"outTangent\", \"float32\"];\n\n        this.FlagKeyDataV36 = [\"time\", \"float32\", \"value\", \"float32\"];\n\n        this.TriggerKeyDataV36 = [\n          \"time\",\n          \"float32\",\n          \"flags1\",\n          \"uint8\",\n          \"flags2\",\n          \"uint8\",\n          \"flags3\",\n          \"uint8\",\n          \"flags4\",\n          \"uint8\",\n          \"token1\",\n          Utils.getQWordReader(),\n          \"token2\",\n          Utils.getQWordReader(),\n          \"value1\",\n          \"float32\",\n          \"value2\",\n          \"float32\",\n          \"value3\",\n          \"float32\",\n          \"value4\",\n          \"float32\",\n        ];\n\n        this.TrackDataV36 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"curveKey\",\n          Utils.getArrayReader(this.CurveKeyDataV36),\n          \"flagKey\",\n          Utils.getArrayReader(this.FlagKeyDataV36),\n          \"triggerKey\",\n          Utils.getArrayReader(this.TriggerKeyDataV36),\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.TrackGroupDataV36 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"prop\",\n          Utils.getArrayReader(this.PropertyDataV36),\n          \"track\",\n          Utils.getArrayReader(this.TrackDataV36),\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.SequenceDataV36 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"playScript\",\n          Utils.getQWordReader(),\n          \"updateScript\",\n          Utils.getQWordReader(),\n          \"environmentMap\",\n          Utils.getFileNameReader(),\n          \"map\",\n          Utils.getString16Reader(),\n          \"clientMap\",\n          Utils.getString16Reader(),\n          \"length\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"trackGroup\",\n          Utils.getArrayReader(this.TrackGroupDataV36),\n        ];\n\n        this.ColorDefDataV36 = [\"intensity\", \"float32\", \"color\", [\"[]\", \"uint8\", 3]];\n\n        this.AmbientLightDataV36 = [\n          \"ambientGroundColor\",\n          this.ColorDefDataV36,\n          \"ambientSkyColor\",\n          this.ColorDefDataV36,\n          \"fillColor\",\n          this.ColorDefDataV36,\n          \"hemisphericalColor\",\n          this.ColorDefDataV36,\n          \"name\",\n          Utils.getQWordReader(),\n        ];\n\n        this.FileNameRefDataV36 = [\"name\", Utils.getQWordReader(), \"fileName\", Utils.getFileNameReader()];\n\n        this.ScriptDataV36 = [\"name\", Utils.getQWordReader(), \"byteCode\", Utils.getArrayReader(\"uint8\")];\n\n        this.TextEntryDataV36 = [\"text\", Utils.getString16Reader(), \"language\", \"uint8\"];\n\n        this.TextResourceDataV36 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"index\",\n          \"uint32\",\n          \"voiceId\",\n          \"uint32\",\n          \"textEntry\",\n          Utils.getArrayReader(this.TextEntryDataV36),\n        ];\n\n        this.SpeciesResourceDataV36 = [\n          \"speciesId\",\n          [\"[]\", \"uint8\", 16],\n          \"name\",\n          Utils.getQWordReader(),\n          \"modelId\",\n          Utils.getQWordReader(),\n          \"modelVariant\",\n          Utils.getQWordReader(),\n        ];\n\n        this.ResourceDataV36 = [\n          \"ambientLightResource\",\n          Utils.getArrayReader(this.AmbientLightDataV36),\n          \"fileNameRef\",\n          Utils.getArrayReader(this.FileNameRefDataV36),\n          \"script\",\n          Utils.getArrayReader(this.ScriptDataV36),\n          \"textResource\",\n          Utils.getArrayReader(this.TextResourceDataV36),\n          \"speciesResource\",\n          Utils.getArrayReader(this.SpeciesResourceDataV36),\n        ];\n\n        this.__root = this.SceneDataV36 = [\n          \"startingSequence\",\n          Utils.getQWordReader(),\n          \"sequence\",\n          Utils.getArrayReader(this.SequenceDataV36),\n          \"resources\",\n          this.ResourceDataV36,\n          \"trackGroup\",\n          Utils.getPointerReader(this.TrackGroupDataV36),\n        ];\n      },\n\n      // => Version: 35\n      35: function () {\n        this.PropertyDataV35 = [\"value\", Utils.getQWordReader(), \"pathVal\", Utils.getFileNameReader(), \"type\", \"uint8\"];\n\n        this.CurveKeyDataV35 = [\"time\", \"float32\", \"value\", \"float32\", \"inTangent\", \"float32\", \"outTangent\", \"float32\"];\n\n        this.FlagKeyDataV35 = [\"time\", \"float32\", \"value\", \"float32\"];\n\n        this.TriggerKeyDataV35 = [\n          \"time\",\n          \"float32\",\n          \"flags1\",\n          \"uint8\",\n          \"flags2\",\n          \"uint8\",\n          \"flags3\",\n          \"uint8\",\n          \"flags4\",\n          \"uint8\",\n          \"token1\",\n          Utils.getQWordReader(),\n          \"token2\",\n          Utils.getQWordReader(),\n          \"value1\",\n          \"float32\",\n          \"value2\",\n          \"float32\",\n          \"value3\",\n          \"float32\",\n          \"value4\",\n          \"float32\",\n        ];\n\n        this.TrackDataV35 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"curveKey\",\n          Utils.getArrayReader(this.CurveKeyDataV35),\n          \"flagKey\",\n          Utils.getArrayReader(this.FlagKeyDataV35),\n          \"triggerKey\",\n          Utils.getArrayReader(this.TriggerKeyDataV35),\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.TrackGroupDataV35 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"prop\",\n          Utils.getArrayReader(this.PropertyDataV35),\n          \"track\",\n          Utils.getArrayReader(this.TrackDataV35),\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.SequenceDataV35 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"playScript\",\n          Utils.getQWordReader(),\n          \"updateScript\",\n          Utils.getQWordReader(),\n          \"environmentMap\",\n          Utils.getFileNameReader(),\n          \"map\",\n          Utils.getString16Reader(),\n          \"clientMap\",\n          Utils.getString16Reader(),\n          \"length\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"trackGroup\",\n          Utils.getArrayReader(this.TrackGroupDataV35),\n        ];\n\n        this.ColorDefDataV35 = [\"intensity\", \"float32\", \"color\", [\"[]\", \"uint8\", 3]];\n\n        this.AmbientLightDataV35 = [\n          \"ambientGroundColor\",\n          this.ColorDefDataV35,\n          \"ambientSkyColor\",\n          this.ColorDefDataV35,\n          \"fillColor\",\n          this.ColorDefDataV35,\n          \"hemisphericalColor\",\n          this.ColorDefDataV35,\n          \"name\",\n          Utils.getQWordReader(),\n        ];\n\n        this.FileNameRefDataV35 = [\"name\", Utils.getQWordReader(), \"fileName\", Utils.getFileNameReader()];\n\n        this.ScriptDataV35 = [\"name\", Utils.getQWordReader(), \"byteCode\", Utils.getArrayReader(\"uint8\")];\n\n        this.TextEntryDataV35 = [\"text\", Utils.getString16Reader(), \"language\", \"uint8\"];\n\n        this.TextResourceDataV35 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"index\",\n          \"uint32\",\n          \"voiceId\",\n          \"uint32\",\n          \"textEntry\",\n          Utils.getArrayReader(this.TextEntryDataV35),\n        ];\n\n        this.SpeciesResourceDataV35 = [\n          \"speciesId\",\n          [\"[]\", \"uint8\", 16],\n          \"name\",\n          Utils.getQWordReader(),\n          \"modelId\",\n          Utils.getQWordReader(),\n          \"modelVariant\",\n          Utils.getQWordReader(),\n        ];\n\n        this.ResourceDataV35 = [\n          \"ambientLightResource\",\n          Utils.getArrayReader(this.AmbientLightDataV35),\n          \"fileNameRef\",\n          Utils.getArrayReader(this.FileNameRefDataV35),\n          \"script\",\n          Utils.getArrayReader(this.ScriptDataV35),\n          \"textResource\",\n          Utils.getArrayReader(this.TextResourceDataV35),\n          \"speciesResource\",\n          Utils.getArrayReader(this.SpeciesResourceDataV35),\n        ];\n\n        this.__root = this.SceneDataV35 = [\n          \"startingSequence\",\n          Utils.getQWordReader(),\n          \"sequence\",\n          Utils.getArrayReader(this.SequenceDataV35),\n          \"resources\",\n          this.ResourceDataV35,\n          \"trackGroup\",\n          Utils.getPointerReader(this.TrackGroupDataV35),\n        ];\n      },\n\n      // => Version: 34, ReferencedFunction: 0xE375C0\n      34: function () {\n        this.PropertyDataV34 = [\"value\", Utils.getQWordReader(), \"pathVal\", Utils.getFileNameReader(), \"type\", \"uint8\"];\n\n        this.CurveKeyDataV34 = [\"time\", \"float32\", \"value\", \"float32\", \"inTangent\", \"float32\", \"outTangent\", \"float32\"];\n\n        this.FlagKeyDataV34 = [\"time\", \"float32\", \"value\", \"float32\"];\n\n        this.TriggerKeyDataV34 = [\n          \"time\",\n          \"float32\",\n          \"flags1\",\n          \"uint8\",\n          \"flags2\",\n          \"uint8\",\n          \"flags3\",\n          \"uint8\",\n          \"flags4\",\n          \"uint8\",\n          \"token1\",\n          Utils.getQWordReader(),\n          \"token2\",\n          Utils.getQWordReader(),\n          \"value1\",\n          \"float32\",\n          \"value2\",\n          \"float32\",\n          \"value3\",\n          \"float32\",\n          \"value4\",\n          \"float32\",\n        ];\n\n        this.TrackDataV34 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"curveKey\",\n          Utils.getArrayReader(this.CurveKeyDataV34),\n          \"flagKey\",\n          Utils.getArrayReader(this.FlagKeyDataV34),\n          \"triggerKey\",\n          Utils.getArrayReader(this.TriggerKeyDataV34),\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.TrackGroupDataV34 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"prop\",\n          Utils.getArrayReader(this.PropertyDataV34),\n          \"track\",\n          Utils.getArrayReader(this.TrackDataV34),\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.SequenceDataV34 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"playScript\",\n          Utils.getQWordReader(),\n          \"updateScript\",\n          Utils.getQWordReader(),\n          \"environmentMap\",\n          Utils.getFileNameReader(),\n          \"map\",\n          Utils.getString16Reader(),\n          \"clientMap\",\n          Utils.getString16Reader(),\n          \"length\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"trackGroup\",\n          Utils.getArrayReader(this.TrackGroupDataV34),\n        ];\n\n        this.ColorDefDataV34 = [\"intensity\", \"float32\", \"color\", [\"[]\", \"uint8\", 3]];\n\n        this.AmbientLightDataV34 = [\n          \"ambientGroundColor\",\n          this.ColorDefDataV34,\n          \"ambientSkyColor\",\n          this.ColorDefDataV34,\n          \"fillColor\",\n          this.ColorDefDataV34,\n          \"hemisphericalColor\",\n          this.ColorDefDataV34,\n          \"name\",\n          Utils.getQWordReader(),\n        ];\n\n        this.FileNameRefDataV34 = [\"name\", Utils.getQWordReader(), \"fileName\", Utils.getFileNameReader()];\n\n        this.ScriptDataV34 = [\"name\", Utils.getQWordReader(), \"byteCode\", Utils.getArrayReader(\"uint8\")];\n\n        this.TextEntryDataV34 = [\"text\", Utils.getString16Reader(), \"language\", \"uint8\"];\n\n        this.TextResourceDataV34 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"index\",\n          \"uint32\",\n          \"voiceId\",\n          \"uint32\",\n          \"textEntry\",\n          Utils.getArrayReader(this.TextEntryDataV34),\n        ];\n\n        this.SpeciesResourceDataV34 = [\n          \"speciesId\",\n          [\"[]\", \"uint8\", 16],\n          \"modelId\",\n          Utils.getQWordReader(),\n          \"modelVariant\",\n          Utils.getQWordReader(),\n        ];\n\n        this.ResourceDataV34 = [\n          \"ambientLightResource\",\n          Utils.getArrayReader(this.AmbientLightDataV34),\n          \"fileNameRef\",\n          Utils.getArrayReader(this.FileNameRefDataV34),\n          \"script\",\n          Utils.getArrayReader(this.ScriptDataV34),\n          \"textResource\",\n          Utils.getArrayReader(this.TextResourceDataV34),\n          \"speciesResource\",\n          Utils.getArrayReader(this.SpeciesResourceDataV34),\n        ];\n\n        this.__root = this.SceneDataV34 = [\n          \"startingSequence\",\n          Utils.getQWordReader(),\n          \"sequence\",\n          Utils.getArrayReader(this.SequenceDataV34),\n          \"resources\",\n          this.ResourceDataV34,\n          \"trackGroup\",\n          Utils.getPointerReader(this.TrackGroupDataV34),\n        ];\n      },\n\n      // => Version: 33, ReferencedFunction: 0xE37520\n      33: function () {\n        this.PropertyDataV33 = [\"value\", Utils.getQWordReader(), \"pathVal\", Utils.getFileNameReader(), \"type\", \"uint8\"];\n\n        this.CurveKeyDataV33 = [\"time\", \"float32\", \"value\", \"float32\", \"inTangent\", \"float32\", \"outTangent\", \"float32\"];\n\n        this.FlagKeyDataV33 = [\"time\", \"float32\", \"value\", \"float32\"];\n\n        this.TriggerKeyDataV33 = [\n          \"time\",\n          \"float32\",\n          \"flags1\",\n          \"uint8\",\n          \"flags2\",\n          \"uint8\",\n          \"flags3\",\n          \"uint8\",\n          \"flags4\",\n          \"uint8\",\n          \"token1\",\n          Utils.getQWordReader(),\n          \"token2\",\n          Utils.getQWordReader(),\n          \"value1\",\n          \"float32\",\n          \"value2\",\n          \"float32\",\n          \"value3\",\n          \"float32\",\n          \"value4\",\n          \"float32\",\n        ];\n\n        this.TrackDataV33 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"curveKey\",\n          Utils.getArrayReader(this.CurveKeyDataV33),\n          \"flagKey\",\n          Utils.getArrayReader(this.FlagKeyDataV33),\n          \"triggerKey\",\n          Utils.getArrayReader(this.TriggerKeyDataV33),\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.TrackGroupDataV33 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"prop\",\n          Utils.getArrayReader(this.PropertyDataV33),\n          \"track\",\n          Utils.getArrayReader(this.TrackDataV33),\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.SequenceDataV33 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"playScript\",\n          Utils.getQWordReader(),\n          \"updateScript\",\n          Utils.getQWordReader(),\n          \"environmentMap\",\n          Utils.getFileNameReader(),\n          \"map\",\n          Utils.getString16Reader(),\n          \"clientMap\",\n          Utils.getString16Reader(),\n          \"length\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"trackGroup\",\n          Utils.getArrayReader(this.TrackGroupDataV33),\n        ];\n\n        this.ColorDefDataV33 = [\"intensity\", \"float32\", \"color\", [\"[]\", \"uint8\", 3]];\n\n        this.AmbientLightDataV33 = [\n          \"ambientGroundColor\",\n          this.ColorDefDataV33,\n          \"ambientSkyColor\",\n          this.ColorDefDataV33,\n          \"fillColor\",\n          this.ColorDefDataV33,\n          \"hemisphericalColor\",\n          this.ColorDefDataV33,\n          \"name\",\n          Utils.getQWordReader(),\n        ];\n\n        this.FileNameRefDataV33 = [\"name\", Utils.getQWordReader(), \"fileName\", Utils.getFileNameReader()];\n\n        this.ScriptDataV33 = [\"name\", Utils.getQWordReader(), \"byteCode\", Utils.getArrayReader(\"uint8\")];\n\n        this.TextEntryDataV33 = [\"text\", Utils.getString16Reader(), \"language\", \"uint8\"];\n\n        this.TextResourceDataV33 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"index\",\n          \"uint32\",\n          \"voiceId\",\n          \"uint32\",\n          \"textEntry\",\n          Utils.getArrayReader(this.TextEntryDataV33),\n        ];\n\n        this.ResourceDataV33 = [\n          \"crc\",\n          \"uint32\",\n          \"ambientLightResource\",\n          Utils.getArrayReader(this.AmbientLightDataV33),\n          \"fileNameRef\",\n          Utils.getArrayReader(this.FileNameRefDataV33),\n          \"script\",\n          Utils.getArrayReader(this.ScriptDataV33),\n          \"textResource\",\n          Utils.getArrayReader(this.TextResourceDataV33),\n        ];\n\n        this.__root = this.SceneDataV33 = [\n          \"startingSequence\",\n          Utils.getQWordReader(),\n          \"sequence\",\n          Utils.getArrayReader(this.SequenceDataV33),\n          \"resources\",\n          this.ResourceDataV33,\n          \"trackGroup\",\n          Utils.getPointerReader(this.TrackGroupDataV33),\n        ];\n      },\n\n      // => Version: 32, ReferencedFunction: 0xE37480\n      32: function () {\n        this.PropertyDataV32 = [\"value\", Utils.getQWordReader(), \"pathVal\", Utils.getFileNameReader(), \"type\", \"uint8\"];\n\n        this.CurveKeyDataV32 = [\"time\", \"float32\", \"value\", \"float32\", \"inTangent\", \"float32\", \"outTangent\", \"float32\"];\n\n        this.FlagKeyDataV32 = [\"time\", \"float32\", \"value\", \"float32\"];\n\n        this.TriggerKeyDataV32 = [\n          \"time\",\n          \"float32\",\n          \"flags1\",\n          \"uint8\",\n          \"flags2\",\n          \"uint8\",\n          \"flags3\",\n          \"uint8\",\n          \"flags4\",\n          \"uint8\",\n          \"token1\",\n          Utils.getQWordReader(),\n          \"token2\",\n          Utils.getQWordReader(),\n          \"value1\",\n          \"float32\",\n          \"value2\",\n          \"float32\",\n          \"value3\",\n          \"float32\",\n          \"value4\",\n          \"float32\",\n        ];\n\n        this.TrackDataV32 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"curveKey\",\n          Utils.getArrayReader(this.CurveKeyDataV32),\n          \"flagKey\",\n          Utils.getArrayReader(this.FlagKeyDataV32),\n          \"triggerKey\",\n          Utils.getArrayReader(this.TriggerKeyDataV32),\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.TrackGroupDataV32 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"prop\",\n          Utils.getArrayReader(this.PropertyDataV32),\n          \"track\",\n          Utils.getArrayReader(this.TrackDataV32),\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.SequenceDataV32 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"playScript\",\n          Utils.getQWordReader(),\n          \"updateScript\",\n          Utils.getQWordReader(),\n          \"environmentMap\",\n          Utils.getFileNameReader(),\n          \"map\",\n          Utils.getString16Reader(),\n          \"clientMap\",\n          Utils.getString16Reader(),\n          \"length\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"trackGroup\",\n          Utils.getArrayReader(this.TrackGroupDataV32),\n        ];\n\n        this.ColorDefDataV32 = [\"intensity\", \"float32\", \"color\", [\"[]\", \"uint8\", 3]];\n\n        this.AmbientLightDataV32 = [\n          \"ambientGroundColor\",\n          this.ColorDefDataV32,\n          \"ambientSkyColor\",\n          this.ColorDefDataV32,\n          \"fillColor\",\n          this.ColorDefDataV32,\n          \"hemisphericalColor\",\n          this.ColorDefDataV32,\n          \"name\",\n          Utils.getQWordReader(),\n        ];\n\n        this.FileNameRefDataV32 = [\"name\", Utils.getQWordReader(), \"fileName\", Utils.getFileNameReader()];\n\n        this.ScriptDataV32 = [\"name\", Utils.getQWordReader(), \"byteCode\", Utils.getArrayReader(\"uint8\")];\n\n        this.TextEntryDataV32 = [\"text\", Utils.getString16Reader(), \"language\", \"uint8\"];\n\n        this.TextResourceDataV32 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"index\",\n          \"uint32\",\n          \"voiceId\",\n          \"uint32\",\n          \"textEntry\",\n          Utils.getArrayReader(this.TextEntryDataV32),\n        ];\n\n        this.ResourceDataV32 = [\n          \"crc\",\n          \"uint32\",\n          \"ambientLightResource\",\n          Utils.getArrayReader(this.AmbientLightDataV32),\n          \"fileNameRef\",\n          Utils.getArrayReader(this.FileNameRefDataV32),\n          \"script\",\n          Utils.getArrayReader(this.ScriptDataV32),\n          \"textResource\",\n          Utils.getArrayReader(this.TextResourceDataV32),\n        ];\n\n        this.__root = this.SceneDataV32 = [\n          \"startingSequence\",\n          Utils.getQWordReader(),\n          \"sequence\",\n          Utils.getArrayReader(this.SequenceDataV32),\n          \"resources\",\n          this.ResourceDataV32,\n          \"trackGroup\",\n          Utils.getPointerReader(this.TrackGroupDataV32),\n        ];\n      },\n\n      // => Version: 31, ReferencedFunction: 0xE373E0\n      31: function () {\n        this.PropertyDataV31 = [\"value\", Utils.getQWordReader(), \"pathVal\", Utils.getFileNameReader(), \"type\", \"uint8\"];\n\n        this.CurveKeyDataV31 = [\"time\", \"float32\", \"value\", \"float32\", \"inTangent\", \"float32\", \"outTangent\", \"float32\"];\n\n        this.FlagKeyDataV31 = [\"time\", \"float32\", \"value\", \"float32\"];\n\n        this.TriggerKeyDataV31 = [\n          \"time\",\n          \"float32\",\n          \"flags1\",\n          \"uint8\",\n          \"flags2\",\n          \"uint8\",\n          \"flags3\",\n          \"uint8\",\n          \"flags4\",\n          \"uint8\",\n          \"token1\",\n          Utils.getQWordReader(),\n          \"token2\",\n          Utils.getQWordReader(),\n          \"value1\",\n          \"float32\",\n          \"value2\",\n          \"float32\",\n          \"value3\",\n          \"float32\",\n          \"value4\",\n          \"float32\",\n        ];\n\n        this.TrackDataV31 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"curveKey\",\n          Utils.getArrayReader(this.CurveKeyDataV31),\n          \"flagKey\",\n          Utils.getArrayReader(this.FlagKeyDataV31),\n          \"triggerKey\",\n          Utils.getArrayReader(this.TriggerKeyDataV31),\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.TrackGroupDataV31 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"prop\",\n          Utils.getArrayReader(this.PropertyDataV31),\n          \"track\",\n          Utils.getArrayReader(this.TrackDataV31),\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.SequenceDataV31 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"playScript\",\n          Utils.getQWordReader(),\n          \"updateScript\",\n          Utils.getQWordReader(),\n          \"environmentMap\",\n          Utils.getFileNameReader(),\n          \"map\",\n          Utils.getString16Reader(),\n          \"clientMap\",\n          Utils.getString16Reader(),\n          \"length\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"trackGroup\",\n          Utils.getArrayReader(this.TrackGroupDataV31),\n        ];\n\n        this.ColorDefDataV31 = [\"intensity\", \"float32\", \"color\", [\"[]\", \"uint8\", 3]];\n\n        this.AmbientLightDataV31 = [\n          \"ambientGroundColor\",\n          this.ColorDefDataV31,\n          \"ambientSkyColor\",\n          this.ColorDefDataV31,\n          \"fillColor\",\n          this.ColorDefDataV31,\n          \"hemisphericalColor\",\n          this.ColorDefDataV31,\n          \"name\",\n          Utils.getQWordReader(),\n        ];\n\n        this.FileNameRefDataV31 = [\"name\", Utils.getQWordReader(), \"fileName\", Utils.getFileNameReader()];\n\n        this.ScriptDataV31 = [\"name\", Utils.getQWordReader(), \"byteCode\", Utils.getArrayReader(\"uint8\")];\n\n        this.TextEntryDataV31 = [\"text\", Utils.getString16Reader(), \"language\", \"uint8\"];\n\n        this.TextResourceDataV31 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"index\",\n          \"uint32\",\n          \"voiceId\",\n          \"uint32\",\n          \"textEntry\",\n          Utils.getArrayReader(this.TextEntryDataV31),\n        ];\n\n        this.ResourceDataV31 = [\n          \"crc\",\n          \"uint32\",\n          \"ambientLightResource\",\n          Utils.getArrayReader(this.AmbientLightDataV31),\n          \"fileNameRef\",\n          Utils.getArrayReader(this.FileNameRefDataV31),\n          \"script\",\n          Utils.getArrayReader(this.ScriptDataV31),\n          \"textResource\",\n          Utils.getArrayReader(this.TextResourceDataV31),\n        ];\n\n        this.__root = this.SceneDataV31 = [\n          \"startingSequence\",\n          Utils.getQWordReader(),\n          \"sequence\",\n          Utils.getArrayReader(this.SequenceDataV31),\n          \"resources\",\n          this.ResourceDataV31,\n          \"trackGroup\",\n          Utils.getPointerReader(this.TrackGroupDataV31),\n        ];\n      },\n\n      // => Version: 30, ReferencedFunction: 0xE37390\n      30: function () {\n        this.PropertyDataV30 = [\"value\", Utils.getQWordReader(), \"pathVal\", Utils.getFileNameReader(), \"type\", \"uint8\"];\n\n        this.CurveKeyDataV30 = [\"time\", \"float32\", \"value\", \"float32\", \"inTangent\", \"float32\", \"outTangent\", \"float32\"];\n\n        this.FlagKeyDataV30 = [\"time\", \"float32\", \"value\", \"float32\"];\n\n        this.TriggerKeyDataV30 = [\n          \"time\",\n          \"float32\",\n          \"flags1\",\n          \"uint8\",\n          \"flags2\",\n          \"uint8\",\n          \"flags3\",\n          \"uint8\",\n          \"flags4\",\n          \"uint8\",\n          \"token1\",\n          Utils.getQWordReader(),\n          \"token2\",\n          Utils.getQWordReader(),\n          \"value1\",\n          \"float32\",\n          \"value2\",\n          \"float32\",\n          \"value3\",\n          \"float32\",\n          \"value4\",\n          \"float32\",\n        ];\n\n        this.TrackDataV30 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"curveKey\",\n          Utils.getArrayReader(this.CurveKeyDataV30),\n          \"flagKey\",\n          Utils.getArrayReader(this.FlagKeyDataV30),\n          \"triggerKey\",\n          Utils.getArrayReader(this.TriggerKeyDataV30),\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.TrackGroupDataV30 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"prop\",\n          Utils.getArrayReader(this.PropertyDataV30),\n          \"track\",\n          Utils.getArrayReader(this.TrackDataV30),\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.SequenceDataV30 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"playScript\",\n          Utils.getQWordReader(),\n          \"updateScript\",\n          Utils.getQWordReader(),\n          \"environmentMap\",\n          Utils.getFileNameReader(),\n          \"map\",\n          Utils.getString16Reader(),\n          \"clientMap\",\n          Utils.getString16Reader(),\n          \"length\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"trackGroup\",\n          Utils.getArrayReader(this.TrackGroupDataV30),\n        ];\n\n        this.ColorDefDataV30 = [\"intensity\", \"float32\", \"color\", [\"[]\", \"uint8\", 3]];\n\n        this.AmbientLightDataV30 = [\n          \"ambientGroundColor\",\n          this.ColorDefDataV30,\n          \"ambientSkyColor\",\n          this.ColorDefDataV30,\n          \"fillColor\",\n          this.ColorDefDataV30,\n          \"hemisphericalColor\",\n          this.ColorDefDataV30,\n          \"name\",\n          Utils.getQWordReader(),\n        ];\n\n        this.FileNameRefDataV30 = [\"name\", Utils.getQWordReader(), \"fileName\", Utils.getFileNameReader()];\n\n        this.ScriptDataV30 = [\"name\", Utils.getQWordReader(), \"byteCode\", Utils.getArrayReader(\"uint8\")];\n\n        this.TextEntryDataV30 = [\"text\", Utils.getString16Reader(), \"language\", \"uint8\"];\n\n        this.TextResourceDataV30 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"index\",\n          \"uint32\",\n          \"voiceId\",\n          \"uint32\",\n          \"textEntry\",\n          Utils.getArrayReader(this.TextEntryDataV30),\n        ];\n\n        this.ResourceDataV30 = [\n          \"crc\",\n          \"uint32\",\n          \"ambientLightResource\",\n          Utils.getArrayReader(this.AmbientLightDataV30),\n          \"fileNameRef\",\n          Utils.getArrayReader(this.FileNameRefDataV30),\n          \"script\",\n          Utils.getArrayReader(this.ScriptDataV30),\n          \"textResource\",\n          Utils.getArrayReader(this.TextResourceDataV30),\n        ];\n\n        this.__root = this.SceneDataV30 = [\n          \"startingSequence\",\n          Utils.getQWordReader(),\n          \"sequence\",\n          Utils.getArrayReader(this.SequenceDataV30),\n          \"resources\",\n          this.ResourceDataV30,\n          \"trackGroup\",\n          Utils.getPointerReader(this.TrackGroupDataV30),\n        ];\n      },\n\n      // => Version: 29\n      29: function () {\n        this.PropertyDataV29 = [\"value\", Utils.getQWordReader(), \"pathVal\", Utils.getFileNameReader(), \"type\", \"uint8\"];\n\n        this.CurveKeyDataV29 = [\"time\", \"float32\", \"value\", \"float32\", \"inTangent\", \"float32\", \"outTangent\", \"float32\"];\n\n        this.FlagKeyDataV29 = [\"time\", \"float32\", \"value\", \"float32\"];\n\n        this.TriggerKeyDataV29 = [\n          \"time\",\n          \"float32\",\n          \"flags1\",\n          \"uint8\",\n          \"flags2\",\n          \"uint8\",\n          \"flags3\",\n          \"uint8\",\n          \"flags4\",\n          \"uint8\",\n          \"token1\",\n          Utils.getQWordReader(),\n          \"token2\",\n          Utils.getQWordReader(),\n          \"value1\",\n          \"float32\",\n          \"value2\",\n          \"float32\",\n          \"value3\",\n          \"float32\",\n          \"value4\",\n          \"float32\",\n        ];\n\n        this.TrackDataV29 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"curveKey\",\n          Utils.getArrayReader(this.CurveKeyDataV29),\n          \"flagKey\",\n          Utils.getArrayReader(this.FlagKeyDataV29),\n          \"triggerKey\",\n          Utils.getArrayReader(this.TriggerKeyDataV29),\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.TrackGroupDataV29 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"prop\",\n          Utils.getArrayReader(this.PropertyDataV29),\n          \"track\",\n          Utils.getArrayReader(this.TrackDataV29),\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.SequenceDataV29 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"playScript\",\n          Utils.getQWordReader(),\n          \"updateScript\",\n          Utils.getQWordReader(),\n          \"environmentMap\",\n          Utils.getFileNameReader(),\n          \"map\",\n          Utils.getString16Reader(),\n          \"clientMap\",\n          Utils.getString16Reader(),\n          \"length\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"trackGroup\",\n          Utils.getArrayReader(this.TrackGroupDataV29),\n        ];\n\n        this.ColorDefDataV29 = [\"intensity\", \"float32\", \"color\", [\"[]\", \"uint8\", 3]];\n\n        this.AmbientLightDataV29 = [\n          \"ambientGroundColor\",\n          this.ColorDefDataV29,\n          \"ambientSkyColor\",\n          this.ColorDefDataV29,\n          \"fillColor\",\n          this.ColorDefDataV29,\n          \"hemisphericalColor\",\n          this.ColorDefDataV29,\n          \"name\",\n          Utils.getQWordReader(),\n        ];\n\n        this.FileNameRefDataV29 = [\"name\", Utils.getQWordReader(), \"fileName\", Utils.getFileNameReader()];\n\n        this.ScriptDataV29 = [\"name\", Utils.getQWordReader(), \"byteCode\", Utils.getArrayReader(\"uint8\")];\n\n        this.TextEntryDataV29 = [\"text\", Utils.getString16Reader(), \"language\", \"uint8\"];\n\n        this.TextResourceDataV29 = [\n          \"guid\",\n          [\"[]\", \"uint8\", 16],\n          \"name\",\n          Utils.getQWordReader(),\n          \"id\",\n          \"uint32\",\n          \"voiceId\",\n          \"uint32\",\n          \"textEntry\",\n          Utils.getArrayReader(this.TextEntryDataV29),\n        ];\n\n        this.ResourceDataV29 = [\n          \"crc\",\n          \"uint32\",\n          \"ambientLightResource\",\n          Utils.getArrayReader(this.AmbientLightDataV29),\n          \"fileNameRef\",\n          Utils.getArrayReader(this.FileNameRefDataV29),\n          \"script\",\n          Utils.getArrayReader(this.ScriptDataV29),\n          \"textResource\",\n          Utils.getArrayReader(this.TextResourceDataV29),\n        ];\n\n        this.__root = this.SceneDataV29 = [\n          \"startingSequence\",\n          Utils.getQWordReader(),\n          \"sequence\",\n          Utils.getArrayReader(this.SequenceDataV29),\n          \"resources\",\n          this.ResourceDataV29,\n          \"trackGroup\",\n          Utils.getPointerReader(this.TrackGroupDataV29),\n        ];\n      },\n\n      // => Version: 28, ReferencedFunction: 0xE372F0\n      28: function () {\n        this.PropertyDataV28 = [\"value\", Utils.getQWordReader(), \"pathVal\", Utils.getFileNameReader(), \"type\", \"uint8\"];\n\n        this.CurveKeyDataV28 = [\"time\", \"float32\", \"value\", \"float32\", \"inTangent\", \"float32\", \"outTangent\", \"float32\"];\n\n        this.FlagKeyDataV28 = [\"time\", \"float32\", \"value\", \"float32\"];\n\n        this.TriggerKeyDataV28 = [\n          \"time\",\n          \"float32\",\n          \"flags1\",\n          \"uint8\",\n          \"flags2\",\n          \"uint8\",\n          \"flags3\",\n          \"uint8\",\n          \"flags4\",\n          \"uint8\",\n          \"token1\",\n          Utils.getQWordReader(),\n          \"token2\",\n          Utils.getQWordReader(),\n          \"value1\",\n          \"float32\",\n          \"value2\",\n          \"float32\",\n          \"value3\",\n          \"float32\",\n          \"value4\",\n          \"float32\",\n        ];\n\n        this.TrackDataV28 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"curveKey\",\n          Utils.getArrayReader(this.CurveKeyDataV28),\n          \"flagKey\",\n          Utils.getArrayReader(this.FlagKeyDataV28),\n          \"triggerKey\",\n          Utils.getArrayReader(this.TriggerKeyDataV28),\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.TrackGroupDataV28 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"prop\",\n          Utils.getArrayReader(this.PropertyDataV28),\n          \"track\",\n          Utils.getArrayReader(this.TrackDataV28),\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.SequenceDataV28 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"playScript\",\n          Utils.getQWordReader(),\n          \"updateScript\",\n          Utils.getQWordReader(),\n          \"environmentMap\",\n          Utils.getFileNameReader(),\n          \"map\",\n          Utils.getString16Reader(),\n          \"clientMap\",\n          Utils.getString16Reader(),\n          \"length\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"trackGroup\",\n          Utils.getArrayReader(this.TrackGroupDataV28),\n        ];\n\n        this.ColorDefDataV28 = [\"intensity\", \"float32\", \"color\", [\"[]\", \"uint8\", 3]];\n\n        this.AmbientLightDataV28 = [\n          \"ambientGroundColor\",\n          this.ColorDefDataV28,\n          \"ambientSkyColor\",\n          this.ColorDefDataV28,\n          \"fillColor\",\n          this.ColorDefDataV28,\n          \"hemisphericalColor\",\n          this.ColorDefDataV28,\n          \"name\",\n          Utils.getQWordReader(),\n        ];\n\n        this.FileNameRefDataV28 = [\"name\", Utils.getQWordReader(), \"fileName\", Utils.getFileNameReader()];\n\n        this.ScriptDataV28 = [\"name\", Utils.getQWordReader(), \"byteCode\", Utils.getArrayReader(\"uint8\")];\n\n        this.TextEntryDataV28 = [\"text\", Utils.getString16Reader(), \"language\", \"uint8\"];\n\n        this.TextResourceDataV28 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"id\",\n          \"uint32\",\n          \"voiceId\",\n          \"uint32\",\n          \"textEntry\",\n          Utils.getArrayReader(this.TextEntryDataV28),\n        ];\n\n        this.ResourceDataV28 = [\n          \"crc\",\n          \"uint32\",\n          \"ambientLightResource\",\n          Utils.getArrayReader(this.AmbientLightDataV28),\n          \"fileNameRef\",\n          Utils.getArrayReader(this.FileNameRefDataV28),\n          \"script\",\n          Utils.getArrayReader(this.ScriptDataV28),\n          \"textResource\",\n          Utils.getArrayReader(this.TextResourceDataV28),\n        ];\n\n        this.__root = this.SceneDataV28 = [\n          \"startingSequence\",\n          Utils.getQWordReader(),\n          \"sequence\",\n          Utils.getArrayReader(this.SequenceDataV28),\n          \"resources\",\n          this.ResourceDataV28,\n          \"trackGroup\",\n          Utils.getPointerReader(this.TrackGroupDataV28),\n        ];\n      },\n\n      // => Version: 27, ReferencedFunction: 0xE37250\n      27: function () {\n        this.PropertyDataV27 = [\"value\", Utils.getQWordReader(), \"pathVal\", Utils.getFileNameReader(), \"type\", \"uint8\"];\n\n        this.CurveKeyDataV27 = [\"time\", \"float32\", \"value\", \"float32\", \"inTangent\", \"float32\", \"outTangent\", \"float32\"];\n\n        this.FlagKeyDataV27 = [\"time\", \"float32\", \"value\", \"float32\"];\n\n        this.TriggerKeyDataV27 = [\n          \"time\",\n          \"float32\",\n          \"flags1\",\n          \"uint8\",\n          \"flags2\",\n          \"uint8\",\n          \"flags3\",\n          \"uint8\",\n          \"flags4\",\n          \"uint8\",\n          \"token1\",\n          Utils.getQWordReader(),\n          \"token2\",\n          Utils.getQWordReader(),\n          \"value1\",\n          \"float32\",\n          \"value2\",\n          \"float32\",\n          \"value3\",\n          \"float32\",\n          \"value4\",\n          \"float32\",\n        ];\n\n        this.TrackDataV27 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"curveKey\",\n          Utils.getArrayReader(this.CurveKeyDataV27),\n          \"flagKey\",\n          Utils.getArrayReader(this.FlagKeyDataV27),\n          \"triggerKey\",\n          Utils.getArrayReader(this.TriggerKeyDataV27),\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.TrackGroupDataV27 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"prop\",\n          Utils.getArrayReader(this.PropertyDataV27),\n          \"track\",\n          Utils.getArrayReader(this.TrackDataV27),\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.SequenceDataV27 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"playScript\",\n          Utils.getQWordReader(),\n          \"updateScript\",\n          Utils.getQWordReader(),\n          \"environmentMap\",\n          Utils.getFileNameReader(),\n          \"map\",\n          Utils.getString16Reader(),\n          \"clientMap\",\n          Utils.getString16Reader(),\n          \"length\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"trackGroup\",\n          Utils.getArrayReader(this.TrackGroupDataV27),\n        ];\n\n        this.ColorDefDataV27 = [\"intensity\", \"float32\", \"color\", [\"[]\", \"uint8\", 3]];\n\n        this.AmbientLightDataV27 = [\n          \"ambientGroundColor\",\n          this.ColorDefDataV27,\n          \"ambientSkyColor\",\n          this.ColorDefDataV27,\n          \"fillColor\",\n          this.ColorDefDataV27,\n          \"hemisphericalColor\",\n          this.ColorDefDataV27,\n          \"name\",\n          Utils.getQWordReader(),\n        ];\n\n        this.FileNameRefDataV27 = [\"name\", Utils.getQWordReader(), \"fileName\", Utils.getFileNameReader()];\n\n        this.ScriptDataV27 = [\"name\", Utils.getQWordReader(), \"byteCode\", Utils.getArrayReader(\"uint8\")];\n\n        this.TextEntryDataV27 = [\"text\", Utils.getString16Reader(), \"language\", \"uint8\"];\n\n        this.TextResourceDataV27 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"id\",\n          \"uint32\",\n          \"voiceId\",\n          \"uint32\",\n          \"textEntry\",\n          Utils.getArrayReader(this.TextEntryDataV27),\n        ];\n\n        this.ResourceDataV27 = [\n          \"crc\",\n          \"uint32\",\n          \"ambientLightResource\",\n          Utils.getArrayReader(this.AmbientLightDataV27),\n          \"fileNameRef\",\n          Utils.getArrayReader(this.FileNameRefDataV27),\n          \"script\",\n          Utils.getArrayReader(this.ScriptDataV27),\n          \"textResource\",\n          Utils.getArrayReader(this.TextResourceDataV27),\n        ];\n\n        this.__root = this.SceneDataV27 = [\n          \"startingSequence\",\n          Utils.getQWordReader(),\n          \"sequence\",\n          Utils.getArrayReader(this.SequenceDataV27),\n          \"resources\",\n          this.ResourceDataV27,\n          \"trackGroup\",\n          Utils.getPointerReader(this.TrackGroupDataV27),\n        ];\n      },\n\n      // => Version: 26, ReferencedFunction: 0xE371B0\n      26: function () {\n        this.PropertyDataV26 = [\"value\", Utils.getQWordReader(), \"pathVal\", Utils.getFileNameReader(), \"type\", \"uint8\"];\n\n        this.CurveKeyDataV26 = [\"time\", \"float32\", \"value\", \"float32\", \"inTangent\", \"float32\", \"outTangent\", \"float32\"];\n\n        this.FlagKeyDataV26 = [\"time\", \"float32\", \"value\", \"float32\"];\n\n        this.TriggerKeyDataV26 = [\n          \"time\",\n          \"float32\",\n          \"flags1\",\n          \"uint8\",\n          \"flags2\",\n          \"uint8\",\n          \"flags3\",\n          \"uint8\",\n          \"flags4\",\n          \"uint8\",\n          \"token1\",\n          Utils.getQWordReader(),\n          \"token2\",\n          Utils.getQWordReader(),\n          \"value1\",\n          \"float32\",\n          \"value2\",\n          \"float32\",\n          \"value3\",\n          \"float32\",\n          \"value4\",\n          \"float32\",\n        ];\n\n        this.TrackDataV26 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"curveKey\",\n          Utils.getArrayReader(this.CurveKeyDataV26),\n          \"flagKey\",\n          Utils.getArrayReader(this.FlagKeyDataV26),\n          \"triggerKey\",\n          Utils.getArrayReader(this.TriggerKeyDataV26),\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.TrackGroupDataV26 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"prop\",\n          Utils.getArrayReader(this.PropertyDataV26),\n          \"track\",\n          Utils.getArrayReader(this.TrackDataV26),\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.SequenceDataV26 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"playScript\",\n          Utils.getQWordReader(),\n          \"updateScript\",\n          Utils.getQWordReader(),\n          \"environmentMap\",\n          Utils.getFileNameReader(),\n          \"map\",\n          Utils.getString16Reader(),\n          \"clientMap\",\n          Utils.getString16Reader(),\n          \"length\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"trackGroup\",\n          Utils.getArrayReader(this.TrackGroupDataV26),\n        ];\n\n        this.ColorDefDataV26 = [\"intensity\", \"float32\", \"color\", [\"[]\", \"uint8\", 3]];\n\n        this.AmbientLightDataV26 = [\n          \"ambientGroundColor\",\n          this.ColorDefDataV26,\n          \"ambientSkyColor\",\n          this.ColorDefDataV26,\n          \"fillColor\",\n          this.ColorDefDataV26,\n          \"hemisphericalColor\",\n          this.ColorDefDataV26,\n          \"name\",\n          Utils.getQWordReader(),\n        ];\n\n        this.FileNameRefDataV26 = [\"name\", Utils.getQWordReader(), \"fileName\", Utils.getFileNameReader()];\n\n        this.ScriptDataV26 = [\"name\", Utils.getQWordReader(), \"byteCode\", Utils.getArrayReader(\"uint8\")];\n\n        this.TextEntryDataV26 = [\"text\", Utils.getString16Reader(), \"language\", \"uint8\"];\n\n        this.TextResourceDataV26 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"id\",\n          \"uint32\",\n          \"voiceId\",\n          \"uint32\",\n          \"textEntry\",\n          Utils.getArrayReader(this.TextEntryDataV26),\n        ];\n\n        this.ResourceDataV26 = [\n          \"crc\",\n          \"uint32\",\n          \"ambientLightResource\",\n          Utils.getArrayReader(this.AmbientLightDataV26),\n          \"fileNameRef\",\n          Utils.getArrayReader(this.FileNameRefDataV26),\n          \"script\",\n          Utils.getArrayReader(this.ScriptDataV26),\n          \"textResource\",\n          Utils.getArrayReader(this.TextResourceDataV26),\n        ];\n\n        this.__root = this.SceneDataV26 = [\n          \"startingSequence\",\n          Utils.getQWordReader(),\n          \"sequence\",\n          Utils.getArrayReader(this.SequenceDataV26),\n          \"resources\",\n          this.ResourceDataV26,\n          \"trackGroup\",\n          Utils.getPointerReader(this.TrackGroupDataV26),\n        ];\n      },\n\n      // => Version: 25, ReferencedFunction: 0xE37110\n      25: function () {\n        this.PropertyDataV25 = [\"value\", Utils.getQWordReader(), \"pathVal\", Utils.getFileNameReader(), \"type\", \"uint8\"];\n\n        this.CurveKeyDataV25 = [\"time\", \"float32\", \"value\", \"float32\", \"inTangent\", \"float32\", \"outTangent\", \"float32\"];\n\n        this.FlagKeyDataV25 = [\"time\", \"float32\", \"value\", \"float32\"];\n\n        this.TriggerKeyDataV25 = [\n          \"time\",\n          \"float32\",\n          \"flags1\",\n          \"uint8\",\n          \"flags2\",\n          \"uint8\",\n          \"flags3\",\n          \"uint8\",\n          \"flags4\",\n          \"uint8\",\n          \"token1\",\n          Utils.getQWordReader(),\n          \"token2\",\n          Utils.getQWordReader(),\n          \"value1\",\n          \"float32\",\n          \"value2\",\n          \"float32\",\n          \"value3\",\n          \"float32\",\n          \"value4\",\n          \"float32\",\n        ];\n\n        this.TrackDataV25 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"curveKey\",\n          Utils.getArrayReader(this.CurveKeyDataV25),\n          \"flagKey\",\n          Utils.getArrayReader(this.FlagKeyDataV25),\n          \"triggerKey\",\n          Utils.getArrayReader(this.TriggerKeyDataV25),\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.TrackGroupDataV25 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"prop\",\n          Utils.getArrayReader(this.PropertyDataV25),\n          \"track\",\n          Utils.getArrayReader(this.TrackDataV25),\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.SequenceDataV25 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"playScript\",\n          Utils.getQWordReader(),\n          \"updateScript\",\n          Utils.getQWordReader(),\n          \"environmentMap\",\n          Utils.getFileNameReader(),\n          \"map\",\n          Utils.getString16Reader(),\n          \"clientMap\",\n          Utils.getString16Reader(),\n          \"length\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"trackGroup\",\n          Utils.getArrayReader(this.TrackGroupDataV25),\n        ];\n\n        this.ColorDefDataV25 = [\"intensity\", \"float32\", \"color\", [\"[]\", \"uint8\", 3]];\n\n        this.AmbientLightDataV25 = [\n          \"ambientGroundColor\",\n          this.ColorDefDataV25,\n          \"ambientSkyColor\",\n          this.ColorDefDataV25,\n          \"fillColor\",\n          this.ColorDefDataV25,\n          \"hemisphericalColor\",\n          this.ColorDefDataV25,\n          \"name\",\n          Utils.getQWordReader(),\n        ];\n\n        this.FileNameRefDataV25 = [\"name\", Utils.getQWordReader(), \"fileName\", Utils.getFileNameReader()];\n\n        this.ScriptDataV25 = [\"name\", Utils.getQWordReader(), \"byteCode\", Utils.getArrayReader(\"uint8\")];\n\n        this.TextEntryDataV25 = [\"text\", Utils.getString16Reader(), \"language\", \"uint8\"];\n\n        this.TextResourceDataV25 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"id\",\n          \"uint32\",\n          \"voiceId\",\n          \"uint32\",\n          \"textEntry\",\n          Utils.getArrayReader(this.TextEntryDataV25),\n        ];\n\n        this.ResourceDataV25 = [\n          \"crc\",\n          \"uint32\",\n          \"ambientLightResource\",\n          Utils.getArrayReader(this.AmbientLightDataV25),\n          \"fileNameRef\",\n          Utils.getArrayReader(this.FileNameRefDataV25),\n          \"script\",\n          Utils.getArrayReader(this.ScriptDataV25),\n          \"textResource\",\n          Utils.getArrayReader(this.TextResourceDataV25),\n        ];\n\n        this.__root = this.SceneDataV25 = [\n          \"startingSequence\",\n          Utils.getQWordReader(),\n          \"sequence\",\n          Utils.getArrayReader(this.SequenceDataV25),\n          \"resources\",\n          this.ResourceDataV25,\n          \"trackGroup\",\n          Utils.getPointerReader(this.TrackGroupDataV25),\n        ];\n      },\n\n      // => Version: 24, ReferencedFunction: 0xE37070\n      24: function () {\n        this.PropertyDataV24 = [\"value\", Utils.getQWordReader(), \"pathVal\", Utils.getFileNameReader(), \"type\", \"uint8\"];\n\n        this.CurveKeyDataV24 = [\"time\", \"float32\", \"value\", \"float32\", \"inTangent\", \"float32\", \"outTangent\", \"float32\"];\n\n        this.FlagKeyDataV24 = [\"time\", \"float32\", \"value\", \"float32\"];\n\n        this.TriggerKeyDataV24 = [\n          \"time\",\n          \"float32\",\n          \"flags1\",\n          \"uint8\",\n          \"flags2\",\n          \"uint8\",\n          \"flags3\",\n          \"uint8\",\n          \"flags4\",\n          \"uint8\",\n          \"token1\",\n          Utils.getQWordReader(),\n          \"token2\",\n          Utils.getQWordReader(),\n          \"value1\",\n          \"float32\",\n          \"value2\",\n          \"float32\",\n          \"value3\",\n          \"float32\",\n          \"value4\",\n          \"float32\",\n        ];\n\n        this.TrackDataV24 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"curveKey\",\n          Utils.getArrayReader(this.CurveKeyDataV24),\n          \"flagKey\",\n          Utils.getArrayReader(this.FlagKeyDataV24),\n          \"triggerKey\",\n          Utils.getArrayReader(this.TriggerKeyDataV24),\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.TrackGroupDataV24 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"prop\",\n          Utils.getArrayReader(this.PropertyDataV24),\n          \"track\",\n          Utils.getArrayReader(this.TrackDataV24),\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.SequenceDataV24 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"playScript\",\n          Utils.getQWordReader(),\n          \"updateScript\",\n          Utils.getQWordReader(),\n          \"environmentMap\",\n          Utils.getFileNameReader(),\n          \"map\",\n          Utils.getString16Reader(),\n          \"clientMap\",\n          Utils.getString16Reader(),\n          \"length\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"trackGroup\",\n          Utils.getArrayReader(this.TrackGroupDataV24),\n        ];\n\n        this.ColorDefDataV24 = [\"intensity\", \"float32\", \"color\", [\"[]\", \"uint8\", 3]];\n\n        this.AmbientLightDataV24 = [\n          \"ambientGroundColor\",\n          this.ColorDefDataV24,\n          \"ambientSkyColor\",\n          this.ColorDefDataV24,\n          \"fillColor\",\n          this.ColorDefDataV24,\n          \"hemisphericalColor\",\n          this.ColorDefDataV24,\n          \"name\",\n          Utils.getQWordReader(),\n        ];\n\n        this.FileNameRefDataV24 = [\"name\", Utils.getQWordReader(), \"fileName\", Utils.getFileNameReader()];\n\n        this.ScriptDataV24 = [\"name\", Utils.getQWordReader(), \"byteCode\", Utils.getArrayReader(\"uint8\")];\n\n        this.TextEntryDataV24 = [\"text\", Utils.getString16Reader(), \"language\", \"uint8\"];\n\n        this.TextResourceDataV24 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"id\",\n          \"uint32\",\n          \"voiceId\",\n          \"uint32\",\n          \"textEntry\",\n          Utils.getArrayReader(this.TextEntryDataV24),\n        ];\n\n        this.ResourceDataV24 = [\n          \"crc\",\n          \"uint32\",\n          \"ambientLightResource\",\n          Utils.getArrayReader(this.AmbientLightDataV24),\n          \"fileNameRef\",\n          Utils.getArrayReader(this.FileNameRefDataV24),\n          \"script\",\n          Utils.getArrayReader(this.ScriptDataV24),\n          \"textResource\",\n          Utils.getArrayReader(this.TextResourceDataV24),\n        ];\n\n        this.__root = this.SceneDataV24 = [\n          \"startingSequence\",\n          Utils.getQWordReader(),\n          \"sequence\",\n          Utils.getArrayReader(this.SequenceDataV24),\n          \"resources\",\n          this.ResourceDataV24,\n          \"trackGroup\",\n          Utils.getPointerReader(this.TrackGroupDataV24),\n        ];\n      },\n\n      // => Version: 23\n      23: function () {\n        this.PropertyDataV23 = [\"value\", Utils.getQWordReader(), \"pathVal\", Utils.getFileNameReader(), \"type\", \"uint8\"];\n\n        this.CurveKeyDataV23 = [\"time\", \"float32\", \"value\", \"float32\", \"inTangent\", \"float32\", \"outTangent\", \"float32\"];\n\n        this.FlagKeyDataV23 = [\"time\", \"float32\", \"value\", \"float32\"];\n\n        this.TriggerKeyDataV23 = [\n          \"time\",\n          \"float32\",\n          \"flags1\",\n          \"uint8\",\n          \"flags2\",\n          \"uint8\",\n          \"flags3\",\n          \"uint8\",\n          \"flags4\",\n          \"uint8\",\n          \"token1\",\n          Utils.getQWordReader(),\n          \"token2\",\n          Utils.getQWordReader(),\n          \"value1\",\n          \"float32\",\n          \"value2\",\n          \"float32\",\n          \"value3\",\n          \"float32\",\n          \"value4\",\n          \"float32\",\n        ];\n\n        this.TrackDataV23 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"curveKey\",\n          Utils.getArrayReader(this.CurveKeyDataV23),\n          \"flagKey\",\n          Utils.getArrayReader(this.FlagKeyDataV23),\n          \"triggerKey\",\n          Utils.getArrayReader(this.TriggerKeyDataV23),\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.TrackGroupDataV23 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"prop\",\n          Utils.getArrayReader(this.PropertyDataV23),\n          \"track\",\n          Utils.getArrayReader(this.TrackDataV23),\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.SequenceDataV23 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"updateScript\",\n          Utils.getQWordReader(),\n          \"environmentMap\",\n          Utils.getFileNameReader(),\n          \"map\",\n          Utils.getString16Reader(),\n          \"clientMap\",\n          Utils.getString16Reader(),\n          \"length\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"trackGroup\",\n          Utils.getArrayReader(this.TrackGroupDataV23),\n        ];\n\n        this.ColorDefDataV23 = [\"intensity\", \"float32\", \"color\", [\"[]\", \"uint8\", 3]];\n\n        this.AmbientLightDataV23 = [\n          \"ambientGroundColor\",\n          this.ColorDefDataV23,\n          \"ambientSkyColor\",\n          this.ColorDefDataV23,\n          \"fillColor\",\n          this.ColorDefDataV23,\n          \"hemisphericalColor\",\n          this.ColorDefDataV23,\n          \"name\",\n          Utils.getQWordReader(),\n        ];\n\n        this.FileNameRefDataV23 = [\"name\", Utils.getQWordReader(), \"fileName\", Utils.getFileNameReader()];\n\n        this.ScriptDataV23 = [\"name\", Utils.getQWordReader(), \"byteCode\", Utils.getArrayReader(\"uint8\")];\n\n        this.TextEntryDataV23 = [\"text\", Utils.getString16Reader(), \"language\", \"uint8\"];\n\n        this.TextResourceDataV23 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"id\",\n          \"uint32\",\n          \"voiceId\",\n          \"uint32\",\n          \"textEntry\",\n          Utils.getArrayReader(this.TextEntryDataV23),\n        ];\n\n        this.ResourceDataV23 = [\n          \"crc\",\n          \"uint32\",\n          \"ambientLightResource\",\n          Utils.getArrayReader(this.AmbientLightDataV23),\n          \"fileNameRef\",\n          Utils.getArrayReader(this.FileNameRefDataV23),\n          \"script\",\n          Utils.getArrayReader(this.ScriptDataV23),\n          \"textResource\",\n          Utils.getArrayReader(this.TextResourceDataV23),\n        ];\n\n        this.__root = this.SceneDataV23 = [\n          \"startingSequence\",\n          Utils.getQWordReader(),\n          \"sequence\",\n          Utils.getArrayReader(this.SequenceDataV23),\n          \"resources\",\n          this.ResourceDataV23,\n          \"trackGroup\",\n          Utils.getPointerReader(this.TrackGroupDataV23),\n        ];\n      },\n\n      // => Version: 22, ReferencedFunction: 0xE36FD0\n      22: function () {\n        this.PropertyDataV22 = [\"value\", Utils.getQWordReader(), \"pathVal\", Utils.getFileNameReader(), \"type\", \"uint8\"];\n\n        this.CurveKeyDataV22 = [\"time\", \"float32\", \"value\", \"float32\", \"inTangent\", \"float32\", \"outTangent\", \"float32\"];\n\n        this.FlagKeyDataV22 = [\"time\", \"float32\", \"value\", \"float32\"];\n\n        this.TriggerKeyDataV22 = [\n          \"time\",\n          \"float32\",\n          \"flags1\",\n          \"uint8\",\n          \"flags2\",\n          \"uint8\",\n          \"flags3\",\n          \"uint8\",\n          \"flags4\",\n          \"uint8\",\n          \"token1\",\n          Utils.getQWordReader(),\n          \"token2\",\n          Utils.getQWordReader(),\n          \"value1\",\n          \"float32\",\n          \"value2\",\n          \"float32\",\n          \"value3\",\n          \"float32\",\n          \"value4\",\n          \"float32\",\n        ];\n\n        this.TrackDataV22 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"curveKey\",\n          Utils.getArrayReader(this.CurveKeyDataV22),\n          \"flagKey\",\n          Utils.getArrayReader(this.FlagKeyDataV22),\n          \"triggerKey\",\n          Utils.getArrayReader(this.TriggerKeyDataV22),\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.TrackGroupDataV22 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"prop\",\n          Utils.getArrayReader(this.PropertyDataV22),\n          \"track\",\n          Utils.getArrayReader(this.TrackDataV22),\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.SequenceDataV22 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"environmentMap\",\n          Utils.getFileNameReader(),\n          \"map\",\n          Utils.getString16Reader(),\n          \"clientMap\",\n          Utils.getString16Reader(),\n          \"updateScript\",\n          Utils.getQWordReader(),\n          \"length\",\n          \"float32\",\n          \"trackGroup\",\n          Utils.getArrayReader(this.TrackGroupDataV22),\n        ];\n\n        this.ColorDefDataV22 = [\"intensity\", \"float32\", \"color\", [\"[]\", \"uint8\", 3]];\n\n        this.AmbientLightDataV22 = [\n          \"ambientGroundColor\",\n          this.ColorDefDataV22,\n          \"ambientSkyColor\",\n          this.ColorDefDataV22,\n          \"fillColor\",\n          this.ColorDefDataV22,\n          \"hemisphericalColor\",\n          this.ColorDefDataV22,\n          \"name\",\n          Utils.getQWordReader(),\n        ];\n\n        this.FileNameRefDataV22 = [\"name\", Utils.getQWordReader(), \"fileName\", Utils.getFileNameReader()];\n\n        this.ScriptDataV22 = [\"name\", Utils.getQWordReader(), \"byteCode\", Utils.getArrayReader(\"uint8\")];\n\n        this.TextEntryDataV22 = [\"text\", Utils.getString16Reader(), \"language\", \"uint8\"];\n\n        this.TextResourceDataV22 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"id\",\n          \"uint32\",\n          \"voiceId\",\n          \"uint32\",\n          \"textEntry\",\n          Utils.getArrayReader(this.TextEntryDataV22),\n        ];\n\n        this.ResourceDataV22 = [\n          \"crc\",\n          \"uint32\",\n          \"ambientLightResource\",\n          Utils.getArrayReader(this.AmbientLightDataV22),\n          \"fileNameRef\",\n          Utils.getArrayReader(this.FileNameRefDataV22),\n          \"script\",\n          Utils.getArrayReader(this.ScriptDataV22),\n          \"textResource\",\n          Utils.getArrayReader(this.TextResourceDataV22),\n        ];\n\n        this.__root = this.SceneDataV22 = [\n          \"startingSequence\",\n          Utils.getQWordReader(),\n          \"sequence\",\n          Utils.getArrayReader(this.SequenceDataV22),\n          \"resources\",\n          this.ResourceDataV22,\n          \"trackGroup\",\n          Utils.getPointerReader(this.TrackGroupDataV22),\n        ];\n      },\n\n      // => Version: 21\n      21: function () {\n        this.PropertyDataV21 = [\"value\", Utils.getQWordReader(), \"pathVal\", Utils.getFileNameReader(), \"type\", \"uint8\"];\n\n        this.CurveKeyDataV21 = [\"time\", \"float32\", \"value\", \"float32\", \"inTangent\", \"float32\", \"outTangent\", \"float32\"];\n\n        this.FlagKeyDataV21 = [\"time\", \"float32\", \"value\", \"float32\"];\n\n        this.TriggerKeyDataV21 = [\n          \"time\",\n          \"float32\",\n          \"flags1\",\n          \"uint8\",\n          \"flags2\",\n          \"uint8\",\n          \"flags3\",\n          \"uint8\",\n          \"flags4\",\n          \"uint8\",\n          \"token1\",\n          Utils.getQWordReader(),\n          \"token2\",\n          Utils.getQWordReader(),\n          \"value1\",\n          \"float32\",\n          \"value2\",\n          \"float32\",\n          \"value3\",\n          \"float32\",\n          \"value4\",\n          \"float32\",\n        ];\n\n        this.TrackDataV21 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"curveKey\",\n          Utils.getArrayReader(this.CurveKeyDataV21),\n          \"flagKey\",\n          Utils.getArrayReader(this.FlagKeyDataV21),\n          \"triggerKey\",\n          Utils.getArrayReader(this.TriggerKeyDataV21),\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.TrackGroupDataV21 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"prop\",\n          Utils.getArrayReader(this.PropertyDataV21),\n          \"track\",\n          Utils.getArrayReader(this.TrackDataV21),\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.SequenceDataV21 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"environmentMap\",\n          Utils.getFileNameReader(),\n          \"map\",\n          Utils.getString16Reader(),\n          \"clientMap\",\n          Utils.getString16Reader(),\n          \"updateScript\",\n          Utils.getQWordReader(),\n          \"length\",\n          \"float32\",\n          \"trackGroup\",\n          Utils.getArrayReader(this.TrackGroupDataV21),\n        ];\n\n        this.ColorDefDataV21 = [\"intensity\", \"float32\", \"color\", [\"[]\", \"uint8\", 3]];\n\n        this.AmbientLightDataV21 = [\n          \"ambientGroundColor\",\n          this.ColorDefDataV21,\n          \"ambientSkyColor\",\n          this.ColorDefDataV21,\n          \"fillColor\",\n          this.ColorDefDataV21,\n          \"hemisphericalColor\",\n          this.ColorDefDataV21,\n          \"name\",\n          Utils.getQWordReader(),\n        ];\n\n        this.FileNameRefDataV21 = [\"name\", Utils.getQWordReader(), \"fileName\", Utils.getFileNameReader()];\n\n        this.ScriptDataV21 = [\"name\", Utils.getQWordReader(), \"byteCode\", Utils.getArrayReader(\"uint8\")];\n\n        this.TextEntryDataV21 = [\"text\", Utils.getString16Reader(), \"language\", \"uint8\"];\n\n        this.TextResourceDataV21 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"id\",\n          \"uint32\",\n          \"voiceId\",\n          \"uint32\",\n          \"textEntry\",\n          Utils.getArrayReader(this.TextEntryDataV21),\n        ];\n\n        this.ResourceDataV21 = [\n          \"crc\",\n          \"uint32\",\n          \"ambientLightResource\",\n          Utils.getArrayReader(this.AmbientLightDataV21),\n          \"fileNameRef\",\n          Utils.getArrayReader(this.FileNameRefDataV21),\n          \"script\",\n          Utils.getArrayReader(this.ScriptDataV21),\n          \"textResource\",\n          Utils.getArrayReader(this.TextResourceDataV21),\n        ];\n\n        this.__root = this.SceneDataV21 = [\n          \"startingSequence\",\n          Utils.getQWordReader(),\n          \"sequence\",\n          Utils.getArrayReader(this.SequenceDataV21),\n          \"resources\",\n          this.ResourceDataV21,\n          \"trackGroup\",\n          Utils.getPointerReader(this.TrackGroupDataV21),\n        ];\n      },\n\n      // => Version: 20, ReferencedFunction: 0xE36F30\n      20: function () {\n        this.PropertyDataV20 = [\"value\", Utils.getQWordReader(), \"pathVal\", Utils.getFileNameReader(), \"type\", \"uint8\"];\n\n        this.CurveKeyDataV20 = [\"time\", \"float32\", \"value\", \"float32\", \"inTangent\", \"float32\", \"outTangent\", \"float32\"];\n\n        this.FlagKeyDataV20 = [\"time\", \"float32\", \"value\", \"float32\"];\n\n        this.TriggerKeyDataV20 = [\n          \"time\",\n          \"float32\",\n          \"flags1\",\n          \"uint8\",\n          \"flags2\",\n          \"uint8\",\n          \"flags3\",\n          \"uint8\",\n          \"flags4\",\n          \"uint8\",\n          \"token1\",\n          Utils.getQWordReader(),\n          \"token2\",\n          Utils.getQWordReader(),\n          \"value1\",\n          \"float32\",\n          \"value2\",\n          \"float32\",\n          \"value3\",\n          \"float32\",\n          \"value4\",\n          \"float32\",\n        ];\n\n        this.TrackDataV20 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"curveKey\",\n          Utils.getArrayReader(this.CurveKeyDataV20),\n          \"flagKey\",\n          Utils.getArrayReader(this.FlagKeyDataV20),\n          \"triggerKey\",\n          Utils.getArrayReader(this.TriggerKeyDataV20),\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.TrackGroupDataV20 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"prop\",\n          Utils.getArrayReader(this.PropertyDataV20),\n          \"track\",\n          Utils.getArrayReader(this.TrackDataV20),\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.SequenceDataV20 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"environmentMap\",\n          Utils.getFileNameReader(),\n          \"map\",\n          Utils.getString16Reader(),\n          \"clientMap\",\n          Utils.getString16Reader(),\n          \"updateScript\",\n          Utils.getQWordReader(),\n          \"length\",\n          \"float32\",\n          \"trackGroup\",\n          Utils.getArrayReader(this.TrackGroupDataV20),\n        ];\n\n        this.ColorDefDataV20 = [\"intensity\", \"float32\", \"color\", [\"[]\", \"uint8\", 3]];\n\n        this.AmbientLightDataV20 = [\n          \"ambientGroundColor\",\n          this.ColorDefDataV20,\n          \"ambientSkyColor\",\n          this.ColorDefDataV20,\n          \"fillColor\",\n          this.ColorDefDataV20,\n          \"hemisphericalColor\",\n          this.ColorDefDataV20,\n          \"name\",\n          Utils.getQWordReader(),\n        ];\n\n        this.FileNameRefDataV20 = [\"name\", Utils.getQWordReader(), \"fileName\", Utils.getFileNameReader()];\n\n        this.ScriptDataV20 = [\"name\", Utils.getQWordReader(), \"byteCode\", Utils.getArrayReader(\"uint8\")];\n\n        this.TextEntryDataV20 = [\"text\", Utils.getString16Reader(), \"language\", \"uint8\"];\n\n        this.TextResourceDataV20 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"id\",\n          \"uint32\",\n          \"voiceId\",\n          \"uint32\",\n          \"textEntry\",\n          Utils.getArrayReader(this.TextEntryDataV20),\n        ];\n\n        this.ResourceDataV20 = [\n          \"crc\",\n          \"uint32\",\n          \"ambientLightResource\",\n          Utils.getArrayReader(this.AmbientLightDataV20),\n          \"fileNameRef\",\n          Utils.getArrayReader(this.FileNameRefDataV20),\n          \"script\",\n          Utils.getArrayReader(this.ScriptDataV20),\n          \"textResource\",\n          Utils.getArrayReader(this.TextResourceDataV20),\n        ];\n\n        this.__root = this.SceneDataV20 = [\n          \"startingSequence\",\n          Utils.getQWordReader(),\n          \"sequence\",\n          Utils.getArrayReader(this.SequenceDataV20),\n          \"resources\",\n          this.ResourceDataV20,\n        ];\n      },\n\n      // => Version: 19, ReferencedFunction: 0xE36E90\n      19: function () {\n        this.PropertyDataV19 = [\"value\", Utils.getQWordReader(), \"pathVal\", Utils.getFileNameReader(), \"type\", \"uint8\"];\n\n        this.CurveKeyDataV19 = [\"time\", \"float32\", \"value\", \"float32\", \"inTangent\", \"float32\", \"outTangent\", \"float32\"];\n\n        this.FlagKeyDataV19 = [\"time\", \"float32\", \"value\", \"float32\"];\n\n        this.TriggerKeyDataV19 = [\n          \"time\",\n          \"float32\",\n          \"flags1\",\n          \"uint8\",\n          \"flags2\",\n          \"uint8\",\n          \"flags3\",\n          \"uint8\",\n          \"flags4\",\n          \"uint8\",\n          \"token1\",\n          Utils.getQWordReader(),\n          \"token2\",\n          Utils.getQWordReader(),\n          \"value1\",\n          \"float32\",\n          \"value2\",\n          \"float32\",\n          \"value3\",\n          \"float32\",\n          \"value4\",\n          \"float32\",\n        ];\n\n        this.TrackDataV19 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"curveKey\",\n          Utils.getArrayReader(this.CurveKeyDataV19),\n          \"flagKey\",\n          Utils.getArrayReader(this.FlagKeyDataV19),\n          \"triggerKey\",\n          Utils.getArrayReader(this.TriggerKeyDataV19),\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.TrackGroupDataV19 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"prop\",\n          Utils.getArrayReader(this.PropertyDataV19),\n          \"track\",\n          Utils.getArrayReader(this.TrackDataV19),\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.SequenceDataV19 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"environmentMap\",\n          Utils.getFileNameReader(),\n          \"map\",\n          Utils.getString16Reader(),\n          \"clientMap\",\n          Utils.getString16Reader(),\n          \"updateScript\",\n          Utils.getQWordReader(),\n          \"length\",\n          \"float32\",\n          \"trackGroup\",\n          Utils.getArrayReader(this.TrackGroupDataV19),\n        ];\n\n        this.ColorDefDataV19 = [\"intensity\", \"float32\", \"color\", [\"[]\", \"uint8\", 3]];\n\n        this.AmbientLightDataV19 = [\n          \"ambientGroundColor\",\n          this.ColorDefDataV19,\n          \"ambientSkyColor\",\n          this.ColorDefDataV19,\n          \"fillColor\",\n          this.ColorDefDataV19,\n          \"hemisphericalColor\",\n          this.ColorDefDataV19,\n          \"name\",\n          Utils.getQWordReader(),\n        ];\n\n        this.FileNameRefDataV19 = [\"name\", Utils.getQWordReader(), \"fileName\", Utils.getFileNameReader()];\n\n        this.ScriptDataV19 = [\"name\", Utils.getQWordReader(), \"byteCode\", Utils.getArrayReader(\"uint8\")];\n\n        this.TextEntryDataV19 = [\"text\", Utils.getString16Reader(), \"language\", \"uint8\"];\n\n        this.TextResourceDataV19 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"id\",\n          \"uint32\",\n          \"voiceId\",\n          \"uint32\",\n          \"textEntry\",\n          Utils.getArrayReader(this.TextEntryDataV19),\n        ];\n\n        this.ResourceDataV19 = [\n          \"crc\",\n          \"uint32\",\n          \"ambientLightResource\",\n          Utils.getArrayReader(this.AmbientLightDataV19),\n          \"fileNameRef\",\n          Utils.getArrayReader(this.FileNameRefDataV19),\n          \"script\",\n          Utils.getArrayReader(this.ScriptDataV19),\n          \"textResource\",\n          Utils.getArrayReader(this.TextResourceDataV19),\n        ];\n\n        this.__root = this.SceneDataV19 = [\n          \"startingSequence\",\n          Utils.getQWordReader(),\n          \"sequence\",\n          Utils.getArrayReader(this.SequenceDataV19),\n          \"resources\",\n          this.ResourceDataV19,\n        ];\n      },\n\n      // => Version: 18, ReferencedFunction: 0xE36E90\n      18: function () {\n        this.PropertyDataV18 = [\"value\", Utils.getQWordReader(), \"pathVal\", Utils.getFileNameReader(), \"type\", \"uint8\"];\n\n        this.CurveKeyDataV18 = [\"time\", \"float32\", \"value\", \"float32\", \"inTangent\", \"float32\", \"outTangent\", \"float32\"];\n\n        this.FlagKeyDataV18 = [\"time\", \"float32\", \"value\", \"float32\"];\n\n        this.TriggerKeyDataV18 = [\n          \"time\",\n          \"float32\",\n          \"flags1\",\n          \"uint8\",\n          \"flags2\",\n          \"uint8\",\n          \"flags3\",\n          \"uint8\",\n          \"flags4\",\n          \"uint8\",\n          \"token1\",\n          Utils.getQWordReader(),\n          \"token2\",\n          Utils.getQWordReader(),\n          \"value1\",\n          \"float32\",\n          \"value2\",\n          \"float32\",\n          \"value3\",\n          \"float32\",\n          \"value4\",\n          \"float32\",\n        ];\n\n        this.TrackDataV18 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"curveKey\",\n          Utils.getArrayReader(this.CurveKeyDataV18),\n          \"flagKey\",\n          Utils.getArrayReader(this.FlagKeyDataV18),\n          \"triggerKey\",\n          Utils.getArrayReader(this.TriggerKeyDataV18),\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.TrackGroupDataV18 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"prop\",\n          Utils.getArrayReader(this.PropertyDataV18),\n          \"track\",\n          Utils.getArrayReader(this.TrackDataV18),\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.SequenceDataV18 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"environmentMap\",\n          Utils.getFileNameReader(),\n          \"map\",\n          Utils.getString16Reader(),\n          \"clientMap\",\n          Utils.getString16Reader(),\n          \"updateScript\",\n          Utils.getQWordReader(),\n          \"length\",\n          \"float32\",\n          \"trackGroup\",\n          Utils.getArrayReader(this.TrackGroupDataV18),\n        ];\n\n        this.ColorDefDataV18 = [\"intensity\", \"float32\", \"color\", [\"[]\", \"uint8\", 3]];\n\n        this.AmbientLightDataV18 = [\n          \"ambientGroundColor\",\n          this.ColorDefDataV18,\n          \"ambientSkyColor\",\n          this.ColorDefDataV18,\n          \"fillColor\",\n          this.ColorDefDataV18,\n          \"hemisphericalColor\",\n          this.ColorDefDataV18,\n          \"name\",\n          Utils.getQWordReader(),\n        ];\n\n        this.FileNameRefDataV18 = [\"name\", Utils.getQWordReader(), \"fileName\", Utils.getFileNameReader()];\n\n        this.ScriptDataV18 = [\"name\", Utils.getQWordReader(), \"byteCode\", Utils.getArrayReader(\"uint8\")];\n\n        this.TextEntryDataV18 = [\"text\", Utils.getString16Reader(), \"language\", \"uint8\"];\n\n        this.TextResourceDataV18 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"id\",\n          \"uint32\",\n          \"voiceId\",\n          \"uint32\",\n          \"textEntry\",\n          Utils.getArrayReader(this.TextEntryDataV18),\n        ];\n\n        this.ResourceDataV18 = [\n          \"crc\",\n          \"uint32\",\n          \"ambientLightResource\",\n          Utils.getArrayReader(this.AmbientLightDataV18),\n          \"fileNameRef\",\n          Utils.getArrayReader(this.FileNameRefDataV18),\n          \"script\",\n          Utils.getArrayReader(this.ScriptDataV18),\n          \"textResource\",\n          Utils.getArrayReader(this.TextResourceDataV18),\n        ];\n\n        this.__root = this.SceneDataV18 = [\n          \"startingSequence\",\n          Utils.getQWordReader(),\n          \"sequence\",\n          Utils.getArrayReader(this.SequenceDataV18),\n          \"resources\",\n          this.ResourceDataV18,\n        ];\n      },\n\n      // => Version: 17, ReferencedFunction: 0xE36DF0\n      17: function () {\n        this.PropertyDataV17 = [\"value\", Utils.getQWordReader(), \"pathVal\", Utils.getFileNameReader(), \"type\", \"uint8\"];\n\n        this.CurveKeyDataV17 = [\"time\", \"float32\", \"value\", \"float32\", \"inTangent\", \"float32\", \"outTangent\", \"float32\"];\n\n        this.FlagKeyDataV17 = [\"time\", \"float32\", \"value\", \"float32\"];\n\n        this.TriggerKeyDataV17 = [\n          \"time\",\n          \"float32\",\n          \"flags1\",\n          \"uint8\",\n          \"flags2\",\n          \"uint8\",\n          \"flags3\",\n          \"uint8\",\n          \"flags4\",\n          \"uint8\",\n          \"token1\",\n          Utils.getQWordReader(),\n          \"token2\",\n          Utils.getQWordReader(),\n          \"value1\",\n          \"float32\",\n          \"value2\",\n          \"float32\",\n          \"value3\",\n          \"float32\",\n          \"value4\",\n          \"float32\",\n        ];\n\n        this.TrackDataV17 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"curveKey\",\n          Utils.getArrayReader(this.CurveKeyDataV17),\n          \"flagKey\",\n          Utils.getArrayReader(this.FlagKeyDataV17),\n          \"triggerKey\",\n          Utils.getArrayReader(this.TriggerKeyDataV17),\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.TrackGroupDataV17 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"prop\",\n          Utils.getArrayReader(this.PropertyDataV17),\n          \"track\",\n          Utils.getArrayReader(this.TrackDataV17),\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.SequenceDataV17 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"environmentMap\",\n          Utils.getFileNameReader(),\n          \"map\",\n          Utils.getString16Reader(),\n          \"clientMap\",\n          Utils.getString16Reader(),\n          \"updateScript\",\n          Utils.getQWordReader(),\n          \"length\",\n          \"float32\",\n          \"trackGroup\",\n          Utils.getArrayReader(this.TrackGroupDataV17),\n        ];\n\n        this.ColorDefDataV17 = [\"intensity\", \"float32\", \"color\", [\"[]\", \"uint8\", 3]];\n\n        this.AmbientLightDataV17 = [\n          \"ambientGroundColor\",\n          this.ColorDefDataV17,\n          \"ambientSkyColor\",\n          this.ColorDefDataV17,\n          \"fillColor\",\n          this.ColorDefDataV17,\n          \"hemisphericalColor\",\n          this.ColorDefDataV17,\n          \"name\",\n          Utils.getQWordReader(),\n        ];\n\n        this.FileNameRefDataV17 = [\"name\", Utils.getQWordReader(), \"fileName\", Utils.getFileNameReader()];\n\n        this.ScriptDataV17 = [\"name\", Utils.getQWordReader(), \"byteCode\", Utils.getArrayReader(\"uint8\")];\n\n        this.TextEntryDataV17 = [\"text\", Utils.getString16Reader(), \"language\", \"uint8\"];\n\n        this.TextResourceDataV17 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"id\",\n          \"uint32\",\n          \"voiceId\",\n          \"uint32\",\n          \"textEntry\",\n          Utils.getArrayReader(this.TextEntryDataV17),\n        ];\n\n        this.ResourceDataV17 = [\n          \"crc\",\n          \"uint32\",\n          \"ambientLightResource\",\n          Utils.getArrayReader(this.AmbientLightDataV17),\n          \"fileNameRef\",\n          Utils.getArrayReader(this.FileNameRefDataV17),\n          \"script\",\n          Utils.getArrayReader(this.ScriptDataV17),\n          \"textResource\",\n          Utils.getArrayReader(this.TextResourceDataV17),\n        ];\n\n        this.__root = this.SceneDataV17 = [\n          \"startingSequence\",\n          Utils.getQWordReader(),\n          \"sequence\",\n          Utils.getArrayReader(this.SequenceDataV17),\n          \"resources\",\n          this.ResourceDataV17,\n        ];\n      },\n\n      // => Version: 16, ReferencedFunction: 0xE36D50\n      16: function () {\n        this.PropertyDataV16 = [\"value\", Utils.getQWordReader(), \"pathVal\", Utils.getFileNameReader(), \"type\", \"uint8\"];\n\n        this.CurveKeyDataV16 = [\"time\", \"float32\", \"value\", \"float32\", \"inTangent\", \"float32\", \"outTangent\", \"float32\"];\n\n        this.FlagKeyDataV16 = [\"time\", \"float32\", \"value\", \"float32\"];\n\n        this.TriggerKeyDataV16 = [\n          \"time\",\n          \"float32\",\n          \"flags1\",\n          \"uint8\",\n          \"flags2\",\n          \"uint8\",\n          \"flags3\",\n          \"uint8\",\n          \"flags4\",\n          \"uint8\",\n          \"token1\",\n          Utils.getQWordReader(),\n          \"token2\",\n          Utils.getQWordReader(),\n          \"value1\",\n          \"float32\",\n          \"value2\",\n          \"float32\",\n          \"value3\",\n          \"float32\",\n          \"value4\",\n          \"float32\",\n        ];\n\n        this.TrackDataV16 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"curveKey\",\n          Utils.getArrayReader(this.CurveKeyDataV16),\n          \"flagKey\",\n          Utils.getArrayReader(this.FlagKeyDataV16),\n          \"triggerKey\",\n          Utils.getArrayReader(this.TriggerKeyDataV16),\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.TrackGroupDataV16 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"prop\",\n          Utils.getArrayReader(this.PropertyDataV16),\n          \"track\",\n          Utils.getArrayReader(this.TrackDataV16),\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.SequenceDataV16 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"environmentMap\",\n          Utils.getFileNameReader(),\n          \"map\",\n          Utils.getString16Reader(),\n          \"clientMap\",\n          Utils.getString16Reader(),\n          \"updateScript\",\n          Utils.getQWordReader(),\n          \"length\",\n          \"float32\",\n          \"trackGroup\",\n          Utils.getArrayReader(this.TrackGroupDataV16),\n        ];\n\n        this.ColorDefDataV16 = [\"intensity\", \"float32\", \"color\", [\"[]\", \"uint8\", 3]];\n\n        this.AmbientLightDataV16 = [\n          \"ambientGroundColor\",\n          this.ColorDefDataV16,\n          \"ambientSkyColor\",\n          this.ColorDefDataV16,\n          \"fillColor\",\n          this.ColorDefDataV16,\n          \"hemisphericalColor\",\n          this.ColorDefDataV16,\n          \"name\",\n          Utils.getQWordReader(),\n        ];\n\n        this.FileNameRefDataV16 = [\"name\", Utils.getQWordReader(), \"fileName\", Utils.getFileNameReader()];\n\n        this.ScriptDataV16 = [\"name\", Utils.getQWordReader(), \"byteCode\", Utils.getArrayReader(\"uint8\")];\n\n        this.TextEntryDataV16 = [\"text\", Utils.getString16Reader(), \"language\", \"uint8\"];\n\n        this.TextResourceDataV16 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"id\",\n          \"uint32\",\n          \"voiceId\",\n          \"uint32\",\n          \"textEntry\",\n          Utils.getArrayReader(this.TextEntryDataV16),\n        ];\n\n        this.ResourceDataV16 = [\n          \"crc\",\n          \"uint32\",\n          \"ambientLightResource\",\n          Utils.getArrayReader(this.AmbientLightDataV16),\n          \"fileNameRef\",\n          Utils.getArrayReader(this.FileNameRefDataV16),\n          \"script\",\n          Utils.getArrayReader(this.ScriptDataV16),\n          \"textResource\",\n          Utils.getArrayReader(this.TextResourceDataV16),\n        ];\n\n        this.__root = this.SceneDataV16 = [\n          \"startingSequence\",\n          Utils.getQWordReader(),\n          \"sequence\",\n          Utils.getArrayReader(this.SequenceDataV16),\n          \"resources\",\n          this.ResourceDataV16,\n        ];\n      },\n\n      // => Version: 15\n      15: function () {\n        this.PropertyDataV15 = [\"value\", Utils.getQWordReader(), \"pathVal\", Utils.getFileNameReader(), \"type\", \"uint8\"];\n\n        this.CurveKeyDataV15 = [\"time\", \"float32\", \"value\", \"float32\", \"inTangent\", \"float32\", \"outTangent\", \"float32\"];\n\n        this.FlagKeyDataV15 = [\"time\", \"float32\", \"value\", \"float32\"];\n\n        this.TriggerKeyDataV15 = [\n          \"time\",\n          \"float32\",\n          \"flags1\",\n          \"uint8\",\n          \"flags2\",\n          \"uint8\",\n          \"flags3\",\n          \"uint8\",\n          \"flags4\",\n          \"uint8\",\n          \"token1\",\n          Utils.getQWordReader(),\n          \"token2\",\n          Utils.getQWordReader(),\n          \"value1\",\n          \"float32\",\n          \"value2\",\n          \"float32\",\n          \"value3\",\n          \"float32\",\n          \"value4\",\n          \"float32\",\n        ];\n\n        this.TrackDataV15 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"curveKey\",\n          Utils.getArrayReader(this.CurveKeyDataV15),\n          \"flagKey\",\n          Utils.getArrayReader(this.FlagKeyDataV15),\n          \"triggerKey\",\n          Utils.getArrayReader(this.TriggerKeyDataV15),\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.TrackGroupDataV15 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"prop\",\n          Utils.getArrayReader(this.PropertyDataV15),\n          \"track\",\n          Utils.getArrayReader(this.TrackDataV15),\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.SequenceDataV15 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"environmentMap\",\n          Utils.getFileNameReader(),\n          \"map\",\n          Utils.getString16Reader(),\n          \"clientMap\",\n          Utils.getString16Reader(),\n          \"updateScript\",\n          Utils.getQWordReader(),\n          \"length\",\n          \"float32\",\n          \"trackGroup\",\n          Utils.getArrayReader(this.TrackGroupDataV15),\n        ];\n\n        this.ColorDefDataV15 = [\"intensity\", \"float32\", \"color\", [\"[]\", \"uint8\", 3]];\n\n        this.AmbientLightDataV15 = [\n          \"ambientGroundColor\",\n          this.ColorDefDataV15,\n          \"ambientSkyColor\",\n          this.ColorDefDataV15,\n          \"fillColor\",\n          this.ColorDefDataV15,\n          \"hemisphericalColor\",\n          this.ColorDefDataV15,\n          \"name\",\n          Utils.getQWordReader(),\n        ];\n\n        this.FileNameRefDataV15 = [\"name\", Utils.getQWordReader(), \"fileName\", Utils.getFileNameReader()];\n\n        this.ScriptDataV15 = [\"name\", Utils.getQWordReader(), \"byteCode\", Utils.getArrayReader(\"uint8\")];\n\n        this.TextEntryDataV15 = [\"text\", Utils.getString16Reader(), \"language\", \"uint8\"];\n\n        this.TextResourceDataV15 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"id\",\n          \"uint32\",\n          \"voiceId\",\n          \"uint32\",\n          \"textEntry\",\n          Utils.getArrayReader(this.TextEntryDataV15),\n        ];\n\n        this.ResourceDataV15 = [\n          \"crc\",\n          \"uint32\",\n          \"ambientLightResource\",\n          Utils.getArrayReader(this.AmbientLightDataV15),\n          \"fileNameRef\",\n          Utils.getArrayReader(this.FileNameRefDataV15),\n          \"script\",\n          Utils.getArrayReader(this.ScriptDataV15),\n          \"textResource\",\n          Utils.getArrayReader(this.TextResourceDataV15),\n        ];\n\n        this.__root = this.SceneDataV15 = [\n          \"startingSequence\",\n          Utils.getQWordReader(),\n          \"sequence\",\n          Utils.getArrayReader(this.SequenceDataV15),\n          \"resources\",\n          this.ResourceDataV15,\n        ];\n      },\n\n      // => Version: 14\n      14: function () {\n        this.PropertyDataV14 = [\"value\", Utils.getQWordReader(), \"pathVal\", Utils.getFileNameReader(), \"type\", \"uint8\"];\n\n        this.CurveKeyDataV14 = [\"time\", \"float32\", \"value\", \"float32\", \"inTangent\", \"float32\", \"outTangent\", \"float32\"];\n\n        this.FlagKeyDataV14 = [\"time\", \"float32\", \"value\", \"float32\"];\n\n        this.TriggerKeyDataV14 = [\n          \"time\",\n          \"float32\",\n          \"flags1\",\n          \"uint8\",\n          \"flags2\",\n          \"uint8\",\n          \"flags3\",\n          \"uint8\",\n          \"flags4\",\n          \"uint8\",\n          \"token1\",\n          Utils.getQWordReader(),\n          \"token2\",\n          Utils.getQWordReader(),\n          \"value1\",\n          \"float32\",\n          \"value2\",\n          \"float32\",\n          \"value3\",\n          \"float32\",\n          \"value4\",\n          \"float32\",\n        ];\n\n        this.TrackDataV14 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"curveKey\",\n          Utils.getArrayReader(this.CurveKeyDataV14),\n          \"flagKey\",\n          Utils.getArrayReader(this.FlagKeyDataV14),\n          \"triggerKey\",\n          Utils.getArrayReader(this.TriggerKeyDataV14),\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.TrackGroupDataV14 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"prop\",\n          Utils.getArrayReader(this.PropertyDataV14),\n          \"track\",\n          Utils.getArrayReader(this.TrackDataV14),\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.SequenceDataV14 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"environmentMap\",\n          Utils.getFileNameReader(),\n          \"map\",\n          Utils.getString16Reader(),\n          \"clientMap\",\n          Utils.getString16Reader(),\n          \"length\",\n          \"float32\",\n          \"trackGroup\",\n          Utils.getArrayReader(this.TrackGroupDataV14),\n        ];\n\n        this.ColorDefDataV14 = [\"intensity\", \"float32\", \"color\", [\"[]\", \"uint8\", 3]];\n\n        this.AmbientLightDataV14 = [\n          \"ambientGroundColor\",\n          this.ColorDefDataV14,\n          \"ambientSkyColor\",\n          this.ColorDefDataV14,\n          \"fillColor\",\n          this.ColorDefDataV14,\n          \"hemisphericalColor\",\n          this.ColorDefDataV14,\n          \"name\",\n          Utils.getQWordReader(),\n        ];\n\n        this.FileNameRefDataV14 = [\"name\", Utils.getQWordReader(), \"fileName\", Utils.getFileNameReader()];\n\n        this.ScriptDataV14 = [\"name\", Utils.getQWordReader(), \"byteCode\", Utils.getArrayReader(\"uint8\")];\n\n        this.TextEntryDataV14 = [\"text\", Utils.getString16Reader(), \"language\", \"uint8\"];\n\n        this.TextResourceDataV14 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"id\",\n          \"uint32\",\n          \"voiceId\",\n          \"uint32\",\n          \"textEntry\",\n          Utils.getArrayReader(this.TextEntryDataV14),\n        ];\n\n        this.ResourceDataV14 = [\n          \"crc\",\n          \"uint32\",\n          \"ambientLightResource\",\n          Utils.getArrayReader(this.AmbientLightDataV14),\n          \"fileNameRef\",\n          Utils.getArrayReader(this.FileNameRefDataV14),\n          \"script\",\n          Utils.getArrayReader(this.ScriptDataV14),\n          \"textResource\",\n          Utils.getArrayReader(this.TextResourceDataV14),\n        ];\n\n        this.__root = this.SceneDataV14 = [\n          \"startingSequence\",\n          Utils.getQWordReader(),\n          \"sequence\",\n          Utils.getArrayReader(this.SequenceDataV14),\n          \"resources\",\n          this.ResourceDataV14,\n        ];\n      },\n\n      // => Version: 13, ReferencedFunction: 0xE36CD0\n      13: function () {\n        this.PropertyDataV13 = [\"value\", Utils.getQWordReader(), \"pathVal\", Utils.getFileNameReader(), \"type\", \"uint8\"];\n\n        this.CurveKeyDataV13 = [\"time\", \"float32\", \"value\", \"float32\", \"inTangent\", \"float32\", \"outTangent\", \"float32\"];\n\n        this.FlagKeyDataV13 = [\"time\", \"float32\", \"value\", \"float32\"];\n\n        this.TriggerKeyDataV13 = [\n          \"time\",\n          \"float32\",\n          \"flags1\",\n          \"uint8\",\n          \"flags2\",\n          \"uint8\",\n          \"flags3\",\n          \"uint8\",\n          \"flags4\",\n          \"uint8\",\n          \"token1\",\n          Utils.getQWordReader(),\n          \"token2\",\n          Utils.getQWordReader(),\n          \"value1\",\n          \"float32\",\n          \"value2\",\n          \"float32\",\n          \"value3\",\n          \"float32\",\n          \"value4\",\n          \"float32\",\n        ];\n\n        this.TrackDataV13 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"curveKey\",\n          Utils.getArrayReader(this.CurveKeyDataV13),\n          \"flagKey\",\n          Utils.getArrayReader(this.FlagKeyDataV13),\n          \"triggerKey\",\n          Utils.getArrayReader(this.TriggerKeyDataV13),\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.TrackGroupDataV13 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"prop\",\n          Utils.getArrayReader(this.PropertyDataV13),\n          \"track\",\n          Utils.getArrayReader(this.TrackDataV13),\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.SequenceDataV13 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"environmentMap\",\n          Utils.getFileNameReader(),\n          \"map\",\n          Utils.getString16Reader(),\n          \"clientMap\",\n          Utils.getString16Reader(),\n          \"length\",\n          \"float32\",\n          \"trackGroup\",\n          Utils.getArrayReader(this.TrackGroupDataV13),\n        ];\n\n        this.ColorDefDataV13 = [\"intensity\", \"float32\", \"color\", [\"[]\", \"uint8\", 3]];\n\n        this.AmbientLightDataV13 = [\n          \"ambientGroundColor\",\n          this.ColorDefDataV13,\n          \"ambientSkyColor\",\n          this.ColorDefDataV13,\n          \"fillColor\",\n          this.ColorDefDataV13,\n          \"hemisphericalColor\",\n          this.ColorDefDataV13,\n          \"name\",\n          Utils.getQWordReader(),\n        ];\n\n        this.FileNameRefDataV13 = [\"name\", Utils.getQWordReader(), \"fileName\", Utils.getFileNameReader()];\n\n        this.ScriptDataV13 = [\"name\", Utils.getQWordReader(), \"byteCode\", Utils.getArrayReader(\"uint8\")];\n\n        this.TextEntryDataV13 = [\"text\", Utils.getString16Reader(), \"language\", \"uint8\"];\n\n        this.TextResourceDataV13 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"id\",\n          \"uint32\",\n          \"textEntry\",\n          Utils.getArrayReader(this.TextEntryDataV13),\n        ];\n\n        this.ResourceDataV13 = [\n          \"crc\",\n          \"uint32\",\n          \"ambientLightResource\",\n          Utils.getArrayReader(this.AmbientLightDataV13),\n          \"fileNameRef\",\n          Utils.getArrayReader(this.FileNameRefDataV13),\n          \"script\",\n          Utils.getArrayReader(this.ScriptDataV13),\n          \"textResource\",\n          Utils.getArrayReader(this.TextResourceDataV13),\n        ];\n\n        this.__root = this.SceneDataV13 = [\n          \"startingSequence\",\n          Utils.getQWordReader(),\n          \"sequence\",\n          Utils.getArrayReader(this.SequenceDataV13),\n          \"resources\",\n          this.ResourceDataV13,\n        ];\n      },\n\n      // => Version: 12, ReferencedFunction: 0xE36BE0\n      12: function () {\n        this.PropertyDataV12 = [\"value\", Utils.getQWordReader(), \"pathVal\", Utils.getFileNameReader(), \"type\", \"uint8\"];\n\n        this.CurveKeyDataV12 = [\"time\", \"float32\", \"value\", \"float32\", \"inTangent\", \"float32\", \"outTangent\", \"float32\"];\n\n        this.FlagKeyDataV12 = [\"time\", \"float32\", \"value\", \"float32\"];\n\n        this.TriggerKeyDataV12 = [\n          \"time\",\n          \"float32\",\n          \"flags1\",\n          \"uint8\",\n          \"flags2\",\n          \"uint8\",\n          \"flags3\",\n          \"uint8\",\n          \"flags4\",\n          \"uint8\",\n          \"token1\",\n          Utils.getQWordReader(),\n          \"token2\",\n          Utils.getQWordReader(),\n          \"value1\",\n          \"float32\",\n          \"value2\",\n          \"float32\",\n          \"value3\",\n          \"float32\",\n          \"value4\",\n          \"float32\",\n        ];\n\n        this.TrackDataV12 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"curveKey\",\n          Utils.getArrayReader(this.CurveKeyDataV12),\n          \"flagKey\",\n          Utils.getArrayReader(this.FlagKeyDataV12),\n          \"triggerKey\",\n          Utils.getArrayReader(this.TriggerKeyDataV12),\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.TrackGroupDataV12 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"prop\",\n          Utils.getArrayReader(this.PropertyDataV12),\n          \"track\",\n          Utils.getArrayReader(this.TrackDataV12),\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.SequenceDataV12 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"environmentMap\",\n          Utils.getFileNameReader(),\n          \"map\",\n          Utils.getString16Reader(),\n          \"clientMap\",\n          Utils.getString16Reader(),\n          \"length\",\n          \"float32\",\n          \"trackGroup\",\n          Utils.getArrayReader(this.TrackGroupDataV12),\n        ];\n\n        this.ColorDefDataV12 = [\"intensity\", \"float32\", \"color\", [\"[]\", \"uint8\", 3]];\n\n        this.AmbientLightDataV12 = [\n          \"ambientGroundColor\",\n          this.ColorDefDataV12,\n          \"ambientSkyColor\",\n          this.ColorDefDataV12,\n          \"fillColor\",\n          this.ColorDefDataV12,\n          \"hemisphericalColor\",\n          this.ColorDefDataV12,\n          \"name\",\n          Utils.getQWordReader(),\n        ];\n\n        this.FileNameRefDataV12 = [\"name\", Utils.getQWordReader(), \"fileName\", Utils.getFileNameReader()];\n\n        this.ScriptDataV12 = [\"name\", Utils.getQWordReader(), \"byteCode\", Utils.getArrayReader(\"uint8\")];\n\n        this.TextEntryDataV12 = [\"text\", Utils.getString16Reader(), \"language\", \"uint8\"];\n\n        this.TextResourceDataV12 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"id\",\n          \"uint32\",\n          \"textEntry\",\n          Utils.getArrayReader(this.TextEntryDataV12),\n        ];\n\n        this.ResourceDataV12 = [\n          \"crc\",\n          \"uint32\",\n          \"ambientLightResource\",\n          Utils.getArrayReader(this.AmbientLightDataV12),\n          \"fileNameRef\",\n          Utils.getArrayReader(this.FileNameRefDataV12),\n          \"script\",\n          Utils.getArrayReader(this.ScriptDataV12),\n          \"textResource\",\n          Utils.getArrayReader(this.TextResourceDataV12),\n        ];\n\n        this.__root = this.SceneDataV12 = [\n          \"startingSequence\",\n          Utils.getQWordReader(),\n          \"sequence\",\n          Utils.getArrayReader(this.SequenceDataV12),\n          \"resources\",\n          this.ResourceDataV12,\n        ];\n      },\n\n      // => Version: 11, ReferencedFunction: 0xE36B40\n      11: function () {\n        this.PropertyDataV11 = [\"type\", \"uint8\", \"value\", Utils.getQWordReader(), \"pathVal\", Utils.getFileNameReader()];\n\n        this.CurveKeyDataV11 = [\"time\", \"float32\", \"value\", \"float32\", \"inTangent\", \"float32\", \"outTangent\", \"float32\"];\n\n        this.FlagKeyDataV11 = [\"time\", \"float32\", \"value\", \"float32\"];\n\n        this.TriggerKeyDataV11 = [\n          \"time\",\n          \"float32\",\n          \"flags1\",\n          \"uint8\",\n          \"flags2\",\n          \"uint8\",\n          \"flags3\",\n          \"uint8\",\n          \"flags4\",\n          \"uint8\",\n          \"token1\",\n          Utils.getQWordReader(),\n          \"token2\",\n          Utils.getQWordReader(),\n          \"value1\",\n          \"float32\",\n          \"value2\",\n          \"float32\",\n          \"value3\",\n          \"float32\",\n          \"value4\",\n          \"float32\",\n        ];\n\n        this.TrackDataV11 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint8\",\n          \"curveKey\",\n          Utils.getArrayReader(this.CurveKeyDataV11),\n          \"flagKey\",\n          Utils.getArrayReader(this.FlagKeyDataV11),\n          \"triggerKey\",\n          Utils.getArrayReader(this.TriggerKeyDataV11),\n        ];\n\n        this.TrackGroupDataV11 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint8\",\n          \"flags\",\n          \"uint32\",\n          \"prop\",\n          Utils.getArrayReader(this.PropertyDataV11),\n          \"track\",\n          Utils.getArrayReader(this.TrackDataV11),\n        ];\n\n        this.SequenceDataV11 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"length\",\n          \"float32\",\n          \"environmentMap\",\n          Utils.getFileNameReader(),\n          \"map\",\n          Utils.getString16Reader(),\n          \"clientMap\",\n          Utils.getString16Reader(),\n          \"trackGroup\",\n          Utils.getArrayReader(this.TrackGroupDataV11),\n        ];\n\n        this.ColorDefDataV11 = [\"color\", [\"[]\", \"uint8\", 3], \"intensity\", \"float32\"];\n\n        this.AmbientLightDataV11 = [\n          \"ambientGroundColor\",\n          this.ColorDefDataV11,\n          \"ambientSkyColor\",\n          this.ColorDefDataV11,\n          \"fillColor\",\n          this.ColorDefDataV11,\n          \"hemisphericalColor\",\n          this.ColorDefDataV11,\n          \"name\",\n          Utils.getQWordReader(),\n        ];\n\n        this.FileNameRefDataV11 = [\"name\", Utils.getQWordReader(), \"fileName\", Utils.getFileNameReader()];\n\n        this.ScriptDataV11 = [\"name\", Utils.getQWordReader(), \"byteCode\", Utils.getArrayReader(\"uint8\")];\n\n        this.TextEntryDataV11 = [\"text\", Utils.getString16Reader(), \"language\", \"uint8\"];\n\n        this.TextResourceDataV11 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"id\",\n          \"uint32\",\n          \"textEntry\",\n          Utils.getArrayReader(this.TextEntryDataV11),\n        ];\n\n        this.ResourceDataV11 = [\n          \"crc\",\n          \"uint32\",\n          \"ambientLightResource\",\n          Utils.getArrayReader(this.AmbientLightDataV11),\n          \"fileNameRef\",\n          Utils.getArrayReader(this.FileNameRefDataV11),\n          \"script\",\n          Utils.getArrayReader(this.ScriptDataV11),\n          \"textResource\",\n          Utils.getArrayReader(this.TextResourceDataV11),\n        ];\n\n        this.__root = this.SceneDataV11 = [\n          \"startingSequence\",\n          Utils.getQWordReader(),\n          \"sequence\",\n          Utils.getArrayReader(this.SequenceDataV11),\n          \"resources\",\n          this.ResourceDataV11,\n        ];\n      },\n\n      // => Version: 10, ReferencedFunction: 0xE36AE0\n      10: function () {\n        this.PropertyDataV10 = [\"type\", \"uint8\", \"value\", Utils.getQWordReader(), \"pathVal\", Utils.getFileNameReader()];\n\n        this.CurveKeyDataV10 = [\"time\", \"float32\", \"value\", \"float32\", \"inTangent\", \"float32\", \"outTangent\", \"float32\"];\n\n        this.FlagKeyDataV10 = [\"time\", \"float32\", \"value\", \"float32\"];\n\n        this.TriggerKeyDataV10 = [\n          \"time\",\n          \"float32\",\n          \"flags1\",\n          \"uint8\",\n          \"flags2\",\n          \"uint8\",\n          \"flags3\",\n          \"uint8\",\n          \"flags4\",\n          \"uint8\",\n          \"token1\",\n          Utils.getQWordReader(),\n          \"token2\",\n          Utils.getQWordReader(),\n          \"value1\",\n          \"float32\",\n          \"value2\",\n          \"float32\",\n          \"value3\",\n          \"float32\",\n          \"value4\",\n          \"float32\",\n        ];\n\n        this.TrackDataV10 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint8\",\n          \"curveKey\",\n          Utils.getArrayReader(this.CurveKeyDataV10),\n          \"flagKey\",\n          Utils.getArrayReader(this.FlagKeyDataV10),\n          \"triggerKey\",\n          Utils.getArrayReader(this.TriggerKeyDataV10),\n        ];\n\n        this.TrackGroupDataV10 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint8\",\n          \"flags\",\n          \"uint32\",\n          \"prop\",\n          Utils.getArrayReader(this.PropertyDataV10),\n          \"track\",\n          Utils.getArrayReader(this.TrackDataV10),\n        ];\n\n        this.SequenceDataV10 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"length\",\n          \"float32\",\n          \"environmentMap\",\n          Utils.getFileNameReader(),\n          \"map\",\n          Utils.getString16Reader(),\n          \"clientMap\",\n          Utils.getString16Reader(),\n          \"trackGroup\",\n          Utils.getArrayReader(this.TrackGroupDataV10),\n        ];\n\n        this.ColorDefDataV10 = [\"color\", [\"[]\", \"uint8\", 3], \"intensity\", \"float32\"];\n\n        this.AmbientLightDataV10 = [\n          \"ambientGroundColor\",\n          this.ColorDefDataV10,\n          \"ambientSkyColor\",\n          this.ColorDefDataV10,\n          \"fillColor\",\n          this.ColorDefDataV10,\n          \"hemisphericalColor\",\n          this.ColorDefDataV10,\n          \"name\",\n          Utils.getQWordReader(),\n        ];\n\n        this.FileNameRefDataV10 = [\"name\", Utils.getQWordReader(), \"fileName\", Utils.getFileNameReader()];\n\n        this.ScriptDataV10 = [\"name\", Utils.getQWordReader(), \"byteCode\", Utils.getArrayReader(\"uint8\")];\n\n        this.TextEntryDataV10 = [\"text\", Utils.getString16Reader(), \"language\", \"uint8\"];\n\n        this.TextResourceDataV10 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"id\",\n          \"uint32\",\n          \"textEntry\",\n          Utils.getArrayReader(this.TextEntryDataV10),\n        ];\n\n        this.ResourceDataV10 = [\n          \"crc\",\n          \"uint32\",\n          \"ambientLightResource\",\n          Utils.getArrayReader(this.AmbientLightDataV10),\n          \"fileNameRef\",\n          Utils.getArrayReader(this.FileNameRefDataV10),\n          \"script\",\n          Utils.getArrayReader(this.ScriptDataV10),\n          \"textResource\",\n          Utils.getArrayReader(this.TextResourceDataV10),\n        ];\n\n        this.__root = this.SceneDataV10 = [\n          \"startingSequence\",\n          Utils.getQWordReader(),\n          \"sequence\",\n          Utils.getArrayReader(this.SequenceDataV10),\n          \"resources\",\n          this.ResourceDataV10,\n        ];\n      },\n\n      // => Version: 9, ReferencedFunction: 0xE36A30\n      9: function () {\n        this.PropertyDataV9 = [\"type\", \"uint8\", \"value\", Utils.getQWordReader(), \"pathVal\", Utils.getFileNameReader()];\n\n        this.CurveKeyDataV9 = [\"time\", \"float32\", \"value\", \"float32\", \"inTangent\", \"float32\", \"outTangent\", \"float32\"];\n\n        this.FlagKeyDataV9 = [\"time\", \"float32\", \"value\", \"float32\"];\n\n        this.TriggerKeyDataV9 = [\n          \"time\",\n          \"float32\",\n          \"flags1\",\n          \"uint8\",\n          \"flags2\",\n          \"uint8\",\n          \"flags3\",\n          \"uint8\",\n          \"flags4\",\n          \"uint8\",\n          \"token1\",\n          Utils.getQWordReader(),\n          \"token2\",\n          Utils.getQWordReader(),\n          \"value1\",\n          \"float32\",\n          \"value2\",\n          \"float32\",\n          \"value3\",\n          \"float32\",\n          \"value4\",\n          \"float32\",\n        ];\n\n        this.TrackDataV9 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint8\",\n          \"curveKey\",\n          Utils.getArrayReader(this.CurveKeyDataV9),\n          \"flagKey\",\n          Utils.getArrayReader(this.FlagKeyDataV9),\n          \"triggerKey\",\n          Utils.getArrayReader(this.TriggerKeyDataV9),\n        ];\n\n        this.TrackGroupDataV9 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint8\",\n          \"flags\",\n          \"uint32\",\n          \"prop\",\n          Utils.getArrayReader(this.PropertyDataV9),\n          \"track\",\n          Utils.getArrayReader(this.TrackDataV9),\n        ];\n\n        this.SequenceDataV9 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"length\",\n          \"float32\",\n          \"environmentMap\",\n          Utils.getFileNameReader(),\n          \"map\",\n          Utils.getString16Reader(),\n          \"clientMap\",\n          Utils.getString16Reader(),\n          \"trackGroup\",\n          Utils.getArrayReader(this.TrackGroupDataV9),\n        ];\n\n        this.ColorDefDataV9 = [\"color\", [\"[]\", \"uint8\", 3], \"intensity\", \"float32\"];\n\n        this.AmbientLightDataV9 = [\n          \"ambientGroundColor\",\n          this.ColorDefDataV9,\n          \"ambientSkyColor\",\n          this.ColorDefDataV9,\n          \"fillColor\",\n          this.ColorDefDataV9,\n          \"hemisphericalColor\",\n          this.ColorDefDataV9,\n          \"name\",\n          Utils.getQWordReader(),\n        ];\n\n        this.FileNameRefDataV9 = [\"name\", Utils.getQWordReader(), \"fileName\", Utils.getFileNameReader()];\n\n        this.ScriptDataV9 = [\"name\", Utils.getQWordReader(), \"byteCode\", Utils.getArrayReader(\"uint8\")];\n\n        this.TextEntryDataV9 = [\"text\", Utils.getString16Reader(), \"language\", \"uint8\"];\n\n        this.TextResourceDataV9 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"id\",\n          \"uint32\",\n          \"textEntry\",\n          Utils.getArrayReader(this.TextEntryDataV9),\n        ];\n\n        this.ResourceDataV9 = [\n          \"crc\",\n          \"uint32\",\n          \"ambientLightResource\",\n          Utils.getArrayReader(this.AmbientLightDataV9),\n          \"fileNameRef\",\n          Utils.getArrayReader(this.FileNameRefDataV9),\n          \"script\",\n          Utils.getArrayReader(this.ScriptDataV9),\n          \"textResource\",\n          Utils.getArrayReader(this.TextResourceDataV9),\n        ];\n\n        this.__root = this.SceneDataV9 = [\n          \"startingSequence\",\n          Utils.getQWordReader(),\n          \"sequence\",\n          Utils.getArrayReader(this.SequenceDataV9),\n          \"resources\",\n          this.ResourceDataV9,\n        ];\n      },\n\n      // => Version: 8\n      8: function () {\n        this.PropertyDataV8 = [\"type\", \"uint8\", \"value\", Utils.getQWordReader(), \"pathVal\", Utils.getFileNameReader()];\n\n        this.CurveKeyDataV8 = [\"time\", \"float32\", \"value\", \"float32\", \"inTangent\", \"float32\", \"outTangent\", \"float32\"];\n\n        this.FlagKeyDataV8 = [\"time\", \"float32\", \"value\", \"float32\"];\n\n        this.TriggerKeyDataV8 = [\n          \"time\",\n          \"float32\",\n          \"flags1\",\n          \"uint8\",\n          \"flags2\",\n          \"uint8\",\n          \"flags3\",\n          \"uint8\",\n          \"flags4\",\n          \"uint8\",\n          \"token1\",\n          Utils.getQWordReader(),\n          \"token2\",\n          Utils.getQWordReader(),\n          \"value1\",\n          \"float32\",\n          \"value2\",\n          \"float32\",\n          \"value3\",\n          \"float32\",\n          \"value4\",\n          \"float32\",\n        ];\n\n        this.TrackDataV8 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint8\",\n          \"curveKey\",\n          Utils.getArrayReader(this.CurveKeyDataV8),\n          \"flagKey\",\n          Utils.getArrayReader(this.FlagKeyDataV8),\n          \"triggerKey\",\n          Utils.getArrayReader(this.TriggerKeyDataV8),\n        ];\n\n        this.TrackGroupDataV8 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint8\",\n          \"flags\",\n          \"uint32\",\n          \"prop\",\n          Utils.getArrayReader(this.PropertyDataV8),\n          \"track\",\n          Utils.getArrayReader(this.TrackDataV8),\n        ];\n\n        this.SequenceDataV8 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"length\",\n          \"float32\",\n          \"environmentMap\",\n          Utils.getFileNameReader(),\n          \"map\",\n          Utils.getString16Reader(),\n          \"clientMap\",\n          Utils.getString16Reader(),\n          \"trackGroup\",\n          Utils.getArrayReader(this.TrackGroupDataV8),\n        ];\n\n        this.ColorDefDataV8 = [\"color\", [\"[]\", \"uint8\", 3], \"intensity\", \"float32\"];\n\n        this.AmbientLightDataV8 = [\n          \"ambientGroundColor\",\n          this.ColorDefDataV8,\n          \"ambientSkyColor\",\n          this.ColorDefDataV8,\n          \"fillColor\",\n          this.ColorDefDataV8,\n          \"hemisphericalColor\",\n          this.ColorDefDataV8,\n          \"name\",\n          Utils.getQWordReader(),\n        ];\n\n        this.FileNameRefDataV8 = [\"name\", Utils.getQWordReader(), \"fileName\", Utils.getFileNameReader()];\n\n        this.ScriptDataV8 = [\"name\", Utils.getQWordReader(), \"byteCode\", Utils.getArrayReader(\"uint8\")];\n\n        this.TextEntryDataV8 = [\"text\", Utils.getString16Reader(), \"language\", \"uint8\"];\n\n        this.TextResourceDataV8 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"id\",\n          \"uint32\",\n          \"textEntry\",\n          Utils.getArrayReader(this.TextEntryDataV8),\n        ];\n\n        this.ResourceDataV8 = [\n          \"ambientLightResource\",\n          Utils.getArrayReader(this.AmbientLightDataV8),\n          \"fileNameRef\",\n          Utils.getArrayReader(this.FileNameRefDataV8),\n          \"script\",\n          Utils.getArrayReader(this.ScriptDataV8),\n          \"textResource\",\n          Utils.getArrayReader(this.TextResourceDataV8),\n        ];\n\n        this.__root = this.SceneDataV8 = [\n          \"startingSequence\",\n          Utils.getQWordReader(),\n          \"sequence\",\n          Utils.getArrayReader(this.SequenceDataV8),\n          \"resources\",\n          this.ResourceDataV8,\n        ];\n      },\n\n      // => Version: 7, ReferencedFunction: 0xE36950\n      7: function () {\n        this.PropertyDataV7 = [\"type\", \"uint8\", \"value\", Utils.getQWordReader(), \"pathVal\", Utils.getFileNameReader()];\n\n        this.CurveKeyDataV7 = [\"time\", \"float32\", \"value\", \"float32\", \"inTangent\", \"float32\", \"outTangent\", \"float32\"];\n\n        this.FlagKeyDataV7 = [\"time\", \"float32\", \"value\", \"float32\"];\n\n        this.TriggerKeyDataV7 = [\n          \"time\",\n          \"float32\",\n          \"flags1\",\n          \"uint8\",\n          \"flags2\",\n          \"uint8\",\n          \"flags3\",\n          \"uint8\",\n          \"flags4\",\n          \"uint8\",\n          \"token1\",\n          Utils.getQWordReader(),\n          \"token2\",\n          Utils.getQWordReader(),\n          \"value1\",\n          \"float32\",\n          \"value2\",\n          \"float32\",\n          \"value3\",\n          \"float32\",\n          \"value4\",\n          \"float32\",\n        ];\n\n        this.TrackDataV7 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint8\",\n          \"curveKey\",\n          Utils.getArrayReader(this.CurveKeyDataV7),\n          \"flagKey\",\n          Utils.getArrayReader(this.FlagKeyDataV7),\n          \"triggerKey\",\n          Utils.getArrayReader(this.TriggerKeyDataV7),\n        ];\n\n        this.TrackGroupDataV7 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint8\",\n          \"flags\",\n          \"uint32\",\n          \"prop\",\n          Utils.getArrayReader(this.PropertyDataV7),\n          \"track\",\n          Utils.getArrayReader(this.TrackDataV7),\n        ];\n\n        this.SequenceDataV7 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"length\",\n          \"float32\",\n          \"environmentMap\",\n          Utils.getFileNameReader(),\n          \"map\",\n          Utils.getString16Reader(),\n          \"clientMap\",\n          Utils.getString16Reader(),\n          \"trackGroup\",\n          Utils.getArrayReader(this.TrackGroupDataV7),\n        ];\n\n        this.ColorDefDataV7 = [\"color\", [\"[]\", \"uint8\", 3], \"intensity\", \"float32\"];\n\n        this.AmbientLightDataV7 = [\n          \"ambientGroundColor\",\n          this.ColorDefDataV7,\n          \"ambientSkyColor\",\n          this.ColorDefDataV7,\n          \"fillColor\",\n          this.ColorDefDataV7,\n          \"hemisphericalColor\",\n          this.ColorDefDataV7,\n          \"name\",\n          Utils.getQWordReader(),\n        ];\n\n        this.ScriptDataV7 = [\"name\", Utils.getQWordReader(), \"byteCode\", Utils.getArrayReader(\"uint8\")];\n\n        this.TextEntryDataV7 = [\"text\", Utils.getString16Reader(), \"language\", \"uint8\"];\n\n        this.TextResourceDataV7 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"id\",\n          \"uint32\",\n          \"textEntry\",\n          Utils.getArrayReader(this.TextEntryDataV7),\n        ];\n\n        this.ResourceDataV7 = [\n          \"ambientLightResource\",\n          Utils.getArrayReader(this.AmbientLightDataV7),\n          \"script\",\n          Utils.getArrayReader(this.ScriptDataV7),\n          \"textResource\",\n          Utils.getArrayReader(this.TextResourceDataV7),\n        ];\n\n        this.__root = this.SceneDataV7 = [\n          \"startingSequence\",\n          Utils.getQWordReader(),\n          \"sequence\",\n          Utils.getArrayReader(this.SequenceDataV7),\n          \"resources\",\n          this.ResourceDataV7,\n        ];\n      },\n\n      // => Version: 6, ReferencedFunction: 0xE36880\n      6: function () {\n        this.PropertyDataV6 = [\"type\", \"uint8\", \"value\", Utils.getQWordReader(), \"pathVal\", Utils.getFileNameReader()];\n\n        this.CurveKeyDataV6 = [\"time\", \"float32\", \"value\", \"float32\", \"inTangent\", \"float32\", \"outTangent\", \"float32\"];\n\n        this.FlagKeyDataV6 = [\"time\", \"float32\", \"value\", \"float32\"];\n\n        this.TriggerKeyDataV6 = [\n          \"time\",\n          \"float32\",\n          \"flags1\",\n          \"uint8\",\n          \"flags2\",\n          \"uint8\",\n          \"flags3\",\n          \"uint8\",\n          \"flags4\",\n          \"uint8\",\n          \"token1\",\n          Utils.getQWordReader(),\n          \"token2\",\n          Utils.getQWordReader(),\n          \"value1\",\n          \"float32\",\n          \"value2\",\n          \"float32\",\n          \"value3\",\n          \"float32\",\n          \"value4\",\n          \"float32\",\n        ];\n\n        this.TrackDataV6 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint8\",\n          \"curveKey\",\n          Utils.getArrayReader(this.CurveKeyDataV6),\n          \"flagKey\",\n          Utils.getArrayReader(this.FlagKeyDataV6),\n          \"triggerKey\",\n          Utils.getArrayReader(this.TriggerKeyDataV6),\n        ];\n\n        this.TrackGroupDataV6 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint8\",\n          \"flags\",\n          \"uint32\",\n          \"prop\",\n          Utils.getArrayReader(this.PropertyDataV6),\n          \"track\",\n          Utils.getArrayReader(this.TrackDataV6),\n        ];\n\n        this.SequenceDataV6 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"length\",\n          \"float32\",\n          \"environmentMap\",\n          Utils.getFileNameReader(),\n          \"map\",\n          Utils.getString16Reader(),\n          \"clientMap\",\n          Utils.getString16Reader(),\n          \"trackGroup\",\n          Utils.getArrayReader(this.TrackGroupDataV6),\n        ];\n\n        this.ColorDefDataV6 = [\"color\", [\"[]\", \"uint8\", 3], \"intensity\", \"float32\"];\n\n        this.AmbientLightDataV6 = [\n          \"ambientGroundColor\",\n          this.ColorDefDataV6,\n          \"ambientSkyColor\",\n          this.ColorDefDataV6,\n          \"fillColor\",\n          this.ColorDefDataV6,\n          \"hemisphericalColor\",\n          this.ColorDefDataV6,\n          \"name\",\n          Utils.getQWordReader(),\n        ];\n\n        this.ScriptDataV6 = [\"name\", Utils.getQWordReader(), \"byteCode\", Utils.getArrayReader(\"uint8\")];\n\n        this.TextEntryDataV6 = [\"text\", Utils.getString16Reader(), \"language\", \"uint8\"];\n\n        this.TextResourceDataV6 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"id\",\n          \"uint32\",\n          \"textEntry\",\n          Utils.getArrayReader(this.TextEntryDataV6),\n        ];\n\n        this.ResourceDataV6 = [\n          \"ambientLightResource\",\n          Utils.getArrayReader(this.AmbientLightDataV6),\n          \"script\",\n          Utils.getArrayReader(this.ScriptDataV6),\n          \"textResource\",\n          Utils.getArrayReader(this.TextResourceDataV6),\n        ];\n\n        this.__root = this.SceneDataV6 = [\n          \"startingSequence\",\n          Utils.getQWordReader(),\n          \"sequence\",\n          Utils.getArrayReader(this.SequenceDataV6),\n          \"resources\",\n          this.ResourceDataV6,\n        ];\n      },\n\n      // => Version: 5, ReferencedFunction: 0xE367E0\n      5: function () {\n        this.PropertyDataV5 = [\"type\", \"uint8\", \"value\", Utils.getQWordReader(), \"pathVal\", Utils.getFileNameReader()];\n\n        this.CurveKeyDataV5 = [\"time\", \"float32\", \"value\", \"float32\", \"inTangent\", \"float32\", \"outTangent\", \"float32\"];\n\n        this.FlagKeyDataV5 = [\"time\", \"float32\", \"value\", \"float32\"];\n\n        this.TriggerKeyDataV5 = [\n          \"time\",\n          \"float32\",\n          \"flags1\",\n          \"uint8\",\n          \"flags2\",\n          \"uint8\",\n          \"flags3\",\n          \"uint8\",\n          \"flags4\",\n          \"uint8\",\n          \"token1\",\n          Utils.getQWordReader(),\n          \"token2\",\n          Utils.getQWordReader(),\n          \"value1\",\n          \"float32\",\n          \"value2\",\n          \"float32\",\n          \"value3\",\n          \"float32\",\n          \"value4\",\n          \"float32\",\n        ];\n\n        this.TrackDataV5 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint8\",\n          \"curveKey\",\n          Utils.getArrayReader(this.CurveKeyDataV5),\n          \"flagKey\",\n          Utils.getArrayReader(this.FlagKeyDataV5),\n          \"triggerKey\",\n          Utils.getArrayReader(this.TriggerKeyDataV5),\n        ];\n\n        this.TrackGroupDataV5 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint8\",\n          \"flags\",\n          \"uint32\",\n          \"prop\",\n          Utils.getArrayReader(this.PropertyDataV5),\n          \"track\",\n          Utils.getArrayReader(this.TrackDataV5),\n        ];\n\n        this.SequenceDataV5 = [\n          \"environmentMap\",\n          Utils.getFileNameReader(),\n          \"map\",\n          Utils.getString16Reader(),\n          \"clientMap\",\n          Utils.getString16Reader(),\n          \"name\",\n          Utils.getQWordReader(),\n          \"length\",\n          \"float32\",\n          \"trackGroup\",\n          Utils.getArrayReader(this.TrackGroupDataV5),\n        ];\n\n        this.ColorDefDataV5 = [\"color\", [\"[]\", \"uint8\", 3], \"intensity\", \"float32\"];\n\n        this.AmbientLightDataV5 = [\n          \"ambientGroundColor\",\n          this.ColorDefDataV5,\n          \"ambientSkyColor\",\n          this.ColorDefDataV5,\n          \"fillColor\",\n          this.ColorDefDataV5,\n          \"hemisphericalColor\",\n          this.ColorDefDataV5,\n          \"name\",\n          Utils.getQWordReader(),\n        ];\n\n        this.ScriptDataV5 = [\"name\", Utils.getQWordReader(), \"byteCode\", Utils.getArrayReader(\"uint8\")];\n\n        this.TextEntryDataV5 = [\"text\", Utils.getString16Reader(), \"language\", \"uint8\"];\n\n        this.TextResourceDataV5 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"id\",\n          \"uint32\",\n          \"textEntry\",\n          Utils.getArrayReader(this.TextEntryDataV5),\n        ];\n\n        this.ResourceDataV5 = [\n          \"ambientLightResource\",\n          Utils.getArrayReader(this.AmbientLightDataV5),\n          \"script\",\n          Utils.getArrayReader(this.ScriptDataV5),\n          \"textResource\",\n          Utils.getArrayReader(this.TextResourceDataV5),\n        ];\n\n        this.__root = this.SceneDataV5 = [\n          \"startingSequence\",\n          Utils.getQWordReader(),\n          \"sequence\",\n          Utils.getArrayReader(this.SequenceDataV5),\n          \"resources\",\n          this.ResourceDataV5,\n        ];\n      },\n\n      // => Version: 4, ReferencedFunction: 0xE36740\n      4: function () {\n        this.PropertyDataV4 = [\"type\", \"uint8\", \"value\", Utils.getQWordReader(), \"pathVal\", Utils.getFileNameReader()];\n\n        this.CurveKeyDataV4 = [\"time\", \"float32\", \"value\", \"float32\", \"inTangent\", \"float32\", \"outTangent\", \"float32\"];\n\n        this.FlagKeyDataV4 = [\"time\", \"float32\", \"value\", \"float32\"];\n\n        this.TriggerKeyDataV4 = [\n          \"time\",\n          \"float32\",\n          \"flags1\",\n          \"uint8\",\n          \"flags2\",\n          \"uint8\",\n          \"flags3\",\n          \"uint8\",\n          \"flags4\",\n          \"uint8\",\n          \"token1\",\n          Utils.getQWordReader(),\n          \"token2\",\n          Utils.getQWordReader(),\n          \"value1\",\n          \"float32\",\n          \"value2\",\n          \"float32\",\n          \"value3\",\n          \"float32\",\n          \"value4\",\n          \"float32\",\n        ];\n\n        this.TrackDataV4 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint8\",\n          \"curveKey\",\n          Utils.getArrayReader(this.CurveKeyDataV4),\n          \"flagKey\",\n          Utils.getArrayReader(this.FlagKeyDataV4),\n          \"triggerKey\",\n          Utils.getArrayReader(this.TriggerKeyDataV4),\n        ];\n\n        this.TrackGroupDataV4 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint8\",\n          \"flags\",\n          \"uint32\",\n          \"prop\",\n          Utils.getArrayReader(this.PropertyDataV4),\n          \"track\",\n          Utils.getArrayReader(this.TrackDataV4),\n        ];\n\n        this.SequenceDataV4 = [\n          \"environmentMap\",\n          Utils.getFileNameReader(),\n          \"map\",\n          Utils.getString16Reader(),\n          \"clientMap\",\n          Utils.getString16Reader(),\n          \"name\",\n          Utils.getQWordReader(),\n          \"length\",\n          \"float32\",\n          \"trackGroup\",\n          Utils.getArrayReader(this.TrackGroupDataV4),\n        ];\n\n        this.ColorDefDataV4 = [\"color\", [\"[]\", \"uint8\", 3], \"intensity\", \"float32\"];\n\n        this.AmbientLightDataV4 = [\n          \"ambientGroundColor\",\n          this.ColorDefDataV4,\n          \"ambientSkyColor\",\n          this.ColorDefDataV4,\n          \"fillColor\",\n          this.ColorDefDataV4,\n          \"hemisphericalColor\",\n          this.ColorDefDataV4,\n          \"name\",\n          Utils.getQWordReader(),\n        ];\n\n        this.ScriptDataV4 = [\"name\", Utils.getQWordReader(), \"byteCode\", Utils.getArrayReader(\"uint8\")];\n\n        this.TextEntryDataV4 = [\"text\", Utils.getString16Reader(), \"language\", \"uint8\"];\n\n        this.TextResourceDataV4 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"id\",\n          \"uint32\",\n          \"textEntry\",\n          Utils.getArrayReader(this.TextEntryDataV4),\n        ];\n\n        this.ResourceDataV4 = [\n          \"ambientLightResource\",\n          Utils.getArrayReader(this.AmbientLightDataV4),\n          \"script\",\n          Utils.getArrayReader(this.ScriptDataV4),\n          \"textResource\",\n          Utils.getArrayReader(this.TextResourceDataV4),\n        ];\n\n        this.__root = this.SceneDataV4 = [\n          \"startingSequence\",\n          Utils.getQWordReader(),\n          \"sequence\",\n          Utils.getArrayReader(this.SequenceDataV4),\n          \"resources\",\n          this.ResourceDataV4,\n        ];\n      },\n\n      // => Version: 3, ReferencedFunction: 0xE366A0\n      3: function () {\n        this.PropertyDataV3 = [\"type\", \"uint8\", \"value\", Utils.getQWordReader(), \"pathVal\", Utils.getFileNameReader()];\n\n        this.CurveKeyDataV3 = [\"time\", \"float32\", \"value\", \"float32\", \"inTangent\", \"float32\", \"outTangent\", \"float32\"];\n\n        this.FlagKeyDataV3 = [\"time\", \"float32\", \"value\", \"float32\"];\n\n        this.TriggerKeyDataV3 = [\n          \"time\",\n          \"float32\",\n          \"flags1\",\n          \"uint8\",\n          \"flags2\",\n          \"uint8\",\n          \"flags3\",\n          \"uint8\",\n          \"flags4\",\n          \"uint8\",\n          \"token1\",\n          Utils.getQWordReader(),\n          \"token2\",\n          Utils.getQWordReader(),\n          \"value1\",\n          \"float32\",\n          \"value2\",\n          \"float32\",\n          \"value3\",\n          \"float32\",\n          \"value4\",\n          \"float32\",\n        ];\n\n        this.TrackDataV3 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint8\",\n          \"curveKey\",\n          Utils.getArrayReader(this.CurveKeyDataV3),\n          \"flagKey\",\n          Utils.getArrayReader(this.FlagKeyDataV3),\n          \"triggerKey\",\n          Utils.getArrayReader(this.TriggerKeyDataV3),\n        ];\n\n        this.TrackGroupDataV3 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint8\",\n          \"flags\",\n          \"uint32\",\n          \"prop\",\n          Utils.getArrayReader(this.PropertyDataV3),\n          \"track\",\n          Utils.getArrayReader(this.TrackDataV3),\n        ];\n\n        this.SequenceDataV3 = [\n          \"environmentMap\",\n          Utils.getFileNameReader(),\n          \"map\",\n          Utils.getString16Reader(),\n          \"clientMap\",\n          Utils.getString16Reader(),\n          \"name\",\n          Utils.getQWordReader(),\n          \"length\",\n          \"float32\",\n          \"trackGroup\",\n          Utils.getArrayReader(this.TrackGroupDataV3),\n        ];\n\n        this.ColorDefDataV3 = [\"color\", [\"[]\", \"uint8\", 3], \"intensity\", \"float32\"];\n\n        this.AmbientLightDataV3 = [\n          \"ambientGroundColor\",\n          this.ColorDefDataV3,\n          \"ambientSkyColor\",\n          this.ColorDefDataV3,\n          \"fillColor\",\n          this.ColorDefDataV3,\n          \"hemisphericalColor\",\n          this.ColorDefDataV3,\n          \"name\",\n          Utils.getQWordReader(),\n        ];\n\n        this.ScriptDataV3 = [\"name\", Utils.getQWordReader(), \"byteCode\", Utils.getArrayReader(\"uint8\")];\n\n        this.TextEntryDataV3 = [\"text\", Utils.getString16Reader(), \"language\", \"uint8\"];\n\n        this.TextResourceDataV3 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"textEntry\",\n          Utils.getArrayReader(this.TextEntryDataV3),\n        ];\n\n        this.ResourceDataV3 = [\n          \"ambientLightResource\",\n          Utils.getArrayReader(this.AmbientLightDataV3),\n          \"script\",\n          Utils.getArrayReader(this.ScriptDataV3),\n          \"textResource\",\n          Utils.getArrayReader(this.TextResourceDataV3),\n        ];\n\n        this.__root = this.SceneDataV3 = [\n          \"startingSequence\",\n          Utils.getQWordReader(),\n          \"sequence\",\n          Utils.getArrayReader(this.SequenceDataV3),\n          \"resources\",\n          this.ResourceDataV3,\n        ];\n      },\n\n      // => Version: 2\n      2: function () {\n        this.PropertyDataV2 = [\"type\", \"uint8\", \"value\", Utils.getQWordReader(), \"pathVal\", Utils.getFileNameReader()];\n\n        this.CurveKeyDataV2 = [\"time\", \"float32\", \"value\", \"float32\", \"inTangent\", \"float32\", \"outTangent\", \"float32\"];\n\n        this.FlagKeyDataV2 = [\"time\", \"float32\", \"value\", \"float32\"];\n\n        this.TriggerKeyDataV2 = [\n          \"time\",\n          \"float32\",\n          \"flags1\",\n          \"uint8\",\n          \"flags2\",\n          \"uint8\",\n          \"flags3\",\n          \"uint8\",\n          \"flags4\",\n          \"uint8\",\n          \"token1\",\n          Utils.getQWordReader(),\n          \"token2\",\n          Utils.getQWordReader(),\n          \"value1\",\n          \"float32\",\n          \"value2\",\n          \"float32\",\n          \"value3\",\n          \"float32\",\n          \"value4\",\n          \"float32\",\n        ];\n\n        this.TrackDataV2 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint8\",\n          \"curveKey\",\n          Utils.getArrayReader(this.CurveKeyDataV2),\n          \"flagKey\",\n          Utils.getArrayReader(this.FlagKeyDataV2),\n          \"triggerKey\",\n          Utils.getArrayReader(this.TriggerKeyDataV2),\n        ];\n\n        this.TrackGroupDataV2 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint8\",\n          \"flags\",\n          \"uint32\",\n          \"prop\",\n          Utils.getArrayReader(this.PropertyDataV2),\n          \"track\",\n          Utils.getArrayReader(this.TrackDataV2),\n        ];\n\n        this.SequenceDataV2 = [\n          \"environmentMap\",\n          Utils.getFileNameReader(),\n          \"map\",\n          Utils.getString16Reader(),\n          \"clientMap\",\n          Utils.getString16Reader(),\n          \"name\",\n          Utils.getQWordReader(),\n          \"length\",\n          \"float32\",\n          \"trackGroup\",\n          Utils.getArrayReader(this.TrackGroupDataV2),\n        ];\n\n        this.ColorDefDataV2 = [\"color\", [\"[]\", \"uint8\", 3], \"intensity\", \"float32\"];\n\n        this.AmbientLightDataV2 = [\n          \"ambientGroundColor\",\n          this.ColorDefDataV2,\n          \"ambientSkyColor\",\n          this.ColorDefDataV2,\n          \"fillColor\",\n          this.ColorDefDataV2,\n          \"hemisphericalColor\",\n          this.ColorDefDataV2,\n          \"name\",\n          Utils.getQWordReader(),\n        ];\n\n        this.ScriptDataV2 = [\"name\", Utils.getQWordReader(), \"byteCode\", Utils.getArrayReader(\"uint8\")];\n\n        this.TextEntryDataV2 = [\"text\", Utils.getString16Reader(), \"language\", \"uint8\"];\n\n        this.TextResourceDataV2 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"textEntry\",\n          Utils.getArrayReader(this.TextEntryDataV2),\n        ];\n\n        this.ResourceDataV2 = [\n          \"ambientLightResource\",\n          Utils.getArrayReader(this.AmbientLightDataV2),\n          \"script\",\n          Utils.getArrayReader(this.ScriptDataV2),\n          \"textResource\",\n          Utils.getArrayReader(this.TextResourceDataV2),\n        ];\n\n        this.__root = this.SceneDataV2 = [\n          \"startingSequence\",\n          Utils.getQWordReader(),\n          \"sequence\",\n          Utils.getArrayReader(this.SequenceDataV2),\n          \"resources\",\n          this.ResourceDataV2,\n        ];\n      },\n\n      // => Version: 1, ReferencedFunction: 0xE36590\n      1: function () {\n        this.PropertyDataV1 = [\"type\", \"uint8\", \"value\", Utils.getQWordReader(), \"pathVal\", Utils.getFileNameReader()];\n\n        this.CurveKeyDataV1 = [\"time\", \"float32\", \"value\", \"float32\", \"inTangent\", \"float32\", \"outTangent\", \"float32\"];\n\n        this.FlagKeyDataV1 = [\"time\", \"float32\", \"value\", \"float32\"];\n\n        this.TriggerKeyDataV1 = [\n          \"time\",\n          \"float32\",\n          \"flags1\",\n          \"uint8\",\n          \"flags2\",\n          \"uint8\",\n          \"flags3\",\n          \"uint8\",\n          \"flags4\",\n          \"uint8\",\n          \"token1\",\n          Utils.getQWordReader(),\n          \"token2\",\n          Utils.getQWordReader(),\n          \"value1\",\n          \"float32\",\n          \"value2\",\n          \"float32\",\n          \"value3\",\n          \"float32\",\n          \"value4\",\n          \"float32\",\n        ];\n\n        this.TrackDataV1 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint8\",\n          \"curveKey\",\n          Utils.getArrayReader(this.CurveKeyDataV1),\n          \"flagKey\",\n          Utils.getArrayReader(this.FlagKeyDataV1),\n          \"triggerKey\",\n          Utils.getArrayReader(this.TriggerKeyDataV1),\n        ];\n\n        this.TrackGroupDataV1 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint8\",\n          \"flags\",\n          \"uint32\",\n          \"prop\",\n          Utils.getArrayReader(this.PropertyDataV1),\n          \"track\",\n          Utils.getArrayReader(this.TrackDataV1),\n        ];\n\n        this.SequenceDataV1 = [\n          \"environmentMap\",\n          Utils.getFileNameReader(),\n          \"map\",\n          Utils.getString16Reader(),\n          \"clientMap\",\n          Utils.getString16Reader(),\n          \"name\",\n          Utils.getQWordReader(),\n          \"length\",\n          \"float32\",\n          \"trackGroup\",\n          Utils.getArrayReader(this.TrackGroupDataV1),\n        ];\n\n        this.ColorDefDataV1 = [\"color\", [\"[]\", \"uint8\", 3], \"intensity\", \"float32\"];\n\n        this.AmbientLightDataV1 = [\n          \"ambientGroundColor\",\n          this.ColorDefDataV1,\n          \"ambientSkyColor\",\n          this.ColorDefDataV1,\n          \"fillColor\",\n          this.ColorDefDataV1,\n          \"hemisphericalColor\",\n          this.ColorDefDataV1,\n          \"name\",\n          Utils.getQWordReader(),\n        ];\n\n        this.ScriptDataV1 = [\"name\", Utils.getQWordReader(), \"byteCode\", Utils.getArrayReader(\"uint8\")];\n\n        this.TextEntryDataV1 = [\"text\", Utils.getString16Reader(), \"language\", \"uint8\"];\n\n        this.TextResourceDataV1 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"textEntry\",\n          Utils.getArrayReader(this.TextEntryDataV1),\n        ];\n\n        this.ResourceDataV1 = [\n          \"ambientLightResource\",\n          Utils.getArrayReader(this.AmbientLightDataV1),\n          \"script\",\n          Utils.getArrayReader(this.ScriptDataV1),\n          \"textResource\",\n          Utils.getArrayReader(this.TextResourceDataV1),\n        ];\n\n        this.__root = this.SceneDataV1 = [\n          \"sequence\",\n          Utils.getArrayReader(this.SequenceDataV1),\n          \"resources\",\n          this.ResourceDataV1,\n        ];\n      },\n\n      // => Version: 0\n      0: function () {\n        this.PropertyDataV0 = [\"type\", \"uint8\", \"value\", Utils.getQWordReader(), \"pathVal\", Utils.getFileNameReader()];\n\n        this.CurveKeyDataV0 = [\"time\", \"float32\", \"value\", \"float32\", \"inTangent\", \"float32\", \"outTangent\", \"float32\"];\n\n        this.FlagKeyDataV0 = [\"time\", \"float32\", \"value\", \"float32\"];\n\n        this.TriggerKeyDataV0 = [\n          \"time\",\n          \"float32\",\n          \"flags1\",\n          \"uint8\",\n          \"flags2\",\n          \"uint8\",\n          \"flags3\",\n          \"uint8\",\n          \"flags4\",\n          \"uint8\",\n          \"token1\",\n          Utils.getQWordReader(),\n          \"token2\",\n          Utils.getQWordReader(),\n          \"value1\",\n          \"float32\",\n          \"value2\",\n          \"float32\",\n          \"value3\",\n          \"float32\",\n          \"value4\",\n          \"float32\",\n        ];\n\n        this.TrackDataV0 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint8\",\n          \"curveKey\",\n          Utils.getArrayReader(this.CurveKeyDataV0),\n          \"flagKey\",\n          Utils.getArrayReader(this.FlagKeyDataV0),\n          \"triggerKey\",\n          Utils.getArrayReader(this.TriggerKeyDataV0),\n        ];\n\n        this.TrackGroupDataV0 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint8\",\n          \"flags\",\n          \"uint32\",\n          \"prop\",\n          Utils.getArrayReader(this.PropertyDataV0),\n          \"track\",\n          Utils.getArrayReader(this.TrackDataV0),\n        ];\n\n        this.SequenceDataV0 = [\n          \"environmentMap\",\n          Utils.getFileNameReader(),\n          \"map\",\n          Utils.getString16Reader(),\n          \"clientMap\",\n          Utils.getString16Reader(),\n          \"name\",\n          Utils.getQWordReader(),\n          \"length\",\n          \"float32\",\n          \"trackGroup\",\n          Utils.getArrayReader(this.TrackGroupDataV0),\n        ];\n\n        this.ColorDefDataV0 = [\"color\", [\"[]\", \"uint8\", 3], \"intensity\", \"float32\"];\n\n        this.AmbientLightDataV0 = [\n          \"ambientGroundColor\",\n          this.ColorDefDataV0,\n          \"ambientSkyColor\",\n          this.ColorDefDataV0,\n          \"fillColor\",\n          this.ColorDefDataV0,\n          \"hemisphericalColor\",\n          this.ColorDefDataV0,\n          \"name\",\n          Utils.getQWordReader(),\n        ];\n\n        this.TextEntryDataV0 = [\"text\", Utils.getString16Reader(), \"language\", \"uint8\"];\n\n        this.TextResourceDataV0 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"textEntry\",\n          Utils.getArrayReader(this.TextEntryDataV0),\n        ];\n\n        this.ResourceDataV0 = [\n          \"ambientLightResource\",\n          Utils.getArrayReader(this.AmbientLightDataV0),\n          \"textResource\",\n          Utils.getArrayReader(this.TextResourceDataV0),\n        ];\n\n        this.__root = this.SceneDataV0 = [\n          \"sequence\",\n          Utils.getArrayReader(this.SequenceDataV0),\n          \"resources\",\n          this.ResourceDataV0,\n        ];\n      },\n    },\n  },\n];\n","const Utils = require(\"../../util/ParserUtils.js\");\n\nmodule.exports = [\n  /// ==================================================\n  /// Chunk: cube, versions: 4, strucTab: 0x17244E0\n  /// ==================================================\n\n  {\n    name: \"cube\",\n    versions: {\n      // => Version: 3\n      3: function () {\n        this.PackMapCubeMapSampleV3 = [\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"filenameDayDefault\",\n          Utils.getFileNameReader(),\n          \"filenameNightDefault\",\n          Utils.getFileNameReader(),\n          \"filenameDayScript\",\n          Utils.getFileNameReader(),\n          \"filenameNightScript\",\n          Utils.getFileNameReader(),\n          \"envID\",\n          Utils.getQWordReader(),\n        ];\n\n        this.PackMapCubeMapParamsV3 = [\n          \"modulateColor\",\n          \"uint32\",\n          \"brightness\",\n          \"float32\",\n          \"contrast\",\n          \"float32\",\n          \"blurPasses\",\n          \"uint32\",\n          \"envVolume\",\n          Utils.getString16Reader(),\n        ];\n\n        this.__root = this.PackMapCubeMapV3 = [\n          \"sampleArray\",\n          Utils.getArrayReader(this.PackMapCubeMapSampleV3),\n          \"paramsArray\",\n          Utils.getArrayReader(this.PackMapCubeMapParamsV3),\n        ];\n      },\n\n      // => Version: 2, ReferencedFunction: 0x452AB0\n      2: function () {\n        this.PackMapCubeMapSampleV2 = [\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"filenameDayDefault\",\n          Utils.getFileNameReader(),\n          \"filenameNightDefault\",\n          Utils.getFileNameReader(),\n          \"filenameDayScript\",\n          Utils.getFileNameReader(),\n          \"filenameNightScript\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackMapCubeMapParamsV2 = [\n          \"modulateColor\",\n          \"uint32\",\n          \"brightness\",\n          \"float32\",\n          \"contrast\",\n          \"float32\",\n          \"blurPasses\",\n          \"uint32\",\n        ];\n\n        this.__root = this.PackMapCubeMapV2 = [\n          \"sampleArray\",\n          Utils.getArrayReader(this.PackMapCubeMapSampleV2),\n          \"paramsArray\",\n          Utils.getArrayReader(this.PackMapCubeMapParamsV2),\n        ];\n      },\n\n      // => Version: 1, ReferencedFunction: 0xEB92D0\n      1: function () {\n        this.PackMapCubeMapSampleV1 = [\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"flags\",\n          \"uint32\",\n          \"dayPtr\",\n          Utils.getArrayReader(\"uint8\"),\n          \"nightPtr\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.PackMapCubeMapParamsV1 = [\n          \"modulateColor\",\n          \"uint32\",\n          \"brightness\",\n          \"float32\",\n          \"contrast\",\n          \"float32\",\n          \"blurPasses\",\n          \"uint32\",\n        ];\n\n        this.__root = this.PackMapCubeMapV1 = [\n          \"sampleArray\",\n          Utils.getArrayReader(this.PackMapCubeMapSampleV1),\n          \"paramsArray\",\n          Utils.getArrayReader(this.PackMapCubeMapParamsV1),\n        ];\n      },\n\n      // => Version: 0\n      0: function () {\n        this.PackMapCubeMapSampleV0 = [\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"flags\",\n          \"uint32\",\n          \"dataPtr\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.PackMapCubeMapParamsV0 = [\n          \"modulateColor\",\n          \"uint32\",\n          \"brightness\",\n          \"float32\",\n          \"contrast\",\n          \"float32\",\n          \"blurPasses\",\n          \"uint32\",\n        ];\n\n        this.__root = this.PackMapCubeMapV0 = [\n          \"sampleArray\",\n          Utils.getArrayReader(this.PackMapCubeMapSampleV0),\n          \"paramsArray\",\n          Utils.getArrayReader(this.PackMapCubeMapParamsV0),\n        ];\n      },\n    },\n  },\n];\n","const Utils = require(\"../../util/ParserUtils.js\");\n\nmodule.exports = [\n  /// ==================================================\n  /// Chunk: DATA, versions: 4, strucTab: 0x153BE08\n  /// ==================================================\n\n  {\n    name: \"DATA\",\n    versions: {\n      // => Version: 3, ReferencedFunction: 0x612960\n      3: function () {\n        this.PagedImageLayerDataV3 = [\n          \"rawDims\",\n          [\"[]\", \"uint32\", 2],\n          \"strippedDims\",\n          [\"[]\", \"uint32\", 2],\n          \"rawFormat\",\n          \"uint32\",\n          \"strippedFormat\",\n          \"uint32\",\n          \"diskFormat\",\n          \"uint32\",\n        ];\n\n        this.PagedImagePageDataV3 = [\n          \"layer\",\n          \"uint32\",\n          \"coord\",\n          [\"[]\", \"uint32\", 2],\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"flags\",\n          \"uint32\",\n          \"solidColor\",\n          [\"[]\", \"uint8\", 4],\n        ];\n\n        this.__root = this.PagedImageTableDataV3 = [\n          \"layers\",\n          Utils.getArrayReader(this.PagedImageLayerDataV3),\n          \"rawPages\",\n          Utils.getArrayReader(this.PagedImagePageDataV3),\n          \"strippedPages\",\n          Utils.getArrayReader(this.PagedImagePageDataV3),\n          \"flags\",\n          \"uint32\",\n        ];\n      },\n\n      // => Version: 2\n      2: function () {\n        this.PagedImageLayerDataV2 = [\n          \"dims\",\n          [\"[]\", \"uint32\", 2],\n          \"rawDims\",\n          [\"[]\", \"uint32\", 2],\n          \"diskFormat\",\n          \"uint32\",\n          \"rawFormat\",\n          \"uint32\",\n          \"strippedFormat\",\n          \"uint32\",\n        ];\n\n        this.PagedImagePageDataV2 = [\n          \"layer\",\n          \"uint32\",\n          \"coord\",\n          [\"[]\", \"uint32\", 2],\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"flags\",\n          \"uint32\",\n          \"solidColor\",\n          [\"[]\", \"uint8\", 4],\n        ];\n\n        this.__root = this.PagedImageTableDataV2 = [\n          \"layers\",\n          Utils.getArrayReader(this.PagedImageLayerDataV2),\n          \"pages\",\n          Utils.getArrayReader(this.PagedImagePageDataV2),\n          \"flags\",\n          \"uint32\",\n        ];\n      },\n\n      // => Version: 1\n      1: function () {\n        this.PagedImageLayerDataV1 = [\n          \"dims\",\n          [\"[]\", \"uint32\", 2],\n          \"rawDims\",\n          [\"[]\", \"uint32\", 2],\n          \"diskFormat\",\n          \"uint32\",\n          \"rawFormat\",\n          \"uint32\",\n          \"strippedFormat\",\n          \"uint32\",\n        ];\n\n        this.PagedImagePageDataV1 = [\n          \"layer\",\n          \"uint32\",\n          \"coord\",\n          [\"[]\", \"uint32\", 2],\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"flags\",\n          \"uint32\",\n          \"solidColor\",\n          [\"[]\", \"uint8\", 4],\n        ];\n\n        this.__root = this.PagedImageTableDataV1 = [\n          \"layers\",\n          Utils.getArrayReader(this.PagedImageLayerDataV1),\n          \"pages\",\n          Utils.getArrayReader(this.PagedImagePageDataV1),\n        ];\n      },\n\n      // => Version: 0\n      0: function () {\n        this.PagedImageEmbeddedPageDataV0 = [\n          \"layer\",\n          \"uint32\",\n          \"coord\",\n          [\"[]\", \"uint32\", 2],\n          \"rawData\",\n          Utils.getArrayReader(\"uint8\"),\n          \"compressedData\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.__root = this.PagedImageEmbeddedPagesDataV0 = [\n          \"pages\",\n          Utils.getArrayReader(this.PagedImageEmbeddedPageDataV0),\n        ];\n      },\n    },\n  },\n];\n","const Utils = require(\"../../util/ParserUtils.js\");\n\nmodule.exports = [\n  /// ==================================================\n  /// Chunk: dcal, versions: 10, strucTab: 0x1724720\n  /// ==================================================\n\n  {\n    name: \"dcal\",\n    versions: {\n      // => Version: 9, ReferencedFunction: 0xEBA2D0\n      9: function () {\n        this.PackMapDecalVertexV8 = [\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"normal\",\n          [\"[]\", \"float32\", 3],\n          \"tangent\",\n          [\"[]\", \"float32\", 3],\n          \"bitangent\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.PackMapDecalV9 = [\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"extents\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"textureScaleUV0\",\n          [\"[]\", \"float32\", 2],\n          \"textureOffsetUV0\",\n          [\"[]\", \"float32\", 2],\n          \"textureScaleUV1\",\n          [\"[]\", \"float32\", 2],\n          \"textureOffsetUV1\",\n          [\"[]\", \"float32\", 2],\n          \"materialFilename\",\n          Utils.getFileNameReader(),\n          \"textureFilenames\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"flags\",\n          \"uint32\",\n          \"animTranslation\",\n          [\"[]\", \"float32\", 2],\n          \"animScaleRangeX\",\n          [\"[]\", \"float32\", 2],\n          \"animScaleRangeY\",\n          [\"[]\", \"float32\", 2],\n          \"animScaleSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"animRotation\",\n          \"float32\",\n          \"surfaceBias\",\n          \"float32\",\n          \"constantTokens\",\n          Utils.getArrayReader(\"uint32\"),\n          \"constantValues\",\n          Utils.getArrayReader([\"[]\", \"float32\", 4]),\n          \"vertices\",\n          Utils.getArrayReader(this.PackMapDecalVertexV8),\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"propIds\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"projection\",\n          \"uint8\",\n          \"surfaceId\",\n          Utils.getQWordReader(),\n          \"id\",\n          Utils.getQWordReader(),\n        ];\n\n        this.__root = this.PackMapDecalsV9 = [\"decals\", Utils.getArrayReader(this.PackMapDecalV9)];\n      },\n\n      // => Version: 8\n      8: function () {\n        this.PackMapDecalVertexV7 = [\"position\", [\"[]\", \"float32\", 3]];\n\n        this.PackMapDecalV8 = [\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"extents\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"textureScaleUV0\",\n          [\"[]\", \"float32\", 2],\n          \"textureOffsetUV0\",\n          [\"[]\", \"float32\", 2],\n          \"textureScaleUV1\",\n          [\"[]\", \"float32\", 2],\n          \"textureOffsetUV1\",\n          [\"[]\", \"float32\", 2],\n          \"materialFilename\",\n          Utils.getFileNameReader(),\n          \"textureFilenames\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"flags\",\n          \"uint32\",\n          \"animTranslation\",\n          [\"[]\", \"float32\", 2],\n          \"animScaleRangeX\",\n          [\"[]\", \"float32\", 2],\n          \"animScaleRangeY\",\n          [\"[]\", \"float32\", 2],\n          \"animScaleSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"animRotation\",\n          \"float32\",\n          \"surfaceBias\",\n          \"float32\",\n          \"constantTokens\",\n          Utils.getArrayReader(\"uint32\"),\n          \"constantValues\",\n          Utils.getArrayReader([\"[]\", \"float32\", 4]),\n          \"vertices\",\n          Utils.getArrayReader(this.PackMapDecalVertexV7),\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"propIds\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"projection\",\n          \"uint8\",\n          \"surfaceId\",\n          Utils.getQWordReader(),\n          \"id\",\n          Utils.getQWordReader(),\n        ];\n\n        this.__root = this.PackMapDecalsV8 = [\"decals\", Utils.getArrayReader(this.PackMapDecalV8)];\n      },\n\n      // => Version: 7, ReferencedFunction: 0xEBA270\n      7: function () {\n        this.PackMapDecalVertexV6 = [\"position\", [\"[]\", \"float32\", 3]];\n\n        this.PackMapDecalV7 = [\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"extents\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"textureScaleUV0\",\n          [\"[]\", \"float32\", 2],\n          \"textureOffsetUV0\",\n          [\"[]\", \"float32\", 2],\n          \"textureScaleUV1\",\n          [\"[]\", \"float32\", 2],\n          \"textureOffsetUV1\",\n          [\"[]\", \"float32\", 2],\n          \"materialFilename\",\n          Utils.getFileNameReader(),\n          \"textureFilenames\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"flags\",\n          \"uint32\",\n          \"animTranslation\",\n          [\"[]\", \"float32\", 2],\n          \"animScaleRangeX\",\n          [\"[]\", \"float32\", 2],\n          \"animScaleRangeY\",\n          [\"[]\", \"float32\", 2],\n          \"animScaleSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"animRotation\",\n          \"float32\",\n          \"surfaceBias\",\n          \"float32\",\n          \"constantTokens\",\n          Utils.getArrayReader(\"uint32\"),\n          \"constantValues\",\n          Utils.getArrayReader([\"[]\", \"float32\", 4]),\n          \"vertices\",\n          Utils.getArrayReader(this.PackMapDecalVertexV6),\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"propIds\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"projection\",\n          \"uint8\",\n          \"id\",\n          Utils.getQWordReader(),\n        ];\n\n        this.__root = this.PackMapDecalsV7 = [\"decals\", Utils.getArrayReader(this.PackMapDecalV7)];\n      },\n\n      // => Version: 6\n      6: function () {\n        this.PackMapDecalVertexV5 = [\"position\", [\"[]\", \"float32\", 3]];\n\n        this.PackMapDecalV6 = [\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"extents\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"textureScaleUV0\",\n          [\"[]\", \"float32\", 2],\n          \"textureOffsetUV0\",\n          [\"[]\", \"float32\", 2],\n          \"textureScaleUV1\",\n          [\"[]\", \"float32\", 2],\n          \"textureOffsetUV1\",\n          [\"[]\", \"float32\", 2],\n          \"materialFilename\",\n          Utils.getFileNameReader(),\n          \"textureFilenames\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"flags\",\n          \"uint32\",\n          \"animTranslation\",\n          [\"[]\", \"float32\", 2],\n          \"animScaleRangeX\",\n          [\"[]\", \"float32\", 2],\n          \"animScaleRangeY\",\n          [\"[]\", \"float32\", 2],\n          \"animScaleSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"animRotation\",\n          \"float32\",\n          \"surfaceBias\",\n          \"float32\",\n          \"constantTokens\",\n          Utils.getArrayReader(\"uint32\"),\n          \"constantValues\",\n          Utils.getArrayReader([\"[]\", \"float32\", 4]),\n          \"vertices\",\n          Utils.getArrayReader(this.PackMapDecalVertexV5),\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"propIds\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"projection\",\n          \"uint8\",\n        ];\n\n        this.__root = this.PackMapDecalsV6 = [\"decals\", Utils.getArrayReader(this.PackMapDecalV6)];\n      },\n\n      // => Version: 5\n      5: function () {\n        this.PackMapDecalVertexV4 = [\"position\", [\"[]\", \"float32\", 3]];\n\n        this.PackMapDecalV5 = [\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"extents\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"textureScaleUV0\",\n          [\"[]\", \"float32\", 2],\n          \"textureOffsetUV0\",\n          [\"[]\", \"float32\", 2],\n          \"textureScaleUV1\",\n          [\"[]\", \"float32\", 2],\n          \"textureOffsetUV1\",\n          [\"[]\", \"float32\", 2],\n          \"materialFilename\",\n          Utils.getFileNameReader(),\n          \"textureFilenames\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"flags\",\n          \"uint32\",\n          \"animTranslation\",\n          [\"[]\", \"float32\", 2],\n          \"animScaleRangeX\",\n          [\"[]\", \"float32\", 2],\n          \"animScaleRangeY\",\n          [\"[]\", \"float32\", 2],\n          \"animScaleSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"animRotation\",\n          \"float32\",\n          \"surfaceBias\",\n          \"float32\",\n          \"constantTokens\",\n          Utils.getArrayReader(\"uint32\"),\n          \"constantValues\",\n          Utils.getArrayReader([\"[]\", \"float32\", 4]),\n          \"vertices\",\n          Utils.getArrayReader(this.PackMapDecalVertexV4),\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"propIds\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.__root = this.PackMapDecalsV5 = [\"decals\", Utils.getArrayReader(this.PackMapDecalV5)];\n      },\n\n      // => Version: 4\n      4: function () {\n        this.PackMapDecalV4 = [\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"extents\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"textureScaleUV0\",\n          [\"[]\", \"float32\", 2],\n          \"textureOffsetUV0\",\n          [\"[]\", \"float32\", 2],\n          \"textureScaleUV1\",\n          [\"[]\", \"float32\", 2],\n          \"textureOffsetUV1\",\n          [\"[]\", \"float32\", 2],\n          \"materialFilename\",\n          Utils.getFileNameReader(),\n          \"textureFilenames\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"flags\",\n          \"uint32\",\n          \"animTranslation\",\n          [\"[]\", \"float32\", 2],\n          \"animScaleRangeX\",\n          [\"[]\", \"float32\", 2],\n          \"animScaleRangeY\",\n          [\"[]\", \"float32\", 2],\n          \"animScaleSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"animRotation\",\n          \"float32\",\n          \"surfaceBias\",\n          \"float32\",\n          \"constantTokens\",\n          Utils.getArrayReader(\"uint32\"),\n          \"constantValues\",\n          Utils.getArrayReader([\"[]\", \"float32\", 4]),\n        ];\n\n        this.__root = this.PackMapDecalsV4 = [\"decals\", Utils.getArrayReader(this.PackMapDecalV4)];\n      },\n\n      // => Version: 3, ReferencedFunction: 0xEBA1F0\n      3: function () {\n        this.PackMapDecalV3 = [\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"extents\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"textureScaleUV0\",\n          [\"[]\", \"float32\", 2],\n          \"textureOffsetUV0\",\n          [\"[]\", \"float32\", 2],\n          \"textureScaleUV1\",\n          [\"[]\", \"float32\", 2],\n          \"textureOffsetUV1\",\n          [\"[]\", \"float32\", 2],\n          \"materialFilename\",\n          Utils.getFileNameReader(),\n          \"textureFilenames\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"flags\",\n          \"uint32\",\n          \"animTranslation\",\n          [\"[]\", \"float32\", 2],\n          \"animScaleRangeX\",\n          [\"[]\", \"float32\", 2],\n          \"animScaleRangeY\",\n          [\"[]\", \"float32\", 2],\n          \"animScaleSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"animRotation\",\n          \"float32\",\n          \"surfaceBias\",\n          \"float32\",\n        ];\n\n        this.__root = this.PackMapDecalsV3 = [\"decals\", Utils.getArrayReader(this.PackMapDecalV3)];\n      },\n\n      // => Version: 2\n      2: function () {\n        this.PackMapDecalV2 = [\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"extents\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"textureScale\",\n          [\"[]\", \"float32\", 2],\n          \"textureOffset\",\n          [\"[]\", \"float32\", 2],\n          \"materialFilename\",\n          Utils.getFileNameReader(),\n          \"textureFilenames\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"flags\",\n          \"uint32\",\n          \"animTranslation\",\n          [\"[]\", \"float32\", 2],\n          \"animScaleRangeX\",\n          [\"[]\", \"float32\", 2],\n          \"animScaleRangeY\",\n          [\"[]\", \"float32\", 2],\n          \"animScaleSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"animRotation\",\n          \"float32\",\n        ];\n\n        this.__root = this.PackMapDecalsV2 = [\"decals\", Utils.getArrayReader(this.PackMapDecalV2)];\n      },\n\n      // => Version: 1\n      1: function () {\n        this.PackMapDecalV1 = [\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"extents\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"textureScale\",\n          [\"[]\", \"float32\", 2],\n          \"textureOffset\",\n          [\"[]\", \"float32\", 2],\n          \"materialFilename\",\n          Utils.getFileNameReader(),\n          \"textureFilenames\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"flags\",\n          \"uint32\",\n        ];\n\n        this.__root = this.PackMapDecalsV1 = [\"decals\", Utils.getArrayReader(this.PackMapDecalV1)];\n      },\n    },\n  },\n];\n","const Utils = require(\"../../util/ParserUtils.js\");\n\nmodule.exports = [\n  /// ==================================================\n  /// Chunk: DX9S, versions: 12, strucTab: 0x1528AE0\n  /// ==================================================\n\n  {\n    name: \"DX9S\",\n    versions: {\n      // => Version: 11, ReferencedFunction: 0x5AE350\n      11: function () {\n        this.AmatDx9SamplerV11 = [\n          \"textureIndex\",\n          \"uint32\",\n          \"state\",\n          Utils.getArrayReader(\"uint32\"),\n          \"usesBindTexture\",\n          \"uint32\",\n        ];\n\n        this.AmatDx9ShaderV11 = [\n          \"shader\",\n          Utils.getArrayReader(\"uint32\"),\n          \"constRegisters\",\n          Utils.getArrayReader(\"uint32\"),\n          \"constTokens\",\n          Utils.getArrayReader(\"uint32\"),\n          \"instructionCount\",\n          \"uint16\",\n        ];\n\n        this.AmatDx9EffectV11 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"renderStates\",\n          Utils.getArrayReader(\"uint32\"),\n          \"samplerIndex\",\n          Utils.getArrayReader(\"uint32\"),\n          \"pixelShader\",\n          \"uint32\",\n          \"vertexShader\",\n          \"uint32\",\n          \"texGen\",\n          Utils.getArrayReader(\"uint32\"),\n          \"vsGenFlags\",\n          \"uint32\",\n          \"passFlags\",\n          \"uint32\",\n        ];\n\n        this.AmatDx9PassV11 = [\"effects\", Utils.getRefArrayReader(this.AmatDx9EffectV11)];\n\n        this.AmatDx9TechniqueV11 = [\n          \"name\",\n          Utils.getStringReader(),\n          \"passes\",\n          Utils.getArrayReader(this.AmatDx9PassV11),\n          \"maxPsVersion\",\n          \"uint16\",\n          \"maxVsVersion\",\n          \"uint16\",\n        ];\n\n        this.__root = this.AmatDx9MaterialV11 = [\n          \"samplers\",\n          Utils.getArrayReader(this.AmatDx9SamplerV11),\n          \"shaders\",\n          Utils.getArrayReader(this.AmatDx9ShaderV11),\n          \"techniques\",\n          Utils.getArrayReader(this.AmatDx9TechniqueV11),\n          \"useLegacyBindTextures\",\n          \"uint32\",\n        ];\n      },\n\n      // => Version: 10\n      10: function () {\n        this.AmatDx9SamplerV10 = [\"textureIndex\", \"uint32\", \"state\", Utils.getArrayReader(\"uint32\")];\n\n        this.AmatDx9ShaderV10 = [\n          \"shader\",\n          Utils.getArrayReader(\"uint32\"),\n          \"constRegisters\",\n          Utils.getArrayReader(\"uint32\"),\n          \"constTokens\",\n          Utils.getArrayReader(\"uint32\"),\n          \"instructionCount\",\n          \"uint16\",\n        ];\n\n        this.AmatDx9EffectV10 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"renderStates\",\n          Utils.getArrayReader(\"uint32\"),\n          \"samplerIndex\",\n          Utils.getArrayReader(\"uint32\"),\n          \"pixelShader\",\n          \"uint32\",\n          \"vertexShader\",\n          \"uint32\",\n          \"texGen\",\n          Utils.getArrayReader(\"uint32\"),\n          \"texTransform\",\n          Utils.getArrayReader(\"uint32\"),\n          \"vsGenFlags\",\n          \"uint32\",\n          \"passFlags\",\n          \"uint32\",\n        ];\n\n        this.AmatDx9PassV10 = [\"effects\", Utils.getRefArrayReader(this.AmatDx9EffectV10)];\n\n        this.AmatDx9TechniqueV10 = [\n          \"name\",\n          Utils.getStringReader(),\n          \"passes\",\n          Utils.getArrayReader(this.AmatDx9PassV10),\n          \"maxPsVersion\",\n          \"uint16\",\n          \"maxVsVersion\",\n          \"uint16\",\n        ];\n\n        this.__root = this.AmatDx9MaterialV10 = [\n          \"samplers\",\n          Utils.getArrayReader(this.AmatDx9SamplerV10),\n          \"shaders\",\n          Utils.getArrayReader(this.AmatDx9ShaderV10),\n          \"techniques\",\n          Utils.getArrayReader(this.AmatDx9TechniqueV10),\n        ];\n      },\n\n      // => Version: 9, ReferencedFunction: 0x5AE990\n      9: function () {\n        this.AmatDx9SamplerV9 = [\"textureIndex\", \"uint32\", \"state\", Utils.getArrayReader(\"uint32\")];\n\n        this.AmatDx9ShaderV9 = [\n          \"shader\",\n          Utils.getArrayReader(\"uint32\"),\n          \"constRegisters\",\n          Utils.getArrayReader(\"uint32\"),\n          \"constTokens\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n\n        this.AmatDx9EffectV9 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"renderStates\",\n          Utils.getArrayReader(\"uint32\"),\n          \"samplerIndex\",\n          Utils.getArrayReader(\"uint32\"),\n          \"pixelShader\",\n          \"uint32\",\n          \"vertexShader\",\n          \"uint32\",\n          \"texGen\",\n          Utils.getArrayReader(\"uint32\"),\n          \"texTransform\",\n          Utils.getArrayReader(\"uint32\"),\n          \"vsGenFlags\",\n          \"uint32\",\n          \"passFlags\",\n          \"uint32\",\n        ];\n\n        this.AmatDx9PassV9 = [\"effects\", Utils.getRefArrayReader(this.AmatDx9EffectV9)];\n\n        this.AmatDx9TechniqueV9 = [\n          \"name\",\n          Utils.getStringReader(),\n          \"passes\",\n          Utils.getArrayReader(this.AmatDx9PassV9),\n          \"maxPsVersion\",\n          \"uint16\",\n          \"maxVsVersion\",\n          \"uint16\",\n        ];\n\n        this.__root = this.AmatDx9MaterialV9 = [\n          \"samplers\",\n          Utils.getArrayReader(this.AmatDx9SamplerV9),\n          \"shaders\",\n          Utils.getArrayReader(this.AmatDx9ShaderV9),\n          \"techniques\",\n          Utils.getArrayReader(this.AmatDx9TechniqueV9),\n        ];\n      },\n\n      // => Version: 8, ReferencedFunction: 0x5AE760\n      8: function () {\n        this.AmatDx9SamplerV8 = [\"textureIndex\", \"uint32\", \"state\", Utils.getArrayReader(\"uint32\")];\n\n        this.AmatDx9ShaderV8 = [\n          \"shader\",\n          Utils.getArrayReader(\"uint32\"),\n          \"constRegisters\",\n          Utils.getArrayReader(\"uint32\"),\n          \"constTokens\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n\n        this.AmatDx9EffectV8 = [\n          \"renderStates\",\n          Utils.getArrayReader(\"uint32\"),\n          \"samplerIndex\",\n          Utils.getArrayReader(\"uint32\"),\n          \"pixelShader\",\n          \"uint32\",\n          \"vertexShader\",\n          \"uint32\",\n          \"texGen\",\n          Utils.getArrayReader(\"uint32\"),\n          \"texTransform\",\n          Utils.getArrayReader(\"uint32\"),\n          \"vsGenFlags\",\n          \"uint32\",\n          \"passFlags\",\n          \"uint32\",\n        ];\n\n        this.AmatDx9PassV8 = [\"effects\", Utils.getRefArrayReader(this.AmatDx9EffectV8)];\n\n        this.AmatDx9TechniqueV8 = [\n          \"name\",\n          Utils.getStringReader(),\n          \"passes\",\n          Utils.getArrayReader(this.AmatDx9PassV8),\n          \"maxPsVersion\",\n          \"uint16\",\n          \"maxVsVersion\",\n          \"uint16\",\n        ];\n\n        this.__root = this.AmatDx9MaterialV8 = [\n          \"samplers\",\n          Utils.getArrayReader(this.AmatDx9SamplerV8),\n          \"shaders\",\n          Utils.getArrayReader(this.AmatDx9ShaderV8),\n          \"techniques\",\n          Utils.getArrayReader(this.AmatDx9TechniqueV8),\n        ];\n      },\n\n      // => Version: 7, ReferencedFunction: 0x5AE6E0\n      7: function () {\n        this.AmatDx9SamplerV7 = [\"textureIndex\", \"uint32\", \"state\", Utils.getArrayReader(\"uint32\")];\n\n        this.AmatDx9ShaderV7 = [\n          \"shader\",\n          Utils.getArrayReader(\"uint32\"),\n          \"constRegisters\",\n          Utils.getArrayReader(\"uint32\"),\n          \"constTokens\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n\n        this.AmatDx9EffectV7 = [\n          \"renderStates\",\n          Utils.getArrayReader(\"uint32\"),\n          \"samplerIndex\",\n          Utils.getArrayReader(\"uint32\"),\n          \"pixelShader\",\n          \"uint32\",\n          \"vertexShader\",\n          \"uint32\",\n          \"texGen\",\n          Utils.getArrayReader(\"uint32\"),\n          \"texTransform\",\n          Utils.getArrayReader(\"uint32\"),\n          \"vsGenFlags\",\n          \"uint32\",\n          \"passFlags\",\n          \"uint32\",\n        ];\n\n        this.AmatDx9PassV7 = [\"effects\", [\"[]\", this.AmatDx9EffectV7, 8]];\n\n        this.AmatDx9TechniqueV7 = [\n          \"name\",\n          Utils.getStringReader(),\n          \"passes\",\n          Utils.getArrayReader(this.AmatDx9PassV7),\n          \"maxPsVersion\",\n          \"uint16\",\n          \"maxVsVersion\",\n          \"uint16\",\n        ];\n\n        this.__root = this.AmatDx9MaterialV7 = [\n          \"samplers\",\n          Utils.getArrayReader(this.AmatDx9SamplerV7),\n          \"shaders\",\n          Utils.getArrayReader(this.AmatDx9ShaderV7),\n          \"techniques\",\n          Utils.getArrayReader(this.AmatDx9TechniqueV7),\n        ];\n      },\n\n      // => Version: 6, ReferencedFunction: 0x5AE690\n      6: function () {\n        this.AmatDx9SamplerV6 = [\"textureIndex\", \"uint32\", \"state\", Utils.getArrayReader(\"uint32\")];\n\n        this.AmatDx9ShaderV6 = [\n          \"shader\",\n          Utils.getArrayReader(\"uint32\"),\n          \"constRegisters\",\n          Utils.getArrayReader(\"uint32\"),\n          \"constTokens\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n\n        this.AmatDx9EffectV6 = [\n          \"renderStates\",\n          Utils.getArrayReader(\"uint32\"),\n          \"samplerIndex\",\n          Utils.getArrayReader(\"uint32\"),\n          \"pixelShader\",\n          \"uint32\",\n          \"vertexShader\",\n          \"uint32\",\n          \"texGen\",\n          Utils.getArrayReader(\"uint32\"),\n          \"texTransform\",\n          Utils.getArrayReader(\"uint32\"),\n          \"vsGenFlags\",\n          \"uint32\",\n          \"passFlags\",\n          \"uint32\",\n        ];\n\n        this.AmatDx9PassV6 = [\"effects\", [\"[]\", this.AmatDx9EffectV6, 8]];\n\n        this.AmatDx9TechniqueV6 = [\n          \"name\",\n          Utils.getStringReader(),\n          \"passes\",\n          Utils.getArrayReader(this.AmatDx9PassV6),\n          \"maxPsVersion\",\n          \"uint16\",\n          \"maxVsVersion\",\n          \"uint16\",\n        ];\n\n        this.__root = this.AmatDx9MaterialV6 = [\n          \"samplers\",\n          Utils.getArrayReader(this.AmatDx9SamplerV6),\n          \"shaders\",\n          Utils.getArrayReader(this.AmatDx9ShaderV6),\n          \"techniques\",\n          Utils.getArrayReader(this.AmatDx9TechniqueV6),\n        ];\n      },\n\n      // => Version: 5, ReferencedFunction: 0x5AE5A0\n      5: function () {\n        this.AmatDx9SamplerV5 = [\"textureIndex\", \"uint32\", \"state\", Utils.getArrayReader(\"uint32\")];\n\n        this.AmatDx9ShaderV5 = [\n          \"shader\",\n          Utils.getArrayReader(\"uint32\"),\n          \"constRegisters\",\n          Utils.getArrayReader(\"uint32\"),\n          \"constTokens\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n\n        this.AmatDx9EffectV5 = [\n          \"renderStates\",\n          Utils.getArrayReader(\"uint32\"),\n          \"samplerIndex\",\n          Utils.getArrayReader(\"uint32\"),\n          \"pixelShader\",\n          \"uint32\",\n          \"vertexShader\",\n          \"uint32\",\n          \"texGen\",\n          Utils.getArrayReader(\"uint32\"),\n          \"texTransform\",\n          Utils.getArrayReader(\"uint32\"),\n          \"vsGenFlags\",\n          \"uint32\",\n          \"passFlags\",\n          \"uint32\",\n        ];\n\n        this.AmatDx9PassV5 = [\"effects\", [\"[]\", this.AmatDx9EffectV5, 7]];\n\n        this.AmatDx9TechniqueV5 = [\n          \"name\",\n          Utils.getStringReader(),\n          \"sortTri\",\n          \"uint32\",\n          \"passes\",\n          Utils.getArrayReader(this.AmatDx9PassV5),\n          \"maxPsVersion\",\n          \"uint16\",\n          \"maxVsVersion\",\n          \"uint16\",\n        ];\n\n        this.__root = this.AmatDx9MaterialV5 = [\n          \"samplers\",\n          Utils.getArrayReader(this.AmatDx9SamplerV5),\n          \"shaders\",\n          Utils.getArrayReader(this.AmatDx9ShaderV5),\n          \"techniques\",\n          Utils.getArrayReader(this.AmatDx9TechniqueV5),\n        ];\n      },\n\n      // => Version: 4\n      4: function () {\n        this.AmatDx9SamplerV4 = [\"textureIndex\", \"uint32\", \"state\", Utils.getArrayReader(\"uint32\")];\n\n        this.AmatDx9ShaderV4 = [\n          \"shader\",\n          Utils.getArrayReader(\"uint32\"),\n          \"constRegisters\",\n          Utils.getArrayReader(\"uint32\"),\n          \"constTokens\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n\n        this.AmatDx9EffectV4 = [\n          \"renderStates\",\n          Utils.getArrayReader(\"uint32\"),\n          \"samplerIndex\",\n          Utils.getArrayReader(\"uint32\"),\n          \"pixelShader\",\n          \"uint32\",\n          \"vertexShader\",\n          \"uint32\",\n          \"texGen\",\n          Utils.getArrayReader(\"uint32\"),\n          \"texTransform\",\n          Utils.getArrayReader(\"uint32\"),\n          \"vsGenFlags\",\n          \"uint32\",\n          \"passFlags\",\n          \"uint32\",\n        ];\n\n        this.AmatDx9PassV4 = [\"effects\", [\"[]\", this.AmatDx9EffectV4, 7]];\n\n        this.AmatDx9TechniqueV4 = [\n          \"name\",\n          Utils.getStringReader(),\n          \"sortTri\",\n          \"uint32\",\n          \"passes\",\n          Utils.getArrayReader(this.AmatDx9PassV4),\n          \"maxPsVersion\",\n          \"uint16\",\n          \"maxVsVersion\",\n          \"uint16\",\n        ];\n\n        this.__root = this.AmatDx9MaterialV4 = [\n          \"samplers\",\n          Utils.getArrayReader(this.AmatDx9SamplerV4),\n          \"shaders\",\n          Utils.getArrayReader(this.AmatDx9ShaderV4),\n          \"techniques\",\n          Utils.getArrayReader(this.AmatDx9TechniqueV4),\n        ];\n      },\n\n      // => Version: 3\n      3: function () {\n        this.AmatDx9SamplerV3 = [\"textureIndex\", \"uint32\", \"state\", Utils.getArrayReader(\"uint32\")];\n\n        this.AmatDx9ShaderV3 = [\n          \"shader\",\n          Utils.getArrayReader(\"uint32\"),\n          \"constRegisters\",\n          Utils.getArrayReader(\"uint32\"),\n          \"constTokens\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n\n        this.AmatDx9EffectV3 = [\n          \"renderStates\",\n          Utils.getArrayReader(\"uint32\"),\n          \"samplerIndex\",\n          Utils.getArrayReader(\"uint32\"),\n          \"pixelShader\",\n          \"uint32\",\n          \"vertexShader\",\n          \"uint32\",\n          \"texGen\",\n          Utils.getArrayReader(\"uint32\"),\n          \"texTransform\",\n          Utils.getArrayReader(\"uint32\"),\n          \"vsGenFlags\",\n          \"uint32\",\n          \"passFlags\",\n          \"uint32\",\n        ];\n\n        this.AmatDx9PassV3 = [\"effects\", [\"[]\", this.AmatDx9EffectV3, 7]];\n\n        this.AmatDx9TechniqueV3 = [\n          \"name\",\n          Utils.getStringReader(),\n          \"sortTri\",\n          \"uint32\",\n          \"passes\",\n          Utils.getArrayReader(this.AmatDx9PassV3),\n          \"maxPsVersion\",\n          \"uint16\",\n          \"maxVsVersion\",\n          \"uint16\",\n        ];\n\n        this.__root = this.AmatDx9MaterialV3 = [\n          \"samplers\",\n          Utils.getArrayReader(this.AmatDx9SamplerV3),\n          \"shaders\",\n          Utils.getArrayReader(this.AmatDx9ShaderV3),\n          \"techniques\",\n          Utils.getArrayReader(this.AmatDx9TechniqueV3),\n        ];\n      },\n\n      // => Version: 2, ReferencedFunction: 0x5AE370\n      2: function () {\n        this.AmatDx9SamplerV2 = [\"textureIndex\", \"uint32\", \"state\", Utils.getArrayReader(\"uint32\")];\n\n        this.AmatDx9ShaderV2 = [\n          \"shader\",\n          Utils.getArrayReader(\"uint32\"),\n          \"constRegisters\",\n          Utils.getArrayReader(\"uint32\"),\n          \"constTokens\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n\n        this.AmatDx9EffectV2 = [\n          \"renderStates\",\n          Utils.getArrayReader(\"uint32\"),\n          \"samplerIndex\",\n          Utils.getArrayReader(\"uint32\"),\n          \"pixelShader\",\n          \"uint32\",\n          \"vertexShader\",\n          \"uint32\",\n          \"texGen\",\n          Utils.getArrayReader(\"uint32\"),\n          \"texTransform\",\n          Utils.getArrayReader(\"uint32\"),\n          \"vsGenFlags\",\n          \"uint32\",\n          \"passFlags\",\n          \"uint32\",\n        ];\n\n        this.AmatDx9PassV2 = [\"effects\", [\"[]\", this.AmatDx9EffectV2, 7]];\n\n        this.AmatDx9TechniqueV2 = [\n          \"name\",\n          Utils.getStringReader(),\n          \"sortTri\",\n          \"uint32\",\n          \"passes\",\n          Utils.getArrayReader(this.AmatDx9PassV2),\n          \"maxPsVersion\",\n          \"uint16\",\n          \"maxVsVersion\",\n          \"uint16\",\n        ];\n\n        this.__root = this.AmatDx9MaterialV2 = [\n          \"samplers\",\n          Utils.getArrayReader(this.AmatDx9SamplerV2),\n          \"shaders\",\n          Utils.getArrayReader(this.AmatDx9ShaderV2),\n          \"techniques\",\n          Utils.getArrayReader(this.AmatDx9TechniqueV2),\n        ];\n      },\n\n      // => Version: 1, ReferencedFunction: 0x5AE1C0\n      1: function () {\n        this.AmatDx9SamplerV1 = [\"textureIndex\", \"uint32\", \"state\", Utils.getArrayReader(\"uint32\")];\n\n        this.AmatDx9ShaderV1 = [\n          \"shader\",\n          Utils.getArrayReader(\"uint32\"),\n          \"constRegisters\",\n          Utils.getArrayReader(\"uint32\"),\n          \"constTokens\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n\n        this.AmatDx9RenderStatesV1 = [\"renderStates\", Utils.getArrayReader(\"uint32\")];\n\n        this.AmatDx9PassV1 = [\n          \"effectRenderStates\",\n          Utils.getRefArrayReader(this.AmatDx9RenderStatesV1),\n          \"samplerIndex\",\n          Utils.getArrayReader(\"uint32\"),\n          \"pixelShader\",\n          [\"[]\", \"uint32\", 5],\n          \"vertexShader\",\n          \"uint32\",\n          \"texGen\",\n          Utils.getArrayReader(\"uint32\"),\n          \"texTransform\",\n          Utils.getArrayReader(\"uint32\"),\n          \"vsGenFlags\",\n          \"uint32\",\n          \"passFlags\",\n          [\"[]\", \"uint32\", 5],\n        ];\n\n        this.AmatDx9TechniqueV1 = [\n          \"name\",\n          Utils.getStringReader(),\n          \"sortTri\",\n          \"uint32\",\n          \"passes\",\n          Utils.getArrayReader(this.AmatDx9PassV1),\n          \"maxPsVersion\",\n          \"uint16\",\n          \"maxVsVersion\",\n          \"uint16\",\n        ];\n\n        this.__root = this.AmatDx9MaterialV1 = [\n          \"samplers\",\n          Utils.getArrayReader(this.AmatDx9SamplerV1),\n          \"shaders\",\n          Utils.getArrayReader(this.AmatDx9ShaderV1),\n          \"techniques\",\n          Utils.getArrayReader(this.AmatDx9TechniqueV1),\n        ];\n      },\n\n      // => Version: 0\n      0: function () {\n        this.AmatDx9SamplerV0 = [\"textureIndex\", \"uint32\", \"state\", Utils.getArrayReader(\"uint32\")];\n\n        this.AmatDx9ShaderV0 = [\n          \"shader\",\n          Utils.getArrayReader(\"uint32\"),\n          \"constRegisters\",\n          Utils.getArrayReader(\"uint32\"),\n          \"constTokens\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n\n        this.AmatDx9PassV0 = [\n          \"renderState\",\n          Utils.getArrayReader(\"uint32\"),\n          \"samplerIndex\",\n          Utils.getArrayReader(\"uint32\"),\n          \"pixelShader\",\n          \"uint32\",\n          \"vertexShader\",\n          \"uint32\",\n          \"texGen\",\n          Utils.getArrayReader(\"uint32\"),\n          \"texTransform\",\n          Utils.getArrayReader(\"uint32\"),\n          \"vsGenFlags\",\n          \"uint32\",\n          \"passFlags\",\n          \"uint32\",\n        ];\n\n        this.AmatDx9TechniqueV0 = [\n          \"name\",\n          Utils.getStringReader(),\n          \"sortTri\",\n          \"uint32\",\n          \"passes\",\n          Utils.getArrayReader(this.AmatDx9PassV0),\n          \"maxPsVersion\",\n          \"uint16\",\n          \"maxVsVersion\",\n          \"uint16\",\n        ];\n\n        this.__root = this.AmatDx9MaterialV0 = [\n          \"samplers\",\n          Utils.getArrayReader(this.AmatDx9SamplerV0),\n          \"shaders\",\n          Utils.getArrayReader(this.AmatDx9ShaderV0),\n          \"techniques\",\n          Utils.getArrayReader(this.AmatDx9TechniqueV0),\n        ];\n      },\n    },\n  },\n];\n","const Utils = require(\"../../util/ParserUtils.js\");\n\nmodule.exports = [\n  /// ==================================================\n  /// Chunk: edit, versions: 17, strucTab: 0x1724B58\n  /// ==================================================\n\n  {\n    name: \"edit\",\n    versions: {\n      // => Version: 16, ReferencedFunction: 0x452AB0\n      16: function () {\n        this.MapEditLayerItem = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"moduleId\",\n          \"uint32\",\n          \"layerFlags\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n\n        this.MapEditLayers = [\n          \"layerStates\",\n          Utils.getArrayReader(\"uint8\"),\n          \"layerNames\",\n          Utils.getArrayReader(Utils.getString16Reader()),\n          \"layerIds\",\n          Utils.getArrayReader(\"uint32\"),\n          \"items\",\n          Utils.getArrayReader(this.MapEditLayerItem),\n        ];\n\n        this.PackMapEditAnnotation = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"flags\",\n          \"uint32\",\n          \"anchors\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n          \"zRange\",\n          [\"[]\", \"float32\", 2],\n        ];\n\n        this.PackMapEditAnnotations = [\"annotations\", Utils.getArrayReader(this.PackMapEditAnnotation)];\n\n        this.PackMapEditDirtyChunks = [\"dirtyFlags\", \"uint32\", \"chunkCoord\", [\"[]\", \"uint32\", 2]];\n\n        this.MapEditCamLocations = [\n          \"attack\",\n          \"float32\",\n          \"rotation\",\n          \"float32\",\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEditDirtyChunks = [\"flags\", \"uint32\", \"position\", [\"[]\", \"float32\", 3]];\n\n        this.PackMapEditSurfacePoly = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"surfaceType\",\n          \"uint32\",\n          \"vertices\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n          \"range\",\n          [\"[]\", \"float32\", 2],\n        ];\n\n        this.PackMapEditSurfaceRoadNode = [\"position\", [\"[]\", \"float32\", 3], \"radius\", \"float32\"];\n\n        this.PackMapEditSurfaceRoad = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"surfaceType\",\n          \"uint32\",\n          \"nodes\",\n          Utils.getArrayReader(this.PackMapEditSurfaceRoadNode),\n        ];\n\n        this.PackMapEditNavmeshGenPropMode = [\n          \"propId\",\n          Utils.getQWordReader(),\n          \"mode\",\n          \"uint8\",\n          \"animSequence\",\n          Utils.getQWordReader(),\n        ];\n\n        this.PackMapEditNavMeshData = [\n          \"floodPoints\",\n          Utils.getArrayReader(this.PackMapEditDirtyChunks),\n          \"surfacePolys\",\n          Utils.getArrayReader(this.PackMapEditSurfacePoly),\n          \"surfaceRoads\",\n          Utils.getArrayReader(this.PackMapEditSurfaceRoad),\n          \"propModesForGeneration\",\n          Utils.getArrayReader(this.PackMapEditNavmeshGenPropMode),\n        ];\n\n        this.MapEditSnapPoint = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"moduleId\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"scale\",\n          \"float32\",\n        ];\n\n        this.MapEditMeasureSpan = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"substrateId0\",\n          Utils.getQWordReader(),\n          \"substrateId1\",\n          Utils.getQWordReader(),\n          \"substrateModuleId0\",\n          \"uint32\",\n          \"substrateModuleId1\",\n          \"uint32\",\n          \"position0\",\n          [\"[]\", \"float32\", 3],\n          \"position1\",\n          [\"[]\", \"float32\", 3],\n          \"limits\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.__root = this.MapEditData = [\n          \"layers\",\n          this.MapEditLayers,\n          \"annotations\",\n          this.PackMapEditAnnotations,\n          \"dirtyChunks\",\n          Utils.getArrayReader(this.PackMapEditDirtyChunks),\n          \"camLocations\",\n          Utils.getArrayReader(this.MapEditCamLocations),\n          \"navMeshData\",\n          this.PackMapEditNavMeshData,\n          \"snapPoints\",\n          Utils.getArrayReader(this.MapEditSnapPoint),\n          \"measureSpans\",\n          Utils.getArrayReader(this.MapEditMeasureSpan),\n          \"mapHome\",\n          Utils.getString16Reader(),\n          \"homeSave\",\n          \"uint8\",\n          \"reserved\",\n          Utils.getString16Reader(),\n        ];\n      },\n\n      // => Version: 15, ReferencedFunction: 0x452AB0\n      15: function () {\n        this.MapEditLayerItem = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"moduleId\",\n          \"uint32\",\n          \"layerFlags\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n\n        this.MapEditLayers = [\n          \"layerStates\",\n          Utils.getArrayReader(\"uint8\"),\n          \"layerNames\",\n          Utils.getArrayReader(Utils.getString16Reader()),\n          \"layerIds\",\n          Utils.getArrayReader(\"uint32\"),\n          \"items\",\n          Utils.getArrayReader(this.MapEditLayerItem),\n        ];\n\n        this.PackMapEditAnnotation = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"flags\",\n          \"uint32\",\n          \"anchors\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n          \"zRange\",\n          [\"[]\", \"float32\", 2],\n        ];\n\n        this.PackMapEditAnnotations = [\"annotations\", Utils.getArrayReader(this.PackMapEditAnnotation)];\n\n        this.PackMapEditDirtyChunks = [\"dirtyFlags\", \"uint32\", \"chunkCoord\", [\"[]\", \"uint32\", 2]];\n\n        this.MapEditCamLocations = [\n          \"attack\",\n          \"float32\",\n          \"rotation\",\n          \"float32\",\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEditDirtyChunks = [\"flags\", \"uint32\", \"position\", [\"[]\", \"float32\", 3]];\n\n        this.PackMapEditSurfacePoly = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"surfaceType\",\n          \"uint32\",\n          \"vertices\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n          \"range\",\n          [\"[]\", \"float32\", 2],\n        ];\n\n        this.PackMapEditSurfaceRoadNode = [\"position\", [\"[]\", \"float32\", 3], \"radius\", \"float32\"];\n\n        this.PackMapEditSurfaceRoad = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"surfaceType\",\n          \"uint32\",\n          \"nodes\",\n          Utils.getArrayReader(this.PackMapEditSurfaceRoadNode),\n        ];\n\n        this.PackMapEditNavMeshData = [\n          \"floodPoints\",\n          Utils.getArrayReader(this.PackMapEditDirtyChunks),\n          \"surfacePolys\",\n          Utils.getArrayReader(this.PackMapEditSurfacePoly),\n          \"surfaceRoads\",\n          Utils.getArrayReader(this.PackMapEditSurfaceRoad),\n        ];\n\n        this.MapEditSnapPoint = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"moduleId\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"scale\",\n          \"float32\",\n        ];\n\n        this.MapEditMeasureSpan = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"substrateId0\",\n          Utils.getQWordReader(),\n          \"substrateId1\",\n          Utils.getQWordReader(),\n          \"substrateModuleId0\",\n          \"uint32\",\n          \"substrateModuleId1\",\n          \"uint32\",\n          \"position0\",\n          [\"[]\", \"float32\", 3],\n          \"position1\",\n          [\"[]\", \"float32\", 3],\n          \"limits\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.__root = this.MapEditData = [\n          \"layers\",\n          this.MapEditLayers,\n          \"annotations\",\n          this.PackMapEditAnnotations,\n          \"dirtyChunks\",\n          Utils.getArrayReader(this.PackMapEditDirtyChunks),\n          \"camLocations\",\n          Utils.getArrayReader(this.MapEditCamLocations),\n          \"navMeshData\",\n          this.PackMapEditNavMeshData,\n          \"snapPoints\",\n          Utils.getArrayReader(this.MapEditSnapPoint),\n          \"measureSpans\",\n          Utils.getArrayReader(this.MapEditMeasureSpan),\n          \"mapHome\",\n          Utils.getString16Reader(),\n          \"homeSave\",\n          \"uint8\",\n          \"reserved\",\n          Utils.getString16Reader(),\n        ];\n      },\n\n      // => Version: 14, ReferencedFunction: 0x452AB0\n      14: function () {\n        this.MapEditLayerItem = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"moduleId\",\n          \"uint32\",\n          \"layerFlags\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n\n        this.MapEditLayers = [\n          \"layerStates\",\n          Utils.getArrayReader(\"uint8\"),\n          \"layerNames\",\n          Utils.getArrayReader(Utils.getString16Reader()),\n          \"layerIds\",\n          Utils.getArrayReader(\"uint32\"),\n          \"items\",\n          Utils.getArrayReader(this.MapEditLayerItem),\n        ];\n\n        this.PackMapEditAnnotation = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"flags\",\n          \"uint32\",\n          \"anchors\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n          \"zRange\",\n          [\"[]\", \"float32\", 2],\n        ];\n\n        this.PackMapEditAnnotations = [\"annotations\", Utils.getArrayReader(this.PackMapEditAnnotation)];\n\n        this.PackMapEditDirtyChunks = [\"dirtyFlags\", \"uint32\", \"chunkCoord\", [\"[]\", \"uint32\", 2]];\n\n        this.MapEditCamLocations = [\n          \"attack\",\n          \"float32\",\n          \"rotation\",\n          \"float32\",\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEditDirtyChunks = [\"flags\", \"uint32\", \"position\", [\"[]\", \"float32\", 3]];\n\n        this.PackMapEditSurfacePoly = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"surfaceType\",\n          \"uint32\",\n          \"vertices\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n          \"range\",\n          [\"[]\", \"float32\", 2],\n        ];\n\n        this.PackMapEditSurfaceRoadNode = [\"position\", [\"[]\", \"float32\", 3], \"radius\", \"float32\"];\n\n        this.PackMapEditSurfaceRoad = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"surfaceType\",\n          \"uint32\",\n          \"nodes\",\n          Utils.getArrayReader(this.PackMapEditSurfaceRoadNode),\n        ];\n\n        this.PackMapEditNavMeshData = [\n          \"floodPoints\",\n          Utils.getArrayReader(this.PackMapEditDirtyChunks),\n          \"surfacePolys\",\n          Utils.getArrayReader(this.PackMapEditSurfacePoly),\n          \"surfaceRoads\",\n          Utils.getArrayReader(this.PackMapEditSurfaceRoad),\n        ];\n\n        this.MapEditSnapPoint = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"moduleId\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"scale\",\n          \"float32\",\n        ];\n\n        this.__root = this.MapEditData = [\n          \"layers\",\n          this.MapEditLayers,\n          \"annotations\",\n          this.PackMapEditAnnotations,\n          \"dirtyChunks\",\n          Utils.getArrayReader(this.PackMapEditDirtyChunks),\n          \"camLocations\",\n          Utils.getArrayReader(this.MapEditCamLocations),\n          \"navMeshData\",\n          this.PackMapEditNavMeshData,\n          \"snapPoints\",\n          Utils.getArrayReader(this.MapEditSnapPoint),\n          \"mapHome\",\n          Utils.getString16Reader(),\n          \"homeSave\",\n          \"uint8\",\n          \"reserved\",\n          Utils.getString16Reader(),\n        ];\n      },\n\n      // => Version: 13, ReferencedFunction: 0x452AB0\n      13: function () {\n        this.MapEditLayerItem = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"moduleId\",\n          \"uint32\",\n          \"layerFlags\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n\n        this.MapEditLayers = [\n          \"layerStates\",\n          Utils.getArrayReader(\"uint8\"),\n          \"layerNames\",\n          Utils.getArrayReader(Utils.getString16Reader()),\n          \"layerIds\",\n          Utils.getArrayReader(\"uint32\"),\n          \"items\",\n          Utils.getArrayReader(this.MapEditLayerItem),\n        ];\n\n        this.PackMapEditAnnotation = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"flags\",\n          \"uint32\",\n          \"anchors\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n          \"zRange\",\n          [\"[]\", \"float32\", 2],\n        ];\n\n        this.PackMapEditAnnotations = [\"annotations\", Utils.getArrayReader(this.PackMapEditAnnotation)];\n\n        this.PackMapEditDirtyChunks = [\"dirtyFlags\", \"uint32\", \"chunkCoord\", [\"[]\", \"uint32\", 2]];\n\n        this.MapEditCamLocations = [\n          \"attack\",\n          \"float32\",\n          \"rotation\",\n          \"float32\",\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEditDirtyChunks = [\"flags\", \"uint32\", \"position\", [\"[]\", \"float32\", 3]];\n\n        this.MapEditSnapPoint = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"moduleId\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"scale\",\n          \"float32\",\n        ];\n\n        this.__root = this.MapEditData = [\n          \"layers\",\n          this.MapEditLayers,\n          \"annotations\",\n          this.PackMapEditAnnotations,\n          \"dirtyChunks\",\n          Utils.getArrayReader(this.PackMapEditDirtyChunks),\n          \"camLocations\",\n          Utils.getArrayReader(this.MapEditCamLocations),\n          \"floodPoints\",\n          Utils.getArrayReader(this.PackMapEditDirtyChunks),\n          \"snapPoints\",\n          Utils.getArrayReader(this.MapEditSnapPoint),\n          \"mapHome\",\n          Utils.getString16Reader(),\n          \"homeSave\",\n          \"uint8\",\n          \"reserved\",\n          Utils.getString16Reader(),\n        ];\n      },\n\n      // => Version: 12, ReferencedFunction: 0x452AB0\n      12: function () {\n        this.MapEditLayerItem = [\"guid\", Utils.getQWordReader(), \"moduleId\", \"uint32\", \"layerFlags\", \"uint32\"];\n\n        this.MapEditLayers = [\n          \"layerStates\",\n          [\"[]\", \"uint8\", 31],\n          \"layerNames\",\n          [\"[]\", Utils.getString16Reader(), 31],\n          \"items\",\n          Utils.getArrayReader(this.MapEditLayerItem),\n        ];\n\n        this.PackMapEditAnnotation = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"flags\",\n          \"uint32\",\n          \"anchors\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n          \"zRange\",\n          [\"[]\", \"float32\", 2],\n        ];\n\n        this.PackMapEditAnnotations = [\"annotations\", Utils.getArrayReader(this.PackMapEditAnnotation)];\n\n        this.PackMapEditDirtyChunks = [\"dirtyFlags\", \"uint32\", \"chunkCoord\", [\"[]\", \"uint32\", 2]];\n\n        this.MapEditCamLocations = [\n          \"attack\",\n          \"float32\",\n          \"rotation\",\n          \"float32\",\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEditDirtyChunks = [\"flags\", \"uint32\", \"position\", [\"[]\", \"float32\", 3]];\n\n        this.MapEditSnapPoint = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"moduleId\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"scale\",\n          \"float32\",\n        ];\n\n        this.__root = this.MapEditData = [\n          \"layers\",\n          this.MapEditLayers,\n          \"annotations\",\n          this.PackMapEditAnnotations,\n          \"dirtyChunks\",\n          Utils.getArrayReader(this.PackMapEditDirtyChunks),\n          \"camLocations\",\n          Utils.getArrayReader(this.MapEditCamLocations),\n          \"floodPoints\",\n          Utils.getArrayReader(this.PackMapEditDirtyChunks),\n          \"snapPoints\",\n          Utils.getArrayReader(this.MapEditSnapPoint),\n          \"mapHome\",\n          Utils.getString16Reader(),\n          \"homeSave\",\n          \"uint8\",\n          \"reserved\",\n          Utils.getString16Reader(),\n        ];\n      },\n\n      // => Version: 11\n      11: function () {\n        this.MapEditLayerItem = [\"guid\", Utils.getQWordReader(), \"moduleId\", \"uint32\", \"layerFlags\", \"uint32\"];\n\n        this.MapEditLayers = [\n          \"layerStates\",\n          [\"[]\", \"uint8\", 31],\n          \"layerNames\",\n          [\"[]\", Utils.getString16Reader(), 31],\n          \"items\",\n          Utils.getArrayReader(this.MapEditLayerItem),\n        ];\n\n        this.PackMapEditAnnotation = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"flags\",\n          \"uint32\",\n          \"anchors\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n          \"zRange\",\n          [\"[]\", \"float32\", 2],\n        ];\n\n        this.PackMapEditAnnotations = [\"annotations\", Utils.getArrayReader(this.PackMapEditAnnotation)];\n\n        this.PackMapEditDirtyChunks = [\"dirtyFlags\", \"uint32\", \"chunkCoord\", [\"[]\", \"uint32\", 2]];\n\n        this.MapEditCamLocations = [\n          \"attack\",\n          \"float32\",\n          \"rotation\",\n          \"float32\",\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEditDirtyChunks = [\"flags\", \"uint32\", \"position\", [\"[]\", \"float32\", 3]];\n\n        this.MapEditSnapPoint = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"moduleId\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"scale\",\n          \"float32\",\n        ];\n\n        this.__root = this.MapEditData = [\n          \"layers\",\n          this.MapEditLayers,\n          \"annotations\",\n          this.PackMapEditAnnotations,\n          \"dirtyChunks\",\n          Utils.getArrayReader(this.PackMapEditDirtyChunks),\n          \"camLocations\",\n          Utils.getArrayReader(this.MapEditCamLocations),\n          \"floodPoints\",\n          Utils.getArrayReader(this.PackMapEditDirtyChunks),\n          \"snapPoints\",\n          Utils.getArrayReader(this.MapEditSnapPoint),\n          \"mapHome\",\n          Utils.getString16Reader(),\n          \"homeSave\",\n          \"uint8\",\n          \"reserved\",\n          Utils.getString16Reader(),\n        ];\n      },\n\n      // => Version: 10\n      10: function () {\n        this.MapEditLayers = [\n          \"layerPropCount\",\n          [\"[]\", \"uint32\", 31],\n          \"layerStates\",\n          [\"[]\", \"uint8\", 31],\n          \"layerNames\",\n          [\"[]\", Utils.getString16Reader(), 31],\n        ];\n\n        this.PackMapEditAnnotation = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"flags\",\n          \"uint32\",\n          \"anchors\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n          \"zRange\",\n          [\"[]\", \"float32\", 2],\n        ];\n\n        this.PackMapEditAnnotations = [\"annotations\", Utils.getArrayReader(this.PackMapEditAnnotation)];\n\n        this.PackMapEditDirtyChunks = [\"dirtyFlags\", \"uint32\", \"chunkCoord\", [\"[]\", \"uint32\", 2]];\n\n        this.MapEditCamLocations = [\n          \"attack\",\n          \"float32\",\n          \"rotation\",\n          \"float32\",\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEditDirtyChunks = [\"flags\", \"uint32\", \"position\", [\"[]\", \"float32\", 3]];\n\n        this.__root = this.MapEditData = [\n          \"layers\",\n          this.MapEditLayers,\n          \"annotations\",\n          this.PackMapEditAnnotations,\n          \"dirtyChunks\",\n          Utils.getArrayReader(this.PackMapEditDirtyChunks),\n          \"camLocations\",\n          Utils.getArrayReader(this.MapEditCamLocations),\n          \"floodPoints\",\n          Utils.getArrayReader(this.PackMapEditDirtyChunks),\n          \"mapHome\",\n          Utils.getString16Reader(),\n          \"homeSave\",\n          \"uint8\",\n          \"reserved\",\n          Utils.getString16Reader(),\n        ];\n      },\n\n      // => Version: 9\n      9: function () {\n        this.MapEditLayers = [\n          \"layerPropCount\",\n          [\"[]\", \"uint32\", 31],\n          \"layerStates\",\n          [\"[]\", \"uint8\", 31],\n          \"layerNames\",\n          [\"[]\", Utils.getString16Reader(), 31],\n        ];\n\n        this.PackMapEditAnnotation = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"flags\",\n          \"uint32\",\n          \"anchors\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n          \"zRange\",\n          [\"[]\", \"float32\", 2],\n        ];\n\n        this.PackMapEditAnnotations = [\"annotations\", Utils.getArrayReader(this.PackMapEditAnnotation)];\n\n        this.PackMapEditDirtyChunks = [\"dirtyFlags\", \"uint32\", \"chunkCoord\", [\"[]\", \"uint32\", 2]];\n\n        this.MapEditCamLocations = [\n          \"attack\",\n          \"float32\",\n          \"rotation\",\n          \"float32\",\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEditDirtyChunks = [\"flags\", \"uint32\", \"position\", [\"[]\", \"float32\", 3]];\n\n        this.__root = this.MapEditData = [\n          \"layers\",\n          this.MapEditLayers,\n          \"annotations\",\n          this.PackMapEditAnnotations,\n          \"dirtyChunks\",\n          Utils.getArrayReader(this.PackMapEditDirtyChunks),\n          \"camLocations\",\n          Utils.getArrayReader(this.MapEditCamLocations),\n          \"floodPoints\",\n          Utils.getArrayReader(this.PackMapEditDirtyChunks),\n          \"mapHome\",\n          Utils.getString16Reader(),\n          \"homeSave\",\n          \"uint8\",\n        ];\n      },\n\n      // => Version: 8\n      8: function () {\n        this.MapEditLayers = [\n          \"layerPropCount\",\n          [\"[]\", \"uint32\", 31],\n          \"layerStates\",\n          [\"[]\", \"uint8\", 31],\n          \"layerNames\",\n          [\"[]\", Utils.getString16Reader(), 31],\n        ];\n\n        this.PackMapEditAnnotation = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"flags\",\n          \"uint32\",\n          \"anchors\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n          \"zRange\",\n          [\"[]\", \"float32\", 2],\n        ];\n\n        this.PackMapEditAnnotations = [\"annotations\", Utils.getArrayReader(this.PackMapEditAnnotation)];\n\n        this.PackMapEditDirtyChunks = [\"dirtyFlags\", \"uint32\", \"chunkCoord\", [\"[]\", \"uint32\", 2]];\n\n        this.MapEditCamLocations = [\n          \"attack\",\n          \"float32\",\n          \"rotation\",\n          \"float32\",\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEditDirtyChunks = [\"flags\", \"uint32\", \"position\", [\"[]\", \"float32\", 3]];\n\n        this.__root = this.MapEditData = [\n          \"layers\",\n          this.MapEditLayers,\n          \"annotations\",\n          this.PackMapEditAnnotations,\n          \"dirtyChunks\",\n          Utils.getArrayReader(this.PackMapEditDirtyChunks),\n          \"camLocations\",\n          Utils.getArrayReader(this.MapEditCamLocations),\n          \"floodPoints\",\n          Utils.getArrayReader(this.PackMapEditDirtyChunks),\n        ];\n      },\n\n      // => Version: 7\n      7: function () {\n        this.MapEditLayers = [\"layerPropCount\", [\"[]\", \"uint32\", 31], \"layerStates\", [\"[]\", \"uint8\", 31]];\n\n        this.PackMapEditAnnotation = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"flags\",\n          \"uint32\",\n          \"anchors\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n          \"zRange\",\n          [\"[]\", \"float32\", 2],\n        ];\n\n        this.PackMapEditAnnotations = [\"annotations\", Utils.getArrayReader(this.PackMapEditAnnotation)];\n\n        this.PackMapEditDirtyChunks = [\"dirtyFlags\", \"uint32\", \"chunkCoord\", [\"[]\", \"uint32\", 2]];\n\n        this.MapEditCamLocations = [\n          \"attack\",\n          \"float32\",\n          \"rotation\",\n          \"float32\",\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEditDirtyChunks = [\"flags\", \"uint32\", \"position\", [\"[]\", \"float32\", 3]];\n\n        this.__root = this.MapEditData = [\n          \"layers\",\n          this.MapEditLayers,\n          \"annotations\",\n          this.PackMapEditAnnotations,\n          \"dirtyChunks\",\n          Utils.getArrayReader(this.PackMapEditDirtyChunks),\n          \"camLocations\",\n          Utils.getArrayReader(this.MapEditCamLocations),\n          \"floodPoints\",\n          Utils.getArrayReader(this.PackMapEditDirtyChunks),\n        ];\n      },\n\n      // => Version: 6\n      6: function () {\n        this.MapEditRegion = [\"regions\", Utils.getArrayReader(Utils.getString16Reader())];\n\n        this.MapEditRegion = [\n          \"ambientColor\",\n          [\"[]\", \"uint8\", 3],\n          \"directionalColor\",\n          [\"[]\", \"uint8\", 3],\n          \"ambientIntenisty\",\n          \"float32\",\n          \"directionalIntenisty\",\n          \"float32\",\n        ];\n\n        this.MapEditLayers = [\"layerPropCount\", [\"[]\", \"uint32\", 31], \"layerStates\", [\"[]\", \"uint8\", 31]];\n\n        this.PackMapEditAnnotation = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"flags\",\n          \"uint32\",\n          \"anchors\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n        ];\n\n        this.PackMapEditAnnotations = [\"annotations\", Utils.getArrayReader(this.PackMapEditAnnotation)];\n\n        this.PackMapEditDirtyChunks = [\"dirtyFlags\", \"uint32\", \"chunkCoord\", [\"[]\", \"uint32\", 2]];\n\n        this.MapEditCamLocations = [\n          \"attack\",\n          \"float32\",\n          \"rotation\",\n          \"float32\",\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEditDirtyChunks = [\"flags\", \"uint32\", \"position\", [\"[]\", \"float32\", 3]];\n\n        this.__root = this.MapEditData = [\n          \"regions\",\n          this.MapEditRegion,\n          \"miniMapParams\",\n          this.MapEditRegion,\n          \"layers\",\n          this.MapEditLayers,\n          \"annotations\",\n          this.PackMapEditAnnotations,\n          \"dirtyChunks\",\n          Utils.getArrayReader(this.PackMapEditDirtyChunks),\n          \"camLocations\",\n          Utils.getArrayReader(this.MapEditCamLocations),\n          \"floodPoints\",\n          Utils.getArrayReader(this.PackMapEditDirtyChunks),\n        ];\n      },\n\n      // => Version: 5, ReferencedFunction: 0x452AB0\n      5: function () {\n        this.MapEditRegion = [\"regions\", Utils.getArrayReader(Utils.getString16Reader())];\n\n        this.MapEditRegion = [\n          \"ambientColor\",\n          [\"[]\", \"uint8\", 3],\n          \"directionalColor\",\n          [\"[]\", \"uint8\", 3],\n          \"ambientIntenisty\",\n          \"float32\",\n          \"directionalIntenisty\",\n          \"float32\",\n        ];\n\n        this.MapEditLayers = [\"layerPropCount\", [\"[]\", \"uint32\", 31], \"layerStates\", [\"[]\", \"uint8\", 31]];\n\n        this.PackMapEditAnnotation = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"flags\",\n          \"uint32\",\n          \"anchors\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n        ];\n\n        this.PackMapEditAnnotations = [\"annotations\", Utils.getArrayReader(this.PackMapEditAnnotation)];\n\n        this.PackMapEditDirtyChunks = [\"dirtyFlags\", \"uint32\", \"chunkCoord\", [\"[]\", \"uint32\", 2]];\n\n        this.MapEditCamLocations = [\n          \"attack\",\n          \"float32\",\n          \"rotation\",\n          \"float32\",\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.__root = this.MapEditData = [\n          \"regions\",\n          this.MapEditRegion,\n          \"miniMapParams\",\n          this.MapEditRegion,\n          \"layers\",\n          this.MapEditLayers,\n          \"annotations\",\n          this.PackMapEditAnnotations,\n          \"dirtyChunks\",\n          Utils.getArrayReader(this.PackMapEditDirtyChunks),\n          \"camLocations\",\n          Utils.getArrayReader(this.MapEditCamLocations),\n        ];\n      },\n\n      // => Version: 4, ReferencedFunction: 0x452AB0\n      4: function () {\n        this.MapEditRegion = [\"regions\", Utils.getArrayReader(Utils.getString16Reader())];\n\n        this.MapEditRegion = [\n          \"ambientColor\",\n          [\"[]\", \"uint8\", 3],\n          \"directionalColor\",\n          [\"[]\", \"uint8\", 3],\n          \"ambientIntenisty\",\n          \"float32\",\n          \"directionalIntenisty\",\n          \"float32\",\n        ];\n\n        this.MapEditLayers = [\"layerPropCount\", [\"[]\", \"uint32\", 31], \"layerStates\", [\"[]\", \"uint8\", 31]];\n\n        this.PackMapEditAnnotation = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"flags\",\n          \"uint32\",\n          \"anchors\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n        ];\n\n        this.PackMapEditAnnotations = [\"annotations\", Utils.getArrayReader(this.PackMapEditAnnotation)];\n\n        this.MapEditCamLocations = [\n          \"attack\",\n          \"float32\",\n          \"rotation\",\n          \"float32\",\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.__root = this.MapEditData = [\n          \"regions\",\n          this.MapEditRegion,\n          \"miniMapParams\",\n          this.MapEditRegion,\n          \"layers\",\n          this.MapEditLayers,\n          \"annotations\",\n          this.PackMapEditAnnotations,\n          \"camLocations\",\n          Utils.getArrayReader(this.MapEditCamLocations),\n        ];\n      },\n\n      // => Version: 3\n      3: function () {\n        this.MapEditRegion = [\"regions\", Utils.getArrayReader(Utils.getString16Reader())];\n\n        this.MapEditRegion = [\n          \"ambientColor\",\n          [\"[]\", \"uint8\", 3],\n          \"directionalColor\",\n          [\"[]\", \"uint8\", 3],\n          \"ambientIntenisty\",\n          \"float32\",\n          \"directionalIntenisty\",\n          \"float32\",\n        ];\n\n        this.MapEditLayers = [\"layerStates\", Utils.getArrayReader(\"uint8\")];\n\n        this.PackMapEditAnnotation = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"flags\",\n          \"uint32\",\n          \"anchors\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n        ];\n\n        this.PackMapEditAnnotations = [\"annotations\", Utils.getArrayReader(this.PackMapEditAnnotation)];\n\n        this.MapEditCamLocations = [\n          \"attack\",\n          \"float32\",\n          \"rotation\",\n          \"float32\",\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.__root = this.MapEditData = [\n          \"regions\",\n          this.MapEditRegion,\n          \"miniMapParams\",\n          this.MapEditRegion,\n          \"layers\",\n          this.MapEditLayers,\n          \"annotations\",\n          this.PackMapEditAnnotations,\n          \"camLocations\",\n          Utils.getArrayReader(this.MapEditCamLocations),\n        ];\n      },\n    },\n  },\n];\n","const Utils = require(\"../../util/ParserUtils.js\");\n\nmodule.exports = [\n  /// ==================================================\n  /// Chunk: env, versions: 76, strucTab: 0x17206D8\n  /// ==================================================\n\n  {\n    name: \"env\",\n    versions: {\n      // => Version: 75, ReferencedFunction: 0xEB9240\n      75: function () {\n        this.PackMapEnvDataLightV75 = [\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"intensity\",\n          \"float32\",\n          \"direction\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.PackMapEnvDataLightingV75 = [\n          \"lights\",\n          Utils.getRefArrayReader(this.PackMapEnvDataLightV75),\n          \"shadowInfluence\",\n          \"float32\",\n          \"backlightColor\",\n          [\"[]\", \"uint8\", 3],\n          \"backlightIntensity\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataLightingCharV46 = [\n          \"sunScale\",\n          \"float32\",\n          \"saturation\",\n          \"float32\",\n          \"sunFill\",\n          \"float32\",\n          \"ambScale\",\n          \"float32\",\n          \"ambFill\",\n          \"float32\",\n          \"flags\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataLightingCharGroupV46 = [\n          \"lightingChar\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharV46),\n        ];\n\n        this.PackMapEnvDataLayerAttributesV75 = [\n          \"brightness\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"haze\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"velocity\",\n          [\"[]\", \"float32\", 2],\n          \"fadeWidth\",\n          \"float32\",\n          \"fadeEnd\",\n          \"float32\",\n          \"reserved\",\n          \"uint32\",\n        ];\n\n        this.PackMapEnvDataLayerV75 = [\n          \"altitude\",\n          \"float32\",\n          \"cutOut\",\n          \"float32\",\n          \"depth\",\n          \"float32\",\n          \"extent\",\n          \"float32\",\n          \"scale\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"attributes\",\n          Utils.getArrayReader(this.PackMapEnvDataLayerAttributesV75),\n          \"name\",\n          Utils.getString16Reader(),\n          \"reserved\",\n          \"uint32\",\n        ];\n\n        this.PackMapEnvDataCloudsV75 = [\"layers\", Utils.getArrayReader(this.PackMapEnvDataLayerV75)];\n\n        this.PackMapEnvDataColoredLightRingsV46 = [\n          \"range\",\n          [\"[]\", \"float32\", 2],\n          \"distances\",\n          [\"[]\", \"float32\", 6],\n          \"lightColors\",\n          [\"[]\", [\"[]\", \"uint8\", 4], 6],\n          \"shadowColors\",\n          [\"[]\", [\"[]\", \"uint8\", 4], 6],\n        ];\n\n        this.PackMapEnvDataEffectExV46 = [\"dummy\", \"uint32\"];\n\n        this.PackMapEnvDataEffectV75 = [\n          \"glow\",\n          [\"[]\", \"uint8\", 4],\n          \"tintColor\",\n          [\"[]\", \"uint8\", 4],\n          \"tintTargetColor\",\n          [\"[]\", \"uint8\", 4],\n          \"saturation\",\n          \"float32\",\n          \"tintAmount\",\n          \"float32\",\n          \"tintFocus\",\n          \"float32\",\n          \"glowLevel\",\n          [\"[]\", \"uint8\", 4],\n          \"glowAmplify\",\n          \"float32\",\n          \"focalDepth\",\n          \"float32\",\n          \"focalRange\",\n          \"float32\",\n          \"ssaoAmount\",\n          \"float32\",\n          \"ssaoBrighten\",\n          \"float32\",\n          \"ssaoContrast\",\n          \"float32\",\n          \"ssaoSunScale\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"clutTexturePath\",\n          Utils.getFileNameReader(),\n          \"ext\",\n          Utils.getPointerReader(this.PackMapEnvDataEffectExV46),\n        ];\n\n        this.PackMapEnvDataHazeV75 = [\n          \"nearColor\",\n          [\"[]\", \"uint8\", 4],\n          \"farColor\",\n          [\"[]\", \"uint8\", 4],\n          \"distRange\",\n          [\"[]\", \"float32\", 2],\n          \"heightColor\",\n          [\"[]\", \"uint8\", 4],\n          \"heightRange\",\n          [\"[]\", \"float32\", 2],\n          \"depthCue\",\n          \"float32\",\n          \"sunDirRange\",\n          [\"[]\", \"float32\", 2],\n        ];\n\n        this.PackMapEnvDataPFieldV75 = [\n          \"altitude\",\n          \"float32\",\n          \"angle\",\n          [\"[]\", \"float32\", 2],\n          \"clusterCount\",\n          \"uint16\",\n          \"clustering\",\n          [\"[]\", \"float32\", 2],\n          \"depth\",\n          \"float32\",\n          \"deviation\",\n          \"float32\",\n          \"deviationSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"extent\",\n          \"uint16\",\n          \"fade\",\n          \"float32\",\n          \"fieldDirection\",\n          [\"[]\", \"float32\", 3],\n          \"flags\",\n          \"uint16\",\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"opacity\",\n          [\"[]\", \"float32\", 2],\n          \"particleCount\",\n          \"uint16\",\n          \"period\",\n          [\"[]\", \"float32\", 2],\n          \"rotation\",\n          [\"[]\", \"float32\", 2],\n          \"scaleX\",\n          [\"[]\", \"float32\", 2],\n          \"scaleY\",\n          [\"[]\", \"float32\", 2],\n          \"seed\",\n          \"uint32\",\n          \"speed\",\n          [\"[]\", \"float32\", 2],\n          \"texColRow\",\n          [\"[]\", \"uint32\", 2],\n          \"texFPS\",\n          \"float32\",\n          \"texPath\",\n          Utils.getFileNameReader(),\n          \"type\",\n          \"uint8\",\n          \"name\",\n          Utils.getString16Reader(),\n          \"reserved\",\n          \"uint32\",\n        ];\n\n        this.PackMapEnvDataPFieldCutoutV46 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"x\",\n          [\"[]\", \"float32\", 4],\n          \"y\",\n          [\"[]\", \"float32\", 4],\n          \"z\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.PackMapEnvDataSkyV75 = [\n          \"flags\",\n          \"uint8\",\n          \"dayBrightness\",\n          \"float32\",\n          \"dayHazeBottom\",\n          \"float32\",\n          \"dayHazeDensity\",\n          \"float32\",\n          \"dayHazeFalloff\",\n          \"float32\",\n          \"dayLightIntensity\",\n          \"float32\",\n          \"dayStarDensity\",\n          \"float32\",\n          \"nightBrightness\",\n          \"float32\",\n          \"nightHazeBottom\",\n          \"float32\",\n          \"nightHazeDensity\",\n          \"float32\",\n          \"nightHazeFalloff\",\n          \"float32\",\n          \"nightLightIntensity\",\n          \"float32\",\n          \"nightStarDensity\",\n          \"float32\",\n          \"verticalOffset\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvLensFlareAtomV46 = [\n          \"rows\",\n          \"uint32\",\n          \"columns\",\n          \"uint32\",\n          \"start\",\n          \"uint32\",\n          \"fps\",\n          \"float32\",\n          \"color\",\n          [\"[]\", \"uint8\", 4],\n          \"offset\",\n          [\"[]\", \"float32\", 2],\n          \"scale\",\n          [\"[]\", \"float32\", 2],\n          \"baseRotation\",\n          \"float32\",\n          \"cameraRotation\",\n          \"float32\",\n          \"flags\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvLensFlareTextureV46 = [\"texture\", Utils.getFileNameReader()];\n\n        this.PackMapEnvDataShaderConstantV46 = [\"token\", \"uint32\", \"value\", [\"[]\", \"float32\", 4]];\n\n        this.PackMapEnvLensFlareV46 = [\n          \"atoms\",\n          Utils.getArrayReader(this.PackMapEnvLensFlareAtomV46),\n          \"textures\",\n          Utils.getArrayReader(this.PackMapEnvLensFlareTextureV46),\n          \"material\",\n          Utils.getFileNameReader(),\n          \"fadeBand\",\n          [\"[]\", \"float32\", 2],\n          \"reverseFadeBand\",\n          [\"[]\", \"float32\", 2],\n          \"opacityCoeff\",\n          \"float32\",\n          \"flags\",\n          \"uint8\",\n          \"constants\",\n          Utils.getArrayReader(this.PackMapEnvDataShaderConstantV46),\n        ];\n\n        this.PackMapEnvDataSkyCardAttributesExV46 = [\"dummy\", \"uint32\"];\n\n        this.PackMapEnvDataSkyCardAttributesV75 = [\n          \"azimuth\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"hazeDensity\",\n          \"float32\",\n          \"latitude\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"minHaze\",\n          \"float32\",\n          \"scale\",\n          [\"[]\", \"float32\", 2],\n          \"speed\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"textureUV\",\n          [\"[]\", \"float32\", 4],\n          \"brightness\",\n          \"float32\",\n          \"lensFlare\",\n          Utils.getPointerReader(this.PackMapEnvLensFlareV46),\n          \"ext\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardAttributesExV46),\n        ];\n\n        this.PackMapEnvDataShaderTextureV46 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"textureUV\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.PackEnvDataSkyCardAnimationV46 = [\n          \"textureAnimTranslation\",\n          [\"[]\", \"float32\", 2],\n          \"textureAnimScaleRangeX\",\n          [\"[]\", \"float32\", 2],\n          \"textureAnimScaleRangeY\",\n          [\"[]\", \"float32\", 2],\n          \"textureAnimScaleSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"textureAnimRotation\",\n          \"float32\",\n          \"texCoords\",\n          \"uint32\",\n        ];\n\n        this.PackMapEnvDataSkycardFlipbookV46 = [\n          \"rows\",\n          \"uint32\",\n          \"columns\",\n          \"uint32\",\n          \"start\",\n          \"uint32\",\n          \"count\",\n          \"uint32\",\n          \"fps\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataSkyCardMaterialV46 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"constants\",\n          Utils.getArrayReader(this.PackMapEnvDataShaderConstantV46),\n          \"textures\",\n          Utils.getArrayReader(this.PackMapEnvDataShaderTextureV46),\n          \"textureAnimation\",\n          this.PackEnvDataSkyCardAnimationV46,\n          \"flipbook\",\n          this.PackMapEnvDataSkycardFlipbookV46,\n        ];\n\n        this.PackMapEnvDataSkyCardExV46 = [\"dummy\", \"uint32\"];\n\n        this.PackMapEnvDataSkyCardV75 = [\n          \"day\",\n          this.PackMapEnvDataSkyCardAttributesV75,\n          \"night\",\n          this.PackMapEnvDataSkyCardAttributesV75,\n          \"flags\",\n          \"uint32\",\n          \"name\",\n          Utils.getString16Reader(),\n          \"location\",\n          [\"[]\", \"float32\", 3],\n          \"material\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardMaterialV46),\n          \"ext\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardExV46),\n        ];\n\n        this.PackMapEnvDataSkyCardsV75 = [\"cards\", Utils.getArrayReader(this.PackMapEnvDataSkyCardV75)];\n\n        this.PackMapEnvDataSpawnModelDataV46 = [\n          \"spawnRange\",\n          [\"[]\", \"uint32\", 2],\n          \"lifeSpan\",\n          [\"[]\", \"uint32\", 2],\n          \"scaleRange\",\n          [\"[]\", \"float32\", 2],\n          \"heightRange\",\n          [\"[]\", \"float32\", 2],\n          \"rotXRange\",\n          [\"[]\", \"float32\", 2],\n          \"rotYRange\",\n          [\"[]\", \"float32\", 2],\n          \"rotZRange\",\n          [\"[]\", \"float32\", 2],\n          \"probability\",\n          \"float32\",\n          \"delay\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"animSequence\",\n          Utils.getQWordReader(),\n          \"modelFile\",\n          Utils.getFileNameReader(),\n          \"maxConcurrent\",\n          \"uint16\",\n        ];\n\n        this.PackMapEnvDataSpawnListV46 = [\"spawns\", Utils.getArrayReader(this.PackMapEnvDataSpawnModelDataV46)];\n\n        this.PackMapEnvDataSpawnGroupsV46 = [\n          \"spawnGroups\",\n          Utils.getArrayReader(this.PackMapEnvDataSpawnListV46),\n          \"targets\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.PackMapEnvDataWaterV75 = [\n          \"waterFlags\",\n          \"uint32\",\n          \"animAmplitude\",\n          \"float32\",\n          \"animChoppiness\",\n          \"float32\",\n          \"animWind\",\n          [\"[]\", \"float32\", 2],\n          \"bumpAmount\",\n          \"float32\",\n          \"bumpAngle0\",\n          \"float32\",\n          \"bumpAngle1\",\n          \"float32\",\n          \"bumpScale0\",\n          \"float32\",\n          \"bumpScale1\",\n          \"float32\",\n          \"bumpSpeed0\",\n          \"float32\",\n          \"bumpSpeed1\",\n          \"float32\",\n          \"bumpTile0\",\n          \"float32\",\n          \"bumpTile1\",\n          \"float32\",\n          \"patternAngle\",\n          \"float32\",\n          \"patternTile\",\n          \"float32\",\n          \"patternSpeed\",\n          \"float32\",\n          \"patternEdge\",\n          \"float32\",\n          \"surfaceShallowColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceDeepColor\",\n          [\"[]\", \"uint8\", 4],\n          \"patternColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceFresnel\",\n          \"float32\",\n          \"distortAmount\",\n          \"float32\",\n          \"depthAttenuation\",\n          \"float32\",\n          \"materialFilename\",\n          Utils.getFileNameReader(),\n          \"textureFilenames\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"constantTokens\",\n          Utils.getArrayReader(\"uint32\"),\n          \"constantValues\",\n          Utils.getArrayReader([\"[]\", \"float32\", 4]),\n          \"foamSpawn\",\n          \"float32\",\n          \"foamDissolve\",\n          \"float32\",\n          \"foamDepthAttenuation\",\n          \"float32\",\n          \"foamColor0\",\n          [\"[]\", \"uint8\", 4],\n          \"foamColor1\",\n          [\"[]\", \"uint8\", 4],\n        ];\n\n        this.PackMapEnvDataWindV75 = [\n          \"azimuth\",\n          \"uint8\",\n          \"elevation\",\n          \"uint8\",\n          \"noise\",\n          \"uint8\",\n          \"speed\",\n          \"uint8\",\n          \"gust\",\n          \"uint8\",\n          \"gustFreq\",\n          \"uint8\",\n          \"gustSpeed\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataAudioV46 = [\"token\", Utils.getQWordReader()];\n\n        this.PackMapEnvDataBaseEx2V46 = [\"dummy\", \"uint32\"];\n\n        this.PackMapEnvDataBaseExV46 = [\n          \"ext2\",\n          Utils.getPointerReader(this.PackMapEnvDataBaseEx2V46),\n          \"brightTime\",\n          \"float32\",\n          \"dimTime\",\n          \"float32\",\n          \"darkCoeff\",\n          \"float32\",\n          \"darkExp\",\n          \"float32\",\n          \"darkMin\",\n          \"float32\",\n          \"darkMax\",\n          \"float32\",\n          \"brightMin\",\n          \"float32\",\n          \"brightMax\",\n          \"float32\",\n          \"brightScale\",\n          \"float32\",\n          \"darkScale\",\n          \"float32\",\n          \"waterReflectionParams\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.PackMapEnvDataShapeV46 = [\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"height\",\n          \"float32\",\n          \"fadeHorizInner\",\n          \"float32\",\n          \"fadeHorizOuter\",\n          \"float32\",\n          \"fadeVertical\",\n          \"float32\",\n          \"vertexArray\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n          \"shapeType\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataLocalV75 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV75),\n          \"lightingCharGroups\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharGroupV46),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV75),\n          \"coloredLightRings\",\n          Utils.getRefArrayReader(this.PackMapEnvDataColoredLightRingsV46),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV75),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV75),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV75),\n          \"particleFieldCutouts\",\n          Utils.getArrayReader(this.PackMapEnvDataPFieldCutoutV46),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV75),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV75),\n          \"spawns\",\n          Utils.getPointerReader(this.PackMapEnvDataSpawnGroupsV46),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV75),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV75),\n          \"audio\",\n          Utils.getRefArrayReader(this.PackMapEnvDataAudioV46),\n          \"name\",\n          Utils.getString16Reader(),\n          \"nightMods\",\n          Utils.getArrayReader(\"uint8\"),\n          \"bindTarget\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"ext\",\n          Utils.getPointerReader(this.PackMapEnvDataBaseExV46),\n          \"type\",\n          \"uint8\",\n          \"guid\",\n          Utils.getQWordReader(),\n          \"shapeArray\",\n          Utils.getArrayReader(this.PackMapEnvDataShapeV46),\n        ];\n\n        this.PackMapEnvDataSkyModeTexV75 = [\n          \"texPathNE\",\n          Utils.getFileNameReader(),\n          \"texPathSW\",\n          Utils.getFileNameReader(),\n          \"texPathT\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackMapEnvDataGlobalV75 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV75),\n          \"lightingCharGroups\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharGroupV46),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV75),\n          \"coloredLightRings\",\n          Utils.getRefArrayReader(this.PackMapEnvDataColoredLightRingsV46),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV75),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV75),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV75),\n          \"particleFieldCutouts\",\n          Utils.getArrayReader(this.PackMapEnvDataPFieldCutoutV46),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV75),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV75),\n          \"spawns\",\n          Utils.getPointerReader(this.PackMapEnvDataSpawnGroupsV46),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV75),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV75),\n          \"audio\",\n          Utils.getRefArrayReader(this.PackMapEnvDataAudioV46),\n          \"name\",\n          Utils.getString16Reader(),\n          \"nightMods\",\n          Utils.getArrayReader(\"uint8\"),\n          \"bindTarget\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"ext\",\n          Utils.getPointerReader(this.PackMapEnvDataBaseExV46),\n          \"skyModeTex\",\n          Utils.getArrayReader(this.PackMapEnvDataSkyModeTexV75),\n          \"starFile\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.__root = this.PackMapEnvironmentV75 = [\n          \"dataLocalArray\",\n          Utils.getArrayReader(this.PackMapEnvDataLocalV75),\n          \"dataGlobal\",\n          Utils.getPointerReader(this.PackMapEnvDataGlobalV75),\n        ];\n      },\n\n      // => Version: 74\n      74: function () {\n        this.PackMapEnvDataLightV74 = [\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"intensity\",\n          \"float32\",\n          \"direction\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.PackMapEnvDataLightingV74 = [\n          \"lights\",\n          Utils.getRefArrayReader(this.PackMapEnvDataLightV74),\n          \"shadowInfluence\",\n          \"float32\",\n          \"backlightColor\",\n          [\"[]\", \"uint8\", 3],\n          \"backlightIntensity\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataLightingCharV45 = [\n          \"sunScale\",\n          \"float32\",\n          \"saturation\",\n          \"float32\",\n          \"sunFill\",\n          \"float32\",\n          \"ambScale\",\n          \"float32\",\n          \"ambFill\",\n          \"float32\",\n          \"flags\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataLightingCharGroupV45 = [\n          \"lightingChar\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharV45),\n        ];\n\n        this.PackMapEnvDataLayerAttributesV74 = [\n          \"brightness\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"haze\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"velocity\",\n          [\"[]\", \"float32\", 2],\n          \"fadeWidth\",\n          \"float32\",\n          \"fadeEnd\",\n          \"float32\",\n          \"reserved\",\n          \"uint32\",\n        ];\n\n        this.PackMapEnvDataLayerV74 = [\n          \"altitude\",\n          \"float32\",\n          \"cutOut\",\n          \"float32\",\n          \"depth\",\n          \"float32\",\n          \"extent\",\n          \"float32\",\n          \"scale\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"attributes\",\n          Utils.getArrayReader(this.PackMapEnvDataLayerAttributesV74),\n          \"name\",\n          Utils.getString16Reader(),\n          \"reserved\",\n          \"uint32\",\n        ];\n\n        this.PackMapEnvDataCloudsV74 = [\"layers\", Utils.getArrayReader(this.PackMapEnvDataLayerV74)];\n\n        this.PackMapEnvDataColoredLightRingsV45 = [\n          \"range\",\n          [\"[]\", \"float32\", 2],\n          \"distances\",\n          [\"[]\", \"float32\", 6],\n          \"lightColors\",\n          [\"[]\", [\"[]\", \"uint8\", 4], 6],\n          \"shadowColors\",\n          [\"[]\", [\"[]\", \"uint8\", 4], 6],\n        ];\n\n        this.PackMapEnvDataEffectV74 = [\n          \"glow\",\n          [\"[]\", \"uint8\", 4],\n          \"tintColor\",\n          [\"[]\", \"uint8\", 4],\n          \"tintTargetColor\",\n          [\"[]\", \"uint8\", 4],\n          \"saturation\",\n          \"float32\",\n          \"tintAmount\",\n          \"float32\",\n          \"tintFocus\",\n          \"float32\",\n          \"glowLevel\",\n          [\"[]\", \"uint8\", 4],\n          \"glowAmplify\",\n          \"float32\",\n          \"focalDepth\",\n          \"float32\",\n          \"focalRange\",\n          \"float32\",\n          \"flatteningRange\",\n          [\"[]\", \"float32\", 2],\n          \"flatteningCharacterRange\",\n          [\"[]\", \"float32\", 2],\n        ];\n\n        this.PackMapEnvDataHazeV74 = [\n          \"nearColor\",\n          [\"[]\", \"uint8\", 4],\n          \"farColor\",\n          [\"[]\", \"uint8\", 4],\n          \"distRange\",\n          [\"[]\", \"float32\", 2],\n          \"heightColor\",\n          [\"[]\", \"uint8\", 4],\n          \"heightRange\",\n          [\"[]\", \"float32\", 2],\n          \"depthCue\",\n          \"float32\",\n          \"sunDirRange\",\n          [\"[]\", \"float32\", 2],\n        ];\n\n        this.PackMapEnvDataPFieldV74 = [\n          \"altitude\",\n          \"float32\",\n          \"angle\",\n          [\"[]\", \"float32\", 2],\n          \"clusterCount\",\n          \"uint16\",\n          \"clustering\",\n          [\"[]\", \"float32\", 2],\n          \"depth\",\n          \"float32\",\n          \"deviation\",\n          \"float32\",\n          \"deviationSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"extent\",\n          \"uint16\",\n          \"fade\",\n          \"float32\",\n          \"fieldDirection\",\n          [\"[]\", \"float32\", 3],\n          \"flags\",\n          \"uint16\",\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"opacity\",\n          [\"[]\", \"float32\", 2],\n          \"particleCount\",\n          \"uint16\",\n          \"period\",\n          [\"[]\", \"float32\", 2],\n          \"rotation\",\n          [\"[]\", \"float32\", 2],\n          \"scaleX\",\n          [\"[]\", \"float32\", 2],\n          \"scaleY\",\n          [\"[]\", \"float32\", 2],\n          \"seed\",\n          \"uint32\",\n          \"speed\",\n          [\"[]\", \"float32\", 2],\n          \"texColRow\",\n          [\"[]\", \"uint32\", 2],\n          \"texFPS\",\n          \"float32\",\n          \"texPath\",\n          Utils.getFileNameReader(),\n          \"type\",\n          \"uint8\",\n          \"name\",\n          Utils.getString16Reader(),\n          \"reserved\",\n          \"uint32\",\n        ];\n\n        this.PackMapEnvDataPFieldCutoutV45 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"x\",\n          [\"[]\", \"float32\", 4],\n          \"y\",\n          [\"[]\", \"float32\", 4],\n          \"z\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.PackMapEnvDataSkyV74 = [\n          \"flags\",\n          \"uint8\",\n          \"dayBrightness\",\n          \"float32\",\n          \"dayHazeBottom\",\n          \"float32\",\n          \"dayHazeDensity\",\n          \"float32\",\n          \"dayHazeFalloff\",\n          \"float32\",\n          \"dayLightIntensity\",\n          \"float32\",\n          \"dayStarDensity\",\n          \"float32\",\n          \"nightBrightness\",\n          \"float32\",\n          \"nightHazeBottom\",\n          \"float32\",\n          \"nightHazeDensity\",\n          \"float32\",\n          \"nightHazeFalloff\",\n          \"float32\",\n          \"nightLightIntensity\",\n          \"float32\",\n          \"nightStarDensity\",\n          \"float32\",\n          \"verticalOffset\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataSkyCardAttributesV74 = [\n          \"azimuth\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"hazeDensity\",\n          \"float32\",\n          \"latitude\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"minHaze\",\n          \"float32\",\n          \"scale\",\n          [\"[]\", \"float32\", 2],\n          \"speed\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"textureUV\",\n          [\"[]\", \"float32\", 4],\n          \"brightness\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataSkyCardV74 = [\n          \"day\",\n          this.PackMapEnvDataSkyCardAttributesV74,\n          \"night\",\n          this.PackMapEnvDataSkyCardAttributesV74,\n          \"flags\",\n          \"uint32\",\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataSkyCardsV74 = [\"cards\", Utils.getArrayReader(this.PackMapEnvDataSkyCardV74)];\n\n        this.PackMapEnvDataSpawnModelDataV45 = [\n          \"spawnRange\",\n          [\"[]\", \"uint32\", 2],\n          \"lifeSpan\",\n          [\"[]\", \"uint32\", 2],\n          \"scaleRange\",\n          [\"[]\", \"float32\", 2],\n          \"heightRange\",\n          [\"[]\", \"float32\", 2],\n          \"rotXRange\",\n          [\"[]\", \"float32\", 2],\n          \"rotYRange\",\n          [\"[]\", \"float32\", 2],\n          \"rotZRange\",\n          [\"[]\", \"float32\", 2],\n          \"probability\",\n          \"float32\",\n          \"delay\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"animSequence\",\n          Utils.getQWordReader(),\n          \"modelFile\",\n          Utils.getFileNameReader(),\n          \"maxConcurrent\",\n          \"uint16\",\n        ];\n\n        this.PackMapEnvDataSpawnListV45 = [\"spawns\", Utils.getArrayReader(this.PackMapEnvDataSpawnModelDataV45)];\n\n        this.PackMapEnvDataSpawnGroupsV45 = [\n          \"spawnGroups\",\n          Utils.getArrayReader(this.PackMapEnvDataSpawnListV45),\n          \"targets\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.PackMapEnvDataWaterV74 = [\n          \"waterFlags\",\n          \"uint32\",\n          \"animAmplitude\",\n          \"float32\",\n          \"animChoppiness\",\n          \"float32\",\n          \"animWind\",\n          [\"[]\", \"float32\", 2],\n          \"bumpAmount\",\n          \"float32\",\n          \"bumpAngle0\",\n          \"float32\",\n          \"bumpAngle1\",\n          \"float32\",\n          \"bumpScale0\",\n          \"float32\",\n          \"bumpScale1\",\n          \"float32\",\n          \"bumpSpeed0\",\n          \"float32\",\n          \"bumpSpeed1\",\n          \"float32\",\n          \"bumpTile0\",\n          \"float32\",\n          \"bumpTile1\",\n          \"float32\",\n          \"patternAngle\",\n          \"float32\",\n          \"patternTile\",\n          \"float32\",\n          \"patternSpeed\",\n          \"float32\",\n          \"patternEdge\",\n          \"float32\",\n          \"surfaceShallowColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceDeepColor\",\n          [\"[]\", \"uint8\", 4],\n          \"patternColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceFresnel\",\n          \"float32\",\n          \"distortAmount\",\n          \"float32\",\n          \"depthAttenuation\",\n          \"float32\",\n          \"materialFilename\",\n          Utils.getFileNameReader(),\n          \"textureFilenames\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"constantTokens\",\n          Utils.getArrayReader(\"uint32\"),\n          \"constantValues\",\n          Utils.getArrayReader([\"[]\", \"float32\", 4]),\n          \"foamSpawn\",\n          \"float32\",\n          \"foamDissolve\",\n          \"float32\",\n          \"foamDepthAttenuation\",\n          \"float32\",\n          \"foamColor0\",\n          [\"[]\", \"uint8\", 4],\n          \"foamColor1\",\n          [\"[]\", \"uint8\", 4],\n        ];\n\n        this.PackMapEnvDataWindV74 = [\n          \"azimuth\",\n          \"uint8\",\n          \"elevation\",\n          \"uint8\",\n          \"noise\",\n          \"uint8\",\n          \"speed\",\n          \"uint8\",\n          \"gust\",\n          \"uint8\",\n          \"gustFreq\",\n          \"uint8\",\n          \"gustSpeed\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataAudioV45 = [\"token\", Utils.getQWordReader()];\n\n        this.PackMapEnvDataShapeV45 = [\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"height\",\n          \"float32\",\n          \"fadeHorizInner\",\n          \"float32\",\n          \"fadeHorizOuter\",\n          \"float32\",\n          \"fadeVertical\",\n          \"float32\",\n          \"vertexArray\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n          \"shapeType\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataLocalV74 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV74),\n          \"lightingCharGroups\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharGroupV45),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV74),\n          \"coloredLightRings\",\n          Utils.getRefArrayReader(this.PackMapEnvDataColoredLightRingsV45),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV74),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV74),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV74),\n          \"particleFieldCutouts\",\n          Utils.getArrayReader(this.PackMapEnvDataPFieldCutoutV45),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV74),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV74),\n          \"spawns\",\n          Utils.getPointerReader(this.PackMapEnvDataSpawnGroupsV45),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV74),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV74),\n          \"audio\",\n          Utils.getRefArrayReader(this.PackMapEnvDataAudioV45),\n          \"name\",\n          Utils.getString16Reader(),\n          \"nightMods\",\n          Utils.getArrayReader(\"uint8\"),\n          \"bindTarget\",\n          Utils.getQWordReader(),\n          \"reserved\",\n          Utils.getString16Reader(),\n          \"type\",\n          \"uint8\",\n          \"guid\",\n          Utils.getQWordReader(),\n          \"shapeArray\",\n          Utils.getArrayReader(this.PackMapEnvDataShapeV45),\n        ];\n\n        this.PackMapEnvDataSkyModeTexV74 = [\n          \"texPathNE\",\n          Utils.getFileNameReader(),\n          \"texPathSW\",\n          Utils.getFileNameReader(),\n          \"texPathT\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackMapEnvDataGlobalV74 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV74),\n          \"lightingCharGroups\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharGroupV45),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV74),\n          \"coloredLightRings\",\n          Utils.getRefArrayReader(this.PackMapEnvDataColoredLightRingsV45),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV74),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV74),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV74),\n          \"particleFieldCutouts\",\n          Utils.getArrayReader(this.PackMapEnvDataPFieldCutoutV45),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV74),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV74),\n          \"spawns\",\n          Utils.getPointerReader(this.PackMapEnvDataSpawnGroupsV45),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV74),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV74),\n          \"audio\",\n          Utils.getRefArrayReader(this.PackMapEnvDataAudioV45),\n          \"name\",\n          Utils.getString16Reader(),\n          \"nightMods\",\n          Utils.getArrayReader(\"uint8\"),\n          \"bindTarget\",\n          Utils.getQWordReader(),\n          \"reserved\",\n          Utils.getString16Reader(),\n          \"skyModeTex\",\n          Utils.getArrayReader(this.PackMapEnvDataSkyModeTexV74),\n          \"starFile\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.__root = this.PackMapEnvironmentV74 = [\n          \"dataLocalArray\",\n          Utils.getArrayReader(this.PackMapEnvDataLocalV74),\n          \"dataGlobal\",\n          Utils.getPointerReader(this.PackMapEnvDataGlobalV74),\n        ];\n      },\n\n      // => Version: 73\n      73: function () {\n        this.PackMapEnvDataLightV73 = [\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"intensity\",\n          \"float32\",\n          \"direction\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.PackMapEnvDataLightingV73 = [\n          \"lights\",\n          Utils.getRefArrayReader(this.PackMapEnvDataLightV73),\n          \"shadowInfluence\",\n          \"float32\",\n          \"backlightColor\",\n          [\"[]\", \"uint8\", 3],\n          \"backlightIntensity\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataLightingCharV44 = [\n          \"sunScale\",\n          \"float32\",\n          \"saturation\",\n          \"float32\",\n          \"sunFill\",\n          \"float32\",\n          \"ambScale\",\n          \"float32\",\n          \"ambFill\",\n          \"float32\",\n          \"flags\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataLightingCharGroupV44 = [\n          \"lightingChar\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharV44),\n        ];\n\n        this.PackMapEnvDataLayerAttributesV73 = [\n          \"brightness\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"haze\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"velocity\",\n          [\"[]\", \"float32\", 2],\n          \"fadeWidth\",\n          \"float32\",\n          \"fadeEnd\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataLayerV73 = [\n          \"altitude\",\n          \"float32\",\n          \"cutOut\",\n          \"float32\",\n          \"depth\",\n          \"float32\",\n          \"extent\",\n          \"float32\",\n          \"scale\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"attributes\",\n          Utils.getArrayReader(this.PackMapEnvDataLayerAttributesV73),\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataCloudsV73 = [\"layers\", Utils.getArrayReader(this.PackMapEnvDataLayerV73)];\n\n        this.PackMapEnvDataColoredLightRingsV44 = [\n          \"range\",\n          [\"[]\", \"float32\", 2],\n          \"distances\",\n          [\"[]\", \"float32\", 6],\n          \"lightColors\",\n          [\"[]\", [\"[]\", \"uint8\", 4], 6],\n          \"shadowColors\",\n          [\"[]\", [\"[]\", \"uint8\", 4], 6],\n        ];\n\n        this.PackMapEnvDataEffectV73 = [\n          \"glow\",\n          [\"[]\", \"uint8\", 4],\n          \"tintColor\",\n          [\"[]\", \"uint8\", 4],\n          \"tintTargetColor\",\n          [\"[]\", \"uint8\", 4],\n          \"saturation\",\n          \"float32\",\n          \"tintAmount\",\n          \"float32\",\n          \"tintFocus\",\n          \"float32\",\n          \"glowLevel\",\n          [\"[]\", \"uint8\", 4],\n          \"glowAmplify\",\n          \"float32\",\n          \"focalDepth\",\n          \"float32\",\n          \"focalRange\",\n          \"float32\",\n          \"flatteningRange\",\n          [\"[]\", \"float32\", 2],\n          \"flatteningCharacterRange\",\n          [\"[]\", \"float32\", 2],\n        ];\n\n        this.PackMapEnvDataHazeV73 = [\n          \"nearColor\",\n          [\"[]\", \"uint8\", 4],\n          \"farColor\",\n          [\"[]\", \"uint8\", 4],\n          \"distRange\",\n          [\"[]\", \"float32\", 2],\n          \"heightColor\",\n          [\"[]\", \"uint8\", 4],\n          \"heightRange\",\n          [\"[]\", \"float32\", 2],\n          \"depthCue\",\n          \"float32\",\n          \"sunDirRange\",\n          [\"[]\", \"float32\", 2],\n        ];\n\n        this.PackMapEnvDataPFieldV73 = [\n          \"altitude\",\n          \"float32\",\n          \"angle\",\n          [\"[]\", \"float32\", 2],\n          \"clusterCount\",\n          \"uint16\",\n          \"clustering\",\n          [\"[]\", \"float32\", 2],\n          \"depth\",\n          \"float32\",\n          \"deviation\",\n          \"float32\",\n          \"deviationSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"extent\",\n          \"uint16\",\n          \"fade\",\n          \"float32\",\n          \"fieldDirection\",\n          [\"[]\", \"float32\", 3],\n          \"flags\",\n          \"uint16\",\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"opacity\",\n          [\"[]\", \"float32\", 2],\n          \"particleCount\",\n          \"uint16\",\n          \"period\",\n          [\"[]\", \"float32\", 2],\n          \"rotation\",\n          [\"[]\", \"float32\", 2],\n          \"scaleX\",\n          [\"[]\", \"float32\", 2],\n          \"scaleY\",\n          [\"[]\", \"float32\", 2],\n          \"seed\",\n          \"uint32\",\n          \"speed\",\n          [\"[]\", \"float32\", 2],\n          \"texColRow\",\n          [\"[]\", \"uint32\", 2],\n          \"texFPS\",\n          \"float32\",\n          \"texPath\",\n          Utils.getFileNameReader(),\n          \"type\",\n          \"uint8\",\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataPFieldCutoutV44 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"x\",\n          [\"[]\", \"float32\", 4],\n          \"y\",\n          [\"[]\", \"float32\", 4],\n          \"z\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.PackMapEnvDataSkyV73 = [\n          \"flags\",\n          \"uint8\",\n          \"dayBrightness\",\n          \"float32\",\n          \"dayHazeBottom\",\n          \"float32\",\n          \"dayHazeDensity\",\n          \"float32\",\n          \"dayHazeFalloff\",\n          \"float32\",\n          \"dayLightIntensity\",\n          \"float32\",\n          \"dayStarDensity\",\n          \"float32\",\n          \"nightBrightness\",\n          \"float32\",\n          \"nightHazeBottom\",\n          \"float32\",\n          \"nightHazeDensity\",\n          \"float32\",\n          \"nightHazeFalloff\",\n          \"float32\",\n          \"nightLightIntensity\",\n          \"float32\",\n          \"nightStarDensity\",\n          \"float32\",\n          \"verticalOffset\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataSkyCardAttributesV73 = [\n          \"azimuth\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"hazeDensity\",\n          \"float32\",\n          \"latitude\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"minHaze\",\n          \"float32\",\n          \"scale\",\n          [\"[]\", \"float32\", 2],\n          \"speed\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"textureUV\",\n          [\"[]\", \"float32\", 4],\n          \"brightness\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataSkyCardV73 = [\n          \"day\",\n          this.PackMapEnvDataSkyCardAttributesV73,\n          \"night\",\n          this.PackMapEnvDataSkyCardAttributesV73,\n          \"flags\",\n          \"uint32\",\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataSkyCardsV73 = [\"cards\", Utils.getArrayReader(this.PackMapEnvDataSkyCardV73)];\n\n        this.PackMapEnvDataSpawnModelDataV44 = [\n          \"spawnRange\",\n          [\"[]\", \"uint32\", 2],\n          \"lifeSpan\",\n          [\"[]\", \"uint32\", 2],\n          \"scaleRange\",\n          [\"[]\", \"float32\", 2],\n          \"heightRange\",\n          [\"[]\", \"float32\", 2],\n          \"rotXRange\",\n          [\"[]\", \"float32\", 2],\n          \"rotYRange\",\n          [\"[]\", \"float32\", 2],\n          \"rotZRange\",\n          [\"[]\", \"float32\", 2],\n          \"probability\",\n          \"float32\",\n          \"delay\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"animSequence\",\n          Utils.getQWordReader(),\n          \"modelFile\",\n          Utils.getFileNameReader(),\n          \"maxConcurrent\",\n          \"uint16\",\n        ];\n\n        this.PackMapEnvDataSpawnListV44 = [\"spawns\", Utils.getArrayReader(this.PackMapEnvDataSpawnModelDataV44)];\n\n        this.PackMapEnvDataSpawnGroupsV44 = [\n          \"spawnGroups\",\n          Utils.getArrayReader(this.PackMapEnvDataSpawnListV44),\n          \"targets\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.PackMapEnvDataWaterV73 = [\n          \"waterFlags\",\n          \"uint32\",\n          \"animAmplitude\",\n          \"float32\",\n          \"animChoppiness\",\n          \"float32\",\n          \"animWind\",\n          [\"[]\", \"float32\", 2],\n          \"bumpAmount\",\n          \"float32\",\n          \"bumpAngle0\",\n          \"float32\",\n          \"bumpAngle1\",\n          \"float32\",\n          \"bumpScale0\",\n          \"float32\",\n          \"bumpScale1\",\n          \"float32\",\n          \"bumpSpeed0\",\n          \"float32\",\n          \"bumpSpeed1\",\n          \"float32\",\n          \"bumpTile0\",\n          \"float32\",\n          \"bumpTile1\",\n          \"float32\",\n          \"patternAngle\",\n          \"float32\",\n          \"patternTile\",\n          \"float32\",\n          \"patternSpeed\",\n          \"float32\",\n          \"patternEdge\",\n          \"float32\",\n          \"surfaceShallowColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceDeepColor\",\n          [\"[]\", \"uint8\", 4],\n          \"patternColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceFresnel\",\n          \"float32\",\n          \"distortAmount\",\n          \"float32\",\n          \"depthAttenuation\",\n          \"float32\",\n          \"materialFilename\",\n          Utils.getFileNameReader(),\n          \"textureFilenames\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"constantTokens\",\n          Utils.getArrayReader(\"uint32\"),\n          \"constantValues\",\n          Utils.getArrayReader([\"[]\", \"float32\", 4]),\n          \"foamSpawn\",\n          \"float32\",\n          \"foamDissolve\",\n          \"float32\",\n          \"foamDepthAttenuation\",\n          \"float32\",\n          \"foamColor0\",\n          [\"[]\", \"uint8\", 4],\n          \"foamColor1\",\n          [\"[]\", \"uint8\", 4],\n        ];\n\n        this.PackMapEnvDataWindV73 = [\n          \"azimuth\",\n          \"uint8\",\n          \"elevation\",\n          \"uint8\",\n          \"noise\",\n          \"uint8\",\n          \"speed\",\n          \"uint8\",\n          \"gust\",\n          \"uint8\",\n          \"gustFreq\",\n          \"uint8\",\n          \"gustSpeed\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataAudioV44 = [\"token\", Utils.getQWordReader()];\n\n        this.PackMapEnvDataShapeV44 = [\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"height\",\n          \"float32\",\n          \"fadeHorizInner\",\n          \"float32\",\n          \"fadeHorizOuter\",\n          \"float32\",\n          \"fadeVertical\",\n          \"float32\",\n          \"vertexArray\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n          \"shapeType\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataLocalV73 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV73),\n          \"lightingCharGroups\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharGroupV44),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV73),\n          \"coloredLightRings\",\n          Utils.getRefArrayReader(this.PackMapEnvDataColoredLightRingsV44),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV73),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV73),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV73),\n          \"particleFieldCutouts\",\n          Utils.getArrayReader(this.PackMapEnvDataPFieldCutoutV44),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV73),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV73),\n          \"spawns\",\n          Utils.getPointerReader(this.PackMapEnvDataSpawnGroupsV44),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV73),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV73),\n          \"audio\",\n          Utils.getRefArrayReader(this.PackMapEnvDataAudioV44),\n          \"name\",\n          Utils.getString16Reader(),\n          \"nightMods\",\n          Utils.getArrayReader(\"uint8\"),\n          \"bindTarget\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint8\",\n          \"guid\",\n          Utils.getQWordReader(),\n          \"shapeArray\",\n          Utils.getArrayReader(this.PackMapEnvDataShapeV44),\n        ];\n\n        this.PackMapEnvDataSkyModeTexV73 = [\n          \"texPathNE\",\n          Utils.getFileNameReader(),\n          \"texPathSW\",\n          Utils.getFileNameReader(),\n          \"texPathT\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackMapEnvDataGlobalV73 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV73),\n          \"lightingCharGroups\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharGroupV44),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV73),\n          \"coloredLightRings\",\n          Utils.getRefArrayReader(this.PackMapEnvDataColoredLightRingsV44),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV73),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV73),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV73),\n          \"particleFieldCutouts\",\n          Utils.getArrayReader(this.PackMapEnvDataPFieldCutoutV44),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV73),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV73),\n          \"spawns\",\n          Utils.getPointerReader(this.PackMapEnvDataSpawnGroupsV44),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV73),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV73),\n          \"audio\",\n          Utils.getRefArrayReader(this.PackMapEnvDataAudioV44),\n          \"name\",\n          Utils.getString16Reader(),\n          \"nightMods\",\n          Utils.getArrayReader(\"uint8\"),\n          \"bindTarget\",\n          Utils.getQWordReader(),\n          \"skyModeTex\",\n          Utils.getArrayReader(this.PackMapEnvDataSkyModeTexV73),\n          \"starFile\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.__root = this.PackMapEnvironmentV73 = [\n          \"dataLocalArray\",\n          Utils.getArrayReader(this.PackMapEnvDataLocalV73),\n          \"dataGlobal\",\n          Utils.getPointerReader(this.PackMapEnvDataGlobalV73),\n        ];\n      },\n\n      // => Version: 72\n      72: function () {\n        this.PackMapEnvDataLightV72 = [\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"intensity\",\n          \"float32\",\n          \"direction\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.PackMapEnvDataLightingV72 = [\n          \"lights\",\n          Utils.getRefArrayReader(this.PackMapEnvDataLightV72),\n          \"shadowInfluence\",\n          \"float32\",\n          \"backlightColor\",\n          [\"[]\", \"uint8\", 3],\n          \"backlightIntensity\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataLightingCharV43 = [\n          \"sunScale\",\n          \"float32\",\n          \"saturation\",\n          \"float32\",\n          \"sunFill\",\n          \"float32\",\n          \"ambScale\",\n          \"float32\",\n          \"ambFill\",\n          \"float32\",\n          \"flags\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataLightingCharGroupV43 = [\n          \"lightingChar\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharV43),\n        ];\n\n        this.PackMapEnvDataLayerAttributesV72 = [\n          \"brightness\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"haze\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"velocity\",\n          [\"[]\", \"float32\", 2],\n          \"fadeWidth\",\n          \"float32\",\n          \"fadeEnd\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataLayerV72 = [\n          \"altitude\",\n          \"float32\",\n          \"cutOut\",\n          \"float32\",\n          \"depth\",\n          \"float32\",\n          \"extent\",\n          \"float32\",\n          \"scale\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"attributes\",\n          Utils.getArrayReader(this.PackMapEnvDataLayerAttributesV72),\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataCloudsV72 = [\"layers\", Utils.getArrayReader(this.PackMapEnvDataLayerV72)];\n\n        this.PackMapEnvDataColoredLightRingsV43 = [\n          \"range\",\n          [\"[]\", \"float32\", 2],\n          \"distances\",\n          [\"[]\", \"float32\", 6],\n          \"lightColors\",\n          [\"[]\", [\"[]\", \"uint8\", 4], 6],\n          \"shadowColors\",\n          [\"[]\", [\"[]\", \"uint8\", 4], 6],\n        ];\n\n        this.PackMapEnvDataEffectV72 = [\n          \"glow\",\n          [\"[]\", \"uint8\", 4],\n          \"tintColor\",\n          [\"[]\", \"uint8\", 4],\n          \"tintTargetColor\",\n          [\"[]\", \"uint8\", 4],\n          \"saturation\",\n          \"float32\",\n          \"tintAmount\",\n          \"float32\",\n          \"tintFocus\",\n          \"float32\",\n          \"glowLevel\",\n          [\"[]\", \"uint8\", 4],\n          \"glowAmplify\",\n          \"float32\",\n          \"focalDepth\",\n          \"float32\",\n          \"focalRange\",\n          \"float32\",\n          \"flatteningRange\",\n          [\"[]\", \"float32\", 2],\n          \"flatteningCharacterRange\",\n          [\"[]\", \"float32\", 2],\n        ];\n\n        this.PackMapEnvDataHazeV72 = [\n          \"nearColor\",\n          [\"[]\", \"uint8\", 4],\n          \"farColor\",\n          [\"[]\", \"uint8\", 4],\n          \"distRange\",\n          [\"[]\", \"float32\", 2],\n          \"heightColor\",\n          [\"[]\", \"uint8\", 4],\n          \"heightRange\",\n          [\"[]\", \"float32\", 2],\n          \"depthCue\",\n          \"float32\",\n          \"sunDirRange\",\n          [\"[]\", \"float32\", 2],\n        ];\n\n        this.PackMapEnvDataPFieldV72 = [\n          \"altitude\",\n          \"float32\",\n          \"angle\",\n          [\"[]\", \"float32\", 2],\n          \"clusterCount\",\n          \"uint16\",\n          \"clustering\",\n          [\"[]\", \"float32\", 2],\n          \"depth\",\n          \"float32\",\n          \"deviation\",\n          \"float32\",\n          \"deviationSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"extent\",\n          \"uint16\",\n          \"fade\",\n          \"float32\",\n          \"fieldDirection\",\n          [\"[]\", \"float32\", 3],\n          \"flags\",\n          \"uint16\",\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"opacity\",\n          [\"[]\", \"float32\", 2],\n          \"particleCount\",\n          \"uint16\",\n          \"period\",\n          [\"[]\", \"float32\", 2],\n          \"rotation\",\n          [\"[]\", \"float32\", 2],\n          \"scaleX\",\n          [\"[]\", \"float32\", 2],\n          \"scaleY\",\n          [\"[]\", \"float32\", 2],\n          \"seed\",\n          \"uint32\",\n          \"speed\",\n          [\"[]\", \"float32\", 2],\n          \"texColRow\",\n          [\"[]\", \"uint32\", 2],\n          \"texFPS\",\n          \"float32\",\n          \"texPath\",\n          Utils.getFileNameReader(),\n          \"type\",\n          \"uint8\",\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataPFieldCutoutV43 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"x\",\n          [\"[]\", \"float32\", 4],\n          \"y\",\n          [\"[]\", \"float32\", 4],\n          \"z\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.PackMapEnvDataSkyV72 = [\n          \"flags\",\n          \"uint8\",\n          \"dayBrightness\",\n          \"float32\",\n          \"dayHazeBottom\",\n          \"float32\",\n          \"dayHazeDensity\",\n          \"float32\",\n          \"dayHazeFalloff\",\n          \"float32\",\n          \"dayLightIntensity\",\n          \"float32\",\n          \"dayStarDensity\",\n          \"float32\",\n          \"nightBrightness\",\n          \"float32\",\n          \"nightHazeBottom\",\n          \"float32\",\n          \"nightHazeDensity\",\n          \"float32\",\n          \"nightHazeFalloff\",\n          \"float32\",\n          \"nightLightIntensity\",\n          \"float32\",\n          \"nightStarDensity\",\n          \"float32\",\n          \"verticalOffset\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataSkyCardAttributesV72 = [\n          \"azimuth\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"hazeDensity\",\n          \"float32\",\n          \"latitude\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"minHaze\",\n          \"float32\",\n          \"scale\",\n          [\"[]\", \"float32\", 2],\n          \"speed\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"textureUV\",\n          [\"[]\", \"float32\", 4],\n          \"brightness\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataSkyCardV72 = [\n          \"day\",\n          this.PackMapEnvDataSkyCardAttributesV72,\n          \"night\",\n          this.PackMapEnvDataSkyCardAttributesV72,\n          \"flags\",\n          \"uint32\",\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataSkyCardsV72 = [\"cards\", Utils.getArrayReader(this.PackMapEnvDataSkyCardV72)];\n\n        this.PackMapEnvDataSpawnModelDataV43 = [\n          \"spawnRange\",\n          [\"[]\", \"uint32\", 2],\n          \"lifeSpan\",\n          [\"[]\", \"uint32\", 2],\n          \"scaleRange\",\n          [\"[]\", \"float32\", 2],\n          \"heightRange\",\n          [\"[]\", \"float32\", 2],\n          \"rotXRange\",\n          [\"[]\", \"float32\", 2],\n          \"rotYRange\",\n          [\"[]\", \"float32\", 2],\n          \"rotZRange\",\n          [\"[]\", \"float32\", 2],\n          \"probability\",\n          \"float32\",\n          \"delay\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"animSequence\",\n          Utils.getQWordReader(),\n          \"modelFile\",\n          Utils.getFileNameReader(),\n          \"maxConcurrent\",\n          \"uint16\",\n        ];\n\n        this.PackMapEnvDataSpawnListV43 = [\"spawns\", Utils.getArrayReader(this.PackMapEnvDataSpawnModelDataV43)];\n\n        this.PackMapEnvDataSpawnGroupsV43 = [\n          \"spawnGroups\",\n          Utils.getArrayReader(this.PackMapEnvDataSpawnListV43),\n          \"targets\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.PackMapEnvDataWaterV72 = [\n          \"waterFlags\",\n          \"uint32\",\n          \"animAmplitude\",\n          \"float32\",\n          \"animChoppiness\",\n          \"float32\",\n          \"animWind\",\n          [\"[]\", \"float32\", 2],\n          \"bumpAmount\",\n          \"float32\",\n          \"bumpAngle0\",\n          \"float32\",\n          \"bumpAngle1\",\n          \"float32\",\n          \"bumpScale0\",\n          \"float32\",\n          \"bumpScale1\",\n          \"float32\",\n          \"bumpSpeed0\",\n          \"float32\",\n          \"bumpSpeed1\",\n          \"float32\",\n          \"bumpTile0\",\n          \"float32\",\n          \"bumpTile1\",\n          \"float32\",\n          \"patternAngle\",\n          \"float32\",\n          \"patternTile\",\n          \"float32\",\n          \"patternSpeed\",\n          \"float32\",\n          \"patternEdge\",\n          \"float32\",\n          \"surfaceShallowColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceDeepColor\",\n          [\"[]\", \"uint8\", 4],\n          \"patternColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceFresnel\",\n          \"float32\",\n          \"distortAmount\",\n          \"float32\",\n          \"depthAttenuation\",\n          \"float32\",\n          \"materialFilename\",\n          Utils.getFileNameReader(),\n          \"textureFilenames\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"constantTokens\",\n          Utils.getArrayReader(\"uint32\"),\n          \"constantValues\",\n          Utils.getArrayReader([\"[]\", \"float32\", 4]),\n          \"foamSpawn\",\n          \"float32\",\n          \"foamDissolve\",\n          \"float32\",\n          \"foamDepthAttenuation\",\n          \"float32\",\n          \"foamColor0\",\n          [\"[]\", \"uint8\", 4],\n          \"foamColor1\",\n          [\"[]\", \"uint8\", 4],\n        ];\n\n        this.PackMapEnvDataWindV72 = [\n          \"azimuth\",\n          \"uint8\",\n          \"elevation\",\n          \"uint8\",\n          \"noise\",\n          \"uint8\",\n          \"speed\",\n          \"uint8\",\n          \"gust\",\n          \"uint8\",\n          \"gustFreq\",\n          \"uint8\",\n          \"gustSpeed\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataShapeV43 = [\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"height\",\n          \"float32\",\n          \"fadeHorizInner\",\n          \"float32\",\n          \"fadeHorizOuter\",\n          \"float32\",\n          \"fadeVertical\",\n          \"float32\",\n          \"vertexArray\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n          \"shapeType\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataLocalV72 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV72),\n          \"lightingCharGroups\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharGroupV43),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV72),\n          \"coloredLightRings\",\n          Utils.getRefArrayReader(this.PackMapEnvDataColoredLightRingsV43),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV72),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV72),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV72),\n          \"particleFieldCutouts\",\n          Utils.getArrayReader(this.PackMapEnvDataPFieldCutoutV43),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV72),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV72),\n          \"spawns\",\n          Utils.getPointerReader(this.PackMapEnvDataSpawnGroupsV43),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV72),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV72),\n          \"name\",\n          Utils.getString16Reader(),\n          \"nightMods\",\n          Utils.getArrayReader(\"uint8\"),\n          \"bindTarget\",\n          Utils.getQWordReader(),\n          \"audioToken\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint8\",\n          \"guid\",\n          Utils.getQWordReader(),\n          \"shapeArray\",\n          Utils.getArrayReader(this.PackMapEnvDataShapeV43),\n        ];\n\n        this.PackMapEnvDataSkyModeTexV72 = [\n          \"texPathNE\",\n          Utils.getFileNameReader(),\n          \"texPathSW\",\n          Utils.getFileNameReader(),\n          \"texPathT\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackMapEnvDataGlobalV72 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV72),\n          \"lightingCharGroups\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharGroupV43),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV72),\n          \"coloredLightRings\",\n          Utils.getRefArrayReader(this.PackMapEnvDataColoredLightRingsV43),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV72),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV72),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV72),\n          \"particleFieldCutouts\",\n          Utils.getArrayReader(this.PackMapEnvDataPFieldCutoutV43),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV72),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV72),\n          \"spawns\",\n          Utils.getPointerReader(this.PackMapEnvDataSpawnGroupsV43),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV72),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV72),\n          \"name\",\n          Utils.getString16Reader(),\n          \"nightMods\",\n          Utils.getArrayReader(\"uint8\"),\n          \"bindTarget\",\n          Utils.getQWordReader(),\n          \"audioToken\",\n          Utils.getQWordReader(),\n          \"skyModeTex\",\n          Utils.getArrayReader(this.PackMapEnvDataSkyModeTexV72),\n          \"starFile\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.__root = this.PackMapEnvironmentV72 = [\n          \"dataLocalArray\",\n          Utils.getArrayReader(this.PackMapEnvDataLocalV72),\n          \"dataGlobal\",\n          Utils.getPointerReader(this.PackMapEnvDataGlobalV72),\n        ];\n      },\n\n      // => Version: 71, ReferencedFunction: 0xEB91A0\n      71: function () {\n        this.PackMapEnvDataLightV71 = [\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"intensity\",\n          \"float32\",\n          \"direction\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.PackMapEnvDataLightingV71 = [\n          \"lights\",\n          Utils.getRefArrayReader(this.PackMapEnvDataLightV71),\n          \"shadowInfluence\",\n          \"float32\",\n          \"backlightColor\",\n          [\"[]\", \"uint8\", 3],\n          \"backlightIntensity\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataLightingCharV42 = [\n          \"sunScale\",\n          \"float32\",\n          \"saturation\",\n          \"float32\",\n          \"sunFill\",\n          \"float32\",\n          \"ambScale\",\n          \"float32\",\n          \"ambFill\",\n          \"float32\",\n          \"flags\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataLightingCharGroupV42 = [\n          \"lightingChar\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharV42),\n        ];\n\n        this.PackMapEnvDataLayerAttributesV71 = [\n          \"brightness\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"haze\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"velocity\",\n          [\"[]\", \"float32\", 2],\n          \"fadeWidth\",\n          \"float32\",\n          \"fadeEnd\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataLayerV71 = [\n          \"altitude\",\n          \"float32\",\n          \"cutOut\",\n          \"float32\",\n          \"depth\",\n          \"float32\",\n          \"extent\",\n          \"float32\",\n          \"scale\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"attributes\",\n          Utils.getArrayReader(this.PackMapEnvDataLayerAttributesV71),\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataCloudsV71 = [\"layers\", Utils.getArrayReader(this.PackMapEnvDataLayerV71)];\n\n        this.PackMapEnvDataColoredLightRingsV42 = [\n          \"range\",\n          [\"[]\", \"float32\", 2],\n          \"distances\",\n          [\"[]\", \"float32\", 6],\n          \"lightColors\",\n          [\"[]\", [\"[]\", \"uint8\", 4], 6],\n          \"shadowColors\",\n          [\"[]\", [\"[]\", \"uint8\", 4], 6],\n        ];\n\n        this.PackMapEnvDataEffectV71 = [\n          \"glow\",\n          [\"[]\", \"uint8\", 4],\n          \"tintColor\",\n          [\"[]\", \"uint8\", 4],\n          \"tintTargetColor\",\n          [\"[]\", \"uint8\", 4],\n          \"saturation\",\n          \"float32\",\n          \"tintAmount\",\n          \"float32\",\n          \"tintFocus\",\n          \"float32\",\n          \"glowLevel\",\n          [\"[]\", \"uint8\", 4],\n          \"glowAmplify\",\n          \"float32\",\n          \"focalDepth\",\n          \"float32\",\n          \"focalRange\",\n          \"float32\",\n          \"flatteningRange\",\n          [\"[]\", \"float32\", 2],\n          \"flatteningCharacterRange\",\n          [\"[]\", \"float32\", 2],\n        ];\n\n        this.PackMapEnvDataHazeV71 = [\n          \"nearColor\",\n          [\"[]\", \"uint8\", 4],\n          \"farColor\",\n          [\"[]\", \"uint8\", 4],\n          \"distRange\",\n          [\"[]\", \"float32\", 2],\n          \"heightColor\",\n          [\"[]\", \"uint8\", 4],\n          \"heightRange\",\n          [\"[]\", \"float32\", 2],\n          \"depthCue\",\n          \"float32\",\n          \"sunDirRange\",\n          [\"[]\", \"float32\", 2],\n        ];\n\n        this.PackMapEnvDataPFieldV71 = [\n          \"altitude\",\n          \"float32\",\n          \"angle\",\n          [\"[]\", \"float32\", 2],\n          \"clusterCount\",\n          \"uint16\",\n          \"clustering\",\n          [\"[]\", \"float32\", 2],\n          \"depth\",\n          \"float32\",\n          \"deviation\",\n          \"float32\",\n          \"deviationSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"extent\",\n          \"uint16\",\n          \"fade\",\n          \"float32\",\n          \"fieldDirection\",\n          [\"[]\", \"float32\", 3],\n          \"flags\",\n          \"uint16\",\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"opacity\",\n          [\"[]\", \"float32\", 2],\n          \"particleCount\",\n          \"uint16\",\n          \"period\",\n          [\"[]\", \"float32\", 2],\n          \"rotation\",\n          [\"[]\", \"float32\", 2],\n          \"scaleX\",\n          [\"[]\", \"float32\", 2],\n          \"scaleY\",\n          [\"[]\", \"float32\", 2],\n          \"seed\",\n          \"uint32\",\n          \"speed\",\n          [\"[]\", \"float32\", 2],\n          \"texColRow\",\n          [\"[]\", \"uint32\", 2],\n          \"texFPS\",\n          \"float32\",\n          \"texPath\",\n          Utils.getFileNameReader(),\n          \"type\",\n          \"uint8\",\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataPFieldCutoutV42 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"x\",\n          [\"[]\", \"float32\", 4],\n          \"y\",\n          [\"[]\", \"float32\", 4],\n          \"z\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.PackMapEnvDataSkyV71 = [\n          \"flags\",\n          \"uint8\",\n          \"dayBrightness\",\n          \"float32\",\n          \"dayHazeBottom\",\n          \"float32\",\n          \"dayHazeDensity\",\n          \"float32\",\n          \"dayHazeFalloff\",\n          \"float32\",\n          \"dayLightIntensity\",\n          \"float32\",\n          \"dayStarDensity\",\n          \"float32\",\n          \"nightBrightness\",\n          \"float32\",\n          \"nightHazeBottom\",\n          \"float32\",\n          \"nightHazeDensity\",\n          \"float32\",\n          \"nightHazeFalloff\",\n          \"float32\",\n          \"nightLightIntensity\",\n          \"float32\",\n          \"nightStarDensity\",\n          \"float32\",\n          \"verticalOffset\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataSkyCardAttributesV71 = [\n          \"azimuth\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"hazeDensity\",\n          \"float32\",\n          \"latitude\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"minHaze\",\n          \"float32\",\n          \"scale\",\n          [\"[]\", \"float32\", 2],\n          \"speed\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"textureUV\",\n          [\"[]\", \"float32\", 4],\n          \"brightness\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataSkyCardV71 = [\n          \"day\",\n          this.PackMapEnvDataSkyCardAttributesV71,\n          \"night\",\n          this.PackMapEnvDataSkyCardAttributesV71,\n          \"flags\",\n          \"uint32\",\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataSkyCardsV71 = [\"cards\", Utils.getArrayReader(this.PackMapEnvDataSkyCardV71)];\n\n        this.PackMapEnvDataSpawnModelDataV42 = [\n          \"spawnRange\",\n          [\"[]\", \"uint32\", 2],\n          \"lifeSpan\",\n          [\"[]\", \"uint32\", 2],\n          \"scaleRange\",\n          [\"[]\", \"float32\", 2],\n          \"heightRange\",\n          [\"[]\", \"float32\", 2],\n          \"rotXRange\",\n          [\"[]\", \"float32\", 2],\n          \"rotYRange\",\n          [\"[]\", \"float32\", 2],\n          \"rotZRange\",\n          [\"[]\", \"float32\", 2],\n          \"probability\",\n          \"float32\",\n          \"delay\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"animSequence\",\n          Utils.getQWordReader(),\n          \"modelFile\",\n          Utils.getFileNameReader(),\n          \"maxConcurrent\",\n          \"uint16\",\n        ];\n\n        this.PackMapEnvDataSpawnListV42 = [\"spawns\", Utils.getArrayReader(this.PackMapEnvDataSpawnModelDataV42)];\n\n        this.PackMapEnvDataSpawnGroupsV42 = [\n          \"spawnGroups\",\n          Utils.getArrayReader(this.PackMapEnvDataSpawnListV42),\n          \"targets\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.PackMapEnvDataWaterV71 = [\n          \"waterFlags\",\n          \"uint32\",\n          \"animAmplitude\",\n          \"float32\",\n          \"animChoppiness\",\n          \"float32\",\n          \"animWind\",\n          [\"[]\", \"float32\", 2],\n          \"bumpAmount\",\n          \"float32\",\n          \"bumpAngle0\",\n          \"float32\",\n          \"bumpAngle1\",\n          \"float32\",\n          \"bumpScale0\",\n          \"float32\",\n          \"bumpScale1\",\n          \"float32\",\n          \"bumpSpeed0\",\n          \"float32\",\n          \"bumpSpeed1\",\n          \"float32\",\n          \"bumpTile0\",\n          \"float32\",\n          \"bumpTile1\",\n          \"float32\",\n          \"patternAngle\",\n          \"float32\",\n          \"patternTile\",\n          \"float32\",\n          \"patternSpeed\",\n          \"float32\",\n          \"patternEdge\",\n          \"float32\",\n          \"surfaceShallowColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceDeepColor\",\n          [\"[]\", \"uint8\", 4],\n          \"patternColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceFresnel\",\n          \"float32\",\n          \"distortAmount\",\n          \"float32\",\n          \"depthAttenuation\",\n          \"float32\",\n          \"materialFilename\",\n          Utils.getFileNameReader(),\n          \"textureFilenames\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"constantTokens\",\n          Utils.getArrayReader(\"uint32\"),\n          \"constantValues\",\n          Utils.getArrayReader([\"[]\", \"float32\", 4]),\n          \"foamSpawn\",\n          \"float32\",\n          \"foamDissolve\",\n          \"float32\",\n          \"foamDepthAttenuation\",\n          \"float32\",\n          \"foamColor0\",\n          [\"[]\", \"uint8\", 4],\n          \"foamColor1\",\n          [\"[]\", \"uint8\", 4],\n        ];\n\n        this.PackMapEnvDataWindV71 = [\n          \"azimuth\",\n          \"uint8\",\n          \"elevation\",\n          \"uint8\",\n          \"noise\",\n          \"uint8\",\n          \"speed\",\n          \"uint8\",\n          \"gust\",\n          \"uint8\",\n          \"gustFreq\",\n          \"uint8\",\n          \"gustSpeed\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataShapeV42 = [\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"height\",\n          \"float32\",\n          \"fadeHorizInner\",\n          \"float32\",\n          \"fadeHorizOuter\",\n          \"float32\",\n          \"fadeVertical\",\n          \"float32\",\n          \"vertexArray\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n          \"shapeType\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataLocalV71 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV71),\n          \"lightingCharGroups\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharGroupV42),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV71),\n          \"coloredLightRings\",\n          Utils.getRefArrayReader(this.PackMapEnvDataColoredLightRingsV42),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV71),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV71),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV71),\n          \"particleFieldCutouts\",\n          Utils.getArrayReader(this.PackMapEnvDataPFieldCutoutV42),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV71),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV71),\n          \"spawns\",\n          Utils.getPointerReader(this.PackMapEnvDataSpawnGroupsV42),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV71),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV71),\n          \"name\",\n          Utils.getString16Reader(),\n          \"nightMods\",\n          Utils.getArrayReader(\"uint8\"),\n          \"bindTarget\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint8\",\n          \"guid\",\n          Utils.getQWordReader(),\n          \"shapeArray\",\n          Utils.getArrayReader(this.PackMapEnvDataShapeV42),\n        ];\n\n        this.PackMapEnvDataSkyModeTexV71 = [\n          \"texPathNE\",\n          Utils.getFileNameReader(),\n          \"texPathSW\",\n          Utils.getFileNameReader(),\n          \"texPathT\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackMapEnvDataGlobalV71 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV71),\n          \"lightingCharGroups\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharGroupV42),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV71),\n          \"coloredLightRings\",\n          Utils.getRefArrayReader(this.PackMapEnvDataColoredLightRingsV42),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV71),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV71),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV71),\n          \"particleFieldCutouts\",\n          Utils.getArrayReader(this.PackMapEnvDataPFieldCutoutV42),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV71),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV71),\n          \"spawns\",\n          Utils.getPointerReader(this.PackMapEnvDataSpawnGroupsV42),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV71),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV71),\n          \"name\",\n          Utils.getString16Reader(),\n          \"nightMods\",\n          Utils.getArrayReader(\"uint8\"),\n          \"bindTarget\",\n          Utils.getQWordReader(),\n          \"skyModeTex\",\n          Utils.getArrayReader(this.PackMapEnvDataSkyModeTexV71),\n          \"starFile\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.__root = this.PackMapEnvironmentV71 = [\n          \"dataLocalArray\",\n          Utils.getArrayReader(this.PackMapEnvDataLocalV71),\n          \"dataGlobal\",\n          Utils.getPointerReader(this.PackMapEnvDataGlobalV71),\n        ];\n      },\n\n      // => Version: 70, ReferencedFunction: 0xEB9150\n      70: function () {\n        this.PackMapEnvDataLightV70 = [\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"intensity\",\n          \"float32\",\n          \"direction\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.PackMapEnvDataLightingV70 = [\n          \"lights\",\n          Utils.getRefArrayReader(this.PackMapEnvDataLightV70),\n          \"shadowInfluence\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataLightingCharV41 = [\n          \"sunScale\",\n          \"float32\",\n          \"saturation\",\n          \"float32\",\n          \"sunFill\",\n          \"float32\",\n          \"ambScale\",\n          \"float32\",\n          \"ambFill\",\n          \"float32\",\n          \"flags\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataLightingCharGroupV41 = [\n          \"lightingChar\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharV41),\n        ];\n\n        this.PackMapEnvDataLayerAttributesV70 = [\n          \"brightness\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"haze\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"velocity\",\n          [\"[]\", \"float32\", 2],\n          \"fadeWidth\",\n          \"float32\",\n          \"fadeEnd\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataLayerV70 = [\n          \"altitude\",\n          \"float32\",\n          \"cutOut\",\n          \"float32\",\n          \"depth\",\n          \"float32\",\n          \"extent\",\n          \"float32\",\n          \"scale\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"attributes\",\n          Utils.getArrayReader(this.PackMapEnvDataLayerAttributesV70),\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataCloudsV70 = [\"layers\", Utils.getArrayReader(this.PackMapEnvDataLayerV70)];\n\n        this.PackMapEnvDataColoredLightRingsV41 = [\n          \"range\",\n          [\"[]\", \"float32\", 2],\n          \"distances\",\n          [\"[]\", \"float32\", 6],\n          \"lightColors\",\n          [\"[]\", [\"[]\", \"uint8\", 4], 6],\n          \"shadowColors\",\n          [\"[]\", [\"[]\", \"uint8\", 4], 6],\n        ];\n\n        this.PackMapEnvDataEffectV70 = [\n          \"glow\",\n          [\"[]\", \"uint8\", 4],\n          \"tintColor\",\n          [\"[]\", \"uint8\", 4],\n          \"tintTargetColor\",\n          [\"[]\", \"uint8\", 4],\n          \"saturation\",\n          \"float32\",\n          \"tintAmount\",\n          \"float32\",\n          \"tintFocus\",\n          \"float32\",\n          \"glowLevel\",\n          [\"[]\", \"uint8\", 4],\n          \"glowAmplify\",\n          \"float32\",\n          \"focalDepth\",\n          \"float32\",\n          \"focalRange\",\n          \"float32\",\n          \"flatteningRange\",\n          [\"[]\", \"float32\", 2],\n          \"flatteningCharacterRange\",\n          [\"[]\", \"float32\", 2],\n        ];\n\n        this.PackMapEnvDataHazeV70 = [\n          \"nearColor\",\n          [\"[]\", \"uint8\", 4],\n          \"farColor\",\n          [\"[]\", \"uint8\", 4],\n          \"distRange\",\n          [\"[]\", \"float32\", 2],\n          \"heightColor\",\n          [\"[]\", \"uint8\", 4],\n          \"heightRange\",\n          [\"[]\", \"float32\", 2],\n          \"depthCue\",\n          \"float32\",\n          \"sunDirRange\",\n          [\"[]\", \"float32\", 2],\n        ];\n\n        this.PackMapEnvDataPFieldV70 = [\n          \"altitude\",\n          \"float32\",\n          \"angle\",\n          [\"[]\", \"float32\", 2],\n          \"clusterCount\",\n          \"uint16\",\n          \"clustering\",\n          [\"[]\", \"float32\", 2],\n          \"depth\",\n          \"float32\",\n          \"deviation\",\n          \"float32\",\n          \"deviationSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"extent\",\n          \"uint16\",\n          \"fade\",\n          \"float32\",\n          \"fieldDirection\",\n          [\"[]\", \"float32\", 3],\n          \"flags\",\n          \"uint16\",\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"opacity\",\n          [\"[]\", \"float32\", 2],\n          \"particleCount\",\n          \"uint16\",\n          \"period\",\n          [\"[]\", \"float32\", 2],\n          \"rotation\",\n          [\"[]\", \"float32\", 2],\n          \"scaleX\",\n          [\"[]\", \"float32\", 2],\n          \"scaleY\",\n          [\"[]\", \"float32\", 2],\n          \"seed\",\n          \"uint32\",\n          \"speed\",\n          [\"[]\", \"float32\", 2],\n          \"texColRow\",\n          [\"[]\", \"uint32\", 2],\n          \"texFPS\",\n          \"float32\",\n          \"texPath\",\n          Utils.getFileNameReader(),\n          \"type\",\n          \"uint8\",\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataPFieldCutoutV41 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"x\",\n          [\"[]\", \"float32\", 4],\n          \"y\",\n          [\"[]\", \"float32\", 4],\n          \"z\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.PackMapEnvDataSkyV70 = [\n          \"flags\",\n          \"uint8\",\n          \"dayBrightness\",\n          \"float32\",\n          \"dayHazeBottom\",\n          \"float32\",\n          \"dayHazeDensity\",\n          \"float32\",\n          \"dayHazeFalloff\",\n          \"float32\",\n          \"dayLightIntensity\",\n          \"float32\",\n          \"dayStarDensity\",\n          \"float32\",\n          \"nightBrightness\",\n          \"float32\",\n          \"nightHazeBottom\",\n          \"float32\",\n          \"nightHazeDensity\",\n          \"float32\",\n          \"nightHazeFalloff\",\n          \"float32\",\n          \"nightLightIntensity\",\n          \"float32\",\n          \"nightStarDensity\",\n          \"float32\",\n          \"verticalOffset\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataSkyCardAttributesV70 = [\n          \"azimuth\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"hazeDensity\",\n          \"float32\",\n          \"latitude\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"minHaze\",\n          \"float32\",\n          \"scale\",\n          [\"[]\", \"float32\", 2],\n          \"speed\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"textureUV\",\n          [\"[]\", \"float32\", 4],\n          \"brightness\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataSkyCardV70 = [\n          \"day\",\n          this.PackMapEnvDataSkyCardAttributesV70,\n          \"night\",\n          this.PackMapEnvDataSkyCardAttributesV70,\n          \"flags\",\n          \"uint32\",\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataSkyCardsV70 = [\"cards\", Utils.getArrayReader(this.PackMapEnvDataSkyCardV70)];\n\n        this.PackMapEnvDataSpawnModelDataV41 = [\n          \"spawnRange\",\n          [\"[]\", \"uint32\", 2],\n          \"lifeSpan\",\n          [\"[]\", \"uint32\", 2],\n          \"scaleRange\",\n          [\"[]\", \"float32\", 2],\n          \"heightRange\",\n          [\"[]\", \"float32\", 2],\n          \"rotXRange\",\n          [\"[]\", \"float32\", 2],\n          \"rotYRange\",\n          [\"[]\", \"float32\", 2],\n          \"rotZRange\",\n          [\"[]\", \"float32\", 2],\n          \"probability\",\n          \"float32\",\n          \"delay\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"animSequence\",\n          Utils.getQWordReader(),\n          \"modelFile\",\n          Utils.getFileNameReader(),\n          \"maxConcurrent\",\n          \"uint16\",\n        ];\n\n        this.PackMapEnvDataSpawnListV41 = [\"spawns\", Utils.getArrayReader(this.PackMapEnvDataSpawnModelDataV41)];\n\n        this.PackMapEnvDataSpawnGroupsV41 = [\n          \"spawnGroups\",\n          Utils.getArrayReader(this.PackMapEnvDataSpawnListV41),\n          \"targets\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.PackMapEnvDataWaterV70 = [\n          \"waterFlags\",\n          \"uint32\",\n          \"animAmplitude\",\n          \"float32\",\n          \"animChoppiness\",\n          \"float32\",\n          \"animWind\",\n          [\"[]\", \"float32\", 2],\n          \"bumpAmount\",\n          \"float32\",\n          \"bumpAngle0\",\n          \"float32\",\n          \"bumpAngle1\",\n          \"float32\",\n          \"bumpScale0\",\n          \"float32\",\n          \"bumpScale1\",\n          \"float32\",\n          \"bumpSpeed0\",\n          \"float32\",\n          \"bumpSpeed1\",\n          \"float32\",\n          \"bumpTile0\",\n          \"float32\",\n          \"bumpTile1\",\n          \"float32\",\n          \"patternAngle\",\n          \"float32\",\n          \"patternTile\",\n          \"float32\",\n          \"patternSpeed\",\n          \"float32\",\n          \"patternEdge\",\n          \"float32\",\n          \"surfaceShallowColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceDeepColor\",\n          [\"[]\", \"uint8\", 4],\n          \"patternColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceFresnel\",\n          \"float32\",\n          \"distortAmount\",\n          \"float32\",\n          \"depthAttenuation\",\n          \"float32\",\n          \"materialFilename\",\n          Utils.getFileNameReader(),\n          \"textureFilenames\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"constantTokens\",\n          Utils.getArrayReader(\"uint32\"),\n          \"constantValues\",\n          Utils.getArrayReader([\"[]\", \"float32\", 4]),\n          \"foamSpawn\",\n          \"float32\",\n          \"foamDissolve\",\n          \"float32\",\n          \"foamDepthAttenuation\",\n          \"float32\",\n          \"foamColor0\",\n          [\"[]\", \"uint8\", 4],\n          \"foamColor1\",\n          [\"[]\", \"uint8\", 4],\n        ];\n\n        this.PackMapEnvDataWindV70 = [\n          \"azimuth\",\n          \"uint8\",\n          \"elevation\",\n          \"uint8\",\n          \"noise\",\n          \"uint8\",\n          \"speed\",\n          \"uint8\",\n          \"gust\",\n          \"uint8\",\n          \"gustFreq\",\n          \"uint8\",\n          \"gustSpeed\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataShapeV41 = [\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"height\",\n          \"float32\",\n          \"fadeHorizInner\",\n          \"float32\",\n          \"fadeHorizOuter\",\n          \"float32\",\n          \"fadeVertical\",\n          \"float32\",\n          \"vertexArray\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n          \"shapeType\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataLocalV70 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV70),\n          \"lightingCharGroups\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharGroupV41),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV70),\n          \"coloredLightRings\",\n          Utils.getRefArrayReader(this.PackMapEnvDataColoredLightRingsV41),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV70),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV70),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV70),\n          \"particleFieldCutouts\",\n          Utils.getArrayReader(this.PackMapEnvDataPFieldCutoutV41),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV70),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV70),\n          \"spawns\",\n          Utils.getPointerReader(this.PackMapEnvDataSpawnGroupsV41),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV70),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV70),\n          \"name\",\n          Utils.getString16Reader(),\n          \"nightMods\",\n          Utils.getArrayReader(\"uint8\"),\n          \"bindTarget\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint8\",\n          \"guid\",\n          Utils.getQWordReader(),\n          \"shapeArray\",\n          Utils.getArrayReader(this.PackMapEnvDataShapeV41),\n        ];\n\n        this.PackMapEnvDataSkyModeTexV70 = [\n          \"texPathNE\",\n          Utils.getFileNameReader(),\n          \"texPathSW\",\n          Utils.getFileNameReader(),\n          \"texPathT\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackMapEnvDataGlobalV70 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV70),\n          \"lightingCharGroups\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharGroupV41),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV70),\n          \"coloredLightRings\",\n          Utils.getRefArrayReader(this.PackMapEnvDataColoredLightRingsV41),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV70),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV70),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV70),\n          \"particleFieldCutouts\",\n          Utils.getArrayReader(this.PackMapEnvDataPFieldCutoutV41),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV70),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV70),\n          \"spawns\",\n          Utils.getPointerReader(this.PackMapEnvDataSpawnGroupsV41),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV70),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV70),\n          \"name\",\n          Utils.getString16Reader(),\n          \"nightMods\",\n          Utils.getArrayReader(\"uint8\"),\n          \"bindTarget\",\n          Utils.getQWordReader(),\n          \"skyModeTex\",\n          Utils.getArrayReader(this.PackMapEnvDataSkyModeTexV70),\n          \"starFile\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.__root = this.PackMapEnvironmentV70 = [\n          \"dataLocalArray\",\n          Utils.getArrayReader(this.PackMapEnvDataLocalV70),\n          \"dataGlobal\",\n          Utils.getPointerReader(this.PackMapEnvDataGlobalV70),\n        ];\n      },\n\n      // => Version: 69\n      69: function () {\n        this.PackMapEnvDataLightV69 = [\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"intensity\",\n          \"float32\",\n          \"direction\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.PackMapEnvDataLightingV69 = [\n          \"lights\",\n          Utils.getRefArrayReader(this.PackMapEnvDataLightV69),\n          \"shadowInfluence\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataLightingCharV40 = [\n          \"sunScale\",\n          \"float32\",\n          \"saturation\",\n          \"float32\",\n          \"sunFill\",\n          \"float32\",\n          \"ambScale\",\n          \"float32\",\n          \"ambFill\",\n          \"float32\",\n          \"flags\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataLightingCharGroupV40 = [\n          \"lightingChar\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharV40),\n        ];\n\n        this.PackMapEnvDataLayerAttributesV69 = [\n          \"brightness\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"haze\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"velocity\",\n          [\"[]\", \"float32\", 2],\n          \"fadeWidth\",\n          \"float32\",\n          \"fadeEnd\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataLayerV69 = [\n          \"altitude\",\n          \"float32\",\n          \"cutOut\",\n          \"float32\",\n          \"depth\",\n          \"float32\",\n          \"extent\",\n          \"float32\",\n          \"scale\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"attributes\",\n          Utils.getArrayReader(this.PackMapEnvDataLayerAttributesV69),\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataCloudsV69 = [\"layers\", Utils.getArrayReader(this.PackMapEnvDataLayerV69)];\n\n        this.PackMapEnvDataColoredLightRingsV40 = [\n          \"range\",\n          [\"[]\", \"float32\", 2],\n          \"distances\",\n          [\"[]\", \"float32\", 6],\n          \"lightColors\",\n          [\"[]\", [\"[]\", \"uint8\", 4], 6],\n          \"shadowColors\",\n          [\"[]\", [\"[]\", \"uint8\", 4], 6],\n        ];\n\n        this.PackMapEnvDataEffectV69 = [\n          \"glow\",\n          [\"[]\", \"uint8\", 4],\n          \"tintColor\",\n          [\"[]\", \"uint8\", 4],\n          \"tintTargetColor\",\n          [\"[]\", \"uint8\", 4],\n          \"saturation\",\n          \"float32\",\n          \"tintAmount\",\n          \"float32\",\n          \"tintFocus\",\n          \"float32\",\n          \"glowLevel\",\n          [\"[]\", \"uint8\", 4],\n          \"glowAmplify\",\n          \"float32\",\n          \"focalDepth\",\n          \"float32\",\n          \"focalRange\",\n          \"float32\",\n          \"flatteningRange\",\n          [\"[]\", \"float32\", 2],\n          \"flatteningCharacterRange\",\n          [\"[]\", \"float32\", 2],\n        ];\n\n        this.PackMapEnvDataHazeV69 = [\n          \"nearColor\",\n          [\"[]\", \"uint8\", 4],\n          \"farColor\",\n          [\"[]\", \"uint8\", 4],\n          \"distRange\",\n          [\"[]\", \"float32\", 2],\n          \"heightColor\",\n          [\"[]\", \"uint8\", 4],\n          \"heightRange\",\n          [\"[]\", \"float32\", 2],\n          \"depthCue\",\n          \"float32\",\n          \"sunDirRange\",\n          [\"[]\", \"float32\", 2],\n        ];\n\n        this.PackMapEnvDataPFieldV69 = [\n          \"altitude\",\n          \"float32\",\n          \"angle\",\n          [\"[]\", \"float32\", 2],\n          \"clusterCount\",\n          \"uint16\",\n          \"clustering\",\n          [\"[]\", \"float32\", 2],\n          \"depth\",\n          \"float32\",\n          \"deviation\",\n          \"float32\",\n          \"deviationSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"extent\",\n          \"uint16\",\n          \"fade\",\n          \"float32\",\n          \"fieldDirection\",\n          [\"[]\", \"float32\", 3],\n          \"flags\",\n          \"uint16\",\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"opacity\",\n          [\"[]\", \"float32\", 2],\n          \"particleCount\",\n          \"uint16\",\n          \"period\",\n          [\"[]\", \"float32\", 2],\n          \"rotation\",\n          [\"[]\", \"float32\", 2],\n          \"scaleX\",\n          [\"[]\", \"float32\", 2],\n          \"scaleY\",\n          [\"[]\", \"float32\", 2],\n          \"seed\",\n          \"uint32\",\n          \"speed\",\n          [\"[]\", \"float32\", 2],\n          \"texColRow\",\n          [\"[]\", \"uint32\", 2],\n          \"texFPS\",\n          \"uint16\",\n          \"texPath\",\n          Utils.getFileNameReader(),\n          \"type\",\n          \"uint8\",\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataPFieldCutoutV40 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"x\",\n          [\"[]\", \"float32\", 4],\n          \"y\",\n          [\"[]\", \"float32\", 4],\n          \"z\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.PackMapEnvDataSkyV69 = [\n          \"flags\",\n          \"uint8\",\n          \"dayBrightness\",\n          \"float32\",\n          \"dayHazeBottom\",\n          \"float32\",\n          \"dayHazeDensity\",\n          \"float32\",\n          \"dayHazeFalloff\",\n          \"float32\",\n          \"dayLightIntensity\",\n          \"float32\",\n          \"dayStarDensity\",\n          \"float32\",\n          \"nightBrightness\",\n          \"float32\",\n          \"nightHazeBottom\",\n          \"float32\",\n          \"nightHazeDensity\",\n          \"float32\",\n          \"nightHazeFalloff\",\n          \"float32\",\n          \"nightLightIntensity\",\n          \"float32\",\n          \"nightStarDensity\",\n          \"float32\",\n          \"verticalOffset\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataSkyCardAttributesV69 = [\n          \"azimuth\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"hazeDensity\",\n          \"float32\",\n          \"latitude\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"minHaze\",\n          \"float32\",\n          \"scale\",\n          [\"[]\", \"float32\", 2],\n          \"speed\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"textureUV\",\n          [\"[]\", \"float32\", 4],\n          \"brightness\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataSkyCardV69 = [\n          \"day\",\n          this.PackMapEnvDataSkyCardAttributesV69,\n          \"night\",\n          this.PackMapEnvDataSkyCardAttributesV69,\n          \"flags\",\n          \"uint32\",\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataSkyCardsV69 = [\"cards\", Utils.getArrayReader(this.PackMapEnvDataSkyCardV69)];\n\n        this.PackMapEnvDataSpawnModelDataV40 = [\n          \"spawnRange\",\n          [\"[]\", \"uint32\", 2],\n          \"lifeSpan\",\n          [\"[]\", \"uint32\", 2],\n          \"scaleRange\",\n          [\"[]\", \"float32\", 2],\n          \"heightRange\",\n          [\"[]\", \"float32\", 2],\n          \"rotXRange\",\n          [\"[]\", \"float32\", 2],\n          \"rotYRange\",\n          [\"[]\", \"float32\", 2],\n          \"rotZRange\",\n          [\"[]\", \"float32\", 2],\n          \"probability\",\n          \"float32\",\n          \"delay\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"animSequence\",\n          Utils.getQWordReader(),\n          \"modelFile\",\n          Utils.getFileNameReader(),\n          \"maxConcurrent\",\n          \"uint16\",\n        ];\n\n        this.PackMapEnvDataSpawnListV40 = [\"spawns\", Utils.getArrayReader(this.PackMapEnvDataSpawnModelDataV40)];\n\n        this.PackMapEnvDataSpawnGroupsV40 = [\n          \"spawnGroups\",\n          Utils.getArrayReader(this.PackMapEnvDataSpawnListV40),\n          \"targets\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.PackMapEnvDataWaterV69 = [\n          \"waterFlags\",\n          \"uint32\",\n          \"animAmplitude\",\n          \"float32\",\n          \"animChoppiness\",\n          \"float32\",\n          \"animWind\",\n          [\"[]\", \"float32\", 2],\n          \"bumpAmount\",\n          \"float32\",\n          \"bumpAngle0\",\n          \"float32\",\n          \"bumpAngle1\",\n          \"float32\",\n          \"bumpScale0\",\n          \"float32\",\n          \"bumpScale1\",\n          \"float32\",\n          \"bumpSpeed0\",\n          \"float32\",\n          \"bumpSpeed1\",\n          \"float32\",\n          \"bumpTile0\",\n          \"float32\",\n          \"bumpTile1\",\n          \"float32\",\n          \"patternAngle\",\n          \"float32\",\n          \"patternTile\",\n          \"float32\",\n          \"patternSpeed\",\n          \"float32\",\n          \"patternEdge\",\n          \"float32\",\n          \"surfaceShallowColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceDeepColor\",\n          [\"[]\", \"uint8\", 4],\n          \"patternColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceFresnel\",\n          \"float32\",\n          \"distortAmount\",\n          \"float32\",\n          \"depthAttenuation\",\n          \"float32\",\n          \"materialFilename\",\n          Utils.getFileNameReader(),\n          \"textureFilenames\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"constantTokens\",\n          Utils.getArrayReader(\"uint32\"),\n          \"constantValues\",\n          Utils.getArrayReader([\"[]\", \"float32\", 4]),\n          \"foamSpawn\",\n          \"float32\",\n          \"foamDissolve\",\n          \"float32\",\n          \"foamDepthAttenuation\",\n          \"float32\",\n          \"foamColor0\",\n          [\"[]\", \"uint8\", 4],\n          \"foamColor1\",\n          [\"[]\", \"uint8\", 4],\n        ];\n\n        this.PackMapEnvDataWindV69 = [\n          \"azimuth\",\n          \"uint8\",\n          \"elevation\",\n          \"uint8\",\n          \"noise\",\n          \"uint8\",\n          \"speed\",\n          \"uint8\",\n          \"gust\",\n          \"uint8\",\n          \"gustFreq\",\n          \"uint8\",\n          \"gustSpeed\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataShapeV40 = [\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"height\",\n          \"float32\",\n          \"fadeHorizInner\",\n          \"float32\",\n          \"fadeHorizOuter\",\n          \"float32\",\n          \"fadeVertical\",\n          \"float32\",\n          \"vertexArray\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n          \"shapeType\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataLocalV69 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV69),\n          \"lightingCharGroups\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharGroupV40),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV69),\n          \"coloredLightRings\",\n          Utils.getRefArrayReader(this.PackMapEnvDataColoredLightRingsV40),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV69),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV69),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV69),\n          \"particleFieldCutouts\",\n          Utils.getArrayReader(this.PackMapEnvDataPFieldCutoutV40),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV69),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV69),\n          \"spawns\",\n          Utils.getPointerReader(this.PackMapEnvDataSpawnGroupsV40),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV69),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV69),\n          \"name\",\n          Utils.getString16Reader(),\n          \"nightMods\",\n          Utils.getArrayReader(\"uint8\"),\n          \"bindTarget\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint8\",\n          \"guid\",\n          Utils.getQWordReader(),\n          \"shapeArray\",\n          Utils.getArrayReader(this.PackMapEnvDataShapeV40),\n        ];\n\n        this.PackMapEnvDataSkyModeTexV69 = [\n          \"texPathNE\",\n          Utils.getFileNameReader(),\n          \"texPathSW\",\n          Utils.getFileNameReader(),\n          \"texPathT\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackMapEnvDataGlobalV69 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV69),\n          \"lightingCharGroups\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharGroupV40),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV69),\n          \"coloredLightRings\",\n          Utils.getRefArrayReader(this.PackMapEnvDataColoredLightRingsV40),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV69),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV69),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV69),\n          \"particleFieldCutouts\",\n          Utils.getArrayReader(this.PackMapEnvDataPFieldCutoutV40),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV69),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV69),\n          \"spawns\",\n          Utils.getPointerReader(this.PackMapEnvDataSpawnGroupsV40),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV69),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV69),\n          \"name\",\n          Utils.getString16Reader(),\n          \"nightMods\",\n          Utils.getArrayReader(\"uint8\"),\n          \"bindTarget\",\n          Utils.getQWordReader(),\n          \"skyModeTex\",\n          Utils.getArrayReader(this.PackMapEnvDataSkyModeTexV69),\n          \"starFile\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.__root = this.PackMapEnvironmentV69 = [\n          \"dataLocalArray\",\n          Utils.getArrayReader(this.PackMapEnvDataLocalV69),\n          \"dataGlobal\",\n          Utils.getPointerReader(this.PackMapEnvDataGlobalV69),\n        ];\n      },\n\n      // => Version: 68, ReferencedFunction: 0xEB9030\n      68: function () {\n        this.PackMapEnvDataLightV68 = [\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"intensity\",\n          \"float32\",\n          \"direction\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.PackMapEnvDataLightingV68 = [\n          \"lights\",\n          Utils.getRefArrayReader(this.PackMapEnvDataLightV68),\n          \"shadowInfluence\",\n          \"float32\",\n          \"backlight\",\n          Utils.getPointerReader(this.PackMapEnvDataLightV68),\n        ];\n\n        this.PackMapEnvDataLightingCharV39 = [\n          \"sunScale\",\n          \"float32\",\n          \"saturation\",\n          \"float32\",\n          \"sunFill\",\n          \"float32\",\n          \"ambScale\",\n          \"float32\",\n          \"ambFill\",\n          \"float32\",\n          \"flags\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataLightingCharGroupV39 = [\n          \"lightingChar\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharV39),\n        ];\n\n        this.PackMapEnvDataLayerAttributesV68 = [\n          \"brightness\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"haze\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"velocity\",\n          [\"[]\", \"float32\", 2],\n          \"fadeWidth\",\n          \"float32\",\n          \"fadeEnd\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataLayerV68 = [\n          \"altitude\",\n          \"float32\",\n          \"cutOut\",\n          \"float32\",\n          \"depth\",\n          \"float32\",\n          \"extent\",\n          \"float32\",\n          \"scale\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"attributes\",\n          Utils.getArrayReader(this.PackMapEnvDataLayerAttributesV68),\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataCloudsV68 = [\"layers\", Utils.getArrayReader(this.PackMapEnvDataLayerV68)];\n\n        this.PackMapEnvDataColoredLightRingsV39 = [\n          \"range\",\n          [\"[]\", \"float32\", 2],\n          \"distances\",\n          [\"[]\", \"float32\", 6],\n          \"lightColors\",\n          [\"[]\", [\"[]\", \"uint8\", 4], 6],\n          \"shadowColors\",\n          [\"[]\", [\"[]\", \"uint8\", 4], 6],\n        ];\n\n        this.PackMapEnvDataEffectV68 = [\n          \"glow\",\n          [\"[]\", \"uint8\", 4],\n          \"tintColor\",\n          [\"[]\", \"uint8\", 4],\n          \"tintTargetColor\",\n          [\"[]\", \"uint8\", 4],\n          \"saturation\",\n          \"float32\",\n          \"tintAmount\",\n          \"float32\",\n          \"tintFocus\",\n          \"float32\",\n          \"glowLevel\",\n          [\"[]\", \"uint8\", 4],\n          \"glowAmplify\",\n          \"float32\",\n          \"focalDepth\",\n          \"float32\",\n          \"focalRange\",\n          \"float32\",\n          \"flatteningRange\",\n          [\"[]\", \"float32\", 2],\n          \"flatteningCharacterRange\",\n          [\"[]\", \"float32\", 2],\n        ];\n\n        this.PackMapEnvDataHazeV68 = [\n          \"nearColor\",\n          [\"[]\", \"uint8\", 4],\n          \"farColor\",\n          [\"[]\", \"uint8\", 4],\n          \"distRange\",\n          [\"[]\", \"float32\", 2],\n          \"heightColor\",\n          [\"[]\", \"uint8\", 4],\n          \"heightRange\",\n          [\"[]\", \"float32\", 2],\n          \"depthCue\",\n          \"float32\",\n          \"sunDirRange\",\n          [\"[]\", \"float32\", 2],\n        ];\n\n        this.PackMapEnvDataPFieldV68 = [\n          \"altitude\",\n          \"float32\",\n          \"angle\",\n          [\"[]\", \"float32\", 2],\n          \"clusterCount\",\n          \"uint16\",\n          \"clustering\",\n          [\"[]\", \"float32\", 2],\n          \"depth\",\n          \"float32\",\n          \"deviation\",\n          \"float32\",\n          \"deviationSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"extent\",\n          \"uint16\",\n          \"fade\",\n          \"float32\",\n          \"fieldDirection\",\n          [\"[]\", \"float32\", 3],\n          \"flags\",\n          \"uint16\",\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"opacity\",\n          [\"[]\", \"float32\", 2],\n          \"particleCount\",\n          \"uint16\",\n          \"period\",\n          [\"[]\", \"float32\", 2],\n          \"rotation\",\n          [\"[]\", \"float32\", 2],\n          \"scaleX\",\n          [\"[]\", \"float32\", 2],\n          \"scaleY\",\n          [\"[]\", \"float32\", 2],\n          \"seed\",\n          \"uint32\",\n          \"speed\",\n          [\"[]\", \"float32\", 2],\n          \"texColRow\",\n          [\"[]\", \"uint32\", 2],\n          \"texFPS\",\n          \"uint16\",\n          \"texPath\",\n          Utils.getFileNameReader(),\n          \"type\",\n          \"uint8\",\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataPFieldCutoutV39 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"x\",\n          [\"[]\", \"float32\", 4],\n          \"y\",\n          [\"[]\", \"float32\", 4],\n          \"z\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.PackMapEnvDataSkyV68 = [\n          \"flags\",\n          \"uint8\",\n          \"dayBrightness\",\n          \"float32\",\n          \"dayHazeBottom\",\n          \"float32\",\n          \"dayHazeDensity\",\n          \"float32\",\n          \"dayHazeFalloff\",\n          \"float32\",\n          \"dayLightIntensity\",\n          \"float32\",\n          \"dayStarDensity\",\n          \"float32\",\n          \"nightBrightness\",\n          \"float32\",\n          \"nightHazeBottom\",\n          \"float32\",\n          \"nightHazeDensity\",\n          \"float32\",\n          \"nightHazeFalloff\",\n          \"float32\",\n          \"nightLightIntensity\",\n          \"float32\",\n          \"nightStarDensity\",\n          \"float32\",\n          \"verticalOffset\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataSkyCardAttributesV68 = [\n          \"azimuth\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"hazeDensity\",\n          \"float32\",\n          \"latitude\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"minHaze\",\n          \"float32\",\n          \"scale\",\n          [\"[]\", \"float32\", 2],\n          \"speed\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"textureUV\",\n          [\"[]\", \"float32\", 4],\n          \"brightness\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataSkyCardV68 = [\n          \"day\",\n          this.PackMapEnvDataSkyCardAttributesV68,\n          \"night\",\n          this.PackMapEnvDataSkyCardAttributesV68,\n          \"flags\",\n          \"uint32\",\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataSkyCardsV68 = [\"cards\", Utils.getArrayReader(this.PackMapEnvDataSkyCardV68)];\n\n        this.PackMapEnvDataSpawnModelDataV39 = [\n          \"spawnRange\",\n          [\"[]\", \"uint32\", 2],\n          \"lifeSpan\",\n          [\"[]\", \"uint32\", 2],\n          \"scaleRange\",\n          [\"[]\", \"float32\", 2],\n          \"heightRange\",\n          [\"[]\", \"float32\", 2],\n          \"rotXRange\",\n          [\"[]\", \"float32\", 2],\n          \"rotYRange\",\n          [\"[]\", \"float32\", 2],\n          \"rotZRange\",\n          [\"[]\", \"float32\", 2],\n          \"probability\",\n          \"float32\",\n          \"delay\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"animSequence\",\n          Utils.getQWordReader(),\n          \"modelFile\",\n          Utils.getFileNameReader(),\n          \"maxConcurrent\",\n          \"uint16\",\n        ];\n\n        this.PackMapEnvDataSpawnListV39 = [\"spawns\", Utils.getArrayReader(this.PackMapEnvDataSpawnModelDataV39)];\n\n        this.PackMapEnvDataSpawnGroupsV39 = [\n          \"spawnGroups\",\n          Utils.getArrayReader(this.PackMapEnvDataSpawnListV39),\n          \"targets\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.PackMapEnvDataWaterV68 = [\n          \"waterFlags\",\n          \"uint32\",\n          \"animAmplitude\",\n          \"float32\",\n          \"animChoppiness\",\n          \"float32\",\n          \"animWind\",\n          [\"[]\", \"float32\", 2],\n          \"bumpAmount\",\n          \"float32\",\n          \"bumpAngle0\",\n          \"float32\",\n          \"bumpAngle1\",\n          \"float32\",\n          \"bumpScale0\",\n          \"float32\",\n          \"bumpScale1\",\n          \"float32\",\n          \"bumpSpeed0\",\n          \"float32\",\n          \"bumpSpeed1\",\n          \"float32\",\n          \"bumpTile0\",\n          \"float32\",\n          \"bumpTile1\",\n          \"float32\",\n          \"patternAngle\",\n          \"float32\",\n          \"patternTile\",\n          \"float32\",\n          \"patternSpeed\",\n          \"float32\",\n          \"patternEdge\",\n          \"float32\",\n          \"surfaceShallowColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceDeepColor\",\n          [\"[]\", \"uint8\", 4],\n          \"patternColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceFresnel\",\n          \"float32\",\n          \"distortAmount\",\n          \"float32\",\n          \"depthAttenuation\",\n          \"float32\",\n          \"materialFilename\",\n          Utils.getFileNameReader(),\n          \"textureFilenames\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"constantTokens\",\n          Utils.getArrayReader(\"uint32\"),\n          \"constantValues\",\n          Utils.getArrayReader([\"[]\", \"float32\", 4]),\n          \"foamSpawn\",\n          \"float32\",\n          \"foamDissolve\",\n          \"float32\",\n          \"foamDepthAttenuation\",\n          \"float32\",\n          \"foamColor0\",\n          [\"[]\", \"uint8\", 4],\n          \"foamColor1\",\n          [\"[]\", \"uint8\", 4],\n        ];\n\n        this.PackMapEnvDataWindV68 = [\n          \"azimuth\",\n          \"uint8\",\n          \"elevation\",\n          \"uint8\",\n          \"noise\",\n          \"uint8\",\n          \"speed\",\n          \"uint8\",\n          \"gust\",\n          \"uint8\",\n          \"gustFreq\",\n          \"uint8\",\n          \"gustSpeed\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataShapeV39 = [\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"height\",\n          \"float32\",\n          \"fadeHorizInner\",\n          \"float32\",\n          \"fadeHorizOuter\",\n          \"float32\",\n          \"fadeVertical\",\n          \"float32\",\n          \"vertexArray\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n          \"shapeType\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataLocalV68 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV68),\n          \"lightingCharGroups\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharGroupV39),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV68),\n          \"coloredLightRings\",\n          Utils.getRefArrayReader(this.PackMapEnvDataColoredLightRingsV39),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV68),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV68),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV68),\n          \"particleFieldCutouts\",\n          Utils.getArrayReader(this.PackMapEnvDataPFieldCutoutV39),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV68),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV68),\n          \"spawns\",\n          Utils.getPointerReader(this.PackMapEnvDataSpawnGroupsV39),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV68),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV68),\n          \"name\",\n          Utils.getString16Reader(),\n          \"nightMods\",\n          Utils.getArrayReader(\"uint8\"),\n          \"bindTarget\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint8\",\n          \"guid\",\n          Utils.getQWordReader(),\n          \"shapeArray\",\n          Utils.getArrayReader(this.PackMapEnvDataShapeV39),\n        ];\n\n        this.PackMapEnvDataSkyModeTexV68 = [\n          \"texPathNE\",\n          Utils.getFileNameReader(),\n          \"texPathSW\",\n          Utils.getFileNameReader(),\n          \"texPathT\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackMapEnvDataGlobalV68 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV68),\n          \"lightingCharGroups\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharGroupV39),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV68),\n          \"coloredLightRings\",\n          Utils.getRefArrayReader(this.PackMapEnvDataColoredLightRingsV39),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV68),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV68),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV68),\n          \"particleFieldCutouts\",\n          Utils.getArrayReader(this.PackMapEnvDataPFieldCutoutV39),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV68),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV68),\n          \"spawns\",\n          Utils.getPointerReader(this.PackMapEnvDataSpawnGroupsV39),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV68),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV68),\n          \"name\",\n          Utils.getString16Reader(),\n          \"nightMods\",\n          Utils.getArrayReader(\"uint8\"),\n          \"bindTarget\",\n          Utils.getQWordReader(),\n          \"skyModeTex\",\n          Utils.getArrayReader(this.PackMapEnvDataSkyModeTexV68),\n          \"starFile\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.__root = this.PackMapEnvironmentV68 = [\n          \"dataLocalArray\",\n          Utils.getArrayReader(this.PackMapEnvDataLocalV68),\n          \"dataGlobal\",\n          Utils.getPointerReader(this.PackMapEnvDataGlobalV68),\n        ];\n      },\n\n      // => Version: 67\n      67: function () {\n        this.PackMapEnvDataLightV67 = [\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"intensity\",\n          \"float32\",\n          \"direction\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.PackMapEnvDataLightingV67 = [\n          \"lights\",\n          Utils.getRefArrayReader(this.PackMapEnvDataLightV67),\n          \"shadowInfluence\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataLightingCharV38 = [\n          \"sunScale\",\n          \"float32\",\n          \"saturation\",\n          \"float32\",\n          \"sunFill\",\n          \"float32\",\n          \"ambScale\",\n          \"float32\",\n          \"ambFill\",\n          \"float32\",\n          \"flags\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataLightingCharGroupV38 = [\n          \"lightingChar\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharV38),\n        ];\n\n        this.PackMapEnvDataLayerAttributesV67 = [\n          \"brightness\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"haze\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"velocity\",\n          [\"[]\", \"float32\", 2],\n          \"fadeWidth\",\n          \"float32\",\n          \"fadeEnd\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataLayerV67 = [\n          \"altitude\",\n          \"float32\",\n          \"cutOut\",\n          \"float32\",\n          \"depth\",\n          \"float32\",\n          \"extent\",\n          \"float32\",\n          \"scale\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"attributes\",\n          Utils.getArrayReader(this.PackMapEnvDataLayerAttributesV67),\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataCloudsV67 = [\"layers\", Utils.getArrayReader(this.PackMapEnvDataLayerV67)];\n\n        this.PackMapEnvDataColoredLightRingsV38 = [\n          \"range\",\n          [\"[]\", \"float32\", 2],\n          \"distances\",\n          [\"[]\", \"float32\", 6],\n          \"lightColors\",\n          [\"[]\", [\"[]\", \"uint8\", 4], 6],\n          \"shadowColors\",\n          [\"[]\", [\"[]\", \"uint8\", 4], 6],\n        ];\n\n        this.PackMapEnvDataEffectV67 = [\n          \"glow\",\n          [\"[]\", \"uint8\", 4],\n          \"tintColor\",\n          [\"[]\", \"uint8\", 4],\n          \"tintTargetColor\",\n          [\"[]\", \"uint8\", 4],\n          \"saturation\",\n          \"float32\",\n          \"tintAmount\",\n          \"float32\",\n          \"tintFocus\",\n          \"float32\",\n          \"glowLevel\",\n          [\"[]\", \"uint8\", 4],\n          \"glowAmplify\",\n          \"float32\",\n          \"focalDepth\",\n          \"float32\",\n          \"focalRange\",\n          \"float32\",\n          \"flatteningRange\",\n          [\"[]\", \"float32\", 2],\n          \"flatteningCharacterRange\",\n          [\"[]\", \"float32\", 2],\n        ];\n\n        this.PackMapEnvDataHazeV67 = [\n          \"nearColor\",\n          [\"[]\", \"uint8\", 4],\n          \"farColor\",\n          [\"[]\", \"uint8\", 4],\n          \"distRange\",\n          [\"[]\", \"float32\", 2],\n          \"heightColor\",\n          [\"[]\", \"uint8\", 4],\n          \"heightRange\",\n          [\"[]\", \"float32\", 2],\n          \"depthCue\",\n          \"float32\",\n          \"sunDirRange\",\n          [\"[]\", \"float32\", 2],\n        ];\n\n        this.PackMapEnvDataPFieldV67 = [\n          \"altitude\",\n          \"float32\",\n          \"angle\",\n          [\"[]\", \"float32\", 2],\n          \"clusterCount\",\n          \"uint16\",\n          \"clustering\",\n          [\"[]\", \"float32\", 2],\n          \"depth\",\n          \"float32\",\n          \"deviation\",\n          \"float32\",\n          \"deviationSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"extent\",\n          \"uint16\",\n          \"fade\",\n          \"float32\",\n          \"fieldDirection\",\n          [\"[]\", \"float32\", 3],\n          \"flags\",\n          \"uint16\",\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"opacity\",\n          [\"[]\", \"float32\", 2],\n          \"particleCount\",\n          \"uint16\",\n          \"period\",\n          [\"[]\", \"float32\", 2],\n          \"rotation\",\n          [\"[]\", \"float32\", 2],\n          \"scaleX\",\n          [\"[]\", \"float32\", 2],\n          \"scaleY\",\n          [\"[]\", \"float32\", 2],\n          \"seed\",\n          \"uint32\",\n          \"speed\",\n          [\"[]\", \"float32\", 2],\n          \"texColRow\",\n          [\"[]\", \"uint32\", 2],\n          \"texFPS\",\n          \"uint16\",\n          \"texPath\",\n          Utils.getFileNameReader(),\n          \"type\",\n          \"uint8\",\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataPFieldCutoutV38 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"x\",\n          [\"[]\", \"float32\", 4],\n          \"y\",\n          [\"[]\", \"float32\", 4],\n          \"z\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.PackMapEnvDataSkyV67 = [\n          \"flags\",\n          \"uint8\",\n          \"dayBrightness\",\n          \"float32\",\n          \"dayHazeBottom\",\n          \"float32\",\n          \"dayHazeDensity\",\n          \"float32\",\n          \"dayHazeFalloff\",\n          \"float32\",\n          \"dayLightIntensity\",\n          \"float32\",\n          \"dayStarDensity\",\n          \"float32\",\n          \"nightBrightness\",\n          \"float32\",\n          \"nightHazeBottom\",\n          \"float32\",\n          \"nightHazeDensity\",\n          \"float32\",\n          \"nightHazeFalloff\",\n          \"float32\",\n          \"nightLightIntensity\",\n          \"float32\",\n          \"nightStarDensity\",\n          \"float32\",\n          \"verticalOffset\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataSkyCardAttributesV67 = [\n          \"azimuth\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"hazeDensity\",\n          \"float32\",\n          \"latitude\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"minHaze\",\n          \"float32\",\n          \"scale\",\n          [\"[]\", \"float32\", 2],\n          \"speed\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"textureUV\",\n          [\"[]\", \"float32\", 4],\n          \"brightness\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataSkyCardV67 = [\n          \"day\",\n          this.PackMapEnvDataSkyCardAttributesV67,\n          \"night\",\n          this.PackMapEnvDataSkyCardAttributesV67,\n          \"flags\",\n          \"uint32\",\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataSkyCardsV67 = [\"cards\", Utils.getArrayReader(this.PackMapEnvDataSkyCardV67)];\n\n        this.PackMapEnvDataSpawnModelDataV38 = [\n          \"spawnRange\",\n          [\"[]\", \"uint32\", 2],\n          \"lifeSpan\",\n          [\"[]\", \"uint32\", 2],\n          \"scaleRange\",\n          [\"[]\", \"float32\", 2],\n          \"heightRange\",\n          [\"[]\", \"float32\", 2],\n          \"rotXRange\",\n          [\"[]\", \"float32\", 2],\n          \"rotYRange\",\n          [\"[]\", \"float32\", 2],\n          \"rotZRange\",\n          [\"[]\", \"float32\", 2],\n          \"probability\",\n          \"float32\",\n          \"delay\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"animSequence\",\n          Utils.getQWordReader(),\n          \"modelFile\",\n          Utils.getFileNameReader(),\n          \"maxConcurrent\",\n          \"uint16\",\n        ];\n\n        this.PackMapEnvDataSpawnListV38 = [\"spawns\", Utils.getArrayReader(this.PackMapEnvDataSpawnModelDataV38)];\n\n        this.PackMapEnvDataSpawnGroupsV38 = [\n          \"spawnGroups\",\n          Utils.getArrayReader(this.PackMapEnvDataSpawnListV38),\n          \"targets\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.PackMapEnvDataWaterV67 = [\n          \"waterFlags\",\n          \"uint32\",\n          \"animAmplitude\",\n          \"float32\",\n          \"animChoppiness\",\n          \"float32\",\n          \"animWind\",\n          [\"[]\", \"float32\", 2],\n          \"bumpAmount\",\n          \"float32\",\n          \"bumpAngle0\",\n          \"float32\",\n          \"bumpAngle1\",\n          \"float32\",\n          \"bumpScale0\",\n          \"float32\",\n          \"bumpScale1\",\n          \"float32\",\n          \"bumpSpeed0\",\n          \"float32\",\n          \"bumpSpeed1\",\n          \"float32\",\n          \"bumpTile0\",\n          \"float32\",\n          \"bumpTile1\",\n          \"float32\",\n          \"patternAngle\",\n          \"float32\",\n          \"patternTile\",\n          \"float32\",\n          \"patternSpeed\",\n          \"float32\",\n          \"patternEdge\",\n          \"float32\",\n          \"surfaceShallowColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceDeepColor\",\n          [\"[]\", \"uint8\", 4],\n          \"patternColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceFresnel\",\n          \"float32\",\n          \"distortAmount\",\n          \"float32\",\n          \"depthAttenuation\",\n          \"float32\",\n          \"materialFilename\",\n          Utils.getFileNameReader(),\n          \"textureFilenames\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"constantTokens\",\n          Utils.getArrayReader(\"uint32\"),\n          \"constantValues\",\n          Utils.getArrayReader([\"[]\", \"float32\", 4]),\n          \"foamSpawn\",\n          \"float32\",\n          \"foamDissolve\",\n          \"float32\",\n          \"foamDepthAttenuation\",\n          \"float32\",\n          \"foamColor0\",\n          [\"[]\", \"uint8\", 4],\n          \"foamColor1\",\n          [\"[]\", \"uint8\", 4],\n        ];\n\n        this.PackMapEnvDataWindV67 = [\n          \"azimuth\",\n          \"uint8\",\n          \"elevation\",\n          \"uint8\",\n          \"noise\",\n          \"uint8\",\n          \"speed\",\n          \"uint8\",\n          \"gust\",\n          \"uint8\",\n          \"gustFreq\",\n          \"uint8\",\n          \"gustSpeed\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataShapeV38 = [\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"height\",\n          \"float32\",\n          \"fadeHorizInner\",\n          \"float32\",\n          \"fadeHorizOuter\",\n          \"float32\",\n          \"fadeVertical\",\n          \"float32\",\n          \"vertexArray\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n          \"shapeType\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataLocalV67 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV67),\n          \"lightingCharGroups\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharGroupV38),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV67),\n          \"coloredLightRings\",\n          Utils.getRefArrayReader(this.PackMapEnvDataColoredLightRingsV38),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV67),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV67),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV67),\n          \"particleFieldCutouts\",\n          Utils.getArrayReader(this.PackMapEnvDataPFieldCutoutV38),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV67),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV67),\n          \"spawns\",\n          Utils.getPointerReader(this.PackMapEnvDataSpawnGroupsV38),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV67),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV67),\n          \"name\",\n          Utils.getString16Reader(),\n          \"nightMods\",\n          Utils.getArrayReader(\"uint8\"),\n          \"bindTarget\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint8\",\n          \"guid\",\n          Utils.getQWordReader(),\n          \"shapeArray\",\n          Utils.getArrayReader(this.PackMapEnvDataShapeV38),\n        ];\n\n        this.PackMapEnvDataSkyModeTexV67 = [\n          \"texPathNE\",\n          Utils.getFileNameReader(),\n          \"texPathSW\",\n          Utils.getFileNameReader(),\n          \"texPathT\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackMapEnvDataGlobalV67 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV67),\n          \"lightingCharGroups\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharGroupV38),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV67),\n          \"coloredLightRings\",\n          Utils.getRefArrayReader(this.PackMapEnvDataColoredLightRingsV38),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV67),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV67),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV67),\n          \"particleFieldCutouts\",\n          Utils.getArrayReader(this.PackMapEnvDataPFieldCutoutV38),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV67),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV67),\n          \"spawns\",\n          Utils.getPointerReader(this.PackMapEnvDataSpawnGroupsV38),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV67),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV67),\n          \"name\",\n          Utils.getString16Reader(),\n          \"nightMods\",\n          Utils.getArrayReader(\"uint8\"),\n          \"bindTarget\",\n          Utils.getQWordReader(),\n          \"skyModeTex\",\n          Utils.getArrayReader(this.PackMapEnvDataSkyModeTexV67),\n          \"starFile\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.__root = this.PackMapEnvironmentV67 = [\n          \"dataLocalArray\",\n          Utils.getArrayReader(this.PackMapEnvDataLocalV67),\n          \"dataGlobal\",\n          Utils.getPointerReader(this.PackMapEnvDataGlobalV67),\n        ];\n      },\n\n      // => Version: 66, ReferencedFunction: 0xEB8EE0\n      66: function () {\n        this.PackMapEnvDataLightV66 = [\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"intensity\",\n          \"float32\",\n          \"direction\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.PackMapEnvDataLightingV66 = [\n          \"lights\",\n          Utils.getRefArrayReader(this.PackMapEnvDataLightV66),\n          \"shadowInfluence\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataLightingCharV37 = [\n          \"sunScale\",\n          \"float32\",\n          \"saturation\",\n          \"float32\",\n          \"sunFill\",\n          \"float32\",\n          \"ambScale\",\n          \"float32\",\n          \"ambFill\",\n          \"float32\",\n          \"flags\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataLightingCharGroupV37 = [\n          \"lightingChar\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharV37),\n        ];\n\n        this.PackMapEnvDataLayerAttributesV66 = [\n          \"brightness\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"haze\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"velocity\",\n          [\"[]\", \"float32\", 2],\n          \"fadeWidth\",\n          \"float32\",\n          \"fadeEnd\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataLayerV66 = [\n          \"altitude\",\n          \"float32\",\n          \"cutOut\",\n          \"float32\",\n          \"depth\",\n          \"float32\",\n          \"extent\",\n          \"float32\",\n          \"scale\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"attributes\",\n          Utils.getArrayReader(this.PackMapEnvDataLayerAttributesV66),\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataCloudsV66 = [\"layers\", Utils.getArrayReader(this.PackMapEnvDataLayerV66)];\n\n        this.PackMapEnvDataColoredLightRingsV37 = [\n          \"range\",\n          [\"[]\", \"float32\", 2],\n          \"distances\",\n          [\"[]\", \"float32\", 6],\n          \"lightColors\",\n          [\"[]\", [\"[]\", \"uint8\", 4], 6],\n          \"shadowColors\",\n          [\"[]\", [\"[]\", \"uint8\", 4], 6],\n        ];\n\n        this.PackMapEnvDataEffectV66 = [\n          \"glow\",\n          [\"[]\", \"uint8\", 4],\n          \"tintColor\",\n          [\"[]\", \"uint8\", 4],\n          \"tintTargetColor\",\n          [\"[]\", \"uint8\", 4],\n          \"saturation\",\n          \"float32\",\n          \"tintAmount\",\n          \"float32\",\n          \"tintFocus\",\n          \"float32\",\n          \"glowLevel\",\n          [\"[]\", \"uint8\", 4],\n          \"glowAmplify\",\n          \"float32\",\n          \"focalDepth\",\n          \"float32\",\n          \"focalRange\",\n          \"float32\",\n          \"flatteningRange\",\n          [\"[]\", \"float32\", 2],\n          \"flatteningCharacterRange\",\n          [\"[]\", \"float32\", 2],\n        ];\n\n        this.PackMapEnvDataHazeV66 = [\n          \"nearColor\",\n          [\"[]\", \"uint8\", 4],\n          \"farColor\",\n          [\"[]\", \"uint8\", 4],\n          \"distRange\",\n          [\"[]\", \"float32\", 2],\n          \"heightColor\",\n          [\"[]\", \"uint8\", 4],\n          \"heightRange\",\n          [\"[]\", \"float32\", 2],\n          \"depthCue\",\n          \"float32\",\n          \"sunDirRange\",\n          [\"[]\", \"float32\", 2],\n        ];\n\n        this.PackMapEnvDataPFieldV66 = [\n          \"altitude\",\n          \"float32\",\n          \"angle\",\n          [\"[]\", \"float32\", 2],\n          \"clusterCount\",\n          \"uint16\",\n          \"clustering\",\n          [\"[]\", \"float32\", 2],\n          \"depth\",\n          \"float32\",\n          \"deviation\",\n          \"float32\",\n          \"deviationSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"extent\",\n          \"uint16\",\n          \"fade\",\n          \"float32\",\n          \"fieldDirection\",\n          [\"[]\", \"float32\", 3],\n          \"flags\",\n          \"uint16\",\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"opacity\",\n          [\"[]\", \"float32\", 2],\n          \"particleCount\",\n          \"uint16\",\n          \"period\",\n          [\"[]\", \"float32\", 2],\n          \"rotation\",\n          [\"[]\", \"float32\", 2],\n          \"scaleX\",\n          [\"[]\", \"float32\", 2],\n          \"scaleY\",\n          [\"[]\", \"float32\", 2],\n          \"seed\",\n          \"uint32\",\n          \"speed\",\n          [\"[]\", \"float32\", 2],\n          \"texColRow\",\n          [\"[]\", \"uint32\", 2],\n          \"texFPS\",\n          \"uint16\",\n          \"texPath\",\n          Utils.getFileNameReader(),\n          \"type\",\n          \"uint8\",\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataPFieldCutoutV37 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"x\",\n          [\"[]\", \"float32\", 4],\n          \"y\",\n          [\"[]\", \"float32\", 4],\n          \"z\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.PackMapEnvDataSkyV66 = [\n          \"flags\",\n          \"uint8\",\n          \"dayBrightness\",\n          \"float32\",\n          \"dayHazeBottom\",\n          \"float32\",\n          \"dayHazeDensity\",\n          \"float32\",\n          \"dayHazeFalloff\",\n          \"float32\",\n          \"dayLightIntensity\",\n          \"float32\",\n          \"dayStarDensity\",\n          \"float32\",\n          \"nightBrightness\",\n          \"float32\",\n          \"nightHazeBottom\",\n          \"float32\",\n          \"nightHazeDensity\",\n          \"float32\",\n          \"nightHazeFalloff\",\n          \"float32\",\n          \"nightLightIntensity\",\n          \"float32\",\n          \"nightStarDensity\",\n          \"float32\",\n          \"verticalOffset\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataSkyCardAttributesV66 = [\n          \"azimuth\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"hazeDensity\",\n          \"float32\",\n          \"latitude\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"minHaze\",\n          \"float32\",\n          \"scale\",\n          [\"[]\", \"float32\", 2],\n          \"speed\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"textureUV\",\n          [\"[]\", \"float32\", 4],\n          \"brightness\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataSkyCardV66 = [\n          \"day\",\n          this.PackMapEnvDataSkyCardAttributesV66,\n          \"night\",\n          this.PackMapEnvDataSkyCardAttributesV66,\n          \"flags\",\n          \"uint32\",\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataSkyCardsV66 = [\"cards\", Utils.getArrayReader(this.PackMapEnvDataSkyCardV66)];\n\n        this.PackMapEnvDataSpawnModelDataV37 = [\n          \"spawnRange\",\n          [\"[]\", \"uint32\", 2],\n          \"lifeSpan\",\n          [\"[]\", \"uint32\", 2],\n          \"scaleRange\",\n          [\"[]\", \"float32\", 2],\n          \"heightRange\",\n          [\"[]\", \"float32\", 2],\n          \"rotXRange\",\n          [\"[]\", \"float32\", 2],\n          \"rotYRange\",\n          [\"[]\", \"float32\", 2],\n          \"rotZRange\",\n          [\"[]\", \"float32\", 2],\n          \"probability\",\n          \"float32\",\n          \"delay\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"modelFile\",\n          Utils.getFileNameReader(),\n          \"maxConcurrent\",\n          \"uint16\",\n        ];\n\n        this.PackMapEnvDataSpawnListV37 = [\"spawns\", Utils.getArrayReader(this.PackMapEnvDataSpawnModelDataV37)];\n\n        this.PackMapEnvDataSpawnGroupsV37 = [\n          \"spawnGroups\",\n          Utils.getArrayReader(this.PackMapEnvDataSpawnListV37),\n          \"targets\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.PackMapEnvDataWaterV66 = [\n          \"waterFlags\",\n          \"uint32\",\n          \"animAmplitude\",\n          \"float32\",\n          \"animChoppiness\",\n          \"float32\",\n          \"animWind\",\n          [\"[]\", \"float32\", 2],\n          \"bumpAmount\",\n          \"float32\",\n          \"bumpAngle0\",\n          \"float32\",\n          \"bumpAngle1\",\n          \"float32\",\n          \"bumpScale0\",\n          \"float32\",\n          \"bumpScale1\",\n          \"float32\",\n          \"bumpSpeed0\",\n          \"float32\",\n          \"bumpSpeed1\",\n          \"float32\",\n          \"bumpTile0\",\n          \"float32\",\n          \"bumpTile1\",\n          \"float32\",\n          \"patternAngle\",\n          \"float32\",\n          \"patternTile\",\n          \"float32\",\n          \"patternSpeed\",\n          \"float32\",\n          \"patternEdge\",\n          \"float32\",\n          \"surfaceShallowColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceDeepColor\",\n          [\"[]\", \"uint8\", 4],\n          \"patternColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceFresnel\",\n          \"float32\",\n          \"distortAmount\",\n          \"float32\",\n          \"depthAttenuation\",\n          \"float32\",\n          \"materialFilename\",\n          Utils.getFileNameReader(),\n          \"textureFilenames\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"constantTokens\",\n          Utils.getArrayReader(\"uint32\"),\n          \"constantValues\",\n          Utils.getArrayReader([\"[]\", \"float32\", 4]),\n          \"foamSpawn\",\n          \"float32\",\n          \"foamDissolve\",\n          \"float32\",\n          \"foamDepthAttenuation\",\n          \"float32\",\n          \"foamColor0\",\n          [\"[]\", \"uint8\", 4],\n          \"foamColor1\",\n          [\"[]\", \"uint8\", 4],\n        ];\n\n        this.PackMapEnvDataWindV66 = [\n          \"azimuth\",\n          \"uint8\",\n          \"elevation\",\n          \"uint8\",\n          \"noise\",\n          \"uint8\",\n          \"speed\",\n          \"uint8\",\n          \"gust\",\n          \"uint8\",\n          \"gustFreq\",\n          \"uint8\",\n          \"gustSpeed\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataShapeV37 = [\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"height\",\n          \"float32\",\n          \"fadeHorizInner\",\n          \"float32\",\n          \"fadeHorizOuter\",\n          \"float32\",\n          \"fadeVertical\",\n          \"float32\",\n          \"vertexArray\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n          \"shapeType\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataLocalV66 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV66),\n          \"lightingCharGroups\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharGroupV37),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV66),\n          \"coloredLightRings\",\n          Utils.getRefArrayReader(this.PackMapEnvDataColoredLightRingsV37),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV66),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV66),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV66),\n          \"particleFieldCutouts\",\n          Utils.getArrayReader(this.PackMapEnvDataPFieldCutoutV37),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV66),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV66),\n          \"spawns\",\n          Utils.getPointerReader(this.PackMapEnvDataSpawnGroupsV37),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV66),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV66),\n          \"name\",\n          Utils.getString16Reader(),\n          \"nightMods\",\n          Utils.getArrayReader(\"uint8\"),\n          \"bindTarget\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint8\",\n          \"guid\",\n          Utils.getQWordReader(),\n          \"shapeArray\",\n          Utils.getArrayReader(this.PackMapEnvDataShapeV37),\n        ];\n\n        this.PackMapEnvDataSkyModeTexV66 = [\n          \"texPathNE\",\n          Utils.getFileNameReader(),\n          \"texPathSW\",\n          Utils.getFileNameReader(),\n          \"texPathT\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackMapEnvDataGlobalV66 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV66),\n          \"lightingCharGroups\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharGroupV37),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV66),\n          \"coloredLightRings\",\n          Utils.getRefArrayReader(this.PackMapEnvDataColoredLightRingsV37),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV66),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV66),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV66),\n          \"particleFieldCutouts\",\n          Utils.getArrayReader(this.PackMapEnvDataPFieldCutoutV37),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV66),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV66),\n          \"spawns\",\n          Utils.getPointerReader(this.PackMapEnvDataSpawnGroupsV37),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV66),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV66),\n          \"name\",\n          Utils.getString16Reader(),\n          \"nightMods\",\n          Utils.getArrayReader(\"uint8\"),\n          \"bindTarget\",\n          Utils.getQWordReader(),\n          \"skyModeTex\",\n          Utils.getArrayReader(this.PackMapEnvDataSkyModeTexV66),\n          \"starFile\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.__root = this.PackMapEnvironmentV66 = [\n          \"dataLocalArray\",\n          Utils.getArrayReader(this.PackMapEnvDataLocalV66),\n          \"dataGlobal\",\n          Utils.getPointerReader(this.PackMapEnvDataGlobalV66),\n        ];\n      },\n\n      // => Version: 65, ReferencedFunction: 0xEB8E80\n      65: function () {\n        this.PackMapEnvDataLightV65 = [\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"intensity\",\n          \"float32\",\n          \"direction\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.PackMapEnvDataLightingV65 = [\n          \"lights\",\n          Utils.getRefArrayReader(this.PackMapEnvDataLightV65),\n          \"shadowInfluence\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataLightingCharV36 = [\n          \"sunScale\",\n          \"float32\",\n          \"saturation\",\n          \"float32\",\n          \"sunFill\",\n          \"float32\",\n          \"ambScale\",\n          \"float32\",\n          \"ambFill\",\n          \"float32\",\n          \"flags\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataLightingCharGroupV36 = [\n          \"lightingChar\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharV36),\n        ];\n\n        this.PackMapEnvDataLayerAttributesV65 = [\n          \"brightness\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"haze\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"velocity\",\n          [\"[]\", \"float32\", 2],\n          \"fadeWidth\",\n          \"float32\",\n          \"fadeEnd\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataLayerV65 = [\n          \"altitude\",\n          \"float32\",\n          \"cutOut\",\n          \"float32\",\n          \"depth\",\n          \"float32\",\n          \"extent\",\n          \"float32\",\n          \"scale\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"attributes\",\n          Utils.getArrayReader(this.PackMapEnvDataLayerAttributesV65),\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataCloudsV65 = [\"layers\", Utils.getArrayReader(this.PackMapEnvDataLayerV65)];\n\n        this.PackMapEnvDataColoredLightRingsV36 = [\n          \"range\",\n          [\"[]\", \"float32\", 2],\n          \"distances\",\n          [\"[]\", \"float32\", 6],\n          \"lightColors\",\n          [\"[]\", [\"[]\", \"uint8\", 4], 6],\n          \"shadowColors\",\n          [\"[]\", [\"[]\", \"uint8\", 4], 6],\n        ];\n\n        this.PackMapEnvDataEffectV65 = [\n          \"glow\",\n          [\"[]\", \"uint8\", 4],\n          \"tintColor\",\n          [\"[]\", \"uint8\", 4],\n          \"tintTargetColor\",\n          [\"[]\", \"uint8\", 4],\n          \"saturation\",\n          \"float32\",\n          \"tintAmount\",\n          \"float32\",\n          \"tintFocus\",\n          \"float32\",\n          \"glowLevel\",\n          [\"[]\", \"uint8\", 4],\n          \"glowAmplify\",\n          \"float32\",\n          \"focalDepth\",\n          \"float32\",\n          \"focalRange\",\n          \"float32\",\n          \"flatteningRange\",\n          [\"[]\", \"float32\", 2],\n          \"flatteningCharacterRange\",\n          [\"[]\", \"float32\", 2],\n        ];\n\n        this.PackMapEnvDataHazeV65 = [\n          \"nearColor\",\n          [\"[]\", \"uint8\", 4],\n          \"farColor\",\n          [\"[]\", \"uint8\", 4],\n          \"distRange\",\n          [\"[]\", \"float32\", 2],\n          \"heightColor\",\n          [\"[]\", \"uint8\", 4],\n          \"heightRange\",\n          [\"[]\", \"float32\", 2],\n          \"depthCue\",\n          \"float32\",\n          \"sunDirRange\",\n          [\"[]\", \"float32\", 2],\n        ];\n\n        this.PackMapEnvDataPFieldV65 = [\n          \"altitude\",\n          \"float32\",\n          \"angle\",\n          [\"[]\", \"float32\", 2],\n          \"clusterCount\",\n          \"uint16\",\n          \"clustering\",\n          [\"[]\", \"float32\", 2],\n          \"depth\",\n          \"float32\",\n          \"deviation\",\n          \"float32\",\n          \"deviationSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"extent\",\n          \"uint16\",\n          \"fade\",\n          \"float32\",\n          \"fieldDirection\",\n          [\"[]\", \"float32\", 3],\n          \"flags\",\n          \"uint16\",\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"opacity\",\n          [\"[]\", \"float32\", 2],\n          \"particleCount\",\n          \"uint16\",\n          \"period\",\n          [\"[]\", \"float32\", 2],\n          \"rotation\",\n          [\"[]\", \"float32\", 2],\n          \"scaleX\",\n          [\"[]\", \"float32\", 2],\n          \"scaleY\",\n          [\"[]\", \"float32\", 2],\n          \"seed\",\n          \"uint32\",\n          \"speed\",\n          [\"[]\", \"float32\", 2],\n          \"texColRow\",\n          [\"[]\", \"uint32\", 2],\n          \"texFPS\",\n          \"uint16\",\n          \"texPath\",\n          Utils.getFileNameReader(),\n          \"type\",\n          \"uint8\",\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataPFieldCutoutV36 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"x\",\n          [\"[]\", \"float32\", 4],\n          \"y\",\n          [\"[]\", \"float32\", 4],\n          \"z\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.PackMapEnvDataSkyV65 = [\n          \"flags\",\n          \"uint8\",\n          \"dayBrightness\",\n          \"float32\",\n          \"dayHazeBottom\",\n          \"float32\",\n          \"dayHazeDensity\",\n          \"float32\",\n          \"dayHazeFalloff\",\n          \"float32\",\n          \"dayLightIntensity\",\n          \"float32\",\n          \"dayStarDensity\",\n          \"float32\",\n          \"nightBrightness\",\n          \"float32\",\n          \"nightHazeBottom\",\n          \"float32\",\n          \"nightHazeDensity\",\n          \"float32\",\n          \"nightHazeFalloff\",\n          \"float32\",\n          \"nightLightIntensity\",\n          \"float32\",\n          \"nightStarDensity\",\n          \"float32\",\n          \"verticalOffset\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataSkyCardAttributesV65 = [\n          \"azimuth\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"hazeDensity\",\n          \"float32\",\n          \"latitude\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"minHaze\",\n          \"float32\",\n          \"scale\",\n          [\"[]\", \"float32\", 2],\n          \"speed\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"textureUV\",\n          [\"[]\", \"float32\", 4],\n          \"brightness\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataSkyCardV65 = [\n          \"day\",\n          this.PackMapEnvDataSkyCardAttributesV65,\n          \"night\",\n          this.PackMapEnvDataSkyCardAttributesV65,\n          \"flags\",\n          \"uint32\",\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataSkyCardsV65 = [\"cards\", Utils.getArrayReader(this.PackMapEnvDataSkyCardV65)];\n\n        this.PackMapEnvDataSpawnModelDataV36 = [\n          \"spawnRange\",\n          [\"[]\", \"uint32\", 2],\n          \"lifeSpan\",\n          [\"[]\", \"uint32\", 2],\n          \"scaleRange\",\n          [\"[]\", \"float32\", 2],\n          \"heightRange\",\n          [\"[]\", \"float32\", 2],\n          \"rotXRange\",\n          [\"[]\", \"float32\", 2],\n          \"rotYRange\",\n          [\"[]\", \"float32\", 2],\n          \"rotZRange\",\n          [\"[]\", \"float32\", 2],\n          \"probability\",\n          \"float32\",\n          \"delay\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"modelFile\",\n          Utils.getFileNameReader(),\n          \"maxConcurrent\",\n          \"uint16\",\n        ];\n\n        this.PackMapEnvDataSpawnListV36 = [\"spawns\", Utils.getArrayReader(this.PackMapEnvDataSpawnModelDataV36)];\n\n        this.PackMapEnvDataSpawnGroupsV36 = [\n          \"spawnGroups\",\n          Utils.getArrayReader(this.PackMapEnvDataSpawnListV36),\n          \"targets\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.PackMapEnvDataWaterV65 = [\n          \"waterFlags\",\n          \"uint32\",\n          \"animAmplitude\",\n          \"float32\",\n          \"animChoppiness\",\n          \"float32\",\n          \"animWind\",\n          [\"[]\", \"float32\", 2],\n          \"bumpAmount\",\n          \"float32\",\n          \"bumpAngle0\",\n          \"float32\",\n          \"bumpAngle1\",\n          \"float32\",\n          \"bumpScale0\",\n          \"float32\",\n          \"bumpScale1\",\n          \"float32\",\n          \"bumpSpeed0\",\n          \"float32\",\n          \"bumpSpeed1\",\n          \"float32\",\n          \"bumpTile0\",\n          \"float32\",\n          \"bumpTile1\",\n          \"float32\",\n          \"patternAngle\",\n          \"float32\",\n          \"patternTile\",\n          \"float32\",\n          \"patternSpeed\",\n          \"float32\",\n          \"patternEdge\",\n          \"float32\",\n          \"surfaceShallowColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceDeepColor\",\n          [\"[]\", \"uint8\", 4],\n          \"patternColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceFresnel\",\n          \"float32\",\n          \"distortAmount\",\n          \"float32\",\n          \"depthAttenuation\",\n          \"float32\",\n          \"materialFilename\",\n          Utils.getFileNameReader(),\n          \"textureFilenames\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"constantTokens\",\n          Utils.getArrayReader(\"uint32\"),\n          \"constantValues\",\n          Utils.getArrayReader([\"[]\", \"float32\", 4]),\n          \"foamSpawn\",\n          \"float32\",\n          \"foamDissolve\",\n          \"float32\",\n          \"foamDepthAttenuation\",\n          \"float32\",\n          \"foamColor0\",\n          [\"[]\", \"uint8\", 4],\n          \"foamColor1\",\n          [\"[]\", \"uint8\", 4],\n        ];\n\n        this.PackMapEnvDataWindV65 = [\n          \"azimuth\",\n          \"uint8\",\n          \"elevation\",\n          \"uint8\",\n          \"noise\",\n          \"uint8\",\n          \"speed\",\n          \"uint8\",\n          \"gust\",\n          \"uint8\",\n          \"gustFreq\",\n          \"uint8\",\n          \"gustSpeed\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataLocalV65 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV65),\n          \"lightingCharGroups\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharGroupV36),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV65),\n          \"coloredLightRings\",\n          Utils.getRefArrayReader(this.PackMapEnvDataColoredLightRingsV36),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV65),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV65),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV65),\n          \"particleFieldCutouts\",\n          Utils.getArrayReader(this.PackMapEnvDataPFieldCutoutV36),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV65),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV65),\n          \"spawns\",\n          Utils.getPointerReader(this.PackMapEnvDataSpawnGroupsV36),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV65),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV65),\n          \"name\",\n          Utils.getString16Reader(),\n          \"nightMods\",\n          Utils.getArrayReader(\"uint8\"),\n          \"bindTarget\",\n          Utils.getQWordReader(),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"zRange\",\n          [\"[]\", \"float32\", 2],\n          \"fadeHorizInner\",\n          \"float32\",\n          \"fadeHorizOuter\",\n          \"float32\",\n          \"fadeVertical\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n          \"vertexArray\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n          \"guid\",\n          Utils.getQWordReader(),\n        ];\n\n        this.PackMapEnvDataSkyModeTexV65 = [\n          \"texPathNE\",\n          Utils.getFileNameReader(),\n          \"texPathSW\",\n          Utils.getFileNameReader(),\n          \"texPathT\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackMapEnvDataGlobalV65 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV65),\n          \"lightingCharGroups\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharGroupV36),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV65),\n          \"coloredLightRings\",\n          Utils.getRefArrayReader(this.PackMapEnvDataColoredLightRingsV36),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV65),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV65),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV65),\n          \"particleFieldCutouts\",\n          Utils.getArrayReader(this.PackMapEnvDataPFieldCutoutV36),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV65),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV65),\n          \"spawns\",\n          Utils.getPointerReader(this.PackMapEnvDataSpawnGroupsV36),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV65),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV65),\n          \"name\",\n          Utils.getString16Reader(),\n          \"nightMods\",\n          Utils.getArrayReader(\"uint8\"),\n          \"bindTarget\",\n          Utils.getQWordReader(),\n          \"skyModeTex\",\n          Utils.getArrayReader(this.PackMapEnvDataSkyModeTexV65),\n          \"starFile\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.__root = this.PackMapEnvironmentV65 = [\n          \"dataLocalArray\",\n          Utils.getArrayReader(this.PackMapEnvDataLocalV65),\n          \"dataGlobal\",\n          Utils.getPointerReader(this.PackMapEnvDataGlobalV65),\n        ];\n      },\n\n      // => Version: 64, ReferencedFunction: 0xEB8D90\n      64: function () {\n        this.PackMapEnvDataLightV64 = [\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"intensity\",\n          \"float32\",\n          \"direction\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.PackMapEnvDataLightingV64 = [\"lights\", Utils.getRefArrayReader(this.PackMapEnvDataLightV64)];\n\n        this.PackMapEnvDataLightingCharV35 = [\n          \"sunScale\",\n          \"float32\",\n          \"saturation\",\n          \"float32\",\n          \"sunFill\",\n          \"float32\",\n          \"ambScale\",\n          \"float32\",\n          \"ambFill\",\n          \"float32\",\n          \"flags\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataLightingCharGroupV35 = [\n          \"lightingChar\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharV35),\n        ];\n\n        this.PackMapEnvDataLayerAttributesV64 = [\n          \"brightness\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"haze\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"velocity\",\n          [\"[]\", \"float32\", 2],\n          \"fadeWidth\",\n          \"float32\",\n          \"fadeEnd\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataLayerV64 = [\n          \"altitude\",\n          \"float32\",\n          \"cutOut\",\n          \"float32\",\n          \"depth\",\n          \"float32\",\n          \"extent\",\n          \"float32\",\n          \"scale\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"attributes\",\n          Utils.getArrayReader(this.PackMapEnvDataLayerAttributesV64),\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataCloudsV64 = [\"layers\", Utils.getArrayReader(this.PackMapEnvDataLayerV64)];\n\n        this.PackMapEnvDataColoredLightRingsV35 = [\n          \"range\",\n          [\"[]\", \"float32\", 2],\n          \"distances\",\n          [\"[]\", \"float32\", 6],\n          \"lightColors\",\n          [\"[]\", [\"[]\", \"uint8\", 4], 6],\n          \"shadowColors\",\n          [\"[]\", [\"[]\", \"uint8\", 4], 6],\n        ];\n\n        this.PackMapEnvDataEffectV64 = [\n          \"glow\",\n          [\"[]\", \"uint8\", 4],\n          \"tintColor\",\n          [\"[]\", \"uint8\", 4],\n          \"tintTargetColor\",\n          [\"[]\", \"uint8\", 4],\n          \"saturation\",\n          \"float32\",\n          \"tintAmount\",\n          \"float32\",\n          \"tintFocus\",\n          \"float32\",\n          \"glowLevel\",\n          [\"[]\", \"uint8\", 4],\n          \"glowAmplify\",\n          \"float32\",\n          \"focalDepth\",\n          \"float32\",\n          \"focalRange\",\n          \"float32\",\n          \"flatteningRange\",\n          [\"[]\", \"float32\", 2],\n          \"flatteningCharacterRange\",\n          [\"[]\", \"float32\", 2],\n        ];\n\n        this.PackMapEnvDataHazeV64 = [\n          \"nearColor\",\n          [\"[]\", \"uint8\", 4],\n          \"farColor\",\n          [\"[]\", \"uint8\", 4],\n          \"distRange\",\n          [\"[]\", \"float32\", 2],\n          \"heightColor\",\n          [\"[]\", \"uint8\", 4],\n          \"heightRange\",\n          [\"[]\", \"float32\", 2],\n          \"depthCue\",\n          \"float32\",\n          \"sunDirRange\",\n          [\"[]\", \"float32\", 2],\n        ];\n\n        this.PackMapEnvDataPFieldV64 = [\n          \"altitude\",\n          \"float32\",\n          \"angle\",\n          [\"[]\", \"float32\", 2],\n          \"clusterCount\",\n          \"uint16\",\n          \"clustering\",\n          [\"[]\", \"float32\", 2],\n          \"depth\",\n          \"float32\",\n          \"deviation\",\n          \"float32\",\n          \"deviationSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"extent\",\n          \"uint16\",\n          \"fade\",\n          \"float32\",\n          \"fieldDirection\",\n          [\"[]\", \"float32\", 3],\n          \"flags\",\n          \"uint16\",\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"opacity\",\n          [\"[]\", \"float32\", 2],\n          \"particleCount\",\n          \"uint16\",\n          \"period\",\n          [\"[]\", \"float32\", 2],\n          \"rotation\",\n          [\"[]\", \"float32\", 2],\n          \"scaleX\",\n          [\"[]\", \"float32\", 2],\n          \"scaleY\",\n          [\"[]\", \"float32\", 2],\n          \"seed\",\n          \"uint32\",\n          \"speed\",\n          [\"[]\", \"float32\", 2],\n          \"texColRow\",\n          [\"[]\", \"uint32\", 2],\n          \"texFPS\",\n          \"uint16\",\n          \"texPath\",\n          Utils.getFileNameReader(),\n          \"type\",\n          \"uint8\",\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataPFieldCutoutV35 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"x\",\n          [\"[]\", \"float32\", 4],\n          \"y\",\n          [\"[]\", \"float32\", 4],\n          \"z\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.PackMapEnvDataSkyV64 = [\n          \"flags\",\n          \"uint8\",\n          \"dayBrightness\",\n          \"float32\",\n          \"dayHazeBottom\",\n          \"float32\",\n          \"dayHazeDensity\",\n          \"float32\",\n          \"dayHazeFalloff\",\n          \"float32\",\n          \"dayLightIntensity\",\n          \"float32\",\n          \"dayStarDensity\",\n          \"float32\",\n          \"nightBrightness\",\n          \"float32\",\n          \"nightHazeBottom\",\n          \"float32\",\n          \"nightHazeDensity\",\n          \"float32\",\n          \"nightHazeFalloff\",\n          \"float32\",\n          \"nightLightIntensity\",\n          \"float32\",\n          \"nightStarDensity\",\n          \"float32\",\n          \"verticalOffset\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataSkyCardAttributesV64 = [\n          \"azimuth\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"hazeDensity\",\n          \"float32\",\n          \"latitude\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"minHaze\",\n          \"float32\",\n          \"scale\",\n          [\"[]\", \"float32\", 2],\n          \"speed\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"textureUV\",\n          [\"[]\", \"float32\", 4],\n          \"brightness\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataSkyCardV64 = [\n          \"day\",\n          this.PackMapEnvDataSkyCardAttributesV64,\n          \"night\",\n          this.PackMapEnvDataSkyCardAttributesV64,\n          \"flags\",\n          \"uint32\",\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataSkyCardsV64 = [\"cards\", Utils.getArrayReader(this.PackMapEnvDataSkyCardV64)];\n\n        this.PackMapEnvDataSpawnModelDataV35 = [\n          \"spawnRange\",\n          [\"[]\", \"uint32\", 2],\n          \"lifeSpan\",\n          [\"[]\", \"uint32\", 2],\n          \"scaleRange\",\n          [\"[]\", \"float32\", 2],\n          \"heightRange\",\n          [\"[]\", \"float32\", 2],\n          \"rotXRange\",\n          [\"[]\", \"float32\", 2],\n          \"rotYRange\",\n          [\"[]\", \"float32\", 2],\n          \"rotZRange\",\n          [\"[]\", \"float32\", 2],\n          \"probability\",\n          \"float32\",\n          \"delay\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"modelFile\",\n          Utils.getFileNameReader(),\n          \"maxConcurrent\",\n          \"uint16\",\n        ];\n\n        this.PackMapEnvDataSpawnListV35 = [\"spawns\", Utils.getArrayReader(this.PackMapEnvDataSpawnModelDataV35)];\n\n        this.PackMapEnvDataSpawnGroupsV35 = [\n          \"spawnGroups\",\n          Utils.getArrayReader(this.PackMapEnvDataSpawnListV35),\n          \"targets\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.PackMapEnvDataWaterV64 = [\n          \"waterFlags\",\n          \"uint32\",\n          \"animAmplitude\",\n          \"float32\",\n          \"animChoppiness\",\n          \"float32\",\n          \"animWind\",\n          [\"[]\", \"float32\", 2],\n          \"bumpAmount\",\n          \"float32\",\n          \"bumpAngle0\",\n          \"float32\",\n          \"bumpAngle1\",\n          \"float32\",\n          \"bumpScale0\",\n          \"float32\",\n          \"bumpScale1\",\n          \"float32\",\n          \"bumpSpeed0\",\n          \"float32\",\n          \"bumpSpeed1\",\n          \"float32\",\n          \"bumpTile0\",\n          \"float32\",\n          \"bumpTile1\",\n          \"float32\",\n          \"patternAngle\",\n          \"float32\",\n          \"patternTile\",\n          \"float32\",\n          \"patternSpeed\",\n          \"float32\",\n          \"patternEdge\",\n          \"float32\",\n          \"surfaceShallowColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceDeepColor\",\n          [\"[]\", \"uint8\", 4],\n          \"patternColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceFresnel\",\n          \"float32\",\n          \"distortAmount\",\n          \"float32\",\n          \"depthAttenuation\",\n          \"float32\",\n          \"materialFilename\",\n          Utils.getFileNameReader(),\n          \"textureFilenames\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"constantTokens\",\n          Utils.getArrayReader(\"uint32\"),\n          \"constantValues\",\n          Utils.getArrayReader([\"[]\", \"float32\", 4]),\n          \"foamSpawn\",\n          \"float32\",\n          \"foamDissolve\",\n          \"float32\",\n          \"foamDepthAttenuation\",\n          \"float32\",\n          \"foamColor0\",\n          [\"[]\", \"uint8\", 4],\n          \"foamColor1\",\n          [\"[]\", \"uint8\", 4],\n        ];\n\n        this.PackMapEnvDataWindV64 = [\n          \"azimuth\",\n          \"uint8\",\n          \"elevation\",\n          \"uint8\",\n          \"noise\",\n          \"uint8\",\n          \"speed\",\n          \"uint8\",\n          \"gust\",\n          \"uint8\",\n          \"gustFreq\",\n          \"uint8\",\n          \"gustSpeed\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataLocalV64 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV64),\n          \"lightingCharGroups\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharGroupV35),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV64),\n          \"coloredLightRings\",\n          Utils.getRefArrayReader(this.PackMapEnvDataColoredLightRingsV35),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV64),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV64),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV64),\n          \"particleFieldCutouts\",\n          Utils.getArrayReader(this.PackMapEnvDataPFieldCutoutV35),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV64),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV64),\n          \"spawns\",\n          Utils.getPointerReader(this.PackMapEnvDataSpawnGroupsV35),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV64),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV64),\n          \"name\",\n          Utils.getString16Reader(),\n          \"nightMods\",\n          Utils.getArrayReader(\"uint8\"),\n          \"bindTarget\",\n          Utils.getQWordReader(),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"zRange\",\n          [\"[]\", \"float32\", 2],\n          \"fadeHorizInner\",\n          \"float32\",\n          \"fadeHorizOuter\",\n          \"float32\",\n          \"fadeVertical\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n          \"vertexArray\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n          \"guid\",\n          Utils.getQWordReader(),\n        ];\n\n        this.PackMapEnvDataSkyModeTexV64 = [\n          \"texPathNE\",\n          Utils.getFileNameReader(),\n          \"texPathSW\",\n          Utils.getFileNameReader(),\n          \"texPathT\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackMapEnvDataGlobalV64 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV64),\n          \"lightingCharGroups\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharGroupV35),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV64),\n          \"coloredLightRings\",\n          Utils.getRefArrayReader(this.PackMapEnvDataColoredLightRingsV35),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV64),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV64),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV64),\n          \"particleFieldCutouts\",\n          Utils.getArrayReader(this.PackMapEnvDataPFieldCutoutV35),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV64),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV64),\n          \"spawns\",\n          Utils.getPointerReader(this.PackMapEnvDataSpawnGroupsV35),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV64),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV64),\n          \"name\",\n          Utils.getString16Reader(),\n          \"nightMods\",\n          Utils.getArrayReader(\"uint8\"),\n          \"bindTarget\",\n          Utils.getQWordReader(),\n          \"skyModeTex\",\n          Utils.getArrayReader(this.PackMapEnvDataSkyModeTexV64),\n          \"starFile\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.__root = this.PackMapEnvironmentV64 = [\n          \"dataLocalArray\",\n          Utils.getArrayReader(this.PackMapEnvDataLocalV64),\n          \"dataGlobal\",\n          Utils.getPointerReader(this.PackMapEnvDataGlobalV64),\n        ];\n      },\n\n      // => Version: 63, ReferencedFunction: 0xEB8C90\n      63: function () {\n        this.PackMapEnvDataLightV63 = [\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"intensity\",\n          \"float32\",\n          \"direction\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.PackMapEnvDataLightingV63 = [\"lights\", Utils.getRefArrayReader(this.PackMapEnvDataLightV63)];\n\n        this.PackMapEnvDataLightingCharV34 = [\n          \"sunScale\",\n          \"float32\",\n          \"saturation\",\n          \"float32\",\n          \"sunFill\",\n          \"float32\",\n          \"ambScale\",\n          \"float32\",\n          \"ambFill\",\n          \"float32\",\n          \"flags\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataLightingCharGroupV34 = [\n          \"lightingChar\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharV34),\n        ];\n\n        this.PackMapEnvDataLayerAttributesV63 = [\n          \"brightness\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"haze\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"velocity\",\n          [\"[]\", \"float32\", 2],\n          \"fadeWidth\",\n          \"float32\",\n          \"fadeEnd\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataLayerV63 = [\n          \"altitude\",\n          \"float32\",\n          \"cutOut\",\n          \"float32\",\n          \"depth\",\n          \"float32\",\n          \"extent\",\n          \"float32\",\n          \"scale\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"attributes\",\n          Utils.getArrayReader(this.PackMapEnvDataLayerAttributesV63),\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataCloudsV63 = [\"layers\", Utils.getArrayReader(this.PackMapEnvDataLayerV63)];\n\n        this.PackMapEnvDataColoredLightRingsV34 = [\n          \"range\",\n          [\"[]\", \"float32\", 2],\n          \"distances\",\n          [\"[]\", \"float32\", 6],\n          \"lightColors\",\n          [\"[]\", [\"[]\", \"uint8\", 4], 6],\n          \"shadowColors\",\n          [\"[]\", [\"[]\", \"uint8\", 4], 6],\n        ];\n\n        this.PackMapEnvDataEffectV63 = [\n          \"glow\",\n          [\"[]\", \"uint8\", 4],\n          \"tintColor\",\n          [\"[]\", \"uint8\", 4],\n          \"tintTargetColor\",\n          [\"[]\", \"uint8\", 4],\n          \"saturation\",\n          \"float32\",\n          \"tintAmount\",\n          \"float32\",\n          \"tintFocus\",\n          \"float32\",\n          \"glowLevel\",\n          [\"[]\", \"uint8\", 4],\n          \"glowAmplify\",\n          \"float32\",\n          \"focalDepth\",\n          \"float32\",\n          \"focalRange\",\n          \"float32\",\n          \"flatteningRange\",\n          [\"[]\", \"float32\", 2],\n          \"flatteningCharacterRange\",\n          [\"[]\", \"float32\", 2],\n        ];\n\n        this.PackMapEnvDataHazeV63 = [\n          \"nearColor\",\n          [\"[]\", \"uint8\", 4],\n          \"farColor\",\n          [\"[]\", \"uint8\", 4],\n          \"distRange\",\n          [\"[]\", \"float32\", 2],\n          \"heightColor\",\n          [\"[]\", \"uint8\", 4],\n          \"heightRange\",\n          [\"[]\", \"float32\", 2],\n          \"depthCue\",\n          \"float32\",\n          \"sunDirRange\",\n          [\"[]\", \"float32\", 2],\n        ];\n\n        this.PackMapEnvDataPFieldV63 = [\n          \"altitude\",\n          \"float32\",\n          \"angle\",\n          [\"[]\", \"float32\", 2],\n          \"clusterCount\",\n          \"uint16\",\n          \"clustering\",\n          [\"[]\", \"float32\", 2],\n          \"depth\",\n          \"float32\",\n          \"deviation\",\n          \"float32\",\n          \"deviationSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"extent\",\n          \"uint16\",\n          \"fade\",\n          \"float32\",\n          \"fieldDirection\",\n          [\"[]\", \"float32\", 3],\n          \"flags\",\n          \"uint16\",\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"opacity\",\n          [\"[]\", \"float32\", 2],\n          \"particleCount\",\n          \"uint16\",\n          \"period\",\n          [\"[]\", \"float32\", 2],\n          \"rotation\",\n          [\"[]\", \"float32\", 2],\n          \"scaleX\",\n          [\"[]\", \"float32\", 2],\n          \"scaleY\",\n          [\"[]\", \"float32\", 2],\n          \"seed\",\n          \"uint32\",\n          \"speed\",\n          [\"[]\", \"float32\", 2],\n          \"texColRow\",\n          [\"[]\", \"uint32\", 2],\n          \"texFPS\",\n          \"uint16\",\n          \"texPath\",\n          Utils.getFileNameReader(),\n          \"type\",\n          \"uint8\",\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataPFieldCutoutV34 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"x\",\n          [\"[]\", \"float32\", 4],\n          \"y\",\n          [\"[]\", \"float32\", 4],\n          \"z\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.PackMapEnvDataSkyV63 = [\n          \"flags\",\n          \"uint8\",\n          \"dayBrightness\",\n          \"float32\",\n          \"dayHazeBottom\",\n          \"float32\",\n          \"dayHazeDensity\",\n          \"float32\",\n          \"dayHazeFalloff\",\n          \"float32\",\n          \"dayLightIntensity\",\n          \"float32\",\n          \"dayStarDensity\",\n          \"float32\",\n          \"nightBrightness\",\n          \"float32\",\n          \"nightHazeBottom\",\n          \"float32\",\n          \"nightHazeDensity\",\n          \"float32\",\n          \"nightHazeFalloff\",\n          \"float32\",\n          \"nightLightIntensity\",\n          \"float32\",\n          \"nightStarDensity\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataSkyCardAttributesV63 = [\n          \"azimuth\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"hazeDensity\",\n          \"float32\",\n          \"latitude\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"minHaze\",\n          \"float32\",\n          \"scale\",\n          [\"[]\", \"float32\", 2],\n          \"speed\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"textureUV\",\n          [\"[]\", \"float32\", 4],\n          \"brightness\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataSkyCardV63 = [\n          \"day\",\n          this.PackMapEnvDataSkyCardAttributesV63,\n          \"night\",\n          this.PackMapEnvDataSkyCardAttributesV63,\n          \"flags\",\n          \"uint32\",\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataSkyCardsV63 = [\"cards\", Utils.getArrayReader(this.PackMapEnvDataSkyCardV63)];\n\n        this.PackMapEnvDataSpawnModelDataV34 = [\n          \"spawnRange\",\n          [\"[]\", \"uint32\", 2],\n          \"lifeSpan\",\n          [\"[]\", \"uint32\", 2],\n          \"scaleRange\",\n          [\"[]\", \"float32\", 2],\n          \"heightRange\",\n          [\"[]\", \"float32\", 2],\n          \"rotXRange\",\n          [\"[]\", \"float32\", 2],\n          \"rotYRange\",\n          [\"[]\", \"float32\", 2],\n          \"rotZRange\",\n          [\"[]\", \"float32\", 2],\n          \"probability\",\n          \"float32\",\n          \"delay\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"modelFile\",\n          Utils.getFileNameReader(),\n          \"maxConcurrent\",\n          \"uint16\",\n        ];\n\n        this.PackMapEnvDataSpawnListV34 = [\"spawns\", Utils.getArrayReader(this.PackMapEnvDataSpawnModelDataV34)];\n\n        this.PackMapEnvDataSpawnGroupsV34 = [\n          \"spawnGroups\",\n          Utils.getArrayReader(this.PackMapEnvDataSpawnListV34),\n          \"targets\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.PackMapEnvDataWaterV63 = [\n          \"waterFlags\",\n          \"uint32\",\n          \"animAmplitude\",\n          \"float32\",\n          \"animChoppiness\",\n          \"float32\",\n          \"animWind\",\n          [\"[]\", \"float32\", 2],\n          \"bumpAmount\",\n          \"float32\",\n          \"bumpAngle0\",\n          \"float32\",\n          \"bumpAngle1\",\n          \"float32\",\n          \"bumpScale0\",\n          \"float32\",\n          \"bumpScale1\",\n          \"float32\",\n          \"bumpSpeed0\",\n          \"float32\",\n          \"bumpSpeed1\",\n          \"float32\",\n          \"bumpTile0\",\n          \"float32\",\n          \"bumpTile1\",\n          \"float32\",\n          \"patternAngle\",\n          \"float32\",\n          \"patternTile\",\n          \"float32\",\n          \"patternSpeed\",\n          \"float32\",\n          \"patternEdge\",\n          \"float32\",\n          \"surfaceShallowColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceDeepColor\",\n          [\"[]\", \"uint8\", 4],\n          \"patternColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceFresnel\",\n          \"float32\",\n          \"distortAmount\",\n          \"float32\",\n          \"depthAttenuation\",\n          \"float32\",\n          \"materialFilename\",\n          Utils.getFileNameReader(),\n          \"textureFilenames\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"constantTokens\",\n          Utils.getArrayReader(\"uint32\"),\n          \"constantValues\",\n          Utils.getArrayReader([\"[]\", \"float32\", 4]),\n          \"foamSpawn\",\n          \"float32\",\n          \"foamDissolve\",\n          \"float32\",\n          \"foamDepthAttenuation\",\n          \"float32\",\n          \"foamColor0\",\n          [\"[]\", \"uint8\", 4],\n          \"foamColor1\",\n          [\"[]\", \"uint8\", 4],\n        ];\n\n        this.PackMapEnvDataWindV63 = [\n          \"azimuth\",\n          \"uint8\",\n          \"elevation\",\n          \"uint8\",\n          \"noise\",\n          \"uint8\",\n          \"speed\",\n          \"uint8\",\n          \"gust\",\n          \"uint8\",\n          \"gustFreq\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataLocalV63 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV63),\n          \"lightingCharGroups\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharGroupV34),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV63),\n          \"coloredLightRings\",\n          Utils.getRefArrayReader(this.PackMapEnvDataColoredLightRingsV34),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV63),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV63),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV63),\n          \"particleFieldCutouts\",\n          Utils.getArrayReader(this.PackMapEnvDataPFieldCutoutV34),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV63),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV63),\n          \"spawns\",\n          Utils.getPointerReader(this.PackMapEnvDataSpawnGroupsV34),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV63),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV63),\n          \"name\",\n          Utils.getString16Reader(),\n          \"nightMods\",\n          Utils.getArrayReader(\"uint8\"),\n          \"bindTarget\",\n          Utils.getQWordReader(),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"zRange\",\n          [\"[]\", \"float32\", 2],\n          \"fadeHorizInner\",\n          \"float32\",\n          \"fadeHorizOuter\",\n          \"float32\",\n          \"fadeVertical\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n          \"vertexArray\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n          \"guid\",\n          Utils.getQWordReader(),\n        ];\n\n        this.PackMapEnvDataSkyModeTexV63 = [\n          \"texPathNE\",\n          Utils.getFileNameReader(),\n          \"texPathSW\",\n          Utils.getFileNameReader(),\n          \"texPathT\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackMapEnvDataGlobalV63 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV63),\n          \"lightingCharGroups\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharGroupV34),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV63),\n          \"coloredLightRings\",\n          Utils.getRefArrayReader(this.PackMapEnvDataColoredLightRingsV34),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV63),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV63),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV63),\n          \"particleFieldCutouts\",\n          Utils.getArrayReader(this.PackMapEnvDataPFieldCutoutV34),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV63),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV63),\n          \"spawns\",\n          Utils.getPointerReader(this.PackMapEnvDataSpawnGroupsV34),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV63),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV63),\n          \"name\",\n          Utils.getString16Reader(),\n          \"nightMods\",\n          Utils.getArrayReader(\"uint8\"),\n          \"bindTarget\",\n          Utils.getQWordReader(),\n          \"skyModeTex\",\n          Utils.getArrayReader(this.PackMapEnvDataSkyModeTexV63),\n          \"starFile\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.__root = this.PackMapEnvironmentV63 = [\n          \"dataLocalArray\",\n          Utils.getArrayReader(this.PackMapEnvDataLocalV63),\n          \"dataGlobal\",\n          Utils.getPointerReader(this.PackMapEnvDataGlobalV63),\n        ];\n      },\n\n      // => Version: 62, ReferencedFunction: 0xEB8C60\n      62: function () {\n        this.PackMapEnvDataLightV62 = [\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"intensity\",\n          \"float32\",\n          \"direction\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.PackMapEnvDataLightingV62 = [\"lights\", Utils.getRefArrayReader(this.PackMapEnvDataLightV62)];\n\n        this.PackMapEnvDataLightingCharV33 = [\n          \"sunScale\",\n          \"float32\",\n          \"saturation\",\n          \"float32\",\n          \"sunFill\",\n          \"float32\",\n          \"ambScale\",\n          \"float32\",\n          \"ambFill\",\n          \"float32\",\n          \"flags\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataLightingCharGroupV33 = [\n          \"lightingChar\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharV33),\n        ];\n\n        this.PackMapEnvDataLayerAttributesV62 = [\n          \"brightness\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"haze\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"velocity\",\n          [\"[]\", \"float32\", 2],\n          \"fadeWidth\",\n          \"float32\",\n          \"fadeEnd\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataLayerV62 = [\n          \"altitude\",\n          \"float32\",\n          \"cutOut\",\n          \"float32\",\n          \"depth\",\n          \"float32\",\n          \"extent\",\n          \"float32\",\n          \"scale\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"attributes\",\n          Utils.getArrayReader(this.PackMapEnvDataLayerAttributesV62),\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataCloudsV62 = [\"layers\", Utils.getArrayReader(this.PackMapEnvDataLayerV62)];\n\n        this.PackMapEnvDataColoredLightRingsV33 = [\n          \"range\",\n          [\"[]\", \"float32\", 2],\n          \"distances\",\n          [\"[]\", \"float32\", 6],\n          \"lightColors\",\n          [\"[]\", [\"[]\", \"uint8\", 4], 6],\n          \"shadowColors\",\n          [\"[]\", [\"[]\", \"uint8\", 4], 6],\n        ];\n\n        this.PackMapEnvDataEffectV62 = [\n          \"glow\",\n          [\"[]\", \"uint8\", 4],\n          \"tintColor\",\n          [\"[]\", \"uint8\", 4],\n          \"tintTargetColor\",\n          [\"[]\", \"uint8\", 4],\n          \"saturation\",\n          \"float32\",\n          \"tintAmount\",\n          \"float32\",\n          \"tintFocus\",\n          \"float32\",\n          \"glowLevel\",\n          [\"[]\", \"uint8\", 4],\n          \"glowAmplify\",\n          \"float32\",\n          \"focalDepth\",\n          \"float32\",\n          \"focalRange\",\n          \"float32\",\n          \"flatteningRange\",\n          [\"[]\", \"float32\", 2],\n          \"flatteningCharacterRange\",\n          [\"[]\", \"float32\", 2],\n        ];\n\n        this.PackMapEnvDataHazeV62 = [\n          \"nearColor\",\n          [\"[]\", \"uint8\", 4],\n          \"farColor\",\n          [\"[]\", \"uint8\", 4],\n          \"distRange\",\n          [\"[]\", \"float32\", 2],\n          \"heightColor\",\n          [\"[]\", \"uint8\", 4],\n          \"heightRange\",\n          [\"[]\", \"float32\", 2],\n          \"depthCue\",\n          \"float32\",\n          \"sunDirRange\",\n          [\"[]\", \"float32\", 2],\n        ];\n\n        this.PackMapEnvDataPFieldV62 = [\n          \"altitude\",\n          \"float32\",\n          \"angle\",\n          [\"[]\", \"float32\", 2],\n          \"clusterCount\",\n          \"uint16\",\n          \"clustering\",\n          [\"[]\", \"float32\", 2],\n          \"depth\",\n          \"float32\",\n          \"deviation\",\n          \"float32\",\n          \"deviationSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"extent\",\n          \"uint16\",\n          \"fade\",\n          \"float32\",\n          \"fieldDirection\",\n          [\"[]\", \"float32\", 3],\n          \"flags\",\n          \"uint16\",\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"opacity\",\n          [\"[]\", \"float32\", 2],\n          \"particleCount\",\n          \"uint16\",\n          \"period\",\n          [\"[]\", \"float32\", 2],\n          \"rotation\",\n          [\"[]\", \"float32\", 2],\n          \"scaleX\",\n          [\"[]\", \"float32\", 2],\n          \"scaleY\",\n          [\"[]\", \"float32\", 2],\n          \"seed\",\n          \"uint32\",\n          \"speed\",\n          [\"[]\", \"float32\", 2],\n          \"texColRow\",\n          [\"[]\", \"uint32\", 2],\n          \"texFPS\",\n          \"uint16\",\n          \"texPath\",\n          Utils.getFileNameReader(),\n          \"type\",\n          \"uint8\",\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataPFieldCutoutV33 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"x\",\n          [\"[]\", \"float32\", 4],\n          \"y\",\n          [\"[]\", \"float32\", 4],\n          \"z\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.PackMapEnvDataSkyV62 = [\n          \"flags\",\n          \"uint8\",\n          \"dayBrightness\",\n          \"float32\",\n          \"dayHazeBottom\",\n          \"float32\",\n          \"dayHazeDensity\",\n          \"float32\",\n          \"dayHazeFalloff\",\n          \"float32\",\n          \"dayLightIntensity\",\n          \"float32\",\n          \"dayStarDensity\",\n          \"float32\",\n          \"nightBrightness\",\n          \"float32\",\n          \"nightHazeBottom\",\n          \"float32\",\n          \"nightHazeDensity\",\n          \"float32\",\n          \"nightHazeFalloff\",\n          \"float32\",\n          \"nightLightIntensity\",\n          \"float32\",\n          \"nightStarDensity\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataSkyCardAttributesV62 = [\n          \"azimuth\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"hazeDensity\",\n          \"float32\",\n          \"latitude\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"minHaze\",\n          \"float32\",\n          \"scale\",\n          [\"[]\", \"float32\", 2],\n          \"speed\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"textureUV\",\n          [\"[]\", \"float32\", 4],\n          \"brightness\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataSkyCardV62 = [\n          \"day\",\n          this.PackMapEnvDataSkyCardAttributesV62,\n          \"night\",\n          this.PackMapEnvDataSkyCardAttributesV62,\n          \"flags\",\n          \"uint32\",\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataSkyCardsV62 = [\"cards\", Utils.getArrayReader(this.PackMapEnvDataSkyCardV62)];\n\n        this.PackMapEnvDataSpawnModelDataV33 = [\n          \"spawnRange\",\n          [\"[]\", \"uint32\", 2],\n          \"lifeSpan\",\n          [\"[]\", \"uint32\", 2],\n          \"scaleRange\",\n          [\"[]\", \"float32\", 2],\n          \"heightRange\",\n          [\"[]\", \"float32\", 2],\n          \"rotXRange\",\n          [\"[]\", \"float32\", 2],\n          \"rotYRange\",\n          [\"[]\", \"float32\", 2],\n          \"rotZRange\",\n          [\"[]\", \"float32\", 2],\n          \"probability\",\n          \"float32\",\n          \"delay\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"modelFile\",\n          Utils.getFileNameReader(),\n          \"maxConcurrent\",\n          \"uint16\",\n        ];\n\n        this.PackMapEnvDataSpawnListV33 = [\"spawns\", Utils.getArrayReader(this.PackMapEnvDataSpawnModelDataV33)];\n\n        this.PackMapEnvDataSpawnGroupsV33 = [\n          \"spawnGroups\",\n          Utils.getArrayReader(this.PackMapEnvDataSpawnListV33),\n          \"targets\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.PackMapEnvDataWaterV62 = [\n          \"waterFlags\",\n          \"uint32\",\n          \"animAmplitude\",\n          \"float32\",\n          \"animChoppiness\",\n          \"float32\",\n          \"animWind\",\n          [\"[]\", \"float32\", 2],\n          \"bumpAmount\",\n          \"float32\",\n          \"bumpAngle0\",\n          \"float32\",\n          \"bumpAngle1\",\n          \"float32\",\n          \"bumpScale0\",\n          \"float32\",\n          \"bumpScale1\",\n          \"float32\",\n          \"bumpSpeed0\",\n          \"float32\",\n          \"bumpSpeed1\",\n          \"float32\",\n          \"bumpTile0\",\n          \"float32\",\n          \"bumpTile1\",\n          \"float32\",\n          \"patternAngle\",\n          \"float32\",\n          \"patternTile\",\n          \"float32\",\n          \"patternSpeed\",\n          \"float32\",\n          \"patternEdge\",\n          \"float32\",\n          \"surfaceShallowColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceDeepColor\",\n          [\"[]\", \"uint8\", 4],\n          \"patternColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceFresnel\",\n          \"float32\",\n          \"distortAmount\",\n          \"float32\",\n          \"depthAttenuation\",\n          \"float32\",\n          \"materialFilename\",\n          Utils.getFileNameReader(),\n          \"textureFilenames\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"constantTokens\",\n          Utils.getArrayReader(\"uint32\"),\n          \"constantValues\",\n          Utils.getArrayReader([\"[]\", \"float32\", 4]),\n        ];\n\n        this.PackMapEnvDataWindV62 = [\n          \"azimuth\",\n          \"uint8\",\n          \"elevation\",\n          \"uint8\",\n          \"noise\",\n          \"uint8\",\n          \"speed\",\n          \"uint8\",\n          \"gust\",\n          \"uint8\",\n          \"gustFreq\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataLocalV62 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV62),\n          \"lightingCharGroups\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharGroupV33),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV62),\n          \"coloredLightRings\",\n          Utils.getRefArrayReader(this.PackMapEnvDataColoredLightRingsV33),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV62),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV62),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV62),\n          \"particleFieldCutouts\",\n          Utils.getArrayReader(this.PackMapEnvDataPFieldCutoutV33),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV62),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV62),\n          \"spawns\",\n          Utils.getPointerReader(this.PackMapEnvDataSpawnGroupsV33),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV62),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV62),\n          \"name\",\n          Utils.getString16Reader(),\n          \"nightMods\",\n          Utils.getArrayReader(\"uint8\"),\n          \"bindTarget\",\n          Utils.getQWordReader(),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"zRange\",\n          [\"[]\", \"float32\", 2],\n          \"fadeHorizInner\",\n          \"float32\",\n          \"fadeHorizOuter\",\n          \"float32\",\n          \"fadeVertical\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n          \"vertexArray\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n          \"guid\",\n          Utils.getQWordReader(),\n        ];\n\n        this.PackMapEnvDataSkyModeTexV62 = [\n          \"texPathNE\",\n          Utils.getFileNameReader(),\n          \"texPathSW\",\n          Utils.getFileNameReader(),\n          \"texPathT\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackMapEnvDataGlobalV62 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV62),\n          \"lightingCharGroups\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharGroupV33),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV62),\n          \"coloredLightRings\",\n          Utils.getRefArrayReader(this.PackMapEnvDataColoredLightRingsV33),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV62),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV62),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV62),\n          \"particleFieldCutouts\",\n          Utils.getArrayReader(this.PackMapEnvDataPFieldCutoutV33),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV62),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV62),\n          \"spawns\",\n          Utils.getPointerReader(this.PackMapEnvDataSpawnGroupsV33),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV62),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV62),\n          \"name\",\n          Utils.getString16Reader(),\n          \"nightMods\",\n          Utils.getArrayReader(\"uint8\"),\n          \"bindTarget\",\n          Utils.getQWordReader(),\n          \"skyModeTex\",\n          Utils.getArrayReader(this.PackMapEnvDataSkyModeTexV62),\n          \"starFile\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.__root = this.PackMapEnvironmentV62 = [\n          \"dataLocalArray\",\n          Utils.getArrayReader(this.PackMapEnvDataLocalV62),\n          \"dataGlobal\",\n          Utils.getPointerReader(this.PackMapEnvDataGlobalV62),\n        ];\n      },\n\n      // => Version: 61, ReferencedFunction: 0xEB8C30\n      61: function () {\n        this.PackMapEnvDataLightV61 = [\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"intensity\",\n          \"float32\",\n          \"direction\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.PackMapEnvDataLightingV61 = [\"lights\", Utils.getRefArrayReader(this.PackMapEnvDataLightV61)];\n\n        this.PackMapEnvDataLightingCharV32 = [\n          \"sunScale\",\n          \"float32\",\n          \"saturation\",\n          \"float32\",\n          \"sunFill\",\n          \"float32\",\n          \"ambScale\",\n          \"float32\",\n          \"ambFill\",\n          \"float32\",\n          \"flags\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataLightingCharGroupV32 = [\n          \"lightingChar\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharV32),\n        ];\n\n        this.PackMapEnvDataLayerAttributesV61 = [\n          \"brightness\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"haze\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"velocity\",\n          [\"[]\", \"float32\", 2],\n          \"fadeWidth\",\n          \"float32\",\n          \"fadeEnd\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataLayerV61 = [\n          \"altitude\",\n          \"float32\",\n          \"cutOut\",\n          \"float32\",\n          \"depth\",\n          \"float32\",\n          \"extent\",\n          \"float32\",\n          \"scale\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"attributes\",\n          Utils.getArrayReader(this.PackMapEnvDataLayerAttributesV61),\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataCloudsV61 = [\"layers\", Utils.getArrayReader(this.PackMapEnvDataLayerV61)];\n\n        this.PackMapEnvDataColoredLightRingsV32 = [\n          \"range\",\n          [\"[]\", \"float32\", 2],\n          \"distances\",\n          [\"[]\", \"float32\", 6],\n          \"lightColors\",\n          [\"[]\", [\"[]\", \"uint8\", 4], 6],\n          \"shadowColors\",\n          [\"[]\", [\"[]\", \"uint8\", 4], 6],\n        ];\n\n        this.PackMapEnvDataEffectV61 = [\n          \"glow\",\n          [\"[]\", \"uint8\", 4],\n          \"tintColor\",\n          [\"[]\", \"uint8\", 4],\n          \"tintTargetColor\",\n          [\"[]\", \"uint8\", 4],\n          \"saturation\",\n          \"float32\",\n          \"tintAmount\",\n          \"float32\",\n          \"tintFocus\",\n          \"float32\",\n          \"glowLevel\",\n          [\"[]\", \"uint8\", 4],\n          \"glowAmplify\",\n          \"float32\",\n          \"focalDepth\",\n          \"float32\",\n          \"focalRange\",\n          \"float32\",\n          \"flatteningRange\",\n          [\"[]\", \"float32\", 2],\n          \"flatteningCharacterRange\",\n          [\"[]\", \"float32\", 2],\n        ];\n\n        this.PackMapEnvDataHazeV61 = [\n          \"nearColor\",\n          [\"[]\", \"uint8\", 4],\n          \"farColor\",\n          [\"[]\", \"uint8\", 4],\n          \"distRange\",\n          [\"[]\", \"float32\", 2],\n          \"heightColor\",\n          [\"[]\", \"uint8\", 4],\n          \"heightRange\",\n          [\"[]\", \"float32\", 2],\n          \"depthCue\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataPFieldV61 = [\n          \"altitude\",\n          \"float32\",\n          \"angle\",\n          [\"[]\", \"float32\", 2],\n          \"clusterCount\",\n          \"uint16\",\n          \"clustering\",\n          [\"[]\", \"float32\", 2],\n          \"depth\",\n          \"float32\",\n          \"deviation\",\n          \"float32\",\n          \"deviationSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"extent\",\n          \"uint16\",\n          \"fade\",\n          \"float32\",\n          \"fieldDirection\",\n          [\"[]\", \"float32\", 3],\n          \"flags\",\n          \"uint16\",\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"opacity\",\n          [\"[]\", \"float32\", 2],\n          \"particleCount\",\n          \"uint16\",\n          \"period\",\n          [\"[]\", \"float32\", 2],\n          \"rotation\",\n          [\"[]\", \"float32\", 2],\n          \"scaleX\",\n          [\"[]\", \"float32\", 2],\n          \"scaleY\",\n          [\"[]\", \"float32\", 2],\n          \"seed\",\n          \"uint32\",\n          \"speed\",\n          [\"[]\", \"float32\", 2],\n          \"texColRow\",\n          [\"[]\", \"uint32\", 2],\n          \"texFPS\",\n          \"uint16\",\n          \"texPath\",\n          Utils.getFileNameReader(),\n          \"type\",\n          \"uint8\",\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataPFieldCutoutV32 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"x\",\n          [\"[]\", \"float32\", 4],\n          \"y\",\n          [\"[]\", \"float32\", 4],\n          \"z\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.PackMapEnvDataSkyV61 = [\n          \"flags\",\n          \"uint8\",\n          \"dayBrightness\",\n          \"float32\",\n          \"dayHazeBottom\",\n          \"float32\",\n          \"dayHazeDensity\",\n          \"float32\",\n          \"dayHazeFalloff\",\n          \"float32\",\n          \"dayLightIntensity\",\n          \"float32\",\n          \"dayStarDensity\",\n          \"float32\",\n          \"nightBrightness\",\n          \"float32\",\n          \"nightHazeBottom\",\n          \"float32\",\n          \"nightHazeDensity\",\n          \"float32\",\n          \"nightHazeFalloff\",\n          \"float32\",\n          \"nightLightIntensity\",\n          \"float32\",\n          \"nightStarDensity\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataSkyCardAttributesV61 = [\n          \"azimuth\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"hazeDensity\",\n          \"float32\",\n          \"latitude\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"minHaze\",\n          \"float32\",\n          \"scale\",\n          [\"[]\", \"float32\", 2],\n          \"speed\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"textureUV\",\n          [\"[]\", \"float32\", 4],\n          \"brightness\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataSkyCardV61 = [\n          \"day\",\n          this.PackMapEnvDataSkyCardAttributesV61,\n          \"night\",\n          this.PackMapEnvDataSkyCardAttributesV61,\n          \"flags\",\n          \"uint32\",\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataSkyCardsV61 = [\"cards\", Utils.getArrayReader(this.PackMapEnvDataSkyCardV61)];\n\n        this.PackMapEnvDataSpawnModelDataV32 = [\n          \"spawnRange\",\n          [\"[]\", \"uint32\", 2],\n          \"lifeSpan\",\n          [\"[]\", \"uint32\", 2],\n          \"scaleRange\",\n          [\"[]\", \"float32\", 2],\n          \"heightRange\",\n          [\"[]\", \"float32\", 2],\n          \"rotXRange\",\n          [\"[]\", \"float32\", 2],\n          \"rotYRange\",\n          [\"[]\", \"float32\", 2],\n          \"rotZRange\",\n          [\"[]\", \"float32\", 2],\n          \"probability\",\n          \"float32\",\n          \"delay\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"modelFile\",\n          Utils.getFileNameReader(),\n          \"maxConcurrent\",\n          \"uint16\",\n        ];\n\n        this.PackMapEnvDataSpawnListV32 = [\"spawns\", Utils.getArrayReader(this.PackMapEnvDataSpawnModelDataV32)];\n\n        this.PackMapEnvDataSpawnGroupsV32 = [\n          \"spawnGroups\",\n          Utils.getArrayReader(this.PackMapEnvDataSpawnListV32),\n          \"targets\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.PackMapEnvDataWaterV61 = [\n          \"waterFlags\",\n          \"uint32\",\n          \"animAmplitude\",\n          \"float32\",\n          \"animChoppiness\",\n          \"float32\",\n          \"animWind\",\n          [\"[]\", \"float32\", 2],\n          \"bumpAmount\",\n          \"float32\",\n          \"bumpAngle0\",\n          \"float32\",\n          \"bumpAngle1\",\n          \"float32\",\n          \"bumpScale0\",\n          \"float32\",\n          \"bumpScale1\",\n          \"float32\",\n          \"bumpSpeed0\",\n          \"float32\",\n          \"bumpSpeed1\",\n          \"float32\",\n          \"bumpTile0\",\n          \"float32\",\n          \"bumpTile1\",\n          \"float32\",\n          \"patternAngle\",\n          \"float32\",\n          \"patternTile\",\n          \"float32\",\n          \"patternSpeed\",\n          \"float32\",\n          \"patternEdge\",\n          \"float32\",\n          \"surfaceShallowColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceDeepColor\",\n          [\"[]\", \"uint8\", 4],\n          \"patternColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceFresnel\",\n          \"float32\",\n          \"distortAmount\",\n          \"float32\",\n          \"depthAttenuation\",\n          \"float32\",\n          \"materialFilename\",\n          Utils.getFileNameReader(),\n          \"textureFilenames\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"constantTokens\",\n          Utils.getArrayReader(\"uint32\"),\n          \"constantValues\",\n          Utils.getArrayReader([\"[]\", \"float32\", 4]),\n        ];\n\n        this.PackMapEnvDataWindV61 = [\n          \"azimuth\",\n          \"uint8\",\n          \"elevation\",\n          \"uint8\",\n          \"noise\",\n          \"uint8\",\n          \"speed\",\n          \"uint8\",\n          \"gust\",\n          \"uint8\",\n          \"gustFreq\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataLocalV61 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV61),\n          \"lightingCharGroups\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharGroupV32),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV61),\n          \"coloredLightRings\",\n          Utils.getRefArrayReader(this.PackMapEnvDataColoredLightRingsV32),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV61),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV61),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV61),\n          \"particleFieldCutouts\",\n          Utils.getArrayReader(this.PackMapEnvDataPFieldCutoutV32),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV61),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV61),\n          \"spawns\",\n          Utils.getPointerReader(this.PackMapEnvDataSpawnGroupsV32),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV61),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV61),\n          \"name\",\n          Utils.getString16Reader(),\n          \"nightMods\",\n          Utils.getArrayReader(\"uint8\"),\n          \"bindTarget\",\n          Utils.getQWordReader(),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"zRange\",\n          [\"[]\", \"float32\", 2],\n          \"fadeHorizInner\",\n          \"float32\",\n          \"fadeHorizOuter\",\n          \"float32\",\n          \"fadeVertical\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n          \"vertexArray\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n          \"guid\",\n          Utils.getQWordReader(),\n        ];\n\n        this.PackMapEnvDataSkyModeTexV61 = [\n          \"texPathNE\",\n          Utils.getFileNameReader(),\n          \"texPathSW\",\n          Utils.getFileNameReader(),\n          \"texPathT\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackMapEnvDataGlobalV61 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV61),\n          \"lightingCharGroups\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharGroupV32),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV61),\n          \"coloredLightRings\",\n          Utils.getRefArrayReader(this.PackMapEnvDataColoredLightRingsV32),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV61),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV61),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV61),\n          \"particleFieldCutouts\",\n          Utils.getArrayReader(this.PackMapEnvDataPFieldCutoutV32),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV61),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV61),\n          \"spawns\",\n          Utils.getPointerReader(this.PackMapEnvDataSpawnGroupsV32),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV61),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV61),\n          \"name\",\n          Utils.getString16Reader(),\n          \"nightMods\",\n          Utils.getArrayReader(\"uint8\"),\n          \"bindTarget\",\n          Utils.getQWordReader(),\n          \"skyModeTex\",\n          Utils.getArrayReader(this.PackMapEnvDataSkyModeTexV61),\n          \"starFile\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.__root = this.PackMapEnvironmentV61 = [\n          \"dataLocalArray\",\n          Utils.getArrayReader(this.PackMapEnvDataLocalV61),\n          \"dataGlobal\",\n          Utils.getPointerReader(this.PackMapEnvDataGlobalV61),\n        ];\n      },\n\n      // => Version: 60, ReferencedFunction: 0xEB8C00\n      60: function () {\n        this.PackMapEnvDataLightV60 = [\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"intensity\",\n          \"float32\",\n          \"direction\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.PackMapEnvDataLightingV60 = [\"lights\", Utils.getRefArrayReader(this.PackMapEnvDataLightV60)];\n\n        this.PackMapEnvDataLightingCharV31 = [\n          \"sunScale\",\n          \"float32\",\n          \"saturation\",\n          \"float32\",\n          \"sunFill\",\n          \"float32\",\n          \"ambScale\",\n          \"float32\",\n          \"ambFill\",\n          \"float32\",\n          \"flags\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataLightingCharGroupV31 = [\n          \"lightingChar\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharV31),\n        ];\n\n        this.PackMapEnvDataLayerAttributesV60 = [\n          \"brightness\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"haze\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"velocity\",\n          [\"[]\", \"float32\", 2],\n          \"fadeWidth\",\n          \"float32\",\n          \"fadeEnd\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataLayerV60 = [\n          \"altitude\",\n          \"float32\",\n          \"cutOut\",\n          \"float32\",\n          \"depth\",\n          \"float32\",\n          \"extent\",\n          \"float32\",\n          \"scale\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"attributes\",\n          Utils.getArrayReader(this.PackMapEnvDataLayerAttributesV60),\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataCloudsV60 = [\"layers\", Utils.getArrayReader(this.PackMapEnvDataLayerV60)];\n\n        this.PackMapEnvDataColoredLightRingsV31 = [\n          \"range\",\n          [\"[]\", \"float32\", 2],\n          \"distances\",\n          [\"[]\", \"float32\", 6],\n          \"lightColors\",\n          [\"[]\", [\"[]\", \"uint8\", 4], 6],\n          \"shadowColors\",\n          [\"[]\", [\"[]\", \"uint8\", 4], 6],\n        ];\n\n        this.PackMapEnvDataEffectV60 = [\n          \"glow\",\n          [\"[]\", \"uint8\", 4],\n          \"tintColor\",\n          [\"[]\", \"uint8\", 4],\n          \"tintTargetColor\",\n          [\"[]\", \"uint8\", 4],\n          \"saturation\",\n          \"float32\",\n          \"tintAmount\",\n          \"float32\",\n          \"tintFocus\",\n          \"float32\",\n          \"glowLevel\",\n          [\"[]\", \"uint8\", 4],\n          \"glowAmplify\",\n          \"float32\",\n          \"focalDepth\",\n          \"float32\",\n          \"focalRange\",\n          \"float32\",\n          \"flatteningRange\",\n          [\"[]\", \"float32\", 2],\n        ];\n\n        this.PackMapEnvDataHazeV60 = [\n          \"nearColor\",\n          [\"[]\", \"uint8\", 4],\n          \"farColor\",\n          [\"[]\", \"uint8\", 4],\n          \"distRange\",\n          [\"[]\", \"float32\", 2],\n          \"heightColor\",\n          [\"[]\", \"uint8\", 4],\n          \"heightRange\",\n          [\"[]\", \"float32\", 2],\n          \"depthCue\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataPFieldV60 = [\n          \"altitude\",\n          \"float32\",\n          \"angle\",\n          [\"[]\", \"float32\", 2],\n          \"clusterCount\",\n          \"uint16\",\n          \"clustering\",\n          [\"[]\", \"float32\", 2],\n          \"depth\",\n          \"float32\",\n          \"deviation\",\n          \"float32\",\n          \"deviationSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"extent\",\n          \"uint16\",\n          \"fade\",\n          \"float32\",\n          \"fieldDirection\",\n          [\"[]\", \"float32\", 3],\n          \"flags\",\n          \"uint16\",\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"opacity\",\n          [\"[]\", \"float32\", 2],\n          \"particleCount\",\n          \"uint16\",\n          \"period\",\n          [\"[]\", \"float32\", 2],\n          \"rotation\",\n          [\"[]\", \"float32\", 2],\n          \"scaleX\",\n          [\"[]\", \"float32\", 2],\n          \"scaleY\",\n          [\"[]\", \"float32\", 2],\n          \"seed\",\n          \"uint32\",\n          \"speed\",\n          [\"[]\", \"float32\", 2],\n          \"texColRow\",\n          [\"[]\", \"uint32\", 2],\n          \"texFPS\",\n          \"uint16\",\n          \"texPath\",\n          Utils.getFileNameReader(),\n          \"type\",\n          \"uint8\",\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataPFieldCutoutV31 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"x\",\n          [\"[]\", \"float32\", 4],\n          \"y\",\n          [\"[]\", \"float32\", 4],\n          \"z\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.PackMapEnvDataSkyV60 = [\n          \"flags\",\n          \"uint8\",\n          \"dayBrightness\",\n          \"float32\",\n          \"dayHazeBottom\",\n          \"float32\",\n          \"dayHazeDensity\",\n          \"float32\",\n          \"dayHazeFalloff\",\n          \"float32\",\n          \"dayLightIntensity\",\n          \"float32\",\n          \"dayStarDensity\",\n          \"float32\",\n          \"nightBrightness\",\n          \"float32\",\n          \"nightHazeBottom\",\n          \"float32\",\n          \"nightHazeDensity\",\n          \"float32\",\n          \"nightHazeFalloff\",\n          \"float32\",\n          \"nightLightIntensity\",\n          \"float32\",\n          \"nightStarDensity\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataSkyCardAttributesV60 = [\n          \"azimuth\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"hazeDensity\",\n          \"float32\",\n          \"latitude\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"minHaze\",\n          \"float32\",\n          \"scale\",\n          [\"[]\", \"float32\", 2],\n          \"speed\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"textureUV\",\n          [\"[]\", \"float32\", 4],\n          \"brightness\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataSkyCardV60 = [\n          \"day\",\n          this.PackMapEnvDataSkyCardAttributesV60,\n          \"night\",\n          this.PackMapEnvDataSkyCardAttributesV60,\n          \"flags\",\n          \"uint32\",\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataSkyCardsV60 = [\"cards\", Utils.getArrayReader(this.PackMapEnvDataSkyCardV60)];\n\n        this.PackMapEnvDataSpawnModelDataV31 = [\n          \"spawnRange\",\n          [\"[]\", \"uint32\", 2],\n          \"lifeSpan\",\n          [\"[]\", \"uint32\", 2],\n          \"scaleRange\",\n          [\"[]\", \"float32\", 2],\n          \"heightRange\",\n          [\"[]\", \"float32\", 2],\n          \"rotXRange\",\n          [\"[]\", \"float32\", 2],\n          \"rotYRange\",\n          [\"[]\", \"float32\", 2],\n          \"rotZRange\",\n          [\"[]\", \"float32\", 2],\n          \"probability\",\n          \"float32\",\n          \"delay\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"modelFile\",\n          Utils.getFileNameReader(),\n          \"maxConcurrent\",\n          \"uint16\",\n        ];\n\n        this.PackMapEnvDataSpawnListV31 = [\"spawns\", Utils.getArrayReader(this.PackMapEnvDataSpawnModelDataV31)];\n\n        this.PackMapEnvDataSpawnGroupsV31 = [\n          \"spawnGroups\",\n          Utils.getArrayReader(this.PackMapEnvDataSpawnListV31),\n          \"targets\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.PackMapEnvDataWaterV60 = [\n          \"waterFlags\",\n          \"uint32\",\n          \"animAmplitude\",\n          \"float32\",\n          \"animChoppiness\",\n          \"float32\",\n          \"animWind\",\n          [\"[]\", \"float32\", 2],\n          \"bumpAmount\",\n          \"float32\",\n          \"bumpAngle0\",\n          \"float32\",\n          \"bumpAngle1\",\n          \"float32\",\n          \"bumpScale0\",\n          \"float32\",\n          \"bumpScale1\",\n          \"float32\",\n          \"bumpSpeed0\",\n          \"float32\",\n          \"bumpSpeed1\",\n          \"float32\",\n          \"bumpTile0\",\n          \"float32\",\n          \"bumpTile1\",\n          \"float32\",\n          \"patternAngle\",\n          \"float32\",\n          \"patternTile\",\n          \"float32\",\n          \"patternSpeed\",\n          \"float32\",\n          \"patternEdge\",\n          \"float32\",\n          \"surfaceShallowColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceDeepColor\",\n          [\"[]\", \"uint8\", 4],\n          \"patternColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceFresnel\",\n          \"float32\",\n          \"distortAmount\",\n          \"float32\",\n          \"depthAttenuation\",\n          \"float32\",\n          \"materialFilename\",\n          Utils.getFileNameReader(),\n          \"textureFilenames\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"constantTokens\",\n          Utils.getArrayReader(\"uint32\"),\n          \"constantValues\",\n          Utils.getArrayReader([\"[]\", \"float32\", 4]),\n        ];\n\n        this.PackMapEnvDataWindV60 = [\n          \"azimuth\",\n          \"uint8\",\n          \"elevation\",\n          \"uint8\",\n          \"noise\",\n          \"uint8\",\n          \"speed\",\n          \"uint8\",\n          \"gust\",\n          \"uint8\",\n          \"gustFreq\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataLocalV60 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV60),\n          \"lightingCharGroups\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharGroupV31),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV60),\n          \"coloredLightRings\",\n          Utils.getRefArrayReader(this.PackMapEnvDataColoredLightRingsV31),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV60),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV60),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV60),\n          \"particleFieldCutouts\",\n          Utils.getArrayReader(this.PackMapEnvDataPFieldCutoutV31),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV60),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV60),\n          \"spawns\",\n          Utils.getPointerReader(this.PackMapEnvDataSpawnGroupsV31),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV60),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV60),\n          \"name\",\n          Utils.getString16Reader(),\n          \"nightMods\",\n          Utils.getArrayReader(\"uint8\"),\n          \"bindTarget\",\n          Utils.getQWordReader(),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"zRange\",\n          [\"[]\", \"float32\", 2],\n          \"fadeHorizInner\",\n          \"float32\",\n          \"fadeHorizOuter\",\n          \"float32\",\n          \"fadeVertical\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n          \"vertexArray\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n          \"guid\",\n          Utils.getQWordReader(),\n        ];\n\n        this.PackMapEnvDataSkyModeTexV60 = [\n          \"texPathNE\",\n          Utils.getFileNameReader(),\n          \"texPathSW\",\n          Utils.getFileNameReader(),\n          \"texPathT\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackMapEnvDataGlobalV60 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV60),\n          \"lightingCharGroups\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharGroupV31),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV60),\n          \"coloredLightRings\",\n          Utils.getRefArrayReader(this.PackMapEnvDataColoredLightRingsV31),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV60),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV60),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV60),\n          \"particleFieldCutouts\",\n          Utils.getArrayReader(this.PackMapEnvDataPFieldCutoutV31),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV60),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV60),\n          \"spawns\",\n          Utils.getPointerReader(this.PackMapEnvDataSpawnGroupsV31),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV60),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV60),\n          \"name\",\n          Utils.getString16Reader(),\n          \"nightMods\",\n          Utils.getArrayReader(\"uint8\"),\n          \"bindTarget\",\n          Utils.getQWordReader(),\n          \"skyModeTex\",\n          Utils.getArrayReader(this.PackMapEnvDataSkyModeTexV60),\n          \"starFile\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.__root = this.PackMapEnvironmentV60 = [\n          \"dataLocalArray\",\n          Utils.getArrayReader(this.PackMapEnvDataLocalV60),\n          \"dataGlobal\",\n          Utils.getPointerReader(this.PackMapEnvDataGlobalV60),\n        ];\n      },\n\n      // => Version: 59, ReferencedFunction: 0xEB8AF0\n      59: function () {\n        this.PackMapEnvDataLightV59 = [\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"intensity\",\n          \"float32\",\n          \"direction\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.PackMapEnvDataLightingV59 = [\"lights\", Utils.getRefArrayReader(this.PackMapEnvDataLightV59)];\n\n        this.PackMapEnvDataLightingCharV30 = [\n          \"sunScale\",\n          \"float32\",\n          \"saturation\",\n          \"float32\",\n          \"sunFill\",\n          \"float32\",\n          \"ambScale\",\n          \"float32\",\n          \"ambFill\",\n          \"float32\",\n          \"flags\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataLightingCharGroupV30 = [\n          \"lightingChar\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharV30),\n        ];\n\n        this.PackMapEnvDataLayerAttributesV59 = [\n          \"brightness\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"haze\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"velocity\",\n          [\"[]\", \"float32\", 2],\n          \"fadeWidth\",\n          \"float32\",\n          \"fadeEnd\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataLayerV59 = [\n          \"altitude\",\n          \"float32\",\n          \"cutOut\",\n          \"float32\",\n          \"depth\",\n          \"float32\",\n          \"extent\",\n          \"float32\",\n          \"scale\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"attributes\",\n          Utils.getArrayReader(this.PackMapEnvDataLayerAttributesV59),\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataCloudsV59 = [\"layers\", Utils.getArrayReader(this.PackMapEnvDataLayerV59)];\n\n        this.PackMapEnvDataColoredLightRingsV30 = [\n          \"range\",\n          [\"[]\", \"float32\", 2],\n          \"distances\",\n          [\"[]\", \"float32\", 6],\n          \"lightColors\",\n          [\"[]\", [\"[]\", \"uint8\", 4], 6],\n          \"shadowColors\",\n          [\"[]\", [\"[]\", \"uint8\", 4], 6],\n        ];\n\n        this.PackMapEnvDataEffectV59 = [\n          \"glow\",\n          [\"[]\", \"uint8\", 4],\n          \"tintColor\",\n          [\"[]\", \"uint8\", 4],\n          \"tintTargetColor\",\n          [\"[]\", \"uint8\", 4],\n          \"saturation\",\n          \"float32\",\n          \"tintAmount\",\n          \"float32\",\n          \"tintFocus\",\n          \"float32\",\n          \"glowLevel\",\n          [\"[]\", \"uint8\", 4],\n          \"glowAmplify\",\n          \"float32\",\n          \"focalDepth\",\n          \"float32\",\n          \"focalRange\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataHazeV59 = [\n          \"nearColor\",\n          [\"[]\", \"uint8\", 4],\n          \"farColor\",\n          [\"[]\", \"uint8\", 4],\n          \"distRange\",\n          [\"[]\", \"float32\", 2],\n          \"heightColor\",\n          [\"[]\", \"uint8\", 4],\n          \"heightRange\",\n          [\"[]\", \"float32\", 2],\n          \"depthCue\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataPFieldV59 = [\n          \"altitude\",\n          \"float32\",\n          \"angle\",\n          [\"[]\", \"float32\", 2],\n          \"clusterCount\",\n          \"uint16\",\n          \"clustering\",\n          [\"[]\", \"float32\", 2],\n          \"depth\",\n          \"float32\",\n          \"deviation\",\n          \"float32\",\n          \"deviationSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"extent\",\n          \"uint16\",\n          \"fade\",\n          \"float32\",\n          \"fieldDirection\",\n          [\"[]\", \"float32\", 3],\n          \"flags\",\n          \"uint16\",\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"opacity\",\n          [\"[]\", \"float32\", 2],\n          \"particleCount\",\n          \"uint16\",\n          \"period\",\n          [\"[]\", \"float32\", 2],\n          \"rotation\",\n          [\"[]\", \"float32\", 2],\n          \"scaleX\",\n          [\"[]\", \"float32\", 2],\n          \"scaleY\",\n          [\"[]\", \"float32\", 2],\n          \"seed\",\n          \"uint32\",\n          \"speed\",\n          [\"[]\", \"float32\", 2],\n          \"texColRow\",\n          [\"[]\", \"uint32\", 2],\n          \"texFPS\",\n          \"uint16\",\n          \"texPath\",\n          Utils.getFileNameReader(),\n          \"type\",\n          \"uint8\",\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataPFieldCutoutV30 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"x\",\n          [\"[]\", \"float32\", 4],\n          \"y\",\n          [\"[]\", \"float32\", 4],\n          \"z\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.PackMapEnvDataSkyV59 = [\n          \"flags\",\n          \"uint8\",\n          \"dayBrightness\",\n          \"float32\",\n          \"dayHazeBottom\",\n          \"float32\",\n          \"dayHazeDensity\",\n          \"float32\",\n          \"dayHazeFalloff\",\n          \"float32\",\n          \"dayLightIntensity\",\n          \"float32\",\n          \"dayStarDensity\",\n          \"float32\",\n          \"nightBrightness\",\n          \"float32\",\n          \"nightHazeBottom\",\n          \"float32\",\n          \"nightHazeDensity\",\n          \"float32\",\n          \"nightHazeFalloff\",\n          \"float32\",\n          \"nightLightIntensity\",\n          \"float32\",\n          \"nightStarDensity\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataSkyCardAttributesV59 = [\n          \"azimuth\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"hazeDensity\",\n          \"float32\",\n          \"latitude\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"minHaze\",\n          \"float32\",\n          \"scale\",\n          [\"[]\", \"float32\", 2],\n          \"speed\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"textureUV\",\n          [\"[]\", \"float32\", 4],\n          \"brightness\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataSkyCardV59 = [\n          \"day\",\n          this.PackMapEnvDataSkyCardAttributesV59,\n          \"night\",\n          this.PackMapEnvDataSkyCardAttributesV59,\n          \"flags\",\n          \"uint32\",\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataSkyCardsV59 = [\"cards\", Utils.getArrayReader(this.PackMapEnvDataSkyCardV59)];\n\n        this.PackMapEnvDataSpawnModelDataV30 = [\n          \"spawnRange\",\n          [\"[]\", \"uint32\", 2],\n          \"lifeSpan\",\n          [\"[]\", \"uint32\", 2],\n          \"scaleRange\",\n          [\"[]\", \"float32\", 2],\n          \"heightRange\",\n          [\"[]\", \"float32\", 2],\n          \"rotXRange\",\n          [\"[]\", \"float32\", 2],\n          \"rotYRange\",\n          [\"[]\", \"float32\", 2],\n          \"rotZRange\",\n          [\"[]\", \"float32\", 2],\n          \"probability\",\n          \"float32\",\n          \"delay\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"modelFile\",\n          Utils.getFileNameReader(),\n          \"maxConcurrent\",\n          \"uint16\",\n        ];\n\n        this.PackMapEnvDataSpawnListV30 = [\"spawns\", Utils.getArrayReader(this.PackMapEnvDataSpawnModelDataV30)];\n\n        this.PackMapEnvDataSpawnGroupsV30 = [\n          \"spawnGroups\",\n          Utils.getArrayReader(this.PackMapEnvDataSpawnListV30),\n          \"targets\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.PackMapEnvDataWaterV59 = [\n          \"waterFlags\",\n          \"uint32\",\n          \"animAmplitude\",\n          \"float32\",\n          \"animChoppiness\",\n          \"float32\",\n          \"animWind\",\n          [\"[]\", \"float32\", 2],\n          \"bumpAmount\",\n          \"float32\",\n          \"bumpAngle0\",\n          \"float32\",\n          \"bumpAngle1\",\n          \"float32\",\n          \"bumpScale0\",\n          \"float32\",\n          \"bumpScale1\",\n          \"float32\",\n          \"bumpSpeed0\",\n          \"float32\",\n          \"bumpSpeed1\",\n          \"float32\",\n          \"bumpTile0\",\n          \"float32\",\n          \"bumpTile1\",\n          \"float32\",\n          \"patternAngle\",\n          \"float32\",\n          \"patternTile\",\n          \"float32\",\n          \"patternSpeed\",\n          \"float32\",\n          \"patternEdge\",\n          \"float32\",\n          \"surfaceShallowColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceDeepColor\",\n          [\"[]\", \"uint8\", 4],\n          \"patternColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceFresnel\",\n          \"float32\",\n          \"distortAmount\",\n          \"float32\",\n          \"depthAttenuation\",\n          \"float32\",\n          \"materialFilename\",\n          Utils.getFileNameReader(),\n          \"textureFilenames\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"constantTokens\",\n          Utils.getArrayReader(\"uint32\"),\n          \"constantValues\",\n          Utils.getArrayReader([\"[]\", \"float32\", 4]),\n        ];\n\n        this.PackMapEnvDataWindV59 = [\n          \"azimuth\",\n          \"uint8\",\n          \"elevation\",\n          \"uint8\",\n          \"noise\",\n          \"uint8\",\n          \"speed\",\n          \"uint8\",\n          \"gust\",\n          \"uint8\",\n          \"gustFreq\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataLocalV59 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV59),\n          \"lightingCharGroups\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharGroupV30),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV59),\n          \"coloredLightRings\",\n          Utils.getRefArrayReader(this.PackMapEnvDataColoredLightRingsV30),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV59),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV59),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV59),\n          \"particleFieldCutouts\",\n          Utils.getArrayReader(this.PackMapEnvDataPFieldCutoutV30),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV59),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV59),\n          \"spawns\",\n          Utils.getPointerReader(this.PackMapEnvDataSpawnGroupsV30),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV59),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV59),\n          \"name\",\n          Utils.getString16Reader(),\n          \"nightMods\",\n          Utils.getArrayReader(\"uint8\"),\n          \"bindTarget\",\n          Utils.getQWordReader(),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"zRange\",\n          [\"[]\", \"float32\", 2],\n          \"fadeHorizInner\",\n          \"float32\",\n          \"fadeHorizOuter\",\n          \"float32\",\n          \"fadeVertical\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n          \"vertexArray\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n          \"guid\",\n          Utils.getQWordReader(),\n        ];\n\n        this.PackMapEnvDataSkyModeTexV59 = [\n          \"texPathNE\",\n          Utils.getFileNameReader(),\n          \"texPathSW\",\n          Utils.getFileNameReader(),\n          \"texPathT\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackMapEnvDataGlobalV59 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV59),\n          \"lightingCharGroups\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharGroupV30),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV59),\n          \"coloredLightRings\",\n          Utils.getRefArrayReader(this.PackMapEnvDataColoredLightRingsV30),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV59),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV59),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV59),\n          \"particleFieldCutouts\",\n          Utils.getArrayReader(this.PackMapEnvDataPFieldCutoutV30),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV59),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV59),\n          \"spawns\",\n          Utils.getPointerReader(this.PackMapEnvDataSpawnGroupsV30),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV59),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV59),\n          \"name\",\n          Utils.getString16Reader(),\n          \"nightMods\",\n          Utils.getArrayReader(\"uint8\"),\n          \"bindTarget\",\n          Utils.getQWordReader(),\n          \"skyModeTex\",\n          Utils.getArrayReader(this.PackMapEnvDataSkyModeTexV59),\n          \"starFile\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.__root = this.PackMapEnvironmentV59 = [\n          \"dataLocalArray\",\n          Utils.getArrayReader(this.PackMapEnvDataLocalV59),\n          \"dataGlobal\",\n          Utils.getPointerReader(this.PackMapEnvDataGlobalV59),\n        ];\n      },\n\n      // => Version: 58, ReferencedFunction: 0xEB89E0\n      58: function () {\n        this.PackMapEnvDataLightV58 = [\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"intensity\",\n          \"float32\",\n          \"direction\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.PackMapEnvDataLightingV58 = [\"lights\", Utils.getRefArrayReader(this.PackMapEnvDataLightV58)];\n\n        this.PackMapEnvDataLightingCharV29 = [\n          \"sunScale\",\n          \"float32\",\n          \"saturation\",\n          \"float32\",\n          \"sunFill\",\n          \"float32\",\n          \"ambScale\",\n          \"float32\",\n          \"ambFill\",\n          \"float32\",\n          \"flags\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataLightingCharGroupV29 = [\n          \"lightingChar\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharV29),\n        ];\n\n        this.PackMapEnvDataLayerAttributesV58 = [\n          \"brightness\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"haze\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"velocity\",\n          [\"[]\", \"float32\", 2],\n          \"fadeWidth\",\n          \"float32\",\n          \"fadeEnd\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataLayerV58 = [\n          \"altitude\",\n          \"float32\",\n          \"cutOut\",\n          \"float32\",\n          \"depth\",\n          \"float32\",\n          \"extent\",\n          \"float32\",\n          \"scale\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"attributes\",\n          Utils.getArrayReader(this.PackMapEnvDataLayerAttributesV58),\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataCloudsV58 = [\"layers\", Utils.getArrayReader(this.PackMapEnvDataLayerV58)];\n\n        this.PackMapEnvDataColoredLightRingsV29 = [\n          \"range\",\n          [\"[]\", \"float32\", 2],\n          \"distances\",\n          [\"[]\", \"float32\", 6],\n          \"lightColors\",\n          [\"[]\", [\"[]\", \"uint8\", 4], 6],\n          \"shadowColors\",\n          [\"[]\", [\"[]\", \"uint8\", 4], 6],\n        ];\n\n        this.PackMapEnvDataEffectV58 = [\n          \"glow\",\n          [\"[]\", \"uint8\", 4],\n          \"tintColor\",\n          [\"[]\", \"uint8\", 4],\n          \"tintTargetColor\",\n          [\"[]\", \"uint8\", 4],\n          \"saturation\",\n          \"float32\",\n          \"tintAmount\",\n          \"float32\",\n          \"tintFocus\",\n          \"float32\",\n          \"glowLevel\",\n          [\"[]\", \"uint8\", 4],\n          \"glowAmplify\",\n          \"float32\",\n          \"focalDepth\",\n          \"float32\",\n          \"focalRange\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataHazeV58 = [\n          \"nearColor\",\n          [\"[]\", \"uint8\", 4],\n          \"farColor\",\n          [\"[]\", \"uint8\", 4],\n          \"distRange\",\n          [\"[]\", \"float32\", 2],\n          \"heightColor\",\n          [\"[]\", \"uint8\", 4],\n          \"heightRange\",\n          [\"[]\", \"float32\", 2],\n          \"depthCue\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataPFieldV58 = [\n          \"altitude\",\n          \"float32\",\n          \"angle\",\n          [\"[]\", \"float32\", 2],\n          \"clusterCount\",\n          \"uint16\",\n          \"clustering\",\n          [\"[]\", \"float32\", 2],\n          \"depth\",\n          \"float32\",\n          \"deviation\",\n          \"float32\",\n          \"deviationSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"extent\",\n          \"uint16\",\n          \"fade\",\n          \"float32\",\n          \"fieldDirection\",\n          [\"[]\", \"float32\", 3],\n          \"flags\",\n          \"uint16\",\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"opacity\",\n          [\"[]\", \"float32\", 2],\n          \"particleCount\",\n          \"uint16\",\n          \"period\",\n          [\"[]\", \"float32\", 2],\n          \"rotation\",\n          [\"[]\", \"float32\", 2],\n          \"scaleX\",\n          [\"[]\", \"float32\", 2],\n          \"scaleY\",\n          [\"[]\", \"float32\", 2],\n          \"seed\",\n          \"uint32\",\n          \"speed\",\n          [\"[]\", \"float32\", 2],\n          \"texColRow\",\n          [\"[]\", \"uint32\", 2],\n          \"texFPS\",\n          \"uint16\",\n          \"texPath\",\n          Utils.getFileNameReader(),\n          \"type\",\n          \"uint8\",\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataPFieldCutoutV29 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"x\",\n          [\"[]\", \"float32\", 4],\n          \"y\",\n          [\"[]\", \"float32\", 4],\n          \"z\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.PackMapEnvDataSkyV58 = [\n          \"flags\",\n          \"uint8\",\n          \"dayBrightness\",\n          \"float32\",\n          \"dayHazeBottom\",\n          \"float32\",\n          \"dayHazeDensity\",\n          \"float32\",\n          \"dayHazeFalloff\",\n          \"float32\",\n          \"dayLightIntensity\",\n          \"float32\",\n          \"dayStarDensity\",\n          \"float32\",\n          \"nightBrightness\",\n          \"float32\",\n          \"nightHazeBottom\",\n          \"float32\",\n          \"nightHazeDensity\",\n          \"float32\",\n          \"nightHazeFalloff\",\n          \"float32\",\n          \"nightLightIntensity\",\n          \"float32\",\n          \"nightStarDensity\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataSkyCardAttributesV58 = [\n          \"azimuth\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"hazeDensity\",\n          \"float32\",\n          \"latitude\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"minHaze\",\n          \"float32\",\n          \"scale\",\n          [\"[]\", \"float32\", 2],\n          \"speed\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"textureUV\",\n          [\"[]\", \"float32\", 4],\n          \"brightness\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataSkyCardV58 = [\n          \"day\",\n          this.PackMapEnvDataSkyCardAttributesV58,\n          \"night\",\n          this.PackMapEnvDataSkyCardAttributesV58,\n          \"flags\",\n          \"uint32\",\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataSkyCardsV58 = [\"cards\", Utils.getArrayReader(this.PackMapEnvDataSkyCardV58)];\n\n        this.PackMapEnvDataSpawnModelDataV29 = [\n          \"spawnRange\",\n          [\"[]\", \"uint32\", 2],\n          \"lifeSpan\",\n          [\"[]\", \"uint32\", 2],\n          \"scaleRange\",\n          [\"[]\", \"float32\", 2],\n          \"heightRange\",\n          [\"[]\", \"float32\", 2],\n          \"rotXRange\",\n          [\"[]\", \"float32\", 2],\n          \"rotYRange\",\n          [\"[]\", \"float32\", 2],\n          \"rotZRange\",\n          [\"[]\", \"float32\", 2],\n          \"probability\",\n          \"float32\",\n          \"delay\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"modelFile\",\n          Utils.getString16Reader(),\n          \"maxConcurrent\",\n          \"uint16\",\n        ];\n\n        this.PackMapEnvDataSpawnListV29 = [\"spawns\", Utils.getArrayReader(this.PackMapEnvDataSpawnModelDataV29)];\n\n        this.PackMapEnvDataSpawnGroupsV29 = [\n          \"spawnGroups\",\n          Utils.getArrayReader(this.PackMapEnvDataSpawnListV29),\n          \"targets\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.PackMapEnvDataWaterV58 = [\n          \"waterFlags\",\n          \"uint32\",\n          \"animAmplitude\",\n          \"float32\",\n          \"animChoppiness\",\n          \"float32\",\n          \"animWind\",\n          [\"[]\", \"float32\", 2],\n          \"bumpAmount\",\n          \"float32\",\n          \"bumpAngle0\",\n          \"float32\",\n          \"bumpAngle1\",\n          \"float32\",\n          \"bumpScale0\",\n          \"float32\",\n          \"bumpScale1\",\n          \"float32\",\n          \"bumpSpeed0\",\n          \"float32\",\n          \"bumpSpeed1\",\n          \"float32\",\n          \"bumpTile0\",\n          \"float32\",\n          \"bumpTile1\",\n          \"float32\",\n          \"patternAngle\",\n          \"float32\",\n          \"patternTile\",\n          \"float32\",\n          \"patternSpeed\",\n          \"float32\",\n          \"patternEdge\",\n          \"float32\",\n          \"surfaceShallowColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceDeepColor\",\n          [\"[]\", \"uint8\", 4],\n          \"patternColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceFresnel\",\n          \"float32\",\n          \"distortAmount\",\n          \"float32\",\n          \"depthAttenuation\",\n          \"float32\",\n          \"materialFilename\",\n          Utils.getFileNameReader(),\n          \"textureFilenames\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"constantTokens\",\n          Utils.getArrayReader(\"uint32\"),\n          \"constantValues\",\n          Utils.getArrayReader([\"[]\", \"float32\", 4]),\n        ];\n\n        this.PackMapEnvDataWindV58 = [\n          \"azimuth\",\n          \"uint8\",\n          \"elevation\",\n          \"uint8\",\n          \"noise\",\n          \"uint8\",\n          \"speed\",\n          \"uint8\",\n          \"gust\",\n          \"uint8\",\n          \"gustFreq\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataLocalV58 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV58),\n          \"lightingCharGroups\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharGroupV29),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV58),\n          \"coloredLightRings\",\n          Utils.getRefArrayReader(this.PackMapEnvDataColoredLightRingsV29),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV58),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV58),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV58),\n          \"particleFieldCutouts\",\n          Utils.getArrayReader(this.PackMapEnvDataPFieldCutoutV29),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV58),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV58),\n          \"spawns\",\n          Utils.getPointerReader(this.PackMapEnvDataSpawnGroupsV29),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV58),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV58),\n          \"name\",\n          Utils.getString16Reader(),\n          \"nightMods\",\n          Utils.getArrayReader(\"uint8\"),\n          \"bindTarget\",\n          Utils.getQWordReader(),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"zRange\",\n          [\"[]\", \"float32\", 2],\n          \"fadeHorizInner\",\n          \"float32\",\n          \"fadeHorizOuter\",\n          \"float32\",\n          \"fadeVertical\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n          \"vertexArray\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n          \"guid\",\n          Utils.getQWordReader(),\n        ];\n\n        this.PackMapEnvDataSkyModeTexV58 = [\n          \"texPathNE\",\n          Utils.getFileNameReader(),\n          \"texPathSW\",\n          Utils.getFileNameReader(),\n          \"texPathT\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackMapEnvDataGlobalV58 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV58),\n          \"lightingCharGroups\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharGroupV29),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV58),\n          \"coloredLightRings\",\n          Utils.getRefArrayReader(this.PackMapEnvDataColoredLightRingsV29),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV58),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV58),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV58),\n          \"particleFieldCutouts\",\n          Utils.getArrayReader(this.PackMapEnvDataPFieldCutoutV29),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV58),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV58),\n          \"spawns\",\n          Utils.getPointerReader(this.PackMapEnvDataSpawnGroupsV29),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV58),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV58),\n          \"name\",\n          Utils.getString16Reader(),\n          \"nightMods\",\n          Utils.getArrayReader(\"uint8\"),\n          \"bindTarget\",\n          Utils.getQWordReader(),\n          \"skyModeTex\",\n          Utils.getArrayReader(this.PackMapEnvDataSkyModeTexV58),\n          \"starFile\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.__root = this.PackMapEnvironmentV58 = [\n          \"dataLocalArray\",\n          Utils.getArrayReader(this.PackMapEnvDataLocalV58),\n          \"dataGlobal\",\n          Utils.getPointerReader(this.PackMapEnvDataGlobalV58),\n        ];\n      },\n\n      // => Version: 57\n      57: function () {\n        this.PackMapEnvDataLightV57 = [\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"intensity\",\n          \"float32\",\n          \"direction\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.PackMapEnvDataLightingV57 = [\"lights\", Utils.getRefArrayReader(this.PackMapEnvDataLightV57)];\n\n        this.PackMapEnvDataLightingCharV28 = [\n          \"sunScale\",\n          \"float32\",\n          \"saturation\",\n          \"float32\",\n          \"sunFill\",\n          \"float32\",\n          \"ambScale\",\n          \"float32\",\n          \"ambFill\",\n          \"float32\",\n          \"flags\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataLightingCharGroupV28 = [\n          \"lightingChar\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharV28),\n        ];\n\n        this.PackMapEnvDataLayerAttributesV57 = [\n          \"brightness\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"haze\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"velocity\",\n          [\"[]\", \"float32\", 2],\n          \"fadeWidth\",\n          \"float32\",\n          \"fadeEnd\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataLayerV57 = [\n          \"altitude\",\n          \"float32\",\n          \"cutOut\",\n          \"float32\",\n          \"depth\",\n          \"float32\",\n          \"extent\",\n          \"float32\",\n          \"scale\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"attributes\",\n          Utils.getArrayReader(this.PackMapEnvDataLayerAttributesV57),\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataCloudsV57 = [\"layers\", Utils.getArrayReader(this.PackMapEnvDataLayerV57)];\n\n        this.PackMapEnvDataColoredLightRingsV28 = [\n          \"range\",\n          [\"[]\", \"float32\", 2],\n          \"distances\",\n          [\"[]\", \"float32\", 6],\n          \"lightColors\",\n          [\"[]\", [\"[]\", \"uint8\", 4], 6],\n          \"shadowColors\",\n          [\"[]\", [\"[]\", \"uint8\", 4], 6],\n        ];\n\n        this.PackMapEnvDataEffectV57 = [\n          \"glow\",\n          [\"[]\", \"uint8\", 4],\n          \"tintColor\",\n          [\"[]\", \"uint8\", 4],\n          \"tintTargetColor\",\n          [\"[]\", \"uint8\", 4],\n          \"saturation\",\n          \"float32\",\n          \"tintAmount\",\n          \"float32\",\n          \"tintFocus\",\n          \"float32\",\n          \"glowLevel\",\n          [\"[]\", \"uint8\", 4],\n          \"glowAmplify\",\n          \"float32\",\n          \"focalDepth\",\n          \"float32\",\n          \"focalRange\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataHazeV57 = [\n          \"distColor\",\n          [\"[]\", \"uint8\", 4],\n          \"distRange\",\n          [\"[]\", \"float32\", 2],\n          \"heightColor\",\n          [\"[]\", \"uint8\", 4],\n          \"heightRange\",\n          [\"[]\", \"float32\", 2],\n          \"depthCue\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataPFieldV57 = [\n          \"altitude\",\n          \"float32\",\n          \"angle\",\n          [\"[]\", \"float32\", 2],\n          \"clusterCount\",\n          \"uint16\",\n          \"clustering\",\n          [\"[]\", \"float32\", 2],\n          \"depth\",\n          \"float32\",\n          \"deviation\",\n          \"float32\",\n          \"deviationSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"extent\",\n          \"uint16\",\n          \"fade\",\n          \"float32\",\n          \"fieldDirection\",\n          [\"[]\", \"float32\", 3],\n          \"flags\",\n          \"uint16\",\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"opacity\",\n          [\"[]\", \"float32\", 2],\n          \"particleCount\",\n          \"uint16\",\n          \"period\",\n          [\"[]\", \"float32\", 2],\n          \"rotation\",\n          [\"[]\", \"float32\", 2],\n          \"scaleX\",\n          [\"[]\", \"float32\", 2],\n          \"scaleY\",\n          [\"[]\", \"float32\", 2],\n          \"seed\",\n          \"uint32\",\n          \"speed\",\n          [\"[]\", \"float32\", 2],\n          \"texColRow\",\n          [\"[]\", \"uint32\", 2],\n          \"texFPS\",\n          \"uint16\",\n          \"texPath\",\n          Utils.getFileNameReader(),\n          \"type\",\n          \"uint8\",\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataPFieldCutoutV28 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"x\",\n          [\"[]\", \"float32\", 4],\n          \"y\",\n          [\"[]\", \"float32\", 4],\n          \"z\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.PackMapEnvDataSkyV57 = [\n          \"flags\",\n          \"uint8\",\n          \"dayBrightness\",\n          \"float32\",\n          \"dayHazeBottom\",\n          \"float32\",\n          \"dayHazeDensity\",\n          \"float32\",\n          \"dayHazeFalloff\",\n          \"float32\",\n          \"dayLightIntensity\",\n          \"float32\",\n          \"dayStarDensity\",\n          \"float32\",\n          \"nightBrightness\",\n          \"float32\",\n          \"nightHazeBottom\",\n          \"float32\",\n          \"nightHazeDensity\",\n          \"float32\",\n          \"nightHazeFalloff\",\n          \"float32\",\n          \"nightLightIntensity\",\n          \"float32\",\n          \"nightStarDensity\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataSkyCardAttributesV57 = [\n          \"azimuth\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"hazeDensity\",\n          \"float32\",\n          \"latitude\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"minHaze\",\n          \"float32\",\n          \"scale\",\n          [\"[]\", \"float32\", 2],\n          \"speed\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"textureUV\",\n          [\"[]\", \"float32\", 4],\n          \"brightness\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataSkyCardV57 = [\n          \"day\",\n          this.PackMapEnvDataSkyCardAttributesV57,\n          \"night\",\n          this.PackMapEnvDataSkyCardAttributesV57,\n          \"flags\",\n          \"uint32\",\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataSkyCardsV57 = [\"cards\", Utils.getArrayReader(this.PackMapEnvDataSkyCardV57)];\n\n        this.PackMapEnvDataSpawnModelDataV28 = [\n          \"spawnRange\",\n          [\"[]\", \"uint32\", 2],\n          \"lifeSpan\",\n          [\"[]\", \"uint32\", 2],\n          \"scaleRange\",\n          [\"[]\", \"float32\", 2],\n          \"heightRange\",\n          [\"[]\", \"float32\", 2],\n          \"rotXRange\",\n          [\"[]\", \"float32\", 2],\n          \"rotYRange\",\n          [\"[]\", \"float32\", 2],\n          \"rotZRange\",\n          [\"[]\", \"float32\", 2],\n          \"probability\",\n          \"float32\",\n          \"delay\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"modelFile\",\n          Utils.getString16Reader(),\n          \"maxConcurrent\",\n          \"uint16\",\n        ];\n\n        this.PackMapEnvDataSpawnListV28 = [\"spawns\", Utils.getArrayReader(this.PackMapEnvDataSpawnModelDataV28)];\n\n        this.PackMapEnvDataSpawnGroupsV28 = [\n          \"spawnGroups\",\n          Utils.getArrayReader(this.PackMapEnvDataSpawnListV28),\n          \"targetVolume\",\n          Utils.getQWordReader(),\n        ];\n\n        this.PackMapEnvDataWaterV57 = [\n          \"waterFlags\",\n          \"uint32\",\n          \"animAmplitude\",\n          \"float32\",\n          \"animChoppiness\",\n          \"float32\",\n          \"animWind\",\n          [\"[]\", \"float32\", 2],\n          \"bumpAmount\",\n          \"float32\",\n          \"bumpAngle0\",\n          \"float32\",\n          \"bumpAngle1\",\n          \"float32\",\n          \"bumpScale0\",\n          \"float32\",\n          \"bumpScale1\",\n          \"float32\",\n          \"bumpSpeed0\",\n          \"float32\",\n          \"bumpSpeed1\",\n          \"float32\",\n          \"bumpTile0\",\n          \"float32\",\n          \"bumpTile1\",\n          \"float32\",\n          \"patternAngle\",\n          \"float32\",\n          \"patternTile\",\n          \"float32\",\n          \"patternSpeed\",\n          \"float32\",\n          \"patternEdge\",\n          \"float32\",\n          \"surfaceShallowColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceDeepColor\",\n          [\"[]\", \"uint8\", 4],\n          \"patternColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceFresnel\",\n          \"float32\",\n          \"distortAmount\",\n          \"float32\",\n          \"depthAttenuation\",\n          \"float32\",\n          \"materialFilename\",\n          Utils.getFileNameReader(),\n          \"textureFilenames\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"constantTokens\",\n          Utils.getArrayReader(\"uint32\"),\n          \"constantValues\",\n          Utils.getArrayReader([\"[]\", \"float32\", 4]),\n        ];\n\n        this.PackMapEnvDataWindV57 = [\n          \"azimuth\",\n          \"uint8\",\n          \"elevation\",\n          \"uint8\",\n          \"noise\",\n          \"uint8\",\n          \"speed\",\n          \"uint8\",\n          \"gust\",\n          \"uint8\",\n          \"gustFreq\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataLocalV57 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV57),\n          \"lightingCharGroups\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharGroupV28),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV57),\n          \"coloredLightRings\",\n          Utils.getRefArrayReader(this.PackMapEnvDataColoredLightRingsV28),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV57),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV57),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV57),\n          \"particleFieldCutouts\",\n          Utils.getArrayReader(this.PackMapEnvDataPFieldCutoutV28),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV57),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV57),\n          \"spawns\",\n          Utils.getPointerReader(this.PackMapEnvDataSpawnGroupsV28),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV57),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV57),\n          \"name\",\n          Utils.getString16Reader(),\n          \"nightMods\",\n          Utils.getArrayReader(\"uint8\"),\n          \"bindTarget\",\n          Utils.getQWordReader(),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"zRange\",\n          [\"[]\", \"float32\", 2],\n          \"fadeHorizInner\",\n          \"float32\",\n          \"fadeHorizOuter\",\n          \"float32\",\n          \"fadeVertical\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n          \"vertexArray\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n          \"guid\",\n          Utils.getQWordReader(),\n        ];\n\n        this.PackMapEnvDataSkyModeTexV57 = [\n          \"texPathNE\",\n          Utils.getFileNameReader(),\n          \"texPathSW\",\n          Utils.getFileNameReader(),\n          \"texPathT\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackMapEnvDataGlobalV57 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV57),\n          \"lightingCharGroups\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharGroupV28),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV57),\n          \"coloredLightRings\",\n          Utils.getRefArrayReader(this.PackMapEnvDataColoredLightRingsV28),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV57),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV57),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV57),\n          \"particleFieldCutouts\",\n          Utils.getArrayReader(this.PackMapEnvDataPFieldCutoutV28),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV57),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV57),\n          \"spawns\",\n          Utils.getPointerReader(this.PackMapEnvDataSpawnGroupsV28),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV57),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV57),\n          \"name\",\n          Utils.getString16Reader(),\n          \"nightMods\",\n          Utils.getArrayReader(\"uint8\"),\n          \"bindTarget\",\n          Utils.getQWordReader(),\n          \"skyModeTex\",\n          Utils.getArrayReader(this.PackMapEnvDataSkyModeTexV57),\n          \"starFile\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.__root = this.PackMapEnvironmentV57 = [\n          \"dataLocalArray\",\n          Utils.getArrayReader(this.PackMapEnvDataLocalV57),\n          \"dataGlobal\",\n          Utils.getPointerReader(this.PackMapEnvDataGlobalV57),\n        ];\n      },\n\n      // => Version: 56, ReferencedFunction: 0xEB88D0\n      56: function () {\n        this.PackMapEnvDataLightV56 = [\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"intensity\",\n          \"float32\",\n          \"direction\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.PackMapEnvDataLightingV56 = [\"lights\", Utils.getRefArrayReader(this.PackMapEnvDataLightV56)];\n\n        this.PackMapEnvDataLightingCharV27 = [\n          \"sunScale\",\n          \"float32\",\n          \"saturation\",\n          \"float32\",\n          \"sunFill\",\n          \"float32\",\n          \"ambScale\",\n          \"float32\",\n          \"ambFill\",\n          \"float32\",\n          \"flags\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataLightingCharGroupV27 = [\n          \"lightingChar\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharV27),\n        ];\n\n        this.PackMapEnvDataLayerAttributesV56 = [\n          \"brightness\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"haze\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"velocity\",\n          [\"[]\", \"float32\", 2],\n          \"fadeWidth\",\n          \"float32\",\n          \"fadeEnd\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataLayerV56 = [\n          \"altitude\",\n          \"float32\",\n          \"cutOut\",\n          \"float32\",\n          \"depth\",\n          \"float32\",\n          \"extent\",\n          \"float32\",\n          \"scale\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"attributes\",\n          Utils.getArrayReader(this.PackMapEnvDataLayerAttributesV56),\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataCloudsV56 = [\"layers\", Utils.getArrayReader(this.PackMapEnvDataLayerV56)];\n\n        this.PackMapEnvDataColoredLightRingsV27 = [\n          \"range\",\n          [\"[]\", \"float32\", 2],\n          \"distances\",\n          [\"[]\", \"float32\", 6],\n          \"lightColors\",\n          [\"[]\", [\"[]\", \"uint8\", 4], 6],\n          \"shadowColors\",\n          [\"[]\", [\"[]\", \"uint8\", 4], 6],\n        ];\n\n        this.PackMapEnvDataEffectV56 = [\n          \"glow\",\n          [\"[]\", \"uint8\", 4],\n          \"tintColor\",\n          [\"[]\", \"uint8\", 4],\n          \"tintTargetColor\",\n          [\"[]\", \"uint8\", 4],\n          \"saturation\",\n          \"float32\",\n          \"tintAmount\",\n          \"float32\",\n          \"tintFocus\",\n          \"float32\",\n          \"glowLevel\",\n          [\"[]\", \"uint8\", 4],\n          \"glowAmplify\",\n          \"float32\",\n          \"focalDepth\",\n          \"float32\",\n          \"focalRange\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataHazeV56 = [\n          \"distColor\",\n          [\"[]\", \"uint8\", 4],\n          \"distRange\",\n          [\"[]\", \"float32\", 2],\n          \"heightColor\",\n          [\"[]\", \"uint8\", 4],\n          \"heightRange\",\n          [\"[]\", \"float32\", 2],\n          \"depthCue\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataPFieldV56 = [\n          \"altitude\",\n          \"float32\",\n          \"angle\",\n          [\"[]\", \"float32\", 2],\n          \"clusterCount\",\n          \"uint16\",\n          \"clustering\",\n          [\"[]\", \"float32\", 2],\n          \"depth\",\n          \"float32\",\n          \"deviation\",\n          \"float32\",\n          \"deviationSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"extent\",\n          \"uint16\",\n          \"fade\",\n          \"float32\",\n          \"fieldDirection\",\n          [\"[]\", \"float32\", 3],\n          \"flags\",\n          \"uint16\",\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"opacity\",\n          [\"[]\", \"float32\", 2],\n          \"particleCount\",\n          \"uint16\",\n          \"period\",\n          [\"[]\", \"float32\", 2],\n          \"rotation\",\n          [\"[]\", \"float32\", 2],\n          \"scaleX\",\n          [\"[]\", \"float32\", 2],\n          \"scaleY\",\n          [\"[]\", \"float32\", 2],\n          \"seed\",\n          \"uint32\",\n          \"speed\",\n          [\"[]\", \"float32\", 2],\n          \"texColRow\",\n          [\"[]\", \"uint32\", 2],\n          \"texFPS\",\n          \"uint16\",\n          \"texPath\",\n          Utils.getFileNameReader(),\n          \"type\",\n          \"uint8\",\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataPFieldCutoutV27 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"x\",\n          [\"[]\", \"float32\", 4],\n          \"y\",\n          [\"[]\", \"float32\", 4],\n          \"z\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.PackMapEnvDataSkyV56 = [\n          \"flags\",\n          \"uint8\",\n          \"dayBrightness\",\n          \"float32\",\n          \"dayHazeBottom\",\n          \"float32\",\n          \"dayHazeDensity\",\n          \"float32\",\n          \"dayHazeFalloff\",\n          \"float32\",\n          \"dayLightIntensity\",\n          \"float32\",\n          \"dayStarDensity\",\n          \"float32\",\n          \"nightBrightness\",\n          \"float32\",\n          \"nightHazeBottom\",\n          \"float32\",\n          \"nightHazeDensity\",\n          \"float32\",\n          \"nightHazeFalloff\",\n          \"float32\",\n          \"nightLightIntensity\",\n          \"float32\",\n          \"nightStarDensity\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataSkyCardAttributesV56 = [\n          \"azimuth\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"hazeDensity\",\n          \"float32\",\n          \"latitude\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"minHaze\",\n          \"float32\",\n          \"scale\",\n          [\"[]\", \"float32\", 2],\n          \"speed\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"textureUV\",\n          [\"[]\", \"float32\", 4],\n          \"brightness\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataSkyCardV56 = [\n          \"day\",\n          this.PackMapEnvDataSkyCardAttributesV56,\n          \"night\",\n          this.PackMapEnvDataSkyCardAttributesV56,\n          \"flags\",\n          \"uint32\",\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataSkyCardsV56 = [\"cards\", Utils.getArrayReader(this.PackMapEnvDataSkyCardV56)];\n\n        this.PackMapEnvDataSpawnModelDataV27 = [\n          \"spawnRange\",\n          [\"[]\", \"uint32\", 2],\n          \"lifeSpan\",\n          [\"[]\", \"uint32\", 2],\n          \"scaleRange\",\n          [\"[]\", \"float32\", 2],\n          \"rotXRange\",\n          [\"[]\", \"float32\", 2],\n          \"rotYRange\",\n          [\"[]\", \"float32\", 2],\n          \"rotZRange\",\n          [\"[]\", \"float32\", 2],\n          \"probability\",\n          \"float32\",\n          \"delay\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"modelFile\",\n          Utils.getString16Reader(),\n          \"maxConcurrent\",\n          \"uint16\",\n        ];\n\n        this.PackMapEnvDataSpawnListV27 = [\"spawns\", Utils.getArrayReader(this.PackMapEnvDataSpawnModelDataV27)];\n\n        this.PackMapEnvDataSpawnGroupsV27 = [\n          \"spawnGroups\",\n          Utils.getArrayReader(this.PackMapEnvDataSpawnListV27),\n          \"targetVolume\",\n          Utils.getQWordReader(),\n        ];\n\n        this.PackMapEnvDataWaterV56 = [\n          \"waterFlags\",\n          \"uint32\",\n          \"animAmplitude\",\n          \"float32\",\n          \"animChoppiness\",\n          \"float32\",\n          \"animWind\",\n          [\"[]\", \"float32\", 2],\n          \"bumpAmount\",\n          \"float32\",\n          \"bumpAngle0\",\n          \"float32\",\n          \"bumpAngle1\",\n          \"float32\",\n          \"bumpScale0\",\n          \"float32\",\n          \"bumpScale1\",\n          \"float32\",\n          \"bumpSpeed0\",\n          \"float32\",\n          \"bumpSpeed1\",\n          \"float32\",\n          \"bumpTile0\",\n          \"float32\",\n          \"bumpTile1\",\n          \"float32\",\n          \"patternAngle\",\n          \"float32\",\n          \"patternTile\",\n          \"float32\",\n          \"patternSpeed\",\n          \"float32\",\n          \"patternEdge\",\n          \"float32\",\n          \"surfaceShallowColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceDeepColor\",\n          [\"[]\", \"uint8\", 4],\n          \"patternColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceFresnel\",\n          \"float32\",\n          \"distortAmount\",\n          \"float32\",\n          \"depthAttenuation\",\n          \"float32\",\n          \"materialFilename\",\n          Utils.getFileNameReader(),\n          \"textureFilenames\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"constantTokens\",\n          Utils.getArrayReader(\"uint32\"),\n          \"constantValues\",\n          Utils.getArrayReader([\"[]\", \"float32\", 4]),\n        ];\n\n        this.PackMapEnvDataWindV56 = [\n          \"azimuth\",\n          \"uint8\",\n          \"elevation\",\n          \"uint8\",\n          \"noise\",\n          \"uint8\",\n          \"speed\",\n          \"uint8\",\n          \"gust\",\n          \"uint8\",\n          \"gustFreq\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataLocalV56 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV56),\n          \"lightingCharGroups\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharGroupV27),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV56),\n          \"coloredLightRings\",\n          Utils.getRefArrayReader(this.PackMapEnvDataColoredLightRingsV27),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV56),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV56),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV56),\n          \"particleFieldCutouts\",\n          Utils.getArrayReader(this.PackMapEnvDataPFieldCutoutV27),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV56),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV56),\n          \"spawns\",\n          Utils.getPointerReader(this.PackMapEnvDataSpawnGroupsV27),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV56),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV56),\n          \"name\",\n          Utils.getString16Reader(),\n          \"nightMods\",\n          Utils.getArrayReader(\"uint8\"),\n          \"bindTarget\",\n          Utils.getQWordReader(),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"zRange\",\n          [\"[]\", \"float32\", 2],\n          \"fadeHorizInner\",\n          \"float32\",\n          \"fadeHorizOuter\",\n          \"float32\",\n          \"fadeVertical\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n          \"vertexArray\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n          \"guid\",\n          Utils.getQWordReader(),\n        ];\n\n        this.PackMapEnvDataSkyModeTexV56 = [\n          \"texPathNE\",\n          Utils.getFileNameReader(),\n          \"texPathSW\",\n          Utils.getFileNameReader(),\n          \"texPathT\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackMapEnvDataGlobalV56 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV56),\n          \"lightingCharGroups\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharGroupV27),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV56),\n          \"coloredLightRings\",\n          Utils.getRefArrayReader(this.PackMapEnvDataColoredLightRingsV27),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV56),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV56),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV56),\n          \"particleFieldCutouts\",\n          Utils.getArrayReader(this.PackMapEnvDataPFieldCutoutV27),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV56),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV56),\n          \"spawns\",\n          Utils.getPointerReader(this.PackMapEnvDataSpawnGroupsV27),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV56),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV56),\n          \"name\",\n          Utils.getString16Reader(),\n          \"nightMods\",\n          Utils.getArrayReader(\"uint8\"),\n          \"bindTarget\",\n          Utils.getQWordReader(),\n          \"skyModeTex\",\n          Utils.getArrayReader(this.PackMapEnvDataSkyModeTexV56),\n          \"starFile\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.__root = this.PackMapEnvironmentV56 = [\n          \"dataLocalArray\",\n          Utils.getArrayReader(this.PackMapEnvDataLocalV56),\n          \"dataGlobal\",\n          Utils.getPointerReader(this.PackMapEnvDataGlobalV56),\n        ];\n      },\n\n      // => Version: 55\n      55: function () {\n        this.PackMapEnvDataLightV55 = [\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"intensity\",\n          \"float32\",\n          \"direction\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.PackMapEnvDataLightingV55 = [\"lights\", Utils.getRefArrayReader(this.PackMapEnvDataLightV55)];\n\n        this.PackMapEnvDataLightingCharV26 = [\n          \"sunScale\",\n          \"float32\",\n          \"saturation\",\n          \"float32\",\n          \"sunFill\",\n          \"float32\",\n          \"ambScale\",\n          \"float32\",\n          \"ambFill\",\n          \"float32\",\n          \"flags\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataLightingCharGroupV26 = [\n          \"lightingChar\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharV26),\n        ];\n\n        this.PackMapEnvDataLayerAttributesV55 = [\n          \"brightness\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"haze\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"velocity\",\n          [\"[]\", \"float32\", 2],\n          \"fadeWidth\",\n          \"float32\",\n          \"fadeEnd\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataLayerV55 = [\n          \"altitude\",\n          \"float32\",\n          \"cutOut\",\n          \"float32\",\n          \"depth\",\n          \"float32\",\n          \"extent\",\n          \"float32\",\n          \"scale\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"attributes\",\n          Utils.getArrayReader(this.PackMapEnvDataLayerAttributesV55),\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataCloudsV55 = [\"layers\", Utils.getArrayReader(this.PackMapEnvDataLayerV55)];\n\n        this.PackMapEnvDataColoredLightRingsV26 = [\n          \"range\",\n          [\"[]\", \"float32\", 2],\n          \"distances\",\n          [\"[]\", \"float32\", 6],\n          \"lightColors\",\n          [\"[]\", [\"[]\", \"uint8\", 4], 6],\n          \"shadowColors\",\n          [\"[]\", [\"[]\", \"uint8\", 4], 6],\n        ];\n\n        this.PackMapEnvDataEffectV55 = [\n          \"glow\",\n          [\"[]\", \"uint8\", 4],\n          \"tintColor\",\n          [\"[]\", \"uint8\", 4],\n          \"tintTargetColor\",\n          [\"[]\", \"uint8\", 4],\n          \"saturation\",\n          \"float32\",\n          \"tintAmount\",\n          \"float32\",\n          \"tintFocus\",\n          \"float32\",\n          \"glowLevel\",\n          [\"[]\", \"uint8\", 4],\n          \"glowAmplify\",\n          \"float32\",\n          \"focalDepth\",\n          \"float32\",\n          \"focalRange\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataHazeV55 = [\n          \"distColor\",\n          [\"[]\", \"uint8\", 4],\n          \"distRange\",\n          [\"[]\", \"float32\", 2],\n          \"heightColor\",\n          [\"[]\", \"uint8\", 4],\n          \"heightRange\",\n          [\"[]\", \"float32\", 2],\n          \"depthCue\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataPFieldV55 = [\n          \"altitude\",\n          \"float32\",\n          \"angle\",\n          [\"[]\", \"float32\", 2],\n          \"clusterCount\",\n          \"uint16\",\n          \"clustering\",\n          [\"[]\", \"float32\", 2],\n          \"depth\",\n          \"float32\",\n          \"deviation\",\n          \"float32\",\n          \"deviationSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"extent\",\n          \"uint16\",\n          \"fade\",\n          \"float32\",\n          \"fieldDirection\",\n          [\"[]\", \"float32\", 3],\n          \"flags\",\n          \"uint16\",\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"opacity\",\n          [\"[]\", \"float32\", 2],\n          \"particleCount\",\n          \"uint16\",\n          \"period\",\n          [\"[]\", \"float32\", 2],\n          \"rotation\",\n          [\"[]\", \"float32\", 2],\n          \"scaleX\",\n          [\"[]\", \"float32\", 2],\n          \"scaleY\",\n          [\"[]\", \"float32\", 2],\n          \"seed\",\n          \"uint32\",\n          \"speed\",\n          [\"[]\", \"float32\", 2],\n          \"texColRow\",\n          [\"[]\", \"uint32\", 2],\n          \"texFPS\",\n          \"uint16\",\n          \"texPath\",\n          Utils.getFileNameReader(),\n          \"type\",\n          \"uint8\",\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataPFieldCutoutV26 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"x\",\n          [\"[]\", \"float32\", 4],\n          \"y\",\n          [\"[]\", \"float32\", 4],\n          \"z\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.PackMapEnvDataSkyV55 = [\n          \"flags\",\n          \"uint8\",\n          \"dayBrightness\",\n          \"float32\",\n          \"dayHazeBottom\",\n          \"float32\",\n          \"dayHazeDensity\",\n          \"float32\",\n          \"dayHazeFalloff\",\n          \"float32\",\n          \"dayLightIntensity\",\n          \"float32\",\n          \"dayStarDensity\",\n          \"float32\",\n          \"nightBrightness\",\n          \"float32\",\n          \"nightHazeBottom\",\n          \"float32\",\n          \"nightHazeDensity\",\n          \"float32\",\n          \"nightHazeFalloff\",\n          \"float32\",\n          \"nightLightIntensity\",\n          \"float32\",\n          \"nightStarDensity\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataSkyCardAttributesV55 = [\n          \"azimuth\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"hazeDensity\",\n          \"float32\",\n          \"latitude\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"minHaze\",\n          \"float32\",\n          \"scale\",\n          [\"[]\", \"float32\", 2],\n          \"speed\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"textureUV\",\n          [\"[]\", \"float32\", 4],\n          \"brightness\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataSkyCardV55 = [\n          \"day\",\n          this.PackMapEnvDataSkyCardAttributesV55,\n          \"night\",\n          this.PackMapEnvDataSkyCardAttributesV55,\n          \"flags\",\n          \"uint32\",\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataSkyCardsV55 = [\"cards\", Utils.getArrayReader(this.PackMapEnvDataSkyCardV55)];\n\n        this.PackMapEnvDataSpawnModelDataV26 = [\n          \"spawnRange\",\n          [\"[]\", \"uint32\", 2],\n          \"lifeSpan\",\n          [\"[]\", \"uint32\", 2],\n          \"probability\",\n          \"float32\",\n          \"delay\",\n          \"float32\",\n          \"maxConcurrent\",\n          \"uint16\",\n          \"flags\",\n          \"uint32\",\n          \"modelFile\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataSpawnListV26 = [\"spawns\", Utils.getArrayReader(this.PackMapEnvDataSpawnModelDataV26)];\n\n        this.PackMapEnvDataSpawnGroupsV26 = [\n          \"spawnGroups\",\n          Utils.getArrayReader(this.PackMapEnvDataSpawnListV26),\n          \"targetVolume\",\n          Utils.getQWordReader(),\n        ];\n\n        this.PackMapEnvDataWaterV55 = [\n          \"waterFlags\",\n          \"uint32\",\n          \"animAmplitude\",\n          \"float32\",\n          \"animChoppiness\",\n          \"float32\",\n          \"animWind\",\n          [\"[]\", \"float32\", 2],\n          \"bumpAmount\",\n          \"float32\",\n          \"bumpAngle0\",\n          \"float32\",\n          \"bumpAngle1\",\n          \"float32\",\n          \"bumpScale0\",\n          \"float32\",\n          \"bumpScale1\",\n          \"float32\",\n          \"bumpSpeed0\",\n          \"float32\",\n          \"bumpSpeed1\",\n          \"float32\",\n          \"bumpTile0\",\n          \"float32\",\n          \"bumpTile1\",\n          \"float32\",\n          \"patternAngle\",\n          \"float32\",\n          \"patternTile\",\n          \"float32\",\n          \"patternSpeed\",\n          \"float32\",\n          \"patternEdge\",\n          \"float32\",\n          \"surfaceShallowColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceDeepColor\",\n          [\"[]\", \"uint8\", 4],\n          \"patternColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceFresnel\",\n          \"float32\",\n          \"distortAmount\",\n          \"float32\",\n          \"depthAttenuation\",\n          \"float32\",\n          \"materialFilename\",\n          Utils.getFileNameReader(),\n          \"textureFilenames\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"constantTokens\",\n          Utils.getArrayReader(\"uint32\"),\n          \"constantValues\",\n          Utils.getArrayReader([\"[]\", \"float32\", 4]),\n        ];\n\n        this.PackMapEnvDataWindV55 = [\n          \"azimuth\",\n          \"uint8\",\n          \"elevation\",\n          \"uint8\",\n          \"noise\",\n          \"uint8\",\n          \"speed\",\n          \"uint8\",\n          \"gust\",\n          \"uint8\",\n          \"gustFreq\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataLocalV55 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV55),\n          \"lightingCharGroups\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharGroupV26),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV55),\n          \"coloredLightRings\",\n          Utils.getRefArrayReader(this.PackMapEnvDataColoredLightRingsV26),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV55),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV55),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV55),\n          \"particleFieldCutouts\",\n          Utils.getArrayReader(this.PackMapEnvDataPFieldCutoutV26),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV55),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV55),\n          \"spawns\",\n          Utils.getPointerReader(this.PackMapEnvDataSpawnGroupsV26),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV55),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV55),\n          \"name\",\n          Utils.getString16Reader(),\n          \"nightMods\",\n          Utils.getArrayReader(\"uint8\"),\n          \"bindTarget\",\n          Utils.getQWordReader(),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"zRange\",\n          [\"[]\", \"float32\", 2],\n          \"fadeHorizInner\",\n          \"float32\",\n          \"fadeHorizOuter\",\n          \"float32\",\n          \"fadeVertical\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n          \"vertexArray\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n          \"guid\",\n          Utils.getQWordReader(),\n        ];\n\n        this.PackMapEnvDataSkyModeTexV55 = [\n          \"texPathNE\",\n          Utils.getFileNameReader(),\n          \"texPathSW\",\n          Utils.getFileNameReader(),\n          \"texPathT\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackMapEnvDataGlobalV55 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV55),\n          \"lightingCharGroups\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharGroupV26),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV55),\n          \"coloredLightRings\",\n          Utils.getRefArrayReader(this.PackMapEnvDataColoredLightRingsV26),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV55),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV55),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV55),\n          \"particleFieldCutouts\",\n          Utils.getArrayReader(this.PackMapEnvDataPFieldCutoutV26),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV55),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV55),\n          \"spawns\",\n          Utils.getPointerReader(this.PackMapEnvDataSpawnGroupsV26),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV55),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV55),\n          \"name\",\n          Utils.getString16Reader(),\n          \"nightMods\",\n          Utils.getArrayReader(\"uint8\"),\n          \"bindTarget\",\n          Utils.getQWordReader(),\n          \"skyModeTex\",\n          Utils.getArrayReader(this.PackMapEnvDataSkyModeTexV55),\n          \"starFile\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.__root = this.PackMapEnvironmentV55 = [\n          \"dataLocalArray\",\n          Utils.getArrayReader(this.PackMapEnvDataLocalV55),\n          \"dataGlobal\",\n          Utils.getPointerReader(this.PackMapEnvDataGlobalV55),\n        ];\n      },\n\n      // => Version: 54, ReferencedFunction: 0xEB8820\n      54: function () {\n        this.PackMapEnvDataLightV54 = [\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"intensity\",\n          \"float32\",\n          \"direction\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.PackMapEnvDataLightingV54 = [\"lights\", Utils.getRefArrayReader(this.PackMapEnvDataLightV54)];\n\n        this.PackMapEnvDataLightingCharV25 = [\n          \"sunScale\",\n          \"float32\",\n          \"saturation\",\n          \"float32\",\n          \"sunFill\",\n          \"float32\",\n          \"ambScale\",\n          \"float32\",\n          \"ambFill\",\n          \"float32\",\n          \"flags\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataLightingCharGroupV25 = [\n          \"lightingChar\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharV25),\n        ];\n\n        this.PackMapEnvDataLayerAttributesV54 = [\n          \"brightness\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"haze\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"velocity\",\n          [\"[]\", \"float32\", 2],\n          \"fadeWidth\",\n          \"float32\",\n          \"fadeEnd\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataLayerV54 = [\n          \"altitude\",\n          \"float32\",\n          \"cutOut\",\n          \"float32\",\n          \"depth\",\n          \"float32\",\n          \"extent\",\n          \"float32\",\n          \"scale\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"attributes\",\n          Utils.getArrayReader(this.PackMapEnvDataLayerAttributesV54),\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataCloudsV54 = [\"layers\", Utils.getArrayReader(this.PackMapEnvDataLayerV54)];\n\n        this.PackMapEnvDataColoredLightRingsV25 = [\n          \"range\",\n          [\"[]\", \"float32\", 2],\n          \"distances\",\n          [\"[]\", \"float32\", 6],\n          \"lightColors\",\n          [\"[]\", [\"[]\", \"uint8\", 4], 6],\n          \"shadowColors\",\n          [\"[]\", [\"[]\", \"uint8\", 4], 6],\n        ];\n\n        this.PackMapEnvDataEffectV54 = [\n          \"glow\",\n          [\"[]\", \"uint8\", 4],\n          \"tintColor\",\n          [\"[]\", \"uint8\", 4],\n          \"tintTargetColor\",\n          [\"[]\", \"uint8\", 4],\n          \"saturation\",\n          \"float32\",\n          \"tintAmount\",\n          \"float32\",\n          \"tintFocus\",\n          \"float32\",\n          \"glowLevel\",\n          [\"[]\", \"uint8\", 4],\n          \"glowAmplify\",\n          \"float32\",\n          \"focalDepth\",\n          \"float32\",\n          \"focalRange\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataHazeV54 = [\n          \"distColor\",\n          [\"[]\", \"uint8\", 4],\n          \"distRange\",\n          [\"[]\", \"float32\", 2],\n          \"heightColor\",\n          [\"[]\", \"uint8\", 4],\n          \"heightRange\",\n          [\"[]\", \"float32\", 2],\n          \"depthCue\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataPFieldV54 = [\n          \"altitude\",\n          \"float32\",\n          \"angle\",\n          [\"[]\", \"float32\", 2],\n          \"clusterCount\",\n          \"uint16\",\n          \"clustering\",\n          [\"[]\", \"float32\", 2],\n          \"depth\",\n          \"float32\",\n          \"deviation\",\n          \"float32\",\n          \"deviationSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"extent\",\n          \"uint16\",\n          \"fade\",\n          \"float32\",\n          \"fieldDirection\",\n          [\"[]\", \"float32\", 3],\n          \"flags\",\n          \"uint16\",\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"opacity\",\n          [\"[]\", \"float32\", 2],\n          \"particleCount\",\n          \"uint16\",\n          \"period\",\n          [\"[]\", \"float32\", 2],\n          \"rotation\",\n          [\"[]\", \"float32\", 2],\n          \"scaleX\",\n          [\"[]\", \"float32\", 2],\n          \"scaleY\",\n          [\"[]\", \"float32\", 2],\n          \"seed\",\n          \"uint32\",\n          \"speed\",\n          [\"[]\", \"float32\", 2],\n          \"texColRow\",\n          [\"[]\", \"uint32\", 2],\n          \"texFPS\",\n          \"uint16\",\n          \"texPath\",\n          Utils.getFileNameReader(),\n          \"type\",\n          \"uint8\",\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataPFieldCutoutV25 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"x\",\n          [\"[]\", \"float32\", 4],\n          \"y\",\n          [\"[]\", \"float32\", 4],\n          \"z\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.PackMapEnvDataSkyV54 = [\n          \"flags\",\n          \"uint8\",\n          \"dayBrightness\",\n          \"float32\",\n          \"dayHazeBottom\",\n          \"float32\",\n          \"dayHazeDensity\",\n          \"float32\",\n          \"dayHazeFalloff\",\n          \"float32\",\n          \"dayLightIntensity\",\n          \"float32\",\n          \"dayStarDensity\",\n          \"float32\",\n          \"nightBrightness\",\n          \"float32\",\n          \"nightHazeBottom\",\n          \"float32\",\n          \"nightHazeDensity\",\n          \"float32\",\n          \"nightHazeFalloff\",\n          \"float32\",\n          \"nightLightIntensity\",\n          \"float32\",\n          \"nightStarDensity\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataSkyCardAttributesV54 = [\n          \"azimuth\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"hazeDensity\",\n          \"float32\",\n          \"latitude\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"minHaze\",\n          \"float32\",\n          \"scale\",\n          [\"[]\", \"float32\", 2],\n          \"speed\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"textureUV\",\n          [\"[]\", \"float32\", 4],\n          \"brightness\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataSkyCardV54 = [\n          \"day\",\n          this.PackMapEnvDataSkyCardAttributesV54,\n          \"night\",\n          this.PackMapEnvDataSkyCardAttributesV54,\n          \"flags\",\n          \"uint32\",\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataSkyCardsV54 = [\"cards\", Utils.getArrayReader(this.PackMapEnvDataSkyCardV54)];\n\n        this.PackMapEnvDataWaterV54 = [\n          \"waterFlags\",\n          \"uint32\",\n          \"animAmplitude\",\n          \"float32\",\n          \"animChoppiness\",\n          \"float32\",\n          \"animWind\",\n          [\"[]\", \"float32\", 2],\n          \"bumpAmount\",\n          \"float32\",\n          \"bumpAngle0\",\n          \"float32\",\n          \"bumpAngle1\",\n          \"float32\",\n          \"bumpScale0\",\n          \"float32\",\n          \"bumpScale1\",\n          \"float32\",\n          \"bumpSpeed0\",\n          \"float32\",\n          \"bumpSpeed1\",\n          \"float32\",\n          \"bumpTile0\",\n          \"float32\",\n          \"bumpTile1\",\n          \"float32\",\n          \"patternAngle\",\n          \"float32\",\n          \"patternTile\",\n          \"float32\",\n          \"patternSpeed\",\n          \"float32\",\n          \"patternEdge\",\n          \"float32\",\n          \"surfaceShallowColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceDeepColor\",\n          [\"[]\", \"uint8\", 4],\n          \"patternColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceFresnel\",\n          \"float32\",\n          \"distortAmount\",\n          \"float32\",\n          \"depthAttenuation\",\n          \"float32\",\n          \"materialFilename\",\n          Utils.getFileNameReader(),\n          \"textureFilenames\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"constantTokens\",\n          Utils.getArrayReader(\"uint32\"),\n          \"constantValues\",\n          Utils.getArrayReader([\"[]\", \"float32\", 4]),\n        ];\n\n        this.PackMapEnvDataWindV54 = [\n          \"azimuth\",\n          \"uint8\",\n          \"elevation\",\n          \"uint8\",\n          \"noise\",\n          \"uint8\",\n          \"speed\",\n          \"uint8\",\n          \"gust\",\n          \"uint8\",\n          \"gustFreq\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataLocalV54 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV54),\n          \"lightingCharGroups\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharGroupV25),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV54),\n          \"coloredLightRings\",\n          Utils.getRefArrayReader(this.PackMapEnvDataColoredLightRingsV25),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV54),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV54),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV54),\n          \"particleFieldCutouts\",\n          Utils.getArrayReader(this.PackMapEnvDataPFieldCutoutV25),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV54),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV54),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV54),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV54),\n          \"name\",\n          Utils.getString16Reader(),\n          \"nightMods\",\n          Utils.getArrayReader(\"uint8\"),\n          \"bindTarget\",\n          Utils.getQWordReader(),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"zRange\",\n          [\"[]\", \"float32\", 2],\n          \"fadeHorizInner\",\n          \"float32\",\n          \"fadeHorizOuter\",\n          \"float32\",\n          \"fadeVertical\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n          \"vertexArray\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n          \"guid\",\n          Utils.getQWordReader(),\n        ];\n\n        this.PackMapEnvDataSkyModeTexV54 = [\n          \"texPathNE\",\n          Utils.getFileNameReader(),\n          \"texPathSW\",\n          Utils.getFileNameReader(),\n          \"texPathT\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackMapEnvDataGlobalV54 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV54),\n          \"lightingCharGroups\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharGroupV25),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV54),\n          \"coloredLightRings\",\n          Utils.getRefArrayReader(this.PackMapEnvDataColoredLightRingsV25),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV54),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV54),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV54),\n          \"particleFieldCutouts\",\n          Utils.getArrayReader(this.PackMapEnvDataPFieldCutoutV25),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV54),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV54),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV54),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV54),\n          \"name\",\n          Utils.getString16Reader(),\n          \"nightMods\",\n          Utils.getArrayReader(\"uint8\"),\n          \"bindTarget\",\n          Utils.getQWordReader(),\n          \"skyModeTex\",\n          Utils.getArrayReader(this.PackMapEnvDataSkyModeTexV54),\n          \"starFile\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.__root = this.PackMapEnvironmentV54 = [\n          \"dataLocalArray\",\n          Utils.getArrayReader(this.PackMapEnvDataLocalV54),\n          \"dataGlobal\",\n          Utils.getPointerReader(this.PackMapEnvDataGlobalV54),\n        ];\n      },\n\n      // => Version: 53, ReferencedFunction: 0xEB8770\n      53: function () {\n        this.PackMapEnvDataLightV53 = [\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"intensity\",\n          \"float32\",\n          \"direction\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.PackMapEnvDataLightingV53 = [\"lights\", Utils.getRefArrayReader(this.PackMapEnvDataLightV53)];\n\n        this.PackMapEnvDataLightingCharV24 = [\n          \"sunScale\",\n          \"float32\",\n          \"saturation\",\n          \"float32\",\n          \"sunFill\",\n          \"float32\",\n          \"ambScale\",\n          \"float32\",\n          \"ambFill\",\n          \"float32\",\n          \"flags\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataLightingCharGroupV24 = [\n          \"lightingChar\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharV24),\n        ];\n\n        this.PackMapEnvDataLayerAttributesV53 = [\n          \"brightness\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"haze\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"velocity\",\n          [\"[]\", \"float32\", 2],\n          \"fadeWidth\",\n          \"float32\",\n          \"fadeEnd\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataLayerV53 = [\n          \"altitude\",\n          \"float32\",\n          \"cutOut\",\n          \"float32\",\n          \"depth\",\n          \"float32\",\n          \"extent\",\n          \"float32\",\n          \"scale\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"attributes\",\n          Utils.getArrayReader(this.PackMapEnvDataLayerAttributesV53),\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataCloudsV53 = [\"layers\", Utils.getArrayReader(this.PackMapEnvDataLayerV53)];\n\n        this.PackMapEnvDataColoredLightRingsV24 = [\n          \"range\",\n          [\"[]\", \"float32\", 2],\n          \"distances\",\n          [\"[]\", \"float32\", 6],\n          \"lightColors\",\n          [\"[]\", [\"[]\", \"uint8\", 4], 6],\n          \"shadowColors\",\n          [\"[]\", [\"[]\", \"uint8\", 4], 6],\n        ];\n\n        this.PackMapEnvDataEffectV53 = [\n          \"glow\",\n          [\"[]\", \"uint8\", 4],\n          \"tintColor\",\n          [\"[]\", \"uint8\", 4],\n          \"tintTargetColor\",\n          [\"[]\", \"uint8\", 4],\n          \"saturation\",\n          \"float32\",\n          \"tintAmount\",\n          \"float32\",\n          \"tintFocus\",\n          \"float32\",\n          \"glowLevel\",\n          [\"[]\", \"uint8\", 4],\n          \"glowAmplify\",\n          \"float32\",\n          \"focalDepth\",\n          \"float32\",\n          \"focalRange\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataHazeV53 = [\n          \"distColor\",\n          [\"[]\", \"uint8\", 4],\n          \"distRange\",\n          [\"[]\", \"float32\", 2],\n          \"heightColor\",\n          [\"[]\", \"uint8\", 4],\n          \"heightRange\",\n          [\"[]\", \"float32\", 2],\n          \"depthCue\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataPFieldV53 = [\n          \"altitude\",\n          \"float32\",\n          \"angle\",\n          [\"[]\", \"float32\", 2],\n          \"clusterCount\",\n          \"uint16\",\n          \"clustering\",\n          [\"[]\", \"float32\", 2],\n          \"depth\",\n          \"float32\",\n          \"deviation\",\n          \"float32\",\n          \"deviationSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"extent\",\n          \"uint16\",\n          \"fade\",\n          \"float32\",\n          \"fieldDirection\",\n          [\"[]\", \"float32\", 3],\n          \"flags\",\n          \"uint16\",\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"opacity\",\n          [\"[]\", \"float32\", 2],\n          \"particleCount\",\n          \"uint16\",\n          \"period\",\n          [\"[]\", \"float32\", 2],\n          \"rotation\",\n          [\"[]\", \"float32\", 2],\n          \"scaleX\",\n          [\"[]\", \"float32\", 2],\n          \"scaleY\",\n          [\"[]\", \"float32\", 2],\n          \"seed\",\n          \"uint32\",\n          \"speed\",\n          [\"[]\", \"float32\", 2],\n          \"texColRow\",\n          [\"[]\", \"uint32\", 2],\n          \"texFPS\",\n          \"uint16\",\n          \"texPath\",\n          Utils.getFileNameReader(),\n          \"type\",\n          \"uint8\",\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataPFieldCutoutV24 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"x\",\n          [\"[]\", \"float32\", 4],\n          \"y\",\n          [\"[]\", \"float32\", 4],\n          \"z\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.PackMapEnvDataSkyV53 = [\n          \"flags\",\n          \"uint8\",\n          \"dayBrightness\",\n          \"float32\",\n          \"dayHazeBottom\",\n          \"float32\",\n          \"dayHazeDensity\",\n          \"float32\",\n          \"dayHazeFalloff\",\n          \"float32\",\n          \"dayLightIntensity\",\n          \"float32\",\n          \"dayStarDensity\",\n          \"float32\",\n          \"nightBrightness\",\n          \"float32\",\n          \"nightHazeBottom\",\n          \"float32\",\n          \"nightHazeDensity\",\n          \"float32\",\n          \"nightHazeFalloff\",\n          \"float32\",\n          \"nightLightIntensity\",\n          \"float32\",\n          \"nightStarDensity\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataSkyCardAttributesV53 = [\n          \"azimuth\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"hazeDensity\",\n          \"float32\",\n          \"latitude\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"minHaze\",\n          \"float32\",\n          \"scale\",\n          [\"[]\", \"float32\", 2],\n          \"speed\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"textureUV\",\n          [\"[]\", \"float32\", 4],\n          \"brightness\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataSkyCardV53 = [\n          \"day\",\n          this.PackMapEnvDataSkyCardAttributesV53,\n          \"night\",\n          this.PackMapEnvDataSkyCardAttributesV53,\n          \"flags\",\n          \"uint32\",\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataSkyCardsV53 = [\"cards\", Utils.getArrayReader(this.PackMapEnvDataSkyCardV53)];\n\n        this.PackMapEnvDataWaterV53 = [\n          \"waterFlags\",\n          \"uint32\",\n          \"animAmplitude\",\n          \"float32\",\n          \"animChoppiness\",\n          \"float32\",\n          \"animWind\",\n          [\"[]\", \"float32\", 2],\n          \"bumpAmount\",\n          \"float32\",\n          \"bumpAngle0\",\n          \"float32\",\n          \"bumpAngle1\",\n          \"float32\",\n          \"bumpScale0\",\n          \"float32\",\n          \"bumpScale1\",\n          \"float32\",\n          \"bumpSpeed0\",\n          \"float32\",\n          \"bumpSpeed1\",\n          \"float32\",\n          \"bumpTile0\",\n          \"float32\",\n          \"bumpTile1\",\n          \"float32\",\n          \"patternAngle\",\n          \"float32\",\n          \"patternTile\",\n          \"float32\",\n          \"patternSpeed\",\n          \"float32\",\n          \"patternEdge\",\n          \"float32\",\n          \"surfaceShallowColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceDeepColor\",\n          [\"[]\", \"uint8\", 4],\n          \"patternColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceFresnel\",\n          \"float32\",\n          \"distortAmount\",\n          \"float32\",\n          \"depthAttenuation\",\n          \"float32\",\n          \"materialFilename\",\n          Utils.getFileNameReader(),\n          \"textureFilenames\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"constantTokens\",\n          Utils.getArrayReader(\"uint32\"),\n          \"constantValues\",\n          Utils.getArrayReader([\"[]\", \"float32\", 4]),\n        ];\n\n        this.PackMapEnvDataWindV53 = [\n          \"azimuth\",\n          \"uint8\",\n          \"elevation\",\n          \"uint8\",\n          \"noise\",\n          \"uint8\",\n          \"speed\",\n          \"uint8\",\n          \"gust\",\n          \"uint8\",\n          \"gustFreq\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataLocalV53 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV53),\n          \"lightingCharGroups\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharGroupV24),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV53),\n          \"coloredLightRings\",\n          Utils.getRefArrayReader(this.PackMapEnvDataColoredLightRingsV24),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV53),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV53),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV53),\n          \"particleFieldCutouts\",\n          Utils.getArrayReader(this.PackMapEnvDataPFieldCutoutV24),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV53),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV53),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV53),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV53),\n          \"name\",\n          Utils.getString16Reader(),\n          \"nightMods\",\n          Utils.getArrayReader(\"uint8\"),\n          \"bindTarget\",\n          Utils.getQWordReader(),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"zRange\",\n          [\"[]\", \"float32\", 2],\n          \"fadeHorizInner\",\n          \"float32\",\n          \"fadeHorizOuter\",\n          \"float32\",\n          \"fadeVertical\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n          \"vertexArray\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n          \"guid\",\n          Utils.getQWordReader(),\n        ];\n\n        this.PackMapEnvDataSkyModeTexV53 = [\n          \"texPathNE\",\n          Utils.getFileNameReader(),\n          \"texPathSW\",\n          Utils.getFileNameReader(),\n          \"texPathT\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackMapEnvDataGlobalV53 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV53),\n          \"lightingCharGroups\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharGroupV24),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV53),\n          \"coloredLightRings\",\n          Utils.getRefArrayReader(this.PackMapEnvDataColoredLightRingsV24),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV53),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV53),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV53),\n          \"particleFieldCutouts\",\n          Utils.getArrayReader(this.PackMapEnvDataPFieldCutoutV24),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV53),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV53),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV53),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV53),\n          \"name\",\n          Utils.getString16Reader(),\n          \"nightMods\",\n          Utils.getArrayReader(\"uint8\"),\n          \"bindTarget\",\n          Utils.getQWordReader(),\n          \"skyModeTex\",\n          Utils.getArrayReader(this.PackMapEnvDataSkyModeTexV53),\n          \"starFile\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.__root = this.PackMapEnvironmentV53 = [\n          \"dataLocalArray\",\n          Utils.getArrayReader(this.PackMapEnvDataLocalV53),\n          \"dataGlobal\",\n          Utils.getPointerReader(this.PackMapEnvDataGlobalV53),\n        ];\n      },\n\n      // => Version: 52, ReferencedFunction: 0xEB8690\n      52: function () {\n        this.PackMapEnvDataLightV52 = [\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"intensity\",\n          \"float32\",\n          \"direction\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.PackMapEnvDataLightingV52 = [\"lights\", Utils.getRefArrayReader(this.PackMapEnvDataLightV52)];\n\n        this.PackMapEnvDataLightingCharV23 = [\n          \"sunScale\",\n          \"float32\",\n          \"saturation\",\n          \"float32\",\n          \"sunFill\",\n          \"float32\",\n          \"ambScale\",\n          \"float32\",\n          \"ambFill\",\n          \"float32\",\n          \"flags\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataLightingCharGroupV23 = [\n          \"lightingChar\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharV23),\n        ];\n\n        this.PackMapEnvDataLayerAttributesV52 = [\n          \"brightness\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"haze\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"velocity\",\n          [\"[]\", \"float32\", 2],\n          \"fadeWidth\",\n          \"float32\",\n          \"fadeEnd\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataLayerV52 = [\n          \"altitude\",\n          \"float32\",\n          \"cutOut\",\n          \"float32\",\n          \"depth\",\n          \"float32\",\n          \"extent\",\n          \"float32\",\n          \"scale\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"attributes\",\n          Utils.getArrayReader(this.PackMapEnvDataLayerAttributesV52),\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataCloudsV52 = [\"layers\", Utils.getArrayReader(this.PackMapEnvDataLayerV52)];\n\n        this.PackMapEnvDataColoredLightRingsV23 = [\n          \"range\",\n          [\"[]\", \"float32\", 2],\n          \"distances\",\n          [\"[]\", \"float32\", 6],\n          \"lightColors\",\n          [\"[]\", [\"[]\", \"uint8\", 4], 6],\n          \"shadowColors\",\n          [\"[]\", [\"[]\", \"uint8\", 4], 6],\n        ];\n\n        this.PackMapEnvDataEffectV52 = [\n          \"glow\",\n          [\"[]\", \"uint8\", 4],\n          \"tintColor\",\n          [\"[]\", \"uint8\", 4],\n          \"tintTargetColor\",\n          [\"[]\", \"uint8\", 4],\n          \"saturation\",\n          \"float32\",\n          \"tintAmount\",\n          \"float32\",\n          \"tintFocus\",\n          \"float32\",\n          \"glowLevel\",\n          [\"[]\", \"uint8\", 4],\n          \"glowAmplify\",\n          \"float32\",\n          \"focalDepth\",\n          \"float32\",\n          \"focalRange\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataHazeV52 = [\n          \"distColor\",\n          [\"[]\", \"uint8\", 4],\n          \"distRange\",\n          [\"[]\", \"float32\", 2],\n          \"heightColor\",\n          [\"[]\", \"uint8\", 4],\n          \"heightRange\",\n          [\"[]\", \"float32\", 2],\n          \"depthCue\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataPFieldV52 = [\n          \"altitude\",\n          \"float32\",\n          \"angle\",\n          [\"[]\", \"float32\", 2],\n          \"clusterCount\",\n          \"uint16\",\n          \"clustering\",\n          [\"[]\", \"float32\", 2],\n          \"depth\",\n          \"float32\",\n          \"deviation\",\n          \"float32\",\n          \"extent\",\n          \"uint16\",\n          \"fade\",\n          \"float32\",\n          \"fieldDirection\",\n          [\"[]\", \"float32\", 3],\n          \"flags\",\n          \"uint16\",\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"opacity\",\n          [\"[]\", \"float32\", 2],\n          \"particleCount\",\n          \"uint16\",\n          \"period\",\n          [\"[]\", \"float32\", 2],\n          \"rotation\",\n          [\"[]\", \"float32\", 2],\n          \"scaleX\",\n          [\"[]\", \"float32\", 2],\n          \"scaleY\",\n          [\"[]\", \"float32\", 2],\n          \"seed\",\n          \"uint32\",\n          \"speed\",\n          [\"[]\", \"float32\", 2],\n          \"texColRow\",\n          [\"[]\", \"uint32\", 2],\n          \"texFPS\",\n          \"uint16\",\n          \"texPath\",\n          Utils.getFileNameReader(),\n          \"type\",\n          \"uint8\",\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataPFieldCutoutV23 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"x\",\n          [\"[]\", \"float32\", 4],\n          \"y\",\n          [\"[]\", \"float32\", 4],\n          \"z\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.PackMapEnvDataSkyV52 = [\n          \"flags\",\n          \"uint8\",\n          \"dayBrightness\",\n          \"float32\",\n          \"dayHazeBottom\",\n          \"float32\",\n          \"dayHazeDensity\",\n          \"float32\",\n          \"dayHazeFalloff\",\n          \"float32\",\n          \"dayLightIntensity\",\n          \"float32\",\n          \"dayStarDensity\",\n          \"float32\",\n          \"nightBrightness\",\n          \"float32\",\n          \"nightHazeBottom\",\n          \"float32\",\n          \"nightHazeDensity\",\n          \"float32\",\n          \"nightHazeFalloff\",\n          \"float32\",\n          \"nightLightIntensity\",\n          \"float32\",\n          \"nightStarDensity\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataSkyCardAttributesV52 = [\n          \"azimuth\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"hazeDensity\",\n          \"float32\",\n          \"latitude\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"minHaze\",\n          \"float32\",\n          \"scale\",\n          [\"[]\", \"float32\", 2],\n          \"speed\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"textureUV\",\n          [\"[]\", \"float32\", 4],\n          \"brightness\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataSkyCardV52 = [\n          \"day\",\n          this.PackMapEnvDataSkyCardAttributesV52,\n          \"night\",\n          this.PackMapEnvDataSkyCardAttributesV52,\n          \"flags\",\n          \"uint32\",\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataSkyCardsV52 = [\"cards\", Utils.getArrayReader(this.PackMapEnvDataSkyCardV52)];\n\n        this.PackMapEnvDataWaterV52 = [\n          \"waterFlags\",\n          \"uint32\",\n          \"animAmplitude\",\n          \"float32\",\n          \"animChoppiness\",\n          \"float32\",\n          \"animWind\",\n          [\"[]\", \"float32\", 2],\n          \"bumpAmount\",\n          \"float32\",\n          \"bumpAngle0\",\n          \"float32\",\n          \"bumpAngle1\",\n          \"float32\",\n          \"bumpScale0\",\n          \"float32\",\n          \"bumpScale1\",\n          \"float32\",\n          \"bumpSpeed0\",\n          \"float32\",\n          \"bumpSpeed1\",\n          \"float32\",\n          \"bumpTile0\",\n          \"float32\",\n          \"bumpTile1\",\n          \"float32\",\n          \"patternAngle\",\n          \"float32\",\n          \"patternTile\",\n          \"float32\",\n          \"patternSpeed\",\n          \"float32\",\n          \"patternEdge\",\n          \"float32\",\n          \"surfaceShallowColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceDeepColor\",\n          [\"[]\", \"uint8\", 4],\n          \"patternColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceFresnel\",\n          \"float32\",\n          \"distortAmount\",\n          \"float32\",\n          \"depthAttenuation\",\n          \"float32\",\n          \"materialFilename\",\n          Utils.getFileNameReader(),\n          \"textureFilenames\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"constantTokens\",\n          Utils.getArrayReader(\"uint32\"),\n          \"constantValues\",\n          Utils.getArrayReader([\"[]\", \"float32\", 4]),\n        ];\n\n        this.PackMapEnvDataWindV52 = [\n          \"azimuth\",\n          \"uint8\",\n          \"elevation\",\n          \"uint8\",\n          \"noise\",\n          \"uint8\",\n          \"speed\",\n          \"uint8\",\n          \"gust\",\n          \"uint8\",\n          \"gustFreq\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataLocalV52 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV52),\n          \"lightingCharGroups\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharGroupV23),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV52),\n          \"coloredLightRings\",\n          Utils.getRefArrayReader(this.PackMapEnvDataColoredLightRingsV23),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV52),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV52),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV52),\n          \"particleFieldCutouts\",\n          Utils.getArrayReader(this.PackMapEnvDataPFieldCutoutV23),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV52),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV52),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV52),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV52),\n          \"name\",\n          Utils.getString16Reader(),\n          \"nightMods\",\n          Utils.getArrayReader(\"uint8\"),\n          \"bindTarget\",\n          Utils.getQWordReader(),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"zRange\",\n          [\"[]\", \"float32\", 2],\n          \"fadeHorizInner\",\n          \"float32\",\n          \"fadeHorizOuter\",\n          \"float32\",\n          \"fadeVertical\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n          \"vertexArray\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n          \"guid\",\n          Utils.getQWordReader(),\n        ];\n\n        this.PackMapEnvDataSkyModeTexV52 = [\n          \"texPathNE\",\n          Utils.getFileNameReader(),\n          \"texPathSW\",\n          Utils.getFileNameReader(),\n          \"texPathT\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackMapEnvDataGlobalV52 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV52),\n          \"lightingCharGroups\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharGroupV23),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV52),\n          \"coloredLightRings\",\n          Utils.getRefArrayReader(this.PackMapEnvDataColoredLightRingsV23),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV52),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV52),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV52),\n          \"particleFieldCutouts\",\n          Utils.getArrayReader(this.PackMapEnvDataPFieldCutoutV23),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV52),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV52),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV52),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV52),\n          \"name\",\n          Utils.getString16Reader(),\n          \"nightMods\",\n          Utils.getArrayReader(\"uint8\"),\n          \"bindTarget\",\n          Utils.getQWordReader(),\n          \"skyModeTex\",\n          Utils.getArrayReader(this.PackMapEnvDataSkyModeTexV52),\n          \"starFile\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.__root = this.PackMapEnvironmentV52 = [\n          \"dataLocalArray\",\n          Utils.getArrayReader(this.PackMapEnvDataLocalV52),\n          \"dataGlobal\",\n          Utils.getPointerReader(this.PackMapEnvDataGlobalV52),\n        ];\n      },\n\n      // => Version: 51\n      51: function () {\n        this.PackMapEnvDataLightV51 = [\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"intensity\",\n          \"float32\",\n          \"direction\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.PackMapEnvDataLightingV51 = [\"lights\", Utils.getRefArrayReader(this.PackMapEnvDataLightV51)];\n\n        this.PackMapEnvDataLightingCharV22 = [\n          \"sunScale\",\n          \"float32\",\n          \"saturation\",\n          \"float32\",\n          \"sunFill\",\n          \"float32\",\n          \"ambScale\",\n          \"float32\",\n          \"ambFill\",\n          \"float32\",\n          \"flags\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataLightingCharGroupV22 = [\n          \"lightingChar\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharV22),\n        ];\n\n        this.PackMapEnvDataLayerAttributesV51 = [\n          \"brightness\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"haze\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"velocity\",\n          [\"[]\", \"float32\", 2],\n          \"fadeWidth\",\n          \"float32\",\n          \"fadeEnd\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataLayerV51 = [\n          \"altitude\",\n          \"float32\",\n          \"cutOut\",\n          \"float32\",\n          \"depth\",\n          \"float32\",\n          \"extent\",\n          \"float32\",\n          \"scale\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"attributes\",\n          Utils.getArrayReader(this.PackMapEnvDataLayerAttributesV51),\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataCloudsV51 = [\"layers\", Utils.getArrayReader(this.PackMapEnvDataLayerV51)];\n\n        this.PackMapEnvDataColoredLightRingsV22 = [\n          \"range\",\n          [\"[]\", \"float32\", 2],\n          \"distances\",\n          [\"[]\", \"float32\", 6],\n          \"lightColors\",\n          [\"[]\", [\"[]\", \"uint8\", 4], 6],\n          \"shadowColors\",\n          [\"[]\", [\"[]\", \"uint8\", 4], 6],\n        ];\n\n        this.PackMapEnvDataEffectV51 = [\n          \"glow\",\n          [\"[]\", \"uint8\", 4],\n          \"tintColor\",\n          [\"[]\", \"uint8\", 4],\n          \"tintTargetColor\",\n          [\"[]\", \"uint8\", 4],\n          \"saturation\",\n          \"float32\",\n          \"tintAmount\",\n          \"float32\",\n          \"tintFocus\",\n          \"float32\",\n          \"glowLevel\",\n          [\"[]\", \"uint8\", 4],\n          \"glowAmplify\",\n          \"float32\",\n          \"focalDepth\",\n          \"float32\",\n          \"focalRange\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataHazeV51 = [\n          \"distColor\",\n          [\"[]\", \"uint8\", 4],\n          \"distRange\",\n          [\"[]\", \"float32\", 2],\n          \"heightColor\",\n          [\"[]\", \"uint8\", 4],\n          \"heightRange\",\n          [\"[]\", \"float32\", 2],\n          \"depthCue\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataPFieldV51 = [\n          \"altitude\",\n          \"float32\",\n          \"angle\",\n          [\"[]\", \"float32\", 2],\n          \"depth\",\n          \"float32\",\n          \"deviation\",\n          \"float32\",\n          \"extent\",\n          \"uint16\",\n          \"fade\",\n          \"float32\",\n          \"fieldDirection\",\n          [\"[]\", \"float32\", 3],\n          \"flags\",\n          \"uint8\",\n          \"lifetime\",\n          \"float32\",\n          \"opacity\",\n          [\"[]\", \"float32\", 2],\n          \"particleCount\",\n          \"uint16\",\n          \"period\",\n          \"float32\",\n          \"rotation\",\n          [\"[]\", \"float32\", 2],\n          \"scaleX\",\n          [\"[]\", \"float32\", 2],\n          \"scaleY\",\n          [\"[]\", \"float32\", 2],\n          \"speed\",\n          [\"[]\", \"float32\", 2],\n          \"texColRow\",\n          [\"[]\", \"uint32\", 2],\n          \"texFPS\",\n          \"uint16\",\n          \"texPath\",\n          Utils.getFileNameReader(),\n          \"type\",\n          \"uint8\",\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataPFieldCutoutV22 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"x\",\n          [\"[]\", \"float32\", 4],\n          \"y\",\n          [\"[]\", \"float32\", 4],\n          \"z\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.PackMapEnvDataSkyV51 = [\n          \"flags\",\n          \"uint8\",\n          \"dayBrightness\",\n          \"float32\",\n          \"dayHazeBottom\",\n          \"float32\",\n          \"dayHazeDensity\",\n          \"float32\",\n          \"dayHazeFalloff\",\n          \"float32\",\n          \"dayLightIntensity\",\n          \"float32\",\n          \"dayStarDensity\",\n          \"float32\",\n          \"nightBrightness\",\n          \"float32\",\n          \"nightHazeBottom\",\n          \"float32\",\n          \"nightHazeDensity\",\n          \"float32\",\n          \"nightHazeFalloff\",\n          \"float32\",\n          \"nightLightIntensity\",\n          \"float32\",\n          \"nightStarDensity\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataSkyCardAttributesV51 = [\n          \"azimuth\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"hazeDensity\",\n          \"float32\",\n          \"latitude\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"minHaze\",\n          \"float32\",\n          \"scale\",\n          [\"[]\", \"float32\", 2],\n          \"speed\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"textureUV\",\n          [\"[]\", \"float32\", 4],\n          \"brightness\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataSkyCardV51 = [\n          \"day\",\n          this.PackMapEnvDataSkyCardAttributesV51,\n          \"night\",\n          this.PackMapEnvDataSkyCardAttributesV51,\n          \"flags\",\n          \"uint32\",\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataSkyCardsV51 = [\"cards\", Utils.getArrayReader(this.PackMapEnvDataSkyCardV51)];\n\n        this.PackMapEnvDataWaterV51 = [\n          \"waterFlags\",\n          \"uint32\",\n          \"animAmplitude\",\n          \"float32\",\n          \"animChoppiness\",\n          \"float32\",\n          \"animWind\",\n          [\"[]\", \"float32\", 2],\n          \"bumpAmount\",\n          \"float32\",\n          \"bumpAngle0\",\n          \"float32\",\n          \"bumpAngle1\",\n          \"float32\",\n          \"bumpScale0\",\n          \"float32\",\n          \"bumpScale1\",\n          \"float32\",\n          \"bumpSpeed0\",\n          \"float32\",\n          \"bumpSpeed1\",\n          \"float32\",\n          \"bumpTile0\",\n          \"float32\",\n          \"bumpTile1\",\n          \"float32\",\n          \"patternAngle\",\n          \"float32\",\n          \"patternTile\",\n          \"float32\",\n          \"patternSpeed\",\n          \"float32\",\n          \"patternEdge\",\n          \"float32\",\n          \"surfaceShallowColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceDeepColor\",\n          [\"[]\", \"uint8\", 4],\n          \"patternColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceFresnel\",\n          \"float32\",\n          \"distortAmount\",\n          \"float32\",\n          \"depthAttenuation\",\n          \"float32\",\n          \"materialFilename\",\n          Utils.getFileNameReader(),\n          \"textureFilenames\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"constantTokens\",\n          Utils.getArrayReader(\"uint32\"),\n          \"constantValues\",\n          Utils.getArrayReader([\"[]\", \"float32\", 4]),\n        ];\n\n        this.PackMapEnvDataWindV51 = [\n          \"azimuth\",\n          \"uint8\",\n          \"elevation\",\n          \"uint8\",\n          \"noise\",\n          \"uint8\",\n          \"speed\",\n          \"uint8\",\n          \"gust\",\n          \"uint8\",\n          \"gustFreq\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataLocalV51 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV51),\n          \"lightingCharGroups\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharGroupV22),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV51),\n          \"coloredLightRings\",\n          Utils.getRefArrayReader(this.PackMapEnvDataColoredLightRingsV22),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV51),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV51),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV51),\n          \"particleFieldCutouts\",\n          Utils.getArrayReader(this.PackMapEnvDataPFieldCutoutV22),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV51),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV51),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV51),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV51),\n          \"name\",\n          Utils.getString16Reader(),\n          \"nightMods\",\n          Utils.getArrayReader(\"uint8\"),\n          \"bindTarget\",\n          Utils.getQWordReader(),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"zRange\",\n          [\"[]\", \"float32\", 2],\n          \"fadeHorizInner\",\n          \"float32\",\n          \"fadeHorizOuter\",\n          \"float32\",\n          \"fadeVertical\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n          \"vertexArray\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n          \"guid\",\n          Utils.getQWordReader(),\n        ];\n\n        this.PackMapEnvDataSkyModeTexV51 = [\n          \"texPathNE\",\n          Utils.getFileNameReader(),\n          \"texPathSW\",\n          Utils.getFileNameReader(),\n          \"texPathT\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackMapEnvDataGlobalV51 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV51),\n          \"lightingCharGroups\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharGroupV22),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV51),\n          \"coloredLightRings\",\n          Utils.getRefArrayReader(this.PackMapEnvDataColoredLightRingsV22),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV51),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV51),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV51),\n          \"particleFieldCutouts\",\n          Utils.getArrayReader(this.PackMapEnvDataPFieldCutoutV22),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV51),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV51),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV51),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV51),\n          \"name\",\n          Utils.getString16Reader(),\n          \"nightMods\",\n          Utils.getArrayReader(\"uint8\"),\n          \"bindTarget\",\n          Utils.getQWordReader(),\n          \"skyModeTex\",\n          Utils.getArrayReader(this.PackMapEnvDataSkyModeTexV51),\n          \"starFile\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.__root = this.PackMapEnvironmentV51 = [\n          \"dataLocalArray\",\n          Utils.getArrayReader(this.PackMapEnvDataLocalV51),\n          \"dataGlobal\",\n          Utils.getPointerReader(this.PackMapEnvDataGlobalV51),\n        ];\n      },\n\n      // => Version: 50, ReferencedFunction: 0xEB8580\n      50: function () {\n        this.PackMapEnvDataLightV50 = [\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"intensity\",\n          \"float32\",\n          \"direction\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.PackMapEnvDataLightingV50 = [\"lights\", Utils.getRefArrayReader(this.PackMapEnvDataLightV50)];\n\n        this.PackMapEnvDataLightingCharV21 = [\n          \"sunScale\",\n          \"float32\",\n          \"saturation\",\n          \"float32\",\n          \"sunFill\",\n          \"float32\",\n          \"ambScale\",\n          \"float32\",\n          \"ambFill\",\n          \"float32\",\n          \"flags\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataLightingCharGroupV21 = [\n          \"lightingChar\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharV21),\n        ];\n\n        this.PackMapEnvDataLayerAttributesV50 = [\n          \"brightness\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"haze\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"velocity\",\n          [\"[]\", \"float32\", 2],\n          \"fadeWidth\",\n          \"float32\",\n          \"fadeEnd\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataLayerV50 = [\n          \"altitude\",\n          \"float32\",\n          \"cutOut\",\n          \"float32\",\n          \"depth\",\n          \"float32\",\n          \"extent\",\n          \"float32\",\n          \"scale\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"attributes\",\n          Utils.getArrayReader(this.PackMapEnvDataLayerAttributesV50),\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataCloudsV50 = [\"layers\", Utils.getArrayReader(this.PackMapEnvDataLayerV50)];\n\n        this.PackMapEnvDataColoredLightRingsV21 = [\n          \"range\",\n          [\"[]\", \"float32\", 2],\n          \"distances\",\n          [\"[]\", \"float32\", 6],\n          \"lightColors\",\n          [\"[]\", [\"[]\", \"uint8\", 4], 6],\n          \"shadowColors\",\n          [\"[]\", [\"[]\", \"uint8\", 4], 6],\n        ];\n\n        this.PackMapEnvDataEffectV50 = [\n          \"glow\",\n          [\"[]\", \"uint8\", 4],\n          \"tintColor\",\n          [\"[]\", \"uint8\", 4],\n          \"tintTargetColor\",\n          [\"[]\", \"uint8\", 4],\n          \"saturation\",\n          \"float32\",\n          \"tintAmount\",\n          \"float32\",\n          \"tintFocus\",\n          \"float32\",\n          \"glowLevel\",\n          [\"[]\", \"uint8\", 4],\n          \"glowAmplify\",\n          \"float32\",\n          \"focalDepth\",\n          \"float32\",\n          \"focalRange\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataHazeV50 = [\n          \"distColor\",\n          [\"[]\", \"uint8\", 4],\n          \"distRange\",\n          [\"[]\", \"float32\", 2],\n          \"heightColor\",\n          [\"[]\", \"uint8\", 4],\n          \"heightRange\",\n          [\"[]\", \"float32\", 2],\n          \"depthCue\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataPFieldV50 = [\n          \"altitude\",\n          \"float32\",\n          \"angle\",\n          [\"[]\", \"float32\", 2],\n          \"depth\",\n          \"float32\",\n          \"deviation\",\n          \"float32\",\n          \"extent\",\n          \"uint16\",\n          \"fade\",\n          \"float32\",\n          \"fieldDirection\",\n          [\"[]\", \"float32\", 3],\n          \"flags\",\n          \"uint8\",\n          \"opacity\",\n          [\"[]\", \"float32\", 2],\n          \"particleCount\",\n          \"uint16\",\n          \"rotation\",\n          [\"[]\", \"float32\", 2],\n          \"scaleX\",\n          [\"[]\", \"float32\", 2],\n          \"scaleY\",\n          [\"[]\", \"float32\", 2],\n          \"speed\",\n          [\"[]\", \"float32\", 2],\n          \"texColRow\",\n          [\"[]\", \"uint32\", 2],\n          \"texFPS\",\n          \"uint16\",\n          \"texPath\",\n          Utils.getFileNameReader(),\n          \"type\",\n          \"uint8\",\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataPFieldCutoutV21 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"x\",\n          [\"[]\", \"float32\", 4],\n          \"y\",\n          [\"[]\", \"float32\", 4],\n          \"z\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.PackMapEnvDataSkyV50 = [\n          \"flags\",\n          \"uint8\",\n          \"dayBrightness\",\n          \"float32\",\n          \"dayHazeBottom\",\n          \"float32\",\n          \"dayHazeDensity\",\n          \"float32\",\n          \"dayHazeFalloff\",\n          \"float32\",\n          \"dayLightIntensity\",\n          \"float32\",\n          \"dayStarDensity\",\n          \"float32\",\n          \"nightBrightness\",\n          \"float32\",\n          \"nightHazeBottom\",\n          \"float32\",\n          \"nightHazeDensity\",\n          \"float32\",\n          \"nightHazeFalloff\",\n          \"float32\",\n          \"nightLightIntensity\",\n          \"float32\",\n          \"nightStarDensity\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataSkyCardAttributesV50 = [\n          \"azimuth\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"hazeDensity\",\n          \"float32\",\n          \"latitude\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"minHaze\",\n          \"float32\",\n          \"scale\",\n          [\"[]\", \"float32\", 2],\n          \"speed\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"textureUV\",\n          [\"[]\", \"float32\", 4],\n          \"brightness\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataSkyCardV50 = [\n          \"day\",\n          this.PackMapEnvDataSkyCardAttributesV50,\n          \"night\",\n          this.PackMapEnvDataSkyCardAttributesV50,\n          \"flags\",\n          \"uint32\",\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataSkyCardsV50 = [\"cards\", Utils.getArrayReader(this.PackMapEnvDataSkyCardV50)];\n\n        this.PackMapEnvDataWaterV50 = [\n          \"waterFlags\",\n          \"uint32\",\n          \"animAmplitude\",\n          \"float32\",\n          \"animChoppiness\",\n          \"float32\",\n          \"animWind\",\n          [\"[]\", \"float32\", 2],\n          \"bumpAmount\",\n          \"float32\",\n          \"bumpAngle0\",\n          \"float32\",\n          \"bumpAngle1\",\n          \"float32\",\n          \"bumpScale0\",\n          \"float32\",\n          \"bumpScale1\",\n          \"float32\",\n          \"bumpSpeed0\",\n          \"float32\",\n          \"bumpSpeed1\",\n          \"float32\",\n          \"bumpTile0\",\n          \"float32\",\n          \"bumpTile1\",\n          \"float32\",\n          \"patternAngle\",\n          \"float32\",\n          \"patternTile\",\n          \"float32\",\n          \"patternSpeed\",\n          \"float32\",\n          \"patternEdge\",\n          \"float32\",\n          \"surfaceShallowColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceDeepColor\",\n          [\"[]\", \"uint8\", 4],\n          \"patternColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceFresnel\",\n          \"float32\",\n          \"distortAmount\",\n          \"float32\",\n          \"depthAttenuation\",\n          \"float32\",\n          \"materialFilename\",\n          Utils.getFileNameReader(),\n          \"textureFilenames\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"constantTokens\",\n          Utils.getArrayReader(\"uint32\"),\n          \"constantValues\",\n          Utils.getArrayReader([\"[]\", \"float32\", 4]),\n        ];\n\n        this.PackMapEnvDataWindV50 = [\n          \"azimuth\",\n          \"uint8\",\n          \"elevation\",\n          \"uint8\",\n          \"noise\",\n          \"uint8\",\n          \"speed\",\n          \"uint8\",\n          \"gust\",\n          \"uint8\",\n          \"gustFreq\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataLocalV50 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV50),\n          \"lightingCharGroups\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharGroupV21),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV50),\n          \"coloredLightRings\",\n          Utils.getRefArrayReader(this.PackMapEnvDataColoredLightRingsV21),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV50),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV50),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV50),\n          \"particleFieldCutouts\",\n          Utils.getArrayReader(this.PackMapEnvDataPFieldCutoutV21),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV50),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV50),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV50),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV50),\n          \"name\",\n          Utils.getString16Reader(),\n          \"nightMods\",\n          Utils.getArrayReader(\"uint8\"),\n          \"bindTarget\",\n          Utils.getQWordReader(),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"zRange\",\n          [\"[]\", \"float32\", 2],\n          \"fadeHorizInner\",\n          \"float32\",\n          \"fadeHorizOuter\",\n          \"float32\",\n          \"fadeVertical\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n          \"vertexArray\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n          \"guid\",\n          Utils.getQWordReader(),\n        ];\n\n        this.PackMapEnvDataSkyModeTexV50 = [\n          \"texPathNE\",\n          Utils.getFileNameReader(),\n          \"texPathSW\",\n          Utils.getFileNameReader(),\n          \"texPathT\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackMapEnvDataGlobalV50 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV50),\n          \"lightingCharGroups\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharGroupV21),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV50),\n          \"coloredLightRings\",\n          Utils.getRefArrayReader(this.PackMapEnvDataColoredLightRingsV21),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV50),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV50),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV50),\n          \"particleFieldCutouts\",\n          Utils.getArrayReader(this.PackMapEnvDataPFieldCutoutV21),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV50),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV50),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV50),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV50),\n          \"name\",\n          Utils.getString16Reader(),\n          \"nightMods\",\n          Utils.getArrayReader(\"uint8\"),\n          \"bindTarget\",\n          Utils.getQWordReader(),\n          \"skyModeTex\",\n          Utils.getArrayReader(this.PackMapEnvDataSkyModeTexV50),\n          \"starFile\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.__root = this.PackMapEnvironmentV50 = [\n          \"dataLocalArray\",\n          Utils.getArrayReader(this.PackMapEnvDataLocalV50),\n          \"dataGlobal\",\n          Utils.getPointerReader(this.PackMapEnvDataGlobalV50),\n        ];\n      },\n\n      // => Version: 49, ReferencedFunction: 0xEB8430\n      49: function () {\n        this.PackMapEnvDataLightV49 = [\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"intensity\",\n          \"float32\",\n          \"direction\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.PackMapEnvDataLightingV49 = [\"lights\", Utils.getRefArrayReader(this.PackMapEnvDataLightV49)];\n\n        this.PackMapEnvDataLightingCharV20 = [\n          \"sunScale\",\n          \"float32\",\n          \"saturation\",\n          \"float32\",\n          \"sunFill\",\n          \"float32\",\n          \"ambScale\",\n          \"float32\",\n          \"ambFill\",\n          \"float32\",\n          \"flags\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataLightingCharGroupV20 = [\n          \"lightingChar\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharV20),\n        ];\n\n        this.PackMapEnvDataLayerAttributesV49 = [\n          \"brightness\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"haze\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"velocity\",\n          [\"[]\", \"float32\", 2],\n          \"fadeWidth\",\n          \"float32\",\n          \"fadeEnd\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataLayerV49 = [\n          \"altitude\",\n          \"float32\",\n          \"cutOut\",\n          \"float32\",\n          \"depth\",\n          \"float32\",\n          \"extent\",\n          \"float32\",\n          \"scale\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"attributes\",\n          Utils.getArrayReader(this.PackMapEnvDataLayerAttributesV49),\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataCloudsV49 = [\"layers\", Utils.getArrayReader(this.PackMapEnvDataLayerV49)];\n\n        this.PackMapEnvDataColoredLightRingsV20 = [\n          \"range\",\n          [\"[]\", \"float32\", 2],\n          \"colors\",\n          [\"[]\", [\"[]\", \"uint8\", 4], 6],\n          \"distances\",\n          [\"[]\", \"float32\", 6],\n        ];\n\n        this.PackMapEnvDataEffectV49 = [\n          \"glow\",\n          [\"[]\", \"uint8\", 4],\n          \"tintColor\",\n          [\"[]\", \"uint8\", 4],\n          \"tintTargetColor\",\n          [\"[]\", \"uint8\", 4],\n          \"saturation\",\n          \"float32\",\n          \"tintAmount\",\n          \"float32\",\n          \"tintFocus\",\n          \"float32\",\n          \"glowLevel\",\n          [\"[]\", \"uint8\", 4],\n          \"glowAmplify\",\n          \"float32\",\n          \"focalDepth\",\n          \"float32\",\n          \"focalRange\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataHazeV49 = [\n          \"distColor\",\n          [\"[]\", \"uint8\", 4],\n          \"distRange\",\n          [\"[]\", \"float32\", 2],\n          \"heightColor\",\n          [\"[]\", \"uint8\", 4],\n          \"heightRange\",\n          [\"[]\", \"float32\", 2],\n          \"depthCue\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataPFieldV49 = [\n          \"altitude\",\n          \"float32\",\n          \"angle\",\n          [\"[]\", \"float32\", 2],\n          \"depth\",\n          \"float32\",\n          \"deviation\",\n          \"float32\",\n          \"extent\",\n          \"uint16\",\n          \"fade\",\n          \"float32\",\n          \"fieldDirection\",\n          [\"[]\", \"float32\", 3],\n          \"flags\",\n          \"uint8\",\n          \"opacity\",\n          [\"[]\", \"float32\", 2],\n          \"particleCount\",\n          \"uint16\",\n          \"rotation\",\n          [\"[]\", \"float32\", 2],\n          \"scaleX\",\n          [\"[]\", \"float32\", 2],\n          \"scaleY\",\n          [\"[]\", \"float32\", 2],\n          \"speed\",\n          [\"[]\", \"float32\", 2],\n          \"texColRow\",\n          [\"[]\", \"uint32\", 2],\n          \"texFPS\",\n          \"uint16\",\n          \"texPath\",\n          Utils.getFileNameReader(),\n          \"type\",\n          \"uint8\",\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataPFieldCutoutV20 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"x\",\n          [\"[]\", \"float32\", 4],\n          \"y\",\n          [\"[]\", \"float32\", 4],\n          \"z\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.PackMapEnvDataSkyV49 = [\n          \"flags\",\n          \"uint8\",\n          \"dayBrightness\",\n          \"float32\",\n          \"dayHazeBottom\",\n          \"float32\",\n          \"dayHazeDensity\",\n          \"float32\",\n          \"dayHazeFalloff\",\n          \"float32\",\n          \"dayLightIntensity\",\n          \"float32\",\n          \"dayStarDensity\",\n          \"float32\",\n          \"nightBrightness\",\n          \"float32\",\n          \"nightHazeBottom\",\n          \"float32\",\n          \"nightHazeDensity\",\n          \"float32\",\n          \"nightHazeFalloff\",\n          \"float32\",\n          \"nightLightIntensity\",\n          \"float32\",\n          \"nightStarDensity\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataSkyCardAttributesV49 = [\n          \"azimuth\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"hazeDensity\",\n          \"float32\",\n          \"latitude\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"minHaze\",\n          \"float32\",\n          \"scale\",\n          [\"[]\", \"float32\", 2],\n          \"speed\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"textureUV\",\n          [\"[]\", \"float32\", 4],\n          \"brightness\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataSkyCardV49 = [\n          \"day\",\n          this.PackMapEnvDataSkyCardAttributesV49,\n          \"night\",\n          this.PackMapEnvDataSkyCardAttributesV49,\n          \"flags\",\n          \"uint32\",\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataSkyCardsV49 = [\"cards\", Utils.getArrayReader(this.PackMapEnvDataSkyCardV49)];\n\n        this.PackMapEnvDataWaterV49 = [\n          \"waterFlags\",\n          \"uint32\",\n          \"animAmplitude\",\n          \"float32\",\n          \"animChoppiness\",\n          \"float32\",\n          \"animWind\",\n          [\"[]\", \"float32\", 2],\n          \"bumpAmount\",\n          \"float32\",\n          \"bumpAngle0\",\n          \"float32\",\n          \"bumpAngle1\",\n          \"float32\",\n          \"bumpScale0\",\n          \"float32\",\n          \"bumpScale1\",\n          \"float32\",\n          \"bumpSpeed0\",\n          \"float32\",\n          \"bumpSpeed1\",\n          \"float32\",\n          \"bumpTile0\",\n          \"float32\",\n          \"bumpTile1\",\n          \"float32\",\n          \"patternAngle\",\n          \"float32\",\n          \"patternTile\",\n          \"float32\",\n          \"patternSpeed\",\n          \"float32\",\n          \"patternEdge\",\n          \"float32\",\n          \"surfaceShallowColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceDeepColor\",\n          [\"[]\", \"uint8\", 4],\n          \"patternColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceFresnel\",\n          \"float32\",\n          \"distortAmount\",\n          \"float32\",\n          \"depthAttenuation\",\n          \"float32\",\n          \"materialFilename\",\n          Utils.getFileNameReader(),\n          \"textureFilenames\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"constantTokens\",\n          Utils.getArrayReader(\"uint32\"),\n          \"constantValues\",\n          Utils.getArrayReader([\"[]\", \"float32\", 4]),\n        ];\n\n        this.PackMapEnvDataWindV49 = [\n          \"azimuth\",\n          \"uint8\",\n          \"elevation\",\n          \"uint8\",\n          \"noise\",\n          \"uint8\",\n          \"speed\",\n          \"uint8\",\n          \"gust\",\n          \"uint8\",\n          \"gustFreq\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataLocalV49 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV49),\n          \"lightingCharGroups\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharGroupV20),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV49),\n          \"coloredLightRings\",\n          Utils.getRefArrayReader(this.PackMapEnvDataColoredLightRingsV20),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV49),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV49),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV49),\n          \"particleFieldCutouts\",\n          Utils.getArrayReader(this.PackMapEnvDataPFieldCutoutV20),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV49),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV49),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV49),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV49),\n          \"name\",\n          Utils.getString16Reader(),\n          \"nightMods\",\n          Utils.getArrayReader(\"uint8\"),\n          \"bindTarget\",\n          Utils.getQWordReader(),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"zRange\",\n          [\"[]\", \"float32\", 2],\n          \"fadeHorizInner\",\n          \"float32\",\n          \"fadeHorizOuter\",\n          \"float32\",\n          \"fadeVertical\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n          \"vertexArray\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n          \"guid\",\n          Utils.getQWordReader(),\n        ];\n\n        this.PackMapEnvDataSkyModeTexV49 = [\n          \"texPathNE\",\n          Utils.getFileNameReader(),\n          \"texPathSW\",\n          Utils.getFileNameReader(),\n          \"texPathT\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackMapEnvDataGlobalV49 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV49),\n          \"lightingCharGroups\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharGroupV20),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV49),\n          \"coloredLightRings\",\n          Utils.getRefArrayReader(this.PackMapEnvDataColoredLightRingsV20),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV49),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV49),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV49),\n          \"particleFieldCutouts\",\n          Utils.getArrayReader(this.PackMapEnvDataPFieldCutoutV20),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV49),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV49),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV49),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV49),\n          \"name\",\n          Utils.getString16Reader(),\n          \"nightMods\",\n          Utils.getArrayReader(\"uint8\"),\n          \"bindTarget\",\n          Utils.getQWordReader(),\n          \"skyModeTex\",\n          Utils.getArrayReader(this.PackMapEnvDataSkyModeTexV49),\n          \"starFile\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.__root = this.PackMapEnvironmentV49 = [\n          \"dataLocalArray\",\n          Utils.getArrayReader(this.PackMapEnvDataLocalV49),\n          \"dataGlobal\",\n          Utils.getPointerReader(this.PackMapEnvDataGlobalV49),\n        ];\n      },\n\n      // => Version: 48\n      48: function () {\n        this.PackMapEnvDataLightV48 = [\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"intensity\",\n          \"float32\",\n          \"direction\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.PackMapEnvDataLightingV48 = [\"lights\", Utils.getRefArrayReader(this.PackMapEnvDataLightV48)];\n\n        this.PackMapEnvDataLightingCharV19 = [\n          \"sunScale\",\n          \"float32\",\n          \"saturation\",\n          \"float32\",\n          \"sunFill\",\n          \"float32\",\n          \"ambScale\",\n          \"float32\",\n          \"ambFill\",\n          \"float32\",\n          \"flags\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataLayerAttributesV48 = [\n          \"brightness\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"haze\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"velocity\",\n          [\"[]\", \"float32\", 2],\n          \"fadeWidth\",\n          \"float32\",\n          \"fadeEnd\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataLayerV48 = [\n          \"altitude\",\n          \"float32\",\n          \"cutOut\",\n          \"float32\",\n          \"depth\",\n          \"float32\",\n          \"extent\",\n          \"float32\",\n          \"scale\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"attributes\",\n          Utils.getArrayReader(this.PackMapEnvDataLayerAttributesV48),\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataCloudsV48 = [\"layers\", Utils.getArrayReader(this.PackMapEnvDataLayerV48)];\n\n        this.PackMapEnvDataColoredLightRingsV19 = [\n          \"range\",\n          [\"[]\", \"float32\", 2],\n          \"colors\",\n          [\"[]\", [\"[]\", \"uint8\", 4], 6],\n          \"distances\",\n          [\"[]\", \"float32\", 6],\n        ];\n\n        this.PackMapEnvDataEffectV48 = [\n          \"glow\",\n          [\"[]\", \"uint8\", 4],\n          \"tintColor\",\n          [\"[]\", \"uint8\", 4],\n          \"tintTargetColor\",\n          [\"[]\", \"uint8\", 4],\n          \"saturation\",\n          \"float32\",\n          \"tintAmount\",\n          \"float32\",\n          \"tintFocus\",\n          \"float32\",\n          \"glowLevel\",\n          [\"[]\", \"uint8\", 4],\n          \"glowAmplify\",\n          \"float32\",\n          \"focalDepth\",\n          \"float32\",\n          \"focalRange\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataHazeV48 = [\n          \"distColor\",\n          [\"[]\", \"uint8\", 4],\n          \"distRange\",\n          [\"[]\", \"float32\", 2],\n          \"heightColor\",\n          [\"[]\", \"uint8\", 4],\n          \"heightRange\",\n          [\"[]\", \"float32\", 2],\n          \"depthCue\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataPFieldV48 = [\n          \"altitude\",\n          \"float32\",\n          \"angle\",\n          [\"[]\", \"float32\", 2],\n          \"depth\",\n          \"float32\",\n          \"deviation\",\n          \"float32\",\n          \"extent\",\n          \"uint16\",\n          \"fade\",\n          \"float32\",\n          \"fieldDirection\",\n          [\"[]\", \"float32\", 3],\n          \"flags\",\n          \"uint8\",\n          \"opacity\",\n          [\"[]\", \"float32\", 2],\n          \"particleCount\",\n          \"uint16\",\n          \"rotation\",\n          [\"[]\", \"float32\", 2],\n          \"scaleX\",\n          [\"[]\", \"float32\", 2],\n          \"scaleY\",\n          [\"[]\", \"float32\", 2],\n          \"speed\",\n          [\"[]\", \"float32\", 2],\n          \"texColRow\",\n          [\"[]\", \"uint32\", 2],\n          \"texFPS\",\n          \"uint16\",\n          \"texPath\",\n          Utils.getFileNameReader(),\n          \"type\",\n          \"uint8\",\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataPFieldCutoutV19 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"x\",\n          [\"[]\", \"float32\", 4],\n          \"y\",\n          [\"[]\", \"float32\", 4],\n          \"z\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.PackMapEnvDataSkyV48 = [\n          \"flags\",\n          \"uint8\",\n          \"dayBrightness\",\n          \"float32\",\n          \"dayHazeBottom\",\n          \"float32\",\n          \"dayHazeDensity\",\n          \"float32\",\n          \"dayHazeFalloff\",\n          \"float32\",\n          \"dayLightIntensity\",\n          \"float32\",\n          \"dayStarDensity\",\n          \"float32\",\n          \"nightBrightness\",\n          \"float32\",\n          \"nightHazeBottom\",\n          \"float32\",\n          \"nightHazeDensity\",\n          \"float32\",\n          \"nightHazeFalloff\",\n          \"float32\",\n          \"nightLightIntensity\",\n          \"float32\",\n          \"nightStarDensity\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataSkyCardAttributesV48 = [\n          \"azimuth\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"hazeDensity\",\n          \"float32\",\n          \"latitude\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"minHaze\",\n          \"float32\",\n          \"scale\",\n          [\"[]\", \"float32\", 2],\n          \"speed\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"textureUV\",\n          [\"[]\", \"float32\", 4],\n          \"brightness\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataSkyCardV48 = [\n          \"day\",\n          this.PackMapEnvDataSkyCardAttributesV48,\n          \"night\",\n          this.PackMapEnvDataSkyCardAttributesV48,\n          \"flags\",\n          \"uint32\",\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataSkyCardsV48 = [\"cards\", Utils.getArrayReader(this.PackMapEnvDataSkyCardV48)];\n\n        this.PackMapEnvDataWaterV48 = [\n          \"waterFlags\",\n          \"uint32\",\n          \"animAmplitude\",\n          \"float32\",\n          \"animChoppiness\",\n          \"float32\",\n          \"animWind\",\n          [\"[]\", \"float32\", 2],\n          \"bumpAmount\",\n          \"float32\",\n          \"bumpAngle0\",\n          \"float32\",\n          \"bumpAngle1\",\n          \"float32\",\n          \"bumpScale0\",\n          \"float32\",\n          \"bumpScale1\",\n          \"float32\",\n          \"bumpSpeed0\",\n          \"float32\",\n          \"bumpSpeed1\",\n          \"float32\",\n          \"bumpTile0\",\n          \"float32\",\n          \"bumpTile1\",\n          \"float32\",\n          \"patternAngle\",\n          \"float32\",\n          \"patternTile\",\n          \"float32\",\n          \"patternSpeed\",\n          \"float32\",\n          \"patternEdge\",\n          \"float32\",\n          \"surfaceShallowColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceDeepColor\",\n          [\"[]\", \"uint8\", 4],\n          \"patternColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceFresnel\",\n          \"float32\",\n          \"distortAmount\",\n          \"float32\",\n          \"depthAttenuation\",\n          \"float32\",\n          \"materialFilename\",\n          Utils.getFileNameReader(),\n          \"textureFilenames\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"constantTokens\",\n          Utils.getArrayReader(\"uint32\"),\n          \"constantValues\",\n          Utils.getArrayReader([\"[]\", \"float32\", 4]),\n        ];\n\n        this.PackMapEnvDataWindV48 = [\n          \"azimuth\",\n          \"uint8\",\n          \"elevation\",\n          \"uint8\",\n          \"noise\",\n          \"uint8\",\n          \"speed\",\n          \"uint8\",\n          \"gust\",\n          \"uint8\",\n          \"gustFreq\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataLocalV48 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV48),\n          \"lightingChar\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharV19),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV48),\n          \"coloredLightRings\",\n          Utils.getRefArrayReader(this.PackMapEnvDataColoredLightRingsV19),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV48),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV48),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV48),\n          \"particleFieldCutouts\",\n          Utils.getArrayReader(this.PackMapEnvDataPFieldCutoutV19),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV48),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV48),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV48),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV48),\n          \"name\",\n          Utils.getString16Reader(),\n          \"nightMods\",\n          Utils.getArrayReader(\"uint8\"),\n          \"bindTarget\",\n          Utils.getQWordReader(),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"zRange\",\n          [\"[]\", \"float32\", 2],\n          \"fadeHorizInner\",\n          \"float32\",\n          \"fadeHorizOuter\",\n          \"float32\",\n          \"fadeVertical\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n          \"vertexArray\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n          \"guid\",\n          Utils.getQWordReader(),\n        ];\n\n        this.PackMapEnvDataSkyModeTexV48 = [\n          \"texPathNE\",\n          Utils.getFileNameReader(),\n          \"texPathSW\",\n          Utils.getFileNameReader(),\n          \"texPathT\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackMapEnvDataGlobalV48 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV48),\n          \"lightingChar\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharV19),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV48),\n          \"coloredLightRings\",\n          Utils.getRefArrayReader(this.PackMapEnvDataColoredLightRingsV19),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV48),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV48),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV48),\n          \"particleFieldCutouts\",\n          Utils.getArrayReader(this.PackMapEnvDataPFieldCutoutV19),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV48),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV48),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV48),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV48),\n          \"name\",\n          Utils.getString16Reader(),\n          \"nightMods\",\n          Utils.getArrayReader(\"uint8\"),\n          \"bindTarget\",\n          Utils.getQWordReader(),\n          \"skyModeTex\",\n          Utils.getArrayReader(this.PackMapEnvDataSkyModeTexV48),\n          \"starFile\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.__root = this.PackMapEnvironmentV48 = [\n          \"dataLocalArray\",\n          Utils.getArrayReader(this.PackMapEnvDataLocalV48),\n          \"dataGlobal\",\n          Utils.getPointerReader(this.PackMapEnvDataGlobalV48),\n        ];\n      },\n\n      // => Version: 47\n      47: function () {\n        this.PackMapEnvDataLightV47 = [\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"intensity\",\n          \"float32\",\n          \"direction\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.PackMapEnvDataLightingV47 = [\"lights\", Utils.getRefArrayReader(this.PackMapEnvDataLightV47)];\n\n        this.PackMapEnvDataLightingCharV18 = [\n          \"sunScale\",\n          \"float32\",\n          \"saturation\",\n          \"float32\",\n          \"sunFill\",\n          \"float32\",\n          \"ambScale\",\n          \"float32\",\n          \"ambFill\",\n          \"float32\",\n          \"flags\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataLayerAttributesV47 = [\n          \"brightness\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"haze\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"velocity\",\n          [\"[]\", \"float32\", 2],\n          \"fadeWidth\",\n          \"float32\",\n          \"fadeEnd\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataLayerV47 = [\n          \"altitude\",\n          \"float32\",\n          \"cutOut\",\n          \"float32\",\n          \"depth\",\n          \"float32\",\n          \"extent\",\n          \"float32\",\n          \"scale\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"attributes\",\n          Utils.getArrayReader(this.PackMapEnvDataLayerAttributesV47),\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataCloudsV47 = [\"layers\", Utils.getArrayReader(this.PackMapEnvDataLayerV47)];\n\n        this.PackMapEnvDataColoredLightRingsV18 = [\n          \"range\",\n          [\"[]\", \"float32\", 2],\n          \"colors\",\n          [\"[]\", [\"[]\", \"uint8\", 4], 6],\n          \"distances\",\n          [\"[]\", \"float32\", 6],\n        ];\n\n        this.PackMapEnvDataEffectV47 = [\n          \"glow\",\n          [\"[]\", \"uint8\", 4],\n          \"tintColor\",\n          [\"[]\", \"uint8\", 4],\n          \"tintTargetColor\",\n          [\"[]\", \"uint8\", 4],\n          \"saturation\",\n          \"float32\",\n          \"tintAmount\",\n          \"float32\",\n          \"tintFocus\",\n          \"float32\",\n          \"glowLevel\",\n          [\"[]\", \"uint8\", 4],\n          \"glowAmplify\",\n          \"float32\",\n          \"focalDepth\",\n          \"float32\",\n          \"focalRange\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataHazeV47 = [\n          \"distColor\",\n          [\"[]\", \"uint8\", 4],\n          \"distRange\",\n          [\"[]\", \"float32\", 2],\n          \"heightColor\",\n          [\"[]\", \"uint8\", 4],\n          \"heightRange\",\n          [\"[]\", \"float32\", 2],\n          \"depthCue\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataPFieldV47 = [\n          \"altitude\",\n          \"float32\",\n          \"angle\",\n          [\"[]\", \"float32\", 2],\n          \"depth\",\n          \"float32\",\n          \"deviation\",\n          \"float32\",\n          \"extent\",\n          \"uint16\",\n          \"fade\",\n          \"float32\",\n          \"fieldDirection\",\n          [\"[]\", \"float32\", 3],\n          \"flags\",\n          \"uint8\",\n          \"opacity\",\n          [\"[]\", \"float32\", 2],\n          \"particleCount\",\n          \"uint16\",\n          \"rotation\",\n          [\"[]\", \"float32\", 2],\n          \"scaleX\",\n          [\"[]\", \"float32\", 2],\n          \"scaleY\",\n          [\"[]\", \"float32\", 2],\n          \"speed\",\n          [\"[]\", \"float32\", 2],\n          \"texColRow\",\n          [\"[]\", \"uint32\", 2],\n          \"texFPS\",\n          \"uint16\",\n          \"texPath\",\n          Utils.getFileNameReader(),\n          \"type\",\n          \"uint8\",\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataPFieldCutoutV18 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"x\",\n          [\"[]\", \"float32\", 4],\n          \"y\",\n          [\"[]\", \"float32\", 4],\n          \"z\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.PackMapEnvDataSkyV47 = [\n          \"flags\",\n          \"uint8\",\n          \"dayBrightness\",\n          \"float32\",\n          \"dayHazeBottom\",\n          \"float32\",\n          \"dayHazeDensity\",\n          \"float32\",\n          \"dayHazeFalloff\",\n          \"float32\",\n          \"dayLightIntensity\",\n          \"float32\",\n          \"dayStarDensity\",\n          \"float32\",\n          \"nightBrightness\",\n          \"float32\",\n          \"nightHazeBottom\",\n          \"float32\",\n          \"nightHazeDensity\",\n          \"float32\",\n          \"nightHazeFalloff\",\n          \"float32\",\n          \"nightLightIntensity\",\n          \"float32\",\n          \"nightStarDensity\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataSkyCardAttributesV47 = [\n          \"azimuth\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"hazeDensity\",\n          \"float32\",\n          \"latitude\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"minHaze\",\n          \"float32\",\n          \"scale\",\n          [\"[]\", \"float32\", 2],\n          \"speed\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"textureUV\",\n          [\"[]\", \"float32\", 4],\n          \"brightness\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataSkyCardV47 = [\n          \"day\",\n          this.PackMapEnvDataSkyCardAttributesV47,\n          \"night\",\n          this.PackMapEnvDataSkyCardAttributesV47,\n          \"flags\",\n          \"uint32\",\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataSkyCardsV47 = [\"cards\", Utils.getArrayReader(this.PackMapEnvDataSkyCardV47)];\n\n        this.PackMapEnvDataWaterV47 = [\n          \"waterFlags\",\n          \"uint32\",\n          \"animAmplitude\",\n          \"float32\",\n          \"animChoppiness\",\n          \"float32\",\n          \"animWind\",\n          [\"[]\", \"float32\", 2],\n          \"bumpAmount\",\n          \"float32\",\n          \"bumpAngle0\",\n          \"float32\",\n          \"bumpAngle1\",\n          \"float32\",\n          \"bumpScale0\",\n          \"float32\",\n          \"bumpScale1\",\n          \"float32\",\n          \"bumpSpeed0\",\n          \"float32\",\n          \"bumpSpeed1\",\n          \"float32\",\n          \"bumpTile0\",\n          \"float32\",\n          \"bumpTile1\",\n          \"float32\",\n          \"patternAngle\",\n          \"float32\",\n          \"patternTile\",\n          \"float32\",\n          \"patternSpeed\",\n          \"float32\",\n          \"patternEdge\",\n          \"float32\",\n          \"surfaceShallowColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceDeepColor\",\n          [\"[]\", \"uint8\", 4],\n          \"patternColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceFresnel\",\n          \"float32\",\n          \"distortAmount\",\n          \"float32\",\n          \"depthAttenuation\",\n          \"float32\",\n          \"materialFilename\",\n          Utils.getFileNameReader(),\n          \"textureFilenames\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"constantTokens\",\n          Utils.getArrayReader(\"uint32\"),\n          \"constantValues\",\n          Utils.getArrayReader([\"[]\", \"float32\", 4]),\n        ];\n\n        this.PackMapEnvDataWindV47 = [\n          \"azimuth\",\n          \"uint8\",\n          \"elevation\",\n          \"uint8\",\n          \"noise\",\n          \"uint8\",\n          \"speed\",\n          \"uint8\",\n          \"gust\",\n          \"uint8\",\n          \"gustFreq\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataLocalV47 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV47),\n          \"lightingChar\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharV18),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV47),\n          \"coloredLightRings\",\n          Utils.getRefArrayReader(this.PackMapEnvDataColoredLightRingsV18),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV47),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV47),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV47),\n          \"particleFieldCutouts\",\n          Utils.getArrayReader(this.PackMapEnvDataPFieldCutoutV18),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV47),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV47),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV47),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV47),\n          \"name\",\n          Utils.getString16Reader(),\n          \"nightMods\",\n          Utils.getArrayReader(\"uint8\"),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"zRange\",\n          [\"[]\", \"float32\", 2],\n          \"fadeHorizInner\",\n          \"float32\",\n          \"fadeHorizOuter\",\n          \"float32\",\n          \"fadeVertical\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n          \"vertexArray\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n          \"guid\",\n          Utils.getQWordReader(),\n        ];\n\n        this.PackMapEnvDataSkyModeTexV47 = [\n          \"texPathNE\",\n          Utils.getFileNameReader(),\n          \"texPathSW\",\n          Utils.getFileNameReader(),\n          \"texPathT\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackMapEnvDataGlobalV47 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV47),\n          \"lightingChar\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharV18),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV47),\n          \"coloredLightRings\",\n          Utils.getRefArrayReader(this.PackMapEnvDataColoredLightRingsV18),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV47),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV47),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV47),\n          \"particleFieldCutouts\",\n          Utils.getArrayReader(this.PackMapEnvDataPFieldCutoutV18),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV47),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV47),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV47),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV47),\n          \"name\",\n          Utils.getString16Reader(),\n          \"nightMods\",\n          Utils.getArrayReader(\"uint8\"),\n          \"skyModeTex\",\n          Utils.getArrayReader(this.PackMapEnvDataSkyModeTexV47),\n          \"starFile\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.__root = this.PackMapEnvironmentV47 = [\n          \"dataLocalArray\",\n          Utils.getArrayReader(this.PackMapEnvDataLocalV47),\n          \"dataGlobal\",\n          Utils.getPointerReader(this.PackMapEnvDataGlobalV47),\n        ];\n      },\n\n      // => Version: 46\n      46: function () {\n        this.PackMapEnvDataLightV46 = [\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"intensity\",\n          \"float32\",\n          \"direction\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.PackMapEnvDataLightingV46 = [\"lights\", Utils.getRefArrayReader(this.PackMapEnvDataLightV46)];\n\n        this.PackMapEnvDataLightingCharV17 = [\n          \"sunScale\",\n          \"float32\",\n          \"saturation\",\n          \"float32\",\n          \"sunFill\",\n          \"float32\",\n          \"ambScale\",\n          \"float32\",\n          \"ambFill\",\n          \"float32\",\n          \"flags\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataLayerAttributesV46 = [\n          \"brightness\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"haze\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"velocity\",\n          [\"[]\", \"float32\", 2],\n          \"fadeWidth\",\n          \"float32\",\n          \"fadeEnd\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataLayerV46 = [\n          \"altitude\",\n          \"float32\",\n          \"cutOut\",\n          \"float32\",\n          \"depth\",\n          \"float32\",\n          \"extent\",\n          \"float32\",\n          \"scale\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"attributes\",\n          Utils.getArrayReader(this.PackMapEnvDataLayerAttributesV46),\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataCloudsV46 = [\"layers\", Utils.getArrayReader(this.PackMapEnvDataLayerV46)];\n\n        this.PackMapEnvDataColoredLightRingsV17 = [\n          \"range\",\n          [\"[]\", \"float32\", 2],\n          \"colors\",\n          [\"[]\", [\"[]\", \"uint8\", 4], 6],\n          \"distances\",\n          [\"[]\", \"float32\", 6],\n        ];\n\n        this.PackMapEnvDataEffectV46 = [\n          \"glow\",\n          [\"[]\", \"uint8\", 4],\n          \"tintColor\",\n          [\"[]\", \"uint8\", 4],\n          \"tintTargetColor\",\n          [\"[]\", \"uint8\", 4],\n          \"saturation\",\n          \"float32\",\n          \"tintAmount\",\n          \"float32\",\n          \"tintFocus\",\n          \"float32\",\n          \"glowLevel\",\n          [\"[]\", \"uint8\", 4],\n          \"glowAmplify\",\n          \"float32\",\n          \"focalDepth\",\n          \"float32\",\n          \"focalRange\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataHazeV46 = [\n          \"distColor\",\n          [\"[]\", \"uint8\", 4],\n          \"distRange\",\n          [\"[]\", \"float32\", 2],\n          \"heightColor\",\n          [\"[]\", \"uint8\", 4],\n          \"heightRange\",\n          [\"[]\", \"float32\", 2],\n          \"depthCue\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataPFieldV46 = [\n          \"altitude\",\n          \"float32\",\n          \"angle\",\n          [\"[]\", \"float32\", 2],\n          \"depth\",\n          \"float32\",\n          \"deviation\",\n          \"float32\",\n          \"extent\",\n          \"uint16\",\n          \"fade\",\n          \"float32\",\n          \"fieldDirection\",\n          [\"[]\", \"float32\", 3],\n          \"flags\",\n          \"uint8\",\n          \"opacity\",\n          [\"[]\", \"float32\", 2],\n          \"particleCount\",\n          \"uint16\",\n          \"rotation\",\n          [\"[]\", \"float32\", 2],\n          \"scaleX\",\n          [\"[]\", \"float32\", 2],\n          \"scaleY\",\n          [\"[]\", \"float32\", 2],\n          \"speed\",\n          [\"[]\", \"float32\", 2],\n          \"texColRow\",\n          [\"[]\", \"uint32\", 2],\n          \"texFPS\",\n          \"uint16\",\n          \"texPath\",\n          Utils.getFileNameReader(),\n          \"type\",\n          \"uint8\",\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataPFieldCutoutV17 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"x\",\n          [\"[]\", \"float32\", 4],\n          \"y\",\n          [\"[]\", \"float32\", 4],\n          \"z\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.PackMapEnvDataSkyV46 = [\n          \"flags\",\n          \"uint8\",\n          \"dayBrightness\",\n          \"float32\",\n          \"dayHazeBottom\",\n          \"float32\",\n          \"dayHazeDensity\",\n          \"float32\",\n          \"dayHazeFalloff\",\n          \"float32\",\n          \"dayLightIntensity\",\n          \"float32\",\n          \"dayStarDensity\",\n          \"float32\",\n          \"nightBrightness\",\n          \"float32\",\n          \"nightHazeBottom\",\n          \"float32\",\n          \"nightHazeDensity\",\n          \"float32\",\n          \"nightHazeFalloff\",\n          \"float32\",\n          \"nightLightIntensity\",\n          \"float32\",\n          \"nightStarDensity\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataSkyCardAttributesV46 = [\n          \"azimuth\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"hazeDensity\",\n          \"float32\",\n          \"latitude\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"minHaze\",\n          \"float32\",\n          \"scale\",\n          [\"[]\", \"float32\", 2],\n          \"speed\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"textureUV\",\n          [\"[]\", \"float32\", 4],\n          \"brightness\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataSkyCardV46 = [\n          \"day\",\n          this.PackMapEnvDataSkyCardAttributesV46,\n          \"night\",\n          this.PackMapEnvDataSkyCardAttributesV46,\n          \"flags\",\n          \"uint32\",\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataSkyCardsV46 = [\"cards\", Utils.getArrayReader(this.PackMapEnvDataSkyCardV46)];\n\n        this.PackMapEnvDataWaterV46 = [\n          \"waterFlags\",\n          \"uint32\",\n          \"animAmplitude\",\n          \"float32\",\n          \"animChoppiness\",\n          \"float32\",\n          \"animWind\",\n          [\"[]\", \"float32\", 2],\n          \"bumpAmount\",\n          \"float32\",\n          \"bumpAngle0\",\n          \"float32\",\n          \"bumpAngle1\",\n          \"float32\",\n          \"bumpScale0\",\n          \"float32\",\n          \"bumpScale1\",\n          \"float32\",\n          \"bumpSpeed0\",\n          \"float32\",\n          \"bumpSpeed1\",\n          \"float32\",\n          \"bumpTile0\",\n          \"float32\",\n          \"bumpTile1\",\n          \"float32\",\n          \"patternAngle\",\n          \"float32\",\n          \"patternTile\",\n          \"float32\",\n          \"patternSpeed\",\n          \"float32\",\n          \"patternEdge\",\n          \"float32\",\n          \"surfaceShallowColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceDeepColor\",\n          [\"[]\", \"uint8\", 4],\n          \"patternColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceFresnel\",\n          \"float32\",\n          \"distortAmount\",\n          \"float32\",\n          \"depthAttenuation\",\n          \"float32\",\n          \"materialFilename\",\n          Utils.getFileNameReader(),\n          \"textureFilenames\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"constantTokens\",\n          Utils.getArrayReader(\"uint32\"),\n          \"constantValues\",\n          Utils.getArrayReader([\"[]\", \"float32\", 4]),\n        ];\n\n        this.PackMapEnvDataWindV46 = [\n          \"azimuth\",\n          \"uint8\",\n          \"elevation\",\n          \"uint8\",\n          \"noise\",\n          \"uint8\",\n          \"speed\",\n          \"uint8\",\n          \"gust\",\n          \"uint8\",\n          \"gustFreq\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataLocalV46 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV46),\n          \"lightingChar\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharV17),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV46),\n          \"coloredLightRings\",\n          Utils.getRefArrayReader(this.PackMapEnvDataColoredLightRingsV17),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV46),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV46),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV46),\n          \"particleFieldCutouts\",\n          Utils.getArrayReader(this.PackMapEnvDataPFieldCutoutV17),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV46),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV46),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV46),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV46),\n          \"name\",\n          Utils.getString16Reader(),\n          \"nightMods\",\n          Utils.getArrayReader(\"uint8\"),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"zRange\",\n          [\"[]\", \"float32\", 2],\n          \"fadeHorizInner\",\n          \"float32\",\n          \"fadeHorizOuter\",\n          \"float32\",\n          \"fadeVertical\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n          \"vertexArray\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n          \"guid\",\n          Utils.getQWordReader(),\n        ];\n\n        this.PackMapEnvDataSkyModeTexV46 = [\n          \"texPathNE\",\n          Utils.getFileNameReader(),\n          \"texPathSW\",\n          Utils.getFileNameReader(),\n          \"texPathT\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackMapEnvDataGlobalV46 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV46),\n          \"lightingChar\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharV17),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV46),\n          \"coloredLightRings\",\n          Utils.getRefArrayReader(this.PackMapEnvDataColoredLightRingsV17),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV46),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV46),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV46),\n          \"particleFieldCutouts\",\n          Utils.getArrayReader(this.PackMapEnvDataPFieldCutoutV17),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV46),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV46),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV46),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV46),\n          \"name\",\n          Utils.getString16Reader(),\n          \"nightMods\",\n          Utils.getArrayReader(\"uint8\"),\n          \"skyModeTex\",\n          Utils.getArrayReader(this.PackMapEnvDataSkyModeTexV46),\n          \"starFile\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.__root = this.PackMapEnvironmentV46 = [\n          \"dataLocalArray\",\n          Utils.getArrayReader(this.PackMapEnvDataLocalV46),\n          \"dataGlobal\",\n          Utils.getPointerReader(this.PackMapEnvDataGlobalV46),\n        ];\n      },\n\n      // => Version: 45\n      45: function () {\n        this.PackMapEnvDataLightV45 = [\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"intensity\",\n          \"float32\",\n          \"direction\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.PackMapEnvDataLightingV45 = [\"lights\", Utils.getRefArrayReader(this.PackMapEnvDataLightV45)];\n\n        this.PackMapEnvDataLightingCharV16 = [\n          \"sunScale\",\n          \"float32\",\n          \"saturation\",\n          \"float32\",\n          \"sunFill\",\n          \"float32\",\n          \"ambScale\",\n          \"float32\",\n          \"ambFill\",\n          \"float32\",\n          \"flags\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataLayerAttributesV45 = [\n          \"brightness\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"haze\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"velocity\",\n          [\"[]\", \"float32\", 2],\n          \"fadeWidth\",\n          \"float32\",\n          \"fadeEnd\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataLayerV45 = [\n          \"altitude\",\n          \"float32\",\n          \"cutOut\",\n          \"float32\",\n          \"depth\",\n          \"float32\",\n          \"extent\",\n          \"float32\",\n          \"scale\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"attributes\",\n          Utils.getArrayReader(this.PackMapEnvDataLayerAttributesV45),\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataCloudsV45 = [\"layers\", Utils.getArrayReader(this.PackMapEnvDataLayerV45)];\n\n        this.PackMapEnvDataColoredLightRingsV16 = [\n          \"range\",\n          [\"[]\", \"float32\", 2],\n          \"colors\",\n          [\"[]\", [\"[]\", \"uint8\", 4], 6],\n          \"distances\",\n          [\"[]\", \"float32\", 6],\n        ];\n\n        this.PackMapEnvDataEffectV45 = [\n          \"glow\",\n          [\"[]\", \"uint8\", 4],\n          \"tintColor\",\n          [\"[]\", \"uint8\", 4],\n          \"tintTargetColor\",\n          [\"[]\", \"uint8\", 4],\n          \"saturation\",\n          \"float32\",\n          \"tintAmount\",\n          \"float32\",\n          \"tintFocus\",\n          \"float32\",\n          \"glowLevel\",\n          [\"[]\", \"uint8\", 4],\n          \"glowAmplify\",\n          \"float32\",\n          \"focalDepth\",\n          \"float32\",\n          \"focalRange\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataHazeV45 = [\n          \"distColor\",\n          [\"[]\", \"uint8\", 4],\n          \"distRange\",\n          [\"[]\", \"float32\", 2],\n          \"heightColor\",\n          [\"[]\", \"uint8\", 4],\n          \"heightRange\",\n          [\"[]\", \"float32\", 2],\n          \"depthCue\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataPFieldV45 = [\n          \"altitude\",\n          \"float32\",\n          \"angle\",\n          [\"[]\", \"float32\", 2],\n          \"depth\",\n          \"float32\",\n          \"deviation\",\n          \"float32\",\n          \"extent\",\n          \"uint16\",\n          \"fade\",\n          \"float32\",\n          \"fieldDirection\",\n          [\"[]\", \"float32\", 3],\n          \"flags\",\n          \"uint8\",\n          \"opacity\",\n          [\"[]\", \"float32\", 2],\n          \"particleCount\",\n          \"uint16\",\n          \"rotation\",\n          [\"[]\", \"float32\", 2],\n          \"scaleX\",\n          [\"[]\", \"float32\", 2],\n          \"scaleY\",\n          [\"[]\", \"float32\", 2],\n          \"speed\",\n          [\"[]\", \"float32\", 2],\n          \"texColRow\",\n          [\"[]\", \"uint32\", 2],\n          \"texFPS\",\n          \"uint16\",\n          \"texPath\",\n          Utils.getFileNameReader(),\n          \"type\",\n          \"uint8\",\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataPFieldCutoutV16 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"x\",\n          [\"[]\", \"float32\", 4],\n          \"y\",\n          [\"[]\", \"float32\", 4],\n          \"z\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.PackMapEnvDataSkyV45 = [\n          \"flags\",\n          \"uint8\",\n          \"dayBrightness\",\n          \"float32\",\n          \"dayHazeBottom\",\n          \"float32\",\n          \"dayHazeDensity\",\n          \"float32\",\n          \"dayHazeFalloff\",\n          \"float32\",\n          \"dayLightIntensity\",\n          \"float32\",\n          \"dayStarDensity\",\n          \"float32\",\n          \"nightBrightness\",\n          \"float32\",\n          \"nightHazeBottom\",\n          \"float32\",\n          \"nightHazeDensity\",\n          \"float32\",\n          \"nightHazeFalloff\",\n          \"float32\",\n          \"nightLightIntensity\",\n          \"float32\",\n          \"nightStarDensity\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataSkyCardAttributesV45 = [\n          \"azimuth\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"hazeDensity\",\n          \"float32\",\n          \"latitude\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"minHaze\",\n          \"float32\",\n          \"scale\",\n          [\"[]\", \"float32\", 2],\n          \"speed\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"textureUV\",\n          [\"[]\", \"float32\", 4],\n          \"brightness\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataSkyCardV45 = [\n          \"day\",\n          this.PackMapEnvDataSkyCardAttributesV45,\n          \"night\",\n          this.PackMapEnvDataSkyCardAttributesV45,\n          \"flags\",\n          \"uint32\",\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataSkyCardsV45 = [\"cards\", Utils.getArrayReader(this.PackMapEnvDataSkyCardV45)];\n\n        this.PackMapEnvDataWaterV45 = [\n          \"waterFlags\",\n          \"uint32\",\n          \"animAmplitude\",\n          \"float32\",\n          \"animChoppiness\",\n          \"float32\",\n          \"animWind\",\n          [\"[]\", \"float32\", 2],\n          \"bumpAmount\",\n          \"float32\",\n          \"bumpAngle0\",\n          \"float32\",\n          \"bumpAngle1\",\n          \"float32\",\n          \"bumpScale0\",\n          \"float32\",\n          \"bumpScale1\",\n          \"float32\",\n          \"bumpSpeed0\",\n          \"float32\",\n          \"bumpSpeed1\",\n          \"float32\",\n          \"bumpTile0\",\n          \"float32\",\n          \"bumpTile1\",\n          \"float32\",\n          \"patternAngle\",\n          \"float32\",\n          \"patternTile\",\n          \"float32\",\n          \"patternSpeed\",\n          \"float32\",\n          \"patternEdge\",\n          \"float32\",\n          \"surfaceShallowColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceDeepColor\",\n          [\"[]\", \"uint8\", 4],\n          \"patternColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceFresnel\",\n          \"float32\",\n          \"distortAmount\",\n          \"float32\",\n          \"depthAttenuation\",\n          \"float32\",\n          \"materialFilename\",\n          Utils.getFileNameReader(),\n          \"textureFilenames\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"constantTokens\",\n          Utils.getArrayReader(\"uint32\"),\n          \"constantValues\",\n          Utils.getArrayReader([\"[]\", \"float32\", 4]),\n        ];\n\n        this.PackMapEnvDataWindV45 = [\n          \"azimuth\",\n          \"uint8\",\n          \"elevation\",\n          \"uint8\",\n          \"noise\",\n          \"uint8\",\n          \"speed\",\n          \"uint8\",\n          \"gust\",\n          \"uint8\",\n          \"gustFreq\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataLocalV45 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV45),\n          \"lightingChar\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharV16),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV45),\n          \"coloredLightRings\",\n          Utils.getRefArrayReader(this.PackMapEnvDataColoredLightRingsV16),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV45),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV45),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV45),\n          \"particleFieldCutouts\",\n          Utils.getArrayReader(this.PackMapEnvDataPFieldCutoutV16),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV45),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV45),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV45),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV45),\n          \"name\",\n          Utils.getString16Reader(),\n          \"nightMods\",\n          Utils.getArrayReader(\"uint8\"),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"zRange\",\n          [\"[]\", \"float32\", 2],\n          \"fadeHorizInner\",\n          \"float32\",\n          \"fadeHorizOuter\",\n          \"float32\",\n          \"fadeVertical\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n          \"vertexArray\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n          \"guid\",\n          Utils.getQWordReader(),\n        ];\n\n        this.PackMapEnvDataSkyModeTexV45 = [\n          \"texPathNE\",\n          Utils.getFileNameReader(),\n          \"texPathSW\",\n          Utils.getFileNameReader(),\n          \"texPathT\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackMapEnvDataGlobalV45 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV45),\n          \"lightingChar\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharV16),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV45),\n          \"coloredLightRings\",\n          Utils.getRefArrayReader(this.PackMapEnvDataColoredLightRingsV16),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV45),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV45),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV45),\n          \"particleFieldCutouts\",\n          Utils.getArrayReader(this.PackMapEnvDataPFieldCutoutV16),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV45),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV45),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV45),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV45),\n          \"name\",\n          Utils.getString16Reader(),\n          \"nightMods\",\n          Utils.getArrayReader(\"uint8\"),\n          \"skyModeTex\",\n          Utils.getArrayReader(this.PackMapEnvDataSkyModeTexV45),\n          \"starFile\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.__root = this.PackMapEnvironmentV45 = [\n          \"dataLocalArray\",\n          Utils.getArrayReader(this.PackMapEnvDataLocalV45),\n          \"dataGlobal\",\n          Utils.getPointerReader(this.PackMapEnvDataGlobalV45),\n        ];\n      },\n\n      // => Version: 44, ReferencedFunction: 0xEB8320\n      44: function () {\n        this.PackMapEnvDataLightV44 = [\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"intensity\",\n          \"float32\",\n          \"direction\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.PackMapEnvDataLightingV44 = [\"lights\", Utils.getRefArrayReader(this.PackMapEnvDataLightV44)];\n\n        this.PackMapEnvDataLightingCharV15 = [\n          \"sunScale\",\n          \"float32\",\n          \"saturation\",\n          \"float32\",\n          \"sunFill\",\n          \"float32\",\n          \"ambScale\",\n          \"float32\",\n          \"ambFill\",\n          \"float32\",\n          \"flags\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataLayerAttributesV44 = [\n          \"brightness\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"haze\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"velocity\",\n          [\"[]\", \"float32\", 2],\n          \"fadeWidth\",\n          \"float32\",\n          \"fadeEnd\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataLayerV44 = [\n          \"altitude\",\n          \"float32\",\n          \"cutOut\",\n          \"float32\",\n          \"depth\",\n          \"float32\",\n          \"extent\",\n          \"float32\",\n          \"scale\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"attributes\",\n          Utils.getArrayReader(this.PackMapEnvDataLayerAttributesV44),\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataCloudsV44 = [\"layers\", Utils.getArrayReader(this.PackMapEnvDataLayerV44)];\n\n        this.PackMapEnvDataColoredLightRingsV15 = [\n          \"range\",\n          [\"[]\", \"float32\", 2],\n          \"colors\",\n          [\"[]\", [\"[]\", \"uint8\", 4], 6],\n          \"distances\",\n          [\"[]\", \"float32\", 6],\n        ];\n\n        this.PackMapEnvDataEffectV44 = [\n          \"glow\",\n          [\"[]\", \"uint8\", 4],\n          \"tintColor\",\n          [\"[]\", \"uint8\", 4],\n          \"tintTargetColor\",\n          [\"[]\", \"uint8\", 4],\n          \"saturation\",\n          \"float32\",\n          \"tintAmount\",\n          \"float32\",\n          \"tintFocus\",\n          \"float32\",\n          \"glowLevel\",\n          [\"[]\", \"uint8\", 4],\n          \"glowAmplify\",\n          \"float32\",\n          \"focalDepth\",\n          \"float32\",\n          \"focalRange\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataHazeV44 = [\n          \"distColor\",\n          [\"[]\", \"uint8\", 4],\n          \"distRange\",\n          [\"[]\", \"float32\", 2],\n          \"heightColor\",\n          [\"[]\", \"uint8\", 4],\n          \"heightRange\",\n          [\"[]\", \"float32\", 2],\n          \"depthCue\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataPFieldV44 = [\n          \"altitude\",\n          \"float32\",\n          \"angle\",\n          [\"[]\", \"float32\", 2],\n          \"depth\",\n          \"float32\",\n          \"deviation\",\n          \"float32\",\n          \"extent\",\n          \"uint16\",\n          \"fade\",\n          \"float32\",\n          \"fieldDirection\",\n          [\"[]\", \"float32\", 3],\n          \"flags\",\n          \"uint8\",\n          \"opacity\",\n          [\"[]\", \"float32\", 2],\n          \"particleCount\",\n          \"uint16\",\n          \"rotation\",\n          [\"[]\", \"float32\", 2],\n          \"scaleX\",\n          [\"[]\", \"float32\", 2],\n          \"scaleY\",\n          [\"[]\", \"float32\", 2],\n          \"speed\",\n          [\"[]\", \"float32\", 2],\n          \"texColRow\",\n          [\"[]\", \"uint32\", 2],\n          \"texFPS\",\n          \"uint16\",\n          \"texPath\",\n          Utils.getFileNameReader(),\n          \"type\",\n          \"uint8\",\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataPFieldCutoutV15 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"x\",\n          [\"[]\", \"float32\", 4],\n          \"y\",\n          [\"[]\", \"float32\", 4],\n          \"z\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.PackMapEnvDataSkyV44 = [\n          \"flags\",\n          \"uint8\",\n          \"dayBrightness\",\n          \"float32\",\n          \"dayHazeBottom\",\n          \"float32\",\n          \"dayHazeDensity\",\n          \"float32\",\n          \"dayHazeFalloff\",\n          \"float32\",\n          \"dayLightIntensity\",\n          \"float32\",\n          \"dayStarDensity\",\n          \"float32\",\n          \"nightBrightness\",\n          \"float32\",\n          \"nightHazeBottom\",\n          \"float32\",\n          \"nightHazeDensity\",\n          \"float32\",\n          \"nightHazeFalloff\",\n          \"float32\",\n          \"nightLightIntensity\",\n          \"float32\",\n          \"nightStarDensity\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataSkyCardAttributesV44 = [\n          \"azimuth\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"hazeDensity\",\n          \"float32\",\n          \"latitude\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"minHaze\",\n          \"float32\",\n          \"scale\",\n          [\"[]\", \"float32\", 2],\n          \"speed\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"textureUV\",\n          [\"[]\", \"float32\", 4],\n          \"brightness\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataSkyCardV44 = [\n          \"day\",\n          this.PackMapEnvDataSkyCardAttributesV44,\n          \"night\",\n          this.PackMapEnvDataSkyCardAttributesV44,\n          \"flags\",\n          \"uint32\",\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataSkyCardsV44 = [\"cards\", Utils.getArrayReader(this.PackMapEnvDataSkyCardV44)];\n\n        this.PackMapEnvDataWaterV44 = [\n          \"waterFlags\",\n          \"uint32\",\n          \"animAmplitude\",\n          \"float32\",\n          \"animChoppiness\",\n          \"float32\",\n          \"animWind\",\n          [\"[]\", \"float32\", 2],\n          \"bumpAmount\",\n          \"float32\",\n          \"bumpAngle0\",\n          \"float32\",\n          \"bumpAngle1\",\n          \"float32\",\n          \"bumpScale0\",\n          \"float32\",\n          \"bumpScale1\",\n          \"float32\",\n          \"bumpSpeed0\",\n          \"float32\",\n          \"bumpSpeed1\",\n          \"float32\",\n          \"bumpTile0\",\n          \"float32\",\n          \"bumpTile1\",\n          \"float32\",\n          \"patternAngle\",\n          \"float32\",\n          \"patternTile\",\n          \"float32\",\n          \"patternSpeed\",\n          \"float32\",\n          \"patternEdge\",\n          \"float32\",\n          \"surfaceShallowColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceDeepColor\",\n          [\"[]\", \"uint8\", 4],\n          \"patternColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceFresnel\",\n          \"float32\",\n          \"distortAmount\",\n          \"float32\",\n          \"depthAttenuation\",\n          \"float32\",\n          \"materialFilename\",\n          Utils.getFileNameReader(),\n          \"textureFilenames\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"constantTokens\",\n          Utils.getArrayReader(\"uint32\"),\n          \"constantValues\",\n          Utils.getArrayReader([\"[]\", \"float32\", 4]),\n        ];\n\n        this.PackMapEnvDataWindV44 = [\n          \"azimuth\",\n          \"uint8\",\n          \"elevation\",\n          \"uint8\",\n          \"noise\",\n          \"uint8\",\n          \"speed\",\n          \"uint8\",\n          \"gust\",\n          \"uint8\",\n          \"gustFreq\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataLocalV44 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV44),\n          \"lightingChar\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharV15),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV44),\n          \"coloredLightRings\",\n          Utils.getRefArrayReader(this.PackMapEnvDataColoredLightRingsV15),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV44),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV44),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV44),\n          \"particleFieldCutouts\",\n          Utils.getArrayReader(this.PackMapEnvDataPFieldCutoutV15),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV44),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV44),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV44),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV44),\n          \"name\",\n          Utils.getString16Reader(),\n          \"nightMods\",\n          Utils.getArrayReader(\"uint8\"),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"zRange\",\n          [\"[]\", \"float32\", 2],\n          \"fadeHorizInner\",\n          \"float32\",\n          \"fadeHorizOuter\",\n          \"float32\",\n          \"fadeVertical\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n          \"vertexArray\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n          \"guid\",\n          Utils.getQWordReader(),\n        ];\n\n        this.PackMapEnvDataSkyModeTexV44 = [\n          \"texPathNE\",\n          Utils.getFileNameReader(),\n          \"texPathSW\",\n          Utils.getFileNameReader(),\n          \"texPathT\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackMapEnvDataGlobalV44 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV44),\n          \"lightingChar\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharV15),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV44),\n          \"coloredLightRings\",\n          Utils.getRefArrayReader(this.PackMapEnvDataColoredLightRingsV15),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV44),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV44),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV44),\n          \"particleFieldCutouts\",\n          Utils.getArrayReader(this.PackMapEnvDataPFieldCutoutV15),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV44),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV44),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV44),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV44),\n          \"name\",\n          Utils.getString16Reader(),\n          \"nightMods\",\n          Utils.getArrayReader(\"uint8\"),\n          \"skyModeTex\",\n          Utils.getArrayReader(this.PackMapEnvDataSkyModeTexV44),\n          \"starFile\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.__root = this.PackMapEnvironmentV44 = [\n          \"dataLocalArray\",\n          Utils.getArrayReader(this.PackMapEnvDataLocalV44),\n          \"dataGlobal\",\n          Utils.getPointerReader(this.PackMapEnvDataGlobalV44),\n        ];\n      },\n\n      // => Version: 43, ReferencedFunction: 0xEB8270\n      43: function () {\n        this.PackMapEnvDataLightV43 = [\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"intensity\",\n          \"float32\",\n          \"direction\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.PackMapEnvDataLightingV43 = [\"lights\", Utils.getRefArrayReader(this.PackMapEnvDataLightV43)];\n\n        this.PackMapEnvDataLightingCharV14 = [\n          \"sunScale\",\n          \"float32\",\n          \"saturation\",\n          \"float32\",\n          \"sunFill\",\n          \"float32\",\n          \"ambScale\",\n          \"float32\",\n          \"ambFill\",\n          \"float32\",\n          \"flags\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataLayerAttributesV43 = [\n          \"brightness\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"haze\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"velocity\",\n          [\"[]\", \"float32\", 2],\n          \"fadeWidth\",\n          \"float32\",\n          \"fadeEnd\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataLayerV43 = [\n          \"altitude\",\n          \"float32\",\n          \"cutOut\",\n          \"float32\",\n          \"depth\",\n          \"float32\",\n          \"extent\",\n          \"float32\",\n          \"scale\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"attributes\",\n          Utils.getArrayReader(this.PackMapEnvDataLayerAttributesV43),\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataCloudsV43 = [\"layers\", Utils.getArrayReader(this.PackMapEnvDataLayerV43)];\n\n        this.PackMapEnvDataEffectV43 = [\n          \"glow\",\n          [\"[]\", \"uint8\", 4],\n          \"tintColor\",\n          [\"[]\", \"uint8\", 4],\n          \"tintTargetColor\",\n          [\"[]\", \"uint8\", 4],\n          \"saturation\",\n          \"float32\",\n          \"tintAmount\",\n          \"float32\",\n          \"tintFocus\",\n          \"float32\",\n          \"glowLevel\",\n          [\"[]\", \"uint8\", 4],\n          \"glowAmplify\",\n          \"float32\",\n          \"focalDepth\",\n          \"float32\",\n          \"focalRange\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataHazeV43 = [\n          \"distColor\",\n          [\"[]\", \"uint8\", 4],\n          \"distRange\",\n          [\"[]\", \"float32\", 2],\n          \"heightColor\",\n          [\"[]\", \"uint8\", 4],\n          \"heightRange\",\n          [\"[]\", \"float32\", 2],\n          \"depthCue\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataPFieldV43 = [\n          \"altitude\",\n          \"float32\",\n          \"angle\",\n          [\"[]\", \"float32\", 2],\n          \"depth\",\n          \"float32\",\n          \"deviation\",\n          \"float32\",\n          \"extent\",\n          \"uint16\",\n          \"fade\",\n          \"float32\",\n          \"fieldDirection\",\n          [\"[]\", \"float32\", 3],\n          \"flags\",\n          \"uint8\",\n          \"opacity\",\n          [\"[]\", \"float32\", 2],\n          \"particleCount\",\n          \"uint16\",\n          \"rotation\",\n          [\"[]\", \"float32\", 2],\n          \"scaleX\",\n          [\"[]\", \"float32\", 2],\n          \"scaleY\",\n          [\"[]\", \"float32\", 2],\n          \"speed\",\n          [\"[]\", \"float32\", 2],\n          \"texColRow\",\n          [\"[]\", \"uint32\", 2],\n          \"texFPS\",\n          \"uint16\",\n          \"texPath\",\n          Utils.getFileNameReader(),\n          \"type\",\n          \"uint8\",\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataPFieldCutoutV14 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"x\",\n          [\"[]\", \"float32\", 4],\n          \"y\",\n          [\"[]\", \"float32\", 4],\n          \"z\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.PackMapEnvDataSkyV43 = [\n          \"flags\",\n          \"uint8\",\n          \"dayBrightness\",\n          \"float32\",\n          \"dayHazeBottom\",\n          \"float32\",\n          \"dayHazeDensity\",\n          \"float32\",\n          \"dayHazeFalloff\",\n          \"float32\",\n          \"dayLightIntensity\",\n          \"float32\",\n          \"dayStarDensity\",\n          \"float32\",\n          \"nightBrightness\",\n          \"float32\",\n          \"nightHazeBottom\",\n          \"float32\",\n          \"nightHazeDensity\",\n          \"float32\",\n          \"nightHazeFalloff\",\n          \"float32\",\n          \"nightLightIntensity\",\n          \"float32\",\n          \"nightStarDensity\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataSkyCardAttributesV43 = [\n          \"azimuth\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"hazeDensity\",\n          \"float32\",\n          \"latitude\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"minHaze\",\n          \"float32\",\n          \"scale\",\n          [\"[]\", \"float32\", 2],\n          \"speed\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"textureUV\",\n          [\"[]\", \"float32\", 4],\n          \"brightness\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataSkyCardV43 = [\n          \"day\",\n          this.PackMapEnvDataSkyCardAttributesV43,\n          \"night\",\n          this.PackMapEnvDataSkyCardAttributesV43,\n          \"flags\",\n          \"uint32\",\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataSkyCardsV43 = [\"cards\", Utils.getArrayReader(this.PackMapEnvDataSkyCardV43)];\n\n        this.PackMapEnvDataWaterV43 = [\n          \"waterFlags\",\n          \"uint32\",\n          \"animAmplitude\",\n          \"float32\",\n          \"animChoppiness\",\n          \"float32\",\n          \"animWind\",\n          [\"[]\", \"float32\", 2],\n          \"bumpAmount\",\n          \"float32\",\n          \"bumpAngle0\",\n          \"float32\",\n          \"bumpAngle1\",\n          \"float32\",\n          \"bumpScale0\",\n          \"float32\",\n          \"bumpScale1\",\n          \"float32\",\n          \"bumpSpeed0\",\n          \"float32\",\n          \"bumpSpeed1\",\n          \"float32\",\n          \"bumpTile0\",\n          \"float32\",\n          \"bumpTile1\",\n          \"float32\",\n          \"patternAngle\",\n          \"float32\",\n          \"patternTile\",\n          \"float32\",\n          \"patternSpeed\",\n          \"float32\",\n          \"patternEdge\",\n          \"float32\",\n          \"surfaceShallowColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceDeepColor\",\n          [\"[]\", \"uint8\", 4],\n          \"patternColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceFresnel\",\n          \"float32\",\n          \"distortAmount\",\n          \"float32\",\n          \"depthAttenuation\",\n          \"float32\",\n          \"materialFilename\",\n          Utils.getFileNameReader(),\n          \"textureFilenames\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"constantTokens\",\n          Utils.getArrayReader(\"uint32\"),\n          \"constantValues\",\n          Utils.getArrayReader([\"[]\", \"float32\", 4]),\n        ];\n\n        this.PackMapEnvDataWindV43 = [\n          \"azimuth\",\n          \"uint8\",\n          \"elevation\",\n          \"uint8\",\n          \"noise\",\n          \"uint8\",\n          \"speed\",\n          \"uint8\",\n          \"gust\",\n          \"uint8\",\n          \"gustFreq\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataLocalV43 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV43),\n          \"lightingChar\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharV14),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV43),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV43),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV43),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV43),\n          \"particleFieldCutouts\",\n          Utils.getArrayReader(this.PackMapEnvDataPFieldCutoutV14),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV43),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV43),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV43),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV43),\n          \"name\",\n          Utils.getString16Reader(),\n          \"nightMods\",\n          Utils.getArrayReader(\"uint8\"),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"zRange\",\n          [\"[]\", \"float32\", 2],\n          \"fadeHorizInner\",\n          \"float32\",\n          \"fadeHorizOuter\",\n          \"float32\",\n          \"fadeVertical\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n          \"vertexArray\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n          \"guid\",\n          Utils.getQWordReader(),\n        ];\n\n        this.PackMapEnvDataSkyModeTexV43 = [\n          \"texPathNE\",\n          Utils.getFileNameReader(),\n          \"texPathSW\",\n          Utils.getFileNameReader(),\n          \"texPathT\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackMapEnvDataGlobalV43 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV43),\n          \"lightingChar\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharV14),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV43),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV43),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV43),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV43),\n          \"particleFieldCutouts\",\n          Utils.getArrayReader(this.PackMapEnvDataPFieldCutoutV14),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV43),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV43),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV43),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV43),\n          \"name\",\n          Utils.getString16Reader(),\n          \"nightMods\",\n          Utils.getArrayReader(\"uint8\"),\n          \"skyModeTex\",\n          Utils.getArrayReader(this.PackMapEnvDataSkyModeTexV43),\n          \"starFile\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.__root = this.PackMapEnvironmentV43 = [\n          \"dataLocalArray\",\n          Utils.getArrayReader(this.PackMapEnvDataLocalV43),\n          \"dataGlobal\",\n          Utils.getPointerReader(this.PackMapEnvDataGlobalV43),\n        ];\n      },\n\n      // => Version: 42, ReferencedFunction: 0xEB81D0\n      42: function () {\n        this.PackMapEnvDataLightV42 = [\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"intensity\",\n          \"float32\",\n          \"direction\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.PackMapEnvDataLightingV42 = [\"lights\", Utils.getRefArrayReader(this.PackMapEnvDataLightV42)];\n\n        this.PackMapEnvDataLightingCharV13 = [\n          \"sunScale\",\n          \"float32\",\n          \"saturation\",\n          \"float32\",\n          \"sunFill\",\n          \"float32\",\n          \"ambScale\",\n          \"float32\",\n          \"ambFill\",\n          \"float32\",\n          \"flags\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataLayerAttributesV42 = [\n          \"brightness\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"haze\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"velocity\",\n          [\"[]\", \"float32\", 2],\n        ];\n\n        this.PackMapEnvDataLayerV42 = [\n          \"altitude\",\n          \"float32\",\n          \"cutOut\",\n          \"float32\",\n          \"depth\",\n          \"float32\",\n          \"extent\",\n          \"float32\",\n          \"scale\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"attributes\",\n          Utils.getArrayReader(this.PackMapEnvDataLayerAttributesV42),\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataCloudsV42 = [\"layers\", Utils.getArrayReader(this.PackMapEnvDataLayerV42)];\n\n        this.PackMapEnvDataEffectV42 = [\n          \"glow\",\n          [\"[]\", \"uint8\", 4],\n          \"tintColor\",\n          [\"[]\", \"uint8\", 4],\n          \"tintTargetColor\",\n          [\"[]\", \"uint8\", 4],\n          \"saturation\",\n          \"float32\",\n          \"tintAmount\",\n          \"float32\",\n          \"tintFocus\",\n          \"float32\",\n          \"glowLevel\",\n          [\"[]\", \"uint8\", 4],\n          \"glowAmplify\",\n          \"float32\",\n          \"focalDepth\",\n          \"float32\",\n          \"focalRange\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataHazeV42 = [\n          \"distColor\",\n          [\"[]\", \"uint8\", 4],\n          \"distRange\",\n          [\"[]\", \"float32\", 2],\n          \"heightColor\",\n          [\"[]\", \"uint8\", 4],\n          \"heightRange\",\n          [\"[]\", \"float32\", 2],\n          \"depthCue\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataPFieldV42 = [\n          \"altitude\",\n          \"float32\",\n          \"angle\",\n          [\"[]\", \"float32\", 2],\n          \"depth\",\n          \"float32\",\n          \"deviation\",\n          \"float32\",\n          \"extent\",\n          \"uint16\",\n          \"fade\",\n          \"float32\",\n          \"fieldDirection\",\n          [\"[]\", \"float32\", 3],\n          \"flags\",\n          \"uint8\",\n          \"opacity\",\n          [\"[]\", \"float32\", 2],\n          \"particleCount\",\n          \"uint16\",\n          \"rotation\",\n          [\"[]\", \"float32\", 2],\n          \"scaleX\",\n          [\"[]\", \"float32\", 2],\n          \"scaleY\",\n          [\"[]\", \"float32\", 2],\n          \"speed\",\n          [\"[]\", \"float32\", 2],\n          \"texColRow\",\n          [\"[]\", \"uint32\", 2],\n          \"texFPS\",\n          \"uint16\",\n          \"texPath\",\n          Utils.getFileNameReader(),\n          \"type\",\n          \"uint8\",\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataPFieldCutoutV13 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"x\",\n          [\"[]\", \"float32\", 4],\n          \"y\",\n          [\"[]\", \"float32\", 4],\n          \"z\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.PackMapEnvDataSkyV42 = [\n          \"flags\",\n          \"uint8\",\n          \"dayBrightness\",\n          \"float32\",\n          \"dayHazeBottom\",\n          \"float32\",\n          \"dayHazeDensity\",\n          \"float32\",\n          \"dayHazeFalloff\",\n          \"float32\",\n          \"dayLightIntensity\",\n          \"float32\",\n          \"dayStarDensity\",\n          \"float32\",\n          \"nightBrightness\",\n          \"float32\",\n          \"nightHazeBottom\",\n          \"float32\",\n          \"nightHazeDensity\",\n          \"float32\",\n          \"nightHazeFalloff\",\n          \"float32\",\n          \"nightLightIntensity\",\n          \"float32\",\n          \"nightStarDensity\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataSkyCardAttributesV42 = [\n          \"azimuth\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"hazeDensity\",\n          \"float32\",\n          \"latitude\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"minHaze\",\n          \"float32\",\n          \"scale\",\n          [\"[]\", \"float32\", 2],\n          \"speed\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"textureUV\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.PackMapEnvDataSkyCardV42 = [\n          \"day\",\n          this.PackMapEnvDataSkyCardAttributesV42,\n          \"night\",\n          this.PackMapEnvDataSkyCardAttributesV42,\n          \"flags\",\n          \"uint32\",\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataSkyCardsV42 = [\"cards\", Utils.getArrayReader(this.PackMapEnvDataSkyCardV42)];\n\n        this.PackMapEnvDataWaterV42 = [\n          \"waterFlags\",\n          \"uint32\",\n          \"animAmplitude\",\n          \"float32\",\n          \"animChoppiness\",\n          \"float32\",\n          \"animWind\",\n          [\"[]\", \"float32\", 2],\n          \"bumpAmount\",\n          \"float32\",\n          \"bumpAngle0\",\n          \"float32\",\n          \"bumpAngle1\",\n          \"float32\",\n          \"bumpScale0\",\n          \"float32\",\n          \"bumpScale1\",\n          \"float32\",\n          \"bumpSpeed0\",\n          \"float32\",\n          \"bumpSpeed1\",\n          \"float32\",\n          \"bumpTile0\",\n          \"float32\",\n          \"bumpTile1\",\n          \"float32\",\n          \"patternAngle\",\n          \"float32\",\n          \"patternTile\",\n          \"float32\",\n          \"patternSpeed\",\n          \"float32\",\n          \"patternEdge\",\n          \"float32\",\n          \"surfaceShallowColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceDeepColor\",\n          [\"[]\", \"uint8\", 4],\n          \"patternColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceFresnel\",\n          \"float32\",\n          \"distortAmount\",\n          \"float32\",\n          \"depthAttenuation\",\n          \"float32\",\n          \"materialFilename\",\n          Utils.getFileNameReader(),\n          \"textureFilenames\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n        ];\n\n        this.PackMapEnvDataWindV42 = [\n          \"azimuth\",\n          \"uint8\",\n          \"elevation\",\n          \"uint8\",\n          \"noise\",\n          \"uint8\",\n          \"speed\",\n          \"uint8\",\n          \"gust\",\n          \"uint8\",\n          \"gustFreq\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataLocalV42 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV42),\n          \"lightingChar\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharV13),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV42),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV42),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV42),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV42),\n          \"particleFieldCutouts\",\n          Utils.getArrayReader(this.PackMapEnvDataPFieldCutoutV13),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV42),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV42),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV42),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV42),\n          \"name\",\n          Utils.getString16Reader(),\n          \"nightMods\",\n          Utils.getArrayReader(\"uint8\"),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"zRange\",\n          [\"[]\", \"float32\", 2],\n          \"fadeHorizInner\",\n          \"float32\",\n          \"fadeHorizOuter\",\n          \"float32\",\n          \"fadeVertical\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n          \"vertexArray\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n          \"guid\",\n          Utils.getQWordReader(),\n        ];\n\n        this.PackMapEnvDataSkyModeTexV42 = [\n          \"texPathNE\",\n          Utils.getFileNameReader(),\n          \"texPathSW\",\n          Utils.getFileNameReader(),\n          \"texPathT\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackMapEnvDataGlobalV42 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV42),\n          \"lightingChar\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharV13),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV42),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV42),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV42),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV42),\n          \"particleFieldCutouts\",\n          Utils.getArrayReader(this.PackMapEnvDataPFieldCutoutV13),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV42),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV42),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV42),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV42),\n          \"name\",\n          Utils.getString16Reader(),\n          \"nightMods\",\n          Utils.getArrayReader(\"uint8\"),\n          \"skyModeTex\",\n          Utils.getArrayReader(this.PackMapEnvDataSkyModeTexV42),\n          \"starFile\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.__root = this.PackMapEnvironmentV42 = [\n          \"dataLocalArray\",\n          Utils.getArrayReader(this.PackMapEnvDataLocalV42),\n          \"dataGlobal\",\n          Utils.getPointerReader(this.PackMapEnvDataGlobalV42),\n        ];\n      },\n\n      // => Version: 41, ReferencedFunction: 0xEB80B0\n      41: function () {\n        this.PackMapEnvDataLightV41 = [\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"intensity\",\n          \"float32\",\n          \"direction\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.PackMapEnvDataLightingV41 = [\"lights\", Utils.getRefArrayReader(this.PackMapEnvDataLightV41)];\n\n        this.PackMapEnvDataLightingCharV12 = [\n          \"sunScale\",\n          \"float32\",\n          \"saturation\",\n          \"float32\",\n          \"sunFill\",\n          \"float32\",\n          \"ambScale\",\n          \"float32\",\n          \"ambFill\",\n          \"float32\",\n          \"flags\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataLayerAttributesV41 = [\n          \"density\",\n          \"float32\",\n          \"haze\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"velocity\",\n          [\"[]\", \"float32\", 2],\n        ];\n\n        this.PackMapEnvDataLayerV41 = [\n          \"altitude\",\n          \"float32\",\n          \"cutOut\",\n          \"float32\",\n          \"depth\",\n          \"float32\",\n          \"extent\",\n          \"float32\",\n          \"scale\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"attributes\",\n          Utils.getArrayReader(this.PackMapEnvDataLayerAttributesV41),\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataCloudsV41 = [\"layers\", Utils.getArrayReader(this.PackMapEnvDataLayerV41)];\n\n        this.PackMapEnvDataEffectV41 = [\n          \"glow\",\n          [\"[]\", \"uint8\", 4],\n          \"tintColor\",\n          [\"[]\", \"uint8\", 4],\n          \"tintTargetColor\",\n          [\"[]\", \"uint8\", 4],\n          \"saturation\",\n          \"float32\",\n          \"tintAmount\",\n          \"float32\",\n          \"tintFocus\",\n          \"float32\",\n          \"glowLevel\",\n          [\"[]\", \"uint8\", 4],\n          \"glowAmplify\",\n          \"float32\",\n          \"focalDepth\",\n          \"float32\",\n          \"focalRange\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataHazeV41 = [\n          \"distColor\",\n          [\"[]\", \"uint8\", 4],\n          \"distRange\",\n          [\"[]\", \"float32\", 2],\n          \"heightColor\",\n          [\"[]\", \"uint8\", 4],\n          \"heightRange\",\n          [\"[]\", \"float32\", 2],\n          \"depthCue\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataPFieldV41 = [\n          \"altitude\",\n          \"float32\",\n          \"angle\",\n          [\"[]\", \"float32\", 2],\n          \"depth\",\n          \"float32\",\n          \"deviation\",\n          \"float32\",\n          \"extent\",\n          \"uint16\",\n          \"fade\",\n          \"float32\",\n          \"fieldDirection\",\n          [\"[]\", \"float32\", 3],\n          \"flags\",\n          \"uint8\",\n          \"opacity\",\n          [\"[]\", \"float32\", 2],\n          \"particleCount\",\n          \"uint16\",\n          \"rotation\",\n          [\"[]\", \"float32\", 2],\n          \"scaleX\",\n          [\"[]\", \"float32\", 2],\n          \"scaleY\",\n          [\"[]\", \"float32\", 2],\n          \"speed\",\n          [\"[]\", \"float32\", 2],\n          \"texColRow\",\n          [\"[]\", \"uint32\", 2],\n          \"texFPS\",\n          \"uint16\",\n          \"texPath\",\n          Utils.getFileNameReader(),\n          \"type\",\n          \"uint8\",\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataPFieldCutoutV12 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"x\",\n          [\"[]\", \"float32\", 4],\n          \"y\",\n          [\"[]\", \"float32\", 4],\n          \"z\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.PackMapEnvDataSkyV41 = [\n          \"flags\",\n          \"uint8\",\n          \"dayBrightness\",\n          \"float32\",\n          \"dayHazeBottom\",\n          \"float32\",\n          \"dayHazeDensity\",\n          \"float32\",\n          \"dayHazeFalloff\",\n          \"float32\",\n          \"dayLightIntensity\",\n          \"float32\",\n          \"dayStarDensity\",\n          \"float32\",\n          \"nightBrightness\",\n          \"float32\",\n          \"nightHazeBottom\",\n          \"float32\",\n          \"nightHazeDensity\",\n          \"float32\",\n          \"nightHazeFalloff\",\n          \"float32\",\n          \"nightLightIntensity\",\n          \"float32\",\n          \"nightStarDensity\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataSkyCardAttributesV41 = [\n          \"azimuth\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"hazeDensity\",\n          \"float32\",\n          \"latitude\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"minHaze\",\n          \"float32\",\n          \"scale\",\n          [\"[]\", \"float32\", 2],\n          \"speed\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"textureUV\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.PackMapEnvDataSkyCardV41 = [\n          \"day\",\n          this.PackMapEnvDataSkyCardAttributesV41,\n          \"night\",\n          this.PackMapEnvDataSkyCardAttributesV41,\n          \"flags\",\n          \"uint32\",\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataSkyCardsV41 = [\"cards\", Utils.getArrayReader(this.PackMapEnvDataSkyCardV41)];\n\n        this.PackMapEnvDataWaterV41 = [\n          \"waterFlags\",\n          \"uint32\",\n          \"animAmplitude\",\n          \"float32\",\n          \"animChoppiness\",\n          \"float32\",\n          \"animWind\",\n          [\"[]\", \"float32\", 2],\n          \"bumpAmount\",\n          \"float32\",\n          \"bumpAngle0\",\n          \"float32\",\n          \"bumpAngle1\",\n          \"float32\",\n          \"bumpScale0\",\n          \"float32\",\n          \"bumpScale1\",\n          \"float32\",\n          \"bumpSpeed0\",\n          \"float32\",\n          \"bumpSpeed1\",\n          \"float32\",\n          \"bumpTile0\",\n          \"float32\",\n          \"bumpTile1\",\n          \"float32\",\n          \"patternAngle\",\n          \"float32\",\n          \"patternTile\",\n          \"float32\",\n          \"patternSpeed\",\n          \"float32\",\n          \"patternEdge\",\n          \"float32\",\n          \"surfaceShallowColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceDeepColor\",\n          [\"[]\", \"uint8\", 4],\n          \"patternColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceFresnel\",\n          \"float32\",\n          \"distortAmount\",\n          \"float32\",\n          \"depthAttenuation\",\n          \"float32\",\n          \"materialFilename\",\n          Utils.getFileNameReader(),\n          \"textureFilenames\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n        ];\n\n        this.PackMapEnvDataWindV41 = [\n          \"azimuth\",\n          \"uint8\",\n          \"elevation\",\n          \"uint8\",\n          \"noise\",\n          \"uint8\",\n          \"speed\",\n          \"uint8\",\n          \"gust\",\n          \"uint8\",\n          \"gustFreq\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataLocalV41 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV41),\n          \"lightingChar\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharV12),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV41),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV41),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV41),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV41),\n          \"particleFieldCutouts\",\n          Utils.getArrayReader(this.PackMapEnvDataPFieldCutoutV12),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV41),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV41),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV41),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV41),\n          \"name\",\n          Utils.getString16Reader(),\n          \"nightMods\",\n          Utils.getArrayReader(\"uint8\"),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"zRange\",\n          [\"[]\", \"float32\", 2],\n          \"fadeHorizInner\",\n          \"float32\",\n          \"fadeHorizOuter\",\n          \"float32\",\n          \"fadeVertical\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n          \"vertexArray\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n          \"guid\",\n          Utils.getQWordReader(),\n        ];\n\n        this.PackMapEnvDataSkyModeTexV41 = [\n          \"texPathNE\",\n          Utils.getFileNameReader(),\n          \"texPathSW\",\n          Utils.getFileNameReader(),\n          \"texPathT\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackMapEnvDataGlobalV41 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV41),\n          \"lightingChar\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharV12),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV41),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV41),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV41),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV41),\n          \"particleFieldCutouts\",\n          Utils.getArrayReader(this.PackMapEnvDataPFieldCutoutV12),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV41),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV41),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV41),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV41),\n          \"name\",\n          Utils.getString16Reader(),\n          \"nightMods\",\n          Utils.getArrayReader(\"uint8\"),\n          \"skyModeTex\",\n          Utils.getArrayReader(this.PackMapEnvDataSkyModeTexV41),\n          \"starFile\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.__root = this.PackMapEnvironmentV41 = [\n          \"dataLocalArray\",\n          Utils.getArrayReader(this.PackMapEnvDataLocalV41),\n          \"dataGlobal\",\n          Utils.getPointerReader(this.PackMapEnvDataGlobalV41),\n        ];\n      },\n\n      // => Version: 40, ReferencedFunction: 0xEB8070\n      40: function () {\n        this.PackMapEnvDataLightV40 = [\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"intensity\",\n          \"float32\",\n          \"direction\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.PackMapEnvDataLightingV40 = [\"lights\", Utils.getRefArrayReader(this.PackMapEnvDataLightV40)];\n\n        this.PackMapEnvDataLightingCharV11 = [\n          \"sunScale\",\n          \"float32\",\n          \"saturation\",\n          \"float32\",\n          \"sunFill\",\n          \"float32\",\n          \"ambScale\",\n          \"float32\",\n          \"ambFill\",\n          \"float32\",\n          \"flags\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataLayerAttributesV40 = [\n          \"density\",\n          \"float32\",\n          \"haze\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"velocity\",\n          [\"[]\", \"float32\", 2],\n        ];\n\n        this.PackMapEnvDataLayerV40 = [\n          \"altitude\",\n          \"float32\",\n          \"cutOut\",\n          \"float32\",\n          \"depth\",\n          \"float32\",\n          \"extent\",\n          \"float32\",\n          \"scale\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"attributes\",\n          Utils.getArrayReader(this.PackMapEnvDataLayerAttributesV40),\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataCloudsV40 = [\"layers\", Utils.getArrayReader(this.PackMapEnvDataLayerV40)];\n\n        this.PackMapEnvDataEffectV40 = [\n          \"glow\",\n          [\"[]\", \"uint8\", 4],\n          \"tintColor\",\n          [\"[]\", \"uint8\", 4],\n          \"tintTargetColor\",\n          [\"[]\", \"uint8\", 4],\n          \"saturation\",\n          \"float32\",\n          \"tintAmount\",\n          \"float32\",\n          \"tintFocus\",\n          \"float32\",\n          \"glowLevel\",\n          [\"[]\", \"uint8\", 4],\n          \"glowAmplify\",\n          \"float32\",\n          \"focalDepth\",\n          \"float32\",\n          \"focalRange\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataHazeV40 = [\n          \"distColor\",\n          [\"[]\", \"uint8\", 4],\n          \"distRange\",\n          [\"[]\", \"float32\", 2],\n          \"heightColor\",\n          [\"[]\", \"uint8\", 4],\n          \"heightRange\",\n          [\"[]\", \"float32\", 2],\n          \"depthCue\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataPFieldV40 = [\n          \"altitude\",\n          \"float32\",\n          \"angle\",\n          [\"[]\", \"float32\", 2],\n          \"depth\",\n          \"float32\",\n          \"deviation\",\n          \"float32\",\n          \"extent\",\n          \"uint16\",\n          \"fade\",\n          \"float32\",\n          \"fieldDirection\",\n          [\"[]\", \"float32\", 3],\n          \"flags\",\n          \"uint8\",\n          \"opacity\",\n          [\"[]\", \"float32\", 2],\n          \"particleCount\",\n          \"uint16\",\n          \"rotation\",\n          [\"[]\", \"float32\", 2],\n          \"scaleX\",\n          [\"[]\", \"float32\", 2],\n          \"scaleY\",\n          [\"[]\", \"float32\", 2],\n          \"speed\",\n          [\"[]\", \"float32\", 2],\n          \"texColRow\",\n          [\"[]\", \"uint32\", 2],\n          \"texFPS\",\n          \"uint16\",\n          \"texPath\",\n          Utils.getFileNameReader(),\n          \"type\",\n          \"uint8\",\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataPFieldCutoutV11 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"x\",\n          [\"[]\", \"float32\", 4],\n          \"y\",\n          [\"[]\", \"float32\", 4],\n          \"z\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.PackMapEnvDataSkyV40 = [\n          \"flags\",\n          \"uint8\",\n          \"dayBrightness\",\n          \"float32\",\n          \"dayHazeBottom\",\n          \"float32\",\n          \"dayHazeDensity\",\n          \"float32\",\n          \"dayHazeFalloff\",\n          \"float32\",\n          \"dayLightIntensity\",\n          \"float32\",\n          \"dayStarDensity\",\n          \"float32\",\n          \"nightBrightness\",\n          \"float32\",\n          \"nightHazeBottom\",\n          \"float32\",\n          \"nightHazeDensity\",\n          \"float32\",\n          \"nightHazeFalloff\",\n          \"float32\",\n          \"nightLightIntensity\",\n          \"float32\",\n          \"nightStarDensity\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataSkyCardAttributesV40 = [\n          \"azimuth\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"hazeDensity\",\n          \"float32\",\n          \"latitude\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"minHaze\",\n          \"float32\",\n          \"scale\",\n          [\"[]\", \"float32\", 2],\n          \"speed\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"textureUV\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.PackMapEnvDataSkyCardV40 = [\n          \"day\",\n          this.PackMapEnvDataSkyCardAttributesV40,\n          \"night\",\n          this.PackMapEnvDataSkyCardAttributesV40,\n          \"flags\",\n          \"uint32\",\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataSkyCardsV40 = [\"cards\", Utils.getArrayReader(this.PackMapEnvDataSkyCardV40)];\n\n        this.PackMapEnvDataWaterV40 = [\n          \"waterFlags\",\n          \"uint32\",\n          \"animAmplitude\",\n          \"float32\",\n          \"animChoppiness\",\n          \"float32\",\n          \"animWind\",\n          [\"[]\", \"float32\", 2],\n          \"bumpAmount\",\n          \"float32\",\n          \"bumpAngle0\",\n          \"float32\",\n          \"bumpAngle1\",\n          \"float32\",\n          \"bumpScale0\",\n          \"float32\",\n          \"bumpScale1\",\n          \"float32\",\n          \"bumpSpeed0\",\n          \"float32\",\n          \"bumpSpeed1\",\n          \"float32\",\n          \"bumpTile0\",\n          \"float32\",\n          \"bumpTile1\",\n          \"float32\",\n          \"patternAngle\",\n          \"float32\",\n          \"patternTile\",\n          \"float32\",\n          \"patternSpeed\",\n          \"float32\",\n          \"patternEdge\",\n          \"float32\",\n          \"surfaceShallowColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceDeepColor\",\n          [\"[]\", \"uint8\", 4],\n          \"patternColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceFresnel\",\n          \"float32\",\n          \"distortAmount\",\n          \"float32\",\n          \"bumpTexture\",\n          Utils.getFileNameReader(),\n          \"patternTexture\",\n          Utils.getFileNameReader(),\n          \"depthAttenuation\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataWindV40 = [\n          \"azimuth\",\n          \"uint8\",\n          \"elevation\",\n          \"uint8\",\n          \"noise\",\n          \"uint8\",\n          \"speed\",\n          \"uint8\",\n          \"gust\",\n          \"uint8\",\n          \"gustFreq\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataLocalV40 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV40),\n          \"lightingChar\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharV11),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV40),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV40),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV40),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV40),\n          \"particleFieldCutouts\",\n          Utils.getArrayReader(this.PackMapEnvDataPFieldCutoutV11),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV40),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV40),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV40),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV40),\n          \"name\",\n          Utils.getString16Reader(),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"zRange\",\n          [\"[]\", \"float32\", 2],\n          \"fadeHorizInner\",\n          \"float32\",\n          \"fadeHorizOuter\",\n          \"float32\",\n          \"fadeVertical\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n          \"vertexArray\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n          \"guid\",\n          Utils.getQWordReader(),\n        ];\n\n        this.PackMapEnvDataSkyModeTexV40 = [\n          \"texPathNE\",\n          Utils.getFileNameReader(),\n          \"texPathSW\",\n          Utils.getFileNameReader(),\n          \"texPathT\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackMapEnvDataGlobalV40 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV40),\n          \"lightingChar\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharV11),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV40),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV40),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV40),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV40),\n          \"particleFieldCutouts\",\n          Utils.getArrayReader(this.PackMapEnvDataPFieldCutoutV11),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV40),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV40),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV40),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV40),\n          \"name\",\n          Utils.getString16Reader(),\n          \"skyModeTex\",\n          Utils.getArrayReader(this.PackMapEnvDataSkyModeTexV40),\n          \"starFile\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.__root = this.PackMapEnvironmentV40 = [\n          \"dataLocalArray\",\n          Utils.getArrayReader(this.PackMapEnvDataLocalV40),\n          \"dataGlobal\",\n          Utils.getPointerReader(this.PackMapEnvDataGlobalV40),\n        ];\n      },\n\n      // => Version: 39\n      39: function () {\n        this.PackMapEnvDataLightV39 = [\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"intensity\",\n          \"float32\",\n          \"direction\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.PackMapEnvDataLightingV39 = [\"lights\", Utils.getRefArrayReader(this.PackMapEnvDataLightV39)];\n\n        this.PackMapEnvDataLightingCharV10 = [\n          \"sunScale\",\n          \"float32\",\n          \"saturation\",\n          \"float32\",\n          \"sunFill\",\n          \"float32\",\n          \"ambScale\",\n          \"float32\",\n          \"ambFill\",\n          \"float32\",\n          \"flags\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataLayerAttributesV39 = [\n          \"density\",\n          \"float32\",\n          \"haze\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"velocity\",\n          [\"[]\", \"float32\", 2],\n        ];\n\n        this.PackMapEnvDataLayerV39 = [\n          \"altitude\",\n          \"float32\",\n          \"cutOut\",\n          \"float32\",\n          \"depth\",\n          \"float32\",\n          \"extent\",\n          \"float32\",\n          \"scale\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"attributes\",\n          Utils.getArrayReader(this.PackMapEnvDataLayerAttributesV39),\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataCloudsV39 = [\"layers\", Utils.getArrayReader(this.PackMapEnvDataLayerV39)];\n\n        this.PackMapEnvDataEffectV39 = [\n          \"glow\",\n          [\"[]\", \"uint8\", 4],\n          \"tintColor\",\n          [\"[]\", \"uint8\", 4],\n          \"tintTargetColor\",\n          [\"[]\", \"uint8\", 4],\n          \"saturation\",\n          \"float32\",\n          \"tintAmount\",\n          \"float32\",\n          \"tintFocus\",\n          \"float32\",\n          \"glowLevel\",\n          [\"[]\", \"uint8\", 4],\n          \"glowAmplify\",\n          \"float32\",\n          \"focalDepth\",\n          \"float32\",\n          \"focalRange\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataHazeV39 = [\n          \"distColor\",\n          [\"[]\", \"uint8\", 4],\n          \"distRange\",\n          [\"[]\", \"float32\", 2],\n          \"heightColor\",\n          [\"[]\", \"uint8\", 4],\n          \"heightRange\",\n          [\"[]\", \"float32\", 2],\n          \"depthCue\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataPFieldV39 = [\n          \"altitude\",\n          \"float32\",\n          \"angle\",\n          [\"[]\", \"float32\", 2],\n          \"depth\",\n          \"float32\",\n          \"deviation\",\n          \"float32\",\n          \"extent\",\n          \"uint16\",\n          \"fade\",\n          \"float32\",\n          \"fieldDirection\",\n          [\"[]\", \"float32\", 3],\n          \"flags\",\n          \"uint8\",\n          \"opacity\",\n          [\"[]\", \"float32\", 2],\n          \"particleCount\",\n          \"uint16\",\n          \"rotation\",\n          [\"[]\", \"float32\", 2],\n          \"scaleX\",\n          [\"[]\", \"float32\", 2],\n          \"scaleY\",\n          [\"[]\", \"float32\", 2],\n          \"speed\",\n          [\"[]\", \"float32\", 2],\n          \"texColRow\",\n          [\"[]\", \"uint32\", 2],\n          \"texFPS\",\n          \"uint16\",\n          \"texPath\",\n          Utils.getFileNameReader(),\n          \"type\",\n          \"uint8\",\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataPFieldCutoutV10 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"x\",\n          [\"[]\", \"float32\", 4],\n          \"y\",\n          [\"[]\", \"float32\", 4],\n          \"z\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.PackMapEnvDataSkyV39 = [\n          \"flags\",\n          \"uint8\",\n          \"dayBrightness\",\n          \"float32\",\n          \"dayHazeBottom\",\n          \"float32\",\n          \"dayHazeDensity\",\n          \"float32\",\n          \"dayHazeFalloff\",\n          \"float32\",\n          \"dayLightIntensity\",\n          \"float32\",\n          \"dayStarDensity\",\n          \"float32\",\n          \"nightBrightness\",\n          \"float32\",\n          \"nightHazeBottom\",\n          \"float32\",\n          \"nightHazeDensity\",\n          \"float32\",\n          \"nightHazeFalloff\",\n          \"float32\",\n          \"nightLightIntensity\",\n          \"float32\",\n          \"nightStarDensity\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataSkyCardAttributesV39 = [\n          \"azimuth\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"hazeDensity\",\n          \"float32\",\n          \"latitude\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"minHaze\",\n          \"float32\",\n          \"scale\",\n          [\"[]\", \"float32\", 2],\n          \"speed\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"textureUV\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.PackMapEnvDataSkyCardV39 = [\n          \"day\",\n          this.PackMapEnvDataSkyCardAttributesV39,\n          \"night\",\n          this.PackMapEnvDataSkyCardAttributesV39,\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataSkyCardsV39 = [\"cards\", Utils.getArrayReader(this.PackMapEnvDataSkyCardV39)];\n\n        this.PackMapEnvDataWaterV39 = [\n          \"waterFlags\",\n          \"uint32\",\n          \"animAmplitude\",\n          \"float32\",\n          \"animChoppiness\",\n          \"float32\",\n          \"animWind\",\n          [\"[]\", \"float32\", 2],\n          \"bumpAmount\",\n          \"float32\",\n          \"bumpAngle0\",\n          \"float32\",\n          \"bumpAngle1\",\n          \"float32\",\n          \"bumpScale0\",\n          \"float32\",\n          \"bumpScale1\",\n          \"float32\",\n          \"bumpSpeed0\",\n          \"float32\",\n          \"bumpSpeed1\",\n          \"float32\",\n          \"bumpTile0\",\n          \"float32\",\n          \"bumpTile1\",\n          \"float32\",\n          \"patternAngle\",\n          \"float32\",\n          \"patternTile\",\n          \"float32\",\n          \"patternSpeed\",\n          \"float32\",\n          \"patternEdge\",\n          \"float32\",\n          \"surfaceShallowColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceDeepColor\",\n          [\"[]\", \"uint8\", 4],\n          \"patternColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceFresnel\",\n          \"float32\",\n          \"distortAmount\",\n          \"float32\",\n          \"bumpTexture\",\n          Utils.getFileNameReader(),\n          \"patternTexture\",\n          Utils.getFileNameReader(),\n          \"depthAttenuation\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataWindV39 = [\n          \"azimuth\",\n          \"uint8\",\n          \"elevation\",\n          \"uint8\",\n          \"noise\",\n          \"uint8\",\n          \"speed\",\n          \"uint8\",\n          \"gust\",\n          \"uint8\",\n          \"gustFreq\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataLocalV39 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV39),\n          \"lightingChar\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharV10),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV39),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV39),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV39),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV39),\n          \"particleFieldCutouts\",\n          Utils.getArrayReader(this.PackMapEnvDataPFieldCutoutV10),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV39),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV39),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV39),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV39),\n          \"name\",\n          Utils.getString16Reader(),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"zRange\",\n          [\"[]\", \"float32\", 2],\n          \"fadeHorizInner\",\n          \"float32\",\n          \"fadeHorizOuter\",\n          \"float32\",\n          \"fadeVertical\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n          \"vertexArray\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n          \"guid\",\n          Utils.getQWordReader(),\n        ];\n\n        this.PackMapEnvDataSkyModeTexV39 = [\n          \"texPathNE\",\n          Utils.getFileNameReader(),\n          \"texPathSW\",\n          Utils.getFileNameReader(),\n          \"texPathT\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackMapEnvDataGlobalV39 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV39),\n          \"lightingChar\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingCharV10),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV39),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV39),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV39),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV39),\n          \"particleFieldCutouts\",\n          Utils.getArrayReader(this.PackMapEnvDataPFieldCutoutV10),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV39),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV39),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV39),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV39),\n          \"name\",\n          Utils.getString16Reader(),\n          \"skyModeTex\",\n          Utils.getArrayReader(this.PackMapEnvDataSkyModeTexV39),\n          \"starFile\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.__root = this.PackMapEnvironmentV39 = [\n          \"dataLocalArray\",\n          Utils.getArrayReader(this.PackMapEnvDataLocalV39),\n          \"dataGlobal\",\n          Utils.getPointerReader(this.PackMapEnvDataGlobalV39),\n        ];\n      },\n\n      // => Version: 38, ReferencedFunction: 0xEB7FD0\n      38: function () {\n        this.PackMapEnvDataLightV38 = [\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"intensity\",\n          \"float32\",\n          \"direction\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.PackMapEnvDataLightingV38 = [\"lights\", Utils.getRefArrayReader(this.PackMapEnvDataLightV38)];\n\n        this.PackMapEnvDataLayerAttributesV38 = [\n          \"density\",\n          \"float32\",\n          \"haze\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"velocity\",\n          [\"[]\", \"float32\", 2],\n        ];\n\n        this.PackMapEnvDataLayerV38 = [\n          \"altitude\",\n          \"float32\",\n          \"cutOut\",\n          \"float32\",\n          \"depth\",\n          \"float32\",\n          \"extent\",\n          \"float32\",\n          \"scale\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"attributes\",\n          Utils.getArrayReader(this.PackMapEnvDataLayerAttributesV38),\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataCloudsV38 = [\"layers\", Utils.getArrayReader(this.PackMapEnvDataLayerV38)];\n\n        this.PackMapEnvDataEffectV38 = [\n          \"glow\",\n          [\"[]\", \"uint8\", 4],\n          \"tintColor\",\n          [\"[]\", \"uint8\", 4],\n          \"tintTargetColor\",\n          [\"[]\", \"uint8\", 4],\n          \"saturation\",\n          \"float32\",\n          \"tintAmount\",\n          \"float32\",\n          \"tintFocus\",\n          \"float32\",\n          \"glowLevel\",\n          [\"[]\", \"uint8\", 4],\n          \"glowAmplify\",\n          \"float32\",\n          \"focalDepth\",\n          \"float32\",\n          \"focalRange\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataHazeV38 = [\n          \"distColor\",\n          [\"[]\", \"uint8\", 4],\n          \"distRange\",\n          [\"[]\", \"float32\", 2],\n          \"heightColor\",\n          [\"[]\", \"uint8\", 4],\n          \"heightRange\",\n          [\"[]\", \"float32\", 2],\n          \"depthCue\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataPFieldV38 = [\n          \"altitude\",\n          \"float32\",\n          \"angle\",\n          [\"[]\", \"float32\", 2],\n          \"depth\",\n          \"float32\",\n          \"deviation\",\n          \"float32\",\n          \"extent\",\n          \"uint16\",\n          \"fade\",\n          \"float32\",\n          \"fieldDirection\",\n          [\"[]\", \"float32\", 3],\n          \"flags\",\n          \"uint8\",\n          \"opacity\",\n          [\"[]\", \"float32\", 2],\n          \"particleCount\",\n          \"uint16\",\n          \"rotation\",\n          [\"[]\", \"float32\", 2],\n          \"scaleX\",\n          [\"[]\", \"float32\", 2],\n          \"scaleY\",\n          [\"[]\", \"float32\", 2],\n          \"speed\",\n          [\"[]\", \"float32\", 2],\n          \"texColRow\",\n          [\"[]\", \"uint32\", 2],\n          \"texFPS\",\n          \"uint16\",\n          \"texPath\",\n          Utils.getFileNameReader(),\n          \"type\",\n          \"uint8\",\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataPFieldCutoutV9 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"x\",\n          [\"[]\", \"float32\", 4],\n          \"y\",\n          [\"[]\", \"float32\", 4],\n          \"z\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.PackMapEnvDataSkyV38 = [\n          \"flags\",\n          \"uint8\",\n          \"dayBrightness\",\n          \"float32\",\n          \"dayHazeBottom\",\n          \"float32\",\n          \"dayHazeDensity\",\n          \"float32\",\n          \"dayHazeFalloff\",\n          \"float32\",\n          \"dayLightIntensity\",\n          \"float32\",\n          \"dayStarDensity\",\n          \"float32\",\n          \"nightBrightness\",\n          \"float32\",\n          \"nightHazeBottom\",\n          \"float32\",\n          \"nightHazeDensity\",\n          \"float32\",\n          \"nightHazeFalloff\",\n          \"float32\",\n          \"nightLightIntensity\",\n          \"float32\",\n          \"nightStarDensity\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataSkyCardAttributesV38 = [\n          \"azimuth\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"hazeDensity\",\n          \"float32\",\n          \"latitude\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"minHaze\",\n          \"float32\",\n          \"scale\",\n          [\"[]\", \"float32\", 2],\n          \"speed\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"textureUV\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.PackMapEnvDataSkyCardV38 = [\n          \"day\",\n          this.PackMapEnvDataSkyCardAttributesV38,\n          \"night\",\n          this.PackMapEnvDataSkyCardAttributesV38,\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataSkyCardsV38 = [\"cards\", Utils.getArrayReader(this.PackMapEnvDataSkyCardV38)];\n\n        this.PackMapEnvDataWaterV38 = [\n          \"waterFlags\",\n          \"uint32\",\n          \"animAmplitude\",\n          \"float32\",\n          \"animChoppiness\",\n          \"float32\",\n          \"animWind\",\n          [\"[]\", \"float32\", 2],\n          \"bumpAmount\",\n          \"float32\",\n          \"bumpAngle0\",\n          \"float32\",\n          \"bumpAngle1\",\n          \"float32\",\n          \"bumpScale0\",\n          \"float32\",\n          \"bumpScale1\",\n          \"float32\",\n          \"bumpSpeed0\",\n          \"float32\",\n          \"bumpSpeed1\",\n          \"float32\",\n          \"bumpTile0\",\n          \"float32\",\n          \"bumpTile1\",\n          \"float32\",\n          \"patternAngle\",\n          \"float32\",\n          \"patternTile\",\n          \"float32\",\n          \"patternSpeed\",\n          \"float32\",\n          \"patternEdge\",\n          \"float32\",\n          \"surfaceShallowColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceDeepColor\",\n          [\"[]\", \"uint8\", 4],\n          \"patternColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceFresnel\",\n          \"float32\",\n          \"distortAmount\",\n          \"float32\",\n          \"bumpTexture\",\n          Utils.getFileNameReader(),\n          \"patternTexture\",\n          Utils.getFileNameReader(),\n          \"depthAttenuation\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataWindV38 = [\n          \"azimuth\",\n          \"uint8\",\n          \"elevation\",\n          \"uint8\",\n          \"noise\",\n          \"uint8\",\n          \"speed\",\n          \"uint8\",\n          \"gust\",\n          \"uint8\",\n          \"gustFreq\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataLocalV38 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV38),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV38),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV38),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV38),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV38),\n          \"particleFieldCutouts\",\n          Utils.getArrayReader(this.PackMapEnvDataPFieldCutoutV9),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV38),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV38),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV38),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV38),\n          \"name\",\n          Utils.getString16Reader(),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"zRange\",\n          [\"[]\", \"float32\", 2],\n          \"fadeHorizInner\",\n          \"float32\",\n          \"fadeHorizOuter\",\n          \"float32\",\n          \"fadeVertical\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n          \"vertexArray\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n        ];\n\n        this.PackMapEnvDataSkyModeTexV38 = [\n          \"texPathNE\",\n          Utils.getFileNameReader(),\n          \"texPathSW\",\n          Utils.getFileNameReader(),\n          \"texPathT\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackMapEnvDataGlobalV38 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV38),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV38),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV38),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV38),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV38),\n          \"particleFieldCutouts\",\n          Utils.getArrayReader(this.PackMapEnvDataPFieldCutoutV9),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV38),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV38),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV38),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV38),\n          \"name\",\n          Utils.getString16Reader(),\n          \"skyModeTex\",\n          Utils.getArrayReader(this.PackMapEnvDataSkyModeTexV38),\n          \"starFile\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.__root = this.PackMapEnvironmentV38 = [\n          \"dataLocalArray\",\n          Utils.getArrayReader(this.PackMapEnvDataLocalV38),\n          \"dataGlobal\",\n          Utils.getPointerReader(this.PackMapEnvDataGlobalV38),\n        ];\n      },\n\n      // => Version: 37, ReferencedFunction: 0xEB7F50\n      37: function () {\n        this.PackMapEnvDataLightV37 = [\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"intensity\",\n          \"float32\",\n          \"direction\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.PackMapEnvDataLightingV37 = [\"lights\", Utils.getRefArrayReader(this.PackMapEnvDataLightV37)];\n\n        this.PackMapEnvDataLayerAttributesV37 = [\n          \"density\",\n          \"float32\",\n          \"haze\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"velocity\",\n          [\"[]\", \"float32\", 2],\n        ];\n\n        this.PackMapEnvDataLayerV37 = [\n          \"altitude\",\n          \"float32\",\n          \"cutOut\",\n          \"float32\",\n          \"depth\",\n          \"float32\",\n          \"extent\",\n          \"float32\",\n          \"scale\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"attributes\",\n          Utils.getArrayReader(this.PackMapEnvDataLayerAttributesV37),\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataCloudsV37 = [\"layers\", Utils.getArrayReader(this.PackMapEnvDataLayerV37)];\n\n        this.PackMapEnvDataEffectV37 = [\n          \"glow\",\n          [\"[]\", \"uint8\", 4],\n          \"tintColor\",\n          [\"[]\", \"uint8\", 4],\n          \"tintTargetColor\",\n          [\"[]\", \"uint8\", 4],\n          \"saturation\",\n          \"float32\",\n          \"tintAmount\",\n          \"float32\",\n          \"tintFocus\",\n          \"float32\",\n          \"glowLevel\",\n          [\"[]\", \"uint8\", 4],\n          \"glowAmplify\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataHazeV37 = [\n          \"distColor\",\n          [\"[]\", \"uint8\", 4],\n          \"distRange\",\n          [\"[]\", \"float32\", 2],\n          \"heightColor\",\n          [\"[]\", \"uint8\", 4],\n          \"heightRange\",\n          [\"[]\", \"float32\", 2],\n          \"depthCue\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataPFieldV37 = [\n          \"altitude\",\n          \"float32\",\n          \"angle\",\n          [\"[]\", \"float32\", 2],\n          \"depth\",\n          \"float32\",\n          \"deviation\",\n          \"float32\",\n          \"extent\",\n          \"uint16\",\n          \"fade\",\n          \"float32\",\n          \"fieldDirection\",\n          [\"[]\", \"float32\", 3],\n          \"flags\",\n          \"uint8\",\n          \"opacity\",\n          [\"[]\", \"float32\", 2],\n          \"particleCount\",\n          \"uint16\",\n          \"rotation\",\n          [\"[]\", \"float32\", 2],\n          \"scaleX\",\n          [\"[]\", \"float32\", 2],\n          \"scaleY\",\n          [\"[]\", \"float32\", 2],\n          \"speed\",\n          [\"[]\", \"float32\", 2],\n          \"texColRow\",\n          [\"[]\", \"uint32\", 2],\n          \"texFPS\",\n          \"uint16\",\n          \"texPath\",\n          Utils.getFileNameReader(),\n          \"type\",\n          \"uint8\",\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataPFieldCutoutV8 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"x\",\n          [\"[]\", \"float32\", 4],\n          \"y\",\n          [\"[]\", \"float32\", 4],\n          \"z\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.PackMapEnvDataSkyV37 = [\n          \"flags\",\n          \"uint8\",\n          \"dayBrightness\",\n          \"float32\",\n          \"dayHazeBottom\",\n          \"float32\",\n          \"dayHazeDensity\",\n          \"float32\",\n          \"dayHazeFalloff\",\n          \"float32\",\n          \"dayLightIntensity\",\n          \"float32\",\n          \"dayStarDensity\",\n          \"float32\",\n          \"nightBrightness\",\n          \"float32\",\n          \"nightHazeBottom\",\n          \"float32\",\n          \"nightHazeDensity\",\n          \"float32\",\n          \"nightHazeFalloff\",\n          \"float32\",\n          \"nightLightIntensity\",\n          \"float32\",\n          \"nightStarDensity\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataSkyCardAttributesV37 = [\n          \"azimuth\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"hazeDensity\",\n          \"float32\",\n          \"latitude\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"minHaze\",\n          \"float32\",\n          \"scale\",\n          [\"[]\", \"float32\", 2],\n          \"speed\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"textureUV\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.PackMapEnvDataSkyCardV37 = [\n          \"day\",\n          this.PackMapEnvDataSkyCardAttributesV37,\n          \"night\",\n          this.PackMapEnvDataSkyCardAttributesV37,\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataSkyCardsV37 = [\"cards\", Utils.getArrayReader(this.PackMapEnvDataSkyCardV37)];\n\n        this.PackMapEnvDataWaterV37 = [\n          \"waterFlags\",\n          \"uint32\",\n          \"animAmplitude\",\n          \"float32\",\n          \"animChoppiness\",\n          \"float32\",\n          \"animWind\",\n          [\"[]\", \"float32\", 2],\n          \"bumpAmount\",\n          \"float32\",\n          \"bumpAngle0\",\n          \"float32\",\n          \"bumpAngle1\",\n          \"float32\",\n          \"bumpScale0\",\n          \"float32\",\n          \"bumpScale1\",\n          \"float32\",\n          \"bumpSpeed0\",\n          \"float32\",\n          \"bumpSpeed1\",\n          \"float32\",\n          \"bumpTile0\",\n          \"float32\",\n          \"bumpTile1\",\n          \"float32\",\n          \"patternAngle\",\n          \"float32\",\n          \"patternTile\",\n          \"float32\",\n          \"patternSpeed\",\n          \"float32\",\n          \"patternEdge\",\n          \"float32\",\n          \"surfaceShallowColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceDeepColor\",\n          [\"[]\", \"uint8\", 4],\n          \"patternColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceFresnel\",\n          \"float32\",\n          \"distortAmount\",\n          \"float32\",\n          \"bumpTexture\",\n          Utils.getFileNameReader(),\n          \"patternTexture\",\n          Utils.getFileNameReader(),\n          \"depthAttenuation\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataWindV37 = [\n          \"azimuth\",\n          \"uint8\",\n          \"elevation\",\n          \"uint8\",\n          \"noise\",\n          \"uint8\",\n          \"speed\",\n          \"uint8\",\n          \"gust\",\n          \"uint8\",\n          \"gustFreq\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataLocalV37 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV37),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV37),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV37),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV37),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV37),\n          \"particleFieldCutouts\",\n          Utils.getArrayReader(this.PackMapEnvDataPFieldCutoutV8),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV37),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV37),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV37),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV37),\n          \"name\",\n          Utils.getString16Reader(),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"zRange\",\n          [\"[]\", \"float32\", 2],\n          \"fadeHorizInner\",\n          \"float32\",\n          \"fadeHorizOuter\",\n          \"float32\",\n          \"fadeVertical\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n          \"vertexArray\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n        ];\n\n        this.PackMapEnvDataSkyModeTexV37 = [\n          \"texPathNE\",\n          Utils.getFileNameReader(),\n          \"texPathSW\",\n          Utils.getFileNameReader(),\n          \"texPathT\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackMapEnvDataGlobalV37 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV37),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV37),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV37),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV37),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV37),\n          \"particleFieldCutouts\",\n          Utils.getArrayReader(this.PackMapEnvDataPFieldCutoutV8),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV37),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV37),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV37),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV37),\n          \"name\",\n          Utils.getString16Reader(),\n          \"skyModeTex\",\n          Utils.getArrayReader(this.PackMapEnvDataSkyModeTexV37),\n          \"starFile\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.__root = this.PackMapEnvironmentV37 = [\n          \"dataLocalArray\",\n          Utils.getArrayReader(this.PackMapEnvDataLocalV37),\n          \"dataGlobal\",\n          Utils.getPointerReader(this.PackMapEnvDataGlobalV37),\n        ];\n      },\n\n      // => Version: 36\n      36: function () {\n        this.PackMapEnvDataLightV36 = [\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"intensity\",\n          \"float32\",\n          \"direction\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.PackMapEnvDataLightingV36 = [\"lights\", Utils.getRefArrayReader(this.PackMapEnvDataLightV36)];\n\n        this.PackMapEnvDataLayerAttributesV36 = [\n          \"density\",\n          \"float32\",\n          \"haze\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"velocity\",\n          [\"[]\", \"float32\", 2],\n        ];\n\n        this.PackMapEnvDataLayerV36 = [\n          \"altitude\",\n          \"float32\",\n          \"cutOut\",\n          \"float32\",\n          \"depth\",\n          \"float32\",\n          \"scale\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"attributes\",\n          Utils.getArrayReader(this.PackMapEnvDataLayerAttributesV36),\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataCloudsV36 = [\"layers\", Utils.getArrayReader(this.PackMapEnvDataLayerV36)];\n\n        this.PackMapEnvDataEffectV36 = [\n          \"glow\",\n          [\"[]\", \"uint8\", 4],\n          \"tintColor\",\n          [\"[]\", \"uint8\", 4],\n          \"tintTargetColor\",\n          [\"[]\", \"uint8\", 4],\n          \"saturation\",\n          \"float32\",\n          \"tintAmount\",\n          \"float32\",\n          \"tintFocus\",\n          \"float32\",\n          \"glowLevel\",\n          [\"[]\", \"uint8\", 4],\n          \"glowAmplify\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataHazeV36 = [\n          \"distColor\",\n          [\"[]\", \"uint8\", 4],\n          \"distRange\",\n          [\"[]\", \"float32\", 2],\n          \"heightColor\",\n          [\"[]\", \"uint8\", 4],\n          \"heightRange\",\n          [\"[]\", \"float32\", 2],\n          \"depthCue\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataPFieldV36 = [\n          \"altitude\",\n          \"float32\",\n          \"angle\",\n          [\"[]\", \"float32\", 2],\n          \"depth\",\n          \"float32\",\n          \"deviation\",\n          \"float32\",\n          \"extent\",\n          \"uint16\",\n          \"fade\",\n          \"float32\",\n          \"fieldDirection\",\n          [\"[]\", \"float32\", 3],\n          \"flags\",\n          \"uint8\",\n          \"opacity\",\n          [\"[]\", \"float32\", 2],\n          \"particleCount\",\n          \"uint16\",\n          \"rotation\",\n          [\"[]\", \"float32\", 2],\n          \"scaleX\",\n          [\"[]\", \"float32\", 2],\n          \"scaleY\",\n          [\"[]\", \"float32\", 2],\n          \"speed\",\n          [\"[]\", \"float32\", 2],\n          \"texColRow\",\n          [\"[]\", \"uint32\", 2],\n          \"texFPS\",\n          \"uint16\",\n          \"texPath\",\n          Utils.getFileNameReader(),\n          \"type\",\n          \"uint8\",\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataPFieldCutoutV7 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"x\",\n          [\"[]\", \"float32\", 4],\n          \"y\",\n          [\"[]\", \"float32\", 4],\n          \"z\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.PackMapEnvDataSkyV36 = [\n          \"flags\",\n          \"uint8\",\n          \"dayBrightness\",\n          \"float32\",\n          \"dayHazeBottom\",\n          \"float32\",\n          \"dayHazeDensity\",\n          \"float32\",\n          \"dayHazeFalloff\",\n          \"float32\",\n          \"dayLightIntensity\",\n          \"float32\",\n          \"dayStarDensity\",\n          \"float32\",\n          \"nightBrightness\",\n          \"float32\",\n          \"nightHazeBottom\",\n          \"float32\",\n          \"nightHazeDensity\",\n          \"float32\",\n          \"nightHazeFalloff\",\n          \"float32\",\n          \"nightLightIntensity\",\n          \"float32\",\n          \"nightStarDensity\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataSkyCardAttributesV36 = [\n          \"azimuth\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"hazeDensity\",\n          \"float32\",\n          \"latitude\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"minHaze\",\n          \"float32\",\n          \"scale\",\n          [\"[]\", \"float32\", 2],\n          \"speed\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"textureUV\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.PackMapEnvDataSkyCardV36 = [\n          \"day\",\n          this.PackMapEnvDataSkyCardAttributesV36,\n          \"night\",\n          this.PackMapEnvDataSkyCardAttributesV36,\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataSkyCardsV36 = [\"cards\", Utils.getArrayReader(this.PackMapEnvDataSkyCardV36)];\n\n        this.PackMapEnvDataWaterV36 = [\n          \"waterFlags\",\n          \"uint32\",\n          \"animAmplitude\",\n          \"float32\",\n          \"animChoppiness\",\n          \"float32\",\n          \"animWind\",\n          [\"[]\", \"float32\", 2],\n          \"bumpAmount\",\n          \"float32\",\n          \"bumpAngle0\",\n          \"float32\",\n          \"bumpAngle1\",\n          \"float32\",\n          \"bumpScale0\",\n          \"float32\",\n          \"bumpScale1\",\n          \"float32\",\n          \"bumpSpeed0\",\n          \"float32\",\n          \"bumpSpeed1\",\n          \"float32\",\n          \"bumpTile0\",\n          \"float32\",\n          \"bumpTile1\",\n          \"float32\",\n          \"patternAngle\",\n          \"float32\",\n          \"patternTile\",\n          \"float32\",\n          \"patternSpeed\",\n          \"float32\",\n          \"patternEdge\",\n          \"float32\",\n          \"surfaceShallowColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceDeepColor\",\n          [\"[]\", \"uint8\", 4],\n          \"patternColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceFresnel\",\n          \"float32\",\n          \"distortAmount\",\n          \"float32\",\n          \"bumpTexture\",\n          Utils.getFileNameReader(),\n          \"patternTexture\",\n          Utils.getFileNameReader(),\n          \"depthAttenuation\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataWindV36 = [\n          \"azimuth\",\n          \"uint8\",\n          \"elevation\",\n          \"uint8\",\n          \"noise\",\n          \"uint8\",\n          \"speed\",\n          \"uint8\",\n          \"gust\",\n          \"uint8\",\n          \"gustFreq\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataLocalV36 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV36),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV36),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV36),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV36),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV36),\n          \"particleFieldCutouts\",\n          Utils.getArrayReader(this.PackMapEnvDataPFieldCutoutV7),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV36),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV36),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV36),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV36),\n          \"name\",\n          Utils.getString16Reader(),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"zRange\",\n          [\"[]\", \"float32\", 2],\n          \"fadeHorizInner\",\n          \"float32\",\n          \"fadeHorizOuter\",\n          \"float32\",\n          \"fadeVertical\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n          \"vertexArray\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n        ];\n\n        this.PackMapEnvDataSkyModeTexV36 = [\n          \"texPathNE\",\n          Utils.getFileNameReader(),\n          \"texPathSW\",\n          Utils.getFileNameReader(),\n          \"texPathT\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackMapEnvDataGlobalV36 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV36),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV36),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV36),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV36),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV36),\n          \"particleFieldCutouts\",\n          Utils.getArrayReader(this.PackMapEnvDataPFieldCutoutV7),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV36),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV36),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV36),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV36),\n          \"name\",\n          Utils.getString16Reader(),\n          \"skyModeTex\",\n          Utils.getArrayReader(this.PackMapEnvDataSkyModeTexV36),\n          \"starFile\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.__root = this.PackMapEnvironmentV36 = [\n          \"dataLocalArray\",\n          Utils.getArrayReader(this.PackMapEnvDataLocalV36),\n          \"dataGlobal\",\n          Utils.getPointerReader(this.PackMapEnvDataGlobalV36),\n        ];\n      },\n\n      // => Version: 35, ReferencedFunction: 0xEB7EF0\n      35: function () {\n        this.PackMapEnvDataLightV35 = [\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"intensity\",\n          \"float32\",\n          \"direction\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.PackMapEnvDataLightingV35 = [\"lights\", Utils.getRefArrayReader(this.PackMapEnvDataLightV35)];\n\n        this.PackMapEnvDataLayerAttributesV35 = [\n          \"density\",\n          \"float32\",\n          \"haze\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"velocity\",\n          [\"[]\", \"float32\", 2],\n        ];\n\n        this.PackMapEnvDataLayerV35 = [\n          \"altitude\",\n          \"float32\",\n          \"cutOut\",\n          \"float32\",\n          \"depth\",\n          \"float32\",\n          \"scale\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"attributes\",\n          Utils.getArrayReader(this.PackMapEnvDataLayerAttributesV35),\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataCloudsV35 = [\"layers\", Utils.getArrayReader(this.PackMapEnvDataLayerV35)];\n\n        this.PackMapEnvDataEffectV35 = [\n          \"glow\",\n          [\"[]\", \"uint8\", 4],\n          \"tintColor\",\n          [\"[]\", \"uint8\", 4],\n          \"tintTargetColor\",\n          [\"[]\", \"uint8\", 4],\n          \"saturation\",\n          \"float32\",\n          \"tintAmount\",\n          \"float32\",\n          \"tintFocus\",\n          \"float32\",\n          \"glowLevel\",\n          [\"[]\", \"uint8\", 4],\n          \"glowAmplify\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataHazeV35 = [\n          \"distColor\",\n          [\"[]\", \"uint8\", 4],\n          \"distRange\",\n          [\"[]\", \"float32\", 2],\n          \"heightColor\",\n          [\"[]\", \"uint8\", 4],\n          \"heightRange\",\n          [\"[]\", \"float32\", 2],\n          \"depthCue\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataPFieldV35 = [\n          \"altitude\",\n          \"float32\",\n          \"angle\",\n          [\"[]\", \"float32\", 2],\n          \"depth\",\n          \"float32\",\n          \"deviation\",\n          \"float32\",\n          \"extent\",\n          \"uint16\",\n          \"fade\",\n          \"float32\",\n          \"fieldDirection\",\n          [\"[]\", \"float32\", 3],\n          \"flags\",\n          \"uint8\",\n          \"opacity\",\n          [\"[]\", \"float32\", 2],\n          \"particleCount\",\n          \"uint16\",\n          \"rotation\",\n          [\"[]\", \"float32\", 2],\n          \"scaleX\",\n          [\"[]\", \"float32\", 2],\n          \"scaleY\",\n          [\"[]\", \"float32\", 2],\n          \"speed\",\n          [\"[]\", \"float32\", 2],\n          \"texColRow\",\n          [\"[]\", \"uint32\", 2],\n          \"texFPS\",\n          \"uint16\",\n          \"texPath\",\n          Utils.getFileNameReader(),\n          \"type\",\n          \"uint8\",\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataPFieldCutoutV6 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"x\",\n          [\"[]\", \"float32\", 4],\n          \"y\",\n          [\"[]\", \"float32\", 4],\n          \"z\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.PackMapEnvDataSkyV35 = [\n          \"flags\",\n          \"uint8\",\n          \"dayBrightness\",\n          \"float32\",\n          \"dayHazeBottom\",\n          \"float32\",\n          \"dayHazeDensity\",\n          \"float32\",\n          \"dayHazeFalloff\",\n          \"float32\",\n          \"dayLightIntensity\",\n          \"float32\",\n          \"dayStarDensity\",\n          \"float32\",\n          \"nightBrightness\",\n          \"float32\",\n          \"nightHazeBottom\",\n          \"float32\",\n          \"nightHazeDensity\",\n          \"float32\",\n          \"nightHazeFalloff\",\n          \"float32\",\n          \"nightLightIntensity\",\n          \"float32\",\n          \"nightStarDensity\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataSkyCardAttributesV35 = [\n          \"azimuth\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"hazeDensity\",\n          \"float32\",\n          \"latitude\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"minHaze\",\n          \"float32\",\n          \"scale\",\n          [\"[]\", \"float32\", 2],\n          \"speed\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"textureUV\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.PackMapEnvDataSkyCardV35 = [\n          \"day\",\n          this.PackMapEnvDataSkyCardAttributesV35,\n          \"night\",\n          this.PackMapEnvDataSkyCardAttributesV35,\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataSkyCardsV35 = [\"cards\", Utils.getArrayReader(this.PackMapEnvDataSkyCardV35)];\n\n        this.PackMapEnvDataWaterV35 = [\n          \"waterFlags\",\n          \"uint32\",\n          \"animAmplitude\",\n          \"float32\",\n          \"animChoppiness\",\n          \"float32\",\n          \"animWind\",\n          [\"[]\", \"float32\", 2],\n          \"bumpAmount\",\n          \"float32\",\n          \"bumpAngle0\",\n          \"float32\",\n          \"bumpAngle1\",\n          \"float32\",\n          \"bumpScale0\",\n          \"float32\",\n          \"bumpScale1\",\n          \"float32\",\n          \"bumpSpeed0\",\n          \"float32\",\n          \"bumpSpeed1\",\n          \"float32\",\n          \"bumpTile0\",\n          \"float32\",\n          \"bumpTile1\",\n          \"float32\",\n          \"patternAngle\",\n          \"float32\",\n          \"patternTile\",\n          \"float32\",\n          \"patternSpeed\",\n          \"float32\",\n          \"patternEdge\",\n          \"float32\",\n          \"surfaceShallowColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceDeepColor\",\n          [\"[]\", \"uint8\", 4],\n          \"patternColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceFresnel\",\n          \"float32\",\n          \"distortAmount\",\n          \"float32\",\n          \"bumpTexture\",\n          Utils.getFileNameReader(),\n          \"patternTexture\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackMapEnvDataWindV35 = [\n          \"azimuth\",\n          \"uint8\",\n          \"elevation\",\n          \"uint8\",\n          \"noise\",\n          \"uint8\",\n          \"speed\",\n          \"uint8\",\n          \"gust\",\n          \"uint8\",\n          \"gustFreq\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataLocalV35 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV35),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV35),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV35),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV35),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV35),\n          \"particleFieldCutouts\",\n          Utils.getArrayReader(this.PackMapEnvDataPFieldCutoutV6),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV35),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV35),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV35),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV35),\n          \"name\",\n          Utils.getString16Reader(),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"zRange\",\n          [\"[]\", \"float32\", 2],\n          \"fadeHorizInner\",\n          \"float32\",\n          \"fadeHorizOuter\",\n          \"float32\",\n          \"fadeVertical\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n          \"vertexArray\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n        ];\n\n        this.PackMapEnvDataSkyModeTexV35 = [\n          \"texPathNE\",\n          Utils.getFileNameReader(),\n          \"texPathSW\",\n          Utils.getFileNameReader(),\n          \"texPathT\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackMapEnvDataGlobalV35 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV35),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV35),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV35),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV35),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV35),\n          \"particleFieldCutouts\",\n          Utils.getArrayReader(this.PackMapEnvDataPFieldCutoutV6),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV35),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV35),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV35),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV35),\n          \"name\",\n          Utils.getString16Reader(),\n          \"skyModeTex\",\n          Utils.getArrayReader(this.PackMapEnvDataSkyModeTexV35),\n          \"starFile\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.__root = this.PackMapEnvironmentV35 = [\n          \"dataLocalArray\",\n          Utils.getArrayReader(this.PackMapEnvDataLocalV35),\n          \"dataGlobal\",\n          Utils.getPointerReader(this.PackMapEnvDataGlobalV35),\n        ];\n      },\n\n      // => Version: 34\n      34: function () {\n        this.PackMapEnvDataLightV34 = [\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"intensity\",\n          \"float32\",\n          \"direction\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.PackMapEnvDataLightingV34 = [\"lights\", Utils.getRefArrayReader(this.PackMapEnvDataLightV34)];\n\n        this.PackMapEnvDataLayerAttributesV34 = [\n          \"density\",\n          \"float32\",\n          \"haze\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"velocity\",\n          [\"[]\", \"float32\", 2],\n        ];\n\n        this.PackMapEnvDataLayerV34 = [\n          \"altitude\",\n          \"float32\",\n          \"cutOut\",\n          \"float32\",\n          \"depth\",\n          \"float32\",\n          \"scale\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"attributes\",\n          Utils.getArrayReader(this.PackMapEnvDataLayerAttributesV34),\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataCloudsV34 = [\"layers\", Utils.getArrayReader(this.PackMapEnvDataLayerV34)];\n\n        this.PackMapEnvDataEffectV34 = [\n          \"glow\",\n          [\"[]\", \"uint8\", 4],\n          \"tintColor\",\n          [\"[]\", \"uint8\", 4],\n          \"tintTargetColor\",\n          [\"[]\", \"uint8\", 4],\n          \"saturation\",\n          \"float32\",\n          \"tintAmount\",\n          \"float32\",\n          \"tintFocus\",\n          \"float32\",\n          \"glowLevel\",\n          [\"[]\", \"uint8\", 4],\n          \"glowAmplify\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataHazeV34 = [\n          \"distColor\",\n          [\"[]\", \"uint8\", 4],\n          \"distRange\",\n          [\"[]\", \"float32\", 2],\n          \"heightColor\",\n          [\"[]\", \"uint8\", 4],\n          \"heightRange\",\n          [\"[]\", \"float32\", 2],\n          \"depthCue\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataPFieldV34 = [\n          \"altitude\",\n          \"float32\",\n          \"angle\",\n          [\"[]\", \"float32\", 2],\n          \"depth\",\n          \"float32\",\n          \"deviation\",\n          \"float32\",\n          \"extent\",\n          \"uint16\",\n          \"fade\",\n          \"float32\",\n          \"fieldDirection\",\n          [\"[]\", \"float32\", 3],\n          \"flags\",\n          \"uint8\",\n          \"opacity\",\n          [\"[]\", \"float32\", 2],\n          \"particleCount\",\n          \"uint16\",\n          \"rotation\",\n          [\"[]\", \"float32\", 2],\n          \"scaleX\",\n          [\"[]\", \"float32\", 2],\n          \"scaleY\",\n          [\"[]\", \"float32\", 2],\n          \"speed\",\n          [\"[]\", \"float32\", 2],\n          \"texColRow\",\n          [\"[]\", \"uint32\", 2],\n          \"texFPS\",\n          \"uint16\",\n          \"texPath\",\n          Utils.getFileNameReader(),\n          \"type\",\n          \"uint8\",\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataSkyV34 = [\n          \"flags\",\n          \"uint8\",\n          \"dayHazeBottom\",\n          \"float32\",\n          \"dayHazeDensity\",\n          \"float32\",\n          \"dayHazeFalloff\",\n          \"float32\",\n          \"dayLightIntensity\",\n          \"float32\",\n          \"dayStarDensity\",\n          \"float32\",\n          \"nightHazeBottom\",\n          \"float32\",\n          \"nightHazeDensity\",\n          \"float32\",\n          \"nightHazeFalloff\",\n          \"float32\",\n          \"nightLightIntensity\",\n          \"float32\",\n          \"nightStarDensity\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataSkyCardAttributesV34 = [\n          \"azimuth\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"hazeDensity\",\n          \"float32\",\n          \"latitude\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"minHaze\",\n          \"float32\",\n          \"scale\",\n          [\"[]\", \"float32\", 2],\n          \"speed\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"textureUV\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.PackMapEnvDataSkyCardV34 = [\n          \"day\",\n          this.PackMapEnvDataSkyCardAttributesV34,\n          \"night\",\n          this.PackMapEnvDataSkyCardAttributesV34,\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataSkyCardsV34 = [\"cards\", Utils.getArrayReader(this.PackMapEnvDataSkyCardV34)];\n\n        this.PackMapEnvDataWaterV34 = [\n          \"waterFlags\",\n          \"uint32\",\n          \"animAmplitude\",\n          \"float32\",\n          \"animChoppiness\",\n          \"float32\",\n          \"animWind\",\n          [\"[]\", \"float32\", 2],\n          \"bumpAmount\",\n          \"float32\",\n          \"bumpAngle0\",\n          \"float32\",\n          \"bumpAngle1\",\n          \"float32\",\n          \"bumpScale0\",\n          \"float32\",\n          \"bumpScale1\",\n          \"float32\",\n          \"bumpSpeed0\",\n          \"float32\",\n          \"bumpSpeed1\",\n          \"float32\",\n          \"bumpTile0\",\n          \"float32\",\n          \"bumpTile1\",\n          \"float32\",\n          \"patternAngle\",\n          \"float32\",\n          \"patternTile\",\n          \"float32\",\n          \"patternSpeed\",\n          \"float32\",\n          \"patternEdge\",\n          \"float32\",\n          \"surfaceShallowColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceDeepColor\",\n          [\"[]\", \"uint8\", 4],\n          \"patternColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceFresnel\",\n          \"float32\",\n          \"distortAmount\",\n          \"float32\",\n          \"bumpTexture\",\n          Utils.getFileNameReader(),\n          \"patternTexture\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackMapEnvDataWindV34 = [\n          \"azimuth\",\n          \"uint8\",\n          \"elevation\",\n          \"uint8\",\n          \"noise\",\n          \"uint8\",\n          \"speed\",\n          \"uint8\",\n          \"gust\",\n          \"uint8\",\n          \"gustFreq\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataLocalV34 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV34),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV34),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV34),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV34),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV34),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV34),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV34),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV34),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV34),\n          \"name\",\n          Utils.getString16Reader(),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"zRange\",\n          [\"[]\", \"float32\", 2],\n          \"fadeHorizInner\",\n          \"float32\",\n          \"fadeHorizOuter\",\n          \"float32\",\n          \"fadeVertical\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n          \"vertexArray\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n        ];\n\n        this.PackMapEnvDataSkyModeTexV34 = [\n          \"texPathNE\",\n          Utils.getFileNameReader(),\n          \"texPathSW\",\n          Utils.getFileNameReader(),\n          \"texPathT\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackMapEnvDataGlobalV34 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV34),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV34),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV34),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV34),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV34),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV34),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV34),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV34),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV34),\n          \"name\",\n          Utils.getString16Reader(),\n          \"skyModeTex\",\n          Utils.getArrayReader(this.PackMapEnvDataSkyModeTexV34),\n          \"starFile\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.__root = this.PackMapEnvironmentV34 = [\n          \"dataLocalArray\",\n          Utils.getArrayReader(this.PackMapEnvDataLocalV34),\n          \"dataGlobal\",\n          Utils.getPointerReader(this.PackMapEnvDataGlobalV34),\n        ];\n      },\n\n      // => Version: 33\n      33: function () {\n        this.PackMapEnvDataLightV33 = [\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"intensity\",\n          \"float32\",\n          \"direction\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.PackMapEnvDataLightingV33 = [\"lights\", Utils.getRefArrayReader(this.PackMapEnvDataLightV33)];\n\n        this.PackMapEnvDataLayerAttributesV33 = [\n          \"density\",\n          \"float32\",\n          \"haze\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"velocity\",\n          [\"[]\", \"float32\", 2],\n        ];\n\n        this.PackMapEnvDataLayerV33 = [\n          \"altitude\",\n          \"float32\",\n          \"cutOut\",\n          \"float32\",\n          \"depth\",\n          \"float32\",\n          \"scale\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"attributes\",\n          Utils.getArrayReader(this.PackMapEnvDataLayerAttributesV33),\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataCloudsV33 = [\"layers\", Utils.getArrayReader(this.PackMapEnvDataLayerV33)];\n\n        this.PackMapEnvDataEffectV33 = [\n          \"glow\",\n          [\"[]\", \"uint8\", 4],\n          \"tintColor\",\n          [\"[]\", \"uint8\", 4],\n          \"saturation\",\n          \"float32\",\n          \"tintAmount\",\n          \"float32\",\n          \"glowLevel\",\n          [\"[]\", \"uint8\", 4],\n          \"glowAmplify\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataHazeV33 = [\n          \"distColor\",\n          [\"[]\", \"uint8\", 4],\n          \"distRange\",\n          [\"[]\", \"float32\", 2],\n          \"heightColor\",\n          [\"[]\", \"uint8\", 4],\n          \"heightRange\",\n          [\"[]\", \"float32\", 2],\n          \"depthCue\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataPFieldV33 = [\n          \"altitude\",\n          \"float32\",\n          \"angle\",\n          [\"[]\", \"float32\", 2],\n          \"depth\",\n          \"float32\",\n          \"deviation\",\n          \"float32\",\n          \"extent\",\n          \"uint16\",\n          \"fade\",\n          \"float32\",\n          \"fieldDirection\",\n          [\"[]\", \"float32\", 3],\n          \"flags\",\n          \"uint8\",\n          \"opacity\",\n          [\"[]\", \"float32\", 2],\n          \"particleCount\",\n          \"uint16\",\n          \"rotation\",\n          [\"[]\", \"float32\", 2],\n          \"scaleX\",\n          [\"[]\", \"float32\", 2],\n          \"scaleY\",\n          [\"[]\", \"float32\", 2],\n          \"speed\",\n          [\"[]\", \"float32\", 2],\n          \"texColRow\",\n          [\"[]\", \"uint32\", 2],\n          \"texFPS\",\n          \"uint16\",\n          \"texPath\",\n          Utils.getFileNameReader(),\n          \"type\",\n          \"uint8\",\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataSkyV33 = [\n          \"flags\",\n          \"uint8\",\n          \"dayHazeBottom\",\n          \"float32\",\n          \"dayHazeDensity\",\n          \"float32\",\n          \"dayHazeFalloff\",\n          \"float32\",\n          \"dayLightIntensity\",\n          \"float32\",\n          \"dayStarDensity\",\n          \"float32\",\n          \"nightHazeBottom\",\n          \"float32\",\n          \"nightHazeDensity\",\n          \"float32\",\n          \"nightHazeFalloff\",\n          \"float32\",\n          \"nightLightIntensity\",\n          \"float32\",\n          \"nightStarDensity\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataSkyCardAttributesV33 = [\n          \"azimuth\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"hazeDensity\",\n          \"float32\",\n          \"latitude\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"minHaze\",\n          \"float32\",\n          \"scale\",\n          [\"[]\", \"float32\", 2],\n          \"speed\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"textureUV\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.PackMapEnvDataSkyCardV33 = [\n          \"day\",\n          this.PackMapEnvDataSkyCardAttributesV33,\n          \"night\",\n          this.PackMapEnvDataSkyCardAttributesV33,\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataSkyCardsV33 = [\"cards\", Utils.getArrayReader(this.PackMapEnvDataSkyCardV33)];\n\n        this.PackMapEnvDataWaterV33 = [\n          \"waterFlags\",\n          \"uint32\",\n          \"animAmplitude\",\n          \"float32\",\n          \"animChoppiness\",\n          \"float32\",\n          \"animWind\",\n          [\"[]\", \"float32\", 2],\n          \"bumpAmount\",\n          \"float32\",\n          \"bumpAngle0\",\n          \"float32\",\n          \"bumpAngle1\",\n          \"float32\",\n          \"bumpScale0\",\n          \"float32\",\n          \"bumpScale1\",\n          \"float32\",\n          \"bumpSpeed0\",\n          \"float32\",\n          \"bumpSpeed1\",\n          \"float32\",\n          \"bumpTile0\",\n          \"float32\",\n          \"bumpTile1\",\n          \"float32\",\n          \"patternAngle\",\n          \"float32\",\n          \"patternTile\",\n          \"float32\",\n          \"patternSpeed\",\n          \"float32\",\n          \"patternEdge\",\n          \"float32\",\n          \"surfaceShallowColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceDeepColor\",\n          [\"[]\", \"uint8\", 4],\n          \"patternColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceFresnel\",\n          \"float32\",\n          \"distortAmount\",\n          \"float32\",\n          \"bumpTexture\",\n          Utils.getFileNameReader(),\n          \"patternTexture\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackMapEnvDataWindV33 = [\n          \"azimuth\",\n          \"uint8\",\n          \"elevation\",\n          \"uint8\",\n          \"noise\",\n          \"uint8\",\n          \"speed\",\n          \"uint8\",\n          \"gust\",\n          \"uint8\",\n          \"gustFreq\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataLocalV33 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV33),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV33),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV33),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV33),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV33),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV33),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV33),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV33),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV33),\n          \"name\",\n          Utils.getString16Reader(),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"zRange\",\n          [\"[]\", \"float32\", 2],\n          \"fadeHorizInner\",\n          \"float32\",\n          \"fadeHorizOuter\",\n          \"float32\",\n          \"fadeVertical\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n          \"vertexArray\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n        ];\n\n        this.PackMapEnvDataSkyModeTexV33 = [\n          \"texPathNE\",\n          Utils.getFileNameReader(),\n          \"texPathSW\",\n          Utils.getFileNameReader(),\n          \"texPathT\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackMapEnvDataGlobalV33 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV33),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV33),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV33),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV33),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV33),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV33),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV33),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV33),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV33),\n          \"name\",\n          Utils.getString16Reader(),\n          \"skyModeTex\",\n          Utils.getArrayReader(this.PackMapEnvDataSkyModeTexV33),\n          \"starFile\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.__root = this.PackMapEnvironmentV33 = [\n          \"dataLocalArray\",\n          Utils.getArrayReader(this.PackMapEnvDataLocalV33),\n          \"dataGlobal\",\n          Utils.getPointerReader(this.PackMapEnvDataGlobalV33),\n        ];\n      },\n\n      // => Version: 32, ReferencedFunction: 0xEB7D60\n      32: function () {\n        this.PackMapEnvDataLightV32 = [\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"intensity\",\n          \"float32\",\n          \"direction\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.PackMapEnvDataLightingV32 = [\"lights\", Utils.getRefArrayReader(this.PackMapEnvDataLightV32)];\n\n        this.PackMapEnvDataLayerAttributesV32 = [\n          \"density\",\n          \"float32\",\n          \"haze\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"velocity\",\n          [\"[]\", \"float32\", 2],\n        ];\n\n        this.PackMapEnvDataLayerV32 = [\n          \"altitude\",\n          \"float32\",\n          \"cutOut\",\n          \"float32\",\n          \"depth\",\n          \"float32\",\n          \"scale\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"attributes\",\n          Utils.getArrayReader(this.PackMapEnvDataLayerAttributesV32),\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataCloudsV32 = [\"layers\", Utils.getArrayReader(this.PackMapEnvDataLayerV32)];\n\n        this.PackMapEnvDataEffectV32 = [\n          \"glow\",\n          [\"[]\", \"uint8\", 4],\n          \"tintColor\",\n          [\"[]\", \"uint8\", 4],\n          \"saturation\",\n          \"float32\",\n          \"tintAmount\",\n          \"float32\",\n          \"glowLevel\",\n          [\"[]\", \"uint8\", 4],\n          \"glowAmplify\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataHazeV32 = [\n          \"distColor\",\n          [\"[]\", \"uint8\", 4],\n          \"distRange\",\n          [\"[]\", \"float32\", 2],\n          \"heightColor\",\n          [\"[]\", \"uint8\", 4],\n          \"heightRange\",\n          [\"[]\", \"float32\", 2],\n          \"depthCue\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataPFieldV32 = [\n          \"altitude\",\n          \"float32\",\n          \"angle\",\n          [\"[]\", \"float32\", 2],\n          \"depth\",\n          \"float32\",\n          \"deviation\",\n          \"float32\",\n          \"extent\",\n          \"uint16\",\n          \"fade\",\n          \"float32\",\n          \"fieldDirection\",\n          [\"[]\", \"float32\", 3],\n          \"flags\",\n          \"uint8\",\n          \"opacity\",\n          [\"[]\", \"float32\", 2],\n          \"particleCount\",\n          \"uint16\",\n          \"rotation\",\n          [\"[]\", \"float32\", 2],\n          \"scaleX\",\n          [\"[]\", \"float32\", 2],\n          \"scaleY\",\n          [\"[]\", \"float32\", 2],\n          \"speed\",\n          [\"[]\", \"float32\", 2],\n          \"texColRow\",\n          [\"[]\", \"uint32\", 2],\n          \"texFPS\",\n          \"uint16\",\n          \"texPath\",\n          Utils.getFileNameReader(),\n          \"type\",\n          \"uint8\",\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataSkyV32 = [\n          \"flags\",\n          \"uint8\",\n          \"dayHazeBottom\",\n          \"float32\",\n          \"dayHazeDensity\",\n          \"float32\",\n          \"dayHazeFalloff\",\n          \"float32\",\n          \"dayLightIntensity\",\n          \"float32\",\n          \"dayStarDensity\",\n          \"float32\",\n          \"nightHazeBottom\",\n          \"float32\",\n          \"nightHazeDensity\",\n          \"float32\",\n          \"nightHazeFalloff\",\n          \"float32\",\n          \"nightLightIntensity\",\n          \"float32\",\n          \"nightStarDensity\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataSkyCardAttributesV32 = [\n          \"azimuth\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"hazeDensity\",\n          \"float32\",\n          \"latitude\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"minHaze\",\n          \"float32\",\n          \"scale\",\n          [\"[]\", \"float32\", 2],\n          \"speed\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"textureUV\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.PackMapEnvDataSkyCardV32 = [\n          \"day\",\n          this.PackMapEnvDataSkyCardAttributesV32,\n          \"night\",\n          this.PackMapEnvDataSkyCardAttributesV32,\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataSkyCardsV32 = [\"cards\", Utils.getArrayReader(this.PackMapEnvDataSkyCardV32)];\n\n        this.PackMapEnvDataWaterV32 = [\n          \"waterFlags\",\n          \"uint32\",\n          \"animAmplitude\",\n          \"float32\",\n          \"animChoppiness\",\n          \"float32\",\n          \"animWind\",\n          [\"[]\", \"float32\", 2],\n          \"bumpAmount\",\n          \"float32\",\n          \"bumpAngle0\",\n          \"float32\",\n          \"bumpAngle1\",\n          \"float32\",\n          \"bumpScale0\",\n          \"float32\",\n          \"bumpScale1\",\n          \"float32\",\n          \"bumpSpeed0\",\n          \"float32\",\n          \"bumpSpeed1\",\n          \"float32\",\n          \"bumpTile0\",\n          \"float32\",\n          \"bumpTile1\",\n          \"float32\",\n          \"patternAngle\",\n          \"float32\",\n          \"patternTile\",\n          \"float32\",\n          \"patternSpeed\",\n          \"float32\",\n          \"patternEdge\",\n          \"float32\",\n          \"surfaceShallowColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceDeepColor\",\n          [\"[]\", \"uint8\", 4],\n          \"patternColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceFresnel\",\n          \"float32\",\n          \"distortAmount\",\n          \"float32\",\n          \"bumpTexture\",\n          Utils.getFileNameReader(),\n          \"patternTexture\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackMapEnvDataWindV32 = [\n          \"azimuth\",\n          \"uint8\",\n          \"elevation\",\n          \"uint8\",\n          \"noise\",\n          \"uint8\",\n          \"speed\",\n          \"uint8\",\n          \"gust\",\n          \"uint8\",\n          \"gustFreq\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataLocalV32 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV32),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV32),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV32),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV32),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV32),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV32),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV32),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV32),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV32),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"zRange\",\n          [\"[]\", \"float32\", 2],\n          \"fadeHorizInner\",\n          \"float32\",\n          \"fadeHorizOuter\",\n          \"float32\",\n          \"fadeVertical\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n          \"vertexArray\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n        ];\n\n        this.PackMapEnvDataSkyModeTexV32 = [\n          \"texPathNE\",\n          Utils.getFileNameReader(),\n          \"texPathSW\",\n          Utils.getFileNameReader(),\n          \"texPathT\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackMapEnvDataGlobalV32 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV32),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV32),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV32),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV32),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV32),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV32),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV32),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV32),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV32),\n          \"skyModeTex\",\n          Utils.getArrayReader(this.PackMapEnvDataSkyModeTexV32),\n          \"starFile\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.__root = this.PackMapEnvironmentV32 = [\n          \"dataLocalArray\",\n          Utils.getArrayReader(this.PackMapEnvDataLocalV32),\n          \"dataGlobal\",\n          Utils.getPointerReader(this.PackMapEnvDataGlobalV32),\n        ];\n      },\n\n      // => Version: 31, ReferencedFunction: 0xEB7CF0\n      31: function () {\n        this.PackMapEnvDataLightV31 = [\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"intensity\",\n          \"float32\",\n          \"direction\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.PackMapEnvDataLightingV31 = [\"lights\", Utils.getRefArrayReader(this.PackMapEnvDataLightV31)];\n\n        this.PackMapEnvDataLayerAttributesV31 = [\n          \"density\",\n          \"float32\",\n          \"depth\",\n          \"float32\",\n          \"haze\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"velocity\",\n          [\"[]\", \"float32\", 2],\n        ];\n\n        this.PackMapEnvDataLayerV31 = [\n          \"altitude\",\n          \"float32\",\n          \"cutOut\",\n          \"float32\",\n          \"scale\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"day\",\n          this.PackMapEnvDataLayerAttributesV31,\n          \"night\",\n          this.PackMapEnvDataLayerAttributesV31,\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataCloudsV31 = [\"layers\", Utils.getArrayReader(this.PackMapEnvDataLayerV31)];\n\n        this.PackMapEnvDataEffectV31 = [\n          \"glow\",\n          [\"[]\", \"uint8\", 4],\n          \"tintColor\",\n          [\"[]\", \"uint8\", 4],\n          \"saturation\",\n          \"float32\",\n          \"tintAmount\",\n          \"float32\",\n          \"glowLevel\",\n          [\"[]\", \"uint8\", 4],\n          \"glowAmplify\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataHazeV31 = [\n          \"distColor\",\n          [\"[]\", \"uint8\", 4],\n          \"distRange\",\n          [\"[]\", \"float32\", 2],\n          \"heightColor\",\n          [\"[]\", \"uint8\", 4],\n          \"heightRange\",\n          [\"[]\", \"float32\", 2],\n          \"depthCue\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataPFieldV31 = [\n          \"altitude\",\n          \"float32\",\n          \"angle\",\n          [\"[]\", \"float32\", 2],\n          \"depth\",\n          \"float32\",\n          \"deviation\",\n          \"float32\",\n          \"extent\",\n          \"uint16\",\n          \"fade\",\n          \"float32\",\n          \"fieldDirection\",\n          [\"[]\", \"float32\", 3],\n          \"flags\",\n          \"uint8\",\n          \"opacity\",\n          [\"[]\", \"float32\", 2],\n          \"particleCount\",\n          \"uint16\",\n          \"rotation\",\n          [\"[]\", \"float32\", 2],\n          \"scaleX\",\n          [\"[]\", \"float32\", 2],\n          \"scaleY\",\n          [\"[]\", \"float32\", 2],\n          \"speed\",\n          [\"[]\", \"float32\", 2],\n          \"texColRow\",\n          [\"[]\", \"uint32\", 2],\n          \"texFPS\",\n          \"uint16\",\n          \"texPath\",\n          Utils.getFileNameReader(),\n          \"type\",\n          \"uint8\",\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataSkyV31 = [\n          \"flags\",\n          \"uint8\",\n          \"dayHazeBottom\",\n          \"float32\",\n          \"dayHazeDensity\",\n          \"float32\",\n          \"dayHazeFalloff\",\n          \"float32\",\n          \"dayLightIntensity\",\n          \"float32\",\n          \"dayStarDensity\",\n          \"float32\",\n          \"nightHazeBottom\",\n          \"float32\",\n          \"nightHazeDensity\",\n          \"float32\",\n          \"nightHazeFalloff\",\n          \"float32\",\n          \"nightLightIntensity\",\n          \"float32\",\n          \"nightStarDensity\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataSkyCardAttributesV31 = [\n          \"azimuth\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"hazeDensity\",\n          \"float32\",\n          \"latitude\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"minHaze\",\n          \"float32\",\n          \"scale\",\n          [\"[]\", \"float32\", 2],\n          \"speed\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"textureUV\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.PackMapEnvDataSkyCardV31 = [\n          \"day\",\n          this.PackMapEnvDataSkyCardAttributesV31,\n          \"night\",\n          this.PackMapEnvDataSkyCardAttributesV31,\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataSkyCardsV31 = [\"cards\", Utils.getArrayReader(this.PackMapEnvDataSkyCardV31)];\n\n        this.PackMapEnvDataWaterV31 = [\n          \"waterFlags\",\n          \"uint32\",\n          \"animAmplitude\",\n          \"float32\",\n          \"animChoppiness\",\n          \"float32\",\n          \"animWind\",\n          [\"[]\", \"float32\", 2],\n          \"bumpAmount\",\n          \"float32\",\n          \"bumpAngle0\",\n          \"float32\",\n          \"bumpAngle1\",\n          \"float32\",\n          \"bumpScale0\",\n          \"float32\",\n          \"bumpScale1\",\n          \"float32\",\n          \"bumpSpeed0\",\n          \"float32\",\n          \"bumpSpeed1\",\n          \"float32\",\n          \"bumpTile0\",\n          \"float32\",\n          \"bumpTile1\",\n          \"float32\",\n          \"patternAngle\",\n          \"float32\",\n          \"patternTile\",\n          \"float32\",\n          \"patternSpeed\",\n          \"float32\",\n          \"patternEdge\",\n          \"float32\",\n          \"surfaceShallowColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceDeepColor\",\n          [\"[]\", \"uint8\", 4],\n          \"patternColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceFresnel\",\n          \"float32\",\n          \"distortAmount\",\n          \"float32\",\n          \"bumpTexture\",\n          Utils.getFileNameReader(),\n          \"patternTexture\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackMapEnvDataWindV31 = [\n          \"azimuth\",\n          \"uint8\",\n          \"elevation\",\n          \"uint8\",\n          \"noise\",\n          \"uint8\",\n          \"speed\",\n          \"uint8\",\n          \"gust\",\n          \"uint8\",\n          \"gustFreq\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataLocalV31 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV31),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV31),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV31),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV31),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV31),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV31),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV31),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV31),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV31),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"zRange\",\n          [\"[]\", \"float32\", 2],\n          \"fadeHorizInner\",\n          \"float32\",\n          \"fadeHorizOuter\",\n          \"float32\",\n          \"fadeVertical\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n          \"vertexArray\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n        ];\n\n        this.PackMapEnvDataSkyModeTexV31 = [\n          \"texPathNE\",\n          Utils.getFileNameReader(),\n          \"texPathSW\",\n          Utils.getFileNameReader(),\n          \"texPathT\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackMapEnvDataGlobalV31 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV31),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV31),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV31),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV31),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV31),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV31),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV31),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV31),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV31),\n          \"skyModeTex\",\n          Utils.getArrayReader(this.PackMapEnvDataSkyModeTexV31),\n          \"starFile\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.__root = this.PackMapEnvironmentV31 = [\n          \"dataLocalArray\",\n          Utils.getArrayReader(this.PackMapEnvDataLocalV31),\n          \"dataGlobal\",\n          Utils.getPointerReader(this.PackMapEnvDataGlobalV31),\n        ];\n      },\n\n      // => Version: 30, ReferencedFunction: 0xEB7C70\n      30: function () {\n        this.PackMapEnvDataLightV30 = [\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"intensity\",\n          \"float32\",\n          \"direction\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.PackMapEnvDataLightingV30 = [\"lights\", Utils.getRefArrayReader(this.PackMapEnvDataLightV30)];\n\n        this.PackMapEnvDataLayerAttributesV30 = [\n          \"density\",\n          \"float32\",\n          \"depth\",\n          \"float32\",\n          \"haze\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"velocity\",\n          [\"[]\", \"float32\", 2],\n        ];\n\n        this.PackMapEnvDataLayerV30 = [\n          \"altitude\",\n          \"float32\",\n          \"cutOut\",\n          \"float32\",\n          \"scale\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"day\",\n          this.PackMapEnvDataLayerAttributesV30,\n          \"night\",\n          this.PackMapEnvDataLayerAttributesV30,\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataCloudsV30 = [\"layers\", Utils.getArrayReader(this.PackMapEnvDataLayerV30)];\n\n        this.PackMapEnvDataEffectV30 = [\n          \"glow\",\n          [\"[]\", \"uint8\", 4],\n          \"tintColor\",\n          [\"[]\", \"uint8\", 4],\n          \"saturation\",\n          \"float32\",\n          \"tintAmount\",\n          \"float32\",\n          \"glowLevel\",\n          [\"[]\", \"uint8\", 4],\n          \"glowAmplify\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataHazeV30 = [\n          \"distColor\",\n          [\"[]\", \"uint8\", 4],\n          \"distRange\",\n          [\"[]\", \"float32\", 2],\n          \"heightColor\",\n          [\"[]\", \"uint8\", 4],\n          \"heightRange\",\n          [\"[]\", \"float32\", 2],\n          \"depthCue\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataPFieldV30 = [\n          \"angle\",\n          [\"[]\", \"float32\", 2],\n          \"deviation\",\n          \"float32\",\n          \"extent\",\n          \"uint16\",\n          \"fieldDirection\",\n          [\"[]\", \"float32\", 3],\n          \"flags\",\n          \"uint8\",\n          \"opacity\",\n          [\"[]\", \"float32\", 2],\n          \"particleCount\",\n          \"uint16\",\n          \"rotation\",\n          [\"[]\", \"float32\", 2],\n          \"scaleX\",\n          [\"[]\", \"float32\", 2],\n          \"scaleY\",\n          [\"[]\", \"float32\", 2],\n          \"speed\",\n          [\"[]\", \"float32\", 2],\n          \"texColRow\",\n          [\"[]\", \"uint32\", 2],\n          \"texFPS\",\n          \"uint16\",\n          \"texPath\",\n          Utils.getFileNameReader(),\n          \"type\",\n          \"uint8\",\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataSkyV30 = [\n          \"flags\",\n          \"uint8\",\n          \"dayHazeBottom\",\n          \"float32\",\n          \"dayHazeDensity\",\n          \"float32\",\n          \"dayHazeFalloff\",\n          \"float32\",\n          \"dayLightIntensity\",\n          \"float32\",\n          \"dayStarDensity\",\n          \"float32\",\n          \"nightHazeBottom\",\n          \"float32\",\n          \"nightHazeDensity\",\n          \"float32\",\n          \"nightHazeFalloff\",\n          \"float32\",\n          \"nightLightIntensity\",\n          \"float32\",\n          \"nightStarDensity\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataSkyCardAttributesV30 = [\n          \"azimuth\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"hazeDensity\",\n          \"float32\",\n          \"latitude\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"minHaze\",\n          \"float32\",\n          \"scale\",\n          [\"[]\", \"float32\", 2],\n          \"speed\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"textureUV\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.PackMapEnvDataSkyCardV30 = [\n          \"day\",\n          this.PackMapEnvDataSkyCardAttributesV30,\n          \"night\",\n          this.PackMapEnvDataSkyCardAttributesV30,\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataSkyCardsV30 = [\"cards\", Utils.getArrayReader(this.PackMapEnvDataSkyCardV30)];\n\n        this.PackMapEnvDataWaterV30 = [\n          \"waterFlags\",\n          \"uint32\",\n          \"animAmplitude\",\n          \"float32\",\n          \"animChoppiness\",\n          \"float32\",\n          \"animWind\",\n          [\"[]\", \"float32\", 2],\n          \"bumpAmount\",\n          \"float32\",\n          \"bumpAngle0\",\n          \"float32\",\n          \"bumpAngle1\",\n          \"float32\",\n          \"bumpScale0\",\n          \"float32\",\n          \"bumpScale1\",\n          \"float32\",\n          \"bumpSpeed0\",\n          \"float32\",\n          \"bumpSpeed1\",\n          \"float32\",\n          \"bumpTile0\",\n          \"float32\",\n          \"bumpTile1\",\n          \"float32\",\n          \"patternAngle\",\n          \"float32\",\n          \"patternTile\",\n          \"float32\",\n          \"patternSpeed\",\n          \"float32\",\n          \"surfaceShallowColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceDeepColor\",\n          [\"[]\", \"uint8\", 4],\n          \"patternColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceFresnel\",\n          \"float32\",\n          \"distortAmount\",\n          \"float32\",\n          \"bumpTexture\",\n          Utils.getFileNameReader(),\n          \"patternTexture\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackMapEnvDataWindV30 = [\n          \"azimuth\",\n          \"uint8\",\n          \"elevation\",\n          \"uint8\",\n          \"noise\",\n          \"uint8\",\n          \"speed\",\n          \"uint8\",\n          \"gust\",\n          \"uint8\",\n          \"gustFreq\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataLocalV30 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV30),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV30),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV30),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV30),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV30),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV30),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV30),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV30),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV30),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"zRange\",\n          [\"[]\", \"float32\", 2],\n          \"fadeHorizInner\",\n          \"float32\",\n          \"fadeHorizOuter\",\n          \"float32\",\n          \"fadeVertical\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n          \"vertexArray\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n        ];\n\n        this.PackMapEnvDataSkyModeTexV30 = [\n          \"texPathNE\",\n          Utils.getFileNameReader(),\n          \"texPathSW\",\n          Utils.getFileNameReader(),\n          \"texPathT\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackMapEnvDataGlobalV30 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV30),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV30),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV30),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV30),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV30),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV30),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV30),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV30),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV30),\n          \"skyModeTex\",\n          Utils.getArrayReader(this.PackMapEnvDataSkyModeTexV30),\n          \"starFile\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.__root = this.PackMapEnvironmentV30 = [\n          \"dataLocalArray\",\n          Utils.getArrayReader(this.PackMapEnvDataLocalV30),\n          \"dataGlobal\",\n          Utils.getPointerReader(this.PackMapEnvDataGlobalV30),\n        ];\n      },\n\n      // => Version: 29\n      29: function () {\n        this.PackMapEnvDataLightV29 = [\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"intensity\",\n          \"float32\",\n          \"direction\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.PackMapEnvDataLightingV29 = [\"lights\", Utils.getRefArrayReader(this.PackMapEnvDataLightV29)];\n\n        this.PackMapEnvDataLayerAttributesV29 = [\n          \"density\",\n          \"float32\",\n          \"depth\",\n          \"float32\",\n          \"haze\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"velocity\",\n          [\"[]\", \"float32\", 2],\n        ];\n\n        this.PackMapEnvDataLayerV29 = [\n          \"altitude\",\n          \"float32\",\n          \"scale\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"day\",\n          this.PackMapEnvDataLayerAttributesV29,\n          \"night\",\n          this.PackMapEnvDataLayerAttributesV29,\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataCloudsV29 = [\"layers\", Utils.getArrayReader(this.PackMapEnvDataLayerV29)];\n\n        this.PackMapEnvDataEffectV29 = [\n          \"glow\",\n          [\"[]\", \"uint8\", 4],\n          \"tintColor\",\n          [\"[]\", \"uint8\", 4],\n          \"saturation\",\n          \"float32\",\n          \"tintAmount\",\n          \"float32\",\n          \"glowLevel\",\n          [\"[]\", \"uint8\", 4],\n          \"glowAmplify\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataHazeV29 = [\n          \"distColor\",\n          [\"[]\", \"uint8\", 4],\n          \"distRange\",\n          [\"[]\", \"float32\", 2],\n          \"heightColor\",\n          [\"[]\", \"uint8\", 4],\n          \"heightRange\",\n          [\"[]\", \"float32\", 2],\n          \"depthCue\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataPFieldV29 = [\n          \"angle\",\n          [\"[]\", \"float32\", 2],\n          \"deviation\",\n          \"float32\",\n          \"extent\",\n          \"uint16\",\n          \"fieldDirection\",\n          [\"[]\", \"float32\", 3],\n          \"flags\",\n          \"uint8\",\n          \"opacity\",\n          [\"[]\", \"float32\", 2],\n          \"particleCount\",\n          \"uint16\",\n          \"rotation\",\n          [\"[]\", \"float32\", 2],\n          \"scaleX\",\n          [\"[]\", \"float32\", 2],\n          \"scaleY\",\n          [\"[]\", \"float32\", 2],\n          \"speed\",\n          [\"[]\", \"float32\", 2],\n          \"texColRow\",\n          [\"[]\", \"uint32\", 2],\n          \"texFPS\",\n          \"uint16\",\n          \"texPath\",\n          Utils.getFileNameReader(),\n          \"type\",\n          \"uint8\",\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataSkyV29 = [\n          \"flags\",\n          \"uint8\",\n          \"dayHazeBottom\",\n          \"float32\",\n          \"dayHazeDensity\",\n          \"float32\",\n          \"dayHazeFalloff\",\n          \"float32\",\n          \"dayLightIntensity\",\n          \"float32\",\n          \"dayStarDensity\",\n          \"float32\",\n          \"nightHazeBottom\",\n          \"float32\",\n          \"nightHazeDensity\",\n          \"float32\",\n          \"nightHazeFalloff\",\n          \"float32\",\n          \"nightLightIntensity\",\n          \"float32\",\n          \"nightStarDensity\",\n          \"float32\",\n        ];\n\n        this.PackMapEnvDataSkyCardAttributesV29 = [\n          \"azimuth\",\n          \"float32\",\n          \"density\",\n          \"float32\",\n          \"hazeDensity\",\n          \"float32\",\n          \"latitude\",\n          \"float32\",\n          \"lightIntensity\",\n          \"float32\",\n          \"minHaze\",\n          \"float32\",\n          \"scale\",\n          [\"[]\", \"float32\", 2],\n          \"speed\",\n          \"float32\",\n          \"texture\",\n          Utils.getFileNameReader(),\n          \"textureUV\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.PackMapEnvDataSkyCardV29 = [\n          \"day\",\n          this.PackMapEnvDataSkyCardAttributesV29,\n          \"night\",\n          this.PackMapEnvDataSkyCardAttributesV29,\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapEnvDataSkyCardsV29 = [\"cards\", Utils.getArrayReader(this.PackMapEnvDataSkyCardV29)];\n\n        this.PackMapEnvDataWaterV29 = [\n          \"waterFlags\",\n          \"uint32\",\n          \"animAmplitude\",\n          \"float32\",\n          \"animChoppiness\",\n          \"float32\",\n          \"animWind\",\n          [\"[]\", \"float32\", 2],\n          \"bumpAmount\",\n          \"float32\",\n          \"bumpAngle0\",\n          \"float32\",\n          \"bumpAngle1\",\n          \"float32\",\n          \"bumpScale0\",\n          \"float32\",\n          \"bumpScale1\",\n          \"float32\",\n          \"bumpSpeed0\",\n          \"float32\",\n          \"bumpSpeed1\",\n          \"float32\",\n          \"bumpTile0\",\n          \"float32\",\n          \"bumpTile1\",\n          \"float32\",\n          \"patternAngle\",\n          \"float32\",\n          \"patternTile\",\n          \"float32\",\n          \"patternSpeed\",\n          \"float32\",\n          \"surfaceShallowColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceDeepColor\",\n          [\"[]\", \"uint8\", 4],\n          \"patternColor\",\n          [\"[]\", \"uint8\", 4],\n          \"surfaceFresnel\",\n          \"float32\",\n          \"distortAmount\",\n          \"float32\",\n          \"bumpTexture\",\n          Utils.getFileNameReader(),\n          \"patternTexture\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackMapEnvDataWindV29 = [\n          \"azimuth\",\n          \"uint8\",\n          \"elevation\",\n          \"uint8\",\n          \"noise\",\n          \"uint8\",\n          \"speed\",\n          \"uint8\",\n          \"gust\",\n          \"uint8\",\n          \"gustFreq\",\n          \"uint8\",\n        ];\n\n        this.PackMapEnvDataLocalV29 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV29),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV29),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV29),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV29),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV29),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV29),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV29),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV29),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV29),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"zRange\",\n          [\"[]\", \"float32\", 2],\n          \"fadeHorizInner\",\n          \"float32\",\n          \"fadeHorizOuter\",\n          \"float32\",\n          \"fadeVertical\",\n          \"float32\",\n          \"type\",\n          \"uint8\",\n          \"vertexArray\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n        ];\n\n        this.PackMapEnvDataSkyModeTexV29 = [\n          \"texPathNE\",\n          Utils.getFileNameReader(),\n          \"texPathSW\",\n          Utils.getFileNameReader(),\n          \"texPathT\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackMapEnvDataGlobalV29 = [\n          \"lighting\",\n          Utils.getArrayReader(this.PackMapEnvDataLightingV29),\n          \"clouds\",\n          Utils.getPointerReader(this.PackMapEnvDataCloudsV29),\n          \"effect\",\n          Utils.getRefArrayReader(this.PackMapEnvDataEffectV29),\n          \"haze\",\n          Utils.getRefArrayReader(this.PackMapEnvDataHazeV29),\n          \"particleFields\",\n          Utils.getRefArrayReader(this.PackMapEnvDataPFieldV29),\n          \"sky\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyV29),\n          \"skyCards\",\n          Utils.getPointerReader(this.PackMapEnvDataSkyCardsV29),\n          \"water\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWaterV29),\n          \"wind\",\n          Utils.getRefArrayReader(this.PackMapEnvDataWindV29),\n          \"skyModeTex\",\n          Utils.getArrayReader(this.PackMapEnvDataSkyModeTexV29),\n          \"starFile\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.__root = this.PackMapEnvironmentV29 = [\n          \"dataLocalArray\",\n          Utils.getArrayReader(this.PackMapEnvDataLocalV29),\n          \"dataGlobal\",\n          Utils.getPointerReader(this.PackMapEnvDataGlobalV29),\n        ];\n      },\n    },\n  },\n];\n","const Utils = require(\"../../util/ParserUtils.js\");\n\nmodule.exports = [\n  /// ==================================================\n  /// Chunk: eula, versions: 1, strucTab: 0x18843EC\n  /// ==================================================\n\n  {\n    name: \"eula\",\n    versions: {\n      // => Version: 0\n      0: function () {\n        this.PackEulaLanguageV0 = [\"Language\", \"uint8\", \"Text\", Utils.getString16Reader()];\n\n        this.__root = this.PackEulaV0 = [\"Language\", Utils.getArrayReader(this.PackEulaLanguageV0), \"Version\", \"uint8\"];\n      },\n    },\n  },\n];\n","const Utils = require(\"../../util/ParserUtils.js\");\n\nmodule.exports = [\n  /// ==================================================\n  /// Chunk: exp, versions: 1, strucTab: 0x1720B58\n  /// ==================================================\n\n  {\n    name: \"exp\",\n    versions: {\n      // => Version: 0\n      0: function () {\n        this.MapExpansionProperty = [\n          \"type\",\n          \"uint32\",\n          \"val\",\n          Utils.getQWordReader(),\n          \"strVal\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.__root = this.MapExpansionProperties = [\"properties\", Utils.getArrayReader(this.MapExpansionProperty)];\n      },\n    },\n  },\n];\n","const Utils = require(\"../../util/ParserUtils.js\");\n\nmodule.exports = [\n  /// ==================================================\n  /// Chunk: EXPA, versions: 4, strucTab: 0x1773290\n  /// ==================================================\n\n  {\n    name: \"EXPA\",\n    versions: {\n      // => Version: 3\n      3: function () {\n        this.ModelFileSnapPointV3 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"shape\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n        ];\n\n        this.ModelExpansionEmitterV3 = [\n          \"curl\",\n          \"float32\",\n          \"vortexSize\",\n          \"float32\",\n          \"curlQuality\",\n          \"uint32\",\n          \"curlFlags\",\n          \"uint32\",\n          \"fieldScale\",\n          \"float32\",\n        ];\n\n        this.__root = this.ModelFileExpansionV3 = [\n          \"snapPoints\",\n          Utils.getArrayReader(this.ModelFileSnapPointV3),\n          \"snapPointPriority\",\n          \"float32\",\n          \"emitters\",\n          Utils.getArrayReader(this.ModelExpansionEmitterV3),\n        ];\n      },\n\n      // => Version: 2\n      2: function () {\n        this.ModelFileSnapPointV2 = [\"bone\", Utils.getQWordReader(), \"shape\", Utils.getQWordReader()];\n\n        this.ModelExpansionEmitterV2 = [\n          \"curl\",\n          \"float32\",\n          \"vortexSize\",\n          \"float32\",\n          \"curlQuality\",\n          \"uint32\",\n          \"curlFlags\",\n          \"uint32\",\n          \"fieldScale\",\n          \"float32\",\n        ];\n\n        this.__root = this.ModelFileExpansionV2 = [\n          \"snapPoints\",\n          Utils.getArrayReader(this.ModelFileSnapPointV2),\n          \"snapPointPriority\",\n          \"float32\",\n          \"emitters\",\n          Utils.getArrayReader(this.ModelExpansionEmitterV2),\n        ];\n      },\n\n      // => Version: 1\n      1: function () {\n        this.ModelFileSnapPointV1 = [\"bone\", Utils.getQWordReader()];\n\n        this.ModelExpansionEmitterV1 = [\n          \"curl\",\n          \"float32\",\n          \"vortexSize\",\n          \"float32\",\n          \"curlQuality\",\n          \"uint32\",\n          \"curlFlags\",\n          \"uint32\",\n          \"fieldScale\",\n          \"float32\",\n        ];\n\n        this.__root = this.ModelFileExpansionV1 = [\n          \"snapPoints\",\n          Utils.getArrayReader(this.ModelFileSnapPointV1),\n          \"snapPointPriority\",\n          \"float32\",\n          \"emitters\",\n          Utils.getArrayReader(this.ModelExpansionEmitterV1),\n        ];\n      },\n\n      // => Version: 0\n      0: function () {\n        this.ModelFileSnapPointV0 = [\"bone\", Utils.getQWordReader()];\n\n        this.ModelExpansionEmitterV0 = [\"curl\", \"float32\", \"vortexSize\", \"float32\"];\n\n        this.__root = this.ModelFileExpansionV0 = [\n          \"snapPoints\",\n          Utils.getArrayReader(this.ModelFileSnapPointV0),\n          \"snapPointPriority\",\n          \"float32\",\n          \"emitters\",\n          Utils.getArrayReader(this.ModelExpansionEmitterV0),\n        ];\n      },\n    },\n  },\n];\n","const Utils = require(\"../../util/ParserUtils.js\");\n\nmodule.exports = [\n  /// ==================================================\n  /// Chunk: fall, versions: 1, strucTab: 0x1884460\n  /// ==================================================\n\n  {\n    name: \"fall\",\n    versions: {\n      // => Version: 0\n      0: function () {\n        this.PackAnimFallbackV0 = [\n          \"sourceAnim\",\n          Utils.getQWordReader(),\n          \"targetAnims\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.__root = this.PackAnimFallbacksV0 = [\"fallbacks\", Utils.getArrayReader(this.PackAnimFallbackV0)];\n      },\n    },\n  },\n];\n","const Utils = require(\"../../util/ParserUtils.js\");\n\nmodule.exports = [\n  /// ==================================================\n  /// Chunk: GAME, versions: 1, strucTab: 0x17731A4\n  /// ==================================================\n\n  {\n    name: \"GAME\",\n    versions: {\n      // => Version: 0\n      0: function () {\n        this.__root = this.ModelFileGame = [\"gameData\", Utils.getArrayReader(\"uint8\")];\n      },\n    },\n  },\n\n  /// ==================================================\n  /// Chunk: GAME, versions: 7, strucTab: 0x1830508\n  /// ==================================================\n\n  {\n    name: \"GAME\",\n    versions: {\n      // => Version: 6\n      6: function () {\n        this.ScenePathNodeV6 = [\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 4],\n          \"flags\",\n          \"uint32\",\n          \"smoothing\",\n          \"float32\",\n          \"singlesided\",\n          \"uint8\",\n        ];\n\n        this.ScenePathV6 = [\n          \"properties\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"points\",\n          Utils.getArrayReader(this.ScenePathNodeV6),\n          \"closed\",\n          \"uint8\",\n        ];\n\n        this.SceneEdgeV6 = [\"indices\", [\"[]\", \"uint32\", 2], \"triangles\", Utils.getArrayReader(\"uint32\")];\n\n        this.SceneGameMeshV6 = [\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"vertices\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"edges\",\n          Utils.getArrayReader(this.SceneEdgeV6),\n          \"moppInfo\",\n          [\"[]\", \"float32\", 4],\n          \"moppBytes\",\n          Utils.getArrayReader(\"uint8\"),\n          \"surfaces\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.SceneGameSurfaceV6 = [\"tokens\", Utils.getArrayReader(Utils.getQWordReader())];\n\n        this.__root = this.SceneFileGameV6 = [\n          \"paths\",\n          Utils.getArrayReader(this.ScenePathV6),\n          \"meshes\",\n          Utils.getArrayReader(this.SceneGameMeshV6),\n          \"surfaces\",\n          Utils.getArrayReader(this.SceneGameSurfaceV6),\n        ];\n      },\n\n      // => Version: 5\n      5: function () {\n        this.ScenePathNodeV5 = [\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 4],\n          \"radius\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"smoothing\",\n          \"float32\",\n          \"singlesided\",\n          \"uint8\",\n        ];\n\n        this.ScenePathV5 = [\n          \"properties\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"points\",\n          Utils.getArrayReader(this.ScenePathNodeV5),\n          \"closed\",\n          \"uint8\",\n        ];\n\n        this.SceneEdgeV5 = [\"indices\", [\"[]\", \"uint32\", 2], \"triangles\", Utils.getArrayReader(\"uint32\")];\n\n        this.SceneGameMeshV5 = [\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"vertices\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"edges\",\n          Utils.getArrayReader(this.SceneEdgeV5),\n          \"moppInfo\",\n          [\"[]\", \"float32\", 4],\n          \"moppBytes\",\n          Utils.getArrayReader(\"uint8\"),\n          \"surfaceFlags\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n\n        this.__root = this.SceneFileGameV5 = [\n          \"paths\",\n          Utils.getArrayReader(this.ScenePathV5),\n          \"meshes\",\n          Utils.getArrayReader(this.SceneGameMeshV5),\n        ];\n      },\n\n      // => Version: 4\n      4: function () {\n        this.ScenePathNodeV4 = [\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 4],\n          \"radius\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"smoothing\",\n          \"float32\",\n          \"singlesided\",\n          \"uint8\",\n        ];\n\n        this.ScenePathV4 = [\n          \"properties\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"points\",\n          Utils.getArrayReader(this.ScenePathNodeV4),\n          \"closed\",\n          \"uint8\",\n        ];\n\n        this.SceneEdgeV4 = [\"indices\", [\"[]\", \"uint32\", 2], \"triangles\", Utils.getArrayReader(\"uint32\")];\n\n        this.SceneGameMeshV4 = [\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"vertices\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"edges\",\n          Utils.getArrayReader(this.SceneEdgeV4),\n          \"moppInfo\",\n          [\"[]\", \"float32\", 4],\n          \"moppBytes\",\n          Utils.getArrayReader(\"uint8\"),\n          \"surfaceFlags\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n\n        this.SceneGrabNodeV4 = [\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 4],\n          \"radius\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"smoothing\",\n          \"float32\",\n        ];\n\n        this.__root = this.SceneFileGameV4 = [\n          \"paths\",\n          Utils.getArrayReader(this.ScenePathV4),\n          \"meshes\",\n          Utils.getArrayReader(this.SceneGameMeshV4),\n          \"grabPoints\",\n          Utils.getArrayReader(this.SceneGrabNodeV4),\n        ];\n      },\n\n      // => Version: 3\n      3: function () {\n        this.ScenePathNodeV3 = [\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 4],\n          \"radius\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"smoothing\",\n          \"float32\",\n        ];\n\n        this.ScenePathV3 = [\n          \"properties\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"points\",\n          Utils.getArrayReader(this.ScenePathNodeV3),\n          \"closed\",\n          \"uint8\",\n        ];\n\n        this.SceneEdgeV3 = [\"indices\", [\"[]\", \"uint32\", 2], \"triangles\", Utils.getArrayReader(\"uint32\")];\n\n        this.SceneGameMeshV3 = [\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"vertices\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"edges\",\n          Utils.getArrayReader(this.SceneEdgeV3),\n          \"moppInfo\",\n          [\"[]\", \"float32\", 4],\n          \"moppBytes\",\n          Utils.getArrayReader(\"uint8\"),\n          \"surfaceFlags\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n\n        this.SceneGrabNodeV3 = [\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 4],\n          \"radius\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"smoothing\",\n          \"float32\",\n        ];\n\n        this.__root = this.SceneFileGameV3 = [\n          \"paths\",\n          Utils.getArrayReader(this.ScenePathV3),\n          \"meshes\",\n          Utils.getArrayReader(this.SceneGameMeshV3),\n          \"grabPoints\",\n          Utils.getArrayReader(this.SceneGrabNodeV3),\n        ];\n      },\n\n      // => Version: 2\n      2: function () {\n        this.ScenePathNodeV2 = [\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 4],\n          \"radius\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"smoothing\",\n          \"float32\",\n        ];\n\n        this.ScenePathV2 = [\n          \"properties\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"points\",\n          Utils.getArrayReader(this.ScenePathNodeV2),\n          \"closed\",\n          \"uint8\",\n        ];\n\n        this.SceneEdgeV2 = [\"indices\", [\"[]\", \"uint32\", 2], \"triangles\", Utils.getArrayReader(\"uint32\")];\n\n        this.SceneGameMeshV2 = [\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"vertices\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"edges\",\n          Utils.getArrayReader(this.SceneEdgeV2),\n          \"moppInfo\",\n          [\"[]\", \"float32\", 4],\n          \"moppBytes\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.SceneGrabNodeV2 = [\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 4],\n          \"radius\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"smoothing\",\n          \"float32\",\n        ];\n\n        this.__root = this.SceneFileGameV2 = [\n          \"paths\",\n          Utils.getArrayReader(this.ScenePathV2),\n          \"meshes\",\n          Utils.getArrayReader(this.SceneGameMeshV2),\n          \"grabPoints\",\n          Utils.getArrayReader(this.SceneGrabNodeV2),\n        ];\n      },\n\n      // => Version: 1\n      1: function () {\n        this.ScenePathNodeV1 = [\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 4],\n          \"radius\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"smoothing\",\n          \"float32\",\n        ];\n\n        this.ScenePathV1 = [\n          \"properties\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"points\",\n          Utils.getArrayReader(this.ScenePathNodeV1),\n          \"closed\",\n          \"uint8\",\n        ];\n\n        this.SceneEdgeV1 = [\"indices\", [\"[]\", \"uint32\", 2], \"triangles\", Utils.getArrayReader(\"uint32\")];\n\n        this.SceneGameMeshV1 = [\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"vertices\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"edges\",\n          Utils.getArrayReader(this.SceneEdgeV1),\n          \"moppInfo\",\n          [\"[]\", \"float32\", 4],\n          \"moppBytes\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.__root = this.SceneFileGameV1 = [\n          \"paths\",\n          Utils.getArrayReader(this.ScenePathV1),\n          \"meshes\",\n          Utils.getArrayReader(this.SceneGameMeshV1),\n        ];\n      },\n\n      // => Version: 0\n      0: function () {\n        this.ScenePathNodeV0 = [\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 4],\n          \"radius\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n        ];\n\n        this.ScenePathV0 = [\n          \"properties\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"points\",\n          Utils.getArrayReader(this.ScenePathNodeV0),\n          \"closed\",\n          \"uint8\",\n        ];\n\n        this.SceneEdgeV0 = [\"indices\", [\"[]\", \"uint32\", 2], \"triangles\", Utils.getArrayReader(\"uint32\")];\n\n        this.SceneGameMeshV0 = [\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"vertices\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"edges\",\n          Utils.getArrayReader(this.SceneEdgeV0),\n          \"moppInfo\",\n          [\"[]\", \"float32\", 4],\n          \"moppBytes\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.__root = this.SceneFileGameV0 = [\n          \"paths\",\n          Utils.getArrayReader(this.ScenePathV0),\n          \"meshes\",\n          Utils.getArrayReader(this.SceneGameMeshV0),\n        ];\n      },\n    },\n  },\n];\n","const Utils = require(\"../../util/ParserUtils.js\");\n\nmodule.exports = [\n  /// ==================================================\n  /// Chunk: GEOM, versions: 2, strucTab: 0x1773278\n  /// ==================================================\n\n  {\n    name: \"GEOM\",\n    versions: {\n      // => Version: 1, ReferencedFunction: 0xF28010\n      1: function () {\n        this.ModelMeshMorphVertV66 = [\"index\", \"uint16\", \"vector\", [\"[]\", \"float32\", 3]];\n\n        this.ModelMeshMorphTargetV66 = [\n          \"positions\",\n          Utils.getArrayReader(this.ModelMeshMorphVertV66),\n          \"normals\",\n          Utils.getArrayReader(this.ModelMeshMorphVertV66),\n          \"mesh\",\n          Utils.getQWordReader(),\n        ];\n\n        this.GrBoundData = [\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"boxExtent\",\n          [\"[]\", \"float32\", 3],\n          \"sphereRadius\",\n          \"float32\",\n        ];\n\n        this.PackVertexType = [\"fvf\", \"uint32\", \"vertices\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelMeshVertexDataV1 = [\"vertexCount\", \"uint32\", \"mesh\", this.PackVertexType];\n\n        this.ModelMeshIndexDataV1 = [\"indices\", Utils.getArrayReader(\"uint16\")];\n\n        this.ModelMeshGeometryV1 = [\n          \"verts\",\n          this.ModelMeshVertexDataV1,\n          \"indices\",\n          this.ModelMeshIndexDataV1,\n          \"lods\",\n          Utils.getArrayReader(this.ModelMeshIndexDataV1),\n          \"transforms\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n\n        this.ModelMeshDataV66 = [\n          \"visBone\",\n          Utils.getQWordReader(),\n          \"morphTargets\",\n          Utils.getArrayReader(this.ModelMeshMorphTargetV66),\n          \"flags\",\n          \"uint32\",\n          \"seamVertIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"meshName\",\n          Utils.getQWordReader(),\n          \"minBound\",\n          [\"[]\", \"float32\", 3],\n          \"maxBound\",\n          [\"[]\", \"float32\", 3],\n          \"bounds\",\n          Utils.getArrayReader(this.GrBoundData),\n          \"materialIndex\",\n          \"uint32\",\n          \"materialName\",\n          Utils.getStringReader(),\n          \"boneBindings\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"geometry\",\n          Utils.getPointerReader(this.ModelMeshGeometryV1),\n        ];\n\n        this.__root = this.ModelFileGeometryV1 = [\"meshes\", Utils.getRefArrayReader(this.ModelMeshDataV66)];\n      },\n\n      // => Version: 0\n      0: function () {\n        this.ModelMeshMorphVertV65 = [\"index\", \"uint16\", \"vector\", [\"[]\", \"float32\", 3]];\n\n        this.ModelMeshMorphTargetV65 = [\n          \"positions\",\n          Utils.getArrayReader(this.ModelMeshMorphVertV65),\n          \"normals\",\n          Utils.getArrayReader(this.ModelMeshMorphVertV65),\n          \"mesh\",\n          Utils.getQWordReader(),\n        ];\n\n        this.GrBoundData = [\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"boxExtent\",\n          [\"[]\", \"float32\", 3],\n          \"sphereRadius\",\n          \"float32\",\n        ];\n\n        this.PackVertexType = [\"fvf\", \"uint32\", \"vertices\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelMeshVertexDataV0 = [\"vertexCount\", \"uint32\", \"mesh\", this.PackVertexType];\n\n        this.ModelMeshIndexDataV0 = [\"indices\", Utils.getArrayReader(\"uint16\")];\n\n        this.ModelMeshGeometryV0 = [\n          \"verts\",\n          this.ModelMeshVertexDataV0,\n          \"indices\",\n          this.ModelMeshIndexDataV0,\n          \"lods\",\n          Utils.getArrayReader(this.ModelMeshIndexDataV0),\n        ];\n\n        this.ModelMeshDataV65 = [\n          \"visBone\",\n          Utils.getQWordReader(),\n          \"morphTargets\",\n          Utils.getArrayReader(this.ModelMeshMorphTargetV65),\n          \"flags\",\n          \"uint32\",\n          \"seamVertIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"meshName\",\n          Utils.getQWordReader(),\n          \"minBound\",\n          [\"[]\", \"float32\", 3],\n          \"maxBound\",\n          [\"[]\", \"float32\", 3],\n          \"bounds\",\n          Utils.getArrayReader(this.GrBoundData),\n          \"materialIndex\",\n          \"uint32\",\n          \"materialName\",\n          Utils.getStringReader(),\n          \"boneNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"geometry\",\n          Utils.getPointerReader(this.ModelMeshGeometryV0),\n        ];\n\n        this.__root = this.ModelFileGeometryV0 = [\"meshes\", Utils.getRefArrayReader(this.ModelMeshDataV65)];\n      },\n    },\n  },\n];\n","const Utils = require(\"../../util/ParserUtils.js\");\n\nmodule.exports = [\n  /// ==================================================\n  /// Chunk: GR2S, versions: 5, strucTab: 0x177309C\n  /// ==================================================\n\n  {\n    name: \"GR2S\",\n    versions: {\n      // => Version: 4, ReferencedFunction: 0xF28C30\n      4: function () {\n        this.ModelGr2DataV4 = [\n          \"filename\",\n          Utils.getString16Reader(),\n          \"flags\",\n          \"uint32\",\n          \"data\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.__root = this.ModelFileGr2sV4 = [\"gr2Data\", Utils.getArrayReader(this.ModelGr2DataV4)];\n      },\n\n      // => Version: 3, ReferencedFunction: 0xF28880\n      3: function () {\n        this.ModelGr2DataV3 = [\n          \"filename\",\n          Utils.getString16Reader(),\n          \"flags\",\n          \"uint32\",\n          \"data\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.__root = this.ModelFileGr2sV3 = [\"gr2Data\", Utils.getArrayReader(this.ModelGr2DataV3)];\n      },\n\n      // => Version: 2, ReferencedFunction: 0xF282D0\n      2: function () {\n        this.ModelGr2DataV2 = [\n          \"filename\",\n          Utils.getString16Reader(),\n          \"flags\",\n          \"uint32\",\n          \"data\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.__root = this.ModelFileGr2sV2 = [\"gr2Data\", Utils.getArrayReader(this.ModelGr2DataV2)];\n      },\n\n      // => Version: 1\n      1: function () {\n        this.ModelGr2DataV1 = [\n          \"filename\",\n          Utils.getString16Reader(),\n          \"flags\",\n          \"uint32\",\n          \"data\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.__root = this.ModelFileGr2sV1 = [\"gr2Data\", Utils.getArrayReader(this.ModelGr2DataV1)];\n      },\n\n      // => Version: 0\n      0: function () {\n        this.ModelGr2DataV0 = [\"data\", Utils.getArrayReader(\"uint8\")];\n\n        this.__root = this.ModelFileGr2sV0 = [\"gr2Data\", Utils.getArrayReader(this.ModelGr2DataV0)];\n      },\n    },\n  },\n];\n","const Utils = require(\"../../util/ParserUtils.js\");\n\nmodule.exports = [\n  /// ==================================================\n  /// Chunk: GRMT, versions: 7, strucTab: 0x1528A80\n  /// ==================================================\n\n  {\n    name: \"GRMT\",\n    versions: {\n      // => Version: 6\n      6: function () {\n        this.__root = this.AmatGr = [\n          \"texArrayRange\",\n          \"uint8\",\n          \"texCount\",\n          \"uint8\",\n          \"sortOrder\",\n          \"uint8\",\n          \"sortTri\",\n          \"uint8\",\n          \"procAnim\",\n          \"uint8\",\n          \"debugFlags\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"texTokens\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n      },\n\n      // => Version: 5\n      5: function () {\n        this.__root = this.AmatGr = [\n          \"texArrayRange\",\n          \"uint8\",\n          \"texCount\",\n          \"uint8\",\n          \"texTransformRange\",\n          \"uint8\",\n          \"sortOrder\",\n          \"uint8\",\n          \"sortTri\",\n          \"uint8\",\n          \"procAnim\",\n          \"uint8\",\n          \"debugFlags\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"texType\",\n          \"uint32\",\n          \"textureMasks\",\n          [\"[]\", \"uint32\", 4],\n          \"texTokens\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n      },\n\n      // => Version: 4\n      4: function () {\n        this.__root = this.AmatGr = [\n          \"texArrayRange\",\n          \"uint8\",\n          \"texCount\",\n          \"uint8\",\n          \"texTransformRange\",\n          \"uint8\",\n          \"sortOrder\",\n          \"uint8\",\n          \"sortTri\",\n          \"uint8\",\n          \"procAnim\",\n          \"uint8\",\n          \"debugFlags\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"texType\",\n          \"uint32\",\n          \"textureMasks\",\n          [\"[]\", \"uint32\", 4],\n        ];\n      },\n\n      // => Version: 3\n      3: function () {\n        this.__root = this.AmatGrV3 = [\n          \"texArrayRange\",\n          \"uint8\",\n          \"texCount\",\n          \"uint8\",\n          \"texTransformRange\",\n          \"uint8\",\n          \"sortOrder\",\n          \"uint8\",\n          \"sortTri\",\n          \"uint8\",\n          \"debugFlags\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"texType\",\n          \"uint32\",\n          \"textureMasks\",\n          [\"[]\", \"uint32\", 4],\n        ];\n      },\n\n      // => Version: 2\n      2: function () {\n        this.__root = this.AmatGrV2 = [\n          \"texArrayRange\",\n          \"uint8\",\n          \"texCount\",\n          \"uint8\",\n          \"texTransformRange\",\n          \"uint8\",\n          \"sortOrder\",\n          \"uint8\",\n          \"sortTri\",\n          \"uint8\",\n          \"flags\",\n          \"uint32\",\n          \"texType\",\n          \"uint32\",\n          \"textureMasks\",\n          [\"[]\", \"uint32\", 4],\n        ];\n      },\n\n      // => Version: 1\n      1: function () {\n        this.__root = this.AmatGrV1 = [\n          \"texArrayRange\",\n          \"uint8\",\n          \"texCount\",\n          \"uint8\",\n          \"texTransformRange\",\n          \"uint8\",\n          \"sortOrder\",\n          \"uint8\",\n          \"flags\",\n          \"uint32\",\n          \"texType\",\n          \"uint32\",\n          \"textureMasks\",\n          [\"[]\", \"uint32\", 4],\n        ];\n      },\n\n      // => Version: 0\n      0: function () {\n        this.__root = this.AmatGrV0 = [\n          \"texArrayRange\",\n          \"uint8\",\n          \"texCount\",\n          \"uint8\",\n          \"texTransformRange\",\n          \"uint8\",\n          \"sortOrder\",\n          \"uint8\",\n          \"flags\",\n          \"uint32\",\n          \"textureMasks\",\n          [\"[]\", \"uint32\", 4],\n        ];\n      },\n    },\n  },\n];\n","const Utils = require(\"../../util/ParserUtils.js\");\n\nmodule.exports = [\n  /// ==================================================\n  /// Chunk: havk, versions: 15, strucTab: 0x1723760\n  /// ==================================================\n\n  {\n    name: \"havk\",\n    versions: {\n      // => Version: 14, ReferencedFunction: 0xEBA840\n      14: function () {\n        this.PackMoppType = [\"moppData\", Utils.getArrayReader(\"uint8\")];\n\n        this.PackMapCollideCollisionV14 = [\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"vertices\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"surfaces\",\n          Utils.getArrayReader(\"uint16\"),\n          \"moppCodeData\",\n          this.PackMoppType,\n        ];\n\n        this.PackMapCollideBlockerV14 = [\"vertices\", Utils.getArrayReader([\"[]\", \"float32\", 3])];\n\n        this.PackMapCollideNavMeshV14 = [\n          \"navMesh\",\n          Utils.getArrayReader(\"uint8\"),\n          \"graph\",\n          Utils.getArrayReader(\"uint8\"),\n          \"mediator\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.PackMapCollideAnimationV14 = [\n          \"sequence\",\n          Utils.getQWordReader(),\n          \"collisionIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"blockerIndices\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n\n        this.PackMapCollideGeometryV14 = [\n          \"quantizedExtents\",\n          \"uint8\",\n          \"animations\",\n          Utils.getArrayReader(\"uint32\"),\n          \"navMeshIndex\",\n          \"uint16\",\n        ];\n\n        this.PackMapCollideModelObsV14 = [\"translate\", [\"[]\", \"float32\", 3], \"geometryIndex\", \"uint32\"];\n\n        this.PackMapCollideModelPropV14 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"sequence\",\n          Utils.getQWordReader(),\n          \"scale\",\n          \"float32\",\n          \"translate\",\n          [\"[]\", \"float32\", 3],\n          \"rotate\",\n          [\"[]\", \"float32\", 3],\n          \"geometryIndex\",\n          \"uint32\",\n        ];\n\n        this.PackMapCollideModelZoneV14 = [\n          \"scale\",\n          \"float32\",\n          \"translate\",\n          [\"[]\", \"float32\", 3],\n          \"rotate\",\n          [\"[]\", \"float32\", 3],\n          \"geometryIndex\",\n          \"uint32\",\n        ];\n\n        this.__root = this.PackMapCollideV14 = [\n          \"boundsMin\",\n          [\"[]\", \"float32\", 3],\n          \"boundsMax\",\n          [\"[]\", \"float32\", 3],\n          \"collisions\",\n          Utils.getArrayReader(this.PackMapCollideCollisionV14),\n          \"blockers\",\n          Utils.getArrayReader(this.PackMapCollideBlockerV14),\n          \"navMeshes\",\n          Utils.getArrayReader(this.PackMapCollideNavMeshV14),\n          \"animations\",\n          Utils.getArrayReader(this.PackMapCollideAnimationV14),\n          \"geometries\",\n          Utils.getArrayReader(this.PackMapCollideGeometryV14),\n          \"obsModels\",\n          Utils.getArrayReader(this.PackMapCollideModelObsV14),\n          \"propModels\",\n          Utils.getArrayReader(this.PackMapCollideModelPropV14),\n          \"zoneModels\",\n          Utils.getArrayReader(this.PackMapCollideModelZoneV14),\n        ];\n      },\n\n      // => Version: 13, ReferencedFunction: 0xEBA4F0\n      13: function () {\n        this.PackMapCollideCollisionV13 = [\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"vertices\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"surfaces\",\n          Utils.getArrayReader(\"uint16\"),\n          \"moppCodeData\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.PackMapCollideBlockerV13 = [\"vertices\", Utils.getArrayReader([\"[]\", \"float32\", 3])];\n\n        this.PackMapCollideAnimationV13 = [\n          \"sequence\",\n          Utils.getQWordReader(),\n          \"collisionIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"blockerIndices\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n\n        this.PackMapCollideGeometryV13 = [\"quantizedExtents\", \"uint8\", \"animations\", Utils.getArrayReader(\"uint32\")];\n\n        this.PackMapCollideModelObsV13 = [\"translate\", [\"[]\", \"float32\", 3], \"geometryIndex\", \"uint32\"];\n\n        this.PackMapCollideModelPropV13 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"sequence\",\n          Utils.getQWordReader(),\n          \"scale\",\n          \"float32\",\n          \"translate\",\n          [\"[]\", \"float32\", 3],\n          \"rotate\",\n          [\"[]\", \"float32\", 3],\n          \"geometryIndex\",\n          \"uint32\",\n        ];\n\n        this.PackMapCollideModelZoneV13 = [\n          \"scale\",\n          \"float32\",\n          \"translate\",\n          [\"[]\", \"float32\", 3],\n          \"rotate\",\n          [\"[]\", \"float32\", 3],\n          \"geometryIndex\",\n          \"uint32\",\n        ];\n\n        this.__root = this.PackMapCollideV13 = [\n          \"boundsMin\",\n          [\"[]\", \"float32\", 3],\n          \"boundsMax\",\n          [\"[]\", \"float32\", 3],\n          \"collisions\",\n          Utils.getArrayReader(this.PackMapCollideCollisionV13),\n          \"blockers\",\n          Utils.getArrayReader(this.PackMapCollideBlockerV13),\n          \"animations\",\n          Utils.getArrayReader(this.PackMapCollideAnimationV13),\n          \"geometries\",\n          Utils.getArrayReader(this.PackMapCollideGeometryV13),\n          \"obsModels\",\n          Utils.getArrayReader(this.PackMapCollideModelObsV13),\n          \"propModels\",\n          Utils.getArrayReader(this.PackMapCollideModelPropV13),\n          \"zoneModels\",\n          Utils.getArrayReader(this.PackMapCollideModelZoneV13),\n        ];\n      },\n\n      // => Version: 12\n      12: function () {\n        this.PackMapCollideMeshV12 = [\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"vertices\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"surfaces\",\n          Utils.getArrayReader(\"uint16\"),\n          \"moppCodeScale\",\n          \"float32\",\n          \"moppCodeData\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.PackMapCollideMeshRefV12 = [\"sequence\", Utils.getQWordReader(), \"meshIndex\", \"uint32\"];\n\n        this.PackMapCollideGeometryV12 = [\n          \"quantizedExtents\",\n          \"uint8\",\n          \"meshRefs\",\n          Utils.getArrayReader(this.PackMapCollideMeshRefV12),\n        ];\n\n        this.PackMapCollideModelObsV12 = [\"translate\", [\"[]\", \"float32\", 3], \"geometryIndex\", \"uint32\"];\n\n        this.PackMapCollideModelPropV12 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"sequence\",\n          Utils.getQWordReader(),\n          \"scale\",\n          \"float32\",\n          \"translate\",\n          [\"[]\", \"float32\", 3],\n          \"rotate\",\n          [\"[]\", \"float32\", 3],\n          \"geometryIndex\",\n          \"uint32\",\n        ];\n\n        this.PackMapCollideModelZoneV12 = [\n          \"scale\",\n          \"float32\",\n          \"translate\",\n          [\"[]\", \"float32\", 3],\n          \"rotate\",\n          [\"[]\", \"float32\", 3],\n          \"geometryIndex\",\n          \"uint32\",\n        ];\n\n        this.PackMapCollideAiChunkV12 = [\n          \"boundsMin\",\n          [\"[]\", \"float32\", 3],\n          \"boundsMax\",\n          [\"[]\", \"float32\", 3],\n          \"navMeshData\",\n          Utils.getArrayReader(\"uint8\"),\n          \"coarseGraphData\",\n          Utils.getArrayReader(\"uint8\"),\n          \"queryMediatorMoppData\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.__root = this.PackMapCollideV12 = [\n          \"boundsMin\",\n          [\"[]\", \"float32\", 3],\n          \"boundsMax\",\n          [\"[]\", \"float32\", 3],\n          \"meshes\",\n          Utils.getArrayReader(this.PackMapCollideMeshV12),\n          \"geometries\",\n          Utils.getArrayReader(this.PackMapCollideGeometryV12),\n          \"obsModels\",\n          Utils.getArrayReader(this.PackMapCollideModelObsV12),\n          \"propModels\",\n          Utils.getArrayReader(this.PackMapCollideModelPropV12),\n          \"zoneModels\",\n          Utils.getArrayReader(this.PackMapCollideModelZoneV12),\n          \"aiChunkDims\",\n          [\"[]\", \"uint32\", 2],\n          \"aiChunks\",\n          Utils.getArrayReader(this.PackMapCollideAiChunkV12),\n        ];\n      },\n\n      // => Version: 11\n      11: function () {\n        this.PackMapCollideMeshV11 = [\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"vertices\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"moppCodeScale\",\n          \"float32\",\n          \"moppCodeData\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.PackMapCollideMeshRefV11 = [\"sequence\", Utils.getQWordReader(), \"meshIndex\", \"uint32\"];\n\n        this.PackMapCollideGeometryV11 = [\n          \"quantizedExtents\",\n          \"uint8\",\n          \"meshRefs\",\n          Utils.getArrayReader(this.PackMapCollideMeshRefV11),\n        ];\n\n        this.PackMapCollideModelObsV11 = [\"translate\", [\"[]\", \"float32\", 3], \"geometryIndex\", \"uint32\"];\n\n        this.PackMapCollideModelPropV11 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"sequence\",\n          Utils.getQWordReader(),\n          \"scale\",\n          \"float32\",\n          \"translate\",\n          [\"[]\", \"float32\", 3],\n          \"rotate\",\n          [\"[]\", \"float32\", 3],\n          \"geometryIndex\",\n          \"uint32\",\n        ];\n\n        this.PackMapCollideModelZoneV11 = [\n          \"scale\",\n          \"float32\",\n          \"translate\",\n          [\"[]\", \"float32\", 3],\n          \"rotate\",\n          [\"[]\", \"float32\", 3],\n          \"geometryIndex\",\n          \"uint32\",\n        ];\n\n        this.PackMapCollideAiChunkV11 = [\n          \"boundsMin\",\n          [\"[]\", \"float32\", 3],\n          \"boundsMax\",\n          [\"[]\", \"float32\", 3],\n          \"navMeshData\",\n          Utils.getArrayReader(\"uint8\"),\n          \"coarseGraphData\",\n          Utils.getArrayReader(\"uint8\"),\n          \"queryMediatorMoppData\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.__root = this.PackMapCollideV11 = [\n          \"boundsMin\",\n          [\"[]\", \"float32\", 3],\n          \"boundsMax\",\n          [\"[]\", \"float32\", 3],\n          \"meshes\",\n          Utils.getArrayReader(this.PackMapCollideMeshV11),\n          \"geometries\",\n          Utils.getArrayReader(this.PackMapCollideGeometryV11),\n          \"obsModels\",\n          Utils.getArrayReader(this.PackMapCollideModelObsV11),\n          \"propModels\",\n          Utils.getArrayReader(this.PackMapCollideModelPropV11),\n          \"zoneModels\",\n          Utils.getArrayReader(this.PackMapCollideModelZoneV11),\n          \"aiChunkDims\",\n          [\"[]\", \"uint32\", 2],\n          \"aiChunks\",\n          Utils.getArrayReader(this.PackMapCollideAiChunkV11),\n        ];\n      },\n\n      // => Version: 10\n      10: function () {\n        this.PackMapCollideMeshV10 = [\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"vertices\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"moppCodeScale\",\n          \"float32\",\n          \"moppCodeData\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.PackMapCollideMeshRefV10 = [\"sequence\", Utils.getQWordReader(), \"meshIndex\", \"uint32\"];\n\n        this.PackMapCollideGeometryV10 = [\"meshRefs\", Utils.getArrayReader(this.PackMapCollideMeshRefV10)];\n\n        this.PackMapCollideModelObsV10 = [\"geometryIndex\", \"uint32\"];\n\n        this.PackMapCollideModelPropV10 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"sequence\",\n          Utils.getQWordReader(),\n          \"scale\",\n          \"float32\",\n          \"translate\",\n          [\"[]\", \"float32\", 3],\n          \"rotate\",\n          [\"[]\", \"float32\", 3],\n          \"geometryIndex\",\n          \"uint32\",\n        ];\n\n        this.PackMapCollideModelZoneV10 = [\n          \"scale\",\n          \"float32\",\n          \"translate\",\n          [\"[]\", \"float32\", 3],\n          \"rotate\",\n          [\"[]\", \"float32\", 3],\n          \"geometryIndex\",\n          \"uint32\",\n        ];\n\n        this.PackMapCollideAiChunkV10 = [\n          \"navMeshData\",\n          Utils.getArrayReader(\"uint8\"),\n          \"coarseGraphData\",\n          Utils.getArrayReader(\"uint8\"),\n          \"queryMediatorMoppData\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.__root = this.PackMapCollideV10 = [\n          \"boundsMin\",\n          [\"[]\", \"float32\", 3],\n          \"boundsMax\",\n          [\"[]\", \"float32\", 3],\n          \"meshes\",\n          Utils.getArrayReader(this.PackMapCollideMeshV10),\n          \"geometries\",\n          Utils.getArrayReader(this.PackMapCollideGeometryV10),\n          \"obsModels\",\n          Utils.getArrayReader(this.PackMapCollideModelObsV10),\n          \"propModels\",\n          Utils.getArrayReader(this.PackMapCollideModelPropV10),\n          \"zoneModels\",\n          Utils.getArrayReader(this.PackMapCollideModelZoneV10),\n          \"aiBoundaryMin\",\n          [\"[]\", \"float32\", 3],\n          \"aiBoundaryMax\",\n          [\"[]\", \"float32\", 3],\n          \"aiChunkDims\",\n          [\"[]\", \"uint32\", 2],\n          \"aiChunks\",\n          Utils.getArrayReader(this.PackMapCollideAiChunkV10),\n        ];\n      },\n\n      // => Version: 9\n      9: function () {\n        this.PackMapCollideMeshV9 = [\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"vertices\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"moppCodeScale\",\n          \"float32\",\n          \"moppCodeData\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.PackMapCollideMeshRefV9 = [\"sequence\", Utils.getQWordReader(), \"meshIndex\", \"uint32\"];\n\n        this.PackMapCollideGeometryV9 = [\"meshRefs\", Utils.getArrayReader(this.PackMapCollideMeshRefV9)];\n\n        this.PackMapCollideModelObsV9 = [\"geometryIndex\", \"uint32\"];\n\n        this.PackMapCollideModelPropV9 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"sequence\",\n          Utils.getQWordReader(),\n          \"scale\",\n          \"float32\",\n          \"translate\",\n          [\"[]\", \"float32\", 3],\n          \"rotate\",\n          [\"[]\", \"float32\", 3],\n          \"geometryIndex\",\n          \"uint32\",\n        ];\n\n        this.PackMapCollideModelZoneV9 = [\n          \"scale\",\n          \"float32\",\n          \"translate\",\n          [\"[]\", \"float32\", 3],\n          \"rotate\",\n          [\"[]\", \"float32\", 3],\n          \"geometryIndex\",\n          \"uint32\",\n        ];\n\n        this.PackMapCollideAiChunkV9 = [\n          \"navMeshData\",\n          Utils.getArrayReader(\"uint8\"),\n          \"coarseGraphData\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.__root = this.PackMapCollideV9 = [\n          \"boundsMin\",\n          [\"[]\", \"float32\", 3],\n          \"boundsMax\",\n          [\"[]\", \"float32\", 3],\n          \"meshes\",\n          Utils.getArrayReader(this.PackMapCollideMeshV9),\n          \"geometries\",\n          Utils.getArrayReader(this.PackMapCollideGeometryV9),\n          \"obsModels\",\n          Utils.getArrayReader(this.PackMapCollideModelObsV9),\n          \"propModels\",\n          Utils.getArrayReader(this.PackMapCollideModelPropV9),\n          \"zoneModels\",\n          Utils.getArrayReader(this.PackMapCollideModelZoneV9),\n          \"aiBoundaryMin\",\n          [\"[]\", \"float32\", 3],\n          \"aiBoundaryMax\",\n          [\"[]\", \"float32\", 3],\n          \"aiChunkDims\",\n          [\"[]\", \"uint32\", 2],\n          \"aiChunks\",\n          Utils.getArrayReader(this.PackMapCollideAiChunkV9),\n        ];\n      },\n\n      // => Version: 8, ReferencedFunction: 0xEBA8B0\n      8: function () {\n        this.PackMapCollideMeshV8 = [\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"vertices\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"moppCodeScale\",\n          \"float32\",\n          \"moppCodeData\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.PackMapCollideMeshRefV8 = [\"sequence\", Utils.getQWordReader(), \"meshIndex\", \"uint32\"];\n\n        this.PackMapCollideGeometryV8 = [\"meshRefs\", Utils.getArrayReader(this.PackMapCollideMeshRefV8)];\n\n        this.PackMapCollideModelPropV8 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"sequence\",\n          Utils.getQWordReader(),\n          \"scale\",\n          \"float32\",\n          \"translate\",\n          [\"[]\", \"float32\", 3],\n          \"rotate\",\n          [\"[]\", \"float32\", 3],\n          \"geometryIndex\",\n          \"uint32\",\n        ];\n\n        this.PackMapCollideModelZoneV8 = [\n          \"scale\",\n          \"float32\",\n          \"translate\",\n          [\"[]\", \"float32\", 3],\n          \"rotate\",\n          [\"[]\", \"float32\", 3],\n          \"geometryIndex\",\n          \"uint32\",\n        ];\n\n        this.PackMapCollideAiChunkV8 = [\n          \"navMeshData\",\n          Utils.getArrayReader(\"uint8\"),\n          \"coarseGraphData\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.__root = this.PackMapCollideV8 = [\n          \"boundsMin\",\n          [\"[]\", \"float32\", 3],\n          \"boundsMax\",\n          [\"[]\", \"float32\", 3],\n          \"meshes\",\n          Utils.getArrayReader(this.PackMapCollideMeshV8),\n          \"geometries\",\n          Utils.getArrayReader(this.PackMapCollideGeometryV8),\n          \"propModels\",\n          Utils.getArrayReader(this.PackMapCollideModelPropV8),\n          \"zoneModels\",\n          Utils.getArrayReader(this.PackMapCollideModelZoneV8),\n          \"aiBoundaryMin\",\n          [\"[]\", \"float32\", 3],\n          \"aiBoundaryMax\",\n          [\"[]\", \"float32\", 3],\n          \"aiChunkDims\",\n          [\"[]\", \"uint32\", 2],\n          \"aiChunks\",\n          Utils.getArrayReader(this.PackMapCollideAiChunkV8),\n        ];\n      },\n\n      // => Version: 7\n      7: function () {\n        this.PackMapCollideMoppCodeV7 = [\"cookedData\", Utils.getArrayReader(\"uint8\")];\n\n        this.PackMapCollideMeshSizeV7 = [\"scale\", \"float32\", \"moppCodeIndex\", \"uint32\"];\n\n        this.PackMapCollideMeshV7 = [\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"vertices\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"sizes\",\n          Utils.getArrayReader(this.PackMapCollideMeshSizeV7),\n        ];\n\n        this.PackMapCollideMeshRefV7 = [\"sequence\", Utils.getQWordReader(), \"meshIndex\", \"uint32\"];\n\n        this.PackMapCollideGeometryV7 = [\"meshRefs\", Utils.getArrayReader(this.PackMapCollideMeshRefV7)];\n\n        this.PackMapCollideModelPropV7 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"sequence\",\n          Utils.getQWordReader(),\n          \"scale\",\n          \"float32\",\n          \"translate\",\n          [\"[]\", \"float32\", 3],\n          \"rotate\",\n          [\"[]\", \"float32\", 3],\n          \"geometryIndex\",\n          \"uint32\",\n        ];\n\n        this.PackMapCollideModelZoneV7 = [\n          \"scale\",\n          \"float32\",\n          \"translate\",\n          [\"[]\", \"float32\", 3],\n          \"rotate\",\n          [\"[]\", \"float32\", 3],\n          \"geometryIndex\",\n          \"uint32\",\n        ];\n\n        this.PackMapCollideAiChunkV7 = [\n          \"navMeshData\",\n          Utils.getArrayReader(\"uint8\"),\n          \"coarseGraphData\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.__root = this.PackMapCollideV7 = [\n          \"boundsMin\",\n          [\"[]\", \"float32\", 3],\n          \"boundsMax\",\n          [\"[]\", \"float32\", 3],\n          \"moppCodes\",\n          Utils.getArrayReader(this.PackMapCollideMoppCodeV7),\n          \"meshes\",\n          Utils.getArrayReader(this.PackMapCollideMeshV7),\n          \"geometries\",\n          Utils.getArrayReader(this.PackMapCollideGeometryV7),\n          \"propModels\",\n          Utils.getArrayReader(this.PackMapCollideModelPropV7),\n          \"zoneModels\",\n          Utils.getArrayReader(this.PackMapCollideModelZoneV7),\n          \"aiBoundaryMin\",\n          [\"[]\", \"float32\", 3],\n          \"aiBoundaryMax\",\n          [\"[]\", \"float32\", 3],\n          \"aiChunkDims\",\n          [\"[]\", \"uint32\", 2],\n          \"aiChunks\",\n          Utils.getArrayReader(this.PackMapCollideAiChunkV7),\n        ];\n      },\n\n      // => Version: 6\n      6: function () {\n        this.PackMapCollideMoppCodeV6 = [\"cookedData\", Utils.getArrayReader(\"uint8\")];\n\n        this.PackMapCollideMeshSizeV6 = [\"scale\", \"float32\", \"moppCodeIndex\", \"uint32\"];\n\n        this.PackMapCollideMeshV6 = [\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"vertices\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"sizes\",\n          Utils.getArrayReader(this.PackMapCollideMeshSizeV6),\n        ];\n\n        this.PackMapCollideMeshRefV6 = [\"sequence\", Utils.getQWordReader(), \"meshIndex\", \"uint32\"];\n\n        this.PackMapCollideGeometryV6 = [\"meshRefs\", Utils.getArrayReader(this.PackMapCollideMeshRefV6)];\n\n        this.PackMapCollideModelPropV6 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"sequence\",\n          Utils.getQWordReader(),\n          \"scale\",\n          \"float32\",\n          \"translate\",\n          [\"[]\", \"float32\", 3],\n          \"rotate\",\n          [\"[]\", \"float32\", 3],\n          \"geometryIndex\",\n          \"uint32\",\n        ];\n\n        this.PackMapCollideModelZoneV6 = [\n          \"scale\",\n          \"float32\",\n          \"translate\",\n          [\"[]\", \"float32\", 3],\n          \"rotate\",\n          [\"[]\", \"float32\", 3],\n          \"geometryIndex\",\n          \"uint32\",\n        ];\n\n        this.__root = this.PackMapCollideV6 = [\n          \"boundsMin\",\n          [\"[]\", \"float32\", 3],\n          \"boundsMax\",\n          [\"[]\", \"float32\", 3],\n          \"moppCodes\",\n          Utils.getArrayReader(this.PackMapCollideMoppCodeV6),\n          \"meshes\",\n          Utils.getArrayReader(this.PackMapCollideMeshV6),\n          \"geometries\",\n          Utils.getArrayReader(this.PackMapCollideGeometryV6),\n          \"propModels\",\n          Utils.getArrayReader(this.PackMapCollideModelPropV6),\n          \"zoneModels\",\n          Utils.getArrayReader(this.PackMapCollideModelZoneV6),\n        ];\n      },\n    },\n  },\n];\n","const Utils = require(\"../../util/ParserUtils.js\");\n\nmodule.exports = [\n  /// ==================================================\n  /// Chunk: ICON, versions: 1, strucTab: 0x1773248\n  /// ==================================================\n\n  {\n    name: \"ICON\",\n    versions: {\n      // => Version: 0\n      0: function () {\n        this.__root = this.ModelFileIcon = [\"jpgData\", Utils.getArrayReader(\"uint8\")];\n      },\n    },\n  },\n];\n","const Utils = require(\"../../util/ParserUtils.js\");\n\nmodule.exports = [\n  /// ==================================================\n  /// Chunk: laye, versions: 1, strucTab: 0x1720B64\n  /// ==================================================\n\n  {\n    name: \"laye\",\n    versions: {\n      // => Version: 0\n      0: function () {\n        this.PackMapLayerProp = [\"guid\", Utils.getQWordReader(), \"layerIds\", Utils.getArrayReader(\"uint32\")];\n\n        this.PackMapLayer = [\"layerId\", \"uint32\", \"metaData\", Utils.getArrayReader([\"[]\", \"uint32\", 4])];\n\n        this.__root = this.PackMapLayers = [\n          \"props\",\n          Utils.getArrayReader(this.PackMapLayerProp),\n          \"layers\",\n          Utils.getArrayReader(this.PackMapLayer),\n        ];\n      },\n    },\n  },\n];\n","const Utils = require(\"../../util/ParserUtils.js\");\n\nmodule.exports = [\n  /// ==================================================\n  /// Chunk: lght, versions: 18, strucTab: 0x1720FD0\n  /// ==================================================\n\n  {\n    name: \"lght\",\n    versions: {\n      // => Version: 17\n      17: function () {\n        this.PackMapLight = [\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"intensity\",\n          \"float32\",\n          \"nearDistance\",\n          \"float32\",\n          \"farDistance\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n        ];\n\n        this.PackMapCurve = [\n          \"gust\",\n          \"float32\",\n          \"gustFreq\",\n          \"float32\",\n          \"noise\",\n          \"float32\",\n          \"phase\",\n          \"float32\",\n          \"offset\",\n          \"float32\",\n          \"amplitude\",\n          \"float32\",\n          \"curveType\",\n          \"uint32\",\n        ];\n\n        this.PackMapPointLightgroups = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"lights\",\n          Utils.getArrayReader(this.PackMapLight),\n          \"curves\",\n          Utils.getArrayReader(this.PackMapCurve),\n          \"broadId\",\n          \"uint16\",\n        ];\n\n        this.PackMapPortalData = [\n          \"fadeCamera\",\n          \"float32\",\n          \"fadeLight\",\n          \"float32\",\n          \"lighten\",\n          \"float32\",\n          \"darken\",\n          \"float32\",\n        ];\n\n        this.PackMapPortalLight = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"points\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"portalData\",\n          Utils.getArrayReader(this.PackMapPortalData),\n          \"broadId\",\n          \"uint16\",\n        ];\n\n        this.PackMapSpotShadow = [\"shadowFilename\", Utils.getFileNameReader()];\n\n        this.PackMapSpotLight = [\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"intensity\",\n          \"float32\",\n          \"nearDistance\",\n          \"float32\",\n          \"farDistance\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"direction\",\n          [\"[]\", \"float32\", 3],\n          \"upDirection\",\n          [\"[]\", \"float32\", 3],\n          \"innerAngle\",\n          \"float32\",\n          \"outerAngle\",\n          \"float32\",\n          \"textureName\",\n          Utils.getFileNameReader(),\n          \"shadowData\",\n          Utils.getPointerReader(this.PackMapSpotShadow),\n        ];\n\n        this.PackMapSpotLightgroups = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"lights\",\n          Utils.getArrayReader(this.PackMapSpotLight),\n          \"curves\",\n          Utils.getArrayReader(this.PackMapCurve),\n          \"broadId\",\n          \"uint16\",\n        ];\n\n        this.PackMapVolumeImage = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"dims\",\n          [\"[]\", \"uint32\", 2],\n          \"format\",\n          \"uint32\",\n          \"image\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.PackMapVolumeLight = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"extents\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"intensities\",\n          [\"[]\", \"float32\", 2],\n          \"pack\",\n          [\"[]\", \"float32\", 4],\n          \"name\",\n          Utils.getString16Reader(),\n          \"floodPoints\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"flags\",\n          \"uint32\",\n          \"images\",\n          Utils.getArrayReader(this.PackMapVolumeImage),\n          \"broadId\",\n          \"uint16\",\n        ];\n\n        this.PackBroadphaseType = [\"broadphaseData\", Utils.getArrayReader(\"uint8\")];\n\n        this.__root = this.PackMapLights = [\n          \"pointLights\",\n          Utils.getArrayReader(this.PackMapPointLightgroups),\n          \"portalLights\",\n          Utils.getArrayReader(this.PackMapPortalLight),\n          \"spotLights\",\n          Utils.getArrayReader(this.PackMapSpotLightgroups),\n          \"volumeLights\",\n          Utils.getArrayReader(this.PackMapVolumeLight),\n          \"broadPhase\",\n          this.PackBroadphaseType,\n          \"maxBroadId\",\n          \"uint16\",\n        ];\n      },\n\n      // => Version: 16\n      16: function () {\n        this.PackMapLight = [\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"intensity\",\n          \"float32\",\n          \"nearDistance\",\n          \"float32\",\n          \"farDistance\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n        ];\n\n        this.PackMapCurve = [\n          \"gust\",\n          \"float32\",\n          \"gustFreq\",\n          \"float32\",\n          \"noise\",\n          \"float32\",\n          \"phase\",\n          \"float32\",\n          \"offset\",\n          \"float32\",\n          \"amplitude\",\n          \"float32\",\n          \"curveType\",\n          \"uint32\",\n        ];\n\n        this.PackMapPointLightgroups = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"lights\",\n          Utils.getArrayReader(this.PackMapLight),\n          \"curves\",\n          Utils.getArrayReader(this.PackMapCurve),\n          \"broadId\",\n          \"uint16\",\n        ];\n\n        this.PackMapPortalData = [\n          \"fadeCamera\",\n          \"float32\",\n          \"fadeLight\",\n          \"float32\",\n          \"lighten\",\n          \"float32\",\n          \"darken\",\n          \"float32\",\n        ];\n\n        this.PackMapPortalLight = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"points\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"portalData\",\n          Utils.getArrayReader(this.PackMapPortalData),\n          \"broadId\",\n          \"uint16\",\n        ];\n\n        this.PackMapSpotShadow = [\"shadowFilename\", Utils.getFileNameReader()];\n\n        this.PackMapSpotLight = [\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"intensity\",\n          \"float32\",\n          \"nearDistance\",\n          \"float32\",\n          \"farDistance\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"direction\",\n          [\"[]\", \"float32\", 3],\n          \"innerAngle\",\n          \"float32\",\n          \"outerAngle\",\n          \"float32\",\n          \"textureName\",\n          Utils.getFileNameReader(),\n          \"shadowData\",\n          Utils.getPointerReader(this.PackMapSpotShadow),\n        ];\n\n        this.PackMapSpotLightgroups = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"lights\",\n          Utils.getArrayReader(this.PackMapSpotLight),\n          \"curves\",\n          Utils.getArrayReader(this.PackMapCurve),\n          \"broadId\",\n          \"uint16\",\n        ];\n\n        this.PackMapVolumeImage = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"dims\",\n          [\"[]\", \"uint32\", 2],\n          \"format\",\n          \"uint32\",\n          \"image\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.PackMapVolumeLight = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"extents\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"intensities\",\n          [\"[]\", \"float32\", 2],\n          \"pack\",\n          [\"[]\", \"float32\", 4],\n          \"name\",\n          Utils.getString16Reader(),\n          \"floodPoints\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"flags\",\n          \"uint32\",\n          \"images\",\n          Utils.getArrayReader(this.PackMapVolumeImage),\n          \"broadId\",\n          \"uint16\",\n        ];\n\n        this.PackBroadphaseType = [\"broadphaseData\", Utils.getArrayReader(\"uint8\")];\n\n        this.__root = this.PackMapLights = [\n          \"pointLights\",\n          Utils.getArrayReader(this.PackMapPointLightgroups),\n          \"portalLights\",\n          Utils.getArrayReader(this.PackMapPortalLight),\n          \"spotLights\",\n          Utils.getArrayReader(this.PackMapSpotLightgroups),\n          \"volumeLights\",\n          Utils.getArrayReader(this.PackMapVolumeLight),\n          \"broadPhase\",\n          this.PackBroadphaseType,\n          \"maxBroadId\",\n          \"uint16\",\n        ];\n      },\n\n      // => Version: 15, ReferencedFunction: 0xEB9730\n      15: function () {\n        this.PackMapLight = [\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"intensity\",\n          \"float32\",\n          \"nearDistance\",\n          \"float32\",\n          \"farDistance\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n        ];\n\n        this.PackMapCurve = [\n          \"gust\",\n          \"float32\",\n          \"gustFreq\",\n          \"float32\",\n          \"noise\",\n          \"float32\",\n          \"phase\",\n          \"float32\",\n          \"offset\",\n          \"float32\",\n          \"amplitude\",\n          \"float32\",\n          \"curveType\",\n          \"uint32\",\n        ];\n\n        this.PackMapPointLightgroups = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"lights\",\n          Utils.getArrayReader(this.PackMapLight),\n          \"curves\",\n          Utils.getArrayReader(this.PackMapCurve),\n          \"broadId\",\n          \"uint16\",\n        ];\n\n        this.PackMapPortalData = [\n          \"fadeCamera\",\n          \"float32\",\n          \"fadeLight\",\n          \"float32\",\n          \"lighten\",\n          \"float32\",\n          \"darken\",\n          \"float32\",\n        ];\n\n        this.PackMapPortalLight = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"points\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"portalData\",\n          Utils.getArrayReader(this.PackMapPortalData),\n          \"broadId\",\n          \"uint16\",\n        ];\n\n        this.PackMapPointLight = [\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"intensity\",\n          \"float32\",\n          \"nearDistance\",\n          \"float32\",\n          \"farDistance\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"direction\",\n          [\"[]\", \"float32\", 3],\n          \"innerAngle\",\n          \"float32\",\n          \"outerAngle\",\n          \"float32\",\n          \"textureName\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackMapSpotLightgroups = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"lights\",\n          Utils.getArrayReader(this.PackMapPointLight),\n          \"curves\",\n          Utils.getArrayReader(this.PackMapCurve),\n          \"broadId\",\n          \"uint16\",\n        ];\n\n        this.PackMapVolumeImage = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"dims\",\n          [\"[]\", \"uint32\", 2],\n          \"format\",\n          \"uint32\",\n          \"image\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.PackMapVolumeLight = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"extents\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"intensities\",\n          [\"[]\", \"float32\", 2],\n          \"pack\",\n          [\"[]\", \"float32\", 4],\n          \"name\",\n          Utils.getString16Reader(),\n          \"floodPoints\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"flags\",\n          \"uint32\",\n          \"images\",\n          Utils.getArrayReader(this.PackMapVolumeImage),\n          \"broadId\",\n          \"uint16\",\n        ];\n\n        this.PackBroadphaseType = [\"broadphaseData\", Utils.getArrayReader(\"uint8\")];\n\n        this.__root = this.PackMapLightsV15 = [\n          \"pointLights\",\n          Utils.getArrayReader(this.PackMapPointLightgroups),\n          \"portalLights\",\n          Utils.getArrayReader(this.PackMapPortalLight),\n          \"spotLights\",\n          Utils.getArrayReader(this.PackMapSpotLightgroups),\n          \"volumeLights\",\n          Utils.getArrayReader(this.PackMapVolumeLight),\n          \"broadPhase\",\n          this.PackBroadphaseType,\n          \"maxBroadId\",\n          \"uint16\",\n        ];\n      },\n\n      // => Version: 14\n      14: function () {\n        this.PackMapLight = [\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"intensity\",\n          \"float32\",\n          \"nearDistance\",\n          \"float32\",\n          \"farDistance\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n        ];\n\n        this.PackMapCurve = [\n          \"gust\",\n          \"float32\",\n          \"gustFreq\",\n          \"float32\",\n          \"noise\",\n          \"float32\",\n          \"phase\",\n          \"float32\",\n          \"offset\",\n          \"float32\",\n          \"amplitude\",\n          \"float32\",\n          \"curveType\",\n          \"uint32\",\n        ];\n\n        this.PackMapPointLightgroups = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"lights\",\n          Utils.getArrayReader(this.PackMapLight),\n          \"curves\",\n          Utils.getArrayReader(this.PackMapCurve),\n          \"broadId\",\n          \"uint16\",\n        ];\n\n        this.PackMapProtalLight = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"fadeCamera\",\n          \"float32\",\n          \"fadeLight\",\n          \"float32\",\n          \"lighten\",\n          \"float32\",\n          \"darken\",\n          \"float32\",\n          \"points\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"broadId\",\n          \"uint16\",\n        ];\n\n        this.PackMapPointLight = [\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"intensity\",\n          \"float32\",\n          \"nearDistance\",\n          \"float32\",\n          \"farDistance\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"direction\",\n          [\"[]\", \"float32\", 3],\n          \"innerAngle\",\n          \"float32\",\n          \"outerAngle\",\n          \"float32\",\n          \"textureName\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackMapSpotLightgroups = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"lights\",\n          Utils.getArrayReader(this.PackMapPointLight),\n          \"curves\",\n          Utils.getArrayReader(this.PackMapCurve),\n          \"broadId\",\n          \"uint16\",\n        ];\n\n        this.PackMapVolumeImage = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"dims\",\n          [\"[]\", \"uint32\", 2],\n          \"format\",\n          \"uint32\",\n          \"image\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.PackMapVolumeLight = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"extents\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"intensities\",\n          [\"[]\", \"float32\", 2],\n          \"pack\",\n          [\"[]\", \"float32\", 4],\n          \"name\",\n          Utils.getString16Reader(),\n          \"floodPoints\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"flags\",\n          \"uint32\",\n          \"images\",\n          Utils.getArrayReader(this.PackMapVolumeImage),\n          \"broadId\",\n          \"uint16\",\n        ];\n\n        this.PackBroadphaseType = [\"broadphaseData\", Utils.getArrayReader(\"uint8\")];\n\n        this.__root = this.PackMapLightsV14 = [\n          \"pointLights\",\n          Utils.getArrayReader(this.PackMapPointLightgroups),\n          \"portalLights\",\n          Utils.getArrayReader(this.PackMapProtalLight),\n          \"spotLights\",\n          Utils.getArrayReader(this.PackMapSpotLightgroups),\n          \"volumeLights\",\n          Utils.getArrayReader(this.PackMapVolumeLight),\n          \"broadPhase\",\n          this.PackBroadphaseType,\n          \"maxBroadId\",\n          \"uint16\",\n        ];\n      },\n\n      // => Version: 13, ReferencedFunction: 0xEB95D0\n      13: function () {\n        this.PackMapLight = [\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"intensity\",\n          \"float32\",\n          \"nearDistance\",\n          \"float32\",\n          \"farDistance\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n        ];\n\n        this.PackMapCurve = [\n          \"gust\",\n          \"float32\",\n          \"gustFreq\",\n          \"float32\",\n          \"noise\",\n          \"float32\",\n          \"phase\",\n          \"float32\",\n          \"offset\",\n          \"float32\",\n          \"amplitude\",\n          \"float32\",\n          \"curveType\",\n          \"uint32\",\n        ];\n\n        this.PackMapLightgroups = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"lights\",\n          Utils.getArrayReader(this.PackMapLight),\n          \"curves\",\n          Utils.getArrayReader(this.PackMapCurve),\n          \"broadId\",\n          \"uint16\",\n        ];\n\n        this.PackMapPointLight = [\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"intensity\",\n          \"float32\",\n          \"nearDistance\",\n          \"float32\",\n          \"farDistance\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"direction\",\n          [\"[]\", \"float32\", 3],\n          \"innerAngle\",\n          \"float32\",\n          \"outerAngle\",\n          \"float32\",\n          \"textureName\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackMapPointLightgroups = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"lights\",\n          Utils.getArrayReader(this.PackMapPointLight),\n          \"curves\",\n          Utils.getArrayReader(this.PackMapCurve),\n          \"broadId\",\n          \"uint16\",\n        ];\n\n        this.PackMapVolumeImage = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"dims\",\n          [\"[]\", \"uint32\", 2],\n          \"format\",\n          \"uint32\",\n          \"image\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.PackMapVolumeLight = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"extents\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"intensities\",\n          [\"[]\", \"float32\", 2],\n          \"pack\",\n          [\"[]\", \"float32\", 4],\n          \"name\",\n          Utils.getString16Reader(),\n          \"floodPoints\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"flags\",\n          \"uint32\",\n          \"images\",\n          Utils.getArrayReader(this.PackMapVolumeImage),\n          \"broadId\",\n          \"uint16\",\n        ];\n\n        this.PackBroadphaseType = [\"broadphaseData\", Utils.getArrayReader(\"uint8\")];\n\n        this.__root = this.PackMapLights = [\n          \"pointLights\",\n          Utils.getArrayReader(this.PackMapLightgroups),\n          \"spotLights\",\n          Utils.getArrayReader(this.PackMapPointLightgroups),\n          \"volumeLights\",\n          Utils.getArrayReader(this.PackMapVolumeLight),\n          \"broadPhase\",\n          this.PackBroadphaseType,\n          \"maxBroadId\",\n          \"uint16\",\n        ];\n      },\n\n      // => Version: 12, ReferencedFunction: 0xEB9310\n      12: function () {\n        this.PackMapLight = [\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"intensity\",\n          \"float32\",\n          \"nearDistance\",\n          \"float32\",\n          \"farDistance\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n        ];\n\n        this.PackMapCurve = [\n          \"gust\",\n          \"float32\",\n          \"gustFreq\",\n          \"float32\",\n          \"noise\",\n          \"float32\",\n          \"phase\",\n          \"float32\",\n          \"offset\",\n          \"float32\",\n          \"amplitude\",\n          \"float32\",\n          \"curveType\",\n          \"uint32\",\n        ];\n\n        this.PackMapLightgroups = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"lights\",\n          Utils.getArrayReader(this.PackMapLight),\n          \"curves\",\n          Utils.getArrayReader(this.PackMapCurve),\n          \"broadId\",\n          \"uint16\",\n        ];\n\n        this.PackMapPointLight = [\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"intensity\",\n          \"float32\",\n          \"nearDistance\",\n          \"float32\",\n          \"farDistance\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"direction\",\n          [\"[]\", \"float32\", 3],\n          \"innerAngle\",\n          \"float32\",\n          \"outerAngle\",\n          \"float32\",\n          \"textureName\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackMapPointLightgroups = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"lights\",\n          Utils.getArrayReader(this.PackMapPointLight),\n          \"curves\",\n          Utils.getArrayReader(this.PackMapCurve),\n          \"broadId\",\n          \"uint16\",\n        ];\n\n        this.PackMapVolumeImage = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"dims\",\n          [\"[]\", \"uint32\", 2],\n          \"format\",\n          \"uint32\",\n          \"image\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.PackMapVolumeLight = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"extents\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"intensities\",\n          [\"[]\", \"float32\", 2],\n          \"pack\",\n          [\"[]\", \"float32\", 4],\n          \"name\",\n          Utils.getString16Reader(),\n          \"floodPoint\",\n          [\"[]\", \"float32\", 3],\n          \"flags\",\n          \"uint32\",\n          \"images\",\n          Utils.getArrayReader(this.PackMapVolumeImage),\n          \"broadId\",\n          \"uint16\",\n        ];\n\n        this.PackBroadphaseType = [\"broadphaseData\", Utils.getArrayReader(\"uint8\")];\n\n        this.__root = this.PackMapLights = [\n          \"pointLights\",\n          Utils.getArrayReader(this.PackMapLightgroups),\n          \"spotLights\",\n          Utils.getArrayReader(this.PackMapPointLightgroups),\n          \"volumeLights\",\n          Utils.getArrayReader(this.PackMapVolumeLight),\n          \"broadPhase\",\n          this.PackBroadphaseType,\n          \"maxBroadId\",\n          \"uint16\",\n        ];\n      },\n\n      // => Version: 11, ReferencedFunction: 0xEB9310\n      11: function () {\n        this.PackMapLight = [\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"intensity\",\n          \"float32\",\n          \"nearDistance\",\n          \"float32\",\n          \"farDistance\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n        ];\n\n        this.PackMapCurve = [\n          \"gust\",\n          \"float32\",\n          \"gustFreq\",\n          \"float32\",\n          \"noise\",\n          \"float32\",\n          \"phase\",\n          \"float32\",\n          \"offset\",\n          \"float32\",\n          \"amplitude\",\n          \"float32\",\n          \"curveType\",\n          \"uint32\",\n        ];\n\n        this.PackMapLightgroups = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"lights\",\n          Utils.getArrayReader(this.PackMapLight),\n          \"curves\",\n          Utils.getArrayReader(this.PackMapCurve),\n          \"broadId\",\n          \"uint16\",\n        ];\n\n        this.PackMapPointLight = [\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"intensity\",\n          \"float32\",\n          \"nearDistance\",\n          \"float32\",\n          \"farDistance\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"direction\",\n          [\"[]\", \"float32\", 3],\n          \"innerAngle\",\n          \"float32\",\n          \"outerAngle\",\n          \"float32\",\n          \"textureName\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackMapPointLightgroups = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"lights\",\n          Utils.getArrayReader(this.PackMapPointLight),\n          \"curves\",\n          Utils.getArrayReader(this.PackMapCurve),\n          \"broadId\",\n          \"uint16\",\n        ];\n\n        this.PackMapVolumeImage = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"dims\",\n          [\"[]\", \"uint32\", 2],\n          \"format\",\n          \"uint32\",\n          \"image\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.PackMapVolumeLight = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"extents\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"intensities\",\n          [\"[]\", \"float32\", 2],\n          \"pack\",\n          [\"[]\", \"float32\", 4],\n          \"name\",\n          Utils.getString16Reader(),\n          \"floodPoint\",\n          [\"[]\", \"float32\", 3],\n          \"flags\",\n          \"uint32\",\n          \"images\",\n          Utils.getArrayReader(this.PackMapVolumeImage),\n          \"broadId\",\n          \"uint16\",\n        ];\n\n        this.PackBroadphaseType = [\"broadphaseData\", Utils.getArrayReader(\"uint8\")];\n\n        this.__root = this.PackMapLights = [\n          \"pointLights\",\n          Utils.getArrayReader(this.PackMapLightgroups),\n          \"spotLights\",\n          Utils.getArrayReader(this.PackMapPointLightgroups),\n          \"volumeLights\",\n          Utils.getArrayReader(this.PackMapVolumeLight),\n          \"broadPhase\",\n          this.PackBroadphaseType,\n          \"maxBroadId\",\n          \"uint16\",\n        ];\n      },\n\n      // => Version: 10, ReferencedFunction: 0xEB9F20\n      10: function () {\n        this.PackMapLight = [\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"intensity\",\n          \"float32\",\n          \"nearDistance\",\n          \"float32\",\n          \"farDistance\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n        ];\n\n        this.PackMapCurve = [\n          \"gust\",\n          \"float32\",\n          \"gustFreq\",\n          \"float32\",\n          \"noise\",\n          \"float32\",\n          \"phase\",\n          \"float32\",\n          \"offset\",\n          \"float32\",\n          \"amplitude\",\n          \"float32\",\n          \"curveType\",\n          \"uint32\",\n        ];\n\n        this.PackMapLightgroups = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"lights\",\n          Utils.getArrayReader(this.PackMapLight),\n          \"curves\",\n          Utils.getArrayReader(this.PackMapCurve),\n        ];\n\n        this.PackMapPointLight = [\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"intensity\",\n          \"float32\",\n          \"nearDistance\",\n          \"float32\",\n          \"farDistance\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"direction\",\n          [\"[]\", \"float32\", 3],\n          \"innerAngle\",\n          \"float32\",\n          \"outerAngle\",\n          \"float32\",\n          \"textureName\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackMapPointLightgroups = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"lights\",\n          Utils.getArrayReader(this.PackMapPointLight),\n          \"curves\",\n          Utils.getArrayReader(this.PackMapCurve),\n        ];\n\n        this.PackMapVolumeImage = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"dims\",\n          [\"[]\", \"uint32\", 2],\n          \"format\",\n          \"uint32\",\n          \"image\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.PackMapVolumeLight = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"extents\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"intensities\",\n          [\"[]\", \"float32\", 2],\n          \"pack\",\n          [\"[]\", \"float32\", 4],\n          \"name\",\n          Utils.getString16Reader(),\n          \"floodPoint\",\n          [\"[]\", \"float32\", 3],\n          \"flags\",\n          \"uint32\",\n          \"images\",\n          Utils.getArrayReader(this.PackMapVolumeImage),\n        ];\n\n        this.__root = this.PackMapLights = [\n          \"pointLights\",\n          Utils.getArrayReader(this.PackMapLightgroups),\n          \"spotLights\",\n          Utils.getArrayReader(this.PackMapPointLightgroups),\n          \"volumeLights\",\n          Utils.getArrayReader(this.PackMapVolumeLight),\n        ];\n      },\n\n      // => Version: 9, ReferencedFunction: 0xEB9E60\n      9: function () {\n        this.PackMapLight = [\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"intensity\",\n          \"float32\",\n          \"nearDistance\",\n          \"float32\",\n          \"farDistance\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n        ];\n\n        this.PackMapCurve = [\n          \"gust\",\n          \"float32\",\n          \"gustFreq\",\n          \"float32\",\n          \"noise\",\n          \"float32\",\n          \"phase\",\n          \"float32\",\n          \"offset\",\n          \"float32\",\n          \"amplitude\",\n          \"float32\",\n          \"curveType\",\n          \"uint32\",\n        ];\n\n        this.PackMapLightgroups = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"lights\",\n          Utils.getArrayReader(this.PackMapLight),\n          \"curves\",\n          Utils.getArrayReader(this.PackMapCurve),\n        ];\n\n        this.PackMapPointLight = [\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"intensity\",\n          \"float32\",\n          \"nearDistance\",\n          \"float32\",\n          \"farDistance\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"direction\",\n          [\"[]\", \"float32\", 3],\n          \"innerAngle\",\n          \"float32\",\n          \"outerAngle\",\n          \"float32\",\n          \"textureName\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackMapPointLightgroups = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"lights\",\n          Utils.getArrayReader(this.PackMapPointLight),\n          \"curves\",\n          Utils.getArrayReader(this.PackMapCurve),\n        ];\n\n        this.PackMapVolumeImage = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"dims\",\n          \"uint32\",\n          \"format\",\n          \"uint32\",\n          \"image\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.PackMapVolumeLight = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"extents\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"intensities\",\n          [\"[]\", \"float32\", 2],\n          \"pack\",\n          [\"[]\", \"float32\", 4],\n          \"name\",\n          Utils.getString16Reader(),\n          \"floodPoint\",\n          [\"[]\", \"float32\", 3],\n          \"flags\",\n          \"uint32\",\n          \"images\",\n          Utils.getArrayReader(this.PackMapVolumeImage),\n        ];\n\n        this.__root = this.PackMapLights = [\n          \"pointLights\",\n          Utils.getArrayReader(this.PackMapLightgroups),\n          \"spotLights\",\n          Utils.getArrayReader(this.PackMapPointLightgroups),\n          \"volumeLights\",\n          Utils.getArrayReader(this.PackMapVolumeLight),\n        ];\n      },\n\n      // => Version: 8, ReferencedFunction: 0xEB9DE0\n      8: function () {\n        this.PackMapLight = [\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"intensity\",\n          \"float32\",\n          \"nearDistance\",\n          \"float32\",\n          \"farDistance\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n        ];\n\n        this.PackMapCurve = [\n          \"gust\",\n          \"float32\",\n          \"gustFreq\",\n          \"float32\",\n          \"noise\",\n          \"float32\",\n          \"phase\",\n          \"float32\",\n          \"offset\",\n          \"float32\",\n          \"amplitude\",\n          \"float32\",\n          \"curveType\",\n          \"uint32\",\n        ];\n\n        this.PackMapLightgroups = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"lights\",\n          Utils.getArrayReader(this.PackMapLight),\n          \"curves\",\n          Utils.getArrayReader(this.PackMapCurve),\n        ];\n\n        this.PackMapPointLight = [\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"intensity\",\n          \"float32\",\n          \"nearDistance\",\n          \"float32\",\n          \"farDistance\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"direction\",\n          [\"[]\", \"float32\", 3],\n          \"innerAngle\",\n          \"float32\",\n          \"outerAngle\",\n          \"float32\",\n          \"textureName\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackMapPointLightgroups = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"lights\",\n          Utils.getArrayReader(this.PackMapPointLight),\n          \"curves\",\n          Utils.getArrayReader(this.PackMapCurve),\n        ];\n\n        this.PackMapVolumeImage = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"dims\",\n          \"uint32\",\n          \"format\",\n          \"uint32\",\n          \"image\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.PackMapVolumeLight = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"minExt\",\n          [\"[]\", \"float32\", 3],\n          \"maxExt\",\n          [\"[]\", \"float32\", 3],\n          \"intensities\",\n          [\"[]\", \"float32\", 2],\n          \"pack\",\n          [\"[]\", \"float32\", 4],\n          \"name\",\n          Utils.getString16Reader(),\n          \"floodPoint\",\n          [\"[]\", \"float32\", 3],\n          \"images\",\n          Utils.getArrayReader(this.PackMapVolumeImage),\n        ];\n\n        this.__root = this.PackMapLights = [\n          \"pointLights\",\n          Utils.getArrayReader(this.PackMapLightgroups),\n          \"spotLights\",\n          Utils.getArrayReader(this.PackMapPointLightgroups),\n          \"volumeLights\",\n          Utils.getArrayReader(this.PackMapVolumeLight),\n        ];\n      },\n\n      // => Version: 7\n      7: function () {\n        this.PackMapLight = [\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"intensity\",\n          \"float32\",\n          \"nearDistance\",\n          \"float32\",\n          \"farDistance\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n        ];\n\n        this.PackMapCurve = [\n          \"gust\",\n          \"float32\",\n          \"gustFreq\",\n          \"float32\",\n          \"noise\",\n          \"float32\",\n          \"phase\",\n          \"float32\",\n          \"offset\",\n          \"float32\",\n          \"amplitude\",\n          \"float32\",\n          \"curveType\",\n          \"uint32\",\n        ];\n\n        this.PackMapLightgroups = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"lights\",\n          Utils.getArrayReader(this.PackMapLight),\n          \"curves\",\n          Utils.getArrayReader(this.PackMapCurve),\n        ];\n\n        this.PackMapPointLight = [\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"intensity\",\n          \"float32\",\n          \"nearDistance\",\n          \"float32\",\n          \"farDistance\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"direction\",\n          [\"[]\", \"float32\", 3],\n          \"innerAngle\",\n          \"float32\",\n          \"outerAngle\",\n          \"float32\",\n          \"textureName\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackMapPointLightgroups = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"lights\",\n          Utils.getArrayReader(this.PackMapPointLight),\n          \"curves\",\n          Utils.getArrayReader(this.PackMapCurve),\n        ];\n\n        this.PackMapVolumeImage = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"dims\",\n          \"uint32\",\n          \"format\",\n          \"uint32\",\n          \"image\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.PackMapVolumeLight = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"minExt\",\n          [\"[]\", \"float32\", 3],\n          \"maxExt\",\n          [\"[]\", \"float32\", 3],\n          \"intensities\",\n          [\"[]\", \"float32\", 2],\n          \"pack\",\n          [\"[]\", \"float32\", 4],\n          \"name\",\n          Utils.getString16Reader(),\n          \"images\",\n          Utils.getArrayReader(this.PackMapVolumeImage),\n        ];\n\n        this.__root = this.PackMapLights = [\n          \"pointLights\",\n          Utils.getArrayReader(this.PackMapLightgroups),\n          \"spotLights\",\n          Utils.getArrayReader(this.PackMapPointLightgroups),\n          \"volumeLights\",\n          Utils.getArrayReader(this.PackMapVolumeLight),\n        ];\n      },\n\n      // => Version: 6\n      6: function () {\n        this.PackMapLight = [\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"intensity\",\n          \"float32\",\n          \"nearDistance\",\n          \"float32\",\n          \"farDistance\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n        ];\n\n        this.PackMapCurve = [\n          \"gust\",\n          \"float32\",\n          \"gustFreq\",\n          \"float32\",\n          \"noise\",\n          \"float32\",\n          \"phase\",\n          \"float32\",\n          \"offset\",\n          \"float32\",\n          \"amplitude\",\n          \"float32\",\n          \"curveType\",\n          \"uint32\",\n        ];\n\n        this.PackMapLightgroups = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"lights\",\n          Utils.getArrayReader(this.PackMapLight),\n          \"curves\",\n          Utils.getArrayReader(this.PackMapCurve),\n        ];\n\n        this.PackMapPointLight = [\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"intensity\",\n          \"float32\",\n          \"nearDistance\",\n          \"float32\",\n          \"farDistance\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"direction\",\n          [\"[]\", \"float32\", 3],\n          \"innerAngle\",\n          \"float32\",\n          \"outerAngle\",\n          \"float32\",\n          \"textureName\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackMapPointLightgroups = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"lights\",\n          Utils.getArrayReader(this.PackMapPointLight),\n          \"curves\",\n          Utils.getArrayReader(this.PackMapCurve),\n        ];\n\n        this.PackMapVolumeImage = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"dims\",\n          \"uint32\",\n          \"format\",\n          \"uint32\",\n          \"image\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.PackMapVolumeLight = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"minExt\",\n          [\"[]\", \"float32\", 3],\n          \"maxExt\",\n          [\"[]\", \"float32\", 3],\n          \"intensities\",\n          [\"[]\", \"float32\", 2],\n          \"pack\",\n          [\"[]\", \"float32\", 4],\n          \"images\",\n          Utils.getArrayReader(this.PackMapVolumeImage),\n        ];\n\n        this.__root = this.PackMapLights = [\n          \"pointLights\",\n          Utils.getArrayReader(this.PackMapLightgroups),\n          \"spotLights\",\n          Utils.getArrayReader(this.PackMapPointLightgroups),\n          \"volumeLights\",\n          Utils.getArrayReader(this.PackMapVolumeLight),\n        ];\n      },\n\n      // => Version: 5, ReferencedFunction: 0xEB9C50\n      5: function () {\n        this.PackMapLight = [\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"intensity\",\n          \"float32\",\n          \"nearDistance\",\n          \"float32\",\n          \"farDistance\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n        ];\n\n        this.PackMapCurve = [\n          \"gust\",\n          \"float32\",\n          \"gustFreq\",\n          \"float32\",\n          \"noise\",\n          \"float32\",\n          \"phase\",\n          \"float32\",\n          \"offset\",\n          \"float32\",\n          \"amplitude\",\n          \"float32\",\n          \"curveType\",\n          \"uint32\",\n        ];\n\n        this.PackMapLightgroups = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"lights\",\n          Utils.getArrayReader(this.PackMapLight),\n          \"curves\",\n          Utils.getArrayReader(this.PackMapCurve),\n        ];\n\n        this.PackMapPointLight = [\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"intensity\",\n          \"float32\",\n          \"nearDistance\",\n          \"float32\",\n          \"farDistance\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"direction\",\n          [\"[]\", \"float32\", 3],\n          \"innerAngle\",\n          \"float32\",\n          \"outerAngle\",\n          \"float32\",\n          \"textureName\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackMapPointLightgroups = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"lights\",\n          Utils.getArrayReader(this.PackMapPointLight),\n          \"curves\",\n          Utils.getArrayReader(this.PackMapCurve),\n        ];\n\n        this.__root = this.PackMapLights = [\n          \"pointLights\",\n          Utils.getArrayReader(this.PackMapLightgroups),\n          \"spotLights\",\n          Utils.getArrayReader(this.PackMapPointLightgroups),\n        ];\n      },\n\n      // => Version: 4, ReferencedFunction: 0xEB9A50\n      4: function () {\n        this.PackMapLight = [\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"intensity\",\n          \"float32\",\n          \"nearDistance\",\n          \"float32\",\n          \"farDistance\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n        ];\n\n        this.PackMapCurve = [\n          \"gust\",\n          \"float32\",\n          \"gustFreq\",\n          \"float32\",\n          \"noise\",\n          \"float32\",\n          \"phase\",\n          \"float32\",\n          \"offset\",\n          \"float32\",\n          \"amplitude\",\n          \"float32\",\n          \"curveType\",\n          \"uint32\",\n        ];\n\n        this.PackMapLightgroups = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"lights\",\n          Utils.getArrayReader(this.PackMapLight),\n          \"curves\",\n          Utils.getArrayReader(this.PackMapCurve),\n        ];\n\n        this.__root = this.PackMapLights = [\"lights\", Utils.getArrayReader(this.PackMapLightgroups)];\n      },\n\n      // => Version: 3, ReferencedFunction: 0xEB9910\n      3: function () {\n        this.PackMapLight = [\n          \"type\",\n          \"uint32\",\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"elevation\",\n          \"float32\",\n          \"azimuth\",\n          \"float32\",\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"intensity\",\n          \"float32\",\n          \"nearDistance\",\n          \"float32\",\n          \"farDistance\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n        ];\n\n        this.PackMapCurve = [\n          \"gust\",\n          \"float32\",\n          \"gustFreq\",\n          \"float32\",\n          \"noise\",\n          \"float32\",\n          \"phase\",\n          \"float32\",\n          \"curveType\",\n          \"uint32\",\n        ];\n\n        this.PackMapLightgroups = [\n          \"lights\",\n          Utils.getArrayReader(this.PackMapLight),\n          \"curves\",\n          Utils.getArrayReader(this.PackMapCurve),\n        ];\n\n        this.__root = this.PackMapLights = [\"lights\", Utils.getArrayReader(this.PackMapLightgroups)];\n      },\n\n      // => Version: 2, ReferencedFunction: 0xEB97F0\n      2: function () {\n        this.PackMapLight = [\n          \"type\",\n          \"uint32\",\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"elevation\",\n          \"float32\",\n          \"azimuth\",\n          \"float32\",\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"intensity\",\n          \"float32\",\n          \"nearDistance\",\n          \"float32\",\n          \"farDistance\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n        ];\n\n        this.PackMapLightgroups = [\"lights\", Utils.getArrayReader(this.PackMapLight)];\n\n        this.__root = this.PackMapLights = [\"groups\", Utils.getArrayReader(this.PackMapLightgroups)];\n      },\n\n      // => Version: 1\n      1: function () {\n        this.PackMapLight = [\n          \"type\",\n          \"uint32\",\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"elevation\",\n          \"float32\",\n          \"azimuth\",\n          \"float32\",\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"intensity\",\n          \"float32\",\n          \"nearDistance\",\n          \"float32\",\n          \"farDistance\",\n          \"float32\",\n        ];\n\n        this.__root = this.PackMapLights = [\"lights\", Utils.getArrayReader(this.PackMapLight)];\n      },\n    },\n  },\n];\n","const Utils = require(\"../../util/ParserUtils.js\");\n\nmodule.exports = [\n  /// ==================================================\n  /// Chunk: mach, versions: 2, strucTab: 0x1884620\n  /// ==================================================\n\n  {\n    name: \"mach\",\n    versions: {\n      // => Version: 1\n      1: function () {\n        this.PackAnimMachineActionV1 = [\n          \"actionData\",\n          \"uint32\", // Replaced unknown type: 0x1C\n        ];\n\n        this.PackAnimMachineActionBlockV1 = [\"actions\", Utils.getArrayReader(this.PackAnimMachineActionV1)];\n\n        this.PackAnimMachineActionVariantV1 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"actionBlock\",\n          Utils.getPointerReader(this.PackAnimMachineActionBlockV1),\n        ];\n\n        this.PackAnimMachineActionVariantBlockV1 = [\n          \"actionVariants\",\n          Utils.getArrayReader(this.PackAnimMachineActionVariantV1),\n        ];\n\n        this.PackAnimMachineTransitionVariantV1 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"actionBlock\",\n          Utils.getPointerReader(this.PackAnimMachineActionBlockV1),\n        ];\n\n        this.PackAnimMachineTransitionV1 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"targetStateName\",\n          Utils.getString16Reader(),\n          \"actionBlock\",\n          Utils.getPointerReader(this.PackAnimMachineActionBlockV1),\n          \"variants\",\n          Utils.getArrayReader(this.PackAnimMachineTransitionVariantV1),\n        ];\n\n        this.PackAnimMachineStateVariantV1 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"actionBlock\",\n          Utils.getPointerReader(this.PackAnimMachineActionBlockV1),\n          \"actionVariantBlock\",\n          Utils.getPointerReader(this.PackAnimMachineActionVariantBlockV1),\n          \"transitions\",\n          Utils.getArrayReader(this.PackAnimMachineTransitionV1),\n        ];\n\n        this.PackAnimMachineStateV1 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"actionBlock\",\n          Utils.getPointerReader(this.PackAnimMachineActionBlockV1),\n          \"actionVariantBlock\",\n          Utils.getPointerReader(this.PackAnimMachineActionVariantBlockV1),\n          \"transitions\",\n          Utils.getArrayReader(this.PackAnimMachineTransitionV1),\n          \"variants\",\n          Utils.getArrayReader(this.PackAnimMachineStateVariantV1),\n        ];\n\n        this.PackAnimMachineV1 = [\"states\", Utils.getArrayReader(this.PackAnimMachineStateV1)];\n\n        this.PackAnimModelV1 = [\n          \"modelFileId\",\n          Utils.getFileNameReader(),\n          \"modelFileRaw\",\n          Utils.getString16Reader(),\n          \"machineIndex\",\n          \"uint32\",\n          \"listeners\",\n          [\"[]\", \"uint8\", 16],\n        ];\n\n        this.__root = this.PackAnimMachinesV1 = [\n          \"machines\",\n          Utils.getArrayReader(this.PackAnimMachineV1),\n          \"models\",\n          Utils.getArrayReader(this.PackAnimModelV1),\n        ];\n      },\n\n      // => Version: 0\n      0: function () {\n        this.PackAnimMachineActionV0 = [\n          \"actionData\",\n          \"uint32\", // Replaced unknown type: 0x1C\n        ];\n\n        this.PackAnimMachineActionBlockV0 = [\"actions\", Utils.getArrayReader(this.PackAnimMachineActionV0)];\n\n        this.PackAnimMachineActionVariantV0 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"actionBlock\",\n          Utils.getPointerReader(this.PackAnimMachineActionBlockV0),\n        ];\n\n        this.PackAnimMachineActionVariantBlockV0 = [\n          \"actionVariants\",\n          Utils.getArrayReader(this.PackAnimMachineActionVariantV0),\n        ];\n\n        this.PackAnimMachineTransitionVariantV0 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"actionBlock\",\n          Utils.getPointerReader(this.PackAnimMachineActionBlockV0),\n        ];\n\n        this.PackAnimMachineTransitionV0 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"targetStateName\",\n          Utils.getString16Reader(),\n          \"actionBlock\",\n          Utils.getPointerReader(this.PackAnimMachineActionBlockV0),\n          \"variants\",\n          Utils.getArrayReader(this.PackAnimMachineTransitionVariantV0),\n        ];\n\n        this.PackAnimMachineStateVariantV0 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"actionBlock\",\n          Utils.getPointerReader(this.PackAnimMachineActionBlockV0),\n          \"actionVariantBlock\",\n          Utils.getPointerReader(this.PackAnimMachineActionVariantBlockV0),\n          \"transitions\",\n          Utils.getArrayReader(this.PackAnimMachineTransitionV0),\n        ];\n\n        this.PackAnimMachineStateV0 = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"actionBlock\",\n          Utils.getPointerReader(this.PackAnimMachineActionBlockV0),\n          \"actionVariantBlock\",\n          Utils.getPointerReader(this.PackAnimMachineActionVariantBlockV0),\n          \"transitions\",\n          Utils.getArrayReader(this.PackAnimMachineTransitionV0),\n          \"variants\",\n          Utils.getArrayReader(this.PackAnimMachineStateVariantV0),\n        ];\n\n        this.PackAnimMachineV0 = [\"states\", Utils.getArrayReader(this.PackAnimMachineStateV0)];\n\n        this.PackAnimModelV0 = [\n          \"modelFileId\",\n          Utils.getFileNameReader(),\n          \"modelFileRaw\",\n          Utils.getString16Reader(),\n          \"machineIndex\",\n          \"uint32\",\n        ];\n\n        this.__root = this.PackAnimMachinesV0 = [\n          \"machines\",\n          Utils.getArrayReader(this.PackAnimMachineV0),\n          \"models\",\n          Utils.getArrayReader(this.PackAnimModelV0),\n        ];\n      },\n    },\n  },\n];\n","const Utils = require(\"../../util/ParserUtils.js\");\n\nmodule.exports = [\n  /// ==================================================\n  /// Chunk: main, versions: 1, strucTab: 0x187F4D0\n  /// ==================================================\n\n  {\n    name: \"main\",\n    versions: {\n      // => Version: 0\n      0: function () {\n        this.CollideNavMeshChunkRef = [\n          \"boundsMin\",\n          [\"[]\", \"float32\", 3],\n          \"boundsMax\",\n          [\"[]\", \"float32\", 3],\n          \"chunkFilename\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.__root = this.CollideNavMesh = [\n          \"boundsMin\",\n          [\"[]\", \"float32\", 3],\n          \"boundsMax\",\n          [\"[]\", \"float32\", 3],\n          \"chunkDims\",\n          [\"[]\", \"uint32\", 2],\n          \"chunkRefArray\",\n          Utils.getArrayReader(this.CollideNavMeshChunkRef),\n        ];\n      },\n    },\n  },\n\n  /// ==================================================\n  /// Chunk: main, versions: 1, strucTab: 0x187F4E8\n  /// ==================================================\n\n  {\n    name: \"main\",\n    versions: {\n      // => Version: 0\n      0: function () {\n        this.__root = this.CollideNavMeshChunk = [\n          \"navMeshData\",\n          Utils.getArrayReader(\"uint8\"),\n          \"coarseGraphData\",\n          Utils.getArrayReader(\"uint8\"),\n          \"queryMediatorMoppData\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n      },\n    },\n  },\n\n  /// ==================================================\n  /// Chunk: main, versions: 2, strucTab: 0x187F500\n  /// ==================================================\n\n  {\n    name: \"main\",\n    versions: {\n      // => Version: 1\n      1: function () {\n        this.CollideModelManifestFile = [\n          \"modelFileStr\",\n          Utils.getString16Reader(),\n          \"modelFile\",\n          Utils.getFileNameReader(),\n          \"collisionFile\",\n          Utils.getFileNameReader(),\n          \"scales\",\n          Utils.getArrayReader(\"float32\"),\n        ];\n\n        this.__root = this.CollideModelManifest = [\"files\", Utils.getArrayReader(this.CollideModelManifestFile)];\n      },\n\n      // => Version: 0\n      0: function () {\n        this.CollideModelManifestFile = [\n          \"modelFile\",\n          Utils.getFileNameReader(),\n          \"collisionFile\",\n          Utils.getFileNameReader(),\n          \"scales\",\n          Utils.getArrayReader(\"float32\"),\n        ];\n\n        this.__root = this.CollideModelManifest = [\"files\", Utils.getArrayReader(this.CollideModelManifestFile)];\n      },\n    },\n  },\n];\n","const Utils = require(\"../../util/ParserUtils.js\");\n\nmodule.exports = [\n  /// ==================================================\n  /// Chunk: Main, versions: 1, strucTab: 0x18841DC\n  /// ==================================================\n\n  {\n    name: \"Main\",\n    versions: {\n      // => Version: 0\n      0: function () {\n        this.PackContentTypeInfo = [\n          \"guidOffset\",\n          \"uint32\",\n          \"uidOffset\",\n          \"uint32\",\n          \"dataIdOffset\",\n          \"uint32\",\n          \"nameOffset\",\n          \"uint32\",\n          \"trackReferences\",\n          \"uint8\",\n        ];\n\n        this.PackContentNamespace = [\"name\", Utils.getString16Reader(), \"domain\", \"uint32\", \"parentIndex\", \"uint32\"];\n\n        this.PackContentIndexEntry = [\n          \"type\",\n          \"uint32\",\n          \"offset\",\n          \"uint32\",\n          \"namespaceIndex\",\n          \"uint32\",\n          \"rootIndex\",\n          \"uint32\",\n        ];\n\n        this.PackContentLocalOffsetFixup = [\"relocOffset\", \"uint32\"];\n\n        this.PackContentExternalOffsetFixup = [\"relocOffset\", \"uint32\", \"targetFileIndex\", \"uint32\"];\n\n        this.PackContentFileIndexFixup = [\"relocOffset\", \"uint32\"];\n\n        this.PackContentStringIndexFixup = [\"relocOffset\", \"uint32\"];\n\n        this.PackContentTrackedReference = [\n          \"sourceOffset\",\n          \"uint32\",\n          \"targetFileIndex\",\n          \"uint32\",\n          \"targetOffset\",\n          \"uint32\",\n        ];\n\n        this.__root = this.PackContent = [\n          \"flags\",\n          \"uint32\",\n          \"typeInfos\",\n          Utils.getArrayReader(this.PackContentTypeInfo),\n          \"namespaces\",\n          Utils.getArrayReader(this.PackContentNamespace),\n          \"fileRefs\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"indexEntries\",\n          Utils.getArrayReader(this.PackContentIndexEntry),\n          \"localOffsets\",\n          Utils.getArrayReader(this.PackContentLocalOffsetFixup),\n          \"externalOffsets\",\n          Utils.getArrayReader(this.PackContentExternalOffsetFixup),\n          \"fileIndices\",\n          Utils.getArrayReader(this.PackContentFileIndexFixup),\n          \"stringIndices\",\n          Utils.getArrayReader(this.PackContentStringIndexFixup),\n          \"trackedReferences\",\n          Utils.getArrayReader(this.PackContentTrackedReference),\n          \"strings\",\n          Utils.getArrayReader(Utils.getString16Reader()),\n          \"content\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n      },\n    },\n  },\n\n  /// ==================================================\n  /// Chunk: Main, versions: 1, strucTab: 0x1884314\n  /// ==================================================\n\n  {\n    name: \"Main\",\n    versions: {\n      // => Version: 0\n      0: function () {\n        this.PackMapMetadataMap = [\"mapId\", \"uint16\", \"mapType\", \"uint8\"];\n\n        this.__root = this.PackMapMetadata = [\"maps\", Utils.getArrayReader(this.PackMapMetadataMap)];\n      },\n    },\n  },\n];\n","const Utils = require(\"../../util/ParserUtils.js\");\n\nmodule.exports = [\n  /// ==================================================\n  /// Chunk: MFST, versions: 7, strucTab: 0x18341D0\n  /// ==================================================\n\n  {\n    name: \"MFST\",\n    versions: {\n      // => Version: 6\n      6: function () {\n        this.PackAssetManifestRecord = [\"baseId\", \"uint32\", \"fileId\", \"uint32\", \"size\", \"uint32\", \"flags\", \"uint32\"];\n\n        this.PackAssetManifestStream = [\"parentBaseId\", \"uint32\", \"streamBaseId\", \"uint32\"];\n\n        this.PackAssetManifestProperty = [\"type\", \"uint8\", \"data\", Utils.getArrayReader(\"uint8\")];\n\n        this.PackAssetManifestPropertyIndex = [\"baseId\", \"uint32\", \"properyIndex\", \"uint32\"];\n\n        this.__root = this.PackAssetManifest = [\n          \"buildId\",\n          \"uint32\",\n          \"totalRecordSize\",\n          Utils.getQWordReader(),\n          \"records\",\n          Utils.getArrayReader(this.PackAssetManifestRecord),\n          \"streams\",\n          Utils.getArrayReader(this.PackAssetManifestStream),\n          \"properties\",\n          Utils.getArrayReader(this.PackAssetManifestProperty),\n          \"propertyTable\",\n          Utils.getArrayReader(this.PackAssetManifestPropertyIndex),\n        ];\n      },\n\n      // => Version: 5\n      5: function () {\n        this.PackAssetManifestRecordV5 = [\"baseId\", \"uint32\", \"fileId\", \"uint32\", \"size\", \"uint32\", \"flags\", \"uint32\"];\n\n        this.PackAssetManifestStreamV5 = [\"parentBaseId\", \"uint32\", \"streamBaseId\", \"uint32\"];\n\n        this.PackAssetManifestPropertyV5 = [\"type\", \"uint8\", \"data\", Utils.getArrayReader(\"uint8\")];\n\n        this.PackAssetManifestPropertyIndexV5 = [\"baseId\", \"uint32\", \"properyIndex\", \"uint32\"];\n\n        this.__root = this.PackAssetManifestV5 = [\n          \"buildId\",\n          \"uint32\",\n          \"records\",\n          Utils.getArrayReader(this.PackAssetManifestRecordV5),\n          \"streams\",\n          Utils.getArrayReader(this.PackAssetManifestStreamV5),\n          \"properties\",\n          Utils.getArrayReader(this.PackAssetManifestPropertyV5),\n          \"propertyTable\",\n          Utils.getArrayReader(this.PackAssetManifestPropertyIndexV5),\n        ];\n      },\n\n      // => Version: 4\n      4: function () {\n        this.PackAssetManifestRecordV4 = [\"baseId\", \"uint32\", \"fileId\", \"uint32\", \"size\", \"uint32\", \"flags\", \"uint32\"];\n\n        this.PackAssetManifestStreamV4 = [\"parentBaseId\", \"uint32\", \"streamBaseId\", \"uint32\"];\n\n        this.PackAssetManifestOptionsV4 = [\"baseId\", \"uint32\", \"fileId\", \"uint32\", \"flags\", \"uint32\"];\n\n        this.PackAssetManifestPropertyV4 = [\"type\", \"uint8\", \"data\", Utils.getArrayReader(\"uint8\")];\n\n        this.PackAssetManifestPropertyIndexV4 = [\"baseId\", \"uint32\", \"properyIndex\", \"uint32\"];\n\n        this.__root = this.PackAssetManifestV4 = [\n          \"buildId\",\n          \"uint32\",\n          \"records\",\n          Utils.getArrayReader(this.PackAssetManifestRecordV4),\n          \"streams\",\n          Utils.getArrayReader(this.PackAssetManifestStreamV4),\n          \"options\",\n          Utils.getArrayReader(this.PackAssetManifestOptionsV4),\n          \"properties\",\n          Utils.getArrayReader(this.PackAssetManifestPropertyV4),\n          \"propertyTable\",\n          Utils.getArrayReader(this.PackAssetManifestPropertyIndexV4),\n        ];\n      },\n\n      // => Version: 3\n      3: function () {\n        this.PackAssetManifestRecordV3 = [\"baseId\", \"uint32\", \"fileId\", \"uint32\", \"size\", \"uint32\"];\n\n        this.PackAssetManifestStreamV3 = [\"parentBaseId\", \"uint32\", \"streamBaseId\", \"uint32\"];\n\n        this.PackAssetManifestOptionsV3 = [\"baseId\", \"uint32\", \"fileId\", \"uint32\", \"flags\", \"uint32\"];\n\n        this.__root = this.PackAssetManifestV3 = [\n          \"buildId\",\n          \"uint32\",\n          \"records\",\n          Utils.getArrayReader(this.PackAssetManifestRecordV3),\n          \"streams\",\n          Utils.getArrayReader(this.PackAssetManifestStreamV3),\n          \"options\",\n          Utils.getArrayReader(this.PackAssetManifestOptionsV3),\n        ];\n      },\n\n      // => Version: 2\n      2: function () {\n        this.PackAssetManifestRecordV2 = [\"baseId\", \"uint32\", \"fileId\", \"uint32\", \"size\", \"uint32\"];\n\n        this.PackAssetManifestStreamV2 = [\"parentBaseId\", \"uint32\", \"streamBaseId\", \"uint32\"];\n\n        this.__root = this.PackAssetManifestV2 = [\n          \"buildId\",\n          \"uint32\",\n          \"records\",\n          Utils.getArrayReader(this.PackAssetManifestRecordV2),\n          \"streams\",\n          Utils.getArrayReader(this.PackAssetManifestStreamV2),\n          \"noDeltaRecords\",\n          Utils.getArrayReader(this.PackAssetManifestRecordV2),\n        ];\n      },\n\n      // => Version: 1\n      1: function () {\n        this.PackAssetManifestRecordV1 = [\"baseId\", \"uint32\", \"fileId\", \"uint32\", \"size\", \"uint32\"];\n\n        this.PackAssetManifestStreamV1 = [\"parentBaseId\", \"uint32\", \"streamBaseId\", \"uint32\"];\n\n        this.__root = this.PackAssetManifestV1 = [\n          \"buildId\",\n          \"uint32\",\n          \"records\",\n          Utils.getArrayReader(this.PackAssetManifestRecordV1),\n          \"streams\",\n          Utils.getArrayReader(this.PackAssetManifestStreamV1),\n        ];\n      },\n\n      // => Version: 0\n      0: function () {\n        this.PackAssetManifestRecordV0 = [\"baseId\", \"uint32\", \"fileId\", \"uint32\", \"size\", \"uint32\"];\n\n        this.__root = this.PackAssetManifestV0 = [\n          \"buildId\",\n          \"uint32\",\n          \"records\",\n          Utils.getArrayReader(this.PackAssetManifestRecordV0),\n        ];\n      },\n    },\n  },\n];\n","const Utils = require(\"../../util/ParserUtils.js\");\n\nmodule.exports = [\n  /// ==================================================\n  /// Chunk: mfst, versions: 3, strucTab: 0x18FBDC4\n  /// ==================================================\n\n  {\n    name: \"mfst\",\n    versions: {\n      // => Version: 2, ReferencedFunction: 0x1408880\n      2: function () {\n        this.ContentMapRedirector = [\n          \"mapGUID\",\n          [\"[]\", \"uint8\", 16],\n          \"token\",\n          \"uint32\",\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"radius\",\n          \"float32\",\n        ];\n\n        this.ContentMapModel = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"flags\",\n          \"uint32\",\n          \"type\",\n          \"uint32\",\n          \"permutation\",\n          Utils.getQWordReader(),\n        ];\n\n        this.ContentMapStart = [\n          \"token\",\n          \"uint32\",\n          \"modelArray\",\n          Utils.getArrayReader(this.ContentMapModel),\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"radius\",\n          \"float32\",\n        ];\n\n        this.ContentMap = [\n          \"mapGUID\",\n          [\"[]\", \"uint8\", 16],\n          \"mapRedirectorArray\",\n          Utils.getArrayReader(this.ContentMapRedirector),\n          \"mapStartArray\",\n          Utils.getArrayReader(this.ContentMapStart),\n        ];\n\n        this.__root = this.ContentPortalManifest = [\"mapArray\", Utils.getArrayReader(this.ContentMap)];\n      },\n\n      // => Version: 1\n      1: function () {\n        this.ContentMapRedirectorV1 = [\n          \"mapId\",\n          \"uint32\",\n          \"token\",\n          \"uint32\",\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"radius\",\n          \"float32\",\n        ];\n\n        this.ContentMapModelV1 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"flags\",\n          \"uint32\",\n          \"type\",\n          \"uint32\",\n          \"permutation\",\n          Utils.getQWordReader(),\n        ];\n\n        this.ContentMapStartV1 = [\n          \"token\",\n          \"uint32\",\n          \"modelArray\",\n          Utils.getArrayReader(this.ContentMapModelV1),\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"radius\",\n          \"float32\",\n        ];\n\n        this.ContentMapV1 = [\n          \"mapId\",\n          \"uint32\",\n          \"mapRedirectorArray\",\n          Utils.getArrayReader(this.ContentMapRedirectorV1),\n          \"mapStartArray\",\n          Utils.getArrayReader(this.ContentMapStartV1),\n        ];\n\n        this.__root = this.ContentPortalManifestV1 = [\"mapArray\", Utils.getArrayReader(this.ContentMapV1)];\n      },\n\n      // => Version: 0\n      0: function () {\n        this.ContentMapRedirectorV0 = [\n          \"mapId\",\n          \"uint32\",\n          \"token\",\n          \"uint32\",\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"radius\",\n          \"float32\",\n        ];\n\n        this.ContentMapModelV0 = [\"filename\", Utils.getFileNameReader(), \"flags\", \"uint32\", \"type\", \"uint32\"];\n\n        this.ContentMapStartV0 = [\n          \"token\",\n          \"uint32\",\n          \"modelArray\",\n          Utils.getArrayReader(this.ContentMapModelV0),\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"radius\",\n          \"float32\",\n        ];\n\n        this.ContentMapV0 = [\n          \"mapId\",\n          \"uint32\",\n          \"mapRedirectorArray\",\n          Utils.getArrayReader(this.ContentMapRedirectorV0),\n          \"mapStartArray\",\n          Utils.getArrayReader(this.ContentMapStartV0),\n        ];\n\n        this.__root = this.ContentPortalManifestV0 = [\"mapArray\", Utils.getArrayReader(this.ContentMapV0)];\n      },\n    },\n  },\n];\n","const Utils = require(\"../../util/ParserUtils.js\");\n\nmodule.exports = [\n  /// ==================================================\n  /// Chunk: MODL, versions: 66, strucTab: 0x1772BB0\n  /// ==================================================\n\n  {\n    name: \"MODL\",\n    versions: {\n      // => Version: 65, ReferencedFunction: 0xF2C4D0\n      65: function () {\n        this.ModelTextureDataV65 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"textureFlags\",\n          \"uint32\",\n          \"token\",\n          Utils.getQWordReader(),\n          \"blitId\",\n          Utils.getQWordReader(),\n          \"uvAnimId\",\n          \"uint32\",\n          \"uvPSInputIndex\",\n          \"uint8\",\n        ];\n\n        this.ModelConstantDataV65 = [\"name\", \"uint32\", \"value\", [\"[]\", \"float32\", 4], \"constantFlags\", \"uint32\"];\n\n        this.ModelMatConstLinkV65 = [\"linkToken\", Utils.getQWordReader(), \"constantToken\", \"uint32\"];\n\n        this.ModelUVTransLinkV65 = [\"linkToken\", Utils.getQWordReader(), \"uvAnimId\", \"uint32\", \"type\", \"uint8\"];\n\n        this.ModelMaterialTexTransformV65 = [\n          \"flags\",\n          \"uint32\",\n          \"uvIndex\",\n          \"uint8\",\n          \"columns\",\n          \"uint8\",\n          \"rows\",\n          \"uint8\",\n          \"count\",\n          \"uint16\",\n          \"fps\",\n          \"float32\",\n          \"scroll\",\n          [\"[]\", \"float32\", 2],\n          \"scrollFreq\",\n          [\"[]\", \"float32\", 2],\n          \"scale\",\n          [\"[]\", \"float32\", 2],\n          \"scaleFreq\",\n          [\"[]\", \"float32\", 2],\n          \"rotate\",\n          \"float32\",\n          \"rotate\",\n          \"float32\",\n        ];\n\n        this.ModelMaterialDataV65 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"materialId\",\n          \"uint32\",\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"materialFlags\",\n          \"uint32\",\n          \"sortOrder\",\n          \"uint32\",\n          \"textures\",\n          Utils.getArrayReader(this.ModelTextureDataV65),\n          \"constants\",\n          Utils.getArrayReader(this.ModelConstantDataV65),\n          \"matConstLinks\",\n          Utils.getArrayReader(this.ModelMatConstLinkV65),\n          \"uvTransLinks\",\n          Utils.getArrayReader(this.ModelUVTransLinkV65),\n          \"texTransforms\",\n          Utils.getArrayReader(this.ModelMaterialTexTransformV65),\n          \"texCoordCount\",\n          \"uint8\",\n        ];\n\n        this.ModelPermutationDataV65 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"materials\",\n          Utils.getRefArrayReader(this.ModelMaterialDataV65),\n        ];\n\n        this.ModelParticleCloudV65 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"drag\",\n          \"float32\",\n          \"emitterIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"fvf\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"obstacleIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"velocity\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.ModelParticleCurveV65 = [\"curveType\", \"uint8\", \"keys\", Utils.getArrayReader([\"[]\", \"float32\", 2])];\n\n        this.ModelParticleFlipbookV65 = [\n          \"columns\",\n          \"uint8\",\n          \"count\",\n          \"uint8\",\n          \"fps\",\n          \"float32\",\n          \"rows\",\n          \"uint8\",\n          \"start\",\n          \"uint8\",\n        ];\n\n        this.ModelMatrix43V65 = [\"x\", [\"[]\", \"float32\", 4], \"y\", [\"[]\", \"float32\", 4], \"z\", [\"[]\", \"float32\", 4]];\n\n        this.ModelParticleEmitterV65 = [\n          \"acceleration\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"accelerationDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"accelerationDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"affinity\",\n          \"uint32\",\n          \"alignmentDir\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorBegin\",\n          [\"[]\", \"float32\", 4],\n          \"colorEnd\",\n          [\"[]\", \"float32\", 4],\n          \"colorPeriod\",\n          \"float32\",\n          \"colorFalloff\",\n          [\"[]\", \"float32\", 2],\n          \"drag\",\n          \"float32\",\n          \"emitterFlags\",\n          \"uint32\",\n          \"offset\",\n          \"float32\",\n          \"opacityCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV65),\n          \"opacityCurvePreset\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"flipbook\",\n          Utils.getPointerReader(this.ModelParticleFlipbookV65),\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"rotationChange\",\n          [\"[]\", \"float32\", 2],\n          \"rotationDrag\",\n          \"float32\",\n          \"rotationInitial\",\n          [\"[]\", \"float32\", 2],\n          \"scaleChange\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleInitial\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV65),\n          \"scaleCurvePreset\",\n          \"uint32\",\n          \"velocity\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"velocityDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"velocityDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"velocityInherit\",\n          [\"[]\", \"float32\", 2],\n          \"spawnGroupSize\",\n          [\"[]\", \"float32\", 2],\n          \"spawnPeriod\",\n          \"float32\",\n          \"spawnProbability\",\n          \"float32\",\n          \"spawnRadius\",\n          [\"[]\", \"float32\", 2],\n          \"spawnWindEmit\",\n          [\"[]\", \"float32\", 2],\n          \"spawnWindSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"texCoordRect\",\n          [\"[]\", \"float32\", 4],\n          \"transform\",\n          Utils.getPointerReader(this.ModelMatrix43V65),\n          \"windInfluence\",\n          \"uint8\",\n          \"alignmentType\",\n          \"uint8\",\n          \"spawnShape\",\n          \"uint8\",\n        ];\n\n        this.ModelCloudDataV65 = [\n          \"clouds\",\n          Utils.getArrayReader(this.ModelParticleCloudV65),\n          \"emitters\",\n          Utils.getArrayReader(this.ModelParticleEmitterV65),\n        ];\n\n        this.ModelObstacleDataV65 = [\n          \"affinity\",\n          \"uint32\",\n          \"bone\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint8\",\n          \"response\",\n          \"uint8\",\n          \"flags\",\n          \"uint32\",\n          \"dragCoef\",\n          \"float32\",\n          \"gravityCoef\",\n          \"float32\",\n          \"length\",\n          \"float32\",\n          \"width\",\n          \"float32\",\n          \"height\",\n          \"float32\",\n          \"radius\",\n          \"float32\",\n          \"transform\",\n          Utils.getPointerReader(this.ModelMatrix43V65),\n        ];\n\n        this.ModelStreakV65 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"velocity\",\n          [\"[]\", \"float32\", 3],\n          \"anchorIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"bone\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"jitter\",\n          \"float32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"noise\",\n          \"float32\",\n          \"spawnDist\",\n          \"float32\",\n          \"texScale\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n        ];\n\n        this.ModelStreakAnchorV65 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorStart\",\n          \"uint32\",\n          \"colorEnd\",\n          \"uint32\",\n          \"falloff\",\n          \"float32\",\n          \"lifetime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"texV\",\n          \"float32\",\n        ];\n\n        this.ModelStreakDataV65 = [\n          \"streaks\",\n          Utils.getArrayReader(this.ModelStreakV65),\n          \"anchors\",\n          Utils.getArrayReader(this.ModelStreakAnchorV65),\n        ];\n\n        this.ModelEffectLightV65 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"farDistance\",\n          \"float32\",\n          \"intensity\",\n          \"float32\",\n          \"nearDistance\",\n          \"float32\",\n        ];\n\n        this.ModelLightDataV65 = [\"effectLights\", Utils.getArrayReader(this.ModelEffectLightV65)];\n\n        this.PackVertexType = [\"fvf\", \"uint32\", \"vertices\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelClothBoneWeightV65 = [\"token\", Utils.getQWordReader(), \"weight\", \"uint8\"];\n\n        this.ModelClothMeshGroupV65 = [\"weights\", Utils.getArrayReader(this.ModelClothBoneWeightV65)];\n\n        this.ModelClothGroupBindingV65 = [\n          \"strippedToken\",\n          Utils.getQWordReader(),\n          \"boneName\",\n          Utils.getStringReader(),\n          \"OBBMin\",\n          [\"[]\", \"float32\", 3],\n          \"OBBMax\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.ModelClothSoftLockV65 = [\"weight\", \"uint8\", \"vertIndex\", \"uint16\"];\n\n        this.ModelClothConstraintV65 = [\n          \"distance\",\n          \"uint16\",\n          \"relationship\",\n          \"uint16\",\n          \"vertIndexA\",\n          \"uint16\",\n          \"vertIndexB\",\n          \"uint16\",\n        ];\n\n        this.ModelClothDataV65 = [\n          \"materialIndex\",\n          \"uint32\",\n          \"drag\",\n          \"float32\",\n          \"gravity\",\n          \"float32\",\n          \"compressibility\",\n          \"float32\",\n          \"slack\",\n          \"float32\",\n          \"stretchiness\",\n          \"float32\",\n          \"weight\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n          \"mesh\",\n          this.PackVertexType,\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"groups\",\n          Utils.getArrayReader(this.ModelClothMeshGroupV65),\n          \"groupBindings\",\n          Utils.getArrayReader(this.ModelClothGroupBindingV65),\n          \"softLocks\",\n          Utils.getArrayReader(this.ModelClothSoftLockV65),\n          \"lod0Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV65),\n          \"lod1Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV65),\n          \"lod1Indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"barycentricCoords\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"barycentricIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"obstacleIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"lockCount\",\n          \"uint16\",\n          \"lockedNormals\",\n          Utils.getArrayReader(\"uint32\"),\n          \"lockedTanegents\",\n          Utils.getArrayReader(\"uint32\"),\n          \"lockedBitangents\",\n          Utils.getArrayReader(\"uint32\"),\n          \"lod1VertexCount\",\n          \"uint16\",\n          \"flags\",\n          \"uint8\",\n          \"rigidness\",\n          \"uint8\",\n          \"translateWeight\",\n          \"float32\",\n          \"visBone\",\n          Utils.getQWordReader(),\n        ];\n\n        this.ModelEffectWindV65 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"farDistance\",\n          \"float32\",\n          \"intensity\",\n          \"float32\",\n          \"nearDistance\",\n          \"float32\",\n        ];\n\n        this.ModelWindDataV65 = [\"effectWind\", Utils.getArrayReader(this.ModelEffectWindV65)];\n\n        this.ModelLightningSystemV65 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"boltIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"flags\",\n          \"uint32\",\n          \"fvf\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelLightningBoltV65 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"nodeIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"colorBegin\",\n          [\"[]\", \"uint32\", 3],\n          \"colorEnd\",\n          [\"[]\", \"uint32\", 3],\n          \"colorPeriod\",\n          \"float32\",\n          \"colorFalloff\",\n          [\"[]\", \"float32\", 2],\n          \"flags\",\n          \"uint32\",\n          \"flipbook\",\n          Utils.getPointerReader(this.ModelParticleFlipbookV65),\n          \"fps\",\n          \"float32\",\n          \"frequency\",\n          \"float32\",\n          \"groupMax\",\n          \"uint32\",\n          \"groupMin\",\n          \"uint32\",\n          \"probability\",\n          \"float32\",\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"numSegments\",\n          \"uint16\",\n          \"opacity\",\n          [\"[]\", \"float32\", 2],\n          \"opacityPreset\",\n          \"uint8\",\n          \"texOffset\",\n          \"float32\",\n          \"texRange\",\n          [\"[]\", \"float32\", 2],\n          \"texScale\",\n          \"float32\",\n          \"texSpeed\",\n          \"float32\",\n          \"thicknessPreset\",\n          \"uint8\",\n          \"thicknessRange\",\n          [\"[]\", \"float32\", 2],\n          \"type\",\n          \"uint8\",\n          \"variance\",\n          \"float32\",\n          \"variancePreset\",\n          \"uint8\",\n          \"noise\",\n          \"float32\",\n        ];\n\n        this.ModelLightningNodeV65 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"childrenIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"flags\",\n          \"uint32\",\n          \"probability\",\n          \"float32\",\n          \"radius\",\n          [\"[]\", \"float32\", 2],\n          \"shape\",\n          \"uint8\",\n          \"updatePos\",\n          \"float32\",\n        ];\n\n        this.ModelLightningDataV65 = [\n          \"systems\",\n          Utils.getArrayReader(this.ModelLightningSystemV65),\n          \"bolts\",\n          Utils.getArrayReader(this.ModelLightningBoltV65),\n          \"nodes\",\n          Utils.getArrayReader(this.ModelLightningNodeV65),\n        ];\n\n        this.ModelSoftBodyDataV65 = [\n          \"materialIndex\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"vertexFvf\",\n          \"uint32\",\n          \"vertBytes\",\n          Utils.getArrayReader(\"uint8\"),\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"bones\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.ModelBoneOffsetDataV65 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"translation\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 4],\n          \"boneInverseOffset\",\n          [\"[]\", [\"[]\", \"float32\", 4], 3],\n        ];\n\n        this.ModelBoundingSphereV65 = [\"center\", [\"[]\", \"float32\", 3], \"radius\", \"float32\"];\n\n        this.__root = this.ModelFileDataV65 = [\n          \"permutations\",\n          Utils.getArrayReader(this.ModelPermutationDataV65),\n          \"cloudData\",\n          Utils.getPointerReader(this.ModelCloudDataV65),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelObstacleDataV65),\n          \"streakData\",\n          Utils.getPointerReader(this.ModelStreakDataV65),\n          \"lightData\",\n          Utils.getPointerReader(this.ModelLightDataV65),\n          \"clothData\",\n          Utils.getArrayReader(this.ModelClothDataV65),\n          \"windData\",\n          Utils.getPointerReader(this.ModelWindDataV65),\n          \"actionOffsetNames\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"actionOffsets\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"lodOverride\",\n          [\"[]\", \"float32\", 2],\n          \"soundScript\",\n          Utils.getFileNameReader(),\n          \"lightningData\",\n          Utils.getPointerReader(this.ModelLightningDataV65),\n          \"softBodyData\",\n          Utils.getArrayReader(this.ModelSoftBodyDataV65),\n          \"boneOffsetData\",\n          Utils.getArrayReader(this.ModelBoneOffsetDataV65),\n          \"boundingSphere\",\n          Utils.getPointerReader(this.ModelBoundingSphereV65),\n        ];\n      },\n\n      // => Version: 64\n      64: function () {\n        this.ModelTextureDataV64 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"textureFlags\",\n          \"uint32\",\n          \"token\",\n          Utils.getQWordReader(),\n          \"blitId\",\n          Utils.getQWordReader(),\n          \"uvAnimId\",\n          \"uint32\",\n          \"uvPSInputIndex\",\n          \"uint8\",\n        ];\n\n        this.ModelConstantDataV64 = [\"name\", \"uint32\", \"value\", [\"[]\", \"float32\", 4], \"constantFlags\", \"uint32\"];\n\n        this.ModelMatConstLinkV64 = [\"linkToken\", Utils.getQWordReader(), \"constantToken\", \"uint32\"];\n\n        this.ModelUVTransLinkV64 = [\"linkToken\", Utils.getQWordReader(), \"uvAnimId\", \"uint32\", \"type\", \"uint8\"];\n\n        this.ModelMaterialTexTransformV64 = [\n          \"flags\",\n          \"uint32\",\n          \"uvIndex\",\n          \"uint8\",\n          \"columns\",\n          \"uint8\",\n          \"rows\",\n          \"uint8\",\n          \"count\",\n          \"uint16\",\n          \"fps\",\n          \"float32\",\n          \"scroll\",\n          [\"[]\", \"float32\", 2],\n          \"scrollFreq\",\n          [\"[]\", \"float32\", 2],\n          \"scale\",\n          [\"[]\", \"float32\", 2],\n          \"scaleFreq\",\n          [\"[]\", \"float32\", 2],\n          \"rotate\",\n          \"float32\",\n          \"rotate\",\n          \"float32\",\n        ];\n\n        this.ModelMaterialDataV64 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"materialId\",\n          \"uint32\",\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"materialFlags\",\n          \"uint32\",\n          \"sortOrder\",\n          \"uint32\",\n          \"textures\",\n          Utils.getArrayReader(this.ModelTextureDataV64),\n          \"constants\",\n          Utils.getArrayReader(this.ModelConstantDataV64),\n          \"matConstLinks\",\n          Utils.getArrayReader(this.ModelMatConstLinkV64),\n          \"uvTransLinks\",\n          Utils.getArrayReader(this.ModelUVTransLinkV64),\n          \"texTransforms\",\n          Utils.getArrayReader(this.ModelMaterialTexTransformV64),\n          \"texCoordCount\",\n          \"uint8\",\n        ];\n\n        this.ModelPermutationDataV64 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"materials\",\n          Utils.getRefArrayReader(this.ModelMaterialDataV64),\n        ];\n\n        this.ModelMeshLodDataV64 = [\"indices\", Utils.getArrayReader(\"uint16\")];\n\n        this.ModelMeshMorphVertV64 = [\"index\", \"uint16\", \"vector\", [\"[]\", \"float32\", 3]];\n\n        this.ModelMeshMorphTargetV64 = [\n          \"positions\",\n          Utils.getArrayReader(this.ModelMeshMorphVertV64),\n          \"normals\",\n          Utils.getArrayReader(this.ModelMeshMorphVertV64),\n          \"mesh\",\n          Utils.getQWordReader(),\n        ];\n\n        this.PackGrannyMeshType = [\"mesh\", Utils.getArrayReader(\"uint8\")];\n\n        this.GrBoundData = [\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"boxExtent\",\n          [\"[]\", \"float32\", 3],\n          \"sphereRadius\",\n          \"float32\",\n        ];\n\n        this.ModelMeshDataV64 = [\n          \"visBone\",\n          Utils.getQWordReader(),\n          \"lods\",\n          Utils.getArrayReader(this.ModelMeshLodDataV64),\n          \"morphTargets\",\n          Utils.getArrayReader(this.ModelMeshMorphTargetV64),\n          \"mesh\",\n          this.PackGrannyMeshType,\n          \"flags\",\n          \"uint32\",\n          \"seamVertIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"meshName\",\n          Utils.getQWordReader(),\n          \"minBound\",\n          [\"[]\", \"float32\", 3],\n          \"maxBound\",\n          [\"[]\", \"float32\", 3],\n          \"bounds\",\n          Utils.getArrayReader(this.GrBoundData),\n          \"materialIndex\",\n          \"uint32\",\n          \"materialName\",\n          Utils.getStringReader(),\n        ];\n\n        this.ModelParticleCloudV64 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"drag\",\n          \"float32\",\n          \"emitterIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"fvf\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"obstacleIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"velocity\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.ModelParticleCurveV64 = [\"curveType\", \"uint8\", \"keys\", Utils.getArrayReader([\"[]\", \"float32\", 2])];\n\n        this.ModelParticleFlipbookV64 = [\n          \"columns\",\n          \"uint8\",\n          \"count\",\n          \"uint8\",\n          \"fps\",\n          \"float32\",\n          \"rows\",\n          \"uint8\",\n          \"start\",\n          \"uint8\",\n        ];\n\n        this.ModelMatrix43V64 = [\"x\", [\"[]\", \"float32\", 4], \"y\", [\"[]\", \"float32\", 4], \"z\", [\"[]\", \"float32\", 4]];\n\n        this.ModelParticleEmitterV64 = [\n          \"acceleration\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"accelerationDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"accelerationDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"affinity\",\n          \"uint32\",\n          \"alignmentDir\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorBegin\",\n          [\"[]\", \"float32\", 4],\n          \"colorEnd\",\n          [\"[]\", \"float32\", 4],\n          \"colorPeriod\",\n          \"float32\",\n          \"colorFalloff\",\n          [\"[]\", \"float32\", 2],\n          \"drag\",\n          \"float32\",\n          \"emitterFlags\",\n          \"uint32\",\n          \"offset\",\n          \"float32\",\n          \"opacityCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV64),\n          \"opacityCurvePreset\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"flipbook\",\n          Utils.getPointerReader(this.ModelParticleFlipbookV64),\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"rotationChange\",\n          [\"[]\", \"float32\", 2],\n          \"rotationDrag\",\n          \"float32\",\n          \"rotationInitial\",\n          [\"[]\", \"float32\", 2],\n          \"scaleChange\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleInitial\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV64),\n          \"scaleCurvePreset\",\n          \"uint32\",\n          \"velocity\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"velocityDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"velocityDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"velocityInherit\",\n          [\"[]\", \"float32\", 2],\n          \"spawnGroupSize\",\n          [\"[]\", \"float32\", 2],\n          \"spawnPeriod\",\n          \"float32\",\n          \"spawnProbability\",\n          \"float32\",\n          \"spawnRadius\",\n          [\"[]\", \"float32\", 2],\n          \"spawnWindEmit\",\n          [\"[]\", \"float32\", 2],\n          \"spawnWindSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"texCoordRect\",\n          [\"[]\", \"float32\", 4],\n          \"transform\",\n          Utils.getPointerReader(this.ModelMatrix43V64),\n          \"windInfluence\",\n          \"uint8\",\n          \"alignmentType\",\n          \"uint8\",\n          \"spawnShape\",\n          \"uint8\",\n        ];\n\n        this.ModelCloudDataV64 = [\n          \"clouds\",\n          Utils.getArrayReader(this.ModelParticleCloudV64),\n          \"emitters\",\n          Utils.getArrayReader(this.ModelParticleEmitterV64),\n        ];\n\n        this.ModelObstacleDataV64 = [\n          \"affinity\",\n          \"uint32\",\n          \"bone\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint8\",\n          \"response\",\n          \"uint8\",\n          \"flags\",\n          \"uint32\",\n          \"dragCoef\",\n          \"float32\",\n          \"gravityCoef\",\n          \"float32\",\n          \"length\",\n          \"float32\",\n          \"width\",\n          \"float32\",\n          \"height\",\n          \"float32\",\n          \"radius\",\n          \"float32\",\n          \"transform\",\n          Utils.getPointerReader(this.ModelMatrix43V64),\n        ];\n\n        this.ModelStreakV64 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"velocity\",\n          [\"[]\", \"float32\", 3],\n          \"anchorIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"bone\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"jitter\",\n          \"float32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"noise\",\n          \"float32\",\n          \"spawnDist\",\n          \"float32\",\n          \"texScale\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n        ];\n\n        this.ModelStreakAnchorV64 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorStart\",\n          \"uint32\",\n          \"colorEnd\",\n          \"uint32\",\n          \"falloff\",\n          \"float32\",\n          \"lifetime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"texV\",\n          \"float32\",\n        ];\n\n        this.ModelStreakDataV64 = [\n          \"streaks\",\n          Utils.getArrayReader(this.ModelStreakV64),\n          \"anchors\",\n          Utils.getArrayReader(this.ModelStreakAnchorV64),\n        ];\n\n        this.ModelEffectLightV64 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"farDistance\",\n          \"float32\",\n          \"intensity\",\n          \"float32\",\n          \"nearDistance\",\n          \"float32\",\n        ];\n\n        this.ModelLightDataV64 = [\"effectLights\", Utils.getArrayReader(this.ModelEffectLightV64)];\n\n        this.PackVertexType = [\"fvf\", \"uint32\", \"vertices\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelClothBoneWeightV64 = [\"token\", Utils.getQWordReader(), \"weight\", \"uint8\"];\n\n        this.ModelClothMeshGroupV64 = [\"weights\", Utils.getArrayReader(this.ModelClothBoneWeightV64)];\n\n        this.ModelClothGroupBindingV64 = [\n          \"strippedToken\",\n          Utils.getQWordReader(),\n          \"boneName\",\n          Utils.getStringReader(),\n          \"OBBMin\",\n          [\"[]\", \"float32\", 3],\n          \"OBBMax\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.ModelClothSoftLockV64 = [\"weight\", \"uint8\", \"vertIndex\", \"uint16\"];\n\n        this.ModelClothConstraintV64 = [\n          \"distance\",\n          \"uint16\",\n          \"relationship\",\n          \"uint16\",\n          \"vertIndexA\",\n          \"uint16\",\n          \"vertIndexB\",\n          \"uint16\",\n        ];\n\n        this.ModelClothDataV64 = [\n          \"materialIndex\",\n          \"uint32\",\n          \"drag\",\n          \"float32\",\n          \"gravity\",\n          \"float32\",\n          \"compressibility\",\n          \"float32\",\n          \"slack\",\n          \"float32\",\n          \"stretchiness\",\n          \"float32\",\n          \"weight\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n          \"mesh\",\n          this.PackVertexType,\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"groups\",\n          Utils.getArrayReader(this.ModelClothMeshGroupV64),\n          \"groupBindings\",\n          Utils.getArrayReader(this.ModelClothGroupBindingV64),\n          \"softLocks\",\n          Utils.getArrayReader(this.ModelClothSoftLockV64),\n          \"lod0Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV64),\n          \"lod1Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV64),\n          \"lod1Indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"barycentricCoords\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"barycentricIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"obstacleIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"lockCount\",\n          \"uint16\",\n          \"lockedNormals\",\n          Utils.getArrayReader(\"uint32\"),\n          \"lockedTanegents\",\n          Utils.getArrayReader(\"uint32\"),\n          \"lockedBitangents\",\n          Utils.getArrayReader(\"uint32\"),\n          \"lod1VertexCount\",\n          \"uint16\",\n          \"flags\",\n          \"uint8\",\n          \"rigidness\",\n          \"uint8\",\n          \"translateWeight\",\n          \"float32\",\n          \"visBone\",\n          Utils.getQWordReader(),\n        ];\n\n        this.ModelEffectWindV64 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"farDistance\",\n          \"float32\",\n          \"intensity\",\n          \"float32\",\n          \"nearDistance\",\n          \"float32\",\n        ];\n\n        this.ModelWindDataV64 = [\"effectWind\", Utils.getArrayReader(this.ModelEffectWindV64)];\n\n        this.ModelLightningSystemV64 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"boltIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"flags\",\n          \"uint32\",\n          \"fvf\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelLightningBoltV64 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"nodeIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"colorBegin\",\n          [\"[]\", \"uint32\", 3],\n          \"colorEnd\",\n          [\"[]\", \"uint32\", 3],\n          \"colorPeriod\",\n          \"float32\",\n          \"colorFalloff\",\n          [\"[]\", \"float32\", 2],\n          \"flags\",\n          \"uint32\",\n          \"flipbook\",\n          Utils.getPointerReader(this.ModelParticleFlipbookV64),\n          \"fps\",\n          \"float32\",\n          \"frequency\",\n          \"float32\",\n          \"groupMax\",\n          \"uint32\",\n          \"groupMin\",\n          \"uint32\",\n          \"probability\",\n          \"float32\",\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"numSegments\",\n          \"uint16\",\n          \"opacity\",\n          [\"[]\", \"float32\", 2],\n          \"opacityPreset\",\n          \"uint8\",\n          \"texOffset\",\n          \"float32\",\n          \"texRange\",\n          [\"[]\", \"float32\", 2],\n          \"texScale\",\n          \"float32\",\n          \"texSpeed\",\n          \"float32\",\n          \"thicknessPreset\",\n          \"uint8\",\n          \"thicknessRange\",\n          [\"[]\", \"float32\", 2],\n          \"type\",\n          \"uint8\",\n          \"variance\",\n          \"float32\",\n          \"variancePreset\",\n          \"uint8\",\n          \"noise\",\n          \"float32\",\n        ];\n\n        this.ModelLightningNodeV64 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"childrenIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"flags\",\n          \"uint32\",\n          \"probability\",\n          \"float32\",\n          \"radius\",\n          [\"[]\", \"float32\", 2],\n          \"shape\",\n          \"uint8\",\n          \"updatePos\",\n          \"float32\",\n        ];\n\n        this.ModelLightningDataV64 = [\n          \"systems\",\n          Utils.getArrayReader(this.ModelLightningSystemV64),\n          \"bolts\",\n          Utils.getArrayReader(this.ModelLightningBoltV64),\n          \"nodes\",\n          Utils.getArrayReader(this.ModelLightningNodeV64),\n        ];\n\n        this.ModelSoftBodyDataV64 = [\n          \"materialIndex\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"vertexFvf\",\n          \"uint32\",\n          \"vertBytes\",\n          Utils.getArrayReader(\"uint8\"),\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"bones\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.ModelBoneOffsetDataV64 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"translation\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 4],\n          \"boneInverseOffset\",\n          [\"[]\", [\"[]\", \"float32\", 4], 3],\n        ];\n\n        this.ModelBoundingSphereV64 = [\"center\", [\"[]\", \"float32\", 3], \"radius\", \"float32\"];\n\n        this.__root = this.ModelFileDataV64 = [\n          \"permutations\",\n          Utils.getArrayReader(this.ModelPermutationDataV64),\n          \"meshes\",\n          Utils.getRefArrayReader(this.ModelMeshDataV64),\n          \"cloudData\",\n          Utils.getPointerReader(this.ModelCloudDataV64),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelObstacleDataV64),\n          \"streakData\",\n          Utils.getPointerReader(this.ModelStreakDataV64),\n          \"lightData\",\n          Utils.getPointerReader(this.ModelLightDataV64),\n          \"clothData\",\n          Utils.getArrayReader(this.ModelClothDataV64),\n          \"windData\",\n          Utils.getPointerReader(this.ModelWindDataV64),\n          \"actionOffsetNames\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"actionOffsets\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"lodOverride\",\n          [\"[]\", \"float32\", 2],\n          \"soundScript\",\n          Utils.getFileNameReader(),\n          \"lightningData\",\n          Utils.getPointerReader(this.ModelLightningDataV64),\n          \"softBodyData\",\n          Utils.getArrayReader(this.ModelSoftBodyDataV64),\n          \"boneOffsetData\",\n          Utils.getArrayReader(this.ModelBoneOffsetDataV64),\n          \"boundingSphere\",\n          Utils.getPointerReader(this.ModelBoundingSphereV64),\n        ];\n      },\n\n      // => Version: 63, ReferencedFunction: 0xF2C410\n      63: function () {\n        this.ModelTextureDataV63 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"textureFlags\",\n          \"uint32\",\n          \"token\",\n          Utils.getQWordReader(),\n          \"blitId\",\n          Utils.getQWordReader(),\n          \"uvAnimId\",\n          \"uint32\",\n          \"uvPSInputIndex\",\n          \"uint8\",\n        ];\n\n        this.ModelConstantDataV63 = [\"name\", \"uint32\", \"value\", [\"[]\", \"float32\", 4], \"constantFlags\", \"uint32\"];\n\n        this.ModelMatConstLinkV63 = [\"linkToken\", Utils.getQWordReader(), \"constantToken\", \"uint32\"];\n\n        this.ModelUVTransLinkV63 = [\"linkToken\", Utils.getQWordReader(), \"uvAnimId\", \"uint32\", \"type\", \"uint8\"];\n\n        this.ModelMaterialTexTransformV63 = [\n          \"flags\",\n          \"uint32\",\n          \"uvIndex\",\n          \"uint8\",\n          \"columns\",\n          \"uint8\",\n          \"rows\",\n          \"uint8\",\n          \"count\",\n          \"uint16\",\n          \"fps\",\n          \"float32\",\n          \"scroll\",\n          [\"[]\", \"float32\", 2],\n        ];\n\n        this.ModelMaterialDataV63 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"materialId\",\n          \"uint32\",\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"materialFlags\",\n          \"uint32\",\n          \"sortOrder\",\n          \"uint32\",\n          \"textures\",\n          Utils.getArrayReader(this.ModelTextureDataV63),\n          \"constants\",\n          Utils.getArrayReader(this.ModelConstantDataV63),\n          \"matConstLinks\",\n          Utils.getArrayReader(this.ModelMatConstLinkV63),\n          \"uvTransLinks\",\n          Utils.getArrayReader(this.ModelUVTransLinkV63),\n          \"texTransforms\",\n          Utils.getArrayReader(this.ModelMaterialTexTransformV63),\n          \"texCoordCount\",\n          \"uint8\",\n        ];\n\n        this.ModelPermutationDataV63 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"materials\",\n          Utils.getRefArrayReader(this.ModelMaterialDataV63),\n        ];\n\n        this.ModelMeshLodDataV63 = [\"indices\", Utils.getArrayReader(\"uint16\")];\n\n        this.ModelMeshMorphVertV63 = [\"index\", \"uint16\", \"vector\", [\"[]\", \"float32\", 3]];\n\n        this.ModelMeshMorphTargetV63 = [\n          \"positions\",\n          Utils.getArrayReader(this.ModelMeshMorphVertV63),\n          \"normals\",\n          Utils.getArrayReader(this.ModelMeshMorphVertV63),\n          \"mesh\",\n          Utils.getQWordReader(),\n        ];\n\n        this.PackGrannyMeshType = [\"mesh\", Utils.getArrayReader(\"uint8\")];\n\n        this.GrBoundData = [\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"boxExtent\",\n          [\"[]\", \"float32\", 3],\n          \"sphereRadius\",\n          \"float32\",\n        ];\n\n        this.ModelMeshDataV63 = [\n          \"visBone\",\n          Utils.getQWordReader(),\n          \"lods\",\n          Utils.getArrayReader(this.ModelMeshLodDataV63),\n          \"morphTargets\",\n          Utils.getArrayReader(this.ModelMeshMorphTargetV63),\n          \"mesh\",\n          this.PackGrannyMeshType,\n          \"flags\",\n          \"uint32\",\n          \"seamVertIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"meshName\",\n          Utils.getQWordReader(),\n          \"minBound\",\n          [\"[]\", \"float32\", 3],\n          \"maxBound\",\n          [\"[]\", \"float32\", 3],\n          \"bounds\",\n          Utils.getArrayReader(this.GrBoundData),\n          \"materialIndex\",\n          \"uint32\",\n          \"materialName\",\n          Utils.getStringReader(),\n        ];\n\n        this.ModelParticleCloudV63 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"drag\",\n          \"float32\",\n          \"emitterIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"fvf\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"obstacleIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"velocity\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.ModelParticleCurveV63 = [\"curveType\", \"uint8\", \"keys\", Utils.getArrayReader([\"[]\", \"float32\", 2])];\n\n        this.ModelParticleFlipbookV63 = [\n          \"columns\",\n          \"uint8\",\n          \"count\",\n          \"uint8\",\n          \"fps\",\n          \"float32\",\n          \"rows\",\n          \"uint8\",\n          \"start\",\n          \"uint8\",\n        ];\n\n        this.ModelMatrix43V63 = [\"x\", [\"[]\", \"float32\", 4], \"y\", [\"[]\", \"float32\", 4], \"z\", [\"[]\", \"float32\", 4]];\n\n        this.ModelParticleEmitterV63 = [\n          \"acceleration\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"accelerationDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"accelerationDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"affinity\",\n          \"uint32\",\n          \"alignmentDir\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorBegin\",\n          [\"[]\", \"float32\", 4],\n          \"colorEnd\",\n          [\"[]\", \"float32\", 4],\n          \"colorPeriod\",\n          \"float32\",\n          \"colorFalloff\",\n          [\"[]\", \"float32\", 2],\n          \"drag\",\n          \"float32\",\n          \"emitterFlags\",\n          \"uint32\",\n          \"offset\",\n          \"float32\",\n          \"opacityCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV63),\n          \"opacityCurvePreset\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"flipbook\",\n          Utils.getPointerReader(this.ModelParticleFlipbookV63),\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"rotationChange\",\n          [\"[]\", \"float32\", 2],\n          \"rotationDrag\",\n          \"float32\",\n          \"rotationInitial\",\n          [\"[]\", \"float32\", 2],\n          \"scaleChange\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleInitial\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV63),\n          \"scaleCurvePreset\",\n          \"uint32\",\n          \"velocity\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"velocityDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"velocityDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"velocityInherit\",\n          [\"[]\", \"float32\", 2],\n          \"spawnGroupSize\",\n          [\"[]\", \"float32\", 2],\n          \"spawnPeriod\",\n          \"float32\",\n          \"spawnProbability\",\n          \"float32\",\n          \"spawnRadius\",\n          [\"[]\", \"float32\", 2],\n          \"spawnWindEmit\",\n          [\"[]\", \"float32\", 2],\n          \"spawnWindSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"texCoordRect\",\n          [\"[]\", \"float32\", 4],\n          \"transform\",\n          Utils.getPointerReader(this.ModelMatrix43V63),\n          \"windInfluence\",\n          \"uint8\",\n          \"alignmentType\",\n          \"uint8\",\n          \"spawnShape\",\n          \"uint8\",\n        ];\n\n        this.ModelCloudDataV63 = [\n          \"clouds\",\n          Utils.getArrayReader(this.ModelParticleCloudV63),\n          \"emitters\",\n          Utils.getArrayReader(this.ModelParticleEmitterV63),\n        ];\n\n        this.ModelObstacleDataV63 = [\n          \"affinity\",\n          \"uint32\",\n          \"bone\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint8\",\n          \"response\",\n          \"uint8\",\n          \"flags\",\n          \"uint32\",\n          \"dragCoef\",\n          \"float32\",\n          \"gravityCoef\",\n          \"float32\",\n          \"length\",\n          \"float32\",\n          \"width\",\n          \"float32\",\n          \"height\",\n          \"float32\",\n          \"radius\",\n          \"float32\",\n          \"transform\",\n          Utils.getPointerReader(this.ModelMatrix43V63),\n        ];\n\n        this.ModelStreakV63 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"velocity\",\n          [\"[]\", \"float32\", 3],\n          \"anchorIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"bone\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"jitter\",\n          \"float32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"noise\",\n          \"float32\",\n          \"spawnDist\",\n          \"float32\",\n          \"texScale\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n        ];\n\n        this.ModelStreakAnchorV63 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorStart\",\n          \"uint32\",\n          \"colorEnd\",\n          \"uint32\",\n          \"falloff\",\n          \"float32\",\n          \"lifetime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"texV\",\n          \"float32\",\n        ];\n\n        this.ModelStreakDataV63 = [\n          \"streaks\",\n          Utils.getArrayReader(this.ModelStreakV63),\n          \"anchors\",\n          Utils.getArrayReader(this.ModelStreakAnchorV63),\n        ];\n\n        this.ModelEffectLightV63 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"farDistance\",\n          \"float32\",\n          \"intensity\",\n          \"float32\",\n          \"nearDistance\",\n          \"float32\",\n        ];\n\n        this.ModelLightDataV63 = [\"effectLights\", Utils.getArrayReader(this.ModelEffectLightV63)];\n\n        this.PackVertexType = [\"fvf\", \"uint32\", \"vertices\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelClothBoneWeightV63 = [\"token\", Utils.getQWordReader(), \"weight\", \"uint8\"];\n\n        this.ModelClothMeshGroupV63 = [\"weights\", Utils.getArrayReader(this.ModelClothBoneWeightV63)];\n\n        this.ModelClothGroupBindingV63 = [\n          \"strippedToken\",\n          Utils.getQWordReader(),\n          \"boneName\",\n          Utils.getStringReader(),\n          \"OBBMin\",\n          [\"[]\", \"float32\", 3],\n          \"OBBMax\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.ModelClothSoftLockV63 = [\"weight\", \"uint8\", \"vertIndex\", \"uint16\"];\n\n        this.ModelClothConstraintV63 = [\n          \"distance\",\n          \"uint16\",\n          \"relationship\",\n          \"uint16\",\n          \"vertIndexA\",\n          \"uint16\",\n          \"vertIndexB\",\n          \"uint16\",\n        ];\n\n        this.ModelClothDataV63 = [\n          \"materialIndex\",\n          \"uint32\",\n          \"drag\",\n          \"float32\",\n          \"gravity\",\n          \"float32\",\n          \"compressibility\",\n          \"float32\",\n          \"slack\",\n          \"float32\",\n          \"stretchiness\",\n          \"float32\",\n          \"weight\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n          \"mesh\",\n          this.PackVertexType,\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"groups\",\n          Utils.getArrayReader(this.ModelClothMeshGroupV63),\n          \"groupBindings\",\n          Utils.getArrayReader(this.ModelClothGroupBindingV63),\n          \"softLocks\",\n          Utils.getArrayReader(this.ModelClothSoftLockV63),\n          \"lod0Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV63),\n          \"lod1Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV63),\n          \"lod1Indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"barycentricCoords\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"barycentricIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"obstacleIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"lockCount\",\n          \"uint16\",\n          \"lockedNormals\",\n          Utils.getArrayReader(\"uint32\"),\n          \"lockedTanegents\",\n          Utils.getArrayReader(\"uint32\"),\n          \"lockedBitangents\",\n          Utils.getArrayReader(\"uint32\"),\n          \"lod1VertexCount\",\n          \"uint16\",\n          \"flags\",\n          \"uint8\",\n          \"rigidness\",\n          \"uint8\",\n          \"translateWeight\",\n          \"float32\",\n        ];\n\n        this.ModelEffectWindV63 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"farDistance\",\n          \"float32\",\n          \"intensity\",\n          \"float32\",\n          \"nearDistance\",\n          \"float32\",\n        ];\n\n        this.ModelWindDataV63 = [\"effectWind\", Utils.getArrayReader(this.ModelEffectWindV63)];\n\n        this.ModelLightningSystemV63 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"boltIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"flags\",\n          \"uint32\",\n          \"fvf\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelLightningBoltV63 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"nodeIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"colorBegin\",\n          [\"[]\", \"uint32\", 3],\n          \"colorEnd\",\n          [\"[]\", \"uint32\", 3],\n          \"colorPeriod\",\n          \"float32\",\n          \"colorFalloff\",\n          [\"[]\", \"float32\", 2],\n          \"flags\",\n          \"uint32\",\n          \"flipbook\",\n          Utils.getPointerReader(this.ModelParticleFlipbookV63),\n          \"fps\",\n          \"float32\",\n          \"frequency\",\n          \"float32\",\n          \"groupMax\",\n          \"uint32\",\n          \"groupMin\",\n          \"uint32\",\n          \"probability\",\n          \"float32\",\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"numSegments\",\n          \"uint16\",\n          \"opacity\",\n          [\"[]\", \"float32\", 2],\n          \"opacityPreset\",\n          \"uint8\",\n          \"texOffset\",\n          \"float32\",\n          \"texRange\",\n          [\"[]\", \"float32\", 2],\n          \"texScale\",\n          \"float32\",\n          \"texSpeed\",\n          \"float32\",\n          \"thicknessPreset\",\n          \"uint8\",\n          \"thicknessRange\",\n          [\"[]\", \"float32\", 2],\n          \"type\",\n          \"uint8\",\n          \"variance\",\n          \"float32\",\n          \"variancePreset\",\n          \"uint8\",\n          \"noise\",\n          \"float32\",\n        ];\n\n        this.ModelLightningNodeV63 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"childrenIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"flags\",\n          \"uint32\",\n          \"probability\",\n          \"float32\",\n          \"radius\",\n          [\"[]\", \"float32\", 2],\n          \"shape\",\n          \"uint8\",\n          \"updatePos\",\n          \"float32\",\n        ];\n\n        this.ModelLightningDataV63 = [\n          \"systems\",\n          Utils.getArrayReader(this.ModelLightningSystemV63),\n          \"bolts\",\n          Utils.getArrayReader(this.ModelLightningBoltV63),\n          \"nodes\",\n          Utils.getArrayReader(this.ModelLightningNodeV63),\n        ];\n\n        this.ModelSoftBodyDataV63 = [\n          \"materialIndex\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"vertexFvf\",\n          \"uint32\",\n          \"vertBytes\",\n          Utils.getArrayReader(\"uint8\"),\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"bones\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.ModelBoneOffsetDataV63 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"translation\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 4],\n          \"boneInverseOffset\",\n          [\"[]\", [\"[]\", \"float32\", 4], 3],\n        ];\n\n        this.ModelBoundingSphereV63 = [\"center\", [\"[]\", \"float32\", 3], \"radius\", \"float32\"];\n\n        this.__root = this.ModelFileDataV63 = [\n          \"permutations\",\n          Utils.getArrayReader(this.ModelPermutationDataV63),\n          \"meshes\",\n          Utils.getRefArrayReader(this.ModelMeshDataV63),\n          \"cloudData\",\n          Utils.getPointerReader(this.ModelCloudDataV63),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelObstacleDataV63),\n          \"streakData\",\n          Utils.getPointerReader(this.ModelStreakDataV63),\n          \"lightData\",\n          Utils.getPointerReader(this.ModelLightDataV63),\n          \"clothData\",\n          Utils.getArrayReader(this.ModelClothDataV63),\n          \"windData\",\n          Utils.getPointerReader(this.ModelWindDataV63),\n          \"actionOffsetNames\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"actionOffsets\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"lodOverride\",\n          [\"[]\", \"float32\", 2],\n          \"soundScript\",\n          Utils.getFileNameReader(),\n          \"lightningData\",\n          Utils.getPointerReader(this.ModelLightningDataV63),\n          \"softBodyData\",\n          Utils.getArrayReader(this.ModelSoftBodyDataV63),\n          \"boneOffsetData\",\n          Utils.getArrayReader(this.ModelBoneOffsetDataV63),\n          \"boundingSphere\",\n          Utils.getPointerReader(this.ModelBoundingSphereV63),\n        ];\n      },\n\n      // => Version: 62, ReferencedFunction: 0xF2C2F0\n      62: function () {\n        this.ModelTextureDataV62 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"textureFlags\",\n          \"uint32\",\n          \"token\",\n          Utils.getQWordReader(),\n          \"blitId\",\n          Utils.getQWordReader(),\n          \"uvAnimId\",\n          \"uint32\",\n          \"uvPSInputIndex\",\n          \"uint8\",\n        ];\n\n        this.ModelConstantDataV62 = [\"name\", \"uint32\", \"value\", [\"[]\", \"float32\", 4], \"constantFlags\", \"uint32\"];\n\n        this.ModelMatConstLinkV62 = [\"linkToken\", Utils.getQWordReader(), \"constantToken\", \"uint32\"];\n\n        this.ModelUVTransLinkV62 = [\"linkToken\", Utils.getQWordReader(), \"uvAnimId\", \"uint32\", \"type\", \"uint8\"];\n\n        this.ModelMaterialTexTransformV62 = [\n          \"random\",\n          \"uint8\",\n          \"uvIndex\",\n          \"uint8\",\n          \"columns\",\n          \"uint8\",\n          \"rows\",\n          \"uint8\",\n          \"count\",\n          \"uint16\",\n          \"fps\",\n          \"float32\",\n          \"scroll\",\n          [\"[]\", \"float32\", 2],\n        ];\n\n        this.ModelMaterialDataV62 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"materialId\",\n          \"uint32\",\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"materialFlags\",\n          \"uint32\",\n          \"sortOrder\",\n          \"uint32\",\n          \"textures\",\n          Utils.getArrayReader(this.ModelTextureDataV62),\n          \"constants\",\n          Utils.getArrayReader(this.ModelConstantDataV62),\n          \"matConstLinks\",\n          Utils.getArrayReader(this.ModelMatConstLinkV62),\n          \"uvTransLinks\",\n          Utils.getArrayReader(this.ModelUVTransLinkV62),\n          \"texTransforms\",\n          Utils.getArrayReader(this.ModelMaterialTexTransformV62),\n          \"texCoordCount\",\n          \"uint8\",\n        ];\n\n        this.ModelPermutationDataV62 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"materials\",\n          Utils.getRefArrayReader(this.ModelMaterialDataV62),\n        ];\n\n        this.ModelMeshLodDataV62 = [\"indices\", Utils.getArrayReader(\"uint16\")];\n\n        this.ModelMeshMorphVertV62 = [\"index\", \"uint16\", \"vector\", [\"[]\", \"float32\", 3]];\n\n        this.ModelMeshMorphTargetV62 = [\n          \"positions\",\n          Utils.getArrayReader(this.ModelMeshMorphVertV62),\n          \"normals\",\n          Utils.getArrayReader(this.ModelMeshMorphVertV62),\n          \"mesh\",\n          Utils.getQWordReader(),\n        ];\n\n        this.PackGrannyMeshType = [\"mesh\", Utils.getArrayReader(\"uint8\")];\n\n        this.GrBoundData = [\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"boxExtent\",\n          [\"[]\", \"float32\", 3],\n          \"sphereRadius\",\n          \"float32\",\n        ];\n\n        this.ModelMeshDataV62 = [\n          \"visBone\",\n          Utils.getQWordReader(),\n          \"lods\",\n          Utils.getArrayReader(this.ModelMeshLodDataV62),\n          \"morphTargets\",\n          Utils.getArrayReader(this.ModelMeshMorphTargetV62),\n          \"mesh\",\n          this.PackGrannyMeshType,\n          \"flags\",\n          \"uint32\",\n          \"seamVertIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"meshName\",\n          Utils.getQWordReader(),\n          \"minBound\",\n          [\"[]\", \"float32\", 3],\n          \"maxBound\",\n          [\"[]\", \"float32\", 3],\n          \"bounds\",\n          Utils.getArrayReader(this.GrBoundData),\n          \"materialIndex\",\n          \"uint32\",\n          \"materialName\",\n          Utils.getStringReader(),\n        ];\n\n        this.ModelParticleCloudV62 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"drag\",\n          \"float32\",\n          \"emitterIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"fvf\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"obstacleIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"velocity\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.ModelParticleCurveV62 = [\"curveType\", \"uint8\", \"keys\", Utils.getArrayReader([\"[]\", \"float32\", 2])];\n\n        this.ModelParticleFlipbookV62 = [\n          \"columns\",\n          \"uint8\",\n          \"count\",\n          \"uint8\",\n          \"fps\",\n          \"float32\",\n          \"rows\",\n          \"uint8\",\n          \"start\",\n          \"uint8\",\n        ];\n\n        this.ModelMatrix43V62 = [\"x\", [\"[]\", \"float32\", 4], \"y\", [\"[]\", \"float32\", 4], \"z\", [\"[]\", \"float32\", 4]];\n\n        this.ModelParticleEmitterV62 = [\n          \"acceleration\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"accelerationDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"accelerationDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"affinity\",\n          \"uint32\",\n          \"alignmentDir\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorBegin\",\n          [\"[]\", \"float32\", 4],\n          \"colorEnd\",\n          [\"[]\", \"float32\", 4],\n          \"colorPeriod\",\n          \"float32\",\n          \"colorFalloff\",\n          [\"[]\", \"float32\", 2],\n          \"drag\",\n          \"float32\",\n          \"emitterFlags\",\n          \"uint32\",\n          \"offset\",\n          \"float32\",\n          \"opacityCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV62),\n          \"opacityCurvePreset\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"flipbook\",\n          Utils.getPointerReader(this.ModelParticleFlipbookV62),\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"rotationChange\",\n          [\"[]\", \"float32\", 2],\n          \"rotationDrag\",\n          \"float32\",\n          \"rotationInitial\",\n          [\"[]\", \"float32\", 2],\n          \"scaleChange\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleInitial\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV62),\n          \"scaleCurvePreset\",\n          \"uint32\",\n          \"velocity\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"velocityDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"velocityDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"velocityInherit\",\n          [\"[]\", \"float32\", 2],\n          \"spawnGroupSize\",\n          [\"[]\", \"float32\", 2],\n          \"spawnPeriod\",\n          \"float32\",\n          \"spawnProbability\",\n          \"float32\",\n          \"spawnRadius\",\n          [\"[]\", \"float32\", 2],\n          \"spawnWindEmit\",\n          [\"[]\", \"float32\", 2],\n          \"spawnWindSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"texCoordRect\",\n          [\"[]\", \"float32\", 4],\n          \"transform\",\n          Utils.getPointerReader(this.ModelMatrix43V62),\n          \"windInfluence\",\n          \"uint8\",\n          \"alignmentType\",\n          \"uint8\",\n          \"spawnShape\",\n          \"uint8\",\n        ];\n\n        this.ModelCloudDataV62 = [\n          \"clouds\",\n          Utils.getArrayReader(this.ModelParticleCloudV62),\n          \"emitters\",\n          Utils.getArrayReader(this.ModelParticleEmitterV62),\n        ];\n\n        this.ModelObstacleDataV62 = [\n          \"affinity\",\n          \"uint32\",\n          \"bone\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint8\",\n          \"response\",\n          \"uint8\",\n          \"flags\",\n          \"uint32\",\n          \"dragCoef\",\n          \"float32\",\n          \"gravityCoef\",\n          \"float32\",\n          \"length\",\n          \"float32\",\n          \"width\",\n          \"float32\",\n          \"height\",\n          \"float32\",\n          \"radius\",\n          \"float32\",\n          \"transform\",\n          Utils.getPointerReader(this.ModelMatrix43V62),\n        ];\n\n        this.ModelStreakV62 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"velocity\",\n          [\"[]\", \"float32\", 3],\n          \"anchorIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"bone\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"jitter\",\n          \"float32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"noise\",\n          \"float32\",\n          \"spawnDist\",\n          \"float32\",\n          \"texScale\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n        ];\n\n        this.ModelStreakAnchorV62 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorStart\",\n          \"uint32\",\n          \"colorEnd\",\n          \"uint32\",\n          \"falloff\",\n          \"float32\",\n          \"lifetime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"texV\",\n          \"float32\",\n        ];\n\n        this.ModelStreakDataV62 = [\n          \"streaks\",\n          Utils.getArrayReader(this.ModelStreakV62),\n          \"anchors\",\n          Utils.getArrayReader(this.ModelStreakAnchorV62),\n        ];\n\n        this.ModelEffectLightV62 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"farDistance\",\n          \"float32\",\n          \"intensity\",\n          \"float32\",\n          \"nearDistance\",\n          \"float32\",\n        ];\n\n        this.ModelLightDataV62 = [\"effectLights\", Utils.getArrayReader(this.ModelEffectLightV62)];\n\n        this.PackVertexType = [\"fvf\", \"uint32\", \"vertices\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelClothBoneWeightV62 = [\"token\", Utils.getQWordReader(), \"weight\", \"uint8\"];\n\n        this.ModelClothMeshGroupV62 = [\"weights\", Utils.getArrayReader(this.ModelClothBoneWeightV62)];\n\n        this.ModelClothGroupBindingV62 = [\n          \"strippedToken\",\n          Utils.getQWordReader(),\n          \"boneName\",\n          Utils.getStringReader(),\n          \"OBBMin\",\n          [\"[]\", \"float32\", 3],\n          \"OBBMax\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.ModelClothSoftLockV62 = [\"weight\", \"uint8\", \"vertIndex\", \"uint16\"];\n\n        this.ModelClothConstraintV62 = [\n          \"distance\",\n          \"uint16\",\n          \"relationship\",\n          \"uint16\",\n          \"vertIndexA\",\n          \"uint16\",\n          \"vertIndexB\",\n          \"uint16\",\n        ];\n\n        this.ModelClothDataV62 = [\n          \"materialIndex\",\n          \"uint32\",\n          \"drag\",\n          \"float32\",\n          \"gravity\",\n          \"float32\",\n          \"compressibility\",\n          \"float32\",\n          \"slack\",\n          \"float32\",\n          \"stretchiness\",\n          \"float32\",\n          \"weight\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n          \"mesh\",\n          this.PackVertexType,\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"groups\",\n          Utils.getArrayReader(this.ModelClothMeshGroupV62),\n          \"groupBindings\",\n          Utils.getArrayReader(this.ModelClothGroupBindingV62),\n          \"softLocks\",\n          Utils.getArrayReader(this.ModelClothSoftLockV62),\n          \"lod0Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV62),\n          \"lod1Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV62),\n          \"lod1Indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"barycentricCoords\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"barycentricIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"obstacleIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"lockCount\",\n          \"uint16\",\n          \"lockedNormals\",\n          Utils.getArrayReader(\"uint32\"),\n          \"lockedTanegents\",\n          Utils.getArrayReader(\"uint32\"),\n          \"lockedBitangents\",\n          Utils.getArrayReader(\"uint32\"),\n          \"lod1VertexCount\",\n          \"uint16\",\n          \"flags\",\n          \"uint8\",\n          \"rigidness\",\n          \"uint8\",\n          \"translateWeight\",\n          \"float32\",\n        ];\n\n        this.ModelEffectWindV62 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"farDistance\",\n          \"float32\",\n          \"intensity\",\n          \"float32\",\n          \"nearDistance\",\n          \"float32\",\n        ];\n\n        this.ModelWindDataV62 = [\"effectWind\", Utils.getArrayReader(this.ModelEffectWindV62)];\n\n        this.ModelLightningSystemV62 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"boltIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"flags\",\n          \"uint32\",\n          \"fvf\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelLightningBoltV62 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"nodeIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"colorBegin\",\n          [\"[]\", \"uint32\", 3],\n          \"colorEnd\",\n          [\"[]\", \"uint32\", 3],\n          \"colorPeriod\",\n          \"float32\",\n          \"colorFalloff\",\n          [\"[]\", \"float32\", 2],\n          \"flags\",\n          \"uint32\",\n          \"flipbook\",\n          Utils.getPointerReader(this.ModelParticleFlipbookV62),\n          \"fps\",\n          \"float32\",\n          \"frequency\",\n          \"float32\",\n          \"groupMax\",\n          \"uint32\",\n          \"groupMin\",\n          \"uint32\",\n          \"probability\",\n          \"float32\",\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"numSegments\",\n          \"uint16\",\n          \"opacity\",\n          [\"[]\", \"float32\", 2],\n          \"opacityPreset\",\n          \"uint8\",\n          \"texOffset\",\n          \"float32\",\n          \"texRange\",\n          [\"[]\", \"float32\", 2],\n          \"texScale\",\n          \"float32\",\n          \"texSpeed\",\n          \"float32\",\n          \"thicknessPreset\",\n          \"uint8\",\n          \"thicknessRange\",\n          [\"[]\", \"float32\", 2],\n          \"type\",\n          \"uint8\",\n          \"variance\",\n          \"float32\",\n          \"variancePreset\",\n          \"uint8\",\n          \"noise\",\n          \"float32\",\n        ];\n\n        this.ModelLightningNodeV62 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"childrenIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"flags\",\n          \"uint32\",\n          \"probability\",\n          \"float32\",\n          \"radius\",\n          [\"[]\", \"float32\", 2],\n          \"shape\",\n          \"uint8\",\n          \"updatePos\",\n          \"float32\",\n        ];\n\n        this.ModelLightningDataV62 = [\n          \"systems\",\n          Utils.getArrayReader(this.ModelLightningSystemV62),\n          \"bolts\",\n          Utils.getArrayReader(this.ModelLightningBoltV62),\n          \"nodes\",\n          Utils.getArrayReader(this.ModelLightningNodeV62),\n        ];\n\n        this.ModelSoftBodyDataV62 = [\n          \"materialIndex\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"vertexFvf\",\n          \"uint32\",\n          \"vertBytes\",\n          Utils.getArrayReader(\"uint8\"),\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"bones\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.ModelBoneOffsetDataV62 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"translation\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 4],\n          \"boneInverseOffset\",\n          [\"[]\", [\"[]\", \"float32\", 4], 3],\n        ];\n\n        this.ModelBoundingSphereV62 = [\"center\", [\"[]\", \"float32\", 3], \"radius\", \"float32\"];\n\n        this.__root = this.ModelFileDataV62 = [\n          \"permutations\",\n          Utils.getArrayReader(this.ModelPermutationDataV62),\n          \"meshes\",\n          Utils.getRefArrayReader(this.ModelMeshDataV62),\n          \"cloudData\",\n          Utils.getPointerReader(this.ModelCloudDataV62),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelObstacleDataV62),\n          \"streakData\",\n          Utils.getPointerReader(this.ModelStreakDataV62),\n          \"lightData\",\n          Utils.getPointerReader(this.ModelLightDataV62),\n          \"clothData\",\n          Utils.getArrayReader(this.ModelClothDataV62),\n          \"windData\",\n          Utils.getPointerReader(this.ModelWindDataV62),\n          \"actionOffsetNames\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"actionOffsets\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"lodOverride\",\n          [\"[]\", \"float32\", 2],\n          \"soundScript\",\n          Utils.getFileNameReader(),\n          \"lightningData\",\n          Utils.getPointerReader(this.ModelLightningDataV62),\n          \"softBodyData\",\n          Utils.getArrayReader(this.ModelSoftBodyDataV62),\n          \"boneOffsetData\",\n          Utils.getArrayReader(this.ModelBoneOffsetDataV62),\n          \"boundingSphere\",\n          Utils.getPointerReader(this.ModelBoundingSphereV62),\n        ];\n      },\n\n      // => Version: 61, ReferencedFunction: 0xF2C290\n      61: function () {\n        this.ModelTextureDataV61 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"textureFlags\",\n          \"uint32\",\n          \"token\",\n          Utils.getQWordReader(),\n          \"blitId\",\n          Utils.getQWordReader(),\n          \"uvAnimId\",\n          \"uint32\",\n          \"uvPSInputIndex\",\n          \"uint8\",\n        ];\n\n        this.ModelConstantDataV61 = [\"name\", \"uint32\", \"value\", [\"[]\", \"float32\", 4], \"constantFlags\", \"uint32\"];\n\n        this.ModelMatConstLinkV61 = [\"linkToken\", Utils.getQWordReader(), \"constantToken\", \"uint32\"];\n\n        this.ModelUVTransLinkV61 = [\"linkToken\", Utils.getQWordReader(), \"uvAnimId\", \"uint32\", \"type\", \"uint8\"];\n\n        this.ModelMaterialTexTransformV61 = [\n          \"random\",\n          \"uint8\",\n          \"uvIndex\",\n          \"uint8\",\n          \"columns\",\n          \"uint8\",\n          \"rows\",\n          \"uint8\",\n          \"count\",\n          \"uint16\",\n          \"fps\",\n          \"float32\",\n          \"scroll\",\n          [\"[]\", \"float32\", 2],\n        ];\n\n        this.ModelMaterialDataV61 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"materialId\",\n          \"uint32\",\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"materialFlags\",\n          \"uint32\",\n          \"sortOrder\",\n          \"uint32\",\n          \"textures\",\n          Utils.getArrayReader(this.ModelTextureDataV61),\n          \"constants\",\n          Utils.getArrayReader(this.ModelConstantDataV61),\n          \"matConstLinks\",\n          Utils.getArrayReader(this.ModelMatConstLinkV61),\n          \"uvTransLinks\",\n          Utils.getArrayReader(this.ModelUVTransLinkV61),\n          \"texTransforms\",\n          Utils.getArrayReader(this.ModelMaterialTexTransformV61),\n          \"texCoordCount\",\n          \"uint8\",\n        ];\n\n        this.ModelPermutationDataV61 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"materials\",\n          Utils.getRefArrayReader(this.ModelMaterialDataV61),\n        ];\n\n        this.ModelMeshLodDataV61 = [\"indices\", Utils.getArrayReader(\"uint16\")];\n\n        this.ModelMeshMorphVertV61 = [\"index\", \"uint16\", \"vector\", [\"[]\", \"float32\", 3]];\n\n        this.ModelMeshMorphTargetV61 = [\n          \"positions\",\n          Utils.getArrayReader(this.ModelMeshMorphVertV61),\n          \"normals\",\n          Utils.getArrayReader(this.ModelMeshMorphVertV61),\n          \"mesh\",\n          Utils.getQWordReader(),\n        ];\n\n        this.PackGrannyMeshType = [\"mesh\", Utils.getArrayReader(\"uint8\")];\n\n        this.GrBoundData = [\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"boxExtent\",\n          [\"[]\", \"float32\", 3],\n          \"sphereRadius\",\n          \"float32\",\n        ];\n\n        this.ModelMeshDataV61 = [\n          \"visBone\",\n          Utils.getQWordReader(),\n          \"lods\",\n          Utils.getArrayReader(this.ModelMeshLodDataV61),\n          \"morphTargets\",\n          Utils.getArrayReader(this.ModelMeshMorphTargetV61),\n          \"mesh\",\n          this.PackGrannyMeshType,\n          \"flags\",\n          \"uint32\",\n          \"seamVertIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"meshName\",\n          Utils.getQWordReader(),\n          \"minBound\",\n          [\"[]\", \"float32\", 3],\n          \"maxBound\",\n          [\"[]\", \"float32\", 3],\n          \"bounds\",\n          Utils.getArrayReader(this.GrBoundData),\n          \"materialIndex\",\n          \"uint32\",\n          \"materialName\",\n          Utils.getStringReader(),\n        ];\n\n        this.ModelTransformDataV61 = [\n          \"Flags\",\n          \"uint32\",\n          \"Position\",\n          [\"[]\", \"float32\", 3],\n          \"Orientation\",\n          [\"[]\", \"float32\", 4],\n          \"ScaleShear\",\n          [\"[]\", [\"[]\", \"float32\", 3], 3],\n        ];\n\n        this.ModelBoneDataV61 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"ParentIndex\",\n          \"uint32\",\n          \"LocalTransform\",\n          this.ModelTransformDataV61,\n          \"InverseWorld4x4\",\n          [\"[]\", [\"[]\", \"float32\", 4], 4],\n          \"LODError\",\n          \"float32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n        ];\n\n        this.ModelBoneSymmetryV61 = [\"boneLeft\", Utils.getQWordReader(), \"boneRight\", Utils.getQWordReader()];\n\n        this.ModelSkeletonDataV61 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Bones\",\n          Utils.getArrayReader(this.ModelBoneDataV61),\n          \"LODType\",\n          \"uint32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n          \"boneSymmetries\",\n          Utils.getArrayReader(this.ModelBoneSymmetryV61),\n        ];\n\n        this.ModelMeshBindingDataV61 = [\"Mesh\", Utils.getPointerReader(\"uint8\")];\n\n        this.PackGrannyTrackMaskType = [\"trackMask\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelTrackMaskV61 = [\"trackMask\", this.PackGrannyTrackMaskType, \"token\", Utils.getQWordReader()];\n\n        this.ModelModelDataV61 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Skeleton\",\n          Utils.getPointerReader(this.ModelSkeletonDataV61),\n          \"InitialPlacement\",\n          this.ModelTransformDataV61,\n          \"MeshBindings\",\n          Utils.getArrayReader(this.ModelMeshBindingDataV61),\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n          \"boneFlags\",\n          Utils.getArrayReader(\"uint32\"),\n          \"emitterBones\",\n          Utils.getArrayReader(\"uint32\"),\n          \"trackMasks\",\n          Utils.getArrayReader(this.ModelTrackMaskV61),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"radius\",\n          \"float32\",\n        ];\n\n        this.ModelPropertyDataV61 = [\n          \"id\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint32\",\n          \"mergeIndex\",\n          \"uint32\",\n          \"time\",\n          \"float32\",\n          \"val\",\n          Utils.getQWordReader(),\n          \"strVal\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.ModelParticleCloudV61 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"drag\",\n          \"float32\",\n          \"emitterIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"fvf\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"obstacleIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"velocity\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.ModelParticleCurveV61 = [\"curveType\", \"uint8\", \"keys\", Utils.getArrayReader([\"[]\", \"float32\", 2])];\n\n        this.ModelParticleFlipbookV61 = [\n          \"columns\",\n          \"uint8\",\n          \"count\",\n          \"uint8\",\n          \"fps\",\n          \"float32\",\n          \"rows\",\n          \"uint8\",\n          \"start\",\n          \"uint8\",\n        ];\n\n        this.ModelMatrix43V61 = [\"x\", [\"[]\", \"float32\", 4], \"y\", [\"[]\", \"float32\", 4], \"z\", [\"[]\", \"float32\", 4]];\n\n        this.ModelParticleEmitterV61 = [\n          \"acceleration\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"accelerationDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"accelerationDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"affinity\",\n          \"uint32\",\n          \"alignmentDir\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorBegin\",\n          [\"[]\", \"float32\", 4],\n          \"colorEnd\",\n          [\"[]\", \"float32\", 4],\n          \"colorPeriod\",\n          \"float32\",\n          \"colorFalloff\",\n          [\"[]\", \"float32\", 2],\n          \"drag\",\n          \"float32\",\n          \"emitterFlags\",\n          \"uint32\",\n          \"offset\",\n          \"float32\",\n          \"opacityCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV61),\n          \"opacityCurvePreset\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"flipbook\",\n          Utils.getPointerReader(this.ModelParticleFlipbookV61),\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"rotationChange\",\n          [\"[]\", \"float32\", 2],\n          \"rotationDrag\",\n          \"float32\",\n          \"rotationInitial\",\n          [\"[]\", \"float32\", 2],\n          \"scaleChange\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleInitial\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV61),\n          \"scaleCurvePreset\",\n          \"uint32\",\n          \"velocity\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"velocityDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"velocityDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"velocityInherit\",\n          [\"[]\", \"float32\", 2],\n          \"spawnGroupSize\",\n          [\"[]\", \"float32\", 2],\n          \"spawnPeriod\",\n          \"float32\",\n          \"spawnProbability\",\n          \"float32\",\n          \"spawnRadius\",\n          [\"[]\", \"float32\", 2],\n          \"spawnWindEmit\",\n          [\"[]\", \"float32\", 2],\n          \"spawnWindSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"texCoordRect\",\n          [\"[]\", \"float32\", 4],\n          \"transform\",\n          Utils.getPointerReader(this.ModelMatrix43V61),\n          \"windInfluence\",\n          \"uint8\",\n          \"alignmentType\",\n          \"uint8\",\n          \"spawnShape\",\n          \"uint8\",\n        ];\n\n        this.ModelCloudDataV61 = [\n          \"clouds\",\n          Utils.getArrayReader(this.ModelParticleCloudV61),\n          \"emitters\",\n          Utils.getArrayReader(this.ModelParticleEmitterV61),\n        ];\n\n        this.ModelObstacleDataV61 = [\n          \"affinity\",\n          \"uint32\",\n          \"bone\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint8\",\n          \"response\",\n          \"uint8\",\n          \"flags\",\n          \"uint32\",\n          \"dragCoef\",\n          \"float32\",\n          \"gravityCoef\",\n          \"float32\",\n          \"length\",\n          \"float32\",\n          \"width\",\n          \"float32\",\n          \"height\",\n          \"float32\",\n          \"radius\",\n          \"float32\",\n          \"transform\",\n          Utils.getPointerReader(this.ModelMatrix43V61),\n        ];\n\n        this.ModelStreakV61 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"velocity\",\n          [\"[]\", \"float32\", 3],\n          \"anchorIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"bone\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"jitter\",\n          \"float32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"noise\",\n          \"float32\",\n          \"spawnDist\",\n          \"float32\",\n          \"texScale\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n        ];\n\n        this.ModelStreakAnchorV61 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorStart\",\n          \"uint32\",\n          \"colorEnd\",\n          \"uint32\",\n          \"falloff\",\n          \"float32\",\n          \"lifetime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"texV\",\n          \"float32\",\n        ];\n\n        this.ModelStreakDataV61 = [\n          \"streaks\",\n          Utils.getArrayReader(this.ModelStreakV61),\n          \"anchors\",\n          Utils.getArrayReader(this.ModelStreakAnchorV61),\n        ];\n\n        this.ModelEffectLightV61 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"farDistance\",\n          \"float32\",\n          \"intensity\",\n          \"float32\",\n          \"nearDistance\",\n          \"float32\",\n        ];\n\n        this.ModelLightDataV61 = [\"effectLights\", Utils.getArrayReader(this.ModelEffectLightV61)];\n\n        this.PackVertexType = [\"fvf\", \"uint32\", \"vertices\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelClothBoneWeightV61 = [\"token\", Utils.getQWordReader(), \"weight\", \"uint8\"];\n\n        this.ModelClothMeshGroupV61 = [\"weights\", Utils.getArrayReader(this.ModelClothBoneWeightV61)];\n\n        this.ModelClothGroupBindingV61 = [\n          \"strippedToken\",\n          Utils.getQWordReader(),\n          \"boneName\",\n          Utils.getStringReader(),\n          \"OBBMin\",\n          [\"[]\", \"float32\", 3],\n          \"OBBMax\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.ModelClothSoftLockV61 = [\"weight\", \"uint8\", \"vertIndex\", \"uint16\"];\n\n        this.ModelClothConstraintV61 = [\n          \"distance\",\n          \"uint16\",\n          \"relationship\",\n          \"uint16\",\n          \"vertIndexA\",\n          \"uint16\",\n          \"vertIndexB\",\n          \"uint16\",\n        ];\n\n        this.ModelClothDataV61 = [\n          \"materialIndex\",\n          \"uint32\",\n          \"drag\",\n          \"float32\",\n          \"gravity\",\n          \"float32\",\n          \"compressibility\",\n          \"float32\",\n          \"slack\",\n          \"float32\",\n          \"stretchiness\",\n          \"float32\",\n          \"weight\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n          \"mesh\",\n          this.PackVertexType,\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"groups\",\n          Utils.getArrayReader(this.ModelClothMeshGroupV61),\n          \"groupBindings\",\n          Utils.getArrayReader(this.ModelClothGroupBindingV61),\n          \"softLocks\",\n          Utils.getArrayReader(this.ModelClothSoftLockV61),\n          \"lod0Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV61),\n          \"lod1Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV61),\n          \"lod1Indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"barycentricCoords\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"barycentricIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"obstacleIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"lockCount\",\n          \"uint16\",\n          \"lockedNormals\",\n          Utils.getArrayReader(\"uint32\"),\n          \"lockedTanegents\",\n          Utils.getArrayReader(\"uint32\"),\n          \"lockedBitangents\",\n          Utils.getArrayReader(\"uint32\"),\n          \"lod1VertexCount\",\n          \"uint16\",\n          \"flags\",\n          \"uint8\",\n          \"rigidness\",\n          \"uint8\",\n        ];\n\n        this.ModelEffectWindV61 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"farDistance\",\n          \"float32\",\n          \"intensity\",\n          \"float32\",\n          \"nearDistance\",\n          \"float32\",\n        ];\n\n        this.ModelWindDataV61 = [\"effectWind\", Utils.getArrayReader(this.ModelEffectWindV61)];\n\n        this.ModelLightningSystemV61 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"boltIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"flags\",\n          \"uint32\",\n          \"fvf\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelLightningBoltV61 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"nodeIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"colorBegin\",\n          [\"[]\", \"uint32\", 3],\n          \"colorEnd\",\n          [\"[]\", \"uint32\", 3],\n          \"colorPeriod\",\n          \"float32\",\n          \"colorFalloff\",\n          [\"[]\", \"float32\", 2],\n          \"flags\",\n          \"uint32\",\n          \"flipbook\",\n          Utils.getPointerReader(this.ModelParticleFlipbookV61),\n          \"fps\",\n          \"float32\",\n          \"frequency\",\n          \"float32\",\n          \"groupMax\",\n          \"uint32\",\n          \"groupMin\",\n          \"uint32\",\n          \"probability\",\n          \"float32\",\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"numSegments\",\n          \"uint16\",\n          \"opacity\",\n          [\"[]\", \"float32\", 2],\n          \"opacityPreset\",\n          \"uint8\",\n          \"texOffset\",\n          \"float32\",\n          \"texRange\",\n          [\"[]\", \"float32\", 2],\n          \"texScale\",\n          \"float32\",\n          \"texSpeed\",\n          \"float32\",\n          \"thicknessPreset\",\n          \"uint8\",\n          \"thicknessRange\",\n          [\"[]\", \"float32\", 2],\n          \"type\",\n          \"uint8\",\n          \"variance\",\n          \"float32\",\n          \"variancePreset\",\n          \"uint8\",\n          \"noise\",\n          \"float32\",\n        ];\n\n        this.ModelLightningNodeV61 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"childrenIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"flags\",\n          \"uint32\",\n          \"probability\",\n          \"float32\",\n          \"radius\",\n          [\"[]\", \"float32\", 2],\n          \"shape\",\n          \"uint8\",\n          \"updatePos\",\n          \"float32\",\n        ];\n\n        this.ModelLightningDataV61 = [\n          \"systems\",\n          Utils.getArrayReader(this.ModelLightningSystemV61),\n          \"bolts\",\n          Utils.getArrayReader(this.ModelLightningBoltV61),\n          \"nodes\",\n          Utils.getArrayReader(this.ModelLightningNodeV61),\n        ];\n\n        this.ModelBoneConstraintLinkV61 = [\n          \"angle\",\n          \"float32\",\n          \"azimuth\",\n          \"float32\",\n          \"distance\",\n          [\"[]\", \"float32\", 2],\n          \"token\",\n          Utils.getQWordReader(),\n        ];\n\n        this.ModelBoneConstraintV61 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint16\",\n          \"twistOffset\",\n          \"float32\",\n          \"animBlend\",\n          \"float32\",\n          \"drag\",\n          \"float32\",\n          \"ellipseRatio\",\n          \"float32\",\n          \"gravity\",\n          \"float32\",\n          \"collisionRadius\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n          \"angle\",\n          [\"[]\", \"float32\", 2],\n          \"angleStrength\",\n          \"float32\",\n          \"angleType\",\n          \"uint8\",\n          \"distanceInner\",\n          [\"[]\", \"float32\", 2],\n          \"distanceInnerStrength\",\n          \"float32\",\n          \"distanceInnerType\",\n          \"uint8\",\n          \"links\",\n          Utils.getArrayReader(this.ModelBoneConstraintLinkV61),\n          \"distanceOuter\",\n          [\"[]\", \"float32\", 2],\n          \"distanceOuterStrength\",\n          \"float32\",\n          \"distanceOuterType\",\n          \"uint8\",\n          \"twist\",\n          [\"[]\", \"float32\", 2],\n          \"twistStrength\",\n          \"float32\",\n          \"twistType\",\n          \"uint8\",\n        ];\n\n        this.ModelSoftBodyDataV61 = [\n          \"materialIndex\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"vertexFvf\",\n          \"uint32\",\n          \"vertBytes\",\n          Utils.getArrayReader(\"uint8\"),\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"bones\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.ModelBoneOffsetDataV61 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"translation\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 4],\n          \"boneInverseOffset\",\n          [\"[]\", [\"[]\", \"float32\", 4], 3],\n        ];\n\n        this.ModelFixedOffsetDataV61 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"parentBone\",\n          Utils.getQWordReader(),\n          \"translation\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.__root = this.ModelFileDataV61 = [\n          \"permutations\",\n          Utils.getArrayReader(this.ModelPermutationDataV61),\n          \"meshes\",\n          Utils.getRefArrayReader(this.ModelMeshDataV61),\n          \"model\",\n          Utils.getPointerReader(this.ModelModelDataV61),\n          \"properties\",\n          Utils.getArrayReader(this.ModelPropertyDataV61),\n          \"cloudData\",\n          Utils.getPointerReader(this.ModelCloudDataV61),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelObstacleDataV61),\n          \"streakData\",\n          Utils.getPointerReader(this.ModelStreakDataV61),\n          \"lightData\",\n          Utils.getPointerReader(this.ModelLightDataV61),\n          \"clothData\",\n          Utils.getArrayReader(this.ModelClothDataV61),\n          \"windData\",\n          Utils.getPointerReader(this.ModelWindDataV61),\n          \"actionOffsetNames\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"actionOffsets\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"lodOverride\",\n          [\"[]\", \"float32\", 2],\n          \"soundScript\",\n          Utils.getFileNameReader(),\n          \"lightningData\",\n          Utils.getPointerReader(this.ModelLightningDataV61),\n          \"boneConstraints\",\n          Utils.getArrayReader(this.ModelBoneConstraintV61),\n          \"softBodyData\",\n          Utils.getArrayReader(this.ModelSoftBodyDataV61),\n          \"boneOffsetData\",\n          Utils.getArrayReader(this.ModelBoneOffsetDataV61),\n          \"fixedOffsetData\",\n          Utils.getArrayReader(this.ModelFixedOffsetDataV61),\n          \"modelReference\",\n          Utils.getFileNameReader(),\n        ];\n      },\n\n      // => Version: 60, ReferencedFunction: 0xF2BE90\n      60: function () {\n        this.ModelTextureDataV60 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"textureFlags\",\n          \"uint32\",\n          \"token\",\n          Utils.getQWordReader(),\n          \"blitId\",\n          Utils.getQWordReader(),\n          \"uvAnimId\",\n          \"uint32\",\n          \"uvPSInputIndex\",\n          \"uint8\",\n        ];\n\n        this.ModelConstantDataV60 = [\"name\", \"uint32\", \"value\", [\"[]\", \"float32\", 4], \"constantFlags\", \"uint32\"];\n\n        this.ModelMatConstLinkV60 = [\"linkToken\", Utils.getQWordReader(), \"constantToken\", \"uint32\"];\n\n        this.ModelUVTransLinkV60 = [\"linkToken\", Utils.getQWordReader(), \"uvAnimId\", \"uint32\", \"type\", \"uint8\"];\n\n        this.ModelMaterialTexTransformV60 = [\n          \"random\",\n          \"uint8\",\n          \"uvIndex\",\n          \"uint8\",\n          \"columns\",\n          \"uint8\",\n          \"rows\",\n          \"uint8\",\n          \"count\",\n          \"uint16\",\n          \"fps\",\n          \"float32\",\n          \"scroll\",\n          [\"[]\", \"float32\", 2],\n        ];\n\n        this.ModelMaterialDataV60 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"materialId\",\n          \"uint32\",\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"materialFlags\",\n          \"uint32\",\n          \"sortOrder\",\n          \"uint32\",\n          \"textures\",\n          Utils.getArrayReader(this.ModelTextureDataV60),\n          \"constants\",\n          Utils.getArrayReader(this.ModelConstantDataV60),\n          \"matConstLinks\",\n          Utils.getArrayReader(this.ModelMatConstLinkV60),\n          \"uvTransLinks\",\n          Utils.getArrayReader(this.ModelUVTransLinkV60),\n          \"texTransforms\",\n          Utils.getArrayReader(this.ModelMaterialTexTransformV60),\n          \"texCoordCount\",\n          \"uint8\",\n        ];\n\n        this.ModelPermutationDataV60 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"materials\",\n          Utils.getRefArrayReader(this.ModelMaterialDataV60),\n        ];\n\n        this.ModelMeshLodDataV60 = [\"indices\", Utils.getArrayReader(\"uint16\")];\n\n        this.ModelMeshMorphVertV60 = [\"index\", \"uint16\", \"vector\", [\"[]\", \"float32\", 3]];\n\n        this.ModelMeshMorphTargetV60 = [\n          \"positions\",\n          Utils.getArrayReader(this.ModelMeshMorphVertV60),\n          \"normals\",\n          Utils.getArrayReader(this.ModelMeshMorphVertV60),\n          \"mesh\",\n          Utils.getQWordReader(),\n        ];\n\n        this.PackGrannyMeshType = [\"mesh\", Utils.getArrayReader(\"uint8\")];\n\n        this.GrBoundData = [\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"boxExtent\",\n          [\"[]\", \"float32\", 3],\n          \"sphereRadius\",\n          \"float32\",\n        ];\n\n        this.ModelMeshDataV60 = [\n          \"visBone\",\n          Utils.getQWordReader(),\n          \"lods\",\n          Utils.getArrayReader(this.ModelMeshLodDataV60),\n          \"morphTargets\",\n          Utils.getArrayReader(this.ModelMeshMorphTargetV60),\n          \"mesh\",\n          this.PackGrannyMeshType,\n          \"flags\",\n          \"uint32\",\n          \"seamVertIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"meshName\",\n          Utils.getQWordReader(),\n          \"minBound\",\n          [\"[]\", \"float32\", 3],\n          \"maxBound\",\n          [\"[]\", \"float32\", 3],\n          \"bounds\",\n          Utils.getArrayReader(this.GrBoundData),\n          \"materialIndex\",\n          \"uint32\",\n          \"materialName\",\n          Utils.getStringReader(),\n        ];\n\n        this.ModelTransformDataV60 = [\n          \"Flags\",\n          \"uint32\",\n          \"Position\",\n          [\"[]\", \"float32\", 3],\n          \"Orientation\",\n          [\"[]\", \"float32\", 4],\n          \"ScaleShear\",\n          [\"[]\", [\"[]\", \"float32\", 3], 3],\n        ];\n\n        this.ModelBoneDataV60 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"ParentIndex\",\n          \"uint32\",\n          \"LocalTransform\",\n          this.ModelTransformDataV60,\n          \"InverseWorld4x4\",\n          [\"[]\", [\"[]\", \"float32\", 4], 4],\n          \"LODError\",\n          \"float32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n        ];\n\n        this.ModelBoneSymmetryV60 = [\"boneLeft\", Utils.getQWordReader(), \"boneRight\", Utils.getQWordReader()];\n\n        this.ModelSkeletonDataV60 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Bones\",\n          Utils.getArrayReader(this.ModelBoneDataV60),\n          \"LODType\",\n          \"uint32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n          \"boneSymmetries\",\n          Utils.getArrayReader(this.ModelBoneSymmetryV60),\n        ];\n\n        this.ModelMeshBindingDataV60 = [\"Mesh\", Utils.getPointerReader(\"uint8\")];\n\n        this.PackGrannyTrackMaskType = [\"trackMask\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelTrackMaskV60 = [\"trackMask\", this.PackGrannyTrackMaskType, \"token\", Utils.getQWordReader()];\n\n        this.ModelModelDataV60 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Skeleton\",\n          Utils.getPointerReader(this.ModelSkeletonDataV60),\n          \"InitialPlacement\",\n          this.ModelTransformDataV60,\n          \"MeshBindings\",\n          Utils.getArrayReader(this.ModelMeshBindingDataV60),\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n          \"boneFlags\",\n          Utils.getArrayReader(\"uint32\"),\n          \"emitterBones\",\n          Utils.getArrayReader(\"uint32\"),\n          \"trackMasks\",\n          Utils.getArrayReader(this.ModelTrackMaskV60),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"radius\",\n          \"float32\",\n        ];\n\n        this.ModelPropertyDataV60 = [\n          \"id\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint32\",\n          \"mergeIndex\",\n          \"uint32\",\n          \"time\",\n          \"float32\",\n          \"val\",\n          Utils.getQWordReader(),\n          \"strVal\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.ModelParticleCloudV60 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"drag\",\n          \"float32\",\n          \"emitterIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"fvf\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"obstacleIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"velocity\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.ModelParticleCurveV60 = [\"curveType\", \"uint8\", \"keys\", Utils.getArrayReader([\"[]\", \"float32\", 2])];\n\n        this.ModelParticleFlipbookV60 = [\n          \"columns\",\n          \"uint8\",\n          \"count\",\n          \"uint8\",\n          \"fps\",\n          \"float32\",\n          \"rows\",\n          \"uint8\",\n          \"start\",\n          \"uint8\",\n        ];\n\n        this.ModelMatrix43V60 = [\"x\", [\"[]\", \"float32\", 4], \"y\", [\"[]\", \"float32\", 4], \"z\", [\"[]\", \"float32\", 4]];\n\n        this.ModelParticleEmitterV60 = [\n          \"acceleration\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"accelerationDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"accelerationDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"alignmentDir\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorBegin\",\n          [\"[]\", \"float32\", 4],\n          \"colorEnd\",\n          [\"[]\", \"float32\", 4],\n          \"colorPeriod\",\n          \"float32\",\n          \"colorFalloff\",\n          [\"[]\", \"float32\", 2],\n          \"drag\",\n          \"float32\",\n          \"emitterFlags\",\n          \"uint32\",\n          \"offset\",\n          \"float32\",\n          \"opacityCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV60),\n          \"opacityCurvePreset\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"flipbook\",\n          Utils.getPointerReader(this.ModelParticleFlipbookV60),\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"rotationChange\",\n          [\"[]\", \"float32\", 2],\n          \"rotationDrag\",\n          \"float32\",\n          \"rotationInitial\",\n          [\"[]\", \"float32\", 2],\n          \"scaleChange\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleInitial\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV60),\n          \"scaleCurvePreset\",\n          \"uint32\",\n          \"velocity\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"velocityDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"velocityDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"velocityInherit\",\n          [\"[]\", \"float32\", 2],\n          \"spawnGroupSize\",\n          [\"[]\", \"float32\", 2],\n          \"spawnPeriod\",\n          \"float32\",\n          \"spawnProbability\",\n          \"float32\",\n          \"spawnRadius\",\n          [\"[]\", \"float32\", 2],\n          \"spawnWindEmit\",\n          [\"[]\", \"float32\", 2],\n          \"spawnWindSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"texCoordRect\",\n          [\"[]\", \"float32\", 4],\n          \"transform\",\n          Utils.getPointerReader(this.ModelMatrix43V60),\n          \"windInfluence\",\n          \"uint8\",\n          \"alignmentType\",\n          \"uint8\",\n          \"spawnShape\",\n          \"uint8\",\n        ];\n\n        this.ModelCloudDataV60 = [\n          \"clouds\",\n          Utils.getArrayReader(this.ModelParticleCloudV60),\n          \"emitters\",\n          Utils.getArrayReader(this.ModelParticleEmitterV60),\n        ];\n\n        this.ModelObstacleDataV60 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint8\",\n          \"response\",\n          \"uint8\",\n          \"flags\",\n          \"uint32\",\n          \"dragCoef\",\n          \"float32\",\n          \"gravityCoef\",\n          \"float32\",\n          \"length\",\n          \"float32\",\n          \"width\",\n          \"float32\",\n          \"height\",\n          \"float32\",\n          \"radius\",\n          \"float32\",\n          \"transform\",\n          Utils.getPointerReader(this.ModelMatrix43V60),\n        ];\n\n        this.ModelStreakV60 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"velocity\",\n          [\"[]\", \"float32\", 3],\n          \"anchorIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"bone\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"jitter\",\n          \"float32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"noise\",\n          \"float32\",\n          \"spawnDist\",\n          \"float32\",\n          \"texScale\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n        ];\n\n        this.ModelStreakAnchorV60 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorStart\",\n          \"uint32\",\n          \"colorEnd\",\n          \"uint32\",\n          \"falloff\",\n          \"float32\",\n          \"lifetime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"texV\",\n          \"float32\",\n        ];\n\n        this.ModelStreakDataV60 = [\n          \"streaks\",\n          Utils.getArrayReader(this.ModelStreakV60),\n          \"anchors\",\n          Utils.getArrayReader(this.ModelStreakAnchorV60),\n        ];\n\n        this.ModelEffectLightV60 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"farDistance\",\n          \"float32\",\n          \"intensity\",\n          \"float32\",\n          \"nearDistance\",\n          \"float32\",\n        ];\n\n        this.ModelLightDataV60 = [\"effectLights\", Utils.getArrayReader(this.ModelEffectLightV60)];\n\n        this.PackVertexType = [\"fvf\", \"uint32\", \"vertices\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelClothBoneWeightV60 = [\"token\", Utils.getQWordReader(), \"weight\", \"uint8\"];\n\n        this.ModelClothMeshGroupV60 = [\"weights\", Utils.getArrayReader(this.ModelClothBoneWeightV60)];\n\n        this.ModelClothGroupBindingV60 = [\n          \"strippedToken\",\n          Utils.getQWordReader(),\n          \"boneName\",\n          Utils.getStringReader(),\n          \"OBBMin\",\n          [\"[]\", \"float32\", 3],\n          \"OBBMax\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.ModelClothSoftLockV60 = [\"weight\", \"uint8\", \"vertIndex\", \"uint16\"];\n\n        this.ModelClothConstraintV60 = [\n          \"distance\",\n          \"uint16\",\n          \"relationship\",\n          \"uint16\",\n          \"vertIndexA\",\n          \"uint16\",\n          \"vertIndexB\",\n          \"uint16\",\n        ];\n\n        this.ModelClothDataV60 = [\n          \"materialIndex\",\n          \"uint32\",\n          \"drag\",\n          \"float32\",\n          \"gravity\",\n          \"float32\",\n          \"compressibility\",\n          \"float32\",\n          \"slack\",\n          \"float32\",\n          \"stretchiness\",\n          \"float32\",\n          \"weight\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n          \"mesh\",\n          this.PackVertexType,\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"groups\",\n          Utils.getArrayReader(this.ModelClothMeshGroupV60),\n          \"groupBindings\",\n          Utils.getArrayReader(this.ModelClothGroupBindingV60),\n          \"softLocks\",\n          Utils.getArrayReader(this.ModelClothSoftLockV60),\n          \"lod0Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV60),\n          \"lod1Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV60),\n          \"lod1Indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"barycentricCoords\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"barycentricIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"obstacleIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"lockCount\",\n          \"uint16\",\n          \"lockedNormals\",\n          Utils.getArrayReader(\"uint32\"),\n          \"lockedTanegents\",\n          Utils.getArrayReader(\"uint32\"),\n          \"lockedBitangents\",\n          Utils.getArrayReader(\"uint32\"),\n          \"lod1VertexCount\",\n          \"uint16\",\n          \"flags\",\n          \"uint8\",\n          \"rigidness\",\n          \"uint8\",\n        ];\n\n        this.ModelLightningSystemV60 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"boltIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"flags\",\n          \"uint32\",\n          \"fvf\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelLightningBoltV60 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"nodeIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"colorBegin\",\n          [\"[]\", \"uint32\", 3],\n          \"colorEnd\",\n          [\"[]\", \"uint32\", 3],\n          \"colorPeriod\",\n          \"float32\",\n          \"colorFalloff\",\n          [\"[]\", \"float32\", 2],\n          \"flags\",\n          \"uint32\",\n          \"flipbook\",\n          Utils.getPointerReader(this.ModelParticleFlipbookV60),\n          \"fps\",\n          \"float32\",\n          \"frequency\",\n          \"float32\",\n          \"groupMax\",\n          \"uint32\",\n          \"groupMin\",\n          \"uint32\",\n          \"probability\",\n          \"float32\",\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"numSegments\",\n          \"uint16\",\n          \"opacity\",\n          [\"[]\", \"float32\", 2],\n          \"opacityPreset\",\n          \"uint8\",\n          \"texOffset\",\n          \"float32\",\n          \"texRange\",\n          [\"[]\", \"float32\", 2],\n          \"texScale\",\n          \"float32\",\n          \"texSpeed\",\n          \"float32\",\n          \"thicknessPreset\",\n          \"uint8\",\n          \"thicknessRange\",\n          [\"[]\", \"float32\", 2],\n          \"type\",\n          \"uint8\",\n          \"variance\",\n          \"float32\",\n          \"variancePreset\",\n          \"uint8\",\n          \"noise\",\n          \"float32\",\n        ];\n\n        this.ModelLightningNodeV60 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"childrenIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"flags\",\n          \"uint32\",\n          \"probability\",\n          \"float32\",\n          \"radius\",\n          [\"[]\", \"float32\", 2],\n          \"shape\",\n          \"uint8\",\n          \"updatePos\",\n          \"float32\",\n        ];\n\n        this.ModelLightningDataV60 = [\n          \"systems\",\n          Utils.getArrayReader(this.ModelLightningSystemV60),\n          \"bolts\",\n          Utils.getArrayReader(this.ModelLightningBoltV60),\n          \"nodes\",\n          Utils.getArrayReader(this.ModelLightningNodeV60),\n        ];\n\n        this.ModelBoneConstraintLinkV60 = [\n          \"angle\",\n          \"float32\",\n          \"azimuth\",\n          \"float32\",\n          \"distance\",\n          [\"[]\", \"float32\", 2],\n          \"token\",\n          Utils.getQWordReader(),\n        ];\n\n        this.ModelBoneConstraintV60 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint16\",\n          \"twistOffset\",\n          \"float32\",\n          \"animBlend\",\n          \"float32\",\n          \"drag\",\n          \"float32\",\n          \"ellipseRatio\",\n          \"float32\",\n          \"gravity\",\n          \"float32\",\n          \"collisionRadius\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n          \"angle\",\n          [\"[]\", \"float32\", 2],\n          \"angleStrength\",\n          \"float32\",\n          \"angleType\",\n          \"uint8\",\n          \"distanceInner\",\n          [\"[]\", \"float32\", 2],\n          \"distanceInnerStrength\",\n          \"float32\",\n          \"distanceInnerType\",\n          \"uint8\",\n          \"links\",\n          Utils.getArrayReader(this.ModelBoneConstraintLinkV60),\n          \"distanceOuter\",\n          [\"[]\", \"float32\", 2],\n          \"distanceOuterStrength\",\n          \"float32\",\n          \"distanceOuterType\",\n          \"uint8\",\n          \"twist\",\n          [\"[]\", \"float32\", 2],\n          \"twistStrength\",\n          \"float32\",\n          \"twistType\",\n          \"uint8\",\n        ];\n\n        this.ModelSoftBodyDataV60 = [\n          \"materialIndex\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"vertexFvf\",\n          \"uint32\",\n          \"vertBytes\",\n          Utils.getArrayReader(\"uint8\"),\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"bones\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.ModelBoneOffsetDataV60 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"translation\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 4],\n          \"boneInverseOffset\",\n          [\"[]\", [\"[]\", \"float32\", 4], 3],\n        ];\n\n        this.ModelFixedOffsetDataV60 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"parentBone\",\n          Utils.getQWordReader(),\n          \"translation\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.__root = this.ModelFileDataV60 = [\n          \"permutations\",\n          Utils.getArrayReader(this.ModelPermutationDataV60),\n          \"meshes\",\n          Utils.getRefArrayReader(this.ModelMeshDataV60),\n          \"model\",\n          Utils.getPointerReader(this.ModelModelDataV60),\n          \"properties\",\n          Utils.getArrayReader(this.ModelPropertyDataV60),\n          \"cloudData\",\n          Utils.getPointerReader(this.ModelCloudDataV60),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelObstacleDataV60),\n          \"streakData\",\n          Utils.getPointerReader(this.ModelStreakDataV60),\n          \"lightData\",\n          Utils.getPointerReader(this.ModelLightDataV60),\n          \"clothData\",\n          Utils.getArrayReader(this.ModelClothDataV60),\n          \"actionOffsetNames\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"actionOffsets\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"lodOverride\",\n          [\"[]\", \"float32\", 2],\n          \"soundScript\",\n          Utils.getFileNameReader(),\n          \"lightningData\",\n          Utils.getPointerReader(this.ModelLightningDataV60),\n          \"boneConstraints\",\n          Utils.getArrayReader(this.ModelBoneConstraintV60),\n          \"softBodyData\",\n          Utils.getArrayReader(this.ModelSoftBodyDataV60),\n          \"boneOffsetData\",\n          Utils.getArrayReader(this.ModelBoneOffsetDataV60),\n          \"fixedOffsetData\",\n          Utils.getArrayReader(this.ModelFixedOffsetDataV60),\n          \"modelReference\",\n          Utils.getFileNameReader(),\n        ];\n      },\n\n      // => Version: 59, ReferencedFunction: 0xF2BE40\n      59: function () {\n        this.ModelTextureDataV59 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"textureFlags\",\n          \"uint32\",\n          \"token\",\n          Utils.getQWordReader(),\n          \"blitId\",\n          Utils.getQWordReader(),\n          \"uvAnimId\",\n          \"uint32\",\n          \"uvPSInputIndex\",\n          \"uint8\",\n        ];\n\n        this.ModelConstantDataV59 = [\"name\", \"uint32\", \"value\", [\"[]\", \"float32\", 4], \"constantFlags\", \"uint32\"];\n\n        this.ModelMatConstLinkV59 = [\"linkToken\", Utils.getQWordReader(), \"constantToken\", \"uint32\"];\n\n        this.ModelUVTransLinkV59 = [\"linkToken\", Utils.getQWordReader(), \"uvAnimId\", \"uint32\", \"type\", \"uint8\"];\n\n        this.ModelMaterialTexTransformV59 = [\n          \"random\",\n          \"uint8\",\n          \"uvIndex\",\n          \"uint8\",\n          \"columns\",\n          \"uint8\",\n          \"rows\",\n          \"uint8\",\n          \"count\",\n          \"uint16\",\n          \"fps\",\n          \"float32\",\n          \"scroll\",\n          [\"[]\", \"float32\", 2],\n        ];\n\n        this.ModelMaterialDataV59 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"materialId\",\n          \"uint32\",\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"materialFlags\",\n          \"uint32\",\n          \"sortOrder\",\n          \"uint32\",\n          \"textures\",\n          Utils.getArrayReader(this.ModelTextureDataV59),\n          \"constants\",\n          Utils.getArrayReader(this.ModelConstantDataV59),\n          \"matConstLinks\",\n          Utils.getArrayReader(this.ModelMatConstLinkV59),\n          \"uvTransLinks\",\n          Utils.getArrayReader(this.ModelUVTransLinkV59),\n          \"texTransforms\",\n          Utils.getArrayReader(this.ModelMaterialTexTransformV59),\n          \"texCoordCount\",\n          \"uint8\",\n        ];\n\n        this.ModelPermutationDataV59 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"materials\",\n          Utils.getRefArrayReader(this.ModelMaterialDataV59),\n        ];\n\n        this.ModelMeshLodDataV59 = [\"indices\", Utils.getArrayReader(\"uint16\")];\n\n        this.ModelMeshMorphVertV59 = [\"index\", \"uint16\", \"vector\", [\"[]\", \"float32\", 3]];\n\n        this.ModelMeshMorphTargetV59 = [\n          \"positions\",\n          Utils.getArrayReader(this.ModelMeshMorphVertV59),\n          \"normals\",\n          Utils.getArrayReader(this.ModelMeshMorphVertV59),\n          \"mesh\",\n          Utils.getQWordReader(),\n        ];\n\n        this.PackGrannyMeshType = [\"mesh\", Utils.getArrayReader(\"uint8\")];\n\n        this.GrBoundData = [\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"boxExtent\",\n          [\"[]\", \"float32\", 3],\n          \"sphereRadius\",\n          \"float32\",\n        ];\n\n        this.ModelMeshDataV59 = [\n          \"visBone\",\n          Utils.getQWordReader(),\n          \"lods\",\n          Utils.getArrayReader(this.ModelMeshLodDataV59),\n          \"morphTargets\",\n          Utils.getArrayReader(this.ModelMeshMorphTargetV59),\n          \"mesh\",\n          this.PackGrannyMeshType,\n          \"flags\",\n          \"uint32\",\n          \"seamVertIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"meshName\",\n          Utils.getQWordReader(),\n          \"minBound\",\n          [\"[]\", \"float32\", 3],\n          \"maxBound\",\n          [\"[]\", \"float32\", 3],\n          \"bounds\",\n          Utils.getArrayReader(this.GrBoundData),\n          \"materialIndex\",\n          \"uint32\",\n          \"materialName\",\n          Utils.getStringReader(),\n        ];\n\n        this.ModelTransformDataV59 = [\n          \"Flags\",\n          \"uint32\",\n          \"Position\",\n          [\"[]\", \"float32\", 3],\n          \"Orientation\",\n          [\"[]\", \"float32\", 4],\n          \"ScaleShear\",\n          [\"[]\", [\"[]\", \"float32\", 3], 3],\n        ];\n\n        this.ModelBoneDataV59 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"ParentIndex\",\n          \"uint32\",\n          \"LocalTransform\",\n          this.ModelTransformDataV59,\n          \"InverseWorld4x4\",\n          [\"[]\", [\"[]\", \"float32\", 4], 4],\n          \"LODError\",\n          \"float32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n        ];\n\n        this.ModelBoneSymmetryV59 = [\"boneLeft\", Utils.getQWordReader(), \"boneRight\", Utils.getQWordReader()];\n\n        this.ModelSkeletonDataV59 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Bones\",\n          Utils.getArrayReader(this.ModelBoneDataV59),\n          \"LODType\",\n          \"uint32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n          \"boneSymmetries\",\n          Utils.getArrayReader(this.ModelBoneSymmetryV59),\n        ];\n\n        this.ModelMeshBindingDataV59 = [\"Mesh\", Utils.getPointerReader(\"uint8\")];\n\n        this.PackGrannyTrackMaskType = [\"trackMask\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelTrackMaskV59 = [\"trackMask\", this.PackGrannyTrackMaskType, \"token\", Utils.getQWordReader()];\n\n        this.ModelModelDataV59 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Skeleton\",\n          Utils.getPointerReader(this.ModelSkeletonDataV59),\n          \"InitialPlacement\",\n          this.ModelTransformDataV59,\n          \"MeshBindings\",\n          Utils.getArrayReader(this.ModelMeshBindingDataV59),\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n          \"boneFlags\",\n          Utils.getArrayReader(\"uint32\"),\n          \"emitterBones\",\n          Utils.getArrayReader(\"uint32\"),\n          \"trackMasks\",\n          Utils.getArrayReader(this.ModelTrackMaskV59),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"radius\",\n          \"float32\",\n        ];\n\n        this.ModelPropertyDataV59 = [\n          \"id\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint32\",\n          \"mergeIndex\",\n          \"uint32\",\n          \"time\",\n          \"float32\",\n          \"val\",\n          Utils.getQWordReader(),\n          \"strVal\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.ModelParticleCloudV59 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"drag\",\n          \"float32\",\n          \"emitterIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"fvf\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"obstacleIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"velocity\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.ModelParticleCurveV59 = [\"curveType\", \"uint8\", \"keys\", Utils.getArrayReader([\"[]\", \"float32\", 2])];\n\n        this.ModelParticleFlipbookV59 = [\n          \"columns\",\n          \"uint8\",\n          \"count\",\n          \"uint8\",\n          \"fps\",\n          \"float32\",\n          \"rows\",\n          \"uint8\",\n          \"start\",\n          \"uint8\",\n        ];\n\n        this.ModelMatrix43V59 = [\"x\", [\"[]\", \"float32\", 4], \"y\", [\"[]\", \"float32\", 4], \"z\", [\"[]\", \"float32\", 4]];\n\n        this.ModelParticleEmitterV59 = [\n          \"acceleration\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"accelerationDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"accelerationDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"alignmentDir\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorBegin\",\n          [\"[]\", \"float32\", 4],\n          \"colorEnd\",\n          [\"[]\", \"float32\", 4],\n          \"colorPeriod\",\n          \"float32\",\n          \"colorFalloff\",\n          [\"[]\", \"float32\", 2],\n          \"drag\",\n          \"float32\",\n          \"emitterFlags\",\n          \"uint32\",\n          \"offset\",\n          \"float32\",\n          \"opacityCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV59),\n          \"opacityCurvePreset\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"flipbook\",\n          Utils.getPointerReader(this.ModelParticleFlipbookV59),\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"rotationChange\",\n          [\"[]\", \"float32\", 2],\n          \"rotationDrag\",\n          \"float32\",\n          \"rotationInitial\",\n          [\"[]\", \"float32\", 2],\n          \"scaleChange\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleInitial\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV59),\n          \"scaleCurvePreset\",\n          \"uint32\",\n          \"velocity\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"velocityDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"velocityDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"velocityInherit\",\n          [\"[]\", \"float32\", 2],\n          \"spawnGroupSize\",\n          [\"[]\", \"float32\", 2],\n          \"spawnPeriod\",\n          \"float32\",\n          \"spawnProbability\",\n          \"float32\",\n          \"spawnRadius\",\n          [\"[]\", \"float32\", 2],\n          \"spawnWindEmit\",\n          [\"[]\", \"float32\", 2],\n          \"spawnWindSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"texCoordRect\",\n          [\"[]\", \"float32\", 4],\n          \"transform\",\n          Utils.getPointerReader(this.ModelMatrix43V59),\n          \"windInfluence\",\n          \"uint8\",\n          \"alignmentType\",\n          \"uint8\",\n          \"spawnShape\",\n          \"uint8\",\n        ];\n\n        this.ModelCloudDataV59 = [\n          \"clouds\",\n          Utils.getArrayReader(this.ModelParticleCloudV59),\n          \"emitters\",\n          Utils.getArrayReader(this.ModelParticleEmitterV59),\n        ];\n\n        this.ModelObstacleDataV59 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint8\",\n          \"response\",\n          \"uint8\",\n          \"flags\",\n          \"uint32\",\n          \"dragCoef\",\n          \"float32\",\n          \"gravityCoef\",\n          \"float32\",\n          \"length\",\n          \"float32\",\n          \"width\",\n          \"float32\",\n          \"height\",\n          \"float32\",\n          \"radius\",\n          \"float32\",\n          \"transform\",\n          Utils.getPointerReader(this.ModelMatrix43V59),\n        ];\n\n        this.ModelStreakV59 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"velocity\",\n          [\"[]\", \"float32\", 3],\n          \"anchorIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"bone\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"jitter\",\n          \"float32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"noise\",\n          \"float32\",\n          \"spawnDist\",\n          \"float32\",\n          \"texScale\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n        ];\n\n        this.ModelStreakAnchorV59 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorStart\",\n          \"uint32\",\n          \"colorEnd\",\n          \"uint32\",\n          \"falloff\",\n          \"float32\",\n          \"lifetime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"texV\",\n          \"float32\",\n        ];\n\n        this.ModelStreakDataV59 = [\n          \"streaks\",\n          Utils.getArrayReader(this.ModelStreakV59),\n          \"anchors\",\n          Utils.getArrayReader(this.ModelStreakAnchorV59),\n        ];\n\n        this.ModelEffectLightV59 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"farDistance\",\n          \"float32\",\n          \"intensity\",\n          \"float32\",\n          \"nearDistance\",\n          \"float32\",\n        ];\n\n        this.ModelLightDataV59 = [\"effectLights\", Utils.getArrayReader(this.ModelEffectLightV59)];\n\n        this.PackVertexType = [\"fvf\", \"uint32\", \"vertices\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelClothBoneWeightV59 = [\"token\", Utils.getQWordReader(), \"weight\", \"uint8\"];\n\n        this.ModelClothMeshGroupV59 = [\"weights\", Utils.getArrayReader(this.ModelClothBoneWeightV59)];\n\n        this.ModelClothSoftLockV59 = [\"weight\", \"uint8\", \"vertIndex\", \"uint16\"];\n\n        this.ModelClothConstraintV59 = [\n          \"distance\",\n          \"uint16\",\n          \"relationship\",\n          \"uint16\",\n          \"vertIndexA\",\n          \"uint16\",\n          \"vertIndexB\",\n          \"uint16\",\n        ];\n\n        this.ModelClothDataV59 = [\n          \"materialIndex\",\n          \"uint32\",\n          \"drag\",\n          \"float32\",\n          \"gravity\",\n          \"float32\",\n          \"compressibility\",\n          \"float32\",\n          \"slack\",\n          \"float32\",\n          \"stretchiness\",\n          \"float32\",\n          \"weight\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n          \"mesh\",\n          this.PackVertexType,\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"groups\",\n          Utils.getArrayReader(this.ModelClothMeshGroupV59),\n          \"softLocks\",\n          Utils.getArrayReader(this.ModelClothSoftLockV59),\n          \"lod0Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV59),\n          \"lod1Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV59),\n          \"lod1Indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"barycentricCoords\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"barycentricIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"obstacleIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"lockCount\",\n          \"uint16\",\n          \"lockedNormals\",\n          Utils.getArrayReader(\"uint32\"),\n          \"lockedTanegents\",\n          Utils.getArrayReader(\"uint32\"),\n          \"lockedBitangents\",\n          Utils.getArrayReader(\"uint32\"),\n          \"lod1VertexCount\",\n          \"uint16\",\n          \"flags\",\n          \"uint8\",\n          \"rigidness\",\n          \"uint8\",\n        ];\n\n        this.ModelLightningSystemV59 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"boltIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"flags\",\n          \"uint32\",\n          \"fvf\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelLightningBoltV59 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"nodeIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"colorBegin\",\n          [\"[]\", \"uint32\", 3],\n          \"colorEnd\",\n          [\"[]\", \"uint32\", 3],\n          \"colorPeriod\",\n          \"float32\",\n          \"colorFalloff\",\n          [\"[]\", \"float32\", 2],\n          \"flags\",\n          \"uint32\",\n          \"flipbook\",\n          Utils.getPointerReader(this.ModelParticleFlipbookV59),\n          \"fps\",\n          \"float32\",\n          \"frequency\",\n          \"float32\",\n          \"groupMax\",\n          \"uint32\",\n          \"groupMin\",\n          \"uint32\",\n          \"probability\",\n          \"float32\",\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"numSegments\",\n          \"uint16\",\n          \"opacity\",\n          [\"[]\", \"float32\", 2],\n          \"opacityPreset\",\n          \"uint8\",\n          \"texOffset\",\n          \"float32\",\n          \"texRange\",\n          [\"[]\", \"float32\", 2],\n          \"texScale\",\n          \"float32\",\n          \"texSpeed\",\n          \"float32\",\n          \"thicknessPreset\",\n          \"uint8\",\n          \"thicknessRange\",\n          [\"[]\", \"float32\", 2],\n          \"type\",\n          \"uint8\",\n          \"variance\",\n          \"float32\",\n          \"variancePreset\",\n          \"uint8\",\n          \"noise\",\n          \"float32\",\n        ];\n\n        this.ModelLightningNodeV59 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"childrenIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"flags\",\n          \"uint32\",\n          \"probability\",\n          \"float32\",\n          \"radius\",\n          [\"[]\", \"float32\", 2],\n          \"shape\",\n          \"uint8\",\n          \"updatePos\",\n          \"float32\",\n        ];\n\n        this.ModelLightningDataV59 = [\n          \"systems\",\n          Utils.getArrayReader(this.ModelLightningSystemV59),\n          \"bolts\",\n          Utils.getArrayReader(this.ModelLightningBoltV59),\n          \"nodes\",\n          Utils.getArrayReader(this.ModelLightningNodeV59),\n        ];\n\n        this.ModelBoneConstraintLinkV59 = [\n          \"angle\",\n          \"float32\",\n          \"azimuth\",\n          \"float32\",\n          \"distance\",\n          [\"[]\", \"float32\", 2],\n          \"token\",\n          Utils.getQWordReader(),\n        ];\n\n        this.ModelBoneConstraintV59 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint16\",\n          \"twistOffset\",\n          \"float32\",\n          \"animBlend\",\n          \"float32\",\n          \"drag\",\n          \"float32\",\n          \"ellipseRatio\",\n          \"float32\",\n          \"gravity\",\n          \"float32\",\n          \"collisionRadius\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n          \"angle\",\n          [\"[]\", \"float32\", 2],\n          \"angleStrength\",\n          \"float32\",\n          \"angleType\",\n          \"uint8\",\n          \"distanceInner\",\n          [\"[]\", \"float32\", 2],\n          \"distanceInnerStrength\",\n          \"float32\",\n          \"distanceInnerType\",\n          \"uint8\",\n          \"links\",\n          Utils.getArrayReader(this.ModelBoneConstraintLinkV59),\n          \"distanceOuter\",\n          [\"[]\", \"float32\", 2],\n          \"distanceOuterStrength\",\n          \"float32\",\n          \"distanceOuterType\",\n          \"uint8\",\n          \"twist\",\n          [\"[]\", \"float32\", 2],\n          \"twistStrength\",\n          \"float32\",\n          \"twistType\",\n          \"uint8\",\n        ];\n\n        this.ModelSoftBodyDataV59 = [\n          \"materialIndex\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"vertexFvf\",\n          \"uint32\",\n          \"vertBytes\",\n          Utils.getArrayReader(\"uint8\"),\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"bones\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.ModelBoneOffsetDataV59 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"translation\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 4],\n          \"boneInverseOffset\",\n          [\"[]\", [\"[]\", \"float32\", 4], 3],\n        ];\n\n        this.ModelFixedOffsetDataV59 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"parentBone\",\n          Utils.getQWordReader(),\n          \"translation\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.__root = this.ModelFileDataV59 = [\n          \"permutations\",\n          Utils.getArrayReader(this.ModelPermutationDataV59),\n          \"meshes\",\n          Utils.getRefArrayReader(this.ModelMeshDataV59),\n          \"model\",\n          Utils.getPointerReader(this.ModelModelDataV59),\n          \"properties\",\n          Utils.getArrayReader(this.ModelPropertyDataV59),\n          \"cloudData\",\n          Utils.getPointerReader(this.ModelCloudDataV59),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelObstacleDataV59),\n          \"streakData\",\n          Utils.getPointerReader(this.ModelStreakDataV59),\n          \"lightData\",\n          Utils.getPointerReader(this.ModelLightDataV59),\n          \"clothData\",\n          Utils.getArrayReader(this.ModelClothDataV59),\n          \"actionOffsetNames\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"actionOffsets\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"lodOverride\",\n          [\"[]\", \"float32\", 2],\n          \"soundScript\",\n          Utils.getFileNameReader(),\n          \"lightningData\",\n          Utils.getPointerReader(this.ModelLightningDataV59),\n          \"boneConstraints\",\n          Utils.getArrayReader(this.ModelBoneConstraintV59),\n          \"softBodyData\",\n          Utils.getArrayReader(this.ModelSoftBodyDataV59),\n          \"boneOffsetData\",\n          Utils.getArrayReader(this.ModelBoneOffsetDataV59),\n          \"fixedOffsetData\",\n          Utils.getArrayReader(this.ModelFixedOffsetDataV59),\n          \"modelReference\",\n          Utils.getFileNameReader(),\n        ];\n      },\n\n      // => Version: 58, ReferencedFunction: 0xF2BD50\n      58: function () {\n        this.ModelTextureDataV58 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"textureFlags\",\n          \"uint32\",\n          \"token\",\n          Utils.getQWordReader(),\n          \"blitId\",\n          Utils.getQWordReader(),\n          \"uvAnimId\",\n          \"uint32\",\n          \"uvPSInputIndex\",\n          \"uint8\",\n        ];\n\n        this.ModelConstantDataV58 = [\"name\", \"uint32\", \"value\", [\"[]\", \"float32\", 4], \"constantFlags\", \"uint32\"];\n\n        this.ModelMatConstLinkV58 = [\"linkToken\", Utils.getQWordReader(), \"constantToken\", \"uint32\"];\n\n        this.ModelUVTransLinkV58 = [\"linkToken\", Utils.getQWordReader(), \"uvAnimId\", \"uint32\", \"type\", \"uint8\"];\n\n        this.ModelMaterialTexTransformV58 = [\n          \"random\",\n          \"uint8\",\n          \"uvIndex\",\n          \"uint8\",\n          \"columns\",\n          \"uint8\",\n          \"rows\",\n          \"uint8\",\n          \"count\",\n          \"uint16\",\n          \"fps\",\n          \"float32\",\n          \"scroll\",\n          [\"[]\", \"float32\", 2],\n        ];\n\n        this.ModelMaterialDataV58 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"materialId\",\n          \"uint32\",\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"materialFlags\",\n          \"uint32\",\n          \"sortOrder\",\n          \"uint32\",\n          \"textures\",\n          Utils.getArrayReader(this.ModelTextureDataV58),\n          \"constants\",\n          Utils.getArrayReader(this.ModelConstantDataV58),\n          \"matConstLinks\",\n          Utils.getArrayReader(this.ModelMatConstLinkV58),\n          \"uvTransLinks\",\n          Utils.getArrayReader(this.ModelUVTransLinkV58),\n          \"texTransforms\",\n          Utils.getArrayReader(this.ModelMaterialTexTransformV58),\n          \"texCoordCount\",\n          \"uint8\",\n        ];\n\n        this.ModelPermutationDataV58 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"materials\",\n          Utils.getRefArrayReader(this.ModelMaterialDataV58),\n        ];\n\n        this.ModelMeshLodDataV58 = [\"indices\", Utils.getArrayReader(\"uint16\")];\n\n        this.ModelMeshMorphVertV58 = [\"index\", \"uint16\", \"vector\", [\"[]\", \"float32\", 3]];\n\n        this.ModelMeshMorphTargetV58 = [\n          \"positions\",\n          Utils.getArrayReader(this.ModelMeshMorphVertV58),\n          \"normals\",\n          Utils.getArrayReader(this.ModelMeshMorphVertV58),\n          \"mesh\",\n          Utils.getQWordReader(),\n        ];\n\n        this.PackGrannyMeshType = [\"mesh\", Utils.getArrayReader(\"uint8\")];\n\n        this.GrBoundData = [\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"boxExtent\",\n          [\"[]\", \"float32\", 3],\n          \"sphereRadius\",\n          \"float32\",\n        ];\n\n        this.ModelMeshDataV58 = [\n          \"visBone\",\n          Utils.getQWordReader(),\n          \"lods\",\n          Utils.getArrayReader(this.ModelMeshLodDataV58),\n          \"morphTargets\",\n          Utils.getArrayReader(this.ModelMeshMorphTargetV58),\n          \"mesh\",\n          this.PackGrannyMeshType,\n          \"flags\",\n          \"uint32\",\n          \"seamVertIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"meshName\",\n          Utils.getQWordReader(),\n          \"minBound\",\n          [\"[]\", \"float32\", 3],\n          \"maxBound\",\n          [\"[]\", \"float32\", 3],\n          \"bounds\",\n          Utils.getArrayReader(this.GrBoundData),\n          \"materialIndex\",\n          \"uint32\",\n          \"materialName\",\n          Utils.getStringReader(),\n        ];\n\n        this.ModelTransformDataV58 = [\n          \"Flags\",\n          \"uint32\",\n          \"Position\",\n          [\"[]\", \"float32\", 3],\n          \"Orientation\",\n          [\"[]\", \"float32\", 4],\n          \"ScaleShear\",\n          [\"[]\", [\"[]\", \"float32\", 3], 3],\n        ];\n\n        this.ModelBoneDataV58 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"ParentIndex\",\n          \"uint32\",\n          \"LocalTransform\",\n          this.ModelTransformDataV58,\n          \"InverseWorld4x4\",\n          [\"[]\", [\"[]\", \"float32\", 4], 4],\n          \"LODError\",\n          \"float32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n        ];\n\n        this.ModelBoneSymmetryV58 = [\"boneLeft\", Utils.getQWordReader(), \"boneRight\", Utils.getQWordReader()];\n\n        this.ModelSkeletonDataV58 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Bones\",\n          Utils.getArrayReader(this.ModelBoneDataV58),\n          \"LODType\",\n          \"uint32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n          \"boneSymmetries\",\n          Utils.getArrayReader(this.ModelBoneSymmetryV58),\n        ];\n\n        this.ModelMeshBindingDataV58 = [\"Mesh\", Utils.getPointerReader(\"uint8\")];\n\n        this.PackGrannyTrackMaskType = [\"trackMask\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelTrackMaskV58 = [\"trackMask\", this.PackGrannyTrackMaskType, \"token\", Utils.getQWordReader()];\n\n        this.ModelModelDataV58 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Skeleton\",\n          Utils.getPointerReader(this.ModelSkeletonDataV58),\n          \"InitialPlacement\",\n          this.ModelTransformDataV58,\n          \"MeshBindings\",\n          Utils.getArrayReader(this.ModelMeshBindingDataV58),\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n          \"boneFlags\",\n          Utils.getArrayReader(\"uint32\"),\n          \"emitterBones\",\n          Utils.getArrayReader(\"uint32\"),\n          \"trackMasks\",\n          Utils.getArrayReader(this.ModelTrackMaskV58),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"radius\",\n          \"float32\",\n        ];\n\n        this.ModelPropertyDataV58 = [\n          \"id\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint32\",\n          \"mergeIndex\",\n          \"uint32\",\n          \"time\",\n          \"float32\",\n          \"val\",\n          Utils.getQWordReader(),\n          \"strVal\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.ModelParticleCloudV58 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"drag\",\n          \"float32\",\n          \"emitterIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"fvf\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"obstacleIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"velocity\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.ModelParticleCurveV58 = [\"curveType\", \"uint8\", \"keys\", Utils.getArrayReader([\"[]\", \"float32\", 2])];\n\n        this.ModelParticleFlipbookV58 = [\n          \"columns\",\n          \"uint8\",\n          \"count\",\n          \"uint8\",\n          \"fps\",\n          \"float32\",\n          \"rows\",\n          \"uint8\",\n          \"start\",\n          \"uint8\",\n        ];\n\n        this.ModelMatrix43V58 = [\"x\", [\"[]\", \"float32\", 4], \"y\", [\"[]\", \"float32\", 4], \"z\", [\"[]\", \"float32\", 4]];\n\n        this.ModelParticleEmitterV58 = [\n          \"acceleration\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"accelerationDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"accelerationDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"alignmentDir\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorBegin\",\n          [\"[]\", \"float32\", 4],\n          \"colorEnd\",\n          [\"[]\", \"float32\", 4],\n          \"colorPeriod\",\n          \"float32\",\n          \"colorFalloff\",\n          [\"[]\", \"float32\", 2],\n          \"drag\",\n          \"float32\",\n          \"emitterFlags\",\n          \"uint32\",\n          \"offset\",\n          \"float32\",\n          \"opacityCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV58),\n          \"opacityCurvePreset\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"flipbook\",\n          Utils.getPointerReader(this.ModelParticleFlipbookV58),\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"rotationChange\",\n          [\"[]\", \"float32\", 2],\n          \"rotationDrag\",\n          \"float32\",\n          \"rotationInitial\",\n          [\"[]\", \"float32\", 2],\n          \"scaleChange\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleInitial\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV58),\n          \"scaleCurvePreset\",\n          \"uint32\",\n          \"velocity\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"velocityDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"velocityDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"velocityInherit\",\n          [\"[]\", \"float32\", 2],\n          \"spawnGroupSize\",\n          [\"[]\", \"float32\", 2],\n          \"spawnPeriod\",\n          \"float32\",\n          \"spawnProbability\",\n          \"float32\",\n          \"spawnRadius\",\n          [\"[]\", \"float32\", 2],\n          \"spawnWindEmit\",\n          [\"[]\", \"float32\", 2],\n          \"spawnWindSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"texCoordRect\",\n          [\"[]\", \"float32\", 4],\n          \"transform\",\n          Utils.getPointerReader(this.ModelMatrix43V58),\n          \"windInfluence\",\n          \"uint8\",\n          \"alignmentType\",\n          \"uint8\",\n          \"spawnShape\",\n          \"uint8\",\n        ];\n\n        this.ModelCloudDataV58 = [\n          \"clouds\",\n          Utils.getArrayReader(this.ModelParticleCloudV58),\n          \"emitters\",\n          Utils.getArrayReader(this.ModelParticleEmitterV58),\n        ];\n\n        this.ModelObstacleDataV58 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint8\",\n          \"response\",\n          \"uint8\",\n          \"flags\",\n          \"uint32\",\n          \"dragCoef\",\n          \"float32\",\n          \"gravityCoef\",\n          \"float32\",\n          \"length\",\n          \"float32\",\n          \"width\",\n          \"float32\",\n          \"height\",\n          \"float32\",\n          \"radius\",\n          \"float32\",\n          \"transform\",\n          Utils.getPointerReader(this.ModelMatrix43V58),\n        ];\n\n        this.ModelStreakV58 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"velocity\",\n          [\"[]\", \"float32\", 3],\n          \"anchorIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"bone\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"jitter\",\n          \"float32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"noise\",\n          \"float32\",\n          \"spawnDist\",\n          \"float32\",\n          \"texScale\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n        ];\n\n        this.ModelStreakAnchorV58 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorStart\",\n          \"uint32\",\n          \"colorEnd\",\n          \"uint32\",\n          \"falloff\",\n          \"float32\",\n          \"lifetime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"texV\",\n          \"float32\",\n        ];\n\n        this.ModelStreakDataV58 = [\n          \"streaks\",\n          Utils.getArrayReader(this.ModelStreakV58),\n          \"anchors\",\n          Utils.getArrayReader(this.ModelStreakAnchorV58),\n        ];\n\n        this.ModelEffectLightV58 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"farDistance\",\n          \"float32\",\n          \"intensity\",\n          \"float32\",\n          \"nearDistance\",\n          \"float32\",\n        ];\n\n        this.ModelLightDataV58 = [\"effectLights\", Utils.getArrayReader(this.ModelEffectLightV58)];\n\n        this.PackVertexType = [\"fvf\", \"uint32\", \"vertices\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelClothBoneWeightV58 = [\"token\", Utils.getQWordReader(), \"weight\", \"uint8\"];\n\n        this.ModelClothMeshGroupV58 = [\"weights\", Utils.getArrayReader(this.ModelClothBoneWeightV58)];\n\n        this.ModelClothSoftLockV58 = [\"weight\", \"uint8\", \"vertIndex\", \"uint16\"];\n\n        this.ModelClothConstraintV58 = [\n          \"distance\",\n          \"uint16\",\n          \"relationship\",\n          \"uint16\",\n          \"vertIndexA\",\n          \"uint16\",\n          \"vertIndexB\",\n          \"uint16\",\n        ];\n\n        this.ModelClothDataV58 = [\n          \"materialIndex\",\n          \"uint32\",\n          \"drag\",\n          \"float32\",\n          \"gravity\",\n          \"float32\",\n          \"compressibility\",\n          \"float32\",\n          \"slack\",\n          \"float32\",\n          \"stretchiness\",\n          \"float32\",\n          \"weight\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n          \"mesh\",\n          this.PackVertexType,\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"groups\",\n          Utils.getArrayReader(this.ModelClothMeshGroupV58),\n          \"softLocks\",\n          Utils.getArrayReader(this.ModelClothSoftLockV58),\n          \"lod0Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV58),\n          \"lod1Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV58),\n          \"lod1Indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"barycentricCoords\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"barycentricIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"obstacleIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"lockCount\",\n          \"uint16\",\n          \"lockedNormals\",\n          Utils.getArrayReader(\"uint32\"),\n          \"lockedTanegents\",\n          Utils.getArrayReader(\"uint32\"),\n          \"lockedBitangents\",\n          Utils.getArrayReader(\"uint32\"),\n          \"lod1VertexCount\",\n          \"uint16\",\n          \"flags\",\n          \"uint8\",\n          \"rigidness\",\n          \"uint8\",\n        ];\n\n        this.ModelLightningSystemV58 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"boltIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"flags\",\n          \"uint32\",\n          \"fvf\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelLightningBoltV58 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"nodeIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"colorBegin\",\n          [\"[]\", \"uint32\", 3],\n          \"colorEnd\",\n          [\"[]\", \"uint32\", 3],\n          \"colorPeriod\",\n          \"float32\",\n          \"colorFalloff\",\n          [\"[]\", \"float32\", 2],\n          \"flags\",\n          \"uint32\",\n          \"flipbook\",\n          Utils.getPointerReader(this.ModelParticleFlipbookV58),\n          \"fps\",\n          \"float32\",\n          \"frequency\",\n          \"float32\",\n          \"groupMax\",\n          \"uint32\",\n          \"groupMin\",\n          \"uint32\",\n          \"probability\",\n          \"float32\",\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"numSegments\",\n          \"uint16\",\n          \"opacity\",\n          [\"[]\", \"float32\", 2],\n          \"opacityPreset\",\n          \"uint8\",\n          \"texOffset\",\n          \"float32\",\n          \"texScale\",\n          \"float32\",\n          \"texSpeed\",\n          \"float32\",\n          \"thicknessPreset\",\n          \"uint8\",\n          \"thicknessRange\",\n          [\"[]\", \"float32\", 2],\n          \"type\",\n          \"uint8\",\n          \"variance\",\n          \"float32\",\n          \"variancePreset\",\n          \"uint8\",\n          \"noise\",\n          \"float32\",\n        ];\n\n        this.ModelLightningNodeV58 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"childrenIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"flags\",\n          \"uint32\",\n          \"probability\",\n          \"float32\",\n          \"radius\",\n          [\"[]\", \"float32\", 2],\n          \"shape\",\n          \"uint8\",\n          \"updatePos\",\n          \"float32\",\n        ];\n\n        this.ModelLightningDataV58 = [\n          \"systems\",\n          Utils.getArrayReader(this.ModelLightningSystemV58),\n          \"bolts\",\n          Utils.getArrayReader(this.ModelLightningBoltV58),\n          \"nodes\",\n          Utils.getArrayReader(this.ModelLightningNodeV58),\n        ];\n\n        this.ModelBoneConstraintLinkV58 = [\n          \"angle\",\n          \"float32\",\n          \"azimuth\",\n          \"float32\",\n          \"distance\",\n          [\"[]\", \"float32\", 2],\n          \"token\",\n          Utils.getQWordReader(),\n        ];\n\n        this.ModelBoneConstraintV58 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint16\",\n          \"twistOffset\",\n          \"float32\",\n          \"animBlend\",\n          \"float32\",\n          \"drag\",\n          \"float32\",\n          \"ellipseRatio\",\n          \"float32\",\n          \"gravity\",\n          \"float32\",\n          \"collisionRadius\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n          \"angle\",\n          [\"[]\", \"float32\", 2],\n          \"angleStrength\",\n          \"float32\",\n          \"angleType\",\n          \"uint8\",\n          \"distanceInner\",\n          [\"[]\", \"float32\", 2],\n          \"distanceInnerStrength\",\n          \"float32\",\n          \"distanceInnerType\",\n          \"uint8\",\n          \"links\",\n          Utils.getArrayReader(this.ModelBoneConstraintLinkV58),\n          \"distanceOuter\",\n          [\"[]\", \"float32\", 2],\n          \"distanceOuterStrength\",\n          \"float32\",\n          \"distanceOuterType\",\n          \"uint8\",\n          \"twist\",\n          [\"[]\", \"float32\", 2],\n          \"twistStrength\",\n          \"float32\",\n          \"twistType\",\n          \"uint8\",\n        ];\n\n        this.ModelSoftBodyDataV58 = [\n          \"materialIndex\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"vertexFvf\",\n          \"uint32\",\n          \"vertBytes\",\n          Utils.getArrayReader(\"uint8\"),\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"bones\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.ModelBoneOffsetDataV58 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"translation\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 4],\n          \"boneInverseOffset\",\n          [\"[]\", [\"[]\", \"float32\", 4], 3],\n        ];\n\n        this.ModelFixedOffsetDataV58 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"parentBone\",\n          Utils.getQWordReader(),\n          \"translation\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.__root = this.ModelFileDataV58 = [\n          \"permutations\",\n          Utils.getArrayReader(this.ModelPermutationDataV58),\n          \"meshes\",\n          Utils.getRefArrayReader(this.ModelMeshDataV58),\n          \"model\",\n          Utils.getPointerReader(this.ModelModelDataV58),\n          \"properties\",\n          Utils.getArrayReader(this.ModelPropertyDataV58),\n          \"cloudData\",\n          Utils.getPointerReader(this.ModelCloudDataV58),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelObstacleDataV58),\n          \"streakData\",\n          Utils.getPointerReader(this.ModelStreakDataV58),\n          \"lightData\",\n          Utils.getPointerReader(this.ModelLightDataV58),\n          \"clothData\",\n          Utils.getArrayReader(this.ModelClothDataV58),\n          \"actionOffsetNames\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"actionOffsets\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"lodOverride\",\n          [\"[]\", \"float32\", 2],\n          \"soundScript\",\n          Utils.getFileNameReader(),\n          \"lightningData\",\n          Utils.getPointerReader(this.ModelLightningDataV58),\n          \"boneConstraints\",\n          Utils.getArrayReader(this.ModelBoneConstraintV58),\n          \"softBodyData\",\n          Utils.getArrayReader(this.ModelSoftBodyDataV58),\n          \"boneOffsetData\",\n          Utils.getArrayReader(this.ModelBoneOffsetDataV58),\n          \"fixedOffsetData\",\n          Utils.getArrayReader(this.ModelFixedOffsetDataV58),\n          \"modelReference\",\n          Utils.getFileNameReader(),\n        ];\n      },\n\n      // => Version: 57\n      57: function () {\n        this.ModelTextureDataV57 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"textureFlags\",\n          \"uint32\",\n          \"token\",\n          Utils.getQWordReader(),\n          \"blitId\",\n          Utils.getQWordReader(),\n          \"uvAnimId\",\n          \"uint32\",\n          \"uvPSInputIndex\",\n          \"uint8\",\n        ];\n\n        this.ModelConstantDataV57 = [\"name\", \"uint32\", \"value\", [\"[]\", \"float32\", 4], \"constantFlags\", \"uint32\"];\n\n        this.ModelMatConstLinkV57 = [\"linkToken\", Utils.getQWordReader(), \"constantToken\", \"uint32\"];\n\n        this.ModelUVTransLinkV57 = [\"linkToken\", Utils.getQWordReader(), \"uvAnimId\", \"uint32\", \"type\", \"uint8\"];\n\n        this.ModelMaterialTexTransformV57 = [\n          \"random\",\n          \"uint8\",\n          \"uvIndex\",\n          \"uint8\",\n          \"columns\",\n          \"uint8\",\n          \"rows\",\n          \"uint8\",\n          \"count\",\n          \"uint16\",\n          \"fps\",\n          \"float32\",\n          \"scroll\",\n          [\"[]\", \"float32\", 2],\n        ];\n\n        this.ModelMaterialDataV57 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"materialId\",\n          \"uint32\",\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"materialFlags\",\n          \"uint32\",\n          \"sortOrder\",\n          \"uint32\",\n          \"textures\",\n          Utils.getArrayReader(this.ModelTextureDataV57),\n          \"constants\",\n          Utils.getArrayReader(this.ModelConstantDataV57),\n          \"matConstLinks\",\n          Utils.getArrayReader(this.ModelMatConstLinkV57),\n          \"uvTransLinks\",\n          Utils.getArrayReader(this.ModelUVTransLinkV57),\n          \"texTransforms\",\n          Utils.getArrayReader(this.ModelMaterialTexTransformV57),\n          \"texCoordCount\",\n          \"uint8\",\n        ];\n\n        this.ModelPermutationDataV57 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"materials\",\n          Utils.getRefArrayReader(this.ModelMaterialDataV57),\n        ];\n\n        this.ModelMeshLodDataV57 = [\"indices\", Utils.getArrayReader(\"uint16\")];\n\n        this.ModelMeshMorphVertV57 = [\"index\", \"uint16\", \"vector\", [\"[]\", \"float32\", 3]];\n\n        this.ModelMeshMorphTargetV57 = [\n          \"positions\",\n          Utils.getArrayReader(this.ModelMeshMorphVertV57),\n          \"normals\",\n          Utils.getArrayReader(this.ModelMeshMorphVertV57),\n          \"mesh\",\n          Utils.getQWordReader(),\n        ];\n\n        this.PackGrannyMeshType = [\"mesh\", Utils.getArrayReader(\"uint8\")];\n\n        this.GrBoundData = [\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"boxExtent\",\n          [\"[]\", \"float32\", 3],\n          \"sphereRadius\",\n          \"float32\",\n        ];\n\n        this.ModelMeshDataV57 = [\n          \"visBone\",\n          Utils.getQWordReader(),\n          \"lods\",\n          Utils.getArrayReader(this.ModelMeshLodDataV57),\n          \"morphTargets\",\n          Utils.getArrayReader(this.ModelMeshMorphTargetV57),\n          \"mesh\",\n          this.PackGrannyMeshType,\n          \"flags\",\n          \"uint32\",\n          \"seamVertIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"meshName\",\n          Utils.getQWordReader(),\n          \"minBound\",\n          [\"[]\", \"float32\", 3],\n          \"maxBound\",\n          [\"[]\", \"float32\", 3],\n          \"bounds\",\n          Utils.getArrayReader(this.GrBoundData),\n          \"materialIndex\",\n          \"uint32\",\n          \"materialName\",\n          Utils.getStringReader(),\n        ];\n\n        this.ModelTransformDataV57 = [\n          \"Flags\",\n          \"uint32\",\n          \"Position\",\n          [\"[]\", \"float32\", 3],\n          \"Orientation\",\n          [\"[]\", \"float32\", 4],\n          \"ScaleShear\",\n          [\"[]\", [\"[]\", \"float32\", 3], 3],\n        ];\n\n        this.ModelBoneDataV57 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"ParentIndex\",\n          \"uint32\",\n          \"LocalTransform\",\n          this.ModelTransformDataV57,\n          \"InverseWorld4x4\",\n          [\"[]\", [\"[]\", \"float32\", 4], 4],\n          \"LODError\",\n          \"float32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n        ];\n\n        this.ModelBoneSymmetryV57 = [\"boneLeft\", Utils.getQWordReader(), \"boneRight\", Utils.getQWordReader()];\n\n        this.ModelSkeletonDataV57 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Bones\",\n          Utils.getArrayReader(this.ModelBoneDataV57),\n          \"LODType\",\n          \"uint32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n          \"boneSymmetries\",\n          Utils.getArrayReader(this.ModelBoneSymmetryV57),\n        ];\n\n        this.ModelMeshBindingDataV57 = [\"Mesh\", Utils.getPointerReader(\"uint8\")];\n\n        this.PackGrannyTrackMaskType = [\"trackMask\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelTrackMaskV57 = [\"trackMask\", this.PackGrannyTrackMaskType, \"token\", Utils.getQWordReader()];\n\n        this.ModelModelDataV57 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Skeleton\",\n          Utils.getPointerReader(this.ModelSkeletonDataV57),\n          \"InitialPlacement\",\n          this.ModelTransformDataV57,\n          \"MeshBindings\",\n          Utils.getArrayReader(this.ModelMeshBindingDataV57),\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n          \"boneFlags\",\n          Utils.getArrayReader(\"uint32\"),\n          \"emitterBones\",\n          Utils.getArrayReader(\"uint32\"),\n          \"trackMasks\",\n          Utils.getArrayReader(this.ModelTrackMaskV57),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"radius\",\n          \"float32\",\n        ];\n\n        this.ModelPropertyDataV57 = [\n          \"id\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint32\",\n          \"mergeIndex\",\n          \"uint32\",\n          \"time\",\n          \"float32\",\n          \"val\",\n          Utils.getQWordReader(),\n          \"strVal\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.ModelParticleCloudV57 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"drag\",\n          \"float32\",\n          \"emitterIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"fvf\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"obstacleIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"velocity\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.ModelParticleCurveV57 = [\"curveType\", \"uint8\", \"keys\", Utils.getArrayReader([\"[]\", \"float32\", 2])];\n\n        this.ModelParticleFlipbookV57 = [\n          \"columns\",\n          \"uint8\",\n          \"count\",\n          \"uint8\",\n          \"fps\",\n          \"float32\",\n          \"rows\",\n          \"uint8\",\n          \"start\",\n          \"uint8\",\n        ];\n\n        this.ModelMatrix43V57 = [\"x\", [\"[]\", \"float32\", 4], \"y\", [\"[]\", \"float32\", 4], \"z\", [\"[]\", \"float32\", 4]];\n\n        this.ModelParticleEmitterV57 = [\n          \"acceleration\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"accelerationDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"accelerationDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"alignmentDir\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorBegin\",\n          [\"[]\", \"float32\", 4],\n          \"colorEnd\",\n          [\"[]\", \"float32\", 4],\n          \"colorPeriod\",\n          \"float32\",\n          \"colorFalloff\",\n          [\"[]\", \"float32\", 2],\n          \"drag\",\n          \"float32\",\n          \"emitterFlags\",\n          \"uint32\",\n          \"offset\",\n          \"float32\",\n          \"opacityCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV57),\n          \"opacityCurvePreset\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"flipbook\",\n          Utils.getPointerReader(this.ModelParticleFlipbookV57),\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"rotationChange\",\n          [\"[]\", \"float32\", 2],\n          \"rotationDrag\",\n          \"float32\",\n          \"rotationInitial\",\n          [\"[]\", \"float32\", 2],\n          \"scaleChange\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleInitial\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV57),\n          \"scaleCurvePreset\",\n          \"uint32\",\n          \"velocity\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"velocityDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"velocityDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"velocityInherit\",\n          [\"[]\", \"float32\", 2],\n          \"spawnGroupSize\",\n          [\"[]\", \"float32\", 2],\n          \"spawnPeriod\",\n          \"float32\",\n          \"spawnProbability\",\n          \"float32\",\n          \"spawnRadius\",\n          [\"[]\", \"float32\", 2],\n          \"spawnWindEmit\",\n          [\"[]\", \"float32\", 2],\n          \"spawnWindSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"texCoordRect\",\n          [\"[]\", \"float32\", 4],\n          \"transform\",\n          Utils.getPointerReader(this.ModelMatrix43V57),\n          \"windInfluence\",\n          \"uint8\",\n          \"alignmentType\",\n          \"uint8\",\n          \"spawnShape\",\n          \"uint8\",\n        ];\n\n        this.ModelCloudDataV57 = [\n          \"clouds\",\n          Utils.getArrayReader(this.ModelParticleCloudV57),\n          \"emitters\",\n          Utils.getArrayReader(this.ModelParticleEmitterV57),\n        ];\n\n        this.ModelObstacleDataV57 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint8\",\n          \"response\",\n          \"uint8\",\n          \"flags\",\n          \"uint32\",\n          \"dragCoef\",\n          \"float32\",\n          \"gravityCoef\",\n          \"float32\",\n          \"length\",\n          \"float32\",\n          \"width\",\n          \"float32\",\n          \"height\",\n          \"float32\",\n          \"radius\",\n          \"float32\",\n          \"transform\",\n          Utils.getPointerReader(this.ModelMatrix43V57),\n        ];\n\n        this.ModelStreakV57 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"velocity\",\n          [\"[]\", \"float32\", 3],\n          \"anchorIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"bone\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"jitter\",\n          \"float32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"noise\",\n          \"float32\",\n          \"spawnDist\",\n          \"float32\",\n          \"texScale\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n        ];\n\n        this.ModelStreakAnchorV57 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorStart\",\n          \"uint32\",\n          \"colorEnd\",\n          \"uint32\",\n          \"falloff\",\n          \"float32\",\n          \"lifetime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"texV\",\n          \"float32\",\n        ];\n\n        this.ModelStreakDataV57 = [\n          \"streaks\",\n          Utils.getArrayReader(this.ModelStreakV57),\n          \"anchors\",\n          Utils.getArrayReader(this.ModelStreakAnchorV57),\n        ];\n\n        this.ModelEffectLightV57 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"farDistance\",\n          \"float32\",\n          \"intensity\",\n          \"float32\",\n          \"nearDistance\",\n          \"float32\",\n        ];\n\n        this.ModelLightDataV57 = [\"effectLights\", Utils.getArrayReader(this.ModelEffectLightV57)];\n\n        this.PackVertexType = [\"fvf\", \"uint32\", \"vertices\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelClothBoneWeightV57 = [\"token\", Utils.getQWordReader(), \"weight\", \"uint8\"];\n\n        this.ModelClothMeshGroupV57 = [\"weights\", Utils.getArrayReader(this.ModelClothBoneWeightV57)];\n\n        this.ModelClothSoftLockV57 = [\"weight\", \"uint8\", \"vertIndex\", \"uint16\"];\n\n        this.ModelClothConstraintV57 = [\n          \"distance\",\n          \"uint16\",\n          \"relationship\",\n          \"uint16\",\n          \"vertIndexA\",\n          \"uint16\",\n          \"vertIndexB\",\n          \"uint16\",\n        ];\n\n        this.ModelClothDataV57 = [\n          \"materialIndex\",\n          \"uint32\",\n          \"drag\",\n          \"float32\",\n          \"gravity\",\n          \"float32\",\n          \"compressibility\",\n          \"float32\",\n          \"slack\",\n          \"float32\",\n          \"stretchiness\",\n          \"float32\",\n          \"weight\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n          \"mesh\",\n          this.PackVertexType,\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"groups\",\n          Utils.getArrayReader(this.ModelClothMeshGroupV57),\n          \"softLocks\",\n          Utils.getArrayReader(this.ModelClothSoftLockV57),\n          \"lod0Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV57),\n          \"lod1Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV57),\n          \"lod1Indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"barycentricCoords\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"barycentricIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"obstacleIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"lockCount\",\n          \"uint16\",\n          \"lod1VertexCount\",\n          \"uint16\",\n          \"flags\",\n          \"uint8\",\n          \"rigidness\",\n          \"uint8\",\n        ];\n\n        this.ModelLightningSystemV57 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"boltIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"flags\",\n          \"uint32\",\n          \"fvf\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelLightningBoltV57 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"nodeIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"colorBegin\",\n          [\"[]\", \"uint32\", 3],\n          \"colorEnd\",\n          [\"[]\", \"uint32\", 3],\n          \"colorPeriod\",\n          \"float32\",\n          \"colorFalloff\",\n          [\"[]\", \"float32\", 2],\n          \"flags\",\n          \"uint32\",\n          \"fps\",\n          \"float32\",\n          \"probability\",\n          \"float32\",\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"numSegments\",\n          \"uint16\",\n          \"opacity\",\n          [\"[]\", \"float32\", 2],\n          \"opacityPreset\",\n          \"uint8\",\n          \"period\",\n          \"float32\",\n          \"texOffset\",\n          \"float32\",\n          \"texScale\",\n          \"float32\",\n          \"texSpeed\",\n          \"float32\",\n          \"thickness\",\n          \"float32\",\n          \"thicknessPreset\",\n          \"uint8\",\n          \"type\",\n          \"uint8\",\n          \"variance\",\n          \"float32\",\n          \"variancePreset\",\n          \"uint8\",\n          \"noise\",\n          \"float32\",\n        ];\n\n        this.ModelLightningNodeV57 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"childrenIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"flags\",\n          \"uint32\",\n          \"probability\",\n          \"float32\",\n          \"radius\",\n          [\"[]\", \"float32\", 2],\n          \"shape\",\n          \"uint8\",\n          \"updatePos\",\n          \"float32\",\n        ];\n\n        this.ModelLightningDataV57 = [\n          \"systems\",\n          Utils.getArrayReader(this.ModelLightningSystemV57),\n          \"bolts\",\n          Utils.getArrayReader(this.ModelLightningBoltV57),\n          \"nodes\",\n          Utils.getArrayReader(this.ModelLightningNodeV57),\n        ];\n\n        this.ModelBoneConstraintLinkV57 = [\n          \"angle\",\n          \"float32\",\n          \"azimuth\",\n          \"float32\",\n          \"distance\",\n          [\"[]\", \"float32\", 2],\n          \"token\",\n          Utils.getQWordReader(),\n        ];\n\n        this.ModelBoneConstraintV57 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint16\",\n          \"twistOffset\",\n          \"float32\",\n          \"animBlend\",\n          \"float32\",\n          \"drag\",\n          \"float32\",\n          \"ellipseRatio\",\n          \"float32\",\n          \"gravity\",\n          \"float32\",\n          \"collisionRadius\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n          \"angle\",\n          [\"[]\", \"float32\", 2],\n          \"angleStrength\",\n          \"float32\",\n          \"angleType\",\n          \"uint8\",\n          \"distanceInner\",\n          [\"[]\", \"float32\", 2],\n          \"distanceInnerStrength\",\n          \"float32\",\n          \"distanceInnerType\",\n          \"uint8\",\n          \"links\",\n          Utils.getArrayReader(this.ModelBoneConstraintLinkV57),\n          \"distanceOuter\",\n          [\"[]\", \"float32\", 2],\n          \"distanceOuterStrength\",\n          \"float32\",\n          \"distanceOuterType\",\n          \"uint8\",\n          \"twist\",\n          [\"[]\", \"float32\", 2],\n          \"twistStrength\",\n          \"float32\",\n          \"twistType\",\n          \"uint8\",\n        ];\n\n        this.ModelSoftBodyDataV57 = [\n          \"materialIndex\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"vertexFvf\",\n          \"uint32\",\n          \"vertBytes\",\n          Utils.getArrayReader(\"uint8\"),\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"bones\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.ModelBoneOffsetDataV57 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"translation\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 4],\n          \"boneInverseOffset\",\n          [\"[]\", [\"[]\", \"float32\", 4], 3],\n        ];\n\n        this.ModelFixedOffsetDataV57 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"parentBone\",\n          Utils.getQWordReader(),\n          \"translation\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.__root = this.ModelFileDataV57 = [\n          \"permutations\",\n          Utils.getArrayReader(this.ModelPermutationDataV57),\n          \"meshes\",\n          Utils.getRefArrayReader(this.ModelMeshDataV57),\n          \"model\",\n          Utils.getPointerReader(this.ModelModelDataV57),\n          \"properties\",\n          Utils.getArrayReader(this.ModelPropertyDataV57),\n          \"cloudData\",\n          Utils.getPointerReader(this.ModelCloudDataV57),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelObstacleDataV57),\n          \"streakData\",\n          Utils.getPointerReader(this.ModelStreakDataV57),\n          \"lightData\",\n          Utils.getPointerReader(this.ModelLightDataV57),\n          \"clothData\",\n          Utils.getArrayReader(this.ModelClothDataV57),\n          \"actionOffsetNames\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"actionOffsets\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"lodOverride\",\n          [\"[]\", \"float32\", 2],\n          \"soundScript\",\n          Utils.getFileNameReader(),\n          \"lightningData\",\n          Utils.getPointerReader(this.ModelLightningDataV57),\n          \"boneConstraints\",\n          Utils.getArrayReader(this.ModelBoneConstraintV57),\n          \"softBodyData\",\n          Utils.getArrayReader(this.ModelSoftBodyDataV57),\n          \"boneOffsetData\",\n          Utils.getArrayReader(this.ModelBoneOffsetDataV57),\n          \"fixedOffsetData\",\n          Utils.getArrayReader(this.ModelFixedOffsetDataV57),\n          \"modelReference\",\n          Utils.getFileNameReader(),\n        ];\n      },\n\n      // => Version: 56\n      56: function () {\n        this.ModelTextureDataV56 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"textureFlags\",\n          \"uint32\",\n          \"token\",\n          Utils.getQWordReader(),\n          \"blitId\",\n          Utils.getQWordReader(),\n          \"uvAnimId\",\n          \"uint32\",\n          \"uvPSInputIndex\",\n          \"uint8\",\n        ];\n\n        this.ModelConstantDataV56 = [\"name\", \"uint32\", \"value\", [\"[]\", \"float32\", 4], \"constantFlags\", \"uint32\"];\n\n        this.ModelMatConstLinkV56 = [\"linkToken\", Utils.getQWordReader(), \"constantToken\", \"uint32\"];\n\n        this.ModelUVTransLinkV56 = [\"linkToken\", Utils.getQWordReader(), \"uvAnimId\", \"uint32\", \"type\", \"uint8\"];\n\n        this.ModelMaterialTexTransformV56 = [\n          \"random\",\n          \"uint8\",\n          \"uvIndex\",\n          \"uint8\",\n          \"columns\",\n          \"uint8\",\n          \"rows\",\n          \"uint8\",\n          \"count\",\n          \"uint16\",\n          \"fps\",\n          \"float32\",\n          \"scroll\",\n          [\"[]\", \"float32\", 2],\n        ];\n\n        this.ModelMaterialDataV56 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"materialId\",\n          \"uint32\",\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"materialFlags\",\n          \"uint32\",\n          \"sortOrder\",\n          \"uint32\",\n          \"textures\",\n          Utils.getArrayReader(this.ModelTextureDataV56),\n          \"constants\",\n          Utils.getArrayReader(this.ModelConstantDataV56),\n          \"matConstLinks\",\n          Utils.getArrayReader(this.ModelMatConstLinkV56),\n          \"uvTransLinks\",\n          Utils.getArrayReader(this.ModelUVTransLinkV56),\n          \"texTransforms\",\n          Utils.getArrayReader(this.ModelMaterialTexTransformV56),\n          \"texCoordCount\",\n          \"uint8\",\n        ];\n\n        this.ModelPermutationDataV56 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"materials\",\n          Utils.getRefArrayReader(this.ModelMaterialDataV56),\n        ];\n\n        this.ModelMeshLodDataV56 = [\"indices\", Utils.getArrayReader(\"uint16\")];\n\n        this.ModelMeshMorphVertV56 = [\"index\", \"uint16\", \"vector\", [\"[]\", \"float32\", 3]];\n\n        this.ModelMeshMorphTargetV56 = [\n          \"positions\",\n          Utils.getArrayReader(this.ModelMeshMorphVertV56),\n          \"normals\",\n          Utils.getArrayReader(this.ModelMeshMorphVertV56),\n          \"mesh\",\n          Utils.getQWordReader(),\n        ];\n\n        this.PackGrannyMeshType = [\"mesh\", Utils.getArrayReader(\"uint8\")];\n\n        this.GrBoundData = [\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"boxExtent\",\n          [\"[]\", \"float32\", 3],\n          \"sphereRadius\",\n          \"float32\",\n        ];\n\n        this.ModelMeshDataV56 = [\n          \"visBone\",\n          Utils.getQWordReader(),\n          \"lods\",\n          Utils.getArrayReader(this.ModelMeshLodDataV56),\n          \"morphTargets\",\n          Utils.getArrayReader(this.ModelMeshMorphTargetV56),\n          \"mesh\",\n          this.PackGrannyMeshType,\n          \"flags\",\n          \"uint32\",\n          \"seamVertIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"meshName\",\n          Utils.getQWordReader(),\n          \"minBound\",\n          [\"[]\", \"float32\", 3],\n          \"maxBound\",\n          [\"[]\", \"float32\", 3],\n          \"bounds\",\n          Utils.getArrayReader(this.GrBoundData),\n          \"materialIndex\",\n          \"uint32\",\n          \"materialName\",\n          Utils.getStringReader(),\n        ];\n\n        this.ModelTransformDataV56 = [\n          \"Flags\",\n          \"uint32\",\n          \"Position\",\n          [\"[]\", \"float32\", 3],\n          \"Orientation\",\n          [\"[]\", \"float32\", 4],\n          \"ScaleShear\",\n          [\"[]\", [\"[]\", \"float32\", 3], 3],\n        ];\n\n        this.ModelBoneDataV56 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"ParentIndex\",\n          \"uint32\",\n          \"LocalTransform\",\n          this.ModelTransformDataV56,\n          \"InverseWorld4x4\",\n          [\"[]\", [\"[]\", \"float32\", 4], 4],\n          \"LODError\",\n          \"float32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n        ];\n\n        this.ModelBoneSymmetryV56 = [\"boneLeft\", Utils.getQWordReader(), \"boneRight\", Utils.getQWordReader()];\n\n        this.ModelSkeletonDataV56 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Bones\",\n          Utils.getArrayReader(this.ModelBoneDataV56),\n          \"LODType\",\n          \"uint32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n          \"boneSymmetries\",\n          Utils.getArrayReader(this.ModelBoneSymmetryV56),\n        ];\n\n        this.ModelMeshBindingDataV56 = [\"Mesh\", Utils.getPointerReader(\"uint8\")];\n\n        this.PackGrannyTrackMaskType = [\"trackMask\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelTrackMaskV56 = [\"trackMask\", this.PackGrannyTrackMaskType, \"token\", Utils.getQWordReader()];\n\n        this.ModelModelDataV56 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Skeleton\",\n          Utils.getPointerReader(this.ModelSkeletonDataV56),\n          \"InitialPlacement\",\n          this.ModelTransformDataV56,\n          \"MeshBindings\",\n          Utils.getArrayReader(this.ModelMeshBindingDataV56),\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n          \"boneFlags\",\n          Utils.getArrayReader(\"uint32\"),\n          \"emitterBones\",\n          Utils.getArrayReader(\"uint32\"),\n          \"trackMasks\",\n          Utils.getArrayReader(this.ModelTrackMaskV56),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"radius\",\n          \"float32\",\n        ];\n\n        this.ModelPropertyDataV56 = [\n          \"id\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint32\",\n          \"mergeIndex\",\n          \"uint32\",\n          \"time\",\n          \"float32\",\n          \"val\",\n          Utils.getQWordReader(),\n          \"strVal\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.ModelParticleCloudV56 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"drag\",\n          \"float32\",\n          \"emitterIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"fvf\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"obstacleIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"velocity\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.ModelParticleCurveV56 = [\"curveType\", \"uint8\", \"keys\", Utils.getArrayReader([\"[]\", \"float32\", 2])];\n\n        this.ModelParticleFlipbookV56 = [\n          \"columns\",\n          \"uint8\",\n          \"count\",\n          \"uint8\",\n          \"fps\",\n          \"float32\",\n          \"rows\",\n          \"uint8\",\n          \"start\",\n          \"uint8\",\n        ];\n\n        this.ModelMatrix43V56 = [\"x\", [\"[]\", \"float32\", 4], \"y\", [\"[]\", \"float32\", 4], \"z\", [\"[]\", \"float32\", 4]];\n\n        this.ModelParticleEmitterV56 = [\n          \"acceleration\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"accelerationDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"accelerationDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"alignmentDir\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorBegin\",\n          [\"[]\", \"float32\", 4],\n          \"colorEnd\",\n          [\"[]\", \"float32\", 4],\n          \"colorPeriod\",\n          \"float32\",\n          \"colorFalloff\",\n          [\"[]\", \"float32\", 2],\n          \"drag\",\n          \"float32\",\n          \"emitterFlags\",\n          \"uint32\",\n          \"offset\",\n          \"float32\",\n          \"opacityCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV56),\n          \"opacityCurvePreset\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"flipbook\",\n          Utils.getPointerReader(this.ModelParticleFlipbookV56),\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"rotationChange\",\n          [\"[]\", \"float32\", 2],\n          \"rotationDrag\",\n          \"float32\",\n          \"rotationInitial\",\n          [\"[]\", \"float32\", 2],\n          \"scaleChange\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleInitial\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV56),\n          \"scaleCurvePreset\",\n          \"uint32\",\n          \"velocity\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"velocityDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"velocityDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"velocityInherit\",\n          [\"[]\", \"float32\", 2],\n          \"spawnGroupSize\",\n          [\"[]\", \"float32\", 2],\n          \"spawnPeriod\",\n          \"float32\",\n          \"spawnProbability\",\n          \"float32\",\n          \"spawnRadius\",\n          [\"[]\", \"float32\", 2],\n          \"spawnWindEmit\",\n          [\"[]\", \"float32\", 2],\n          \"spawnWindSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"texCoordRect\",\n          [\"[]\", \"float32\", 4],\n          \"transform\",\n          Utils.getPointerReader(this.ModelMatrix43V56),\n          \"windInfluence\",\n          \"uint8\",\n          \"alignmentType\",\n          \"uint8\",\n          \"spawnShape\",\n          \"uint8\",\n        ];\n\n        this.ModelCloudDataV56 = [\n          \"clouds\",\n          Utils.getArrayReader(this.ModelParticleCloudV56),\n          \"emitters\",\n          Utils.getArrayReader(this.ModelParticleEmitterV56),\n        ];\n\n        this.ModelObstacleDataV56 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint8\",\n          \"response\",\n          \"uint8\",\n          \"flags\",\n          \"uint32\",\n          \"dragCoef\",\n          \"float32\",\n          \"gravityCoef\",\n          \"float32\",\n          \"length\",\n          \"float32\",\n          \"width\",\n          \"float32\",\n          \"height\",\n          \"float32\",\n          \"radius\",\n          \"float32\",\n          \"transform\",\n          Utils.getPointerReader(this.ModelMatrix43V56),\n        ];\n\n        this.ModelStreakV56 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"velocity\",\n          [\"[]\", \"float32\", 3],\n          \"anchorIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"bone\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"jitter\",\n          \"float32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"noise\",\n          \"float32\",\n          \"spawnDist\",\n          \"float32\",\n          \"texScale\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n        ];\n\n        this.ModelStreakAnchorV56 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorStart\",\n          \"uint32\",\n          \"colorEnd\",\n          \"uint32\",\n          \"falloff\",\n          \"float32\",\n          \"lifetime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"texV\",\n          \"float32\",\n        ];\n\n        this.ModelStreakDataV56 = [\n          \"streaks\",\n          Utils.getArrayReader(this.ModelStreakV56),\n          \"anchors\",\n          Utils.getArrayReader(this.ModelStreakAnchorV56),\n        ];\n\n        this.ModelEffectLightV56 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"farDistance\",\n          \"float32\",\n          \"intensity\",\n          \"float32\",\n          \"nearDistance\",\n          \"float32\",\n        ];\n\n        this.ModelLightDataV56 = [\"effectLights\", Utils.getArrayReader(this.ModelEffectLightV56)];\n\n        this.PackVertexType = [\"fvf\", \"uint32\", \"vertices\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelClothBoneWeightV56 = [\"token\", Utils.getQWordReader(), \"weight\", \"uint8\"];\n\n        this.ModelClothMeshGroupV56 = [\"weights\", Utils.getArrayReader(this.ModelClothBoneWeightV56)];\n\n        this.ModelClothSoftLockV56 = [\"weight\", \"uint8\", \"vertIndex\", \"uint16\"];\n\n        this.ModelClothConstraintV56 = [\n          \"distance\",\n          \"uint16\",\n          \"relationship\",\n          \"uint16\",\n          \"vertIndexA\",\n          \"uint16\",\n          \"vertIndexB\",\n          \"uint16\",\n        ];\n\n        this.ModelClothDataV56 = [\n          \"materialIndex\",\n          \"uint32\",\n          \"drag\",\n          \"float32\",\n          \"gravity\",\n          \"float32\",\n          \"compressibility\",\n          \"float32\",\n          \"slack\",\n          \"float32\",\n          \"stretchiness\",\n          \"float32\",\n          \"weight\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n          \"mesh\",\n          this.PackVertexType,\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"groups\",\n          Utils.getArrayReader(this.ModelClothMeshGroupV56),\n          \"softLocks\",\n          Utils.getArrayReader(this.ModelClothSoftLockV56),\n          \"lod0Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV56),\n          \"lod1Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV56),\n          \"lod1Indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"barycentricCoords\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"barycentricIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"obstacleIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"lockCount\",\n          \"uint16\",\n          \"lod1VertexCount\",\n          \"uint16\",\n          \"flags\",\n          \"uint8\",\n          \"rigidness\",\n          \"uint8\",\n        ];\n\n        this.ModelLightningSystemV56 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"boltIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"flags\",\n          \"uint32\",\n          \"fvf\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelLightningBoltV56 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"nodeIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"colorBegin\",\n          [\"[]\", \"uint32\", 3],\n          \"colorEnd\",\n          [\"[]\", \"uint32\", 3],\n          \"colorPeriod\",\n          \"float32\",\n          \"colorFalloff\",\n          [\"[]\", \"float32\", 2],\n          \"flags\",\n          \"uint32\",\n          \"fps\",\n          \"float32\",\n          \"probability\",\n          \"float32\",\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"numSegments\",\n          \"uint16\",\n          \"opacity\",\n          [\"[]\", \"float32\", 2],\n          \"opacityPreset\",\n          \"uint8\",\n          \"period\",\n          \"float32\",\n          \"texOffset\",\n          \"float32\",\n          \"texScale\",\n          \"float32\",\n          \"texSpeed\",\n          \"float32\",\n          \"thickness\",\n          \"float32\",\n          \"thicknessPreset\",\n          \"uint8\",\n          \"type\",\n          \"uint8\",\n          \"variance\",\n          \"float32\",\n          \"variancePreset\",\n          \"uint8\",\n          \"noise\",\n          \"float32\",\n        ];\n\n        this.ModelLightningNodeV56 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"childrenIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"flags\",\n          \"uint32\",\n          \"probability\",\n          \"float32\",\n          \"radius\",\n          [\"[]\", \"float32\", 2],\n          \"shape\",\n          \"uint8\",\n          \"updatePos\",\n          \"float32\",\n        ];\n\n        this.ModelLightningDataV56 = [\n          \"systems\",\n          Utils.getArrayReader(this.ModelLightningSystemV56),\n          \"bolts\",\n          Utils.getArrayReader(this.ModelLightningBoltV56),\n          \"nodes\",\n          Utils.getArrayReader(this.ModelLightningNodeV56),\n        ];\n\n        this.ModelBoneConstraintLinkV56 = [\n          \"angle\",\n          \"float32\",\n          \"azimuth\",\n          \"float32\",\n          \"distance\",\n          [\"[]\", \"float32\", 2],\n          \"token\",\n          Utils.getQWordReader(),\n        ];\n\n        this.ModelBoneConstraintV56 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint16\",\n          \"twistOffset\",\n          \"float32\",\n          \"animBlend\",\n          \"float32\",\n          \"drag\",\n          \"float32\",\n          \"ellipseRatio\",\n          \"float32\",\n          \"gravity\",\n          \"float32\",\n          \"collisionRadius\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n          \"angle\",\n          [\"[]\", \"float32\", 2],\n          \"angleStrength\",\n          \"float32\",\n          \"angleType\",\n          \"uint8\",\n          \"distanceInner\",\n          [\"[]\", \"float32\", 2],\n          \"distanceInnerStrength\",\n          \"float32\",\n          \"distanceInnerType\",\n          \"uint8\",\n          \"links\",\n          Utils.getArrayReader(this.ModelBoneConstraintLinkV56),\n          \"distanceOuter\",\n          [\"[]\", \"float32\", 2],\n          \"distanceOuterStrength\",\n          \"float32\",\n          \"distanceOuterType\",\n          \"uint8\",\n          \"twist\",\n          [\"[]\", \"float32\", 2],\n          \"twistStrength\",\n          \"float32\",\n          \"twistType\",\n          \"uint8\",\n        ];\n\n        this.ModelSoftBodyDataV56 = [\n          \"materialIndex\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"vertexFvf\",\n          \"uint32\",\n          \"vertBytes\",\n          Utils.getArrayReader(\"uint8\"),\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"bones\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.ModelBoneOffsetDataV56 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"translation\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 4],\n          \"boneInverseOffset\",\n          [\"[]\", [\"[]\", \"float32\", 4], 3],\n        ];\n\n        this.__root = this.ModelFileDataV56 = [\n          \"permutations\",\n          Utils.getArrayReader(this.ModelPermutationDataV56),\n          \"meshes\",\n          Utils.getRefArrayReader(this.ModelMeshDataV56),\n          \"model\",\n          Utils.getPointerReader(this.ModelModelDataV56),\n          \"properties\",\n          Utils.getArrayReader(this.ModelPropertyDataV56),\n          \"cloudData\",\n          Utils.getPointerReader(this.ModelCloudDataV56),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelObstacleDataV56),\n          \"streakData\",\n          Utils.getPointerReader(this.ModelStreakDataV56),\n          \"lightData\",\n          Utils.getPointerReader(this.ModelLightDataV56),\n          \"clothData\",\n          Utils.getArrayReader(this.ModelClothDataV56),\n          \"actionOffsetNames\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"actionOffsets\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"lodOverride\",\n          [\"[]\", \"float32\", 2],\n          \"soundScript\",\n          Utils.getFileNameReader(),\n          \"lightningData\",\n          Utils.getPointerReader(this.ModelLightningDataV56),\n          \"boneConstraints\",\n          Utils.getArrayReader(this.ModelBoneConstraintV56),\n          \"softBodyData\",\n          Utils.getArrayReader(this.ModelSoftBodyDataV56),\n          \"boneOffsetData\",\n          Utils.getArrayReader(this.ModelBoneOffsetDataV56),\n          \"modelReference\",\n          Utils.getFileNameReader(),\n        ];\n      },\n\n      // => Version: 55, ReferencedFunction: 0xF2BC60\n      55: function () {\n        this.ModelTextureDataV55 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"textureFlags\",\n          \"uint32\",\n          \"token\",\n          Utils.getQWordReader(),\n          \"blitId\",\n          Utils.getQWordReader(),\n          \"uvAnimId\",\n          \"uint32\",\n          \"uvPSInputIndex\",\n          \"uint8\",\n        ];\n\n        this.ModelConstantDataV55 = [\"name\", \"uint32\", \"value\", [\"[]\", \"float32\", 4], \"constantFlags\", \"uint32\"];\n\n        this.ModelMatConstLinkV55 = [\"linkToken\", Utils.getQWordReader(), \"constantToken\", \"uint32\"];\n\n        this.ModelUVTransLinkV55 = [\"linkToken\", Utils.getQWordReader(), \"uvAnimId\", \"uint32\", \"type\", \"uint8\"];\n\n        this.ModelMaterialTexTransformV55 = [\n          \"random\",\n          \"uint8\",\n          \"uvIndex\",\n          \"uint8\",\n          \"columns\",\n          \"uint8\",\n          \"rows\",\n          \"uint8\",\n          \"count\",\n          \"uint16\",\n          \"fps\",\n          \"float32\",\n          \"scroll\",\n          [\"[]\", \"float32\", 2],\n        ];\n\n        this.ModelMaterialDataV55 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"materialId\",\n          \"uint32\",\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"materialFlags\",\n          \"uint32\",\n          \"sortOrder\",\n          \"uint32\",\n          \"textures\",\n          Utils.getArrayReader(this.ModelTextureDataV55),\n          \"constants\",\n          Utils.getArrayReader(this.ModelConstantDataV55),\n          \"matConstLinks\",\n          Utils.getArrayReader(this.ModelMatConstLinkV55),\n          \"uvTransLinks\",\n          Utils.getArrayReader(this.ModelUVTransLinkV55),\n          \"texTransforms\",\n          Utils.getArrayReader(this.ModelMaterialTexTransformV55),\n          \"texCoordCount\",\n          \"uint8\",\n        ];\n\n        this.ModelPermutationDataV55 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"materials\",\n          Utils.getRefArrayReader(this.ModelMaterialDataV55),\n        ];\n\n        this.ModelMeshLodDataV55 = [\"indices\", Utils.getArrayReader(\"uint16\")];\n\n        this.ModelMeshMorphVertV55 = [\"index\", \"uint16\", \"vector\", [\"[]\", \"float32\", 3]];\n\n        this.ModelMeshMorphTargetV55 = [\n          \"positions\",\n          Utils.getArrayReader(this.ModelMeshMorphVertV55),\n          \"normals\",\n          Utils.getArrayReader(this.ModelMeshMorphVertV55),\n          \"mesh\",\n          Utils.getQWordReader(),\n        ];\n\n        this.PackGrannyMeshType = [\"mesh\", Utils.getArrayReader(\"uint8\")];\n\n        this.GrBoundData = [\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"boxExtent\",\n          [\"[]\", \"float32\", 3],\n          \"sphereRadius\",\n          \"float32\",\n        ];\n\n        this.ModelMeshDataV55 = [\n          \"visBone\",\n          Utils.getQWordReader(),\n          \"lods\",\n          Utils.getArrayReader(this.ModelMeshLodDataV55),\n          \"morphTargets\",\n          Utils.getArrayReader(this.ModelMeshMorphTargetV55),\n          \"mesh\",\n          this.PackGrannyMeshType,\n          \"flags\",\n          \"uint32\",\n          \"seamVertIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"meshName\",\n          Utils.getQWordReader(),\n          \"minBound\",\n          [\"[]\", \"float32\", 3],\n          \"maxBound\",\n          [\"[]\", \"float32\", 3],\n          \"bounds\",\n          Utils.getArrayReader(this.GrBoundData),\n          \"materialIndex\",\n          \"uint32\",\n          \"materialName\",\n          Utils.getStringReader(),\n        ];\n\n        this.ModelTransformDataV55 = [\n          \"Flags\",\n          \"uint32\",\n          \"Position\",\n          [\"[]\", \"float32\", 3],\n          \"Orientation\",\n          [\"[]\", \"float32\", 4],\n          \"ScaleShear\",\n          [\"[]\", [\"[]\", \"float32\", 3], 3],\n        ];\n\n        this.ModelBoneDataV55 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"ParentIndex\",\n          \"uint32\",\n          \"LocalTransform\",\n          this.ModelTransformDataV55,\n          \"InverseWorld4x4\",\n          [\"[]\", [\"[]\", \"float32\", 4], 4],\n          \"LODError\",\n          \"float32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n        ];\n\n        this.ModelBoneSymmetryV55 = [\"boneLeft\", Utils.getQWordReader(), \"boneRight\", Utils.getQWordReader()];\n\n        this.ModelSkeletonDataV55 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Bones\",\n          Utils.getArrayReader(this.ModelBoneDataV55),\n          \"LODType\",\n          \"uint32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n          \"boneSymmetries\",\n          Utils.getArrayReader(this.ModelBoneSymmetryV55),\n        ];\n\n        this.ModelMeshBindingDataV55 = [\"Mesh\", Utils.getPointerReader(\"uint8\")];\n\n        this.PackGrannyTrackMaskType = [\"trackMask\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelTrackMaskV55 = [\"trackMask\", this.PackGrannyTrackMaskType, \"token\", Utils.getQWordReader()];\n\n        this.ModelModelDataV55 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Skeleton\",\n          Utils.getPointerReader(this.ModelSkeletonDataV55),\n          \"InitialPlacement\",\n          this.ModelTransformDataV55,\n          \"MeshBindings\",\n          Utils.getArrayReader(this.ModelMeshBindingDataV55),\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n          \"boneFlags\",\n          Utils.getArrayReader(\"uint32\"),\n          \"emitterBones\",\n          Utils.getArrayReader(\"uint32\"),\n          \"trackMasks\",\n          Utils.getArrayReader(this.ModelTrackMaskV55),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"radius\",\n          \"float32\",\n        ];\n\n        this.ModelPropertyDataV55 = [\n          \"id\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint32\",\n          \"mergeIndex\",\n          \"uint32\",\n          \"time\",\n          \"float32\",\n          \"val\",\n          Utils.getQWordReader(),\n          \"strVal\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.ModelParticleCloudV55 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"drag\",\n          \"float32\",\n          \"emitterIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"fvf\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"obstacleIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"velocity\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.ModelParticleCurveV55 = [\"curveType\", \"uint8\", \"keys\", Utils.getArrayReader([\"[]\", \"float32\", 2])];\n\n        this.ModelParticleFlipbookV55 = [\n          \"columns\",\n          \"uint8\",\n          \"count\",\n          \"uint8\",\n          \"fps\",\n          \"float32\",\n          \"rows\",\n          \"uint8\",\n          \"start\",\n          \"uint8\",\n        ];\n\n        this.ModelMatrix43V55 = [\"x\", [\"[]\", \"float32\", 4], \"y\", [\"[]\", \"float32\", 4], \"z\", [\"[]\", \"float32\", 4]];\n\n        this.ModelParticleEmitterV55 = [\n          \"acceleration\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"accelerationDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"accelerationDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"alignmentDir\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorBegin\",\n          [\"[]\", \"float32\", 4],\n          \"colorEnd\",\n          [\"[]\", \"float32\", 4],\n          \"colorPeriod\",\n          \"float32\",\n          \"colorFalloff\",\n          [\"[]\", \"float32\", 2],\n          \"drag\",\n          \"float32\",\n          \"emitterFlags\",\n          \"uint32\",\n          \"offset\",\n          \"float32\",\n          \"opacityCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV55),\n          \"opacityCurvePreset\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"flipbook\",\n          Utils.getPointerReader(this.ModelParticleFlipbookV55),\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"rotationChange\",\n          [\"[]\", \"float32\", 2],\n          \"rotationDrag\",\n          \"float32\",\n          \"rotationInitial\",\n          [\"[]\", \"float32\", 2],\n          \"scaleChange\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleInitial\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV55),\n          \"scaleCurvePreset\",\n          \"uint32\",\n          \"velocity\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"velocityDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"velocityDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"velocityInherit\",\n          [\"[]\", \"float32\", 2],\n          \"spawnGroupSize\",\n          [\"[]\", \"float32\", 2],\n          \"spawnPeriod\",\n          \"float32\",\n          \"spawnProbability\",\n          \"float32\",\n          \"spawnRadius\",\n          [\"[]\", \"float32\", 2],\n          \"spawnWindEmit\",\n          [\"[]\", \"float32\", 2],\n          \"spawnWindSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"texCoordRect\",\n          [\"[]\", \"float32\", 4],\n          \"transform\",\n          Utils.getPointerReader(this.ModelMatrix43V55),\n          \"windInfluence\",\n          \"uint8\",\n          \"alignmentType\",\n          \"uint8\",\n          \"spawnShape\",\n          \"uint8\",\n        ];\n\n        this.ModelCloudDataV55 = [\n          \"clouds\",\n          Utils.getArrayReader(this.ModelParticleCloudV55),\n          \"emitters\",\n          Utils.getArrayReader(this.ModelParticleEmitterV55),\n        ];\n\n        this.ModelObstacleDataV55 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint8\",\n          \"response\",\n          \"uint8\",\n          \"flags\",\n          \"uint32\",\n          \"dragCoef\",\n          \"float32\",\n          \"gravityCoef\",\n          \"float32\",\n          \"length\",\n          \"float32\",\n          \"width\",\n          \"float32\",\n          \"height\",\n          \"float32\",\n          \"radius\",\n          \"float32\",\n          \"transform\",\n          Utils.getPointerReader(this.ModelMatrix43V55),\n        ];\n\n        this.ModelStreakV55 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"velocity\",\n          [\"[]\", \"float32\", 3],\n          \"anchorIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"bone\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"jitter\",\n          \"float32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"noise\",\n          \"float32\",\n          \"spawnDist\",\n          \"float32\",\n          \"texScale\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n        ];\n\n        this.ModelStreakAnchorV55 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorStart\",\n          \"uint32\",\n          \"colorEnd\",\n          \"uint32\",\n          \"falloff\",\n          \"float32\",\n          \"lifetime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"texV\",\n          \"float32\",\n        ];\n\n        this.ModelStreakDataV55 = [\n          \"streaks\",\n          Utils.getArrayReader(this.ModelStreakV55),\n          \"anchors\",\n          Utils.getArrayReader(this.ModelStreakAnchorV55),\n        ];\n\n        this.ModelEffectLightV55 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"farDistance\",\n          \"float32\",\n          \"intensity\",\n          \"float32\",\n          \"nearDistance\",\n          \"float32\",\n        ];\n\n        this.ModelLightDataV55 = [\"effectLights\", Utils.getArrayReader(this.ModelEffectLightV55)];\n\n        this.PackVertexType = [\"fvf\", \"uint32\", \"vertices\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelClothBoneWeightV55 = [\"token\", Utils.getQWordReader(), \"weight\", \"uint8\"];\n\n        this.ModelClothMeshGroupV55 = [\"weights\", Utils.getArrayReader(this.ModelClothBoneWeightV55)];\n\n        this.ModelClothSoftLockV55 = [\"weight\", \"uint8\", \"vertIndex\", \"uint16\"];\n\n        this.ModelClothConstraintV55 = [\n          \"distance\",\n          \"uint16\",\n          \"relationship\",\n          \"uint16\",\n          \"vertIndexA\",\n          \"uint16\",\n          \"vertIndexB\",\n          \"uint16\",\n        ];\n\n        this.ModelClothDataV55 = [\n          \"materialIndex\",\n          \"uint32\",\n          \"drag\",\n          \"float32\",\n          \"gravity\",\n          \"float32\",\n          \"compressibility\",\n          \"float32\",\n          \"slack\",\n          \"float32\",\n          \"stretchiness\",\n          \"float32\",\n          \"weight\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n          \"mesh\",\n          this.PackVertexType,\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"groups\",\n          Utils.getArrayReader(this.ModelClothMeshGroupV55),\n          \"softLocks\",\n          Utils.getArrayReader(this.ModelClothSoftLockV55),\n          \"lod0Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV55),\n          \"lod1Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV55),\n          \"lod1Indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"barycentricCoords\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"barycentricIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"obstacleIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"lockCount\",\n          \"uint16\",\n          \"lod1VertexCount\",\n          \"uint16\",\n          \"flags\",\n          \"uint8\",\n          \"rigidness\",\n          \"uint8\",\n        ];\n\n        this.ModelLightningSystemV55 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"boltIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"flags\",\n          \"uint32\",\n          \"fvf\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelLightningBoltV55 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"nodeIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"colorBegin\",\n          [\"[]\", \"uint32\", 3],\n          \"colorEnd\",\n          [\"[]\", \"uint32\", 3],\n          \"colorPeriod\",\n          \"float32\",\n          \"colorFalloff\",\n          [\"[]\", \"float32\", 2],\n          \"flags\",\n          \"uint32\",\n          \"fps\",\n          \"float32\",\n          \"probability\",\n          \"float32\",\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"numSegments\",\n          \"uint16\",\n          \"opacity\",\n          [\"[]\", \"float32\", 2],\n          \"opacityPreset\",\n          \"uint8\",\n          \"period\",\n          \"float32\",\n          \"texOffset\",\n          \"float32\",\n          \"texScale\",\n          \"float32\",\n          \"texSpeed\",\n          \"float32\",\n          \"thickness\",\n          \"float32\",\n          \"thicknessPreset\",\n          \"uint8\",\n          \"type\",\n          \"uint8\",\n          \"variance\",\n          \"float32\",\n          \"variancePreset\",\n          \"uint8\",\n          \"noise\",\n          \"float32\",\n        ];\n\n        this.ModelLightningNodeV55 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"childrenIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"flags\",\n          \"uint32\",\n          \"probability\",\n          \"float32\",\n          \"radius\",\n          [\"[]\", \"float32\", 2],\n          \"shape\",\n          \"uint8\",\n          \"updatePos\",\n          \"float32\",\n        ];\n\n        this.ModelLightningDataV55 = [\n          \"systems\",\n          Utils.getArrayReader(this.ModelLightningSystemV55),\n          \"bolts\",\n          Utils.getArrayReader(this.ModelLightningBoltV55),\n          \"nodes\",\n          Utils.getArrayReader(this.ModelLightningNodeV55),\n        ];\n\n        this.ModelBoneConstraintLinkV55 = [\n          \"angle\",\n          \"float32\",\n          \"azimuth\",\n          \"float32\",\n          \"distance\",\n          [\"[]\", \"float32\", 2],\n          \"token\",\n          Utils.getQWordReader(),\n        ];\n\n        this.ModelBoneConstraintV55 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint16\",\n          \"twistOffset\",\n          \"float32\",\n          \"animBlend\",\n          \"float32\",\n          \"drag\",\n          \"float32\",\n          \"ellipseRatio\",\n          \"float32\",\n          \"gravity\",\n          \"float32\",\n          \"collisionRadius\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n          \"angle\",\n          [\"[]\", \"float32\", 2],\n          \"angleStrength\",\n          \"float32\",\n          \"angleType\",\n          \"uint8\",\n          \"distanceInner\",\n          [\"[]\", \"float32\", 2],\n          \"distanceInnerStrength\",\n          \"float32\",\n          \"distanceInnerType\",\n          \"uint8\",\n          \"links\",\n          Utils.getArrayReader(this.ModelBoneConstraintLinkV55),\n          \"distanceOuter\",\n          [\"[]\", \"float32\", 2],\n          \"distanceOuterStrength\",\n          \"float32\",\n          \"distanceOuterType\",\n          \"uint8\",\n          \"twist\",\n          [\"[]\", \"float32\", 2],\n          \"twistStrength\",\n          \"float32\",\n          \"twistType\",\n          \"uint8\",\n        ];\n\n        this.ModelSoftBodyDataV55 = [\n          \"materialIndex\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"vertexFvf\",\n          \"uint32\",\n          \"vertBytes\",\n          Utils.getArrayReader(\"uint8\"),\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"bones\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.ModelBoneOffsetDataV55 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"translation\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 4],\n          \"boneInverseOffset\",\n          [\"[]\", [\"[]\", \"float32\", 4], 3],\n        ];\n\n        this.__root = this.ModelFileDataV55 = [\n          \"permutations\",\n          Utils.getArrayReader(this.ModelPermutationDataV55),\n          \"meshes\",\n          Utils.getRefArrayReader(this.ModelMeshDataV55),\n          \"model\",\n          Utils.getPointerReader(this.ModelModelDataV55),\n          \"properties\",\n          Utils.getArrayReader(this.ModelPropertyDataV55),\n          \"cloudData\",\n          Utils.getPointerReader(this.ModelCloudDataV55),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelObstacleDataV55),\n          \"streakData\",\n          Utils.getPointerReader(this.ModelStreakDataV55),\n          \"lightData\",\n          Utils.getPointerReader(this.ModelLightDataV55),\n          \"clothData\",\n          Utils.getArrayReader(this.ModelClothDataV55),\n          \"actionOffsetNames\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"actionOffsets\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"lodOverride\",\n          [\"[]\", \"float32\", 2],\n          \"soundScript\",\n          Utils.getFileNameReader(),\n          \"lightningData\",\n          Utils.getPointerReader(this.ModelLightningDataV55),\n          \"boneConstraints\",\n          Utils.getArrayReader(this.ModelBoneConstraintV55),\n          \"softBodyData\",\n          Utils.getArrayReader(this.ModelSoftBodyDataV55),\n          \"boneOffsetData\",\n          Utils.getArrayReader(this.ModelBoneOffsetDataV55),\n        ];\n      },\n\n      // => Version: 54\n      54: function () {\n        this.ModelTextureDataV54 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"textureFlags\",\n          \"uint32\",\n          \"token\",\n          Utils.getQWordReader(),\n          \"blitId\",\n          Utils.getQWordReader(),\n          \"uvAnimId\",\n          \"uint32\",\n          \"uvPSInputIndex\",\n          \"uint8\",\n        ];\n\n        this.ModelConstantDataV54 = [\"name\", \"uint32\", \"value\", [\"[]\", \"float32\", 4], \"constantFlags\", \"uint32\"];\n\n        this.ModelMatConstLinkV54 = [\"linkToken\", Utils.getQWordReader(), \"constantToken\", \"uint32\"];\n\n        this.ModelUVTransLinkV54 = [\"linkToken\", Utils.getQWordReader(), \"uvAnimId\", \"uint32\", \"type\", \"uint8\"];\n\n        this.ModelMaterialTexTransformV54 = [\n          \"random\",\n          \"uint8\",\n          \"uvIndex\",\n          \"uint8\",\n          \"columns\",\n          \"uint8\",\n          \"rows\",\n          \"uint8\",\n          \"count\",\n          \"uint16\",\n          \"fps\",\n          \"float32\",\n          \"scroll\",\n          [\"[]\", \"float32\", 2],\n        ];\n\n        this.ModelMaterialDataV54 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"materialId\",\n          \"uint32\",\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"materialFlags\",\n          \"uint32\",\n          \"sortOrder\",\n          \"uint32\",\n          \"textures\",\n          Utils.getArrayReader(this.ModelTextureDataV54),\n          \"constants\",\n          Utils.getArrayReader(this.ModelConstantDataV54),\n          \"matConstLinks\",\n          Utils.getArrayReader(this.ModelMatConstLinkV54),\n          \"uvTransLinks\",\n          Utils.getArrayReader(this.ModelUVTransLinkV54),\n          \"texTransforms\",\n          Utils.getArrayReader(this.ModelMaterialTexTransformV54),\n          \"texCoordCount\",\n          \"uint8\",\n        ];\n\n        this.ModelPermutationDataV54 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"materials\",\n          Utils.getRefArrayReader(this.ModelMaterialDataV54),\n        ];\n\n        this.ModelMeshLodDataV54 = [\"indices\", Utils.getArrayReader(\"uint16\")];\n\n        this.ModelMeshMorphVertV54 = [\"index\", \"uint16\", \"vector\", [\"[]\", \"float32\", 3]];\n\n        this.ModelMeshMorphTargetV54 = [\n          \"positions\",\n          Utils.getArrayReader(this.ModelMeshMorphVertV54),\n          \"normals\",\n          Utils.getArrayReader(this.ModelMeshMorphVertV54),\n          \"mesh\",\n          Utils.getQWordReader(),\n        ];\n\n        this.PackGrannyMeshType = [\"mesh\", Utils.getArrayReader(\"uint8\")];\n\n        this.GrBoundData = [\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"boxExtent\",\n          [\"[]\", \"float32\", 3],\n          \"sphereRadius\",\n          \"float32\",\n        ];\n\n        this.ModelMeshDataV54 = [\n          \"visBone\",\n          Utils.getQWordReader(),\n          \"lods\",\n          Utils.getArrayReader(this.ModelMeshLodDataV54),\n          \"morphTargets\",\n          Utils.getArrayReader(this.ModelMeshMorphTargetV54),\n          \"mesh\",\n          this.PackGrannyMeshType,\n          \"flags\",\n          \"uint32\",\n          \"seamVertIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"meshName\",\n          Utils.getQWordReader(),\n          \"minBound\",\n          [\"[]\", \"float32\", 3],\n          \"maxBound\",\n          [\"[]\", \"float32\", 3],\n          \"bounds\",\n          Utils.getArrayReader(this.GrBoundData),\n          \"materialIndex\",\n          \"uint32\",\n          \"materialName\",\n          Utils.getStringReader(),\n        ];\n\n        this.ModelTransformDataV54 = [\n          \"Flags\",\n          \"uint32\",\n          \"Position\",\n          [\"[]\", \"float32\", 3],\n          \"Orientation\",\n          [\"[]\", \"float32\", 4],\n          \"ScaleShear\",\n          [\"[]\", [\"[]\", \"float32\", 3], 3],\n        ];\n\n        this.ModelBoneDataV54 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"ParentIndex\",\n          \"uint32\",\n          \"LocalTransform\",\n          this.ModelTransformDataV54,\n          \"InverseWorld4x4\",\n          [\"[]\", [\"[]\", \"float32\", 4], 4],\n          \"LODError\",\n          \"float32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n        ];\n\n        this.ModelBoneSymmetryV54 = [\"boneLeft\", Utils.getQWordReader(), \"boneRight\", Utils.getQWordReader()];\n\n        this.ModelSkeletonDataV54 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Bones\",\n          Utils.getArrayReader(this.ModelBoneDataV54),\n          \"LODType\",\n          \"uint32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n          \"boneSymmetries\",\n          Utils.getArrayReader(this.ModelBoneSymmetryV54),\n        ];\n\n        this.ModelMeshBindingDataV54 = [\"Mesh\", Utils.getPointerReader(\"uint8\")];\n\n        this.PackGrannyTrackMaskType = [\"trackMask\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelTrackMaskV54 = [\"trackMask\", this.PackGrannyTrackMaskType, \"token\", Utils.getQWordReader()];\n\n        this.ModelModelDataV54 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Skeleton\",\n          Utils.getPointerReader(this.ModelSkeletonDataV54),\n          \"InitialPlacement\",\n          this.ModelTransformDataV54,\n          \"MeshBindings\",\n          Utils.getArrayReader(this.ModelMeshBindingDataV54),\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n          \"boneFlags\",\n          Utils.getArrayReader(\"uint32\"),\n          \"emitterBones\",\n          Utils.getArrayReader(\"uint32\"),\n          \"trackMasks\",\n          Utils.getArrayReader(this.ModelTrackMaskV54),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"radius\",\n          \"float32\",\n        ];\n\n        this.ModelPropertyDataV54 = [\n          \"id\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint32\",\n          \"mergeIndex\",\n          \"uint32\",\n          \"time\",\n          \"float32\",\n          \"val\",\n          Utils.getQWordReader(),\n          \"strVal\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.ModelParticleCloudV54 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"drag\",\n          \"float32\",\n          \"emitterIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"fvf\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"obstacleIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"velocity\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.ModelParticleCurveV54 = [\"curveType\", \"uint8\", \"keys\", Utils.getArrayReader([\"[]\", \"float32\", 2])];\n\n        this.ModelParticleFlipbookV54 = [\n          \"columns\",\n          \"uint8\",\n          \"count\",\n          \"uint8\",\n          \"fps\",\n          \"float32\",\n          \"rows\",\n          \"uint8\",\n          \"start\",\n          \"uint8\",\n        ];\n\n        this.ModelMatrix43V54 = [\"x\", [\"[]\", \"float32\", 4], \"y\", [\"[]\", \"float32\", 4], \"z\", [\"[]\", \"float32\", 4]];\n\n        this.ModelParticleEmitterV54 = [\n          \"acceleration\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"accelerationDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"accelerationDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"alignmentDir\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorBegin\",\n          [\"[]\", \"float32\", 4],\n          \"colorEnd\",\n          [\"[]\", \"float32\", 4],\n          \"colorPeriod\",\n          \"float32\",\n          \"colorFalloff\",\n          [\"[]\", \"float32\", 2],\n          \"drag\",\n          \"float32\",\n          \"emitterFlags\",\n          \"uint32\",\n          \"offset\",\n          \"float32\",\n          \"opacityCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV54),\n          \"opacityCurvePreset\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"flipbook\",\n          Utils.getPointerReader(this.ModelParticleFlipbookV54),\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"rotationChange\",\n          [\"[]\", \"float32\", 2],\n          \"rotationDrag\",\n          \"float32\",\n          \"rotationInitial\",\n          [\"[]\", \"float32\", 2],\n          \"scaleChange\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleInitial\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV54),\n          \"scaleCurvePreset\",\n          \"uint32\",\n          \"velocity\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"velocityDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"velocityDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"velocityInherit\",\n          [\"[]\", \"float32\", 2],\n          \"spawnGroupSize\",\n          [\"[]\", \"float32\", 2],\n          \"spawnPeriod\",\n          \"float32\",\n          \"spawnProbability\",\n          \"float32\",\n          \"spawnRadius\",\n          [\"[]\", \"float32\", 2],\n          \"spawnWindEmit\",\n          [\"[]\", \"float32\", 2],\n          \"spawnWindSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"texCoordRect\",\n          [\"[]\", \"float32\", 4],\n          \"transform\",\n          Utils.getPointerReader(this.ModelMatrix43V54),\n          \"windInfluence\",\n          \"uint8\",\n          \"alignmentType\",\n          \"uint8\",\n          \"spawnShape\",\n          \"uint8\",\n        ];\n\n        this.ModelCloudDataV54 = [\n          \"clouds\",\n          Utils.getArrayReader(this.ModelParticleCloudV54),\n          \"emitters\",\n          Utils.getArrayReader(this.ModelParticleEmitterV54),\n        ];\n\n        this.ModelObstacleDataV54 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint8\",\n          \"response\",\n          \"uint8\",\n          \"flags\",\n          \"uint32\",\n          \"dragCoef\",\n          \"float32\",\n          \"gravityCoef\",\n          \"float32\",\n          \"length\",\n          \"float32\",\n          \"width\",\n          \"float32\",\n          \"height\",\n          \"float32\",\n          \"radius\",\n          \"float32\",\n          \"transform\",\n          Utils.getPointerReader(this.ModelMatrix43V54),\n        ];\n\n        this.ModelStreakV54 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"velocity\",\n          [\"[]\", \"float32\", 3],\n          \"anchorIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"bone\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"jitter\",\n          \"float32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"noise\",\n          \"float32\",\n          \"spawnDist\",\n          \"float32\",\n          \"texScale\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n        ];\n\n        this.ModelStreakAnchorV54 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorStart\",\n          \"uint32\",\n          \"colorEnd\",\n          \"uint32\",\n          \"falloff\",\n          \"float32\",\n          \"lifetime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"texV\",\n          \"float32\",\n        ];\n\n        this.ModelStreakDataV54 = [\n          \"streaks\",\n          Utils.getArrayReader(this.ModelStreakV54),\n          \"anchors\",\n          Utils.getArrayReader(this.ModelStreakAnchorV54),\n        ];\n\n        this.ModelEffectLightV54 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"farDistance\",\n          \"float32\",\n          \"intensity\",\n          \"float32\",\n          \"nearDistance\",\n          \"float32\",\n        ];\n\n        this.ModelLightDataV54 = [\"effectLights\", Utils.getArrayReader(this.ModelEffectLightV54)];\n\n        this.PackVertexType = [\"fvf\", \"uint32\", \"vertices\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelClothBoneWeightV54 = [\"token\", Utils.getQWordReader(), \"weight\", \"uint8\"];\n\n        this.ModelClothMeshGroupV54 = [\"weights\", Utils.getArrayReader(this.ModelClothBoneWeightV54)];\n\n        this.ModelClothSoftLockV54 = [\"weight\", \"uint8\", \"vertIndex\", \"uint16\"];\n\n        this.ModelClothConstraintV54 = [\n          \"distance\",\n          \"uint16\",\n          \"relationship\",\n          \"uint16\",\n          \"vertIndexA\",\n          \"uint16\",\n          \"vertIndexB\",\n          \"uint16\",\n        ];\n\n        this.ModelClothDataV54 = [\n          \"materialIndex\",\n          \"uint32\",\n          \"drag\",\n          \"float32\",\n          \"gravity\",\n          \"float32\",\n          \"compressibility\",\n          \"float32\",\n          \"slack\",\n          \"float32\",\n          \"stretchiness\",\n          \"float32\",\n          \"weight\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n          \"mesh\",\n          this.PackVertexType,\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"groups\",\n          Utils.getArrayReader(this.ModelClothMeshGroupV54),\n          \"softLocks\",\n          Utils.getArrayReader(this.ModelClothSoftLockV54),\n          \"lod0Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV54),\n          \"lod1Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV54),\n          \"lod1Indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"barycentricCoords\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"barycentricIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"obstacleIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"lockCount\",\n          \"uint16\",\n          \"lod1VertexCount\",\n          \"uint16\",\n          \"flags\",\n          \"uint8\",\n          \"rigidness\",\n          \"uint8\",\n        ];\n\n        this.ModelLightningSystemV54 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"boltIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"flags\",\n          \"uint32\",\n          \"fvf\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelLightningBoltV54 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"nodeIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"colorBegin\",\n          [\"[]\", \"uint32\", 3],\n          \"colorEnd\",\n          [\"[]\", \"uint32\", 3],\n          \"colorPeriod\",\n          \"float32\",\n          \"colorFalloff\",\n          [\"[]\", \"float32\", 2],\n          \"flags\",\n          \"uint32\",\n          \"fps\",\n          \"float32\",\n          \"probability\",\n          \"float32\",\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"numSegments\",\n          \"uint16\",\n          \"opacity\",\n          [\"[]\", \"float32\", 2],\n          \"opacityPreset\",\n          \"uint8\",\n          \"period\",\n          \"float32\",\n          \"texOffset\",\n          \"float32\",\n          \"texScale\",\n          \"float32\",\n          \"texSpeed\",\n          \"float32\",\n          \"thickness\",\n          \"float32\",\n          \"thicknessPreset\",\n          \"uint8\",\n          \"type\",\n          \"uint8\",\n          \"variance\",\n          \"float32\",\n          \"variancePreset\",\n          \"uint8\",\n          \"noise\",\n          \"float32\",\n        ];\n\n        this.ModelLightningNodeV54 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"childrenIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"flags\",\n          \"uint32\",\n          \"probability\",\n          \"float32\",\n          \"radius\",\n          [\"[]\", \"float32\", 2],\n          \"shape\",\n          \"uint8\",\n          \"updatePos\",\n          \"float32\",\n        ];\n\n        this.ModelLightningDataV54 = [\n          \"systems\",\n          Utils.getArrayReader(this.ModelLightningSystemV54),\n          \"bolts\",\n          Utils.getArrayReader(this.ModelLightningBoltV54),\n          \"nodes\",\n          Utils.getArrayReader(this.ModelLightningNodeV54),\n        ];\n\n        this.ModelBoneConstraintLinkV54 = [\n          \"angle\",\n          \"float32\",\n          \"azimuth\",\n          \"float32\",\n          \"distance\",\n          [\"[]\", \"float32\", 2],\n          \"token\",\n          Utils.getQWordReader(),\n        ];\n\n        this.ModelBoneConstraintV54 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint16\",\n          \"twistOffset\",\n          \"float32\",\n          \"animBlend\",\n          \"float32\",\n          \"drag\",\n          \"float32\",\n          \"ellipseRatio\",\n          \"float32\",\n          \"gravity\",\n          \"float32\",\n          \"collisionRadius\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n          \"angle\",\n          [\"[]\", \"float32\", 2],\n          \"angleStrength\",\n          \"float32\",\n          \"angleType\",\n          \"uint8\",\n          \"distanceInner\",\n          [\"[]\", \"float32\", 2],\n          \"distanceInnerStrength\",\n          \"float32\",\n          \"distanceInnerType\",\n          \"uint8\",\n          \"links\",\n          Utils.getArrayReader(this.ModelBoneConstraintLinkV54),\n          \"distanceOuter\",\n          [\"[]\", \"float32\", 2],\n          \"distanceOuterStrength\",\n          \"float32\",\n          \"distanceOuterType\",\n          \"uint8\",\n          \"twist\",\n          [\"[]\", \"float32\", 2],\n          \"twistStrength\",\n          \"float32\",\n          \"twistType\",\n          \"uint8\",\n        ];\n\n        this.ModelSoftBodyDataV54 = [\n          \"materialIndex\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"vertexFvf\",\n          \"uint32\",\n          \"vertBytes\",\n          Utils.getArrayReader(\"uint8\"),\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"bones\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.ModelBoneOffsetDataV54 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"translation\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.__root = this.ModelFileDataV54 = [\n          \"permutations\",\n          Utils.getArrayReader(this.ModelPermutationDataV54),\n          \"meshes\",\n          Utils.getRefArrayReader(this.ModelMeshDataV54),\n          \"model\",\n          Utils.getPointerReader(this.ModelModelDataV54),\n          \"properties\",\n          Utils.getArrayReader(this.ModelPropertyDataV54),\n          \"cloudData\",\n          Utils.getPointerReader(this.ModelCloudDataV54),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelObstacleDataV54),\n          \"streakData\",\n          Utils.getPointerReader(this.ModelStreakDataV54),\n          \"lightData\",\n          Utils.getPointerReader(this.ModelLightDataV54),\n          \"clothData\",\n          Utils.getArrayReader(this.ModelClothDataV54),\n          \"actionOffsetNames\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"actionOffsets\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"lodOverride\",\n          [\"[]\", \"float32\", 2],\n          \"soundScript\",\n          Utils.getFileNameReader(),\n          \"lightningData\",\n          Utils.getPointerReader(this.ModelLightningDataV54),\n          \"boneConstraints\",\n          Utils.getArrayReader(this.ModelBoneConstraintV54),\n          \"softBodyData\",\n          Utils.getArrayReader(this.ModelSoftBodyDataV54),\n          \"boneOffsetData\",\n          Utils.getArrayReader(this.ModelBoneOffsetDataV54),\n        ];\n      },\n\n      // => Version: 53, ReferencedFunction: 0xF2B980\n      53: function () {\n        this.ModelTextureDataV53 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"textureFlags\",\n          \"uint32\",\n          \"token\",\n          Utils.getQWordReader(),\n          \"blitId\",\n          Utils.getQWordReader(),\n          \"uvAnimId\",\n          \"uint32\",\n          \"uvPSInputIndex\",\n          \"uint8\",\n        ];\n\n        this.ModelConstantDataV53 = [\"name\", \"uint32\", \"value\", [\"[]\", \"float32\", 4], \"constantFlags\", \"uint32\"];\n\n        this.ModelMatConstLinkV53 = [\"linkToken\", Utils.getQWordReader(), \"constantToken\", \"uint32\"];\n\n        this.ModelUVTransLinkV53 = [\"linkToken\", Utils.getQWordReader(), \"uvAnimId\", \"uint32\", \"type\", \"uint8\"];\n\n        this.ModelMaterialTexTransformV53 = [\n          \"random\",\n          \"uint8\",\n          \"uvIndex\",\n          \"uint8\",\n          \"columns\",\n          \"uint8\",\n          \"rows\",\n          \"uint8\",\n          \"count\",\n          \"uint16\",\n          \"fps\",\n          \"float32\",\n          \"scroll\",\n          [\"[]\", \"float32\", 2],\n        ];\n\n        this.ModelMaterialDataV53 = [\n          \"materialId\",\n          \"uint32\",\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"materialFlags\",\n          \"uint32\",\n          \"sortOrder\",\n          \"uint32\",\n          \"texCoordCount\",\n          \"uint8\",\n          \"textures\",\n          Utils.getArrayReader(this.ModelTextureDataV53),\n          \"constants\",\n          Utils.getArrayReader(this.ModelConstantDataV53),\n          \"matConstLinks\",\n          Utils.getArrayReader(this.ModelMatConstLinkV53),\n          \"uvTransLinks\",\n          Utils.getArrayReader(this.ModelUVTransLinkV53),\n          \"texTransforms\",\n          Utils.getArrayReader(this.ModelMaterialTexTransformV53),\n        ];\n\n        this.ModelPermutationDataV53 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"materials\",\n          Utils.getRefArrayReader(this.ModelMaterialDataV53),\n        ];\n\n        this.ModelMeshLodDataV53 = [\"indices\", Utils.getArrayReader(\"uint16\")];\n\n        this.ModelMeshMorphVertV53 = [\"index\", \"uint16\", \"vector\", [\"[]\", \"float32\", 3]];\n\n        this.ModelMeshMorphTargetV53 = [\n          \"positions\",\n          Utils.getArrayReader(this.ModelMeshMorphVertV53),\n          \"normals\",\n          Utils.getArrayReader(this.ModelMeshMorphVertV53),\n          \"mesh\",\n          Utils.getQWordReader(),\n        ];\n\n        this.PackGrannyMeshType = [\"mesh\", Utils.getArrayReader(\"uint8\")];\n\n        this.GrBoundData = [\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"boxExtent\",\n          [\"[]\", \"float32\", 3],\n          \"sphereRadius\",\n          \"float32\",\n        ];\n\n        this.ModelMeshDataV53 = [\n          \"visBone\",\n          Utils.getQWordReader(),\n          \"lods\",\n          Utils.getArrayReader(this.ModelMeshLodDataV53),\n          \"morphTargets\",\n          Utils.getArrayReader(this.ModelMeshMorphTargetV53),\n          \"mesh\",\n          this.PackGrannyMeshType,\n          \"flags\",\n          \"uint32\",\n          \"seamVertIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"meshName\",\n          Utils.getQWordReader(),\n          \"minBound\",\n          [\"[]\", \"float32\", 3],\n          \"maxBound\",\n          [\"[]\", \"float32\", 3],\n          \"bounds\",\n          Utils.getArrayReader(this.GrBoundData),\n          \"materialIndex\",\n          \"uint32\",\n          \"materialName\",\n          Utils.getStringReader(),\n        ];\n\n        this.ModelTransformDataV53 = [\n          \"Flags\",\n          \"uint32\",\n          \"Position\",\n          [\"[]\", \"float32\", 3],\n          \"Orientation\",\n          [\"[]\", \"float32\", 4],\n          \"ScaleShear\",\n          [\"[]\", [\"[]\", \"float32\", 3], 3],\n        ];\n\n        this.ModelBoneDataV53 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"ParentIndex\",\n          \"uint32\",\n          \"LocalTransform\",\n          this.ModelTransformDataV53,\n          \"InverseWorld4x4\",\n          [\"[]\", [\"[]\", \"float32\", 4], 4],\n          \"LODError\",\n          \"float32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n        ];\n\n        this.ModelSkeletonDataV53 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Bones\",\n          Utils.getArrayReader(this.ModelBoneDataV53),\n          \"LODType\",\n          \"uint32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n        ];\n\n        this.ModelMeshBindingDataV53 = [\"Mesh\", Utils.getPointerReader(\"uint8\")];\n\n        this.PackGrannyTrackMaskType = [\"trackMask\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelTrackMaskV53 = [\"trackMask\", this.PackGrannyTrackMaskType, \"token\", Utils.getQWordReader()];\n\n        this.ModelModelDataV53 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Skeleton\",\n          Utils.getPointerReader(this.ModelSkeletonDataV53),\n          \"InitialPlacement\",\n          this.ModelTransformDataV53,\n          \"MeshBindings\",\n          Utils.getArrayReader(this.ModelMeshBindingDataV53),\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n          \"boneFlags\",\n          Utils.getArrayReader(\"uint32\"),\n          \"emitterBones\",\n          Utils.getArrayReader(\"uint32\"),\n          \"trackMasks\",\n          Utils.getArrayReader(this.ModelTrackMaskV53),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"radius\",\n          \"float32\",\n        ];\n\n        this.ModelPropertyDataV53 = [\n          \"id\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint32\",\n          \"mergeIndex\",\n          \"uint32\",\n          \"time\",\n          \"float32\",\n          \"val\",\n          Utils.getQWordReader(),\n          \"strVal\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.ModelParticleCloudV53 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"drag\",\n          \"float32\",\n          \"emitterIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"fvf\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"obstacleIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"velocity\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.ModelParticleCurveV53 = [\"curveType\", \"uint8\", \"keys\", Utils.getArrayReader([\"[]\", \"float32\", 2])];\n\n        this.ModelParticleFlipbookV53 = [\n          \"columns\",\n          \"uint8\",\n          \"count\",\n          \"uint8\",\n          \"fps\",\n          \"float32\",\n          \"rows\",\n          \"uint8\",\n          \"start\",\n          \"uint8\",\n        ];\n\n        this.ModelParticleEmitterV53 = [\n          \"acceleration\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"accelerationDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"accelerationDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"alignmentType\",\n          \"uint8\",\n          \"alignmentDir\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorBegin\",\n          [\"[]\", \"float32\", 4],\n          \"colorEnd\",\n          [\"[]\", \"float32\", 4],\n          \"colorPeriod\",\n          \"float32\",\n          \"colorFalloff\",\n          [\"[]\", \"float32\", 2],\n          \"drag\",\n          \"float32\",\n          \"emitterFlags\",\n          \"uint32\",\n          \"offset\",\n          \"float32\",\n          \"opacityCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV53),\n          \"opacityCurvePreset\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"flipbook\",\n          Utils.getPointerReader(this.ModelParticleFlipbookV53),\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"rotationChange\",\n          [\"[]\", \"float32\", 2],\n          \"rotationDrag\",\n          \"float32\",\n          \"rotationInitial\",\n          [\"[]\", \"float32\", 2],\n          \"scaleChange\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleInitial\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV53),\n          \"scaleCurvePreset\",\n          \"uint32\",\n          \"velocity\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"velocityDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"velocityDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"velocityInherit\",\n          [\"[]\", \"float32\", 2],\n          \"spawnGroupSize\",\n          [\"[]\", \"float32\", 2],\n          \"spawnPeriod\",\n          \"float32\",\n          \"spawnProbability\",\n          \"float32\",\n          \"spawnRadius\",\n          [\"[]\", \"float32\", 2],\n          \"spawnShape\",\n          \"uint8\",\n          \"spawnWindEmit\",\n          [\"[]\", \"float32\", 2],\n          \"spawnWindSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"texCoordRect\",\n          [\"[]\", \"float32\", 4],\n          \"windInfluence\",\n          \"uint8\",\n        ];\n\n        this.ModelCloudDataV53 = [\n          \"clouds\",\n          Utils.getArrayReader(this.ModelParticleCloudV53),\n          \"emitters\",\n          Utils.getArrayReader(this.ModelParticleEmitterV53),\n        ];\n\n        this.ModelMatrix43V53 = [\"x\", [\"[]\", \"float32\", 4], \"y\", [\"[]\", \"float32\", 4], \"z\", [\"[]\", \"float32\", 4]];\n\n        this.ModelObstacleDataV53 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint8\",\n          \"response\",\n          \"uint8\",\n          \"flags\",\n          \"uint32\",\n          \"dragCoef\",\n          \"float32\",\n          \"gravityCoef\",\n          \"float32\",\n          \"length\",\n          \"float32\",\n          \"width\",\n          \"float32\",\n          \"height\",\n          \"float32\",\n          \"radius\",\n          \"float32\",\n          \"transform\",\n          Utils.getPointerReader(this.ModelMatrix43V53),\n        ];\n\n        this.ModelStreakV53 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"velocity\",\n          [\"[]\", \"float32\", 3],\n          \"anchorIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"bone\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"jitter\",\n          \"float32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"noise\",\n          \"float32\",\n          \"spawnDist\",\n          \"float32\",\n          \"texScale\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n        ];\n\n        this.ModelStreakAnchorV53 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorStart\",\n          \"uint32\",\n          \"colorEnd\",\n          \"uint32\",\n          \"falloff\",\n          \"float32\",\n          \"lifetime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"texV\",\n          \"float32\",\n        ];\n\n        this.ModelStreakDataV53 = [\n          \"streaks\",\n          Utils.getArrayReader(this.ModelStreakV53),\n          \"anchors\",\n          Utils.getArrayReader(this.ModelStreakAnchorV53),\n        ];\n\n        this.ModelEffectLightV53 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"farDistance\",\n          \"float32\",\n          \"intensity\",\n          \"float32\",\n          \"nearDistance\",\n          \"float32\",\n        ];\n\n        this.ModelLightDataV53 = [\"effectLights\", Utils.getArrayReader(this.ModelEffectLightV53)];\n\n        this.PackVertexType = [\"fvf\", \"uint32\", \"vertices\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelClothBoneWeightV53 = [\"token\", Utils.getQWordReader(), \"weight\", \"uint8\"];\n\n        this.ModelClothMeshGroupV53 = [\"weights\", Utils.getArrayReader(this.ModelClothBoneWeightV53)];\n\n        this.ModelClothSoftLockV53 = [\"weight\", \"uint8\", \"vertIndex\", \"uint16\"];\n\n        this.ModelClothConstraintV53 = [\n          \"distance\",\n          \"uint16\",\n          \"relationship\",\n          \"uint16\",\n          \"vertIndexA\",\n          \"uint16\",\n          \"vertIndexB\",\n          \"uint16\",\n        ];\n\n        this.ModelClothDataV53 = [\n          \"materialIndex\",\n          \"uint32\",\n          \"flags\",\n          \"uint8\",\n          \"drag\",\n          \"float32\",\n          \"gravity\",\n          \"float32\",\n          \"compressibility\",\n          \"float32\",\n          \"stretchiness\",\n          \"float32\",\n          \"weight\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n          \"rigidness\",\n          \"uint8\",\n          \"mesh\",\n          this.PackVertexType,\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"lockCount\",\n          \"uint16\",\n          \"groups\",\n          Utils.getArrayReader(this.ModelClothMeshGroupV53),\n          \"softLocks\",\n          Utils.getArrayReader(this.ModelClothSoftLockV53),\n          \"lod0Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV53),\n          \"lod1Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV53),\n          \"lod1VertexCount\",\n          \"uint16\",\n          \"lod1Indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"barycentricCoords\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"barycentricIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"obstacleIndices\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n\n        this.ModelLightningSystemV53 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"boltIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"flags\",\n          \"uint32\",\n          \"fvf\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelLightningBoltV53 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"nodeIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"colorBegin\",\n          [\"[]\", \"uint32\", 3],\n          \"colorEnd\",\n          [\"[]\", \"uint32\", 3],\n          \"colorPeriod\",\n          \"float32\",\n          \"colorFalloff\",\n          [\"[]\", \"float32\", 2],\n          \"flags\",\n          \"uint32\",\n          \"fps\",\n          \"float32\",\n          \"probability\",\n          \"float32\",\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"numSegments\",\n          \"uint16\",\n          \"opacity\",\n          [\"[]\", \"float32\", 2],\n          \"opacityPreset\",\n          \"uint8\",\n          \"period\",\n          \"float32\",\n          \"texOffset\",\n          \"float32\",\n          \"texScale\",\n          \"float32\",\n          \"texSpeed\",\n          \"float32\",\n          \"thickness\",\n          \"float32\",\n          \"thicknessPreset\",\n          \"uint8\",\n          \"type\",\n          \"uint8\",\n          \"variance\",\n          \"float32\",\n          \"variancePreset\",\n          \"uint8\",\n          \"noise\",\n          \"float32\",\n        ];\n\n        this.ModelLightningNodeV53 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"childrenIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"flags\",\n          \"uint32\",\n          \"probability\",\n          \"float32\",\n          \"radius\",\n          [\"[]\", \"float32\", 2],\n          \"shape\",\n          \"uint8\",\n          \"updatePos\",\n          \"float32\",\n        ];\n\n        this.ModelLightningDataV53 = [\n          \"systems\",\n          Utils.getArrayReader(this.ModelLightningSystemV53),\n          \"bolts\",\n          Utils.getArrayReader(this.ModelLightningBoltV53),\n          \"nodes\",\n          Utils.getArrayReader(this.ModelLightningNodeV53),\n        ];\n\n        this.ModelBoneConstraintLinkV53 = [\n          \"angle\",\n          \"float32\",\n          \"azimuth\",\n          \"float32\",\n          \"distance\",\n          [\"[]\", \"float32\", 2],\n          \"token\",\n          Utils.getQWordReader(),\n        ];\n\n        this.ModelBoneConstraintV53 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint16\",\n          \"twistOffset\",\n          \"float32\",\n          \"animBlend\",\n          \"float32\",\n          \"drag\",\n          \"float32\",\n          \"ellipseRatio\",\n          \"float32\",\n          \"gravity\",\n          \"float32\",\n          \"collisionRadius\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n          \"angle\",\n          [\"[]\", \"float32\", 2],\n          \"angleStrength\",\n          \"float32\",\n          \"angleType\",\n          \"uint8\",\n          \"distanceInner\",\n          [\"[]\", \"float32\", 2],\n          \"distanceInnerStrength\",\n          \"float32\",\n          \"distanceInnerType\",\n          \"uint8\",\n          \"links\",\n          Utils.getArrayReader(this.ModelBoneConstraintLinkV53),\n          \"distanceOuter\",\n          [\"[]\", \"float32\", 2],\n          \"distanceOuterStrength\",\n          \"float32\",\n          \"distanceOuterType\",\n          \"uint8\",\n          \"twist\",\n          [\"[]\", \"float32\", 2],\n          \"twistStrength\",\n          \"float32\",\n          \"twistType\",\n          \"uint8\",\n        ];\n\n        this.ModelSoftBodyDataV53 = [\n          \"materialIndex\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"vertexFvf\",\n          \"uint32\",\n          \"vertBytes\",\n          Utils.getArrayReader(\"uint8\"),\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"bones\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.ModelBoneOffsetDataV53 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"translation\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.__root = this.ModelFileDataV53 = [\n          \"permutations\",\n          Utils.getArrayReader(this.ModelPermutationDataV53),\n          \"meshes\",\n          Utils.getRefArrayReader(this.ModelMeshDataV53),\n          \"model\",\n          Utils.getPointerReader(this.ModelModelDataV53),\n          \"properties\",\n          Utils.getArrayReader(this.ModelPropertyDataV53),\n          \"cloudData\",\n          Utils.getPointerReader(this.ModelCloudDataV53),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelObstacleDataV53),\n          \"streakData\",\n          Utils.getPointerReader(this.ModelStreakDataV53),\n          \"lightData\",\n          Utils.getPointerReader(this.ModelLightDataV53),\n          \"clothData\",\n          Utils.getArrayReader(this.ModelClothDataV53),\n          \"actionOffsetNames\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"actionOffsets\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"lodOverride\",\n          [\"[]\", \"float32\", 2],\n          \"soundScript\",\n          Utils.getFileNameReader(),\n          \"lightningData\",\n          Utils.getPointerReader(this.ModelLightningDataV53),\n          \"boneConstraints\",\n          Utils.getArrayReader(this.ModelBoneConstraintV53),\n          \"softBodyData\",\n          Utils.getArrayReader(this.ModelSoftBodyDataV53),\n          \"boneOffsetData\",\n          Utils.getArrayReader(this.ModelBoneOffsetDataV53),\n        ];\n      },\n\n      // => Version: 52, ReferencedFunction: 0xF2B830\n      52: function () {\n        this.ModelTextureDataV52 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"textureFlags\",\n          \"uint32\",\n          \"token\",\n          Utils.getQWordReader(),\n          \"blitId\",\n          Utils.getQWordReader(),\n          \"uvAnimId\",\n          \"uint32\",\n          \"uvPSInputIndex\",\n          \"uint8\",\n        ];\n\n        this.ModelConstantDataV52 = [\"name\", \"uint32\", \"value\", [\"[]\", \"float32\", 4], \"constantFlags\", \"uint32\"];\n\n        this.ModelMatConstLinkV52 = [\"linkToken\", Utils.getQWordReader(), \"constantToken\", \"uint32\"];\n\n        this.ModelUVTransLinkV52 = [\"linkToken\", Utils.getQWordReader(), \"uvAnimId\", \"uint32\", \"type\", \"uint8\"];\n\n        this.ModelMaterialTexTransformV52 = [\n          \"random\",\n          \"uint8\",\n          \"uvIndex\",\n          \"uint8\",\n          \"columns\",\n          \"uint8\",\n          \"rows\",\n          \"uint8\",\n          \"count\",\n          \"uint16\",\n          \"fps\",\n          \"float32\",\n          \"scroll\",\n          [\"[]\", \"float32\", 2],\n        ];\n\n        this.ModelMaterialDataV52 = [\n          \"materialId\",\n          \"uint32\",\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"materialFlags\",\n          \"uint32\",\n          \"sortOrder\",\n          \"uint32\",\n          \"texCoordCount\",\n          \"uint8\",\n          \"textures\",\n          Utils.getArrayReader(this.ModelTextureDataV52),\n          \"constants\",\n          Utils.getArrayReader(this.ModelConstantDataV52),\n          \"matConstLinks\",\n          Utils.getArrayReader(this.ModelMatConstLinkV52),\n          \"uvTransLinks\",\n          Utils.getArrayReader(this.ModelUVTransLinkV52),\n          \"texTransforms\",\n          Utils.getArrayReader(this.ModelMaterialTexTransformV52),\n        ];\n\n        this.ModelPermutationDataV52 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"materials\",\n          Utils.getRefArrayReader(this.ModelMaterialDataV52),\n        ];\n\n        this.ModelMeshLodDataV52 = [\"indices\", Utils.getArrayReader(\"uint16\")];\n\n        this.ModelMeshMorphVertV52 = [\"index\", \"uint16\", \"vector\", [\"[]\", \"float32\", 3]];\n\n        this.ModelMeshMorphTargetV52 = [\n          \"positions\",\n          Utils.getArrayReader(this.ModelMeshMorphVertV52),\n          \"normals\",\n          Utils.getArrayReader(this.ModelMeshMorphVertV52),\n          \"mesh\",\n          Utils.getQWordReader(),\n        ];\n\n        this.PackGrannyMeshType = [\"mesh\", Utils.getArrayReader(\"uint8\")];\n\n        this.GrBoundData = [\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"boxExtent\",\n          [\"[]\", \"float32\", 3],\n          \"sphereRadius\",\n          \"float32\",\n        ];\n\n        this.ModelMeshDataV52 = [\n          \"visBone\",\n          Utils.getQWordReader(),\n          \"lods\",\n          Utils.getArrayReader(this.ModelMeshLodDataV52),\n          \"morphTargets\",\n          Utils.getArrayReader(this.ModelMeshMorphTargetV52),\n          \"mesh\",\n          this.PackGrannyMeshType,\n          \"flags\",\n          \"uint32\",\n          \"seamVertIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"meshName\",\n          Utils.getQWordReader(),\n          \"minBound\",\n          [\"[]\", \"float32\", 3],\n          \"maxBound\",\n          [\"[]\", \"float32\", 3],\n          \"bounds\",\n          Utils.getArrayReader(this.GrBoundData),\n          \"materialIndex\",\n          \"uint32\",\n          \"materialName\",\n          Utils.getStringReader(),\n        ];\n\n        this.ModelTransformDataV52 = [\n          \"Flags\",\n          \"uint32\",\n          \"Position\",\n          [\"[]\", \"float32\", 3],\n          \"Orientation\",\n          [\"[]\", \"float32\", 4],\n          \"ScaleShear\",\n          [\"[]\", [\"[]\", \"float32\", 3], 3],\n        ];\n\n        this.ModelBoneDataV52 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"ParentIndex\",\n          \"uint32\",\n          \"LocalTransform\",\n          this.ModelTransformDataV52,\n          \"InverseWorld4x4\",\n          [\"[]\", [\"[]\", \"float32\", 4], 4],\n          \"LODError\",\n          \"float32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n        ];\n\n        this.ModelSkeletonDataV52 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Bones\",\n          Utils.getArrayReader(this.ModelBoneDataV52),\n          \"LODType\",\n          \"uint32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n        ];\n\n        this.ModelMeshBindingDataV52 = [\"Mesh\", Utils.getPointerReader(\"uint8\")];\n\n        this.PackGrannyTrackMaskType = [\"trackMask\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelTrackMaskV52 = [\"trackMask\", this.PackGrannyTrackMaskType, \"token\", Utils.getQWordReader()];\n\n        this.ModelModelDataV52 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Skeleton\",\n          Utils.getPointerReader(this.ModelSkeletonDataV52),\n          \"InitialPlacement\",\n          this.ModelTransformDataV52,\n          \"MeshBindings\",\n          Utils.getArrayReader(this.ModelMeshBindingDataV52),\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n          \"boneFlags\",\n          Utils.getArrayReader(\"uint32\"),\n          \"emitterBones\",\n          Utils.getArrayReader(\"uint32\"),\n          \"trackMasks\",\n          Utils.getArrayReader(this.ModelTrackMaskV52),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"radius\",\n          \"float32\",\n        ];\n\n        this.ModelPropertyDataV52 = [\n          \"id\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint32\",\n          \"mergeIndex\",\n          \"uint32\",\n          \"time\",\n          \"float32\",\n          \"val\",\n          Utils.getQWordReader(),\n          \"strVal\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.ModelParticleCloudV52 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"drag\",\n          \"float32\",\n          \"emitterIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"fvf\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"obstacleIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"velocity\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.ModelParticleCurveV52 = [\"curveType\", \"uint8\", \"keys\", Utils.getArrayReader([\"[]\", \"float32\", 2])];\n\n        this.ModelParticleFlipbookV52 = [\n          \"columns\",\n          \"uint8\",\n          \"count\",\n          \"uint8\",\n          \"fps\",\n          \"float32\",\n          \"rows\",\n          \"uint8\",\n          \"start\",\n          \"uint8\",\n        ];\n\n        this.ModelParticleEmitterV52 = [\n          \"acceleration\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"accelerationDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"accelerationDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"alignmentType\",\n          \"uint8\",\n          \"alignmentDir\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorBegin\",\n          [\"[]\", \"float32\", 4],\n          \"colorEnd\",\n          [\"[]\", \"float32\", 4],\n          \"colorPeriod\",\n          \"float32\",\n          \"colorFalloff\",\n          [\"[]\", \"float32\", 2],\n          \"drag\",\n          \"float32\",\n          \"emitterFlags\",\n          \"uint32\",\n          \"offset\",\n          \"float32\",\n          \"opacityCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV52),\n          \"opacityCurvePreset\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"flipbook\",\n          Utils.getPointerReader(this.ModelParticleFlipbookV52),\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"rotationChange\",\n          [\"[]\", \"float32\", 2],\n          \"rotationDrag\",\n          \"float32\",\n          \"rotationInitial\",\n          [\"[]\", \"float32\", 2],\n          \"scaleChange\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleInitial\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV52),\n          \"scaleCurvePreset\",\n          \"uint32\",\n          \"velocity\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"velocityDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"velocityDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"velocityInherit\",\n          [\"[]\", \"float32\", 2],\n          \"spawnGroupSize\",\n          [\"[]\", \"float32\", 2],\n          \"spawnPeriod\",\n          \"float32\",\n          \"spawnProbability\",\n          \"float32\",\n          \"spawnRadius\",\n          [\"[]\", \"float32\", 2],\n          \"spawnShape\",\n          \"uint8\",\n          \"spawnWindEmit\",\n          [\"[]\", \"float32\", 2],\n          \"spawnWindSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"texCoordRect\",\n          [\"[]\", \"float32\", 4],\n          \"windInfluence\",\n          \"uint8\",\n        ];\n\n        this.ModelCloudDataV52 = [\n          \"clouds\",\n          Utils.getArrayReader(this.ModelParticleCloudV52),\n          \"emitters\",\n          Utils.getArrayReader(this.ModelParticleEmitterV52),\n        ];\n\n        this.ModelObstacleDataV52 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"dragCoef\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"geoData\",\n          [\"[]\", \"float32\", 3],\n          \"gravityCoef\",\n          \"float32\",\n          \"response\",\n          \"uint8\",\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.ModelStreakV52 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"velocity\",\n          [\"[]\", \"float32\", 3],\n          \"anchorIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"bone\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"jitter\",\n          \"float32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"noise\",\n          \"float32\",\n          \"spawnDist\",\n          \"float32\",\n          \"texScale\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n        ];\n\n        this.ModelStreakAnchorV52 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorStart\",\n          \"uint32\",\n          \"colorEnd\",\n          \"uint32\",\n          \"falloff\",\n          \"float32\",\n          \"lifetime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"texV\",\n          \"float32\",\n        ];\n\n        this.ModelStreakDataV52 = [\n          \"streaks\",\n          Utils.getArrayReader(this.ModelStreakV52),\n          \"anchors\",\n          Utils.getArrayReader(this.ModelStreakAnchorV52),\n        ];\n\n        this.ModelEffectLightV52 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"farDistance\",\n          \"float32\",\n          \"intensity\",\n          \"float32\",\n          \"nearDistance\",\n          \"float32\",\n        ];\n\n        this.ModelLightDataV52 = [\"effectLights\", Utils.getArrayReader(this.ModelEffectLightV52)];\n\n        this.PackVertexType = [\"fvf\", \"uint32\", \"vertices\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelClothBoneWeightV52 = [\"token\", Utils.getQWordReader(), \"weight\", \"uint8\"];\n\n        this.ModelClothMeshGroupV52 = [\"weights\", Utils.getArrayReader(this.ModelClothBoneWeightV52)];\n\n        this.ModelClothSoftLockV52 = [\"weight\", \"uint8\", \"vertIndex\", \"uint16\"];\n\n        this.ModelClothConstraintV52 = [\n          \"distance\",\n          \"uint16\",\n          \"relationship\",\n          \"uint16\",\n          \"vertIndexA\",\n          \"uint16\",\n          \"vertIndexB\",\n          \"uint16\",\n        ];\n\n        this.ModelClothObstacleV52 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint8\",\n          \"depth\",\n          \"float32\",\n          \"height\",\n          \"float32\",\n          \"radius\",\n          \"float32\",\n          \"width\",\n          \"float32\",\n        ];\n\n        this.ModelClothDataV52 = [\n          \"materialIndex\",\n          \"uint32\",\n          \"flags\",\n          \"uint8\",\n          \"drag\",\n          \"float32\",\n          \"gravity\",\n          \"float32\",\n          \"compressibility\",\n          \"float32\",\n          \"stretchiness\",\n          \"float32\",\n          \"weight\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n          \"rigidness\",\n          \"uint8\",\n          \"mesh\",\n          this.PackVertexType,\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"lockCount\",\n          \"uint16\",\n          \"groups\",\n          Utils.getArrayReader(this.ModelClothMeshGroupV52),\n          \"softLocks\",\n          Utils.getArrayReader(this.ModelClothSoftLockV52),\n          \"lod0Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV52),\n          \"lod1Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV52),\n          \"lod1VertexCount\",\n          \"uint16\",\n          \"lod1Indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"barycentricCoords\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"barycentricIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelClothObstacleV52),\n        ];\n\n        this.ModelLightningSystemV52 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"boltIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"flags\",\n          \"uint32\",\n          \"fvf\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelLightningBoltV52 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"nodeIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"colorBegin\",\n          [\"[]\", \"uint32\", 3],\n          \"colorEnd\",\n          [\"[]\", \"uint32\", 3],\n          \"colorPeriod\",\n          \"float32\",\n          \"colorFalloff\",\n          [\"[]\", \"float32\", 2],\n          \"flags\",\n          \"uint32\",\n          \"fps\",\n          \"float32\",\n          \"probability\",\n          \"float32\",\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"numSegments\",\n          \"uint16\",\n          \"opacity\",\n          [\"[]\", \"float32\", 2],\n          \"opacityPreset\",\n          \"uint8\",\n          \"period\",\n          \"float32\",\n          \"texOffset\",\n          \"float32\",\n          \"texScale\",\n          \"float32\",\n          \"texSpeed\",\n          \"float32\",\n          \"thickness\",\n          \"float32\",\n          \"thicknessPreset\",\n          \"uint8\",\n          \"type\",\n          \"uint8\",\n          \"variance\",\n          \"float32\",\n          \"variancePreset\",\n          \"uint8\",\n          \"noise\",\n          \"float32\",\n        ];\n\n        this.ModelLightningNodeV52 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"childrenIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"flags\",\n          \"uint32\",\n          \"probability\",\n          \"float32\",\n          \"radius\",\n          [\"[]\", \"float32\", 2],\n          \"shape\",\n          \"uint8\",\n          \"updatePos\",\n          \"float32\",\n        ];\n\n        this.ModelLightningDataV52 = [\n          \"systems\",\n          Utils.getArrayReader(this.ModelLightningSystemV52),\n          \"bolts\",\n          Utils.getArrayReader(this.ModelLightningBoltV52),\n          \"nodes\",\n          Utils.getArrayReader(this.ModelLightningNodeV52),\n        ];\n\n        this.ModelBoneConstraintLinkV52 = [\n          \"angle\",\n          \"float32\",\n          \"azimuth\",\n          \"float32\",\n          \"distance\",\n          [\"[]\", \"float32\", 2],\n          \"token\",\n          Utils.getQWordReader(),\n        ];\n\n        this.ModelBoneConstraintV52 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint16\",\n          \"twistOffset\",\n          \"float32\",\n          \"animBlend\",\n          \"float32\",\n          \"drag\",\n          \"float32\",\n          \"ellipseRatio\",\n          \"float32\",\n          \"gravity\",\n          \"float32\",\n          \"collisionRadius\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n          \"angle\",\n          [\"[]\", \"float32\", 2],\n          \"angleStrength\",\n          \"float32\",\n          \"angleType\",\n          \"uint8\",\n          \"distanceInner\",\n          [\"[]\", \"float32\", 2],\n          \"distanceInnerStrength\",\n          \"float32\",\n          \"distanceInnerType\",\n          \"uint8\",\n          \"links\",\n          Utils.getArrayReader(this.ModelBoneConstraintLinkV52),\n          \"distanceOuter\",\n          [\"[]\", \"float32\", 2],\n          \"distanceOuterStrength\",\n          \"float32\",\n          \"distanceOuterType\",\n          \"uint8\",\n          \"twist\",\n          [\"[]\", \"float32\", 2],\n          \"twistStrength\",\n          \"float32\",\n          \"twistType\",\n          \"uint8\",\n        ];\n\n        this.ModelSoftBodyDataV52 = [\n          \"materialIndex\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"vertexFvf\",\n          \"uint32\",\n          \"vertBytes\",\n          Utils.getArrayReader(\"uint8\"),\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"bones\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.ModelBoneOffsetDataV52 = [\"bone\", Utils.getQWordReader(), \"offset\", [\"[]\", \"float32\", 3]];\n\n        this.__root = this.ModelFileDataV52 = [\n          \"permutations\",\n          Utils.getArrayReader(this.ModelPermutationDataV52),\n          \"meshes\",\n          Utils.getRefArrayReader(this.ModelMeshDataV52),\n          \"model\",\n          Utils.getPointerReader(this.ModelModelDataV52),\n          \"properties\",\n          Utils.getArrayReader(this.ModelPropertyDataV52),\n          \"cloudData\",\n          Utils.getPointerReader(this.ModelCloudDataV52),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelObstacleDataV52),\n          \"streakData\",\n          Utils.getPointerReader(this.ModelStreakDataV52),\n          \"lightData\",\n          Utils.getPointerReader(this.ModelLightDataV52),\n          \"clothData\",\n          Utils.getArrayReader(this.ModelClothDataV52),\n          \"actionOffsetNames\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"actionOffsets\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"lodOverride\",\n          [\"[]\", \"float32\", 2],\n          \"soundScript\",\n          Utils.getFileNameReader(),\n          \"lightningData\",\n          Utils.getPointerReader(this.ModelLightningDataV52),\n          \"boneConstraints\",\n          Utils.getArrayReader(this.ModelBoneConstraintV52),\n          \"softBodyData\",\n          Utils.getArrayReader(this.ModelSoftBodyDataV52),\n          \"boneOffsetData\",\n          Utils.getArrayReader(this.ModelBoneOffsetDataV52),\n        ];\n      },\n\n      // => Version: 51, ReferencedFunction: 0xF2B5B0\n      51: function () {\n        this.ModelTextureDataV51 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"textureFlags\",\n          \"uint32\",\n          \"token\",\n          Utils.getQWordReader(),\n          \"blitId\",\n          Utils.getQWordReader(),\n          \"uvAnimId\",\n          \"uint32\",\n          \"uvPSInputIndex\",\n          \"uint8\",\n        ];\n\n        this.ModelConstantDataV51 = [\"name\", \"uint32\", \"value\", [\"[]\", \"float32\", 4], \"constantFlags\", \"uint32\"];\n\n        this.ModelMatConstLinkV51 = [\"linkToken\", Utils.getQWordReader(), \"constantToken\", \"uint32\"];\n\n        this.ModelUVTransLinkV51 = [\"linkToken\", Utils.getQWordReader(), \"uvAnimId\", \"uint32\", \"type\", \"uint8\"];\n\n        this.ModelMaterialTexTransformV51 = [\n          \"random\",\n          \"uint8\",\n          \"uvIndex\",\n          \"uint8\",\n          \"columns\",\n          \"uint8\",\n          \"rows\",\n          \"uint8\",\n          \"count\",\n          \"uint16\",\n          \"fps\",\n          \"float32\",\n          \"scroll\",\n          [\"[]\", \"float32\", 2],\n        ];\n\n        this.ModelMaterialDataV51 = [\n          \"materialId\",\n          \"uint32\",\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"materialFlags\",\n          \"uint32\",\n          \"sortOrder\",\n          \"uint32\",\n          \"texCoordCount\",\n          \"uint8\",\n          \"textures\",\n          Utils.getArrayReader(this.ModelTextureDataV51),\n          \"constants\",\n          Utils.getArrayReader(this.ModelConstantDataV51),\n          \"matConstLinks\",\n          Utils.getArrayReader(this.ModelMatConstLinkV51),\n          \"uvTransLinks\",\n          Utils.getArrayReader(this.ModelUVTransLinkV51),\n          \"texTransforms\",\n          Utils.getArrayReader(this.ModelMaterialTexTransformV51),\n        ];\n\n        this.ModelPermutationDataV51 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"materials\",\n          Utils.getRefArrayReader(this.ModelMaterialDataV51),\n        ];\n\n        this.ModelMeshLodDataV51 = [\"indices\", Utils.getArrayReader(\"uint16\")];\n\n        this.ModelMeshMorphVertV51 = [\"index\", \"uint16\", \"vector\", [\"[]\", \"float32\", 3]];\n\n        this.ModelMeshMorphTargetV51 = [\n          \"positions\",\n          Utils.getArrayReader(this.ModelMeshMorphVertV51),\n          \"normals\",\n          Utils.getArrayReader(this.ModelMeshMorphVertV51),\n          \"mesh\",\n          Utils.getQWordReader(),\n        ];\n\n        this.PackGrannyMeshType = [\"mesh\", Utils.getArrayReader(\"uint8\")];\n\n        this.GrBoundData = [\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"boxExtent\",\n          [\"[]\", \"float32\", 3],\n          \"sphereRadius\",\n          \"float32\",\n        ];\n\n        this.ModelMeshDataV51 = [\n          \"visBone\",\n          Utils.getQWordReader(),\n          \"lods\",\n          Utils.getArrayReader(this.ModelMeshLodDataV51),\n          \"morphTargets\",\n          Utils.getArrayReader(this.ModelMeshMorphTargetV51),\n          \"mesh\",\n          this.PackGrannyMeshType,\n          \"flags\",\n          \"uint32\",\n          \"seamVertIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"meshName\",\n          Utils.getQWordReader(),\n          \"minBound\",\n          [\"[]\", \"float32\", 3],\n          \"maxBound\",\n          [\"[]\", \"float32\", 3],\n          \"bounds\",\n          Utils.getArrayReader(this.GrBoundData),\n          \"materialIndex\",\n          \"uint32\",\n          \"materialName\",\n          Utils.getStringReader(),\n        ];\n\n        this.ModelTransformDataV51 = [\n          \"Flags\",\n          \"uint32\",\n          \"Position\",\n          [\"[]\", \"float32\", 3],\n          \"Orientation\",\n          [\"[]\", \"float32\", 4],\n          \"ScaleShear\",\n          [\"[]\", [\"[]\", \"float32\", 3], 3],\n        ];\n\n        this.ModelBoneDataV51 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"ParentIndex\",\n          \"uint32\",\n          \"LocalTransform\",\n          this.ModelTransformDataV51,\n          \"InverseWorld4x4\",\n          [\"[]\", [\"[]\", \"float32\", 4], 4],\n          \"LODError\",\n          \"float32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n        ];\n\n        this.ModelSkeletonDataV51 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Bones\",\n          Utils.getArrayReader(this.ModelBoneDataV51),\n          \"LODType\",\n          \"uint32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n        ];\n\n        this.ModelMeshBindingDataV51 = [\"Mesh\", Utils.getPointerReader(\"uint8\")];\n\n        this.PackGrannyTrackMaskType = [\"trackMask\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelTrackMaskV51 = [\"trackMask\", this.PackGrannyTrackMaskType, \"token\", Utils.getQWordReader()];\n\n        this.ModelModelDataV51 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Skeleton\",\n          Utils.getPointerReader(this.ModelSkeletonDataV51),\n          \"InitialPlacement\",\n          this.ModelTransformDataV51,\n          \"MeshBindings\",\n          Utils.getArrayReader(this.ModelMeshBindingDataV51),\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n          \"boneFlags\",\n          Utils.getArrayReader(\"uint32\"),\n          \"emitterBones\",\n          Utils.getArrayReader(\"uint32\"),\n          \"trackMasks\",\n          Utils.getArrayReader(this.ModelTrackMaskV51),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"radius\",\n          \"float32\",\n        ];\n\n        this.ModelPropertyDataV51 = [\n          \"id\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint32\",\n          \"mergeIndex\",\n          \"uint32\",\n          \"time\",\n          \"float32\",\n          \"val\",\n          Utils.getQWordReader(),\n          \"strVal\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.ModelParticleCloudV51 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"drag\",\n          \"float32\",\n          \"emitterIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"fvf\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"obstacleIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"velocity\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.ModelParticleCurveV51 = [\"curveType\", \"uint8\", \"keys\", Utils.getArrayReader([\"[]\", \"float32\", 2])];\n\n        this.ModelParticleFlipbookV51 = [\n          \"columns\",\n          \"uint8\",\n          \"count\",\n          \"uint8\",\n          \"fps\",\n          \"float32\",\n          \"rows\",\n          \"uint8\",\n          \"start\",\n          \"uint8\",\n        ];\n\n        this.ModelParticleEmitterV51 = [\n          \"acceleration\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"accelerationDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"accelerationDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"alignmentType\",\n          \"uint8\",\n          \"alignmentDir\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorBegin\",\n          [\"[]\", \"float32\", 4],\n          \"colorEnd\",\n          [\"[]\", \"float32\", 4],\n          \"colorPeriod\",\n          \"float32\",\n          \"colorFalloff\",\n          [\"[]\", \"float32\", 2],\n          \"drag\",\n          \"float32\",\n          \"emitterFlags\",\n          \"uint32\",\n          \"offset\",\n          \"float32\",\n          \"opacityCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV51),\n          \"opacityCurvePreset\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"flipbook\",\n          Utils.getPointerReader(this.ModelParticleFlipbookV51),\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"rotationChange\",\n          [\"[]\", \"float32\", 2],\n          \"rotationDrag\",\n          \"float32\",\n          \"rotationInitial\",\n          [\"[]\", \"float32\", 2],\n          \"scaleChange\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleInitial\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV51),\n          \"scaleCurvePreset\",\n          \"uint32\",\n          \"velocity\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"velocityDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"velocityDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"velocityInherit\",\n          [\"[]\", \"float32\", 2],\n          \"spawnGroupSize\",\n          [\"[]\", \"float32\", 2],\n          \"spawnPeriod\",\n          \"float32\",\n          \"spawnProbability\",\n          \"float32\",\n          \"spawnRadius\",\n          [\"[]\", \"float32\", 2],\n          \"spawnShape\",\n          \"uint8\",\n          \"spawnWindEmit\",\n          [\"[]\", \"float32\", 2],\n          \"spawnWindSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"texCoordRect\",\n          [\"[]\", \"float32\", 4],\n          \"windInfluence\",\n          \"uint8\",\n        ];\n\n        this.ModelCloudDataV51 = [\n          \"clouds\",\n          Utils.getArrayReader(this.ModelParticleCloudV51),\n          \"emitters\",\n          Utils.getArrayReader(this.ModelParticleEmitterV51),\n        ];\n\n        this.ModelObstacleDataV51 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"dragCoef\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"geoData\",\n          [\"[]\", \"float32\", 3],\n          \"gravityCoef\",\n          \"float32\",\n          \"response\",\n          \"uint8\",\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.ModelStreakV51 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"velocity\",\n          [\"[]\", \"float32\", 3],\n          \"anchorIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"bone\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"jitter\",\n          \"float32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"noise\",\n          \"float32\",\n          \"spawnDist\",\n          \"float32\",\n          \"texScale\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n        ];\n\n        this.ModelStreakAnchorV51 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorStart\",\n          \"uint32\",\n          \"colorEnd\",\n          \"uint32\",\n          \"falloff\",\n          \"float32\",\n          \"lifetime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"texV\",\n          \"float32\",\n        ];\n\n        this.ModelStreakDataV51 = [\n          \"streaks\",\n          Utils.getArrayReader(this.ModelStreakV51),\n          \"anchors\",\n          Utils.getArrayReader(this.ModelStreakAnchorV51),\n        ];\n\n        this.ModelEffectLightV51 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"farDistance\",\n          \"float32\",\n          \"intensity\",\n          \"float32\",\n          \"nearDistance\",\n          \"float32\",\n        ];\n\n        this.ModelLightDataV51 = [\"effectLights\", Utils.getArrayReader(this.ModelEffectLightV51)];\n\n        this.PackVertexType = [\"fvf\", \"uint32\", \"vertices\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelClothBoneWeightV51 = [\"token\", Utils.getQWordReader(), \"weight\", \"uint8\"];\n\n        this.ModelClothMeshGroupV51 = [\"weights\", Utils.getArrayReader(this.ModelClothBoneWeightV51)];\n\n        this.ModelClothConstraintV51 = [\"vertIndexA\", \"uint16\", \"vertIndexB\", \"uint16\", \"distance\", \"float32\"];\n\n        this.ModelClothObstacleV51 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint8\",\n          \"depth\",\n          \"float32\",\n          \"height\",\n          \"float32\",\n          \"radius\",\n          \"float32\",\n          \"width\",\n          \"float32\",\n        ];\n\n        this.ModelClothDataV51 = [\n          \"materialIndex\",\n          \"uint32\",\n          \"flags\",\n          \"uint8\",\n          \"gravity\",\n          \"float32\",\n          \"weight\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n          \"rigidness\",\n          \"uint8\",\n          \"mesh\",\n          this.PackVertexType,\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"lockCount\",\n          \"uint16\",\n          \"groups\",\n          Utils.getArrayReader(this.ModelClothMeshGroupV51),\n          \"softLocks\",\n          Utils.getArrayReader(\"uint8\"),\n          \"lod0Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV51),\n          \"lod1Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV51),\n          \"lod1VertexCount\",\n          \"uint16\",\n          \"lod1Indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"barycentricCoords\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"barycentricIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelClothObstacleV51),\n        ];\n\n        this.ModelLightningSystemV51 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"boltIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"flags\",\n          \"uint32\",\n          \"fvf\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelLightningBoltV51 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"nodeIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"colorBegin\",\n          [\"[]\", \"uint32\", 3],\n          \"colorEnd\",\n          [\"[]\", \"uint32\", 3],\n          \"colorPeriod\",\n          \"float32\",\n          \"colorFalloff\",\n          [\"[]\", \"float32\", 2],\n          \"flags\",\n          \"uint32\",\n          \"fps\",\n          \"float32\",\n          \"probability\",\n          \"float32\",\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"numSegments\",\n          \"uint16\",\n          \"opacity\",\n          [\"[]\", \"float32\", 2],\n          \"opacityPreset\",\n          \"uint8\",\n          \"period\",\n          \"float32\",\n          \"texOffset\",\n          \"float32\",\n          \"texScale\",\n          \"float32\",\n          \"texSpeed\",\n          \"float32\",\n          \"thickness\",\n          \"float32\",\n          \"thicknessPreset\",\n          \"uint8\",\n          \"type\",\n          \"uint8\",\n          \"variance\",\n          \"float32\",\n          \"variancePreset\",\n          \"uint8\",\n          \"noise\",\n          \"float32\",\n        ];\n\n        this.ModelLightningNodeV51 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"childrenIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"flags\",\n          \"uint32\",\n          \"probability\",\n          \"float32\",\n          \"radius\",\n          [\"[]\", \"float32\", 2],\n          \"shape\",\n          \"uint8\",\n          \"updatePos\",\n          \"float32\",\n        ];\n\n        this.ModelLightningDataV51 = [\n          \"systems\",\n          Utils.getArrayReader(this.ModelLightningSystemV51),\n          \"bolts\",\n          Utils.getArrayReader(this.ModelLightningBoltV51),\n          \"nodes\",\n          Utils.getArrayReader(this.ModelLightningNodeV51),\n        ];\n\n        this.ModelBoneConstraintLinkV51 = [\n          \"angle\",\n          \"float32\",\n          \"azimuth\",\n          \"float32\",\n          \"distance\",\n          [\"[]\", \"float32\", 2],\n          \"token\",\n          Utils.getQWordReader(),\n        ];\n\n        this.ModelBoneConstraintV51 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint16\",\n          \"twistOffset\",\n          \"float32\",\n          \"animBlend\",\n          \"float32\",\n          \"drag\",\n          \"float32\",\n          \"ellipseRatio\",\n          \"float32\",\n          \"gravity\",\n          \"float32\",\n          \"collisionRadius\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n          \"angle\",\n          [\"[]\", \"float32\", 2],\n          \"angleStrength\",\n          \"float32\",\n          \"angleType\",\n          \"uint8\",\n          \"distanceInner\",\n          [\"[]\", \"float32\", 2],\n          \"distanceInnerStrength\",\n          \"float32\",\n          \"distanceInnerType\",\n          \"uint8\",\n          \"links\",\n          Utils.getArrayReader(this.ModelBoneConstraintLinkV51),\n          \"distanceOuter\",\n          [\"[]\", \"float32\", 2],\n          \"distanceOuterStrength\",\n          \"float32\",\n          \"distanceOuterType\",\n          \"uint8\",\n          \"twist\",\n          [\"[]\", \"float32\", 2],\n          \"twistStrength\",\n          \"float32\",\n          \"twistType\",\n          \"uint8\",\n        ];\n\n        this.ModelSoftBodyDataV51 = [\n          \"materialIndex\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"vertexFvf\",\n          \"uint32\",\n          \"vertBytes\",\n          Utils.getArrayReader(\"uint8\"),\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"bones\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.ModelBoneOffsetDataV51 = [\"bone\", Utils.getQWordReader(), \"offset\", [\"[]\", \"float32\", 3]];\n\n        this.__root = this.ModelFileDataV51 = [\n          \"permutations\",\n          Utils.getArrayReader(this.ModelPermutationDataV51),\n          \"meshes\",\n          Utils.getRefArrayReader(this.ModelMeshDataV51),\n          \"model\",\n          Utils.getPointerReader(this.ModelModelDataV51),\n          \"properties\",\n          Utils.getArrayReader(this.ModelPropertyDataV51),\n          \"cloudData\",\n          Utils.getPointerReader(this.ModelCloudDataV51),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelObstacleDataV51),\n          \"streakData\",\n          Utils.getPointerReader(this.ModelStreakDataV51),\n          \"lightData\",\n          Utils.getPointerReader(this.ModelLightDataV51),\n          \"clothData\",\n          Utils.getArrayReader(this.ModelClothDataV51),\n          \"actionOffsetNames\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"actionOffsets\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"lodOverride\",\n          [\"[]\", \"float32\", 2],\n          \"soundScript\",\n          Utils.getFileNameReader(),\n          \"lightningData\",\n          Utils.getPointerReader(this.ModelLightningDataV51),\n          \"boneConstraints\",\n          Utils.getArrayReader(this.ModelBoneConstraintV51),\n          \"softBodyData\",\n          Utils.getArrayReader(this.ModelSoftBodyDataV51),\n          \"boneOffsetData\",\n          Utils.getArrayReader(this.ModelBoneOffsetDataV51),\n        ];\n      },\n\n      // => Version: 50, ReferencedFunction: 0xF2B570\n      50: function () {\n        this.ModelTextureDataV50 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"textureFlags\",\n          \"uint32\",\n          \"token\",\n          Utils.getQWordReader(),\n          \"blitId\",\n          Utils.getQWordReader(),\n          \"uvAnimId\",\n          \"uint32\",\n          \"uvPSInputIndex\",\n          \"uint8\",\n        ];\n\n        this.ModelConstantDataV50 = [\"name\", \"uint32\", \"value\", [\"[]\", \"float32\", 4], \"constantFlags\", \"uint32\"];\n\n        this.ModelMatConstLinkV50 = [\"linkToken\", Utils.getQWordReader(), \"constantToken\", \"uint32\"];\n\n        this.ModelUVTransLinkV50 = [\"linkToken\", Utils.getQWordReader(), \"uvAnimId\", \"uint32\", \"type\", \"uint8\"];\n\n        this.ModelMaterialTexTransformV50 = [\n          \"random\",\n          \"uint8\",\n          \"uvIndex\",\n          \"uint8\",\n          \"columns\",\n          \"uint8\",\n          \"rows\",\n          \"uint8\",\n          \"count\",\n          \"uint16\",\n          \"fps\",\n          \"float32\",\n          \"scroll\",\n          [\"[]\", \"float32\", 2],\n        ];\n\n        this.ModelMaterialDataV50 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"materialFlags\",\n          \"uint32\",\n          \"sortOrder\",\n          \"uint32\",\n          \"texCoordCount\",\n          \"uint8\",\n          \"textures\",\n          Utils.getArrayReader(this.ModelTextureDataV50),\n          \"constants\",\n          Utils.getArrayReader(this.ModelConstantDataV50),\n          \"matConstLinks\",\n          Utils.getArrayReader(this.ModelMatConstLinkV50),\n          \"uvTransLinks\",\n          Utils.getArrayReader(this.ModelUVTransLinkV50),\n          \"texTransforms\",\n          Utils.getArrayReader(this.ModelMaterialTexTransformV50),\n        ];\n\n        this.ModelMeshLodDataV50 = [\"indices\", Utils.getArrayReader(\"uint16\")];\n\n        this.ModelMeshMorphVertV50 = [\"index\", \"uint16\", \"vector\", [\"[]\", \"float32\", 3]];\n\n        this.ModelMeshMorphTargetV50 = [\n          \"positions\",\n          Utils.getArrayReader(this.ModelMeshMorphVertV50),\n          \"normals\",\n          Utils.getArrayReader(this.ModelMeshMorphVertV50),\n          \"mesh\",\n          Utils.getQWordReader(),\n        ];\n\n        this.PackGrannyMeshType = [\"mesh\", Utils.getArrayReader(\"uint8\")];\n\n        this.GrBoundData = [\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"boxExtent\",\n          [\"[]\", \"float32\", 3],\n          \"sphereRadius\",\n          \"float32\",\n        ];\n\n        this.ModelMeshDataV50 = [\n          \"visBone\",\n          Utils.getQWordReader(),\n          \"lods\",\n          Utils.getArrayReader(this.ModelMeshLodDataV50),\n          \"morphTargets\",\n          Utils.getArrayReader(this.ModelMeshMorphTargetV50),\n          \"mesh\",\n          this.PackGrannyMeshType,\n          \"flags\",\n          \"uint32\",\n          \"seamVertIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"meshName\",\n          Utils.getQWordReader(),\n          \"minBound\",\n          [\"[]\", \"float32\", 3],\n          \"maxBound\",\n          [\"[]\", \"float32\", 3],\n          \"bounds\",\n          Utils.getArrayReader(this.GrBoundData),\n        ];\n\n        this.ModelTransformDataV50 = [\n          \"Flags\",\n          \"uint32\",\n          \"Position\",\n          [\"[]\", \"float32\", 3],\n          \"Orientation\",\n          [\"[]\", \"float32\", 4],\n          \"ScaleShear\",\n          [\"[]\", [\"[]\", \"float32\", 3], 3],\n        ];\n\n        this.ModelBoneDataV50 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"ParentIndex\",\n          \"uint32\",\n          \"LocalTransform\",\n          this.ModelTransformDataV50,\n          \"InverseWorld4x4\",\n          [\"[]\", [\"[]\", \"float32\", 4], 4],\n          \"LODError\",\n          \"float32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n        ];\n\n        this.ModelSkeletonDataV50 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Bones\",\n          Utils.getArrayReader(this.ModelBoneDataV50),\n          \"LODType\",\n          \"uint32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n        ];\n\n        this.ModelMeshBindingDataV50 = [\"Mesh\", Utils.getPointerReader(\"uint8\")];\n\n        this.PackGrannyTrackMaskType = [\"trackMask\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelTrackMaskV50 = [\"trackMask\", this.PackGrannyTrackMaskType, \"token\", Utils.getQWordReader()];\n\n        this.ModelModelDataV50 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Skeleton\",\n          Utils.getPointerReader(this.ModelSkeletonDataV50),\n          \"InitialPlacement\",\n          this.ModelTransformDataV50,\n          \"MeshBindings\",\n          Utils.getArrayReader(this.ModelMeshBindingDataV50),\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n          \"boneFlags\",\n          Utils.getArrayReader(\"uint32\"),\n          \"emitterBones\",\n          Utils.getArrayReader(\"uint32\"),\n          \"trackMasks\",\n          Utils.getArrayReader(this.ModelTrackMaskV50),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"radius\",\n          \"float32\",\n        ];\n\n        this.ModelPropertyDataV50 = [\n          \"id\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint32\",\n          \"mergeIndex\",\n          \"uint32\",\n          \"time\",\n          \"float32\",\n          \"val\",\n          Utils.getQWordReader(),\n          \"strVal\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.ModelParticleCloudV50 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"drag\",\n          \"float32\",\n          \"emitterIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"fvf\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"obstacleIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"velocity\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.ModelParticleCurveV50 = [\"curveType\", \"uint8\", \"keys\", Utils.getArrayReader([\"[]\", \"float32\", 2])];\n\n        this.ModelParticleFlipbookV50 = [\n          \"columns\",\n          \"uint8\",\n          \"count\",\n          \"uint8\",\n          \"fps\",\n          \"float32\",\n          \"rows\",\n          \"uint8\",\n          \"start\",\n          \"uint8\",\n        ];\n\n        this.ModelParticleEmitterV50 = [\n          \"acceleration\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"accelerationDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"accelerationDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"alignmentType\",\n          \"uint8\",\n          \"alignmentDir\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorBegin\",\n          [\"[]\", \"float32\", 4],\n          \"colorEnd\",\n          [\"[]\", \"float32\", 4],\n          \"colorPeriod\",\n          \"float32\",\n          \"colorFalloff\",\n          [\"[]\", \"float32\", 2],\n          \"drag\",\n          \"float32\",\n          \"emitterFlags\",\n          \"uint32\",\n          \"offset\",\n          \"float32\",\n          \"opacityCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV50),\n          \"opacityCurvePreset\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"flipbook\",\n          Utils.getPointerReader(this.ModelParticleFlipbookV50),\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"rotationChange\",\n          [\"[]\", \"float32\", 2],\n          \"rotationDrag\",\n          \"float32\",\n          \"rotationInitial\",\n          [\"[]\", \"float32\", 2],\n          \"scaleChange\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleInitial\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV50),\n          \"scaleCurvePreset\",\n          \"uint32\",\n          \"velocity\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"velocityDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"velocityDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"velocityInherit\",\n          [\"[]\", \"float32\", 2],\n          \"spawnGroupSize\",\n          [\"[]\", \"float32\", 2],\n          \"spawnPeriod\",\n          \"float32\",\n          \"spawnProbability\",\n          \"float32\",\n          \"spawnRadius\",\n          [\"[]\", \"float32\", 2],\n          \"spawnShape\",\n          \"uint8\",\n          \"spawnWindEmit\",\n          [\"[]\", \"float32\", 2],\n          \"spawnWindSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"texCoordRect\",\n          [\"[]\", \"float32\", 4],\n          \"windInfluence\",\n          \"uint8\",\n        ];\n\n        this.ModelCloudDataV50 = [\n          \"clouds\",\n          Utils.getArrayReader(this.ModelParticleCloudV50),\n          \"emitters\",\n          Utils.getArrayReader(this.ModelParticleEmitterV50),\n        ];\n\n        this.ModelObstacleDataV50 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"dragCoef\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"geoData\",\n          [\"[]\", \"float32\", 3],\n          \"gravityCoef\",\n          \"float32\",\n          \"response\",\n          \"uint8\",\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.ModelStreakV50 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"velocity\",\n          [\"[]\", \"float32\", 3],\n          \"anchorIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"bone\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"jitter\",\n          \"float32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"noise\",\n          \"float32\",\n          \"spawnDist\",\n          \"float32\",\n          \"texScale\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n        ];\n\n        this.ModelStreakAnchorV50 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorStart\",\n          \"uint32\",\n          \"colorEnd\",\n          \"uint32\",\n          \"falloff\",\n          \"float32\",\n          \"lifetime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"texV\",\n          \"float32\",\n        ];\n\n        this.ModelStreakDataV50 = [\n          \"streaks\",\n          Utils.getArrayReader(this.ModelStreakV50),\n          \"anchors\",\n          Utils.getArrayReader(this.ModelStreakAnchorV50),\n        ];\n\n        this.ModelEffectLightV50 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"farDistance\",\n          \"float32\",\n          \"intensity\",\n          \"float32\",\n          \"nearDistance\",\n          \"float32\",\n        ];\n\n        this.ModelLightDataV50 = [\"effectLights\", Utils.getArrayReader(this.ModelEffectLightV50)];\n\n        this.PackVertexType = [\"fvf\", \"uint32\", \"vertices\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelClothBoneWeightV50 = [\"token\", Utils.getQWordReader(), \"weight\", \"uint8\"];\n\n        this.ModelClothMeshGroupV50 = [\"weights\", Utils.getArrayReader(this.ModelClothBoneWeightV50)];\n\n        this.ModelClothConstraintV50 = [\"vertIndexA\", \"uint16\", \"vertIndexB\", \"uint16\", \"distance\", \"float32\"];\n\n        this.ModelClothObstacleV50 = [\"bone\", Utils.getQWordReader(), \"type\", \"uint8\"];\n\n        this.ModelClothDataV50 = [\n          \"materialIndex\",\n          \"uint32\",\n          \"flags\",\n          \"uint8\",\n          \"gravity\",\n          \"float32\",\n          \"weight\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n          \"rigidness\",\n          \"uint8\",\n          \"mesh\",\n          this.PackVertexType,\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"lockCount\",\n          \"uint16\",\n          \"groups\",\n          Utils.getArrayReader(this.ModelClothMeshGroupV50),\n          \"softLocks\",\n          Utils.getArrayReader(\"uint8\"),\n          \"lod0Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV50),\n          \"lod1Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV50),\n          \"lod1VertexCount\",\n          \"uint16\",\n          \"lod1Indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"barycentricCoords\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"barycentricIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelClothObstacleV50),\n        ];\n\n        this.ModelLightningSystemV50 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"boltIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"flags\",\n          \"uint32\",\n          \"fvf\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelLightningBoltV50 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"nodeIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"colorBegin\",\n          [\"[]\", \"uint32\", 3],\n          \"colorEnd\",\n          [\"[]\", \"uint32\", 3],\n          \"colorPeriod\",\n          \"float32\",\n          \"colorFalloff\",\n          [\"[]\", \"float32\", 2],\n          \"flags\",\n          \"uint32\",\n          \"fps\",\n          \"float32\",\n          \"probability\",\n          \"float32\",\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"numSegments\",\n          \"uint16\",\n          \"opacity\",\n          [\"[]\", \"float32\", 2],\n          \"opacityPreset\",\n          \"uint8\",\n          \"period\",\n          \"float32\",\n          \"texOffset\",\n          \"float32\",\n          \"texScale\",\n          \"float32\",\n          \"texSpeed\",\n          \"float32\",\n          \"thickness\",\n          \"float32\",\n          \"thicknessPreset\",\n          \"uint8\",\n          \"type\",\n          \"uint8\",\n          \"variance\",\n          \"float32\",\n          \"variancePreset\",\n          \"uint8\",\n          \"noise\",\n          \"float32\",\n        ];\n\n        this.ModelLightningNodeV50 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"childrenIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"flags\",\n          \"uint32\",\n          \"probability\",\n          \"float32\",\n          \"radius\",\n          \"float32\",\n          \"shape\",\n          \"uint8\",\n          \"updatePos\",\n          \"float32\",\n        ];\n\n        this.ModelLightningDataV50 = [\n          \"systems\",\n          Utils.getArrayReader(this.ModelLightningSystemV50),\n          \"bolts\",\n          Utils.getArrayReader(this.ModelLightningBoltV50),\n          \"nodes\",\n          Utils.getArrayReader(this.ModelLightningNodeV50),\n        ];\n\n        this.ModelBoneConstraintLinkV50 = [\n          \"angle\",\n          \"float32\",\n          \"azimuth\",\n          \"float32\",\n          \"distance\",\n          [\"[]\", \"float32\", 2],\n          \"token\",\n          Utils.getQWordReader(),\n        ];\n\n        this.ModelBoneConstraintV50 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint16\",\n          \"twistOffset\",\n          \"float32\",\n          \"animBlend\",\n          \"float32\",\n          \"drag\",\n          \"float32\",\n          \"ellipseRatio\",\n          \"float32\",\n          \"gravity\",\n          \"float32\",\n          \"collisionRadius\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n          \"angle\",\n          [\"[]\", \"float32\", 2],\n          \"angleStrength\",\n          \"float32\",\n          \"angleType\",\n          \"uint8\",\n          \"distanceInner\",\n          [\"[]\", \"float32\", 2],\n          \"distanceInnerStrength\",\n          \"float32\",\n          \"distanceInnerType\",\n          \"uint8\",\n          \"links\",\n          Utils.getArrayReader(this.ModelBoneConstraintLinkV50),\n          \"distanceOuter\",\n          [\"[]\", \"float32\", 2],\n          \"distanceOuterStrength\",\n          \"float32\",\n          \"distanceOuterType\",\n          \"uint8\",\n          \"twist\",\n          [\"[]\", \"float32\", 2],\n          \"twistStrength\",\n          \"float32\",\n          \"twistType\",\n          \"uint8\",\n        ];\n\n        this.ModelSoftBodyDataV50 = [\n          \"materialIndex\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"vertexFvf\",\n          \"uint32\",\n          \"vertBytes\",\n          Utils.getArrayReader(\"uint8\"),\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"bones\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.ModelBoneOffsetDataV50 = [\"bone\", Utils.getQWordReader(), \"offset\", [\"[]\", \"float32\", 3]];\n\n        this.__root = this.ModelFileDataV50 = [\n          \"materials\",\n          Utils.getRefArrayReader(this.ModelMaterialDataV50),\n          \"meshes\",\n          Utils.getRefArrayReader(this.ModelMeshDataV50),\n          \"model\",\n          Utils.getPointerReader(this.ModelModelDataV50),\n          \"properties\",\n          Utils.getArrayReader(this.ModelPropertyDataV50),\n          \"cloudData\",\n          Utils.getPointerReader(this.ModelCloudDataV50),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelObstacleDataV50),\n          \"streakData\",\n          Utils.getPointerReader(this.ModelStreakDataV50),\n          \"lightData\",\n          Utils.getPointerReader(this.ModelLightDataV50),\n          \"clothData\",\n          Utils.getArrayReader(this.ModelClothDataV50),\n          \"actionOffsetNames\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"actionOffsets\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"lodOverride\",\n          [\"[]\", \"float32\", 2],\n          \"soundScript\",\n          Utils.getFileNameReader(),\n          \"lightningData\",\n          Utils.getPointerReader(this.ModelLightningDataV50),\n          \"boneConstraints\",\n          Utils.getArrayReader(this.ModelBoneConstraintV50),\n          \"softBodyData\",\n          Utils.getArrayReader(this.ModelSoftBodyDataV50),\n          \"boneOffsetData\",\n          Utils.getArrayReader(this.ModelBoneOffsetDataV50),\n        ];\n      },\n\n      // => Version: 49\n      49: function () {\n        this.ModelTextureDataV49 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"textureFlags\",\n          \"uint32\",\n          \"token\",\n          Utils.getQWordReader(),\n          \"blitId\",\n          Utils.getQWordReader(),\n          \"uvAnimId\",\n          \"uint32\",\n          \"uvPSInputIndex\",\n          \"uint8\",\n        ];\n\n        this.ModelConstantDataV49 = [\"name\", \"uint32\", \"value\", [\"[]\", \"float32\", 4], \"constantFlags\", \"uint32\"];\n\n        this.ModelMatConstLinkV49 = [\"linkToken\", Utils.getQWordReader(), \"constantToken\", \"uint32\"];\n\n        this.ModelUVTransLinkV49 = [\"linkToken\", Utils.getQWordReader(), \"uvAnimId\", \"uint32\", \"type\", \"uint8\"];\n\n        this.ModelMaterialTexTransformV49 = [\n          \"random\",\n          \"uint8\",\n          \"uvIndex\",\n          \"uint8\",\n          \"columns\",\n          \"uint8\",\n          \"rows\",\n          \"uint8\",\n          \"count\",\n          \"uint16\",\n          \"fps\",\n          \"float32\",\n          \"scroll\",\n          [\"[]\", \"float32\", 2],\n        ];\n\n        this.ModelMaterialDataV49 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"materialFlags\",\n          \"uint32\",\n          \"sortOrder\",\n          \"uint32\",\n          \"texCoordCount\",\n          \"uint8\",\n          \"textures\",\n          Utils.getArrayReader(this.ModelTextureDataV49),\n          \"constants\",\n          Utils.getArrayReader(this.ModelConstantDataV49),\n          \"matConstLinks\",\n          Utils.getArrayReader(this.ModelMatConstLinkV49),\n          \"uvTransLinks\",\n          Utils.getArrayReader(this.ModelUVTransLinkV49),\n          \"texTransforms\",\n          Utils.getArrayReader(this.ModelMaterialTexTransformV49),\n        ];\n\n        this.ModelMeshLodDataV49 = [\"indices\", Utils.getArrayReader(\"uint16\")];\n\n        this.ModelMeshMorphVertV49 = [\"index\", \"uint16\", \"vector\", [\"[]\", \"float32\", 3]];\n\n        this.ModelMeshMorphTargetV49 = [\n          \"positions\",\n          Utils.getArrayReader(this.ModelMeshMorphVertV49),\n          \"normals\",\n          Utils.getArrayReader(this.ModelMeshMorphVertV49),\n          \"mesh\",\n          Utils.getQWordReader(),\n        ];\n\n        this.PackGrannyMeshType = [\"mesh\", Utils.getArrayReader(\"uint8\")];\n\n        this.GrBoundData = [\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"boxExtent\",\n          [\"[]\", \"float32\", 3],\n          \"sphereRadius\",\n          \"float32\",\n        ];\n\n        this.ModelMeshDataV49 = [\n          \"visBone\",\n          Utils.getQWordReader(),\n          \"lods\",\n          Utils.getArrayReader(this.ModelMeshLodDataV49),\n          \"morphTargets\",\n          Utils.getArrayReader(this.ModelMeshMorphTargetV49),\n          \"mesh\",\n          this.PackGrannyMeshType,\n          \"flags\",\n          \"uint32\",\n          \"seamVertIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"meshName\",\n          Utils.getQWordReader(),\n          \"minBound\",\n          [\"[]\", \"float32\", 3],\n          \"maxBound\",\n          [\"[]\", \"float32\", 3],\n          \"bounds\",\n          Utils.getArrayReader(this.GrBoundData),\n        ];\n\n        this.ModelTransformDataV49 = [\n          \"Flags\",\n          \"uint32\",\n          \"Position\",\n          [\"[]\", \"float32\", 3],\n          \"Orientation\",\n          [\"[]\", \"float32\", 4],\n          \"ScaleShear\",\n          [\"[]\", [\"[]\", \"float32\", 3], 3],\n        ];\n\n        this.ModelBoneDataV49 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"ParentIndex\",\n          \"uint32\",\n          \"LocalTransform\",\n          this.ModelTransformDataV49,\n          \"InverseWorld4x4\",\n          [\"[]\", [\"[]\", \"float32\", 4], 4],\n          \"LODError\",\n          \"float32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n        ];\n\n        this.ModelSkeletonDataV49 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Bones\",\n          Utils.getArrayReader(this.ModelBoneDataV49),\n          \"LODType\",\n          \"uint32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n        ];\n\n        this.ModelMeshBindingDataV49 = [\"Mesh\", Utils.getPointerReader(\"uint8\")];\n\n        this.PackGrannyTrackMaskType = [\"trackMask\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelTrackMaskV49 = [\"trackMask\", this.PackGrannyTrackMaskType, \"token\", Utils.getQWordReader()];\n\n        this.ModelModelDataV49 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Skeleton\",\n          Utils.getPointerReader(this.ModelSkeletonDataV49),\n          \"InitialPlacement\",\n          this.ModelTransformDataV49,\n          \"MeshBindings\",\n          Utils.getArrayReader(this.ModelMeshBindingDataV49),\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n          \"boneFlags\",\n          Utils.getArrayReader(\"uint32\"),\n          \"emitterBones\",\n          Utils.getArrayReader(\"uint32\"),\n          \"trackMasks\",\n          Utils.getArrayReader(this.ModelTrackMaskV49),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"radius\",\n          \"float32\",\n        ];\n\n        this.ModelPropertyDataV49 = [\n          \"id\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint32\",\n          \"mergeIndex\",\n          \"uint32\",\n          \"time\",\n          \"float32\",\n          \"val\",\n          Utils.getQWordReader(),\n          \"strVal\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.ModelParticleCloudV49 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"drag\",\n          \"float32\",\n          \"emitterIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"fvf\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"obstacleIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"velocity\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.ModelParticleCurveV49 = [\"curveType\", \"uint8\", \"keys\", Utils.getArrayReader([\"[]\", \"float32\", 2])];\n\n        this.ModelParticleFlipbookV49 = [\n          \"columns\",\n          \"uint8\",\n          \"count\",\n          \"uint8\",\n          \"fps\",\n          \"float32\",\n          \"rows\",\n          \"uint8\",\n          \"start\",\n          \"uint8\",\n        ];\n\n        this.ModelParticleEmitterV49 = [\n          \"acceleration\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"accelerationDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"accelerationDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"alignmentType\",\n          \"uint8\",\n          \"alignmentDir\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorBegin\",\n          [\"[]\", \"float32\", 4],\n          \"colorEnd\",\n          [\"[]\", \"float32\", 4],\n          \"colorPeriod\",\n          \"float32\",\n          \"colorFalloff\",\n          [\"[]\", \"float32\", 2],\n          \"drag\",\n          \"float32\",\n          \"emitterFlags\",\n          \"uint32\",\n          \"offset\",\n          \"float32\",\n          \"opacityCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV49),\n          \"opacityCurvePreset\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"flipbook\",\n          Utils.getPointerReader(this.ModelParticleFlipbookV49),\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"rotationChange\",\n          [\"[]\", \"float32\", 2],\n          \"rotationDrag\",\n          \"float32\",\n          \"rotationInitial\",\n          [\"[]\", \"float32\", 2],\n          \"scaleChange\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleInitial\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV49),\n          \"scaleCurvePreset\",\n          \"uint32\",\n          \"velocity\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"velocityDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"velocityDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"velocityInherit\",\n          [\"[]\", \"float32\", 2],\n          \"spawnGroupSize\",\n          [\"[]\", \"float32\", 2],\n          \"spawnPeriod\",\n          \"float32\",\n          \"spawnProbability\",\n          \"float32\",\n          \"spawnRadius\",\n          [\"[]\", \"float32\", 2],\n          \"spawnShape\",\n          \"uint8\",\n          \"spawnWindEmit\",\n          [\"[]\", \"float32\", 2],\n          \"spawnWindSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"texCoordRect\",\n          [\"[]\", \"float32\", 4],\n          \"windInfluence\",\n          \"uint8\",\n        ];\n\n        this.ModelCloudDataV49 = [\n          \"clouds\",\n          Utils.getArrayReader(this.ModelParticleCloudV49),\n          \"emitters\",\n          Utils.getArrayReader(this.ModelParticleEmitterV49),\n        ];\n\n        this.ModelObstacleDataV49 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"dragCoef\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"geoData\",\n          [\"[]\", \"float32\", 3],\n          \"gravityCoef\",\n          \"float32\",\n          \"response\",\n          \"uint8\",\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.ModelStreakV49 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"velocity\",\n          [\"[]\", \"float32\", 3],\n          \"anchorIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"bone\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"jitter\",\n          \"float32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"noise\",\n          \"float32\",\n          \"spawnDist\",\n          \"float32\",\n          \"texScale\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n        ];\n\n        this.ModelStreakAnchorV49 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorStart\",\n          \"uint32\",\n          \"colorEnd\",\n          \"uint32\",\n          \"falloff\",\n          \"float32\",\n          \"lifetime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"texV\",\n          \"float32\",\n        ];\n\n        this.ModelStreakDataV49 = [\n          \"streaks\",\n          Utils.getArrayReader(this.ModelStreakV49),\n          \"anchors\",\n          Utils.getArrayReader(this.ModelStreakAnchorV49),\n        ];\n\n        this.ModelEffectLightV49 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"farDistance\",\n          \"float32\",\n          \"intensity\",\n          \"float32\",\n          \"nearDistance\",\n          \"float32\",\n        ];\n\n        this.ModelLightDataV49 = [\"effectLights\", Utils.getArrayReader(this.ModelEffectLightV49)];\n\n        this.PackVertexType = [\"fvf\", \"uint32\", \"vertices\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelClothBoneWeightV49 = [\"token\", Utils.getQWordReader(), \"weight\", \"uint8\"];\n\n        this.ModelClothMeshGroupV49 = [\"weights\", Utils.getArrayReader(this.ModelClothBoneWeightV49)];\n\n        this.ModelClothConstraintV49 = [\"vertIndexA\", \"uint16\", \"vertIndexB\", \"uint16\", \"distance\", \"float32\"];\n\n        this.ModelClothObstacleV49 = [\"bone\", Utils.getQWordReader(), \"type\", \"uint8\"];\n\n        this.ModelClothDataV49 = [\n          \"materialIndex\",\n          \"uint32\",\n          \"flags\",\n          \"uint8\",\n          \"gravity\",\n          \"float32\",\n          \"weight\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n          \"rigidness\",\n          \"uint8\",\n          \"mesh\",\n          this.PackVertexType,\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"lockCount\",\n          \"uint16\",\n          \"groups\",\n          Utils.getArrayReader(this.ModelClothMeshGroupV49),\n          \"softLocks\",\n          Utils.getArrayReader(\"uint8\"),\n          \"lod0Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV49),\n          \"lod1Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV49),\n          \"lod1VertexCount\",\n          \"uint16\",\n          \"lod1Indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"barycentricCoords\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"barycentricIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelClothObstacleV49),\n        ];\n\n        this.ModelLightningSystemV49 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"boltIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelLightningBoltV49 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"nodeIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"colorBegin\",\n          [\"[]\", \"uint32\", 3],\n          \"colorEnd\",\n          [\"[]\", \"uint32\", 3],\n          \"colorPeriod\",\n          \"float32\",\n          \"colorFalloff\",\n          [\"[]\", \"float32\", 2],\n          \"flags\",\n          \"uint32\",\n          \"fps\",\n          \"float32\",\n          \"probability\",\n          \"float32\",\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"numSegments\",\n          \"uint16\",\n          \"opacity\",\n          [\"[]\", \"float32\", 2],\n          \"opacityPreset\",\n          \"uint8\",\n          \"period\",\n          \"float32\",\n          \"texOffset\",\n          \"float32\",\n          \"texScale\",\n          \"float32\",\n          \"texSpeed\",\n          \"float32\",\n          \"thickness\",\n          \"float32\",\n          \"thicknessPreset\",\n          \"uint8\",\n          \"type\",\n          \"uint8\",\n          \"variance\",\n          \"float32\",\n          \"variancePreset\",\n          \"uint8\",\n          \"noise\",\n          \"float32\",\n        ];\n\n        this.ModelLightningNodeV49 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"childrenIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"flags\",\n          \"uint32\",\n          \"probability\",\n          \"float32\",\n          \"radius\",\n          \"float32\",\n          \"shape\",\n          \"uint8\",\n          \"updatePos\",\n          \"float32\",\n        ];\n\n        this.ModelLightningDataV49 = [\n          \"systems\",\n          Utils.getArrayReader(this.ModelLightningSystemV49),\n          \"bolts\",\n          Utils.getArrayReader(this.ModelLightningBoltV49),\n          \"nodes\",\n          Utils.getArrayReader(this.ModelLightningNodeV49),\n        ];\n\n        this.ModelBoneConstraintLinkV49 = [\n          \"angle\",\n          \"float32\",\n          \"azimuth\",\n          \"float32\",\n          \"distance\",\n          [\"[]\", \"float32\", 2],\n          \"token\",\n          Utils.getQWordReader(),\n        ];\n\n        this.ModelBoneConstraintV49 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint16\",\n          \"twistOffset\",\n          \"float32\",\n          \"animBlend\",\n          \"float32\",\n          \"drag\",\n          \"float32\",\n          \"ellipseRatio\",\n          \"float32\",\n          \"gravity\",\n          \"float32\",\n          \"collisionRadius\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n          \"angle\",\n          [\"[]\", \"float32\", 2],\n          \"angleStrength\",\n          \"float32\",\n          \"angleType\",\n          \"uint8\",\n          \"distanceInner\",\n          [\"[]\", \"float32\", 2],\n          \"distanceInnerStrength\",\n          \"float32\",\n          \"distanceInnerType\",\n          \"uint8\",\n          \"links\",\n          Utils.getArrayReader(this.ModelBoneConstraintLinkV49),\n          \"distanceOuter\",\n          [\"[]\", \"float32\", 2],\n          \"distanceOuterStrength\",\n          \"float32\",\n          \"distanceOuterType\",\n          \"uint8\",\n          \"twist\",\n          [\"[]\", \"float32\", 2],\n          \"twistStrength\",\n          \"float32\",\n          \"twistType\",\n          \"uint8\",\n        ];\n\n        this.ModelSoftBodyDataV49 = [\n          \"materialIndex\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"vertexFvf\",\n          \"uint32\",\n          \"vertBytes\",\n          Utils.getArrayReader(\"uint8\"),\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"bones\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.ModelBoneOffsetDataV49 = [\"bone\", Utils.getQWordReader(), \"offset\", [\"[]\", \"float32\", 3]];\n\n        this.__root = this.ModelFileDataV49 = [\n          \"materials\",\n          Utils.getRefArrayReader(this.ModelMaterialDataV49),\n          \"meshes\",\n          Utils.getRefArrayReader(this.ModelMeshDataV49),\n          \"model\",\n          Utils.getPointerReader(this.ModelModelDataV49),\n          \"properties\",\n          Utils.getArrayReader(this.ModelPropertyDataV49),\n          \"cloudData\",\n          Utils.getPointerReader(this.ModelCloudDataV49),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelObstacleDataV49),\n          \"streakData\",\n          Utils.getPointerReader(this.ModelStreakDataV49),\n          \"lightData\",\n          Utils.getPointerReader(this.ModelLightDataV49),\n          \"clothData\",\n          Utils.getArrayReader(this.ModelClothDataV49),\n          \"actionOffsetNames\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"actionOffsets\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"lodOverride\",\n          [\"[]\", \"float32\", 2],\n          \"soundScript\",\n          Utils.getFileNameReader(),\n          \"lightningData\",\n          Utils.getPointerReader(this.ModelLightningDataV49),\n          \"boneConstraints\",\n          Utils.getArrayReader(this.ModelBoneConstraintV49),\n          \"softBodyData\",\n          Utils.getArrayReader(this.ModelSoftBodyDataV49),\n          \"boneOffsetData\",\n          Utils.getArrayReader(this.ModelBoneOffsetDataV49),\n        ];\n      },\n\n      // => Version: 48, ReferencedFunction: 0xF2ADE0\n      48: function () {\n        this.ModelTextureDataV48 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"textureFlags\",\n          \"uint32\",\n          \"token\",\n          Utils.getQWordReader(),\n          \"blitId\",\n          Utils.getQWordReader(),\n          \"uvAnimId\",\n          \"uint32\",\n          \"uvPSInputIndex\",\n          \"uint8\",\n        ];\n\n        this.ModelConstantDataV48 = [\"name\", \"uint32\", \"value\", [\"[]\", \"float32\", 4], \"constantFlags\", \"uint32\"];\n\n        this.ModelMatConstLinkV48 = [\"linkToken\", Utils.getQWordReader(), \"constantToken\", \"uint32\"];\n\n        this.ModelUVTransLinkV48 = [\"linkToken\", Utils.getQWordReader(), \"uvAnimId\", \"uint32\", \"type\", \"uint8\"];\n\n        this.ModelMaterialTexTransformV48 = [\n          \"random\",\n          \"uint8\",\n          \"uvIndex\",\n          \"uint8\",\n          \"columns\",\n          \"uint8\",\n          \"rows\",\n          \"uint8\",\n          \"count\",\n          \"uint16\",\n          \"fps\",\n          \"float32\",\n          \"scroll\",\n          [\"[]\", \"float32\", 2],\n        ];\n\n        this.ModelMaterialDataV48 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"materialFlags\",\n          \"uint32\",\n          \"sortOrder\",\n          \"uint32\",\n          \"texCoordCount\",\n          \"uint8\",\n          \"textures\",\n          Utils.getArrayReader(this.ModelTextureDataV48),\n          \"constants\",\n          Utils.getArrayReader(this.ModelConstantDataV48),\n          \"matConstLinks\",\n          Utils.getArrayReader(this.ModelMatConstLinkV48),\n          \"uvTransLinks\",\n          Utils.getArrayReader(this.ModelUVTransLinkV48),\n          \"texTransforms\",\n          Utils.getArrayReader(this.ModelMaterialTexTransformV48),\n        ];\n\n        this.ModelMeshLodDataV48 = [\"indices\", Utils.getArrayReader(\"uint16\")];\n\n        this.ModelMeshMorphVertV48 = [\"index\", \"uint16\", \"vector\", [\"[]\", \"float32\", 3]];\n\n        this.ModelMeshMorphTargetV48 = [\n          \"positions\",\n          Utils.getArrayReader(this.ModelMeshMorphVertV48),\n          \"normals\",\n          Utils.getArrayReader(this.ModelMeshMorphVertV48),\n          \"mesh\",\n          Utils.getQWordReader(),\n        ];\n\n        this.PackGrannyMeshType = [\"mesh\", Utils.getArrayReader(\"uint8\")];\n\n        this.GrBoundData = [\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"boxExtent\",\n          [\"[]\", \"float32\", 3],\n          \"sphereRadius\",\n          \"float32\",\n        ];\n\n        this.ModelMeshDataV48 = [\n          \"visBone\",\n          Utils.getQWordReader(),\n          \"lods\",\n          Utils.getArrayReader(this.ModelMeshLodDataV48),\n          \"morphTargets\",\n          Utils.getArrayReader(this.ModelMeshMorphTargetV48),\n          \"mesh\",\n          this.PackGrannyMeshType,\n          \"flags\",\n          \"uint32\",\n          \"seamVertIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"meshName\",\n          Utils.getQWordReader(),\n          \"minBound\",\n          [\"[]\", \"float32\", 3],\n          \"maxBound\",\n          [\"[]\", \"float32\", 3],\n          \"bounds\",\n          Utils.getArrayReader(this.GrBoundData),\n        ];\n\n        this.ModelTransformDataV48 = [\n          \"Flags\",\n          \"uint32\",\n          \"Position\",\n          [\"[]\", \"float32\", 3],\n          \"Orientation\",\n          [\"[]\", \"float32\", 4],\n          \"ScaleShear\",\n          [\"[]\", [\"[]\", \"float32\", 3], 3],\n        ];\n\n        this.ModelBoneDataV48 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"ParentIndex\",\n          \"uint32\",\n          \"LocalTransform\",\n          this.ModelTransformDataV48,\n          \"InverseWorld4x4\",\n          [\"[]\", [\"[]\", \"float32\", 4], 4],\n          \"LODError\",\n          \"float32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n        ];\n\n        this.ModelSkeletonDataV48 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Bones\",\n          Utils.getArrayReader(this.ModelBoneDataV48),\n          \"LODType\",\n          \"uint32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n        ];\n\n        this.ModelMeshBindingDataV48 = [\"Mesh\", Utils.getPointerReader(\"uint8\")];\n\n        this.PackGrannyTrackMaskType = [\"trackMask\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelTrackMaskV48 = [\"trackMask\", this.PackGrannyTrackMaskType, \"token\", Utils.getQWordReader()];\n\n        this.ModelModelDataV48 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Skeleton\",\n          Utils.getPointerReader(this.ModelSkeletonDataV48),\n          \"InitialPlacement\",\n          this.ModelTransformDataV48,\n          \"MeshBindings\",\n          Utils.getArrayReader(this.ModelMeshBindingDataV48),\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n          \"boneFlags\",\n          Utils.getArrayReader(\"uint32\"),\n          \"emitterBones\",\n          Utils.getArrayReader(\"uint32\"),\n          \"trackMasks\",\n          Utils.getArrayReader(this.ModelTrackMaskV48),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"radius\",\n          \"float32\",\n        ];\n\n        this.ModelPropertyDataV48 = [\n          \"id\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint32\",\n          \"mergeIndex\",\n          \"uint32\",\n          \"time\",\n          \"float32\",\n          \"val\",\n          Utils.getQWordReader(),\n          \"strVal\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.ModelParticleCloudV48 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"drag\",\n          \"float32\",\n          \"emitterIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"fvf\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"obstacleIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"velocity\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.ModelParticleCurveV48 = [\"curveType\", \"uint8\", \"keys\", Utils.getArrayReader([\"[]\", \"float32\", 2])];\n\n        this.ModelParticleFlipbookV48 = [\n          \"columns\",\n          \"uint8\",\n          \"count\",\n          \"uint8\",\n          \"fps\",\n          \"float32\",\n          \"rows\",\n          \"uint8\",\n          \"start\",\n          \"uint8\",\n        ];\n\n        this.ModelParticleEmitterV48 = [\n          \"acceleration\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"accelerationDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"accelerationDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"alignmentType\",\n          \"uint8\",\n          \"alignmentDir\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorBegin\",\n          [\"[]\", \"float32\", 4],\n          \"colorEnd\",\n          [\"[]\", \"float32\", 4],\n          \"colorPeriod\",\n          \"float32\",\n          \"colorFalloff\",\n          [\"[]\", \"float32\", 2],\n          \"drag\",\n          \"float32\",\n          \"emitterFlags\",\n          \"uint32\",\n          \"offset\",\n          \"float32\",\n          \"opacityCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV48),\n          \"opacityCurvePreset\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"flipbook\",\n          Utils.getPointerReader(this.ModelParticleFlipbookV48),\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"rotationChange\",\n          [\"[]\", \"float32\", 2],\n          \"rotationDrag\",\n          \"float32\",\n          \"rotationInitial\",\n          [\"[]\", \"float32\", 2],\n          \"scaleChange\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleInitial\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV48),\n          \"scaleCurvePreset\",\n          \"uint32\",\n          \"velocity\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"velocityDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"velocityDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"velocityInherit\",\n          [\"[]\", \"float32\", 2],\n          \"spawnGroupSize\",\n          [\"[]\", \"float32\", 2],\n          \"spawnPeriod\",\n          \"float32\",\n          \"spawnProbability\",\n          \"float32\",\n          \"spawnRadius\",\n          [\"[]\", \"float32\", 2],\n          \"spawnShape\",\n          \"uint8\",\n          \"spawnWindEmit\",\n          [\"[]\", \"float32\", 2],\n          \"spawnWindSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"texCoordRect\",\n          [\"[]\", \"float32\", 4],\n          \"windInfluence\",\n          \"uint8\",\n        ];\n\n        this.ModelCloudDataV48 = [\n          \"clouds\",\n          Utils.getArrayReader(this.ModelParticleCloudV48),\n          \"emitters\",\n          Utils.getArrayReader(this.ModelParticleEmitterV48),\n        ];\n\n        this.ModelObstacleDataV48 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"dragCoef\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"geoData\",\n          [\"[]\", \"float32\", 3],\n          \"gravityCoef\",\n          \"float32\",\n          \"response\",\n          \"uint8\",\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.ModelStreakV48 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"velocity\",\n          [\"[]\", \"float32\", 3],\n          \"anchorIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"bone\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"jitter\",\n          \"float32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"noise\",\n          \"float32\",\n          \"spawnDist\",\n          \"float32\",\n          \"texScale\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n        ];\n\n        this.ModelStreakAnchorV48 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorStart\",\n          \"uint32\",\n          \"colorEnd\",\n          \"uint32\",\n          \"falloff\",\n          \"float32\",\n          \"lifetime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"texV\",\n          \"float32\",\n        ];\n\n        this.ModelStreakDataV48 = [\n          \"streaks\",\n          Utils.getArrayReader(this.ModelStreakV48),\n          \"anchors\",\n          Utils.getArrayReader(this.ModelStreakAnchorV48),\n        ];\n\n        this.ModelEffectLightV48 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"farDistance\",\n          \"float32\",\n          \"intensity\",\n          \"float32\",\n          \"nearDistance\",\n          \"float32\",\n        ];\n\n        this.ModelLightDataV48 = [\"effectLights\", Utils.getArrayReader(this.ModelEffectLightV48)];\n\n        this.PackVertexType = [\"fvf\", \"uint32\", \"vertices\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelClothBoneWeightV48 = [\"token\", Utils.getQWordReader(), \"weight\", \"uint8\"];\n\n        this.ModelClothMeshGroupV48 = [\"weights\", Utils.getArrayReader(this.ModelClothBoneWeightV48)];\n\n        this.ModelClothConstraintV48 = [\"vertIndexA\", \"uint16\", \"vertIndexB\", \"uint16\", \"distance\", \"float32\"];\n\n        this.ModelClothObstacleV48 = [\"bone\", Utils.getQWordReader(), \"type\", \"uint8\"];\n\n        this.ModelClothDataV48 = [\n          \"materialIndex\",\n          \"uint32\",\n          \"flags\",\n          \"uint8\",\n          \"gravity\",\n          \"float32\",\n          \"weight\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n          \"rigidness\",\n          \"uint8\",\n          \"mesh\",\n          this.PackVertexType,\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"lockCount\",\n          \"uint16\",\n          \"groups\",\n          Utils.getArrayReader(this.ModelClothMeshGroupV48),\n          \"softLocks\",\n          Utils.getArrayReader(\"uint8\"),\n          \"lod0Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV48),\n          \"lod1Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV48),\n          \"lod1VertexCount\",\n          \"uint16\",\n          \"lod1Indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"barycentricCoords\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"barycentricIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelClothObstacleV48),\n        ];\n\n        this.ModelLightningSystemV48 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"boltIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelLightningBoltV48 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"nodeIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"colorBegin\",\n          [\"[]\", \"uint32\", 3],\n          \"colorEnd\",\n          [\"[]\", \"uint32\", 3],\n          \"colorPeriod\",\n          \"float32\",\n          \"colorFalloff\",\n          [\"[]\", \"float32\", 2],\n          \"flags\",\n          \"uint32\",\n          \"fps\",\n          \"float32\",\n          \"probability\",\n          \"float32\",\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"numSegments\",\n          \"uint16\",\n          \"opacity\",\n          [\"[]\", \"float32\", 2],\n          \"opacityPreset\",\n          \"uint8\",\n          \"period\",\n          \"float32\",\n          \"texOffset\",\n          \"float32\",\n          \"texScale\",\n          \"float32\",\n          \"texSpeed\",\n          \"float32\",\n          \"thickness\",\n          \"float32\",\n          \"thicknessPreset\",\n          \"uint8\",\n          \"type\",\n          \"uint8\",\n          \"variance\",\n          \"float32\",\n          \"variancePreset\",\n          \"uint8\",\n          \"noise\",\n          \"float32\",\n        ];\n\n        this.ModelLightningNodeV48 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"childrenIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"flags\",\n          \"uint32\",\n          \"probability\",\n          \"float32\",\n          \"radius\",\n          \"float32\",\n          \"shape\",\n          \"uint8\",\n          \"updatePos\",\n          \"float32\",\n        ];\n\n        this.ModelLightningDataV48 = [\n          \"systems\",\n          Utils.getArrayReader(this.ModelLightningSystemV48),\n          \"bolts\",\n          Utils.getArrayReader(this.ModelLightningBoltV48),\n          \"nodes\",\n          Utils.getArrayReader(this.ModelLightningNodeV48),\n        ];\n\n        this.ModelBoneConstraintLinkV48 = [\n          \"angle\",\n          \"float32\",\n          \"azimuth\",\n          \"float32\",\n          \"distance\",\n          [\"[]\", \"float32\", 2],\n          \"token\",\n          Utils.getQWordReader(),\n        ];\n\n        this.ModelBoneConstraintV48 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint16\",\n          \"twistOffset\",\n          \"float32\",\n          \"animBlend\",\n          \"float32\",\n          \"drag\",\n          \"float32\",\n          \"ellipseRatio\",\n          \"float32\",\n          \"gravity\",\n          \"float32\",\n          \"collisionRadius\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n          \"angle\",\n          [\"[]\", \"float32\", 2],\n          \"angleStrength\",\n          \"float32\",\n          \"angleType\",\n          \"uint8\",\n          \"distanceInner\",\n          [\"[]\", \"float32\", 2],\n          \"distanceInnerStrength\",\n          \"float32\",\n          \"distanceInnerType\",\n          \"uint8\",\n          \"links\",\n          Utils.getArrayReader(this.ModelBoneConstraintLinkV48),\n          \"distanceOuter\",\n          [\"[]\", \"float32\", 2],\n          \"distanceOuterStrength\",\n          \"float32\",\n          \"distanceOuterType\",\n          \"uint8\",\n          \"twist\",\n          [\"[]\", \"float32\", 2],\n          \"twistStrength\",\n          \"float32\",\n          \"twistType\",\n          \"uint8\",\n        ];\n\n        this.ModelSoftBodyDataV48 = [\n          \"materialIndex\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"vertexFvf\",\n          \"uint32\",\n          \"vertBytes\",\n          Utils.getArrayReader(\"uint8\"),\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"bones\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.__root = this.ModelFileDataV48 = [\n          \"materials\",\n          Utils.getRefArrayReader(this.ModelMaterialDataV48),\n          \"meshes\",\n          Utils.getRefArrayReader(this.ModelMeshDataV48),\n          \"model\",\n          Utils.getPointerReader(this.ModelModelDataV48),\n          \"properties\",\n          Utils.getArrayReader(this.ModelPropertyDataV48),\n          \"cloudData\",\n          Utils.getPointerReader(this.ModelCloudDataV48),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelObstacleDataV48),\n          \"streakData\",\n          Utils.getPointerReader(this.ModelStreakDataV48),\n          \"lightData\",\n          Utils.getPointerReader(this.ModelLightDataV48),\n          \"clothData\",\n          Utils.getArrayReader(this.ModelClothDataV48),\n          \"actionOffsetNames\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"actionOffsets\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"lodOverride\",\n          [\"[]\", \"float32\", 2],\n          \"soundScript\",\n          Utils.getFileNameReader(),\n          \"lightningData\",\n          Utils.getPointerReader(this.ModelLightningDataV48),\n          \"boneConstraints\",\n          Utils.getArrayReader(this.ModelBoneConstraintV48),\n          \"softBodyData\",\n          Utils.getArrayReader(this.ModelSoftBodyDataV48),\n        ];\n      },\n\n      // => Version: 47, ReferencedFunction: 0xF2AB60\n      47: function () {\n        this.ModelTextureDataV47 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"textureFlags\",\n          \"uint32\",\n          \"token\",\n          Utils.getQWordReader(),\n          \"blitId\",\n          Utils.getQWordReader(),\n          \"uvAnimId\",\n          \"uint32\",\n          \"uvPSInputIndex\",\n          \"uint8\",\n        ];\n\n        this.ModelConstantDataV47 = [\"name\", \"uint32\", \"value\", [\"[]\", \"float32\", 4], \"constantFlags\", \"uint32\"];\n\n        this.ModelMatConstLinkV47 = [\"linkToken\", Utils.getQWordReader(), \"constantToken\", \"uint32\"];\n\n        this.ModelUVTransLinkV47 = [\"linkToken\", Utils.getQWordReader(), \"uvAnimId\", \"uint32\", \"type\", \"uint8\"];\n\n        this.ModelMaterialTexTransformV47 = [\n          \"random\",\n          \"uint8\",\n          \"uvIndex\",\n          \"uint8\",\n          \"columns\",\n          \"uint8\",\n          \"rows\",\n          \"uint8\",\n          \"count\",\n          \"uint16\",\n          \"fps\",\n          \"float32\",\n          \"scroll\",\n          [\"[]\", \"float32\", 2],\n        ];\n\n        this.ModelMaterialDataV47 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"materialFlags\",\n          \"uint32\",\n          \"sortOrder\",\n          \"uint32\",\n          \"texCoordCount\",\n          \"uint8\",\n          \"textures\",\n          Utils.getArrayReader(this.ModelTextureDataV47),\n          \"constants\",\n          Utils.getArrayReader(this.ModelConstantDataV47),\n          \"matConstLinks\",\n          Utils.getArrayReader(this.ModelMatConstLinkV47),\n          \"uvTransLinks\",\n          Utils.getArrayReader(this.ModelUVTransLinkV47),\n          \"texTransforms\",\n          Utils.getArrayReader(this.ModelMaterialTexTransformV47),\n        ];\n\n        this.ModelMeshLodDataV47 = [\"indices\", Utils.getArrayReader(\"uint16\")];\n\n        this.ModelMeshMorphVertV47 = [\"index\", \"uint16\", \"vector\", [\"[]\", \"float32\", 3]];\n\n        this.ModelMeshMorphTargetV47 = [\n          \"positions\",\n          Utils.getArrayReader(this.ModelMeshMorphVertV47),\n          \"normals\",\n          Utils.getArrayReader(this.ModelMeshMorphVertV47),\n          \"mesh\",\n          Utils.getQWordReader(),\n        ];\n\n        this.PackGrannyMeshType = [\"mesh\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelMeshDataV47 = [\n          \"visBone\",\n          Utils.getQWordReader(),\n          \"lods\",\n          Utils.getArrayReader(this.ModelMeshLodDataV47),\n          \"morphTargets\",\n          Utils.getArrayReader(this.ModelMeshMorphTargetV47),\n          \"mesh\",\n          this.PackGrannyMeshType,\n          \"flags\",\n          \"uint32\",\n          \"seamVertIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"meshName\",\n          Utils.getQWordReader(),\n          \"minBound\",\n          [\"[]\", \"float32\", 3],\n          \"maxBound\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.ModelTransformDataV47 = [\n          \"Flags\",\n          \"uint32\",\n          \"Position\",\n          [\"[]\", \"float32\", 3],\n          \"Orientation\",\n          [\"[]\", \"float32\", 4],\n          \"ScaleShear\",\n          [\"[]\", [\"[]\", \"float32\", 3], 3],\n        ];\n\n        this.ModelBoneDataV47 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"ParentIndex\",\n          \"uint32\",\n          \"LocalTransform\",\n          this.ModelTransformDataV47,\n          \"InverseWorld4x4\",\n          [\"[]\", [\"[]\", \"float32\", 4], 4],\n          \"LODError\",\n          \"float32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n        ];\n\n        this.ModelSkeletonDataV47 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Bones\",\n          Utils.getArrayReader(this.ModelBoneDataV47),\n          \"LODType\",\n          \"uint32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n        ];\n\n        this.ModelMeshBindingDataV47 = [\"Mesh\", Utils.getPointerReader(\"uint8\")];\n\n        this.PackGrannyTrackMaskType = [\"trackMask\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelTrackMaskV47 = [\"trackMask\", this.PackGrannyTrackMaskType, \"token\", Utils.getQWordReader()];\n\n        this.ModelModelDataV47 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Skeleton\",\n          Utils.getPointerReader(this.ModelSkeletonDataV47),\n          \"InitialPlacement\",\n          this.ModelTransformDataV47,\n          \"MeshBindings\",\n          Utils.getArrayReader(this.ModelMeshBindingDataV47),\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n          \"boneFlags\",\n          Utils.getArrayReader(\"uint32\"),\n          \"emitterBones\",\n          Utils.getArrayReader(\"uint32\"),\n          \"trackMasks\",\n          Utils.getArrayReader(this.ModelTrackMaskV47),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"radius\",\n          \"float32\",\n        ];\n\n        this.ModelPropertyDataV47 = [\n          \"id\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint32\",\n          \"mergeIndex\",\n          \"uint32\",\n          \"time\",\n          \"float32\",\n          \"val\",\n          Utils.getQWordReader(),\n          \"strVal\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.ModelParticleCloudV47 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"drag\",\n          \"float32\",\n          \"emitterIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"fvf\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"obstacleIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"velocity\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.ModelParticleCurveV47 = [\"curveType\", \"uint8\", \"keys\", Utils.getArrayReader([\"[]\", \"float32\", 2])];\n\n        this.ModelParticleFlipbookV47 = [\n          \"columns\",\n          \"uint8\",\n          \"count\",\n          \"uint8\",\n          \"fps\",\n          \"float32\",\n          \"rows\",\n          \"uint8\",\n          \"start\",\n          \"uint8\",\n        ];\n\n        this.ModelParticleEmitterV47 = [\n          \"acceleration\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"accelerationDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"accelerationDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"alignmentType\",\n          \"uint8\",\n          \"alignmentDir\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorBegin\",\n          [\"[]\", \"float32\", 4],\n          \"colorEnd\",\n          [\"[]\", \"float32\", 4],\n          \"colorPeriod\",\n          \"float32\",\n          \"colorFalloff\",\n          [\"[]\", \"float32\", 2],\n          \"drag\",\n          \"float32\",\n          \"emitterFlags\",\n          \"uint32\",\n          \"offset\",\n          \"float32\",\n          \"opacityCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV47),\n          \"opacityCurvePreset\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"flipbook\",\n          Utils.getPointerReader(this.ModelParticleFlipbookV47),\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"rotationChange\",\n          [\"[]\", \"float32\", 2],\n          \"rotationDrag\",\n          \"float32\",\n          \"rotationInitial\",\n          [\"[]\", \"float32\", 2],\n          \"scaleChange\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleInitial\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV47),\n          \"scaleCurvePreset\",\n          \"uint32\",\n          \"velocity\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"velocityDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"velocityDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"velocityInherit\",\n          [\"[]\", \"float32\", 2],\n          \"spawnGroupSize\",\n          [\"[]\", \"float32\", 2],\n          \"spawnPeriod\",\n          \"float32\",\n          \"spawnProbability\",\n          \"float32\",\n          \"spawnRadius\",\n          [\"[]\", \"float32\", 2],\n          \"spawnShape\",\n          \"uint8\",\n          \"spawnWindEmit\",\n          [\"[]\", \"float32\", 2],\n          \"spawnWindSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"texCoordRect\",\n          [\"[]\", \"float32\", 4],\n          \"windInfluence\",\n          \"uint8\",\n        ];\n\n        this.ModelCloudDataV47 = [\n          \"clouds\",\n          Utils.getArrayReader(this.ModelParticleCloudV47),\n          \"emitters\",\n          Utils.getArrayReader(this.ModelParticleEmitterV47),\n        ];\n\n        this.ModelObstacleDataV47 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"dragCoef\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"geoData\",\n          [\"[]\", \"float32\", 3],\n          \"gravityCoef\",\n          \"float32\",\n          \"response\",\n          \"uint8\",\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.ModelStreakV47 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"velocity\",\n          [\"[]\", \"float32\", 3],\n          \"anchorIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"bone\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"jitter\",\n          \"float32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"noise\",\n          \"float32\",\n          \"spawnDist\",\n          \"float32\",\n          \"texScale\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n        ];\n\n        this.ModelStreakAnchorV47 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorStart\",\n          \"uint32\",\n          \"colorEnd\",\n          \"uint32\",\n          \"falloff\",\n          \"float32\",\n          \"lifetime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"texV\",\n          \"float32\",\n        ];\n\n        this.ModelStreakDataV47 = [\n          \"streaks\",\n          Utils.getArrayReader(this.ModelStreakV47),\n          \"anchors\",\n          Utils.getArrayReader(this.ModelStreakAnchorV47),\n        ];\n\n        this.ModelEffectLightV47 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"farDistance\",\n          \"float32\",\n          \"intensity\",\n          \"float32\",\n          \"nearDistance\",\n          \"float32\",\n        ];\n\n        this.ModelLightDataV47 = [\"effectLights\", Utils.getArrayReader(this.ModelEffectLightV47)];\n\n        this.PackVertexType = [\"fvf\", \"uint32\", \"vertices\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelClothBoneWeightV47 = [\"token\", Utils.getQWordReader(), \"weight\", \"uint8\"];\n\n        this.ModelClothMeshGroupV47 = [\"weights\", Utils.getArrayReader(this.ModelClothBoneWeightV47)];\n\n        this.ModelClothConstraintV47 = [\"vertIndexA\", \"uint16\", \"vertIndexB\", \"uint16\", \"distance\", \"float32\"];\n\n        this.ModelClothObstacleV47 = [\"bone\", Utils.getQWordReader(), \"type\", \"uint8\"];\n\n        this.ModelClothDataV47 = [\n          \"materialIndex\",\n          \"uint32\",\n          \"flags\",\n          \"uint8\",\n          \"gravity\",\n          \"float32\",\n          \"weight\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n          \"rigidness\",\n          \"uint8\",\n          \"mesh\",\n          this.PackVertexType,\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"lockCount\",\n          \"uint16\",\n          \"groups\",\n          Utils.getArrayReader(this.ModelClothMeshGroupV47),\n          \"softLocks\",\n          Utils.getArrayReader(\"uint8\"),\n          \"lod0Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV47),\n          \"lod1Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV47),\n          \"lod1VertexCount\",\n          \"uint16\",\n          \"lod1Indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"barycentricCoords\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"barycentricIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelClothObstacleV47),\n        ];\n\n        this.ModelLightningSystemV47 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"boltIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelLightningBoltV47 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"nodeIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"colorBegin\",\n          [\"[]\", \"uint32\", 3],\n          \"colorEnd\",\n          [\"[]\", \"uint32\", 3],\n          \"colorPeriod\",\n          \"float32\",\n          \"colorFalloff\",\n          [\"[]\", \"float32\", 2],\n          \"flags\",\n          \"uint32\",\n          \"fps\",\n          \"float32\",\n          \"probability\",\n          \"float32\",\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"numSegments\",\n          \"uint16\",\n          \"opacity\",\n          [\"[]\", \"float32\", 2],\n          \"opacityPreset\",\n          \"uint8\",\n          \"period\",\n          \"float32\",\n          \"texOffset\",\n          \"float32\",\n          \"texScale\",\n          \"float32\",\n          \"texSpeed\",\n          \"float32\",\n          \"thickness\",\n          \"float32\",\n          \"thicknessPreset\",\n          \"uint8\",\n          \"type\",\n          \"uint8\",\n          \"variance\",\n          \"float32\",\n          \"variancePreset\",\n          \"uint8\",\n          \"noise\",\n          \"float32\",\n        ];\n\n        this.ModelLightningNodeV47 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"childrenIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"flags\",\n          \"uint32\",\n          \"probability\",\n          \"float32\",\n          \"radius\",\n          \"float32\",\n          \"shape\",\n          \"uint8\",\n          \"updatePos\",\n          \"float32\",\n        ];\n\n        this.ModelLightningDataV47 = [\n          \"systems\",\n          Utils.getArrayReader(this.ModelLightningSystemV47),\n          \"bolts\",\n          Utils.getArrayReader(this.ModelLightningBoltV47),\n          \"nodes\",\n          Utils.getArrayReader(this.ModelLightningNodeV47),\n        ];\n\n        this.ModelBoneConstraintLinkV47 = [\n          \"angle\",\n          \"float32\",\n          \"azimuth\",\n          \"float32\",\n          \"distance\",\n          [\"[]\", \"float32\", 2],\n          \"token\",\n          Utils.getQWordReader(),\n        ];\n\n        this.ModelBoneConstraintV47 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint16\",\n          \"twistOffset\",\n          \"float32\",\n          \"animBlend\",\n          \"float32\",\n          \"drag\",\n          \"float32\",\n          \"ellipseRatio\",\n          \"float32\",\n          \"gravity\",\n          \"float32\",\n          \"collisionRadius\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n          \"angle\",\n          [\"[]\", \"float32\", 2],\n          \"angleStrength\",\n          \"float32\",\n          \"angleType\",\n          \"uint8\",\n          \"distanceInner\",\n          [\"[]\", \"float32\", 2],\n          \"distanceInnerStrength\",\n          \"float32\",\n          \"distanceInnerType\",\n          \"uint8\",\n          \"links\",\n          Utils.getArrayReader(this.ModelBoneConstraintLinkV47),\n          \"distanceOuter\",\n          [\"[]\", \"float32\", 2],\n          \"distanceOuterStrength\",\n          \"float32\",\n          \"distanceOuterType\",\n          \"uint8\",\n          \"twist\",\n          [\"[]\", \"float32\", 2],\n          \"twistStrength\",\n          \"float32\",\n          \"twistType\",\n          \"uint8\",\n        ];\n\n        this.ModelSoftBodyDataV47 = [\n          \"materialIndex\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"vertexFvf\",\n          \"uint32\",\n          \"vertBytes\",\n          Utils.getArrayReader(\"uint8\"),\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"bones\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.__root = this.ModelFileDataV47 = [\n          \"materials\",\n          Utils.getRefArrayReader(this.ModelMaterialDataV47),\n          \"meshes\",\n          Utils.getRefArrayReader(this.ModelMeshDataV47),\n          \"model\",\n          Utils.getPointerReader(this.ModelModelDataV47),\n          \"properties\",\n          Utils.getArrayReader(this.ModelPropertyDataV47),\n          \"cloudData\",\n          Utils.getPointerReader(this.ModelCloudDataV47),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelObstacleDataV47),\n          \"streakData\",\n          Utils.getPointerReader(this.ModelStreakDataV47),\n          \"lightData\",\n          Utils.getPointerReader(this.ModelLightDataV47),\n          \"clothData\",\n          Utils.getArrayReader(this.ModelClothDataV47),\n          \"actionOffsetNames\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"actionOffsets\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"lodOverride\",\n          [\"[]\", \"float32\", 2],\n          \"soundScript\",\n          Utils.getFileNameReader(),\n          \"lightningData\",\n          Utils.getPointerReader(this.ModelLightningDataV47),\n          \"boneConstraints\",\n          Utils.getArrayReader(this.ModelBoneConstraintV47),\n          \"softBodyData\",\n          Utils.getArrayReader(this.ModelSoftBodyDataV47),\n        ];\n      },\n\n      // => Version: 46, ReferencedFunction: 0xF2AAD0\n      46: function () {\n        this.ModelTextureDataV46 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"textureFlags\",\n          \"uint32\",\n          \"token\",\n          Utils.getQWordReader(),\n          \"blitId\",\n          Utils.getQWordReader(),\n          \"uvAnimId\",\n          \"uint32\",\n          \"uvPSInputIndex\",\n          \"uint8\",\n        ];\n\n        this.ModelConstantDataV46 = [\"name\", \"uint32\", \"value\", [\"[]\", \"float32\", 4], \"constantFlags\", \"uint32\"];\n\n        this.ModelMatConstLinkV46 = [\"linkToken\", Utils.getQWordReader(), \"constantToken\", \"uint32\"];\n\n        this.ModelUVTransLinkV46 = [\"linkToken\", Utils.getQWordReader(), \"uvAnimId\", \"uint32\", \"type\", \"uint8\"];\n\n        this.ModelMaterialTexTransformV46 = [\n          \"random\",\n          \"uint8\",\n          \"uvIndex\",\n          \"uint8\",\n          \"columns\",\n          \"uint8\",\n          \"rows\",\n          \"uint8\",\n          \"count\",\n          \"uint16\",\n          \"fps\",\n          \"float32\",\n          \"scroll\",\n          [\"[]\", \"float32\", 2],\n        ];\n\n        this.ModelMaterialDataV46 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"materialFlags\",\n          \"uint32\",\n          \"sortOrder\",\n          \"uint32\",\n          \"texCoordCount\",\n          \"uint8\",\n          \"textures\",\n          Utils.getArrayReader(this.ModelTextureDataV46),\n          \"constants\",\n          Utils.getArrayReader(this.ModelConstantDataV46),\n          \"matConstLinks\",\n          Utils.getArrayReader(this.ModelMatConstLinkV46),\n          \"uvTransLinks\",\n          Utils.getArrayReader(this.ModelUVTransLinkV46),\n          \"texTransforms\",\n          Utils.getArrayReader(this.ModelMaterialTexTransformV46),\n        ];\n\n        this.ModelMeshLodDataV46 = [\"indices\", Utils.getArrayReader(\"uint16\")];\n\n        this.ModelMeshMorphTargetV46 = [\n          \"positionIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"positions\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"normalIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"normals\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"meshName\",\n          Utils.getStringReader(),\n        ];\n\n        this.PackGrannyMeshType = [\"mesh\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelMeshDataV46 = [\n          \"visBone\",\n          Utils.getQWordReader(),\n          \"lods\",\n          Utils.getArrayReader(this.ModelMeshLodDataV46),\n          \"morphTargets\",\n          Utils.getArrayReader(this.ModelMeshMorphTargetV46),\n          \"mesh\",\n          this.PackGrannyMeshType,\n          \"flags\",\n          \"uint32\",\n          \"seamVertIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"meshName\",\n          Utils.getQWordReader(),\n          \"minBound\",\n          [\"[]\", \"float32\", 3],\n          \"maxBound\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.ModelTransformDataV46 = [\n          \"Flags\",\n          \"uint32\",\n          \"Position\",\n          [\"[]\", \"float32\", 3],\n          \"Orientation\",\n          [\"[]\", \"float32\", 4],\n          \"ScaleShear\",\n          [\"[]\", [\"[]\", \"float32\", 3], 3],\n        ];\n\n        this.ModelBoneDataV46 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"ParentIndex\",\n          \"uint32\",\n          \"LocalTransform\",\n          this.ModelTransformDataV46,\n          \"InverseWorld4x4\",\n          [\"[]\", [\"[]\", \"float32\", 4], 4],\n          \"LODError\",\n          \"float32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n        ];\n\n        this.ModelSkeletonDataV46 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Bones\",\n          Utils.getArrayReader(this.ModelBoneDataV46),\n          \"LODType\",\n          \"uint32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n        ];\n\n        this.ModelMeshBindingDataV46 = [\"Mesh\", Utils.getPointerReader(\"uint8\")];\n\n        this.PackGrannyTrackMaskType = [\"trackMask\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelTrackMaskV46 = [\"trackMask\", this.PackGrannyTrackMaskType, \"token\", Utils.getQWordReader()];\n\n        this.ModelModelDataV46 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Skeleton\",\n          Utils.getPointerReader(this.ModelSkeletonDataV46),\n          \"InitialPlacement\",\n          this.ModelTransformDataV46,\n          \"MeshBindings\",\n          Utils.getArrayReader(this.ModelMeshBindingDataV46),\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n          \"boneFlags\",\n          Utils.getArrayReader(\"uint32\"),\n          \"emitterBones\",\n          Utils.getArrayReader(\"uint32\"),\n          \"trackMasks\",\n          Utils.getArrayReader(this.ModelTrackMaskV46),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"radius\",\n          \"float32\",\n        ];\n\n        this.ModelPropertyDataV46 = [\n          \"id\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint32\",\n          \"mergeIndex\",\n          \"uint32\",\n          \"time\",\n          \"float32\",\n          \"val\",\n          Utils.getQWordReader(),\n          \"strVal\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.ModelParticleCloudV46 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"drag\",\n          \"float32\",\n          \"emitterIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"fvf\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"obstacleIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"velocity\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.ModelParticleCurveV46 = [\"curveType\", \"uint8\", \"keys\", Utils.getArrayReader([\"[]\", \"float32\", 2])];\n\n        this.ModelParticleFlipbookV46 = [\n          \"columns\",\n          \"uint8\",\n          \"count\",\n          \"uint8\",\n          \"fps\",\n          \"float32\",\n          \"rows\",\n          \"uint8\",\n          \"start\",\n          \"uint8\",\n        ];\n\n        this.ModelParticleEmitterV46 = [\n          \"acceleration\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"accelerationDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"accelerationDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"alignmentType\",\n          \"uint8\",\n          \"alignmentDir\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorBegin\",\n          [\"[]\", \"float32\", 4],\n          \"colorEnd\",\n          [\"[]\", \"float32\", 4],\n          \"colorPeriod\",\n          \"float32\",\n          \"colorFalloff\",\n          [\"[]\", \"float32\", 2],\n          \"drag\",\n          \"float32\",\n          \"emitterFlags\",\n          \"uint32\",\n          \"offset\",\n          \"float32\",\n          \"opacityCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV46),\n          \"opacityCurvePreset\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"flipbook\",\n          Utils.getPointerReader(this.ModelParticleFlipbookV46),\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"rotationChange\",\n          [\"[]\", \"float32\", 2],\n          \"rotationDrag\",\n          \"float32\",\n          \"rotationInitial\",\n          [\"[]\", \"float32\", 2],\n          \"scaleChange\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleInitial\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV46),\n          \"scaleCurvePreset\",\n          \"uint32\",\n          \"velocity\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"velocityDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"velocityDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"velocityInherit\",\n          [\"[]\", \"float32\", 2],\n          \"spawnGroupSize\",\n          [\"[]\", \"float32\", 2],\n          \"spawnPeriod\",\n          \"float32\",\n          \"spawnProbability\",\n          \"float32\",\n          \"spawnRadius\",\n          [\"[]\", \"float32\", 2],\n          \"spawnShape\",\n          \"uint8\",\n          \"spawnWindEmit\",\n          [\"[]\", \"float32\", 2],\n          \"spawnWindSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"texCoordRect\",\n          [\"[]\", \"float32\", 4],\n          \"windInfluence\",\n          \"uint8\",\n        ];\n\n        this.ModelCloudDataV46 = [\n          \"clouds\",\n          Utils.getArrayReader(this.ModelParticleCloudV46),\n          \"emitters\",\n          Utils.getArrayReader(this.ModelParticleEmitterV46),\n        ];\n\n        this.ModelObstacleDataV46 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"dragCoef\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"geoData\",\n          [\"[]\", \"float32\", 3],\n          \"gravityCoef\",\n          \"float32\",\n          \"response\",\n          \"uint8\",\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.ModelStreakV46 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"velocity\",\n          [\"[]\", \"float32\", 3],\n          \"anchorIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"bone\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"jitter\",\n          \"float32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"noise\",\n          \"float32\",\n          \"spawnDist\",\n          \"float32\",\n          \"texScale\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n        ];\n\n        this.ModelStreakAnchorV46 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorStart\",\n          \"uint32\",\n          \"colorEnd\",\n          \"uint32\",\n          \"falloff\",\n          \"float32\",\n          \"lifetime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"texV\",\n          \"float32\",\n        ];\n\n        this.ModelStreakDataV46 = [\n          \"streaks\",\n          Utils.getArrayReader(this.ModelStreakV46),\n          \"anchors\",\n          Utils.getArrayReader(this.ModelStreakAnchorV46),\n        ];\n\n        this.ModelEffectLightV46 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"farDistance\",\n          \"float32\",\n          \"intensity\",\n          \"float32\",\n          \"nearDistance\",\n          \"float32\",\n        ];\n\n        this.ModelLightDataV46 = [\"effectLights\", Utils.getArrayReader(this.ModelEffectLightV46)];\n\n        this.PackVertexType = [\"fvf\", \"uint32\", \"vertices\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelClothBoneWeightV46 = [\"token\", Utils.getQWordReader(), \"weight\", \"uint8\"];\n\n        this.ModelClothMeshGroupV46 = [\"weights\", Utils.getArrayReader(this.ModelClothBoneWeightV46)];\n\n        this.ModelClothConstraintV46 = [\"vertIndexA\", \"uint16\", \"vertIndexB\", \"uint16\", \"distance\", \"float32\"];\n\n        this.ModelClothObstacleV46 = [\"bone\", Utils.getQWordReader(), \"type\", \"uint8\"];\n\n        this.ModelClothDataV46 = [\n          \"materialIndex\",\n          \"uint32\",\n          \"flags\",\n          \"uint8\",\n          \"gravity\",\n          \"float32\",\n          \"weight\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n          \"rigidness\",\n          \"uint8\",\n          \"mesh\",\n          this.PackVertexType,\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"lockCount\",\n          \"uint16\",\n          \"groups\",\n          Utils.getArrayReader(this.ModelClothMeshGroupV46),\n          \"softLocks\",\n          Utils.getArrayReader(\"uint8\"),\n          \"lod0Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV46),\n          \"lod1Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV46),\n          \"lod1VertexCount\",\n          \"uint16\",\n          \"lod1Indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"barycentricCoords\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"barycentricIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelClothObstacleV46),\n        ];\n\n        this.ModelLightningSystemV46 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"boltIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelLightningBoltV46 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"nodeIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"colorBegin\",\n          [\"[]\", \"uint32\", 3],\n          \"colorEnd\",\n          [\"[]\", \"uint32\", 3],\n          \"colorPeriod\",\n          \"float32\",\n          \"colorFalloff\",\n          [\"[]\", \"float32\", 2],\n          \"flags\",\n          \"uint32\",\n          \"fps\",\n          \"float32\",\n          \"probability\",\n          \"float32\",\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"numSegments\",\n          \"uint16\",\n          \"opacity\",\n          [\"[]\", \"float32\", 2],\n          \"opacityPreset\",\n          \"uint8\",\n          \"period\",\n          \"float32\",\n          \"texOffset\",\n          \"float32\",\n          \"texScale\",\n          \"float32\",\n          \"texSpeed\",\n          \"float32\",\n          \"thickness\",\n          \"float32\",\n          \"thicknessPreset\",\n          \"uint8\",\n          \"type\",\n          \"uint8\",\n          \"variance\",\n          \"float32\",\n          \"variancePreset\",\n          \"uint8\",\n          \"noise\",\n          \"float32\",\n        ];\n\n        this.ModelLightningNodeV46 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"childrenIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"flags\",\n          \"uint32\",\n          \"probability\",\n          \"float32\",\n          \"radius\",\n          \"float32\",\n          \"shape\",\n          \"uint8\",\n          \"updatePos\",\n          \"float32\",\n        ];\n\n        this.ModelLightningDataV46 = [\n          \"systems\",\n          Utils.getArrayReader(this.ModelLightningSystemV46),\n          \"bolts\",\n          Utils.getArrayReader(this.ModelLightningBoltV46),\n          \"nodes\",\n          Utils.getArrayReader(this.ModelLightningNodeV46),\n        ];\n\n        this.ModelBoneConstraintLinkV46 = [\n          \"angle\",\n          \"float32\",\n          \"azimuth\",\n          \"float32\",\n          \"distance\",\n          [\"[]\", \"float32\", 2],\n          \"token\",\n          Utils.getQWordReader(),\n        ];\n\n        this.ModelBoneConstraintV46 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint16\",\n          \"twistOffset\",\n          \"float32\",\n          \"animBlend\",\n          \"float32\",\n          \"drag\",\n          \"float32\",\n          \"ellipseRatio\",\n          \"float32\",\n          \"gravity\",\n          \"float32\",\n          \"collisionRadius\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n          \"angle\",\n          [\"[]\", \"float32\", 2],\n          \"angleStrength\",\n          \"float32\",\n          \"angleType\",\n          \"uint8\",\n          \"distanceInner\",\n          [\"[]\", \"float32\", 2],\n          \"distanceInnerStrength\",\n          \"float32\",\n          \"distanceInnerType\",\n          \"uint8\",\n          \"links\",\n          Utils.getArrayReader(this.ModelBoneConstraintLinkV46),\n          \"distanceOuter\",\n          [\"[]\", \"float32\", 2],\n          \"distanceOuterStrength\",\n          \"float32\",\n          \"distanceOuterType\",\n          \"uint8\",\n          \"twist\",\n          [\"[]\", \"float32\", 2],\n          \"twistStrength\",\n          \"float32\",\n          \"twistType\",\n          \"uint8\",\n        ];\n\n        this.ModelSoftBodyDataV46 = [\n          \"materialIndex\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"vertexFvf\",\n          \"uint32\",\n          \"vertBytes\",\n          Utils.getArrayReader(\"uint8\"),\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"bones\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.__root = this.ModelFileDataV46 = [\n          \"materials\",\n          Utils.getRefArrayReader(this.ModelMaterialDataV46),\n          \"meshes\",\n          Utils.getRefArrayReader(this.ModelMeshDataV46),\n          \"model\",\n          Utils.getPointerReader(this.ModelModelDataV46),\n          \"properties\",\n          Utils.getArrayReader(this.ModelPropertyDataV46),\n          \"cloudData\",\n          Utils.getPointerReader(this.ModelCloudDataV46),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelObstacleDataV46),\n          \"streakData\",\n          Utils.getPointerReader(this.ModelStreakDataV46),\n          \"lightData\",\n          Utils.getPointerReader(this.ModelLightDataV46),\n          \"clothData\",\n          Utils.getArrayReader(this.ModelClothDataV46),\n          \"actionOffsetNames\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"actionOffsets\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"lodOverride\",\n          [\"[]\", \"float32\", 2],\n          \"soundScript\",\n          Utils.getFileNameReader(),\n          \"lightningData\",\n          Utils.getPointerReader(this.ModelLightningDataV46),\n          \"boneConstraints\",\n          Utils.getArrayReader(this.ModelBoneConstraintV46),\n          \"softBodyData\",\n          Utils.getArrayReader(this.ModelSoftBodyDataV46),\n        ];\n      },\n\n      // => Version: 45\n      45: function () {\n        this.ModelTextureDataV45 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"textureFlags\",\n          \"uint32\",\n          \"token\",\n          Utils.getQWordReader(),\n          \"blitId\",\n          Utils.getQWordReader(),\n          \"uvAnimId\",\n          \"uint32\",\n          \"uvPSInputIndex\",\n          \"uint8\",\n        ];\n\n        this.ModelConstantDataV45 = [\"name\", \"uint32\", \"value\", [\"[]\", \"float32\", 4], \"constantFlags\", \"uint32\"];\n\n        this.ModelMatConstLinkV45 = [\"linkToken\", Utils.getQWordReader(), \"constantToken\", \"uint32\"];\n\n        this.ModelUVTransLinkV45 = [\"linkToken\", Utils.getQWordReader(), \"uvAnimId\", \"uint32\", \"type\", \"uint8\"];\n\n        this.ModelMaterialTexTransformV45 = [\n          \"random\",\n          \"uint8\",\n          \"uvIndex\",\n          \"uint8\",\n          \"columns\",\n          \"uint8\",\n          \"rows\",\n          \"uint8\",\n          \"count\",\n          \"uint16\",\n          \"fps\",\n          \"float32\",\n          \"scroll\",\n          [\"[]\", \"float32\", 2],\n        ];\n\n        this.ModelMaterialDataV45 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"materialFlags\",\n          \"uint32\",\n          \"sortOrder\",\n          \"uint32\",\n          \"texCoordCount\",\n          \"uint8\",\n          \"textures\",\n          Utils.getArrayReader(this.ModelTextureDataV45),\n          \"constants\",\n          Utils.getArrayReader(this.ModelConstantDataV45),\n          \"matConstLinks\",\n          Utils.getArrayReader(this.ModelMatConstLinkV45),\n          \"uvTransLinks\",\n          Utils.getArrayReader(this.ModelUVTransLinkV45),\n          \"texTransforms\",\n          Utils.getArrayReader(this.ModelMaterialTexTransformV45),\n        ];\n\n        this.ModelMeshLodDataV45 = [\"indices\", Utils.getArrayReader(\"uint16\")];\n\n        this.ModelMeshMorphTargetV45 = [\n          \"positionIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"positions\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"normalIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"normals\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"meshName\",\n          Utils.getStringReader(),\n        ];\n\n        this.PackGrannyMeshType = [\"mesh\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelMeshDataV45 = [\n          \"visBone\",\n          Utils.getQWordReader(),\n          \"lods\",\n          Utils.getArrayReader(this.ModelMeshLodDataV45),\n          \"morphTargets\",\n          Utils.getArrayReader(this.ModelMeshMorphTargetV45),\n          \"mesh\",\n          this.PackGrannyMeshType,\n          \"flags\",\n          \"uint32\",\n          \"seamVertIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"meshName\",\n          Utils.getQWordReader(),\n          \"minBound\",\n          [\"[]\", \"float32\", 3],\n          \"maxBound\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.ModelTransformDataV45 = [\n          \"Flags\",\n          \"uint32\",\n          \"Position\",\n          [\"[]\", \"float32\", 3],\n          \"Orientation\",\n          [\"[]\", \"float32\", 4],\n          \"ScaleShear\",\n          [\"[]\", [\"[]\", \"float32\", 3], 3],\n        ];\n\n        this.ModelBoneDataV45 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"ParentIndex\",\n          \"uint32\",\n          \"LocalTransform\",\n          this.ModelTransformDataV45,\n          \"InverseWorld4x4\",\n          [\"[]\", [\"[]\", \"float32\", 4], 4],\n          \"LODError\",\n          \"float32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n        ];\n\n        this.ModelSkeletonDataV45 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Bones\",\n          Utils.getArrayReader(this.ModelBoneDataV45),\n          \"LODType\",\n          \"uint32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n        ];\n\n        this.ModelMeshBindingDataV45 = [\"Mesh\", Utils.getPointerReader(\"uint8\")];\n\n        this.PackGrannyTrackMaskType = [\"trackMask\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelTrackMaskV45 = [\"trackMask\", this.PackGrannyTrackMaskType, \"token\", Utils.getQWordReader()];\n\n        this.ModelModelDataV45 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Skeleton\",\n          Utils.getPointerReader(this.ModelSkeletonDataV45),\n          \"InitialPlacement\",\n          this.ModelTransformDataV45,\n          \"MeshBindings\",\n          Utils.getArrayReader(this.ModelMeshBindingDataV45),\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n          \"boneFlags\",\n          Utils.getArrayReader(\"uint32\"),\n          \"emitterBones\",\n          Utils.getArrayReader(\"uint32\"),\n          \"trackMasks\",\n          Utils.getArrayReader(this.ModelTrackMaskV45),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"radius\",\n          \"float32\",\n        ];\n\n        this.ModelPropertyDataV45 = [\n          \"id\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint32\",\n          \"mergeIndex\",\n          \"uint32\",\n          \"time\",\n          \"float32\",\n          \"val\",\n          Utils.getQWordReader(),\n          \"strVal\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.ModelParticleCloudV45 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"drag\",\n          \"float32\",\n          \"emitterIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"fvf\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"obstacleIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"velocity\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.ModelParticleCurveV45 = [\"curveType\", \"uint8\", \"keys\", Utils.getArrayReader([\"[]\", \"float32\", 2])];\n\n        this.ModelParticleFlipbookV45 = [\n          \"columns\",\n          \"uint8\",\n          \"count\",\n          \"uint8\",\n          \"fps\",\n          \"float32\",\n          \"rows\",\n          \"uint8\",\n          \"start\",\n          \"uint8\",\n        ];\n\n        this.ModelParticleEmitterV45 = [\n          \"acceleration\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"accelerationDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"accelerationDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"alignmentType\",\n          \"uint8\",\n          \"alignmentDir\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorBegin\",\n          [\"[]\", \"float32\", 4],\n          \"colorEnd\",\n          [\"[]\", \"float32\", 4],\n          \"colorPeriod\",\n          \"float32\",\n          \"colorFalloff\",\n          [\"[]\", \"float32\", 2],\n          \"drag\",\n          \"float32\",\n          \"emitterFlags\",\n          \"uint32\",\n          \"offset\",\n          \"float32\",\n          \"opacityCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV45),\n          \"opacityCurvePreset\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"flipbook\",\n          Utils.getPointerReader(this.ModelParticleFlipbookV45),\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"rotationChange\",\n          [\"[]\", \"float32\", 2],\n          \"rotationDrag\",\n          \"float32\",\n          \"rotationInitial\",\n          [\"[]\", \"float32\", 2],\n          \"scaleChange\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleInitial\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV45),\n          \"scaleCurvePreset\",\n          \"uint32\",\n          \"velocity\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"velocityDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"velocityDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"velocityInherit\",\n          [\"[]\", \"float32\", 2],\n          \"spawnGroupSize\",\n          [\"[]\", \"float32\", 2],\n          \"spawnPeriod\",\n          \"float32\",\n          \"spawnProbability\",\n          \"float32\",\n          \"spawnRadius\",\n          [\"[]\", \"float32\", 2],\n          \"spawnShape\",\n          \"uint8\",\n          \"spawnWindEmit\",\n          [\"[]\", \"float32\", 2],\n          \"spawnWindSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"texCoordRect\",\n          [\"[]\", \"float32\", 4],\n          \"windInfluence\",\n          \"uint8\",\n        ];\n\n        this.ModelCloudDataV45 = [\n          \"clouds\",\n          Utils.getArrayReader(this.ModelParticleCloudV45),\n          \"emitters\",\n          Utils.getArrayReader(this.ModelParticleEmitterV45),\n        ];\n\n        this.ModelObstacleDataV45 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"dragCoef\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"geoData\",\n          [\"[]\", \"float32\", 3],\n          \"gravityCoef\",\n          \"float32\",\n          \"response\",\n          \"uint8\",\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.ModelStreakV45 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"velocity\",\n          [\"[]\", \"float32\", 3],\n          \"anchorIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"bone\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"jitter\",\n          \"float32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"noise\",\n          \"float32\",\n          \"spawnDist\",\n          \"float32\",\n          \"texScale\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n        ];\n\n        this.ModelStreakAnchorV45 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorStart\",\n          \"uint32\",\n          \"colorEnd\",\n          \"uint32\",\n          \"falloff\",\n          \"float32\",\n          \"lifetime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"texV\",\n          \"float32\",\n        ];\n\n        this.ModelStreakDataV45 = [\n          \"streaks\",\n          Utils.getArrayReader(this.ModelStreakV45),\n          \"anchors\",\n          Utils.getArrayReader(this.ModelStreakAnchorV45),\n        ];\n\n        this.ModelEffectLightV45 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"farDistance\",\n          \"float32\",\n          \"intensity\",\n          \"float32\",\n          \"nearDistance\",\n          \"float32\",\n        ];\n\n        this.ModelLightDataV45 = [\"effectLights\", Utils.getArrayReader(this.ModelEffectLightV45)];\n\n        this.PackVertexType = [\"fvf\", \"uint32\", \"vertices\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelClothBoneWeightV45 = [\"token\", Utils.getQWordReader(), \"weight\", \"uint8\"];\n\n        this.ModelClothMeshGroupV45 = [\"weights\", Utils.getArrayReader(this.ModelClothBoneWeightV45)];\n\n        this.ModelClothConstraintV45 = [\"vertIndexA\", \"uint16\", \"vertIndexB\", \"uint16\", \"distance\", \"float32\"];\n\n        this.ModelClothObstacleV45 = [\"bone\", Utils.getQWordReader(), \"type\", \"uint8\"];\n\n        this.ModelClothDataV45 = [\n          \"materialIndex\",\n          \"uint32\",\n          \"flags\",\n          \"uint8\",\n          \"gravity\",\n          \"float32\",\n          \"weight\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n          \"rigidness\",\n          \"uint8\",\n          \"mesh\",\n          this.PackVertexType,\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"lockCount\",\n          \"uint16\",\n          \"groups\",\n          Utils.getArrayReader(this.ModelClothMeshGroupV45),\n          \"softLocks\",\n          Utils.getArrayReader(\"uint8\"),\n          \"lod0Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV45),\n          \"lod1Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV45),\n          \"lod1VertexCount\",\n          \"uint16\",\n          \"lod1Indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"barycentricCoords\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"barycentricIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelClothObstacleV45),\n        ];\n\n        this.ModelLightningSystemV45 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"boltIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelLightningBoltV45 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"nodeIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"colorBegin\",\n          [\"[]\", \"uint32\", 3],\n          \"colorEnd\",\n          [\"[]\", \"uint32\", 3],\n          \"colorPeriod\",\n          \"float32\",\n          \"colorFalloff\",\n          [\"[]\", \"float32\", 2],\n          \"flags\",\n          \"uint32\",\n          \"fps\",\n          \"float32\",\n          \"probability\",\n          \"float32\",\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"numSegments\",\n          \"uint16\",\n          \"opacity\",\n          [\"[]\", \"float32\", 2],\n          \"opacityPreset\",\n          \"uint8\",\n          \"period\",\n          \"float32\",\n          \"texOffset\",\n          \"float32\",\n          \"texScale\",\n          \"float32\",\n          \"texSpeed\",\n          \"float32\",\n          \"thickness\",\n          \"float32\",\n          \"thicknessPreset\",\n          \"uint8\",\n          \"type\",\n          \"uint8\",\n          \"variance\",\n          \"float32\",\n          \"variancePreset\",\n          \"uint8\",\n          \"noise\",\n          \"float32\",\n        ];\n\n        this.ModelLightningNodeV45 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"childrenIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"flags\",\n          \"uint32\",\n          \"probability\",\n          \"float32\",\n          \"radius\",\n          \"float32\",\n          \"shape\",\n          \"uint8\",\n          \"updatePos\",\n          \"float32\",\n        ];\n\n        this.ModelLightningDataV45 = [\n          \"systems\",\n          Utils.getArrayReader(this.ModelLightningSystemV45),\n          \"bolts\",\n          Utils.getArrayReader(this.ModelLightningBoltV45),\n          \"nodes\",\n          Utils.getArrayReader(this.ModelLightningNodeV45),\n        ];\n\n        this.ModelBoneConstraintLinkV45 = [\n          \"angle\",\n          \"float32\",\n          \"azimuth\",\n          \"float32\",\n          \"distance\",\n          [\"[]\", \"float32\", 2],\n          \"token\",\n          Utils.getQWordReader(),\n        ];\n\n        this.ModelBoneConstraintV45 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint16\",\n          \"twistOffset\",\n          \"float32\",\n          \"animBlend\",\n          \"float32\",\n          \"drag\",\n          \"float32\",\n          \"ellipseRatio\",\n          \"float32\",\n          \"gravity\",\n          \"float32\",\n          \"collisionRadius\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n          \"angle\",\n          [\"[]\", \"float32\", 2],\n          \"angleStrength\",\n          \"float32\",\n          \"angleType\",\n          \"uint8\",\n          \"distanceInner\",\n          [\"[]\", \"float32\", 2],\n          \"distanceInnerStrength\",\n          \"float32\",\n          \"distanceInnerType\",\n          \"uint8\",\n          \"links\",\n          Utils.getArrayReader(this.ModelBoneConstraintLinkV45),\n          \"distanceOuter\",\n          [\"[]\", \"float32\", 2],\n          \"distanceOuterStrength\",\n          \"float32\",\n          \"distanceOuterType\",\n          \"uint8\",\n          \"twist\",\n          [\"[]\", \"float32\", 2],\n          \"twistStrength\",\n          \"float32\",\n          \"twistType\",\n          \"uint8\",\n        ];\n\n        this.ModelSoftBodyDataV45 = [\n          \"materialIndex\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"vertexFvf\",\n          \"uint32\",\n          \"vertBytes\",\n          Utils.getArrayReader(\"uint8\"),\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"bones\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.__root = this.ModelFileDataV45 = [\n          \"materials\",\n          Utils.getRefArrayReader(this.ModelMaterialDataV45),\n          \"meshes\",\n          Utils.getRefArrayReader(this.ModelMeshDataV45),\n          \"model\",\n          Utils.getPointerReader(this.ModelModelDataV45),\n          \"properties\",\n          Utils.getArrayReader(this.ModelPropertyDataV45),\n          \"cloudData\",\n          Utils.getPointerReader(this.ModelCloudDataV45),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelObstacleDataV45),\n          \"streakData\",\n          Utils.getPointerReader(this.ModelStreakDataV45),\n          \"lightData\",\n          Utils.getPointerReader(this.ModelLightDataV45),\n          \"clothData\",\n          Utils.getArrayReader(this.ModelClothDataV45),\n          \"actionOffsetNames\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"actionOffsets\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"lodOverride\",\n          [\"[]\", \"float32\", 2],\n          \"soundScript\",\n          Utils.getFileNameReader(),\n          \"lightningData\",\n          Utils.getPointerReader(this.ModelLightningDataV45),\n          \"boneConstraints\",\n          Utils.getArrayReader(this.ModelBoneConstraintV45),\n          \"softBodyData\",\n          Utils.getArrayReader(this.ModelSoftBodyDataV45),\n        ];\n      },\n\n      // => Version: 44, ReferencedFunction: 0xF2A910\n      44: function () {\n        this.ModelTextureDataV44 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"textureFlags\",\n          \"uint32\",\n          \"token\",\n          Utils.getQWordReader(),\n          \"blitId\",\n          Utils.getQWordReader(),\n          \"uvAnimId\",\n          \"uint32\",\n          \"uvPSInputIndex\",\n          \"uint8\",\n        ];\n\n        this.ModelConstantDataV44 = [\"name\", \"uint32\", \"value\", [\"[]\", \"float32\", 4], \"constantFlags\", \"uint32\"];\n\n        this.ModelMatConstLinkV44 = [\"linkToken\", Utils.getQWordReader(), \"constantToken\", \"uint32\"];\n\n        this.ModelUVTransLinkV44 = [\"linkToken\", Utils.getQWordReader(), \"uvAnimId\", \"uint32\", \"type\", \"uint8\"];\n\n        this.ModelMaterialDataV44 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"materialFlags\",\n          \"uint32\",\n          \"sortOrder\",\n          \"uint32\",\n          \"texCoordCount\",\n          \"uint8\",\n          \"textures\",\n          Utils.getArrayReader(this.ModelTextureDataV44),\n          \"constants\",\n          Utils.getArrayReader(this.ModelConstantDataV44),\n          \"matConstLinks\",\n          Utils.getArrayReader(this.ModelMatConstLinkV44),\n          \"uvTransLinks\",\n          Utils.getArrayReader(this.ModelUVTransLinkV44),\n        ];\n\n        this.ModelMeshLodDataV44 = [\"indices\", Utils.getArrayReader(\"uint16\")];\n\n        this.ModelMeshMorphTargetV44 = [\n          \"positionIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"positions\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"normalIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"normals\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"meshName\",\n          Utils.getStringReader(),\n        ];\n\n        this.PackGrannyMeshType = [\"mesh\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelMeshDataV44 = [\n          \"visBone\",\n          Utils.getQWordReader(),\n          \"lods\",\n          Utils.getArrayReader(this.ModelMeshLodDataV44),\n          \"morphTargets\",\n          Utils.getArrayReader(this.ModelMeshMorphTargetV44),\n          \"mesh\",\n          this.PackGrannyMeshType,\n          \"flags\",\n          \"uint32\",\n          \"seamVertIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"meshName\",\n          Utils.getQWordReader(),\n          \"minBound\",\n          [\"[]\", \"float32\", 3],\n          \"maxBound\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.ModelTransformDataV44 = [\n          \"Flags\",\n          \"uint32\",\n          \"Position\",\n          [\"[]\", \"float32\", 3],\n          \"Orientation\",\n          [\"[]\", \"float32\", 4],\n          \"ScaleShear\",\n          [\"[]\", [\"[]\", \"float32\", 3], 3],\n        ];\n\n        this.ModelBoneDataV44 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"ParentIndex\",\n          \"uint32\",\n          \"LocalTransform\",\n          this.ModelTransformDataV44,\n          \"InverseWorld4x4\",\n          [\"[]\", [\"[]\", \"float32\", 4], 4],\n          \"LODError\",\n          \"float32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n        ];\n\n        this.ModelSkeletonDataV44 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Bones\",\n          Utils.getArrayReader(this.ModelBoneDataV44),\n          \"LODType\",\n          \"uint32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n        ];\n\n        this.ModelMeshBindingDataV44 = [\"Mesh\", Utils.getPointerReader(\"uint8\")];\n\n        this.PackGrannyTrackMaskType = [\"trackMask\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelTrackMaskV44 = [\"trackMask\", this.PackGrannyTrackMaskType, \"token\", Utils.getQWordReader()];\n\n        this.ModelModelDataV44 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Skeleton\",\n          Utils.getPointerReader(this.ModelSkeletonDataV44),\n          \"InitialPlacement\",\n          this.ModelTransformDataV44,\n          \"MeshBindings\",\n          Utils.getArrayReader(this.ModelMeshBindingDataV44),\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n          \"boneFlags\",\n          Utils.getArrayReader(\"uint32\"),\n          \"emitterBones\",\n          Utils.getArrayReader(\"uint32\"),\n          \"trackMasks\",\n          Utils.getArrayReader(this.ModelTrackMaskV44),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"radius\",\n          \"float32\",\n        ];\n\n        this.ModelPropertyDataV44 = [\n          \"id\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint32\",\n          \"mergeIndex\",\n          \"uint32\",\n          \"time\",\n          \"float32\",\n          \"val\",\n          Utils.getQWordReader(),\n          \"strVal\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.ModelParticleCloudV44 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"drag\",\n          \"float32\",\n          \"emitterIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"fvf\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"obstacleIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"velocity\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.ModelParticleCurveV44 = [\"curveType\", \"uint8\", \"keys\", Utils.getArrayReader([\"[]\", \"float32\", 2])];\n\n        this.ModelParticleFlipbookV44 = [\n          \"columns\",\n          \"uint8\",\n          \"count\",\n          \"uint8\",\n          \"fps\",\n          \"float32\",\n          \"rows\",\n          \"uint8\",\n          \"start\",\n          \"uint8\",\n        ];\n\n        this.ModelParticleEmitterV44 = [\n          \"acceleration\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"accelerationDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"accelerationDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"alignmentType\",\n          \"uint8\",\n          \"alignmentDir\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorBegin\",\n          [\"[]\", \"float32\", 4],\n          \"colorEnd\",\n          [\"[]\", \"float32\", 4],\n          \"colorPeriod\",\n          \"float32\",\n          \"colorFalloff\",\n          [\"[]\", \"float32\", 2],\n          \"drag\",\n          \"float32\",\n          \"emitterFlags\",\n          \"uint32\",\n          \"offset\",\n          \"float32\",\n          \"opacityCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV44),\n          \"opacityCurvePreset\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"flipbook\",\n          Utils.getPointerReader(this.ModelParticleFlipbookV44),\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"rotationChange\",\n          [\"[]\", \"float32\", 2],\n          \"rotationDrag\",\n          \"float32\",\n          \"rotationInitial\",\n          [\"[]\", \"float32\", 2],\n          \"scaleChange\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleInitial\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV44),\n          \"scaleCurvePreset\",\n          \"uint32\",\n          \"velocity\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"velocityDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"velocityDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"velocityInherit\",\n          [\"[]\", \"float32\", 2],\n          \"spawnGroupSize\",\n          [\"[]\", \"float32\", 2],\n          \"spawnPeriod\",\n          \"float32\",\n          \"spawnProbability\",\n          \"float32\",\n          \"spawnRadius\",\n          [\"[]\", \"float32\", 2],\n          \"spawnShape\",\n          \"uint8\",\n          \"spawnWindEmit\",\n          [\"[]\", \"float32\", 2],\n          \"spawnWindSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"texCoordRect\",\n          [\"[]\", \"float32\", 4],\n          \"windInfluence\",\n          \"uint8\",\n        ];\n\n        this.ModelCloudDataV44 = [\n          \"clouds\",\n          Utils.getArrayReader(this.ModelParticleCloudV44),\n          \"emitters\",\n          Utils.getArrayReader(this.ModelParticleEmitterV44),\n        ];\n\n        this.ModelObstacleDataV44 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"dragCoef\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"geoData\",\n          [\"[]\", \"float32\", 3],\n          \"gravityCoef\",\n          \"float32\",\n          \"response\",\n          \"uint8\",\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.ModelStreakV44 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"velocity\",\n          [\"[]\", \"float32\", 3],\n          \"anchorIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"bone\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"jitter\",\n          \"float32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"noise\",\n          \"float32\",\n          \"spawnDist\",\n          \"float32\",\n          \"texScale\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n        ];\n\n        this.ModelStreakAnchorV44 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorStart\",\n          \"uint32\",\n          \"colorEnd\",\n          \"uint32\",\n          \"falloff\",\n          \"float32\",\n          \"lifetime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"texV\",\n          \"float32\",\n        ];\n\n        this.ModelStreakDataV44 = [\n          \"streaks\",\n          Utils.getArrayReader(this.ModelStreakV44),\n          \"anchors\",\n          Utils.getArrayReader(this.ModelStreakAnchorV44),\n        ];\n\n        this.ModelEffectLightV44 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"farDistance\",\n          \"float32\",\n          \"intensity\",\n          \"float32\",\n          \"nearDistance\",\n          \"float32\",\n        ];\n\n        this.ModelLightDataV44 = [\"effectLights\", Utils.getArrayReader(this.ModelEffectLightV44)];\n\n        this.PackVertexType = [\"fvf\", \"uint32\", \"vertices\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelClothBoneWeightV44 = [\"token\", Utils.getQWordReader(), \"weight\", \"uint8\"];\n\n        this.ModelClothMeshGroupV44 = [\"weights\", Utils.getArrayReader(this.ModelClothBoneWeightV44)];\n\n        this.ModelClothConstraintV44 = [\"vertIndexA\", \"uint16\", \"vertIndexB\", \"uint16\", \"distance\", \"float32\"];\n\n        this.ModelClothObstacleV44 = [\"bone\", Utils.getQWordReader(), \"type\", \"uint8\"];\n\n        this.ModelClothDataV44 = [\n          \"materialIndex\",\n          \"uint32\",\n          \"flags\",\n          \"uint8\",\n          \"gravity\",\n          \"float32\",\n          \"weight\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n          \"rigidness\",\n          \"uint8\",\n          \"mesh\",\n          this.PackVertexType,\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"lockCount\",\n          \"uint16\",\n          \"groups\",\n          Utils.getArrayReader(this.ModelClothMeshGroupV44),\n          \"softLocks\",\n          Utils.getArrayReader(\"uint8\"),\n          \"lod0Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV44),\n          \"lod1Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV44),\n          \"lod1VertexCount\",\n          \"uint16\",\n          \"lod1Indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"barycentricCoords\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"barycentricIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelClothObstacleV44),\n        ];\n\n        this.ModelLightningSystemV44 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"boltIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelLightningBoltV44 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"nodeIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"colorBegin\",\n          [\"[]\", \"uint32\", 3],\n          \"colorEnd\",\n          [\"[]\", \"uint32\", 3],\n          \"colorPeriod\",\n          \"float32\",\n          \"colorFalloff\",\n          [\"[]\", \"float32\", 2],\n          \"flags\",\n          \"uint32\",\n          \"fps\",\n          \"float32\",\n          \"probability\",\n          \"float32\",\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"numSegments\",\n          \"uint16\",\n          \"opacity\",\n          [\"[]\", \"float32\", 2],\n          \"opacityPreset\",\n          \"uint8\",\n          \"period\",\n          \"float32\",\n          \"texOffset\",\n          \"float32\",\n          \"texScale\",\n          \"float32\",\n          \"texSpeed\",\n          \"float32\",\n          \"thickness\",\n          \"float32\",\n          \"thicknessPreset\",\n          \"uint8\",\n          \"type\",\n          \"uint8\",\n          \"variance\",\n          \"float32\",\n          \"variancePreset\",\n          \"uint8\",\n          \"noise\",\n          \"float32\",\n        ];\n\n        this.ModelLightningNodeV44 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"childrenIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"flags\",\n          \"uint32\",\n          \"probability\",\n          \"float32\",\n          \"radius\",\n          \"float32\",\n          \"shape\",\n          \"uint8\",\n          \"updatePos\",\n          \"float32\",\n        ];\n\n        this.ModelLightningDataV44 = [\n          \"systems\",\n          Utils.getArrayReader(this.ModelLightningSystemV44),\n          \"bolts\",\n          Utils.getArrayReader(this.ModelLightningBoltV44),\n          \"nodes\",\n          Utils.getArrayReader(this.ModelLightningNodeV44),\n        ];\n\n        this.ModelBoneConstraintLinkV44 = [\n          \"angle\",\n          \"float32\",\n          \"azimuth\",\n          \"float32\",\n          \"distance\",\n          [\"[]\", \"float32\", 2],\n          \"token\",\n          Utils.getQWordReader(),\n        ];\n\n        this.ModelBoneConstraintV44 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint16\",\n          \"twistOffset\",\n          \"float32\",\n          \"animBlend\",\n          \"float32\",\n          \"drag\",\n          \"float32\",\n          \"ellipseRatio\",\n          \"float32\",\n          \"gravity\",\n          \"float32\",\n          \"collisionRadius\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n          \"angle\",\n          [\"[]\", \"float32\", 2],\n          \"angleStrength\",\n          \"float32\",\n          \"angleType\",\n          \"uint8\",\n          \"distanceInner\",\n          [\"[]\", \"float32\", 2],\n          \"distanceInnerStrength\",\n          \"float32\",\n          \"distanceInnerType\",\n          \"uint8\",\n          \"links\",\n          Utils.getArrayReader(this.ModelBoneConstraintLinkV44),\n          \"distanceOuter\",\n          [\"[]\", \"float32\", 2],\n          \"distanceOuterStrength\",\n          \"float32\",\n          \"distanceOuterType\",\n          \"uint8\",\n          \"twist\",\n          [\"[]\", \"float32\", 2],\n          \"twistStrength\",\n          \"float32\",\n          \"twistType\",\n          \"uint8\",\n        ];\n\n        this.ModelSoftBodyDataV44 = [\n          \"materialIndex\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"vertexFvf\",\n          \"uint32\",\n          \"vertBytes\",\n          Utils.getArrayReader(\"uint8\"),\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"bones\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.__root = this.ModelFileDataV44 = [\n          \"materials\",\n          Utils.getRefArrayReader(this.ModelMaterialDataV44),\n          \"meshes\",\n          Utils.getRefArrayReader(this.ModelMeshDataV44),\n          \"model\",\n          Utils.getPointerReader(this.ModelModelDataV44),\n          \"properties\",\n          Utils.getArrayReader(this.ModelPropertyDataV44),\n          \"cloudData\",\n          Utils.getPointerReader(this.ModelCloudDataV44),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelObstacleDataV44),\n          \"streakData\",\n          Utils.getPointerReader(this.ModelStreakDataV44),\n          \"lightData\",\n          Utils.getPointerReader(this.ModelLightDataV44),\n          \"clothData\",\n          Utils.getArrayReader(this.ModelClothDataV44),\n          \"actionOffsetNames\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"actionOffsets\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"lodOverride\",\n          [\"[]\", \"float32\", 2],\n          \"soundScript\",\n          Utils.getFileNameReader(),\n          \"lightningData\",\n          Utils.getPointerReader(this.ModelLightningDataV44),\n          \"boneConstraints\",\n          Utils.getArrayReader(this.ModelBoneConstraintV44),\n          \"softBodyData\",\n          Utils.getArrayReader(this.ModelSoftBodyDataV44),\n        ];\n      },\n\n      // => Version: 43\n      43: function () {\n        this.ModelTextureDataV43 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"textureFlags\",\n          \"uint32\",\n          \"token\",\n          Utils.getQWordReader(),\n          \"blitId\",\n          Utils.getQWordReader(),\n          \"uvAnimId\",\n          \"uint32\",\n          \"uvPSInputIndex\",\n          \"uint8\",\n        ];\n\n        this.ModelConstantDataV43 = [\"name\", \"uint32\", \"value\", [\"[]\", \"float32\", 4], \"constantFlags\", \"uint32\"];\n\n        this.ModelMatConstLinkV43 = [\"linkToken\", Utils.getQWordReader(), \"constantToken\", \"uint32\"];\n\n        this.ModelUVTransLinkV43 = [\"linkToken\", Utils.getQWordReader(), \"uvAnimId\", \"uint32\", \"type\", \"uint8\"];\n\n        this.ModelMaterialDataV43 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"materialFlags\",\n          \"uint32\",\n          \"sortOrder\",\n          \"uint32\",\n          \"texCoordCount\",\n          \"uint8\",\n          \"textures\",\n          Utils.getArrayReader(this.ModelTextureDataV43),\n          \"constants\",\n          Utils.getArrayReader(this.ModelConstantDataV43),\n          \"matConstLinks\",\n          Utils.getArrayReader(this.ModelMatConstLinkV43),\n          \"uvTransLinks\",\n          Utils.getArrayReader(this.ModelUVTransLinkV43),\n        ];\n\n        this.ModelMeshLodDataV43 = [\"indices\", Utils.getArrayReader(\"uint16\")];\n\n        this.ModelMeshMorphTargetV43 = [\n          \"positionIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"positions\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"normalIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"normals\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"meshName\",\n          Utils.getStringReader(),\n        ];\n\n        this.PackGrannyMeshType = [\"mesh\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelMeshDataV43 = [\n          \"visBone\",\n          Utils.getQWordReader(),\n          \"lods\",\n          Utils.getArrayReader(this.ModelMeshLodDataV43),\n          \"morphTargets\",\n          Utils.getArrayReader(this.ModelMeshMorphTargetV43),\n          \"mesh\",\n          this.PackGrannyMeshType,\n          \"flags\",\n          \"uint32\",\n          \"seamVertIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"meshName\",\n          Utils.getQWordReader(),\n          \"minBound\",\n          [\"[]\", \"float32\", 3],\n          \"maxBound\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.ModelTransformDataV43 = [\n          \"Flags\",\n          \"uint32\",\n          \"Position\",\n          [\"[]\", \"float32\", 3],\n          \"Orientation\",\n          [\"[]\", \"float32\", 4],\n          \"ScaleShear\",\n          [\"[]\", [\"[]\", \"float32\", 3], 3],\n        ];\n\n        this.ModelBoneDataV43 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"ParentIndex\",\n          \"uint32\",\n          \"LocalTransform\",\n          this.ModelTransformDataV43,\n          \"InverseWorld4x4\",\n          [\"[]\", [\"[]\", \"float32\", 4], 4],\n          \"LODError\",\n          \"float32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n        ];\n\n        this.ModelSkeletonDataV43 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Bones\",\n          Utils.getArrayReader(this.ModelBoneDataV43),\n          \"LODType\",\n          \"uint32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n        ];\n\n        this.ModelMeshBindingDataV43 = [\"Mesh\", Utils.getPointerReader(\"uint8\")];\n\n        this.PackGrannyTrackMaskType = [\"trackMask\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelTrackMaskV43 = [\"trackMask\", this.PackGrannyTrackMaskType, \"token\", Utils.getQWordReader()];\n\n        this.ModelModelDataV43 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Skeleton\",\n          Utils.getPointerReader(this.ModelSkeletonDataV43),\n          \"InitialPlacement\",\n          this.ModelTransformDataV43,\n          \"MeshBindings\",\n          Utils.getArrayReader(this.ModelMeshBindingDataV43),\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n          \"boneFlags\",\n          Utils.getArrayReader(\"uint32\"),\n          \"emitterBones\",\n          Utils.getArrayReader(\"uint32\"),\n          \"trackMasks\",\n          Utils.getArrayReader(this.ModelTrackMaskV43),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"radius\",\n          \"float32\",\n        ];\n\n        this.ModelPropertyDataV43 = [\n          \"id\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint32\",\n          \"mergeIndex\",\n          \"uint32\",\n          \"time\",\n          \"float32\",\n          \"val\",\n          Utils.getQWordReader(),\n          \"strVal\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.ModelParticleCloudV43 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"drag\",\n          \"float32\",\n          \"emitterIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"fvf\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"obstacleIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"velocity\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.ModelParticleCurveV43 = [\"curveType\", \"uint8\", \"keys\", Utils.getArrayReader([\"[]\", \"float32\", 2])];\n\n        this.ModelParticleFlipbookV43 = [\n          \"columns\",\n          \"uint8\",\n          \"count\",\n          \"uint8\",\n          \"fps\",\n          \"float32\",\n          \"rows\",\n          \"uint8\",\n          \"start\",\n          \"uint8\",\n        ];\n\n        this.ModelParticleEmitterV43 = [\n          \"acceleration\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"accelerationDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"accelerationDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"alignmentType\",\n          \"uint8\",\n          \"alignmentDir\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorBegin\",\n          [\"[]\", \"float32\", 4],\n          \"colorEnd\",\n          [\"[]\", \"float32\", 4],\n          \"colorPeriod\",\n          \"float32\",\n          \"colorFalloff\",\n          [\"[]\", \"float32\", 2],\n          \"drag\",\n          \"float32\",\n          \"emitterFlags\",\n          \"uint32\",\n          \"offset\",\n          \"float32\",\n          \"opacityCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV43),\n          \"opacityCurvePreset\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"flipbook\",\n          Utils.getPointerReader(this.ModelParticleFlipbookV43),\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"rotationChange\",\n          [\"[]\", \"float32\", 2],\n          \"rotationDrag\",\n          \"float32\",\n          \"rotationInitial\",\n          [\"[]\", \"float32\", 2],\n          \"scaleChange\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleInitial\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV43),\n          \"scaleCurvePreset\",\n          \"uint32\",\n          \"velocity\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"velocityDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"velocityDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"velocityInherit\",\n          [\"[]\", \"float32\", 2],\n          \"spawnGroupSize\",\n          [\"[]\", \"float32\", 2],\n          \"spawnPeriod\",\n          \"float32\",\n          \"spawnProbability\",\n          \"float32\",\n          \"spawnRadius\",\n          [\"[]\", \"float32\", 2],\n          \"spawnShape\",\n          \"uint8\",\n          \"spawnWindEmit\",\n          [\"[]\", \"float32\", 2],\n          \"spawnWindSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"texCoordRect\",\n          [\"[]\", \"float32\", 4],\n          \"windInfluence\",\n          \"uint8\",\n        ];\n\n        this.ModelCloudDataV43 = [\n          \"clouds\",\n          Utils.getArrayReader(this.ModelParticleCloudV43),\n          \"emitters\",\n          Utils.getArrayReader(this.ModelParticleEmitterV43),\n        ];\n\n        this.ModelObstacleDataV43 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"dragCoef\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"geoData\",\n          [\"[]\", \"float32\", 3],\n          \"gravityCoef\",\n          \"float32\",\n          \"response\",\n          \"uint8\",\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.ModelStreakV43 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"velocity\",\n          [\"[]\", \"float32\", 3],\n          \"anchorIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"bone\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"jitter\",\n          \"float32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"noise\",\n          \"float32\",\n          \"spawnDist\",\n          \"float32\",\n          \"texScale\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n        ];\n\n        this.ModelStreakAnchorV43 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorStart\",\n          \"uint32\",\n          \"colorEnd\",\n          \"uint32\",\n          \"falloff\",\n          \"float32\",\n          \"lifetime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"texV\",\n          \"float32\",\n        ];\n\n        this.ModelStreakDataV43 = [\n          \"streaks\",\n          Utils.getArrayReader(this.ModelStreakV43),\n          \"anchors\",\n          Utils.getArrayReader(this.ModelStreakAnchorV43),\n        ];\n\n        this.ModelEffectLightV43 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"farDistance\",\n          \"float32\",\n          \"intensity\",\n          \"float32\",\n          \"nearDistance\",\n          \"float32\",\n        ];\n\n        this.ModelLightDataV43 = [\"effectLights\", Utils.getArrayReader(this.ModelEffectLightV43)];\n\n        this.PackVertexType = [\"fvf\", \"uint32\", \"vertices\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelClothBoneWeightV43 = [\"token\", Utils.getQWordReader(), \"weight\", \"uint8\"];\n\n        this.ModelClothMeshGroupV43 = [\"weights\", Utils.getArrayReader(this.ModelClothBoneWeightV43)];\n\n        this.ModelClothConstraintV43 = [\"vertIndexA\", \"uint16\", \"vertIndexB\", \"uint16\", \"distance\", \"float32\"];\n\n        this.ModelClothObstacleV43 = [\"bone\", Utils.getQWordReader(), \"type\", \"uint8\"];\n\n        this.ModelClothDataV43 = [\n          \"materialIndex\",\n          \"uint32\",\n          \"flags\",\n          \"uint8\",\n          \"gravity\",\n          \"float32\",\n          \"weight\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n          \"rigidness\",\n          \"uint8\",\n          \"mesh\",\n          this.PackVertexType,\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"lockCount\",\n          \"uint16\",\n          \"groups\",\n          Utils.getArrayReader(this.ModelClothMeshGroupV43),\n          \"softLocks\",\n          Utils.getArrayReader(\"uint8\"),\n          \"lod0Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV43),\n          \"lod1Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV43),\n          \"lod1VertexCount\",\n          \"uint16\",\n          \"lod1Indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"barycentricCoords\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"barycentricIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelClothObstacleV43),\n        ];\n\n        this.ModelLightningSystemV43 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"boltIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelLightningBoltV43 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"nodeIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"colorBegin\",\n          [\"[]\", \"uint32\", 3],\n          \"colorEnd\",\n          [\"[]\", \"uint32\", 3],\n          \"colorPeriod\",\n          \"float32\",\n          \"colorFalloff\",\n          [\"[]\", \"float32\", 2],\n          \"flags\",\n          \"uint32\",\n          \"fps\",\n          \"float32\",\n          \"probability\",\n          \"float32\",\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"numSegments\",\n          \"uint16\",\n          \"opacity\",\n          [\"[]\", \"float32\", 2],\n          \"opacityPreset\",\n          \"uint8\",\n          \"period\",\n          \"float32\",\n          \"texOffset\",\n          \"float32\",\n          \"texScale\",\n          \"float32\",\n          \"texSpeed\",\n          \"float32\",\n          \"thickness\",\n          \"float32\",\n          \"thicknessPreset\",\n          \"uint8\",\n          \"type\",\n          \"uint8\",\n          \"variance\",\n          \"float32\",\n          \"variancePreset\",\n          \"uint8\",\n          \"noise\",\n          \"float32\",\n        ];\n\n        this.ModelLightningNodeV43 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"childrenIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"flags\",\n          \"uint32\",\n          \"probability\",\n          \"float32\",\n          \"radius\",\n          \"float32\",\n          \"shape\",\n          \"uint8\",\n          \"updatePos\",\n          \"float32\",\n        ];\n\n        this.ModelLightningDataV43 = [\n          \"systems\",\n          Utils.getArrayReader(this.ModelLightningSystemV43),\n          \"bolts\",\n          Utils.getArrayReader(this.ModelLightningBoltV43),\n          \"nodes\",\n          Utils.getArrayReader(this.ModelLightningNodeV43),\n        ];\n\n        this.ModelBoneConstraintLinkV43 = [\n          \"angle\",\n          \"float32\",\n          \"azimuth\",\n          \"float32\",\n          \"distance\",\n          [\"[]\", \"float32\", 2],\n          \"token\",\n          Utils.getQWordReader(),\n        ];\n\n        this.ModelBoneConstraintV43 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint16\",\n          \"twistOffset\",\n          \"float32\",\n          \"animBlend\",\n          \"float32\",\n          \"drag\",\n          \"float32\",\n          \"ellipseRatio\",\n          \"float32\",\n          \"gravity\",\n          \"float32\",\n          \"collisionRadius\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n          \"angle\",\n          [\"[]\", \"float32\", 2],\n          \"angleStrength\",\n          \"float32\",\n          \"angleType\",\n          \"uint8\",\n          \"distanceInner\",\n          [\"[]\", \"float32\", 2],\n          \"distanceInnerStrength\",\n          \"float32\",\n          \"distanceInnerType\",\n          \"uint8\",\n          \"links\",\n          Utils.getArrayReader(this.ModelBoneConstraintLinkV43),\n          \"distanceOuter\",\n          [\"[]\", \"float32\", 2],\n          \"distanceOuterStrength\",\n          \"float32\",\n          \"distanceOuterType\",\n          \"uint8\",\n          \"twist\",\n          [\"[]\", \"float32\", 2],\n          \"twistStrength\",\n          \"float32\",\n          \"twistType\",\n          \"uint8\",\n        ];\n\n        this.ModelSoftBodyDataV43 = [\n          \"materialIndex\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"vertexFvf\",\n          \"uint32\",\n          \"vertBytes\",\n          Utils.getArrayReader(\"uint8\"),\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"bones\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.__root = this.ModelFileDataV43 = [\n          \"materials\",\n          Utils.getRefArrayReader(this.ModelMaterialDataV43),\n          \"meshes\",\n          Utils.getRefArrayReader(this.ModelMeshDataV43),\n          \"model\",\n          Utils.getPointerReader(this.ModelModelDataV43),\n          \"properties\",\n          Utils.getArrayReader(this.ModelPropertyDataV43),\n          \"cloudData\",\n          Utils.getPointerReader(this.ModelCloudDataV43),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelObstacleDataV43),\n          \"streakData\",\n          Utils.getPointerReader(this.ModelStreakDataV43),\n          \"lightData\",\n          Utils.getPointerReader(this.ModelLightDataV43),\n          \"clothData\",\n          Utils.getArrayReader(this.ModelClothDataV43),\n          \"actionOffsetNames\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"actionOffsets\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"lodOverride\",\n          [\"[]\", \"float32\", 2],\n          \"soundScript\",\n          Utils.getFileNameReader(),\n          \"lightningData\",\n          Utils.getPointerReader(this.ModelLightningDataV43),\n          \"boneConstraints\",\n          Utils.getArrayReader(this.ModelBoneConstraintV43),\n          \"softBodyData\",\n          Utils.getArrayReader(this.ModelSoftBodyDataV43),\n        ];\n      },\n\n      // => Version: 42\n      42: function () {\n        this.ModelTextureDataV42 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"textureFlags\",\n          \"uint32\",\n          \"token\",\n          Utils.getQWordReader(),\n          \"blitId\",\n          Utils.getQWordReader(),\n          \"uvAnimId\",\n          \"uint32\",\n          \"uvPSInputIndex\",\n          \"uint8\",\n        ];\n\n        this.ModelConstantDataV42 = [\"name\", \"uint32\", \"value\", [\"[]\", \"float32\", 4], \"constantFlags\", \"uint32\"];\n\n        this.ModelMatConstLinkV42 = [\"linkToken\", Utils.getQWordReader(), \"constantToken\", \"uint32\"];\n\n        this.ModelUVTransLinkV42 = [\"linkToken\", Utils.getQWordReader(), \"uvAnimId\", \"uint32\", \"type\", \"uint8\"];\n\n        this.ModelMaterialDataV42 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"materialFlags\",\n          \"uint32\",\n          \"sortOrder\",\n          \"uint32\",\n          \"texCoordCount\",\n          \"uint8\",\n          \"textures\",\n          Utils.getArrayReader(this.ModelTextureDataV42),\n          \"constants\",\n          Utils.getArrayReader(this.ModelConstantDataV42),\n          \"matConstLinks\",\n          Utils.getArrayReader(this.ModelMatConstLinkV42),\n          \"uvTransLinks\",\n          Utils.getArrayReader(this.ModelUVTransLinkV42),\n        ];\n\n        this.ModelMeshLodDataV42 = [\"indices\", Utils.getArrayReader(\"uint16\")];\n\n        this.ModelMeshMorphTargetV42 = [\n          \"positionIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"positions\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"normalIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"normals\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"meshName\",\n          Utils.getStringReader(),\n        ];\n\n        this.PackGrannyMeshType = [\"mesh\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelMeshDataV42 = [\n          \"visBone\",\n          Utils.getQWordReader(),\n          \"lods\",\n          Utils.getArrayReader(this.ModelMeshLodDataV42),\n          \"morphTargets\",\n          Utils.getArrayReader(this.ModelMeshMorphTargetV42),\n          \"mesh\",\n          this.PackGrannyMeshType,\n          \"flags\",\n          \"uint32\",\n          \"seamVertIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"meshName\",\n          Utils.getQWordReader(),\n          \"minBound\",\n          [\"[]\", \"float32\", 3],\n          \"maxBound\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.ModelTransformDataV42 = [\n          \"Flags\",\n          \"uint32\",\n          \"Position\",\n          [\"[]\", \"float32\", 3],\n          \"Orientation\",\n          [\"[]\", \"float32\", 4],\n          \"ScaleShear\",\n          [\"[]\", [\"[]\", \"float32\", 3], 3],\n        ];\n\n        this.ModelBoneDataV42 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"ParentIndex\",\n          \"uint32\",\n          \"LocalTransform\",\n          this.ModelTransformDataV42,\n          \"InverseWorld4x4\",\n          [\"[]\", [\"[]\", \"float32\", 4], 4],\n          \"LODError\",\n          \"float32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n        ];\n\n        this.ModelSkeletonDataV42 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Bones\",\n          Utils.getArrayReader(this.ModelBoneDataV42),\n          \"LODType\",\n          \"uint32\",\n        ];\n\n        this.ModelMeshBindingDataV42 = [\"Mesh\", Utils.getPointerReader(\"uint8\")];\n\n        this.PackGrannyTrackMaskType = [\"trackMask\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelTrackMaskV42 = [\"trackMask\", this.PackGrannyTrackMaskType, \"token\", Utils.getQWordReader()];\n\n        this.ModelModelDataV42 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Skeleton\",\n          Utils.getPointerReader(this.ModelSkeletonDataV42),\n          \"InitialPlacement\",\n          this.ModelTransformDataV42,\n          \"MeshBindings\",\n          Utils.getArrayReader(this.ModelMeshBindingDataV42),\n          \"boneFlags\",\n          Utils.getArrayReader(\"uint32\"),\n          \"emitterBones\",\n          Utils.getArrayReader(\"uint32\"),\n          \"trackMasks\",\n          Utils.getArrayReader(this.ModelTrackMaskV42),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"radius\",\n          \"float32\",\n        ];\n\n        this.ModelPropertyDataV42 = [\n          \"id\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint32\",\n          \"mergeIndex\",\n          \"uint32\",\n          \"time\",\n          \"float32\",\n          \"val\",\n          Utils.getQWordReader(),\n          \"strVal\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.ModelParticleCloudV42 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"drag\",\n          \"float32\",\n          \"emitterIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"fvf\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"obstacleIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"velocity\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.ModelParticleCurveV42 = [\"curveType\", \"uint8\", \"keys\", Utils.getArrayReader([\"[]\", \"float32\", 2])];\n\n        this.ModelParticleFlipbookV42 = [\n          \"columns\",\n          \"uint8\",\n          \"count\",\n          \"uint8\",\n          \"fps\",\n          \"float32\",\n          \"rows\",\n          \"uint8\",\n          \"start\",\n          \"uint8\",\n        ];\n\n        this.ModelParticleEmitterV42 = [\n          \"acceleration\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"accelerationDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"accelerationDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"alignmentType\",\n          \"uint8\",\n          \"alignmentDir\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorBegin\",\n          [\"[]\", \"float32\", 4],\n          \"colorEnd\",\n          [\"[]\", \"float32\", 4],\n          \"colorPeriod\",\n          \"float32\",\n          \"colorFalloff\",\n          [\"[]\", \"float32\", 2],\n          \"drag\",\n          \"float32\",\n          \"emitterFlags\",\n          \"uint32\",\n          \"offset\",\n          \"float32\",\n          \"opacityCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV42),\n          \"opacityCurvePreset\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"flipbook\",\n          Utils.getPointerReader(this.ModelParticleFlipbookV42),\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"rotationChange\",\n          [\"[]\", \"float32\", 2],\n          \"rotationDrag\",\n          \"float32\",\n          \"rotationInitial\",\n          [\"[]\", \"float32\", 2],\n          \"scaleChange\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleInitial\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV42),\n          \"scaleCurvePreset\",\n          \"uint32\",\n          \"velocity\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"velocityDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"velocityDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"velocityInherit\",\n          [\"[]\", \"float32\", 2],\n          \"spawnGroupSize\",\n          [\"[]\", \"float32\", 2],\n          \"spawnPeriod\",\n          \"float32\",\n          \"spawnProbability\",\n          \"float32\",\n          \"spawnRadius\",\n          [\"[]\", \"float32\", 2],\n          \"spawnShape\",\n          \"uint8\",\n          \"spawnWindEmit\",\n          [\"[]\", \"float32\", 2],\n          \"spawnWindSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"texCoordRect\",\n          [\"[]\", \"float32\", 4],\n          \"windInfluence\",\n          \"uint8\",\n        ];\n\n        this.ModelCloudDataV42 = [\n          \"clouds\",\n          Utils.getArrayReader(this.ModelParticleCloudV42),\n          \"emitters\",\n          Utils.getArrayReader(this.ModelParticleEmitterV42),\n        ];\n\n        this.ModelObstacleDataV42 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"dragCoef\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"geoData\",\n          [\"[]\", \"float32\", 3],\n          \"gravityCoef\",\n          \"float32\",\n          \"response\",\n          \"uint8\",\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.ModelStreakV42 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"velocity\",\n          [\"[]\", \"float32\", 3],\n          \"anchorIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"bone\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"jitter\",\n          \"float32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"noise\",\n          \"float32\",\n          \"spawnDist\",\n          \"float32\",\n          \"texScale\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n        ];\n\n        this.ModelStreakAnchorV42 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorStart\",\n          \"uint32\",\n          \"colorEnd\",\n          \"uint32\",\n          \"falloff\",\n          \"float32\",\n          \"lifetime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"texV\",\n          \"float32\",\n        ];\n\n        this.ModelStreakDataV42 = [\n          \"streaks\",\n          Utils.getArrayReader(this.ModelStreakV42),\n          \"anchors\",\n          Utils.getArrayReader(this.ModelStreakAnchorV42),\n        ];\n\n        this.ModelEffectLightV42 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"farDistance\",\n          \"float32\",\n          \"intensity\",\n          \"float32\",\n          \"nearDistance\",\n          \"float32\",\n        ];\n\n        this.ModelLightDataV42 = [\"effectLights\", Utils.getArrayReader(this.ModelEffectLightV42)];\n\n        this.PackVertexType = [\"fvf\", \"uint32\", \"vertices\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelClothBoneWeightV42 = [\"token\", Utils.getQWordReader(), \"weight\", \"uint8\"];\n\n        this.ModelClothMeshGroupV42 = [\"weights\", Utils.getArrayReader(this.ModelClothBoneWeightV42)];\n\n        this.ModelClothConstraintV42 = [\"vertIndexA\", \"uint16\", \"vertIndexB\", \"uint16\", \"distance\", \"float32\"];\n\n        this.ModelClothObstacleV42 = [\"bone\", Utils.getQWordReader(), \"type\", \"uint8\"];\n\n        this.ModelClothDataV42 = [\n          \"materialIndex\",\n          \"uint32\",\n          \"flags\",\n          \"uint8\",\n          \"gravity\",\n          \"float32\",\n          \"weight\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n          \"rigidness\",\n          \"uint8\",\n          \"mesh\",\n          this.PackVertexType,\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"lockCount\",\n          \"uint16\",\n          \"groups\",\n          Utils.getArrayReader(this.ModelClothMeshGroupV42),\n          \"softLocks\",\n          Utils.getArrayReader(\"uint8\"),\n          \"lod0Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV42),\n          \"lod1Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV42),\n          \"lod1VertexCount\",\n          \"uint16\",\n          \"lod1Indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"barycentricCoords\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"barycentricIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelClothObstacleV42),\n        ];\n\n        this.ModelLightningSystemV42 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"boltIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelLightningBoltV42 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"nodeIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"colorBegin\",\n          [\"[]\", \"uint32\", 3],\n          \"colorEnd\",\n          [\"[]\", \"uint32\", 3],\n          \"colorPeriod\",\n          \"float32\",\n          \"colorFalloff\",\n          [\"[]\", \"float32\", 2],\n          \"flags\",\n          \"uint32\",\n          \"fps\",\n          \"float32\",\n          \"probability\",\n          \"float32\",\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"numSegments\",\n          \"uint16\",\n          \"opacity\",\n          [\"[]\", \"float32\", 2],\n          \"opacityPreset\",\n          \"uint8\",\n          \"period\",\n          \"float32\",\n          \"texOffset\",\n          \"float32\",\n          \"texScale\",\n          \"float32\",\n          \"texSpeed\",\n          \"float32\",\n          \"thickness\",\n          \"float32\",\n          \"thicknessPreset\",\n          \"uint8\",\n          \"type\",\n          \"uint8\",\n          \"variance\",\n          \"float32\",\n          \"variancePreset\",\n          \"uint8\",\n          \"noise\",\n          \"float32\",\n        ];\n\n        this.ModelLightningNodeV42 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"childrenIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"flags\",\n          \"uint32\",\n          \"probability\",\n          \"float32\",\n          \"radius\",\n          \"float32\",\n          \"shape\",\n          \"uint8\",\n          \"updatePos\",\n          \"float32\",\n        ];\n\n        this.ModelLightningDataV42 = [\n          \"systems\",\n          Utils.getArrayReader(this.ModelLightningSystemV42),\n          \"bolts\",\n          Utils.getArrayReader(this.ModelLightningBoltV42),\n          \"nodes\",\n          Utils.getArrayReader(this.ModelLightningNodeV42),\n        ];\n\n        this.ModelBoneConstraintLinkV42 = [\n          \"angle\",\n          \"float32\",\n          \"azimuth\",\n          \"float32\",\n          \"distance\",\n          [\"[]\", \"float32\", 2],\n          \"token\",\n          Utils.getQWordReader(),\n        ];\n\n        this.ModelBoneConstraintV42 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint16\",\n          \"twistOffset\",\n          \"float32\",\n          \"animBlend\",\n          \"float32\",\n          \"drag\",\n          \"float32\",\n          \"ellipseRatio\",\n          \"float32\",\n          \"gravity\",\n          \"float32\",\n          \"collisionRadius\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n          \"angle\",\n          [\"[]\", \"float32\", 2],\n          \"angleStrength\",\n          \"float32\",\n          \"angleType\",\n          \"uint8\",\n          \"distanceInner\",\n          [\"[]\", \"float32\", 2],\n          \"distanceInnerStrength\",\n          \"float32\",\n          \"distanceInnerType\",\n          \"uint8\",\n          \"links\",\n          Utils.getArrayReader(this.ModelBoneConstraintLinkV42),\n          \"distanceOuter\",\n          [\"[]\", \"float32\", 2],\n          \"distanceOuterStrength\",\n          \"float32\",\n          \"distanceOuterType\",\n          \"uint8\",\n          \"twist\",\n          [\"[]\", \"float32\", 2],\n          \"twistStrength\",\n          \"float32\",\n          \"twistType\",\n          \"uint8\",\n        ];\n\n        this.ModelSoftBodyDataV42 = [\n          \"materialIndex\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"vertexFvf\",\n          \"uint32\",\n          \"vertBytes\",\n          Utils.getArrayReader(\"uint8\"),\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"bones\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.__root = this.ModelFileDataV42 = [\n          \"materials\",\n          Utils.getRefArrayReader(this.ModelMaterialDataV42),\n          \"meshes\",\n          Utils.getRefArrayReader(this.ModelMeshDataV42),\n          \"model\",\n          Utils.getPointerReader(this.ModelModelDataV42),\n          \"properties\",\n          Utils.getArrayReader(this.ModelPropertyDataV42),\n          \"cloudData\",\n          Utils.getPointerReader(this.ModelCloudDataV42),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelObstacleDataV42),\n          \"streakData\",\n          Utils.getPointerReader(this.ModelStreakDataV42),\n          \"lightData\",\n          Utils.getPointerReader(this.ModelLightDataV42),\n          \"clothData\",\n          Utils.getArrayReader(this.ModelClothDataV42),\n          \"actionOffsetNames\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"actionOffsets\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"lodOverride\",\n          [\"[]\", \"float32\", 2],\n          \"soundScript\",\n          Utils.getFileNameReader(),\n          \"lightningData\",\n          Utils.getPointerReader(this.ModelLightningDataV42),\n          \"boneConstraints\",\n          Utils.getArrayReader(this.ModelBoneConstraintV42),\n          \"softBodyData\",\n          Utils.getArrayReader(this.ModelSoftBodyDataV42),\n        ];\n      },\n\n      // => Version: 41\n      41: function () {\n        this.ModelTextureDataV41 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"textureFlags\",\n          \"uint32\",\n          \"token\",\n          Utils.getQWordReader(),\n          \"blitId\",\n          Utils.getQWordReader(),\n          \"uvAnimId\",\n          \"uint32\",\n          \"uvPSInputIndex\",\n          \"uint8\",\n        ];\n\n        this.ModelConstantDataV41 = [\"name\", \"uint32\", \"value\", [\"[]\", \"float32\", 4], \"constantFlags\", \"uint32\"];\n\n        this.ModelMatConstLinkV41 = [\"linkToken\", Utils.getQWordReader(), \"constantToken\", \"uint32\"];\n\n        this.ModelUVTransLinkV41 = [\"linkToken\", Utils.getQWordReader(), \"uvAnimId\", \"uint32\", \"type\", \"uint8\"];\n\n        this.ModelMaterialDataV41 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"materialFlags\",\n          \"uint32\",\n          \"sortOrder\",\n          \"uint32\",\n          \"texCoordCount\",\n          \"uint8\",\n          \"textures\",\n          Utils.getArrayReader(this.ModelTextureDataV41),\n          \"constants\",\n          Utils.getArrayReader(this.ModelConstantDataV41),\n          \"matConstLinks\",\n          Utils.getArrayReader(this.ModelMatConstLinkV41),\n          \"uvTransLinks\",\n          Utils.getArrayReader(this.ModelUVTransLinkV41),\n        ];\n\n        this.ModelMeshLodDataV41 = [\"indices\", Utils.getArrayReader(\"uint16\")];\n\n        this.ModelMeshMorphTargetV41 = [\n          \"positionIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"positions\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"normalIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"normals\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"meshName\",\n          Utils.getStringReader(),\n        ];\n\n        this.PackGrannyMeshType = [\"mesh\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelMeshDataV41 = [\n          \"visBone\",\n          Utils.getQWordReader(),\n          \"lods\",\n          Utils.getArrayReader(this.ModelMeshLodDataV41),\n          \"morphTargets\",\n          Utils.getArrayReader(this.ModelMeshMorphTargetV41),\n          \"mesh\",\n          this.PackGrannyMeshType,\n          \"flags\",\n          \"uint32\",\n          \"seamVertIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"meshName\",\n          Utils.getQWordReader(),\n          \"minBound\",\n          [\"[]\", \"float32\", 3],\n          \"maxBound\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.ModelTransformDataV41 = [\n          \"Flags\",\n          \"uint32\",\n          \"Position\",\n          [\"[]\", \"float32\", 3],\n          \"Orientation\",\n          [\"[]\", \"float32\", 4],\n          \"ScaleShear\",\n          [\"[]\", [\"[]\", \"float32\", 3], 3],\n        ];\n\n        this.ModelBoneDataV41 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"ParentIndex\",\n          \"uint32\",\n          \"LocalTransform\",\n          this.ModelTransformDataV41,\n          \"InverseWorld4x4\",\n          [\"[]\", [\"[]\", \"float32\", 4], 4],\n          \"LODError\",\n          \"float32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n        ];\n\n        this.ModelSkeletonDataV41 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Bones\",\n          Utils.getArrayReader(this.ModelBoneDataV41),\n          \"LODType\",\n          \"uint32\",\n        ];\n\n        this.ModelMeshBindingDataV41 = [\"Mesh\", Utils.getPointerReader(\"uint8\")];\n\n        this.PackGrannyTrackMaskType = [\"trackMask\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelTrackMaskV41 = [\"trackMask\", this.PackGrannyTrackMaskType, \"token\", Utils.getQWordReader()];\n\n        this.ModelModelDataV41 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Skeleton\",\n          Utils.getPointerReader(this.ModelSkeletonDataV41),\n          \"InitialPlacement\",\n          this.ModelTransformDataV41,\n          \"MeshBindings\",\n          Utils.getArrayReader(this.ModelMeshBindingDataV41),\n          \"boneFlags\",\n          Utils.getArrayReader(\"uint32\"),\n          \"emitterBones\",\n          Utils.getArrayReader(\"uint32\"),\n          \"trackMasks\",\n          Utils.getArrayReader(this.ModelTrackMaskV41),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"radius\",\n          \"float32\",\n        ];\n\n        this.ModelPropertyDataV41 = [\n          \"id\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint32\",\n          \"mergeIndex\",\n          \"uint32\",\n          \"time\",\n          \"float32\",\n          \"val\",\n          Utils.getQWordReader(),\n          \"strVal\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.ModelParticleCloudV41 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"drag\",\n          \"float32\",\n          \"emitterIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"fvf\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"obstacleIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"velocity\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.ModelParticleCurveV41 = [\"curveType\", \"uint8\", \"keys\", Utils.getArrayReader([\"[]\", \"float32\", 2])];\n\n        this.ModelParticleFlipbookV41 = [\n          \"columns\",\n          \"uint8\",\n          \"count\",\n          \"uint8\",\n          \"fps\",\n          \"float32\",\n          \"rows\",\n          \"uint8\",\n          \"start\",\n          \"uint8\",\n        ];\n\n        this.ModelParticleEmitterV41 = [\n          \"acceleration\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"accelerationDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"accelerationDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"alignmentType\",\n          \"uint8\",\n          \"alignmentDir\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorBegin\",\n          [\"[]\", \"float32\", 4],\n          \"colorEnd\",\n          [\"[]\", \"float32\", 4],\n          \"colorPeriod\",\n          \"float32\",\n          \"colorFalloff\",\n          [\"[]\", \"float32\", 2],\n          \"drag\",\n          \"float32\",\n          \"emitterFlags\",\n          \"uint32\",\n          \"offset\",\n          \"float32\",\n          \"opacityCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV41),\n          \"opacityCurvePreset\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"flipbook\",\n          Utils.getPointerReader(this.ModelParticleFlipbookV41),\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"rotationChange\",\n          [\"[]\", \"float32\", 2],\n          \"rotationDrag\",\n          \"float32\",\n          \"rotationInitial\",\n          [\"[]\", \"float32\", 2],\n          \"scaleChange\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleInitial\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV41),\n          \"scaleCurvePreset\",\n          \"uint32\",\n          \"velocity\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"velocityDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"velocityDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"velocityInherit\",\n          [\"[]\", \"float32\", 2],\n          \"spawnGroupSize\",\n          [\"[]\", \"float32\", 2],\n          \"spawnPeriod\",\n          \"float32\",\n          \"spawnProbability\",\n          \"float32\",\n          \"spawnRadius\",\n          [\"[]\", \"float32\", 2],\n          \"spawnShape\",\n          \"uint8\",\n          \"spawnWindEmit\",\n          [\"[]\", \"float32\", 2],\n          \"spawnWindSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"texCoordRect\",\n          [\"[]\", \"float32\", 4],\n          \"windInfluence\",\n          \"uint8\",\n        ];\n\n        this.ModelCloudDataV41 = [\n          \"clouds\",\n          Utils.getArrayReader(this.ModelParticleCloudV41),\n          \"emitters\",\n          Utils.getArrayReader(this.ModelParticleEmitterV41),\n        ];\n\n        this.ModelObstacleDataV41 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"dragCoef\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"geoData\",\n          [\"[]\", \"float32\", 3],\n          \"gravityCoef\",\n          \"float32\",\n          \"response\",\n          \"uint8\",\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.ModelStreakV41 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"velocity\",\n          [\"[]\", \"float32\", 3],\n          \"anchorIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"bone\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"jitter\",\n          \"float32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"noise\",\n          \"float32\",\n          \"spawnDist\",\n          \"float32\",\n          \"texScale\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n        ];\n\n        this.ModelStreakAnchorV41 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorStart\",\n          \"uint32\",\n          \"colorEnd\",\n          \"uint32\",\n          \"falloff\",\n          \"float32\",\n          \"lifetime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"texV\",\n          \"float32\",\n        ];\n\n        this.ModelStreakDataV41 = [\n          \"streaks\",\n          Utils.getArrayReader(this.ModelStreakV41),\n          \"anchors\",\n          Utils.getArrayReader(this.ModelStreakAnchorV41),\n        ];\n\n        this.ModelEffectLightV41 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"farDistance\",\n          \"float32\",\n          \"intensity\",\n          \"float32\",\n          \"nearDistance\",\n          \"float32\",\n        ];\n\n        this.ModelLightDataV41 = [\"effectLights\", Utils.getArrayReader(this.ModelEffectLightV41)];\n\n        this.PackVertexType = [\"fvf\", \"uint32\", \"vertices\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelClothBoneWeightV41 = [\"token\", Utils.getQWordReader(), \"weight\", \"uint8\"];\n\n        this.ModelClothMeshGroupV41 = [\"weights\", Utils.getArrayReader(this.ModelClothBoneWeightV41)];\n\n        this.ModelClothConstraintV41 = [\"vertIndexA\", \"uint16\", \"vertIndexB\", \"uint16\", \"distance\", \"float32\"];\n\n        this.ModelClothObstacleV41 = [\"bone\", Utils.getQWordReader(), \"type\", \"uint8\"];\n\n        this.ModelClothDataV41 = [\n          \"materialIndex\",\n          \"uint32\",\n          \"flags\",\n          \"uint8\",\n          \"gravity\",\n          \"float32\",\n          \"weight\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n          \"rigidness\",\n          \"uint8\",\n          \"mesh\",\n          this.PackVertexType,\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"lockCount\",\n          \"uint16\",\n          \"groups\",\n          Utils.getArrayReader(this.ModelClothMeshGroupV41),\n          \"softLocks\",\n          Utils.getArrayReader(\"uint8\"),\n          \"lod0Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV41),\n          \"lod1Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV41),\n          \"lod1VertexCount\",\n          \"uint16\",\n          \"lod1Indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"barycentricCoords\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"barycentricIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelClothObstacleV41),\n        ];\n\n        this.ModelLightningSystemV41 = [\n          \"boltIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelLightningBoltV41 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"nodeIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"colorBegin\",\n          [\"[]\", \"uint32\", 3],\n          \"colorEnd\",\n          [\"[]\", \"uint32\", 3],\n          \"colorPeriod\",\n          \"float32\",\n          \"colorFalloff\",\n          [\"[]\", \"float32\", 2],\n          \"flags\",\n          \"uint32\",\n          \"fps\",\n          \"float32\",\n          \"probability\",\n          \"float32\",\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"numSegments\",\n          \"uint16\",\n          \"opacity\",\n          [\"[]\", \"float32\", 2],\n          \"opacityPreset\",\n          \"uint8\",\n          \"period\",\n          \"float32\",\n          \"texOffset\",\n          \"float32\",\n          \"texScale\",\n          \"float32\",\n          \"texSpeed\",\n          \"float32\",\n          \"thickness\",\n          \"float32\",\n          \"thicknessPreset\",\n          \"uint8\",\n          \"type\",\n          \"uint8\",\n          \"variance\",\n          \"float32\",\n          \"variancePreset\",\n          \"uint8\",\n          \"noise\",\n          \"float32\",\n        ];\n\n        this.ModelLightningNodeV41 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"childrenIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"flags\",\n          \"uint32\",\n          \"probability\",\n          \"float32\",\n          \"radius\",\n          \"float32\",\n          \"shape\",\n          \"uint8\",\n          \"updatePos\",\n          \"float32\",\n        ];\n\n        this.ModelLightningDataV41 = [\n          \"systems\",\n          Utils.getArrayReader(this.ModelLightningSystemV41),\n          \"bolts\",\n          Utils.getArrayReader(this.ModelLightningBoltV41),\n          \"nodes\",\n          Utils.getArrayReader(this.ModelLightningNodeV41),\n        ];\n\n        this.ModelBoneConstraintLinkV41 = [\n          \"angle\",\n          \"float32\",\n          \"azimuth\",\n          \"float32\",\n          \"distance\",\n          [\"[]\", \"float32\", 2],\n          \"token\",\n          Utils.getQWordReader(),\n        ];\n\n        this.ModelBoneConstraintV41 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint16\",\n          \"twistOffset\",\n          \"float32\",\n          \"animBlend\",\n          \"float32\",\n          \"drag\",\n          \"float32\",\n          \"ellipseRatio\",\n          \"float32\",\n          \"gravity\",\n          \"float32\",\n          \"collisionRadius\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n          \"angle\",\n          [\"[]\", \"float32\", 2],\n          \"angleStrength\",\n          \"float32\",\n          \"angleType\",\n          \"uint8\",\n          \"distanceInner\",\n          [\"[]\", \"float32\", 2],\n          \"distanceInnerStrength\",\n          \"float32\",\n          \"distanceInnerType\",\n          \"uint8\",\n          \"links\",\n          Utils.getArrayReader(this.ModelBoneConstraintLinkV41),\n          \"distanceOuter\",\n          [\"[]\", \"float32\", 2],\n          \"distanceOuterStrength\",\n          \"float32\",\n          \"distanceOuterType\",\n          \"uint8\",\n          \"twist\",\n          [\"[]\", \"float32\", 2],\n          \"twistStrength\",\n          \"float32\",\n          \"twistType\",\n          \"uint8\",\n        ];\n\n        this.ModelSoftBodyDataV41 = [\n          \"materialIndex\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"vertexFvf\",\n          \"uint32\",\n          \"vertBytes\",\n          Utils.getArrayReader(\"uint8\"),\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"bones\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.__root = this.ModelFileDataV41 = [\n          \"materials\",\n          Utils.getRefArrayReader(this.ModelMaterialDataV41),\n          \"meshes\",\n          Utils.getRefArrayReader(this.ModelMeshDataV41),\n          \"model\",\n          Utils.getPointerReader(this.ModelModelDataV41),\n          \"properties\",\n          Utils.getArrayReader(this.ModelPropertyDataV41),\n          \"cloudData\",\n          Utils.getPointerReader(this.ModelCloudDataV41),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelObstacleDataV41),\n          \"streakData\",\n          Utils.getPointerReader(this.ModelStreakDataV41),\n          \"lightData\",\n          Utils.getPointerReader(this.ModelLightDataV41),\n          \"clothData\",\n          Utils.getArrayReader(this.ModelClothDataV41),\n          \"actionOffsetNames\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"actionOffsets\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"lodOverride\",\n          [\"[]\", \"float32\", 2],\n          \"soundScript\",\n          Utils.getFileNameReader(),\n          \"lightningData\",\n          Utils.getPointerReader(this.ModelLightningDataV41),\n          \"boneConstraints\",\n          Utils.getArrayReader(this.ModelBoneConstraintV41),\n          \"softBodyData\",\n          Utils.getArrayReader(this.ModelSoftBodyDataV41),\n        ];\n      },\n\n      // => Version: 40, ReferencedFunction: 0xF2A8C0\n      40: function () {\n        this.ModelTextureDataV40 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"textureFlags\",\n          \"uint32\",\n          \"token\",\n          Utils.getQWordReader(),\n          \"blitId\",\n          Utils.getQWordReader(),\n          \"uvAnimId\",\n          \"uint32\",\n          \"uvPSInputIndex\",\n          \"uint8\",\n        ];\n\n        this.ModelConstantDataV40 = [\"name\", \"uint32\", \"value\", [\"[]\", \"float32\", 4], \"constantFlags\", \"uint32\"];\n\n        this.ModelMatConstLinkV40 = [\"linkToken\", Utils.getQWordReader(), \"constantToken\", \"uint32\"];\n\n        this.ModelUVTransLinkV40 = [\"linkToken\", Utils.getQWordReader(), \"uvAnimId\", \"uint32\", \"type\", \"uint8\"];\n\n        this.ModelMaterialDataV40 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"materialFlags\",\n          \"uint32\",\n          \"sortOrder\",\n          \"uint32\",\n          \"texCoordCount\",\n          \"uint8\",\n          \"textures\",\n          Utils.getArrayReader(this.ModelTextureDataV40),\n          \"constants\",\n          Utils.getArrayReader(this.ModelConstantDataV40),\n          \"matConstLinks\",\n          Utils.getArrayReader(this.ModelMatConstLinkV40),\n          \"uvTransLinks\",\n          Utils.getArrayReader(this.ModelUVTransLinkV40),\n        ];\n\n        this.ModelMeshLodDataV40 = [\"indices\", Utils.getArrayReader(\"uint16\")];\n\n        this.ModelMeshMorphTargetV40 = [\n          \"positionIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"positions\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"normalIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"normals\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"meshName\",\n          Utils.getStringReader(),\n        ];\n\n        this.PackGrannyMeshType = [\"mesh\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelMeshDataV40 = [\n          \"visBone\",\n          Utils.getQWordReader(),\n          \"lods\",\n          Utils.getArrayReader(this.ModelMeshLodDataV40),\n          \"morphTargets\",\n          Utils.getArrayReader(this.ModelMeshMorphTargetV40),\n          \"mesh\",\n          this.PackGrannyMeshType,\n          \"flags\",\n          \"uint32\",\n          \"seamVertIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"meshName\",\n          Utils.getQWordReader(),\n          \"minBound\",\n          [\"[]\", \"float32\", 3],\n          \"maxBound\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.ModelTransformDataV40 = [\n          \"Flags\",\n          \"uint32\",\n          \"Position\",\n          [\"[]\", \"float32\", 3],\n          \"Orientation\",\n          [\"[]\", \"float32\", 4],\n          \"ScaleShear\",\n          [\"[]\", [\"[]\", \"float32\", 3], 3],\n        ];\n\n        this.ModelBoneDataV40 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"ParentIndex\",\n          \"uint32\",\n          \"LocalTransform\",\n          this.ModelTransformDataV40,\n          \"InverseWorld4x4\",\n          [\"[]\", [\"[]\", \"float32\", 4], 4],\n          \"LODError\",\n          \"float32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n        ];\n\n        this.ModelSkeletonDataV40 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Bones\",\n          Utils.getArrayReader(this.ModelBoneDataV40),\n          \"LODType\",\n          \"uint32\",\n        ];\n\n        this.ModelMeshBindingDataV40 = [\"Mesh\", Utils.getPointerReader(\"uint8\")];\n\n        this.PackGrannyTrackMaskType = [\"trackMask\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelTrackMaskV40 = [\"trackMask\", this.PackGrannyTrackMaskType, \"token\", Utils.getQWordReader()];\n\n        this.ModelModelDataV40 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Skeleton\",\n          Utils.getPointerReader(this.ModelSkeletonDataV40),\n          \"InitialPlacement\",\n          this.ModelTransformDataV40,\n          \"MeshBindings\",\n          Utils.getArrayReader(this.ModelMeshBindingDataV40),\n          \"boneFlags\",\n          Utils.getArrayReader(\"uint32\"),\n          \"emitterBones\",\n          Utils.getArrayReader(\"uint32\"),\n          \"trackMasks\",\n          Utils.getArrayReader(this.ModelTrackMaskV40),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"radius\",\n          \"float32\",\n        ];\n\n        this.ModelPropertyDataV40 = [\n          \"id\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint32\",\n          \"mergeIndex\",\n          \"uint32\",\n          \"time\",\n          \"float32\",\n          \"val\",\n          Utils.getQWordReader(),\n          \"strVal\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.ModelParticleCloudV40 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"drag\",\n          \"float32\",\n          \"emitterIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"fvf\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"obstacleIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"velocity\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.ModelParticleCurveV40 = [\"curveType\", \"uint8\", \"keys\", Utils.getArrayReader([\"[]\", \"float32\", 2])];\n\n        this.ModelParticleFlipbookV40 = [\n          \"columns\",\n          \"uint8\",\n          \"count\",\n          \"uint8\",\n          \"fps\",\n          \"float32\",\n          \"rows\",\n          \"uint8\",\n          \"start\",\n          \"uint8\",\n        ];\n\n        this.ModelParticleEmitterV40 = [\n          \"acceleration\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"accelerationDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"accelerationDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"alignmentType\",\n          \"uint8\",\n          \"alignmentDir\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorBegin\",\n          [\"[]\", \"float32\", 4],\n          \"colorEnd\",\n          [\"[]\", \"float32\", 4],\n          \"colorPeriod\",\n          \"float32\",\n          \"colorFalloff\",\n          [\"[]\", \"float32\", 2],\n          \"drag\",\n          \"float32\",\n          \"emitterFlags\",\n          \"uint32\",\n          \"offset\",\n          \"float32\",\n          \"opacityCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV40),\n          \"opacityCurvePreset\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"flipbook\",\n          Utils.getPointerReader(this.ModelParticleFlipbookV40),\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"rotationChange\",\n          [\"[]\", \"float32\", 2],\n          \"rotationDrag\",\n          \"float32\",\n          \"rotationInitial\",\n          [\"[]\", \"float32\", 2],\n          \"scaleChange\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleInitial\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV40),\n          \"scaleCurvePreset\",\n          \"uint32\",\n          \"velocity\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"velocityDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"velocityDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"velocityInherit\",\n          [\"[]\", \"float32\", 2],\n          \"spawnGroupSize\",\n          [\"[]\", \"float32\", 2],\n          \"spawnPeriod\",\n          \"float32\",\n          \"spawnProbability\",\n          \"float32\",\n          \"spawnRadius\",\n          [\"[]\", \"float32\", 2],\n          \"spawnShape\",\n          \"uint8\",\n          \"spawnWindEmit\",\n          [\"[]\", \"float32\", 2],\n          \"spawnWindSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"texCoordRect\",\n          [\"[]\", \"float32\", 4],\n          \"windInfluence\",\n          \"uint8\",\n        ];\n\n        this.ModelCloudDataV40 = [\n          \"clouds\",\n          Utils.getArrayReader(this.ModelParticleCloudV40),\n          \"emitters\",\n          Utils.getArrayReader(this.ModelParticleEmitterV40),\n        ];\n\n        this.ModelObstacleDataV40 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"dragCoef\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"geoData\",\n          [\"[]\", \"float32\", 3],\n          \"gravityCoef\",\n          \"float32\",\n          \"response\",\n          \"uint8\",\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.ModelStreakV40 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"velocity\",\n          [\"[]\", \"float32\", 3],\n          \"anchorIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"bone\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"jitter\",\n          \"float32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"noise\",\n          \"float32\",\n          \"spawnDist\",\n          \"float32\",\n          \"texScale\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n        ];\n\n        this.ModelStreakAnchorV40 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorStart\",\n          \"uint32\",\n          \"colorEnd\",\n          \"uint32\",\n          \"falloff\",\n          \"float32\",\n          \"lifetime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"texV\",\n          \"float32\",\n        ];\n\n        this.ModelStreakDataV40 = [\n          \"streaks\",\n          Utils.getArrayReader(this.ModelStreakV40),\n          \"anchors\",\n          Utils.getArrayReader(this.ModelStreakAnchorV40),\n        ];\n\n        this.ModelEffectLightV40 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"farDistance\",\n          \"float32\",\n          \"intensity\",\n          \"float32\",\n          \"nearDistance\",\n          \"float32\",\n        ];\n\n        this.ModelLightDataV40 = [\"effectLights\", Utils.getArrayReader(this.ModelEffectLightV40)];\n\n        this.PackVertexType = [\"fvf\", \"uint32\", \"vertices\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelClothBoneWeightV40 = [\"token\", Utils.getQWordReader(), \"weight\", \"uint8\"];\n\n        this.ModelClothMeshGroupV40 = [\"weights\", Utils.getArrayReader(this.ModelClothBoneWeightV40)];\n\n        this.ModelClothConstraintV40 = [\"vertIndexA\", \"uint16\", \"vertIndexB\", \"uint16\", \"distance\", \"float32\"];\n\n        this.ModelClothObstacleV40 = [\"bone\", Utils.getQWordReader(), \"type\", \"uint8\"];\n\n        this.ModelClothDataV40 = [\n          \"materialIndex\",\n          \"uint32\",\n          \"flags\",\n          \"uint8\",\n          \"gravity\",\n          \"float32\",\n          \"weight\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n          \"rigidness\",\n          \"uint8\",\n          \"mesh\",\n          this.PackVertexType,\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"lockCount\",\n          \"uint16\",\n          \"groups\",\n          Utils.getArrayReader(this.ModelClothMeshGroupV40),\n          \"softLocks\",\n          Utils.getArrayReader(\"uint8\"),\n          \"lod0Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV40),\n          \"lod1Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV40),\n          \"lod1VertexCount\",\n          \"uint16\",\n          \"lod1Indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"barycentricCoords\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"barycentricIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelClothObstacleV40),\n        ];\n\n        this.ModelLightningSystemV40 = [\n          \"boltIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelLightningBoltV40 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"nodeIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"colorBegin\",\n          [\"[]\", \"uint32\", 3],\n          \"colorEnd\",\n          [\"[]\", \"uint32\", 3],\n          \"colorPeriod\",\n          \"float32\",\n          \"colorFalloff\",\n          [\"[]\", \"float32\", 2],\n          \"flags\",\n          \"uint32\",\n          \"fps\",\n          \"float32\",\n          \"probability\",\n          \"float32\",\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"numSegments\",\n          \"uint16\",\n          \"opacity\",\n          [\"[]\", \"float32\", 2],\n          \"opacityPreset\",\n          \"uint8\",\n          \"period\",\n          \"float32\",\n          \"texOffset\",\n          \"float32\",\n          \"texScale\",\n          \"float32\",\n          \"texSpeed\",\n          \"float32\",\n          \"thickness\",\n          \"float32\",\n          \"thicknessPreset\",\n          \"uint8\",\n          \"type\",\n          \"uint8\",\n          \"variance\",\n          \"float32\",\n          \"variancePreset\",\n          \"uint8\",\n          \"noise\",\n          \"float32\",\n        ];\n\n        this.ModelLightningNodeV40 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"childrenIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"flags\",\n          \"uint32\",\n          \"probability\",\n          \"float32\",\n          \"radius\",\n          \"float32\",\n          \"shape\",\n          \"uint8\",\n          \"updatePos\",\n          \"float32\",\n        ];\n\n        this.ModelLightningDataV40 = [\n          \"systems\",\n          Utils.getArrayReader(this.ModelLightningSystemV40),\n          \"bolts\",\n          Utils.getArrayReader(this.ModelLightningBoltV40),\n          \"nodes\",\n          Utils.getArrayReader(this.ModelLightningNodeV40),\n        ];\n\n        this.ModelBoneConstraintLinkV40 = [\n          \"angle\",\n          \"float32\",\n          \"azimuth\",\n          \"float32\",\n          \"distance\",\n          [\"[]\", \"float32\", 2],\n          \"token\",\n          Utils.getQWordReader(),\n        ];\n\n        this.ModelBoneConstraintV40 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint16\",\n          \"twistOffset\",\n          \"float32\",\n          \"animBlend\",\n          \"float32\",\n          \"drag\",\n          \"float32\",\n          \"ellipseRatio\",\n          \"float32\",\n          \"gravity\",\n          \"float32\",\n          \"collisionRadius\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n          \"angle\",\n          [\"[]\", \"float32\", 2],\n          \"angleStrength\",\n          \"float32\",\n          \"angleType\",\n          \"uint8\",\n          \"distanceInner\",\n          [\"[]\", \"float32\", 2],\n          \"distanceInnerStrength\",\n          \"float32\",\n          \"distanceInnerType\",\n          \"uint8\",\n          \"links\",\n          Utils.getArrayReader(this.ModelBoneConstraintLinkV40),\n          \"distanceOuter\",\n          [\"[]\", \"float32\", 2],\n          \"distanceOuterStrength\",\n          \"float32\",\n          \"distanceOuterType\",\n          \"uint8\",\n          \"twist\",\n          [\"[]\", \"float32\", 2],\n          \"twistStrength\",\n          \"float32\",\n          \"twistType\",\n          \"uint8\",\n        ];\n\n        this.__root = this.ModelFileDataV40 = [\n          \"materials\",\n          Utils.getRefArrayReader(this.ModelMaterialDataV40),\n          \"meshes\",\n          Utils.getRefArrayReader(this.ModelMeshDataV40),\n          \"model\",\n          Utils.getPointerReader(this.ModelModelDataV40),\n          \"properties\",\n          Utils.getArrayReader(this.ModelPropertyDataV40),\n          \"cloudData\",\n          Utils.getPointerReader(this.ModelCloudDataV40),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelObstacleDataV40),\n          \"streakData\",\n          Utils.getPointerReader(this.ModelStreakDataV40),\n          \"lightData\",\n          Utils.getPointerReader(this.ModelLightDataV40),\n          \"clothData\",\n          Utils.getArrayReader(this.ModelClothDataV40),\n          \"actionOffsetNames\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"actionOffsets\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"lodOverride\",\n          [\"[]\", \"float32\", 2],\n          \"soundScript\",\n          Utils.getFileNameReader(),\n          \"lightningData\",\n          Utils.getPointerReader(this.ModelLightningDataV40),\n          \"boneConstraints\",\n          Utils.getArrayReader(this.ModelBoneConstraintV40),\n        ];\n      },\n\n      // => Version: 39, ReferencedFunction: 0xF2A810\n      39: function () {\n        this.ModelTextureDataV39 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"textureFlags\",\n          \"uint32\",\n          \"token\",\n          Utils.getQWordReader(),\n          \"blitId\",\n          Utils.getQWordReader(),\n          \"uvAnimId\",\n          \"uint32\",\n          \"uvPSInputIndex\",\n          \"uint8\",\n        ];\n\n        this.ModelConstantDataV39 = [\"name\", \"uint32\", \"value\", [\"[]\", \"float32\", 4], \"constantFlags\", \"uint32\"];\n\n        this.ModelMatConstLinkV39 = [\"linkToken\", Utils.getQWordReader(), \"constantToken\", \"uint32\"];\n\n        this.ModelUVTransLinkV39 = [\"linkToken\", Utils.getQWordReader(), \"uvAnimId\", \"uint32\", \"type\", \"uint8\"];\n\n        this.ModelMaterialDataV39 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"materialFlags\",\n          \"uint32\",\n          \"sortOrder\",\n          \"uint32\",\n          \"texCoordCount\",\n          \"uint8\",\n          \"textures\",\n          Utils.getArrayReader(this.ModelTextureDataV39),\n          \"constants\",\n          Utils.getArrayReader(this.ModelConstantDataV39),\n          \"matConstLinks\",\n          Utils.getArrayReader(this.ModelMatConstLinkV39),\n          \"uvTransLinks\",\n          Utils.getArrayReader(this.ModelUVTransLinkV39),\n        ];\n\n        this.ModelMeshLodDataV39 = [\"indices\", Utils.getArrayReader(\"uint16\")];\n\n        this.ModelMeshMorphTargetV39 = [\n          \"positionIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"positions\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"normalIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"normals\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"meshName\",\n          Utils.getStringReader(),\n        ];\n\n        this.PackGrannyMeshType = [\"mesh\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelMeshDataV39 = [\n          \"visBone\",\n          Utils.getQWordReader(),\n          \"lods\",\n          Utils.getArrayReader(this.ModelMeshLodDataV39),\n          \"morphTargets\",\n          Utils.getArrayReader(this.ModelMeshMorphTargetV39),\n          \"mesh\",\n          this.PackGrannyMeshType,\n          \"flags\",\n          \"uint32\",\n          \"seamVertIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"meshName\",\n          Utils.getQWordReader(),\n          \"minBound\",\n          [\"[]\", \"float32\", 3],\n          \"maxBound\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.ModelTransformDataV39 = [\n          \"Flags\",\n          \"uint32\",\n          \"Position\",\n          [\"[]\", \"float32\", 3],\n          \"Orientation\",\n          [\"[]\", \"float32\", 4],\n          \"ScaleShear\",\n          [\"[]\", [\"[]\", \"float32\", 3], 3],\n        ];\n\n        this.ModelBoneDataV39 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"ParentIndex\",\n          \"uint32\",\n          \"LocalTransform\",\n          this.ModelTransformDataV39,\n          \"InverseWorld4x4\",\n          [\"[]\", [\"[]\", \"float32\", 4], 4],\n          \"LODError\",\n          \"float32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n        ];\n\n        this.ModelSkeletonDataV39 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Bones\",\n          Utils.getArrayReader(this.ModelBoneDataV39),\n          \"LODType\",\n          \"uint32\",\n        ];\n\n        this.ModelMeshBindingDataV39 = [\"Mesh\", Utils.getPointerReader(\"uint8\")];\n\n        this.PackGrannyTrackMaskType = [\"trackMask\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelTrackMaskV39 = [\"trackMask\", this.PackGrannyTrackMaskType, \"token\", Utils.getQWordReader()];\n\n        this.ModelModelDataV39 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Skeleton\",\n          Utils.getPointerReader(this.ModelSkeletonDataV39),\n          \"InitialPlacement\",\n          this.ModelTransformDataV39,\n          \"MeshBindings\",\n          Utils.getArrayReader(this.ModelMeshBindingDataV39),\n          \"boneFlags\",\n          Utils.getArrayReader(\"uint32\"),\n          \"emitterBones\",\n          Utils.getArrayReader(\"uint32\"),\n          \"trackMasks\",\n          Utils.getArrayReader(this.ModelTrackMaskV39),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"radius\",\n          \"float32\",\n        ];\n\n        this.ModelPropertyDataV39 = [\n          \"id\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint32\",\n          \"mergeIndex\",\n          \"uint32\",\n          \"time\",\n          \"float32\",\n          \"val\",\n          Utils.getQWordReader(),\n          \"strVal\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.ModelParticleCloudV39 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"drag\",\n          \"float32\",\n          \"emitterIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"obstacleIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"velocity\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.ModelParticleCurveV39 = [\"curveType\", \"uint8\", \"keys\", Utils.getArrayReader([\"[]\", \"float32\", 2])];\n\n        this.ModelParticleFlipbookV39 = [\n          \"columns\",\n          \"uint8\",\n          \"count\",\n          \"uint8\",\n          \"fps\",\n          \"float32\",\n          \"rows\",\n          \"uint8\",\n          \"start\",\n          \"uint8\",\n        ];\n\n        this.ModelParticleEmitterV39 = [\n          \"acceleration\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"accelerationDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"accelerationDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"alignmentType\",\n          \"uint8\",\n          \"alignmentDir\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorBegin\",\n          [\"[]\", \"float32\", 4],\n          \"colorEnd\",\n          [\"[]\", \"float32\", 4],\n          \"colorPeriod\",\n          \"float32\",\n          \"colorFalloff\",\n          [\"[]\", \"float32\", 2],\n          \"drag\",\n          \"float32\",\n          \"emitterFlags\",\n          \"uint32\",\n          \"opacityCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV39),\n          \"opacityCurvePreset\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"flipbook\",\n          Utils.getPointerReader(this.ModelParticleFlipbookV39),\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"rotationChange\",\n          [\"[]\", \"float32\", 2],\n          \"rotationDrag\",\n          \"float32\",\n          \"rotationInitial\",\n          [\"[]\", \"float32\", 2],\n          \"scaleChange\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleInitial\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV39),\n          \"scaleCurvePreset\",\n          \"uint32\",\n          \"velocity\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"velocityDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"velocityDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"spawnGroupSize\",\n          [\"[]\", \"float32\", 2],\n          \"spawnPeriod\",\n          \"float32\",\n          \"spawnProbability\",\n          \"float32\",\n          \"spawnRadius\",\n          [\"[]\", \"float32\", 2],\n          \"spawnShape\",\n          \"uint8\",\n          \"spawnWindEmit\",\n          [\"[]\", \"float32\", 2],\n          \"spawnWindSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"texCoordRect\",\n          [\"[]\", \"float32\", 4],\n          \"windInfluence\",\n          \"uint8\",\n        ];\n\n        this.ModelCloudDataV39 = [\n          \"clouds\",\n          Utils.getArrayReader(this.ModelParticleCloudV39),\n          \"emitters\",\n          Utils.getArrayReader(this.ModelParticleEmitterV39),\n        ];\n\n        this.ModelObstacleDataV39 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"dragCoef\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"geoData\",\n          [\"[]\", \"float32\", 3],\n          \"gravityCoef\",\n          \"float32\",\n          \"response\",\n          \"uint8\",\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.ModelStreakV39 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"velocity\",\n          [\"[]\", \"float32\", 3],\n          \"anchorIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"bone\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"jitter\",\n          \"float32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"noise\",\n          \"float32\",\n          \"spawnDist\",\n          \"float32\",\n          \"texScale\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n        ];\n\n        this.ModelStreakAnchorV39 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorStart\",\n          \"uint32\",\n          \"colorEnd\",\n          \"uint32\",\n          \"falloff\",\n          \"float32\",\n          \"lifetime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"texV\",\n          \"float32\",\n        ];\n\n        this.ModelStreakDataV39 = [\n          \"streaks\",\n          Utils.getArrayReader(this.ModelStreakV39),\n          \"anchors\",\n          Utils.getArrayReader(this.ModelStreakAnchorV39),\n        ];\n\n        this.ModelEffectLightV39 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"farDistance\",\n          \"float32\",\n          \"intensity\",\n          \"float32\",\n          \"nearDistance\",\n          \"float32\",\n        ];\n\n        this.ModelLightDataV39 = [\"effectLights\", Utils.getArrayReader(this.ModelEffectLightV39)];\n\n        this.PackVertexType = [\"fvf\", \"uint32\", \"vertices\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelClothBoneWeightV39 = [\"token\", Utils.getQWordReader(), \"weight\", \"uint8\"];\n\n        this.ModelClothMeshGroupV39 = [\"weights\", Utils.getArrayReader(this.ModelClothBoneWeightV39)];\n\n        this.ModelClothConstraintV39 = [\"vertIndexA\", \"uint16\", \"vertIndexB\", \"uint16\", \"distance\", \"float32\"];\n\n        this.ModelClothObstacleV39 = [\"bone\", Utils.getQWordReader(), \"type\", \"uint8\"];\n\n        this.ModelClothDataV39 = [\n          \"materialIndex\",\n          \"uint32\",\n          \"flags\",\n          \"uint8\",\n          \"gravity\",\n          \"float32\",\n          \"weight\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n          \"rigidness\",\n          \"uint8\",\n          \"mesh\",\n          this.PackVertexType,\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"lockCount\",\n          \"uint16\",\n          \"groups\",\n          Utils.getArrayReader(this.ModelClothMeshGroupV39),\n          \"softLocks\",\n          Utils.getArrayReader(\"uint8\"),\n          \"lod0Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV39),\n          \"lod1Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV39),\n          \"lod1VertexCount\",\n          \"uint16\",\n          \"lod1Indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"barycentricCoords\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"barycentricIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelClothObstacleV39),\n        ];\n\n        this.ModelLightningSystemV39 = [\n          \"boltIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelLightningBoltV39 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"nodeIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"colorBegin\",\n          [\"[]\", \"uint32\", 3],\n          \"colorEnd\",\n          [\"[]\", \"uint32\", 3],\n          \"colorPeriod\",\n          \"float32\",\n          \"colorFalloff\",\n          [\"[]\", \"float32\", 2],\n          \"flags\",\n          \"uint32\",\n          \"fps\",\n          \"float32\",\n          \"probability\",\n          \"float32\",\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"numSegments\",\n          \"uint16\",\n          \"opacity\",\n          [\"[]\", \"float32\", 2],\n          \"opacityPreset\",\n          \"uint8\",\n          \"period\",\n          \"float32\",\n          \"texOffset\",\n          \"float32\",\n          \"texScale\",\n          \"float32\",\n          \"texSpeed\",\n          \"float32\",\n          \"thickness\",\n          \"float32\",\n          \"thicknessPreset\",\n          \"uint8\",\n          \"type\",\n          \"uint8\",\n          \"variance\",\n          \"float32\",\n          \"variancePreset\",\n          \"uint8\",\n          \"noise\",\n          \"float32\",\n        ];\n\n        this.ModelLightningNodeV39 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"childrenIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"flags\",\n          \"uint32\",\n          \"probability\",\n          \"float32\",\n          \"radius\",\n          \"float32\",\n          \"shape\",\n          \"uint8\",\n          \"updatePos\",\n          \"float32\",\n        ];\n\n        this.ModelLightningDataV39 = [\n          \"systems\",\n          Utils.getArrayReader(this.ModelLightningSystemV39),\n          \"bolts\",\n          Utils.getArrayReader(this.ModelLightningBoltV39),\n          \"nodes\",\n          Utils.getArrayReader(this.ModelLightningNodeV39),\n        ];\n\n        this.ModelBoneConstraintLinkV39 = [\n          \"angle\",\n          \"float32\",\n          \"azimuth\",\n          \"float32\",\n          \"distance\",\n          [\"[]\", \"float32\", 2],\n          \"token\",\n          Utils.getQWordReader(),\n        ];\n\n        this.ModelBoneConstraintV39 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint16\",\n          \"twistOffset\",\n          \"float32\",\n          \"animBlend\",\n          \"float32\",\n          \"drag\",\n          \"float32\",\n          \"ellipseRatio\",\n          \"float32\",\n          \"gravity\",\n          \"float32\",\n          \"collisionRadius\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n          \"angle\",\n          [\"[]\", \"float32\", 2],\n          \"angleStrength\",\n          \"float32\",\n          \"angleType\",\n          \"uint8\",\n          \"distanceInner\",\n          [\"[]\", \"float32\", 2],\n          \"distanceInnerStrength\",\n          \"float32\",\n          \"distanceInnerType\",\n          \"uint8\",\n          \"links\",\n          Utils.getArrayReader(this.ModelBoneConstraintLinkV39),\n          \"distanceOuter\",\n          [\"[]\", \"float32\", 2],\n          \"distanceOuterStrength\",\n          \"float32\",\n          \"distanceOuterType\",\n          \"uint8\",\n          \"twist\",\n          [\"[]\", \"float32\", 2],\n          \"twistStrength\",\n          \"float32\",\n          \"twistType\",\n          \"uint8\",\n        ];\n\n        this.__root = this.ModelFileDataV39 = [\n          \"materials\",\n          Utils.getRefArrayReader(this.ModelMaterialDataV39),\n          \"meshes\",\n          Utils.getRefArrayReader(this.ModelMeshDataV39),\n          \"model\",\n          Utils.getPointerReader(this.ModelModelDataV39),\n          \"properties\",\n          Utils.getArrayReader(this.ModelPropertyDataV39),\n          \"cloudData\",\n          Utils.getPointerReader(this.ModelCloudDataV39),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelObstacleDataV39),\n          \"streakData\",\n          Utils.getPointerReader(this.ModelStreakDataV39),\n          \"lightData\",\n          Utils.getPointerReader(this.ModelLightDataV39),\n          \"clothData\",\n          Utils.getArrayReader(this.ModelClothDataV39),\n          \"actionOffsetNames\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"actionOffsets\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"lodOverride\",\n          [\"[]\", \"float32\", 2],\n          \"soundScript\",\n          Utils.getFileNameReader(),\n          \"lightningData\",\n          Utils.getPointerReader(this.ModelLightningDataV39),\n          \"boneConstraints\",\n          Utils.getArrayReader(this.ModelBoneConstraintV39),\n        ];\n      },\n\n      // => Version: 38, ReferencedFunction: 0xF2A6A0\n      38: function () {\n        this.ModelTextureDataV38 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"textureFlags\",\n          \"uint32\",\n          \"token\",\n          Utils.getQWordReader(),\n          \"blitId\",\n          Utils.getQWordReader(),\n          \"uvAnimId\",\n          \"uint32\",\n          \"uvPSInputIndex\",\n          \"uint8\",\n        ];\n\n        this.ModelConstantDataV38 = [\"name\", \"uint32\", \"value\", [\"[]\", \"float32\", 4], \"constantFlags\", \"uint32\"];\n\n        this.ModelMatConstLinkV38 = [\"linkToken\", Utils.getQWordReader(), \"constantToken\", \"uint32\"];\n\n        this.ModelUVTransLinkV38 = [\"linkToken\", Utils.getQWordReader(), \"uvAnimId\", \"uint32\", \"type\", \"uint8\"];\n\n        this.ModelMaterialDataV38 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"materialFlags\",\n          \"uint32\",\n          \"sortOrder\",\n          \"uint32\",\n          \"texCoordCount\",\n          \"uint8\",\n          \"textures\",\n          Utils.getArrayReader(this.ModelTextureDataV38),\n          \"constants\",\n          Utils.getArrayReader(this.ModelConstantDataV38),\n          \"matConstLinks\",\n          Utils.getArrayReader(this.ModelMatConstLinkV38),\n          \"uvTransLinks\",\n          Utils.getArrayReader(this.ModelUVTransLinkV38),\n        ];\n\n        this.ModelMeshLodDataV38 = [\"indices\", Utils.getArrayReader(\"uint16\")];\n\n        this.ModelMeshMorphTargetV38 = [\n          \"positionIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"positions\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"normalIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"normals\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"meshName\",\n          Utils.getStringReader(),\n        ];\n\n        this.PackGrannyMeshType = [\"mesh\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelMeshDataV38 = [\n          \"visBone\",\n          Utils.getQWordReader(),\n          \"lods\",\n          Utils.getArrayReader(this.ModelMeshLodDataV38),\n          \"morphTargets\",\n          Utils.getArrayReader(this.ModelMeshMorphTargetV38),\n          \"mesh\",\n          this.PackGrannyMeshType,\n          \"flags\",\n          \"uint32\",\n          \"seamVertIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"meshName\",\n          Utils.getQWordReader(),\n          \"minBound\",\n          [\"[]\", \"float32\", 3],\n          \"maxBound\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.ModelTransformDataV38 = [\n          \"Flags\",\n          \"uint32\",\n          \"Position\",\n          [\"[]\", \"float32\", 3],\n          \"Orientation\",\n          [\"[]\", \"float32\", 4],\n          \"ScaleShear\",\n          [\"[]\", [\"[]\", \"float32\", 3], 3],\n        ];\n\n        this.ModelBoneDataV38 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"ParentIndex\",\n          \"uint32\",\n          \"LocalTransform\",\n          this.ModelTransformDataV38,\n          \"InverseWorld4x4\",\n          [\"[]\", [\"[]\", \"float32\", 4], 4],\n          \"LODError\",\n          \"float32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n        ];\n\n        this.ModelSkeletonDataV38 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Bones\",\n          Utils.getArrayReader(this.ModelBoneDataV38),\n          \"LODType\",\n          \"uint32\",\n        ];\n\n        this.ModelMeshBindingDataV38 = [\"Mesh\", Utils.getPointerReader(\"uint8\")];\n\n        this.PackGrannyTrackMaskType = [\"trackMask\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelTrackMaskV38 = [\"trackMask\", this.PackGrannyTrackMaskType, \"token\", Utils.getQWordReader()];\n\n        this.ModelModelDataV38 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Skeleton\",\n          Utils.getPointerReader(this.ModelSkeletonDataV38),\n          \"InitialPlacement\",\n          this.ModelTransformDataV38,\n          \"MeshBindings\",\n          Utils.getArrayReader(this.ModelMeshBindingDataV38),\n          \"boneFlags\",\n          Utils.getArrayReader(\"uint32\"),\n          \"emitterBones\",\n          Utils.getArrayReader(\"uint32\"),\n          \"trackMasks\",\n          Utils.getArrayReader(this.ModelTrackMaskV38),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"radius\",\n          \"float32\",\n        ];\n\n        this.ModelPropertyDataV38 = [\n          \"id\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint32\",\n          \"mergeIndex\",\n          \"uint32\",\n          \"time\",\n          \"float32\",\n          \"val\",\n          Utils.getQWordReader(),\n          \"strVal\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.ModelParticleCloudV38 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"drag\",\n          \"float32\",\n          \"emitterIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"obstacleIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"velocity\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.ModelParticleCurveV38 = [\"curveType\", \"uint8\", \"keys\", Utils.getArrayReader([\"[]\", \"float32\", 2])];\n\n        this.ModelParticleFlipbookV38 = [\n          \"columns\",\n          \"uint8\",\n          \"count\",\n          \"uint8\",\n          \"fps\",\n          \"float32\",\n          \"rows\",\n          \"uint8\",\n          \"start\",\n          \"uint8\",\n        ];\n\n        this.ModelParticleEmitterV38 = [\n          \"acceleration\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"accelerationDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"accelerationDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"alignmentType\",\n          \"uint8\",\n          \"alignmentDir\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorBegin\",\n          [\"[]\", \"float32\", 4],\n          \"colorEnd\",\n          [\"[]\", \"float32\", 4],\n          \"colorPeriod\",\n          \"float32\",\n          \"colorFalloff\",\n          [\"[]\", \"float32\", 2],\n          \"drag\",\n          \"float32\",\n          \"emitterFlags\",\n          \"uint32\",\n          \"opacityCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV38),\n          \"opacityCurvePreset\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"flipbook\",\n          Utils.getPointerReader(this.ModelParticleFlipbookV38),\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"rotationChange\",\n          [\"[]\", \"float32\", 2],\n          \"rotationDrag\",\n          \"float32\",\n          \"rotationInitial\",\n          [\"[]\", \"float32\", 2],\n          \"scaleChange\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleInitial\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV38),\n          \"scaleCurvePreset\",\n          \"uint32\",\n          \"velocity\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"velocityDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"velocityDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"spawnGroupSize\",\n          [\"[]\", \"float32\", 2],\n          \"spawnPeriod\",\n          \"float32\",\n          \"spawnProbability\",\n          \"float32\",\n          \"spawnRadius\",\n          [\"[]\", \"float32\", 2],\n          \"spawnShape\",\n          \"uint8\",\n          \"spawnWindEmit\",\n          [\"[]\", \"float32\", 2],\n          \"spawnWindSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"texCoordRect\",\n          [\"[]\", \"float32\", 4],\n          \"windInfluence\",\n          \"uint8\",\n        ];\n\n        this.ModelCloudDataV38 = [\n          \"clouds\",\n          Utils.getArrayReader(this.ModelParticleCloudV38),\n          \"emitters\",\n          Utils.getArrayReader(this.ModelParticleEmitterV38),\n        ];\n\n        this.ModelObstacleDataV38 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"dragCoef\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"geoData\",\n          [\"[]\", \"float32\", 3],\n          \"gravityCoef\",\n          \"float32\",\n          \"response\",\n          \"uint8\",\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.ModelStreakV38 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"velocity\",\n          [\"[]\", \"float32\", 3],\n          \"anchorIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"bone\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"jitter\",\n          \"float32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"noise\",\n          \"float32\",\n          \"spawnDist\",\n          \"float32\",\n          \"texScale\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n        ];\n\n        this.ModelStreakAnchorV38 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"color\",\n          \"uint32\",\n          \"falloff\",\n          \"float32\",\n          \"lifetime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"texV\",\n          \"float32\",\n        ];\n\n        this.ModelStreakDataV38 = [\n          \"streaks\",\n          Utils.getArrayReader(this.ModelStreakV38),\n          \"anchors\",\n          Utils.getArrayReader(this.ModelStreakAnchorV38),\n        ];\n\n        this.ModelEffectLightV38 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"farDistance\",\n          \"float32\",\n          \"intensity\",\n          \"float32\",\n          \"nearDistance\",\n          \"float32\",\n        ];\n\n        this.ModelLightDataV38 = [\"effectLights\", Utils.getArrayReader(this.ModelEffectLightV38)];\n\n        this.PackVertexType = [\"fvf\", \"uint32\", \"vertices\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelClothBoneWeightV38 = [\"token\", Utils.getQWordReader(), \"weight\", \"uint8\"];\n\n        this.ModelClothMeshGroupV38 = [\"weights\", Utils.getArrayReader(this.ModelClothBoneWeightV38)];\n\n        this.ModelClothConstraintV38 = [\"vertIndexA\", \"uint16\", \"vertIndexB\", \"uint16\", \"distance\", \"float32\"];\n\n        this.ModelClothObstacleV38 = [\"bone\", Utils.getQWordReader(), \"type\", \"uint8\"];\n\n        this.ModelClothDataV38 = [\n          \"materialIndex\",\n          \"uint32\",\n          \"flags\",\n          \"uint8\",\n          \"gravity\",\n          \"float32\",\n          \"weight\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n          \"rigidness\",\n          \"uint8\",\n          \"mesh\",\n          this.PackVertexType,\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"lockCount\",\n          \"uint16\",\n          \"groups\",\n          Utils.getArrayReader(this.ModelClothMeshGroupV38),\n          \"softLocks\",\n          Utils.getArrayReader(\"uint8\"),\n          \"lod0Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV38),\n          \"lod1Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV38),\n          \"lod1VertexCount\",\n          \"uint16\",\n          \"lod1Indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"barycentricCoords\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"barycentricIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelClothObstacleV38),\n        ];\n\n        this.ModelLightningSystemV38 = [\n          \"boltIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelLightningBoltV38 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"nodeIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"colorBegin\",\n          [\"[]\", \"uint32\", 3],\n          \"colorEnd\",\n          [\"[]\", \"uint32\", 3],\n          \"colorPeriod\",\n          \"float32\",\n          \"colorFalloff\",\n          [\"[]\", \"float32\", 2],\n          \"flags\",\n          \"uint32\",\n          \"fps\",\n          \"float32\",\n          \"probability\",\n          \"float32\",\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"numSegments\",\n          \"uint16\",\n          \"opacity\",\n          [\"[]\", \"float32\", 2],\n          \"opacityPreset\",\n          \"uint8\",\n          \"period\",\n          \"float32\",\n          \"texOffset\",\n          \"float32\",\n          \"texScale\",\n          \"float32\",\n          \"texSpeed\",\n          \"float32\",\n          \"thickness\",\n          \"float32\",\n          \"thicknessPreset\",\n          \"uint8\",\n          \"type\",\n          \"uint8\",\n          \"variance\",\n          \"float32\",\n          \"variancePreset\",\n          \"uint8\",\n          \"noise\",\n          \"float32\",\n        ];\n\n        this.ModelLightningNodeV38 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"childrenIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"flags\",\n          \"uint32\",\n          \"probability\",\n          \"float32\",\n          \"radius\",\n          \"float32\",\n          \"shape\",\n          \"uint8\",\n          \"updatePos\",\n          \"float32\",\n        ];\n\n        this.ModelLightningDataV38 = [\n          \"systems\",\n          Utils.getArrayReader(this.ModelLightningSystemV38),\n          \"bolts\",\n          Utils.getArrayReader(this.ModelLightningBoltV38),\n          \"nodes\",\n          Utils.getArrayReader(this.ModelLightningNodeV38),\n        ];\n\n        this.ModelBoneConstraintLinkV38 = [\n          \"angle\",\n          \"float32\",\n          \"azimuth\",\n          \"float32\",\n          \"distance\",\n          [\"[]\", \"float32\", 2],\n          \"token\",\n          Utils.getQWordReader(),\n        ];\n\n        this.ModelBoneConstraintV38 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint16\",\n          \"twistOffset\",\n          \"float32\",\n          \"animBlend\",\n          \"float32\",\n          \"drag\",\n          \"float32\",\n          \"ellipseRatio\",\n          \"float32\",\n          \"gravity\",\n          \"float32\",\n          \"collisionRadius\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n          \"angle\",\n          [\"[]\", \"float32\", 2],\n          \"angleStrength\",\n          \"float32\",\n          \"angleType\",\n          \"uint8\",\n          \"distanceInner\",\n          [\"[]\", \"float32\", 2],\n          \"distanceInnerStrength\",\n          \"float32\",\n          \"distanceInnerType\",\n          \"uint8\",\n          \"links\",\n          Utils.getArrayReader(this.ModelBoneConstraintLinkV38),\n          \"distanceOuter\",\n          [\"[]\", \"float32\", 2],\n          \"distanceOuterStrength\",\n          \"float32\",\n          \"distanceOuterType\",\n          \"uint8\",\n          \"twist\",\n          [\"[]\", \"float32\", 2],\n          \"twistStrength\",\n          \"float32\",\n          \"twistType\",\n          \"uint8\",\n        ];\n\n        this.__root = this.ModelFileDataV38 = [\n          \"materials\",\n          Utils.getRefArrayReader(this.ModelMaterialDataV38),\n          \"meshes\",\n          Utils.getRefArrayReader(this.ModelMeshDataV38),\n          \"model\",\n          Utils.getPointerReader(this.ModelModelDataV38),\n          \"properties\",\n          Utils.getArrayReader(this.ModelPropertyDataV38),\n          \"cloudData\",\n          Utils.getPointerReader(this.ModelCloudDataV38),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelObstacleDataV38),\n          \"streakData\",\n          Utils.getPointerReader(this.ModelStreakDataV38),\n          \"lightData\",\n          Utils.getPointerReader(this.ModelLightDataV38),\n          \"clothData\",\n          Utils.getArrayReader(this.ModelClothDataV38),\n          \"actionOffsetNames\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"actionOffsets\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"lodOverride\",\n          [\"[]\", \"float32\", 2],\n          \"soundScript\",\n          Utils.getFileNameReader(),\n          \"lightningData\",\n          Utils.getPointerReader(this.ModelLightningDataV38),\n          \"boneConstraints\",\n          Utils.getArrayReader(this.ModelBoneConstraintV38),\n        ];\n      },\n\n      // => Version: 37\n      37: function () {\n        this.ModelTextureDataV37 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"textureFlags\",\n          \"uint32\",\n          \"token\",\n          Utils.getQWordReader(),\n          \"blitId\",\n          Utils.getQWordReader(),\n          \"uvAnimId\",\n          \"uint32\",\n          \"uvPSInputIndex\",\n          \"uint8\",\n        ];\n\n        this.ModelConstantDataV37 = [\"name\", \"uint32\", \"value\", [\"[]\", \"float32\", 4], \"constantFlags\", \"uint32\"];\n\n        this.ModelMatConstLinkV37 = [\"linkToken\", Utils.getQWordReader(), \"constantToken\", \"uint32\"];\n\n        this.ModelUVTransLinkV37 = [\"linkToken\", Utils.getQWordReader(), \"uvAnimId\", \"uint32\", \"type\", \"uint8\"];\n\n        this.ModelMaterialDataV37 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"materialFlags\",\n          \"uint32\",\n          \"sortOrder\",\n          \"uint32\",\n          \"texCoordCount\",\n          \"uint8\",\n          \"textures\",\n          Utils.getArrayReader(this.ModelTextureDataV37),\n          \"constants\",\n          Utils.getArrayReader(this.ModelConstantDataV37),\n          \"matConstLinks\",\n          Utils.getArrayReader(this.ModelMatConstLinkV37),\n          \"uvTransLinks\",\n          Utils.getArrayReader(this.ModelUVTransLinkV37),\n        ];\n\n        this.ModelMeshLodDataV37 = [\"indices\", Utils.getArrayReader(\"uint16\")];\n\n        this.ModelMeshMorphTargetV37 = [\n          \"positionIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"positions\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"normalIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"normals\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"meshName\",\n          Utils.getStringReader(),\n        ];\n\n        this.PackGrannyMeshType = [\"mesh\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelMeshDataV37 = [\n          \"visBone\",\n          Utils.getQWordReader(),\n          \"lods\",\n          Utils.getArrayReader(this.ModelMeshLodDataV37),\n          \"morphTargets\",\n          Utils.getArrayReader(this.ModelMeshMorphTargetV37),\n          \"mesh\",\n          this.PackGrannyMeshType,\n          \"flags\",\n          \"uint32\",\n          \"seamVertIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"meshName\",\n          Utils.getQWordReader(),\n          \"minBound\",\n          [\"[]\", \"float32\", 3],\n          \"maxBound\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.ModelTransformDataV37 = [\n          \"Flags\",\n          \"uint32\",\n          \"Position\",\n          [\"[]\", \"float32\", 3],\n          \"Orientation\",\n          [\"[]\", \"float32\", 4],\n          \"ScaleShear\",\n          [\"[]\", [\"[]\", \"float32\", 3], 3],\n        ];\n\n        this.ModelBoneDataV37 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"ParentIndex\",\n          \"uint32\",\n          \"LocalTransform\",\n          this.ModelTransformDataV37,\n          \"InverseWorld4x4\",\n          [\"[]\", [\"[]\", \"float32\", 4], 4],\n          \"LODError\",\n          \"float32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n        ];\n\n        this.ModelSkeletonDataV37 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Bones\",\n          Utils.getArrayReader(this.ModelBoneDataV37),\n          \"LODType\",\n          \"uint32\",\n        ];\n\n        this.ModelMeshBindingDataV37 = [\"Mesh\", Utils.getPointerReader(\"uint8\")];\n\n        this.PackGrannyTrackMaskType = [\"trackMask\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelTrackMaskV37 = [\"trackMask\", this.PackGrannyTrackMaskType, \"token\", Utils.getQWordReader()];\n\n        this.ModelModelDataV37 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Skeleton\",\n          Utils.getPointerReader(this.ModelSkeletonDataV37),\n          \"InitialPlacement\",\n          this.ModelTransformDataV37,\n          \"MeshBindings\",\n          Utils.getArrayReader(this.ModelMeshBindingDataV37),\n          \"boneFlags\",\n          Utils.getArrayReader(\"uint32\"),\n          \"emitterBones\",\n          Utils.getArrayReader(\"uint32\"),\n          \"trackMasks\",\n          Utils.getArrayReader(this.ModelTrackMaskV37),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"radius\",\n          \"float32\",\n        ];\n\n        this.ModelPropertyDataV37 = [\n          \"id\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint32\",\n          \"mergeIndex\",\n          \"uint32\",\n          \"time\",\n          \"float32\",\n          \"val\",\n          Utils.getQWordReader(),\n          \"strVal\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.ModelParticleCloudV37 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"drag\",\n          \"float32\",\n          \"emitterIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"obstacleIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"velocity\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.ModelParticleCurveV37 = [\"curveType\", \"uint8\", \"keys\", Utils.getArrayReader([\"[]\", \"float32\", 2])];\n\n        this.ModelParticleFlipbookV37 = [\n          \"columns\",\n          \"uint8\",\n          \"count\",\n          \"uint8\",\n          \"fps\",\n          \"float32\",\n          \"rows\",\n          \"uint8\",\n          \"start\",\n          \"uint8\",\n        ];\n\n        this.ModelParticleEmitterV37 = [\n          \"acceleration\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"accelerationDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"accelerationDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"alignmentType\",\n          \"uint8\",\n          \"alignmentDir\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorBegin\",\n          [\"[]\", \"float32\", 4],\n          \"colorEnd\",\n          [\"[]\", \"float32\", 4],\n          \"colorPeriod\",\n          \"float32\",\n          \"colorFalloff\",\n          [\"[]\", \"float32\", 2],\n          \"drag\",\n          \"float32\",\n          \"emitterFlags\",\n          \"uint32\",\n          \"opacityCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV37),\n          \"opacityCurvePreset\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"flipbook\",\n          Utils.getPointerReader(this.ModelParticleFlipbookV37),\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"rotationChange\",\n          [\"[]\", \"float32\", 2],\n          \"rotationDrag\",\n          \"float32\",\n          \"rotationInitial\",\n          [\"[]\", \"float32\", 2],\n          \"scaleChange\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleInitial\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV37),\n          \"scaleCurvePreset\",\n          \"uint32\",\n          \"velocity\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"velocityDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"velocityDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"spawnGroupSize\",\n          [\"[]\", \"float32\", 2],\n          \"spawnPeriod\",\n          \"float32\",\n          \"spawnProbability\",\n          \"float32\",\n          \"spawnRadius\",\n          [\"[]\", \"float32\", 2],\n          \"spawnShape\",\n          \"uint8\",\n          \"spawnWindEmit\",\n          [\"[]\", \"float32\", 2],\n          \"spawnWindSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"texCoordRect\",\n          [\"[]\", \"float32\", 4],\n          \"windInfluence\",\n          \"uint8\",\n        ];\n\n        this.ModelCloudDataV37 = [\n          \"clouds\",\n          Utils.getArrayReader(this.ModelParticleCloudV37),\n          \"emitters\",\n          Utils.getArrayReader(this.ModelParticleEmitterV37),\n        ];\n\n        this.ModelObstacleDataV37 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"dragCoef\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"geoData\",\n          [\"[]\", \"float32\", 3],\n          \"gravityCoef\",\n          \"float32\",\n          \"response\",\n          \"uint8\",\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.ModelStreakV37 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"velocity\",\n          [\"[]\", \"float32\", 3],\n          \"anchorIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"bone\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"jitter\",\n          \"float32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"noise\",\n          \"float32\",\n          \"spawnDist\",\n          \"float32\",\n          \"texScale\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n        ];\n\n        this.ModelStreakAnchorV37 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"color\",\n          \"uint32\",\n          \"falloff\",\n          \"float32\",\n          \"lifetime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"texV\",\n          \"float32\",\n        ];\n\n        this.ModelStreakDataV37 = [\n          \"streaks\",\n          Utils.getArrayReader(this.ModelStreakV37),\n          \"anchors\",\n          Utils.getArrayReader(this.ModelStreakAnchorV37),\n        ];\n\n        this.ModelEffectLightV37 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"farDistance\",\n          \"float32\",\n          \"intensity\",\n          \"float32\",\n          \"nearDistance\",\n          \"float32\",\n        ];\n\n        this.ModelLightDataV37 = [\"effectLights\", Utils.getArrayReader(this.ModelEffectLightV37)];\n\n        this.PackVertexType = [\"fvf\", \"uint32\", \"vertices\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelClothBoneWeightV37 = [\"token\", Utils.getQWordReader(), \"weight\", \"uint8\"];\n\n        this.ModelClothMeshGroupV37 = [\"weights\", Utils.getArrayReader(this.ModelClothBoneWeightV37)];\n\n        this.ModelClothConstraintV37 = [\"vertIndexA\", \"uint16\", \"vertIndexB\", \"uint16\", \"distance\", \"float32\"];\n\n        this.ModelClothObstacleV37 = [\"bone\", Utils.getQWordReader(), \"type\", \"uint8\"];\n\n        this.ModelClothDataV37 = [\n          \"materialIndex\",\n          \"uint32\",\n          \"flags\",\n          \"uint8\",\n          \"gravity\",\n          \"float32\",\n          \"weight\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n          \"rigidness\",\n          \"uint8\",\n          \"mesh\",\n          this.PackVertexType,\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"lockCount\",\n          \"uint16\",\n          \"groups\",\n          Utils.getArrayReader(this.ModelClothMeshGroupV37),\n          \"softLocks\",\n          Utils.getArrayReader(\"uint8\"),\n          \"lod0Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV37),\n          \"lod1Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV37),\n          \"lod1VertexCount\",\n          \"uint16\",\n          \"lod1Indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"barycentricCoords\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"barycentricIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelClothObstacleV37),\n        ];\n\n        this.ModelLightningSystemV37 = [\n          \"boltIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelLightningBoltV37 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"nodeIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"colorBegin\",\n          [\"[]\", \"uint32\", 3],\n          \"colorEnd\",\n          [\"[]\", \"uint32\", 3],\n          \"colorPeriod\",\n          \"float32\",\n          \"colorFalloff\",\n          [\"[]\", \"float32\", 2],\n          \"flags\",\n          \"uint32\",\n          \"fps\",\n          \"float32\",\n          \"probability\",\n          \"float32\",\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"numSegments\",\n          \"uint16\",\n          \"opacity\",\n          [\"[]\", \"float32\", 2],\n          \"opacityPreset\",\n          \"uint8\",\n          \"period\",\n          \"float32\",\n          \"texOffset\",\n          \"float32\",\n          \"texScale\",\n          \"float32\",\n          \"texSpeed\",\n          \"float32\",\n          \"thickness\",\n          \"float32\",\n          \"thicknessPreset\",\n          \"uint8\",\n          \"type\",\n          \"uint8\",\n          \"variance\",\n          \"float32\",\n          \"variancePreset\",\n          \"uint8\",\n          \"noise\",\n          \"float32\",\n        ];\n\n        this.ModelLightningNodeV37 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"childrenIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"flags\",\n          \"uint32\",\n          \"probability\",\n          \"float32\",\n          \"radius\",\n          \"float32\",\n          \"shape\",\n          \"uint8\",\n          \"updatePos\",\n          \"float32\",\n        ];\n\n        this.ModelLightningDataV37 = [\n          \"systems\",\n          Utils.getArrayReader(this.ModelLightningSystemV37),\n          \"bolts\",\n          Utils.getArrayReader(this.ModelLightningBoltV37),\n          \"nodes\",\n          Utils.getArrayReader(this.ModelLightningNodeV37),\n        ];\n\n        this.ModelBoneConstraintLinkV37 = [\n          \"angle\",\n          \"float32\",\n          \"azimuth\",\n          \"float32\",\n          \"distance\",\n          [\"[]\", \"float32\", 2],\n          \"token\",\n          Utils.getQWordReader(),\n        ];\n\n        this.ModelBoneConstraintV37 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint16\",\n          \"twistOffset\",\n          \"float32\",\n          \"animBlend\",\n          \"float32\",\n          \"drag\",\n          \"float32\",\n          \"ellipseRatio\",\n          \"float32\",\n          \"gravity\",\n          \"float32\",\n          \"collisionRadius\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n          \"angle\",\n          [\"[]\", \"float32\", 2],\n          \"angleStrength\",\n          \"float32\",\n          \"angleType\",\n          \"uint8\",\n          \"distanceInner\",\n          [\"[]\", \"float32\", 2],\n          \"distanceInnerStrength\",\n          \"float32\",\n          \"distanceInnerType\",\n          \"uint8\",\n          \"links\",\n          Utils.getArrayReader(this.ModelBoneConstraintLinkV37),\n          \"distanceOuter\",\n          [\"[]\", \"float32\", 2],\n          \"distanceOuterStrength\",\n          \"float32\",\n          \"distanceOuterType\",\n          \"uint8\",\n          \"twist\",\n          [\"[]\", \"float32\", 2],\n          \"twistStrength\",\n          \"float32\",\n          \"twistType\",\n          \"uint8\",\n        ];\n\n        this.__root = this.ModelFileDataV37 = [\n          \"materials\",\n          Utils.getRefArrayReader(this.ModelMaterialDataV37),\n          \"meshes\",\n          Utils.getRefArrayReader(this.ModelMeshDataV37),\n          \"model\",\n          Utils.getPointerReader(this.ModelModelDataV37),\n          \"properties\",\n          Utils.getArrayReader(this.ModelPropertyDataV37),\n          \"cloudData\",\n          Utils.getPointerReader(this.ModelCloudDataV37),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelObstacleDataV37),\n          \"streakData\",\n          Utils.getPointerReader(this.ModelStreakDataV37),\n          \"lightData\",\n          Utils.getPointerReader(this.ModelLightDataV37),\n          \"clothData\",\n          Utils.getArrayReader(this.ModelClothDataV37),\n          \"actionOffsetNames\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"actionOffsets\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"lodOverride\",\n          [\"[]\", \"float32\", 2],\n          \"soundScript\",\n          Utils.getFileNameReader(),\n          \"lightningData\",\n          Utils.getPointerReader(this.ModelLightningDataV37),\n          \"boneConstraints\",\n          Utils.getArrayReader(this.ModelBoneConstraintV37),\n        ];\n      },\n\n      // => Version: 36, ReferencedFunction: 0xF2A560\n      36: function () {\n        this.ModelTextureDataV36 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"textureFlags\",\n          \"uint32\",\n          \"token\",\n          Utils.getQWordReader(),\n          \"blitId\",\n          Utils.getQWordReader(),\n          \"uvAnimId\",\n          \"uint32\",\n          \"uvPSInputIndex\",\n          \"uint8\",\n        ];\n\n        this.ModelConstantDataV36 = [\"name\", \"uint32\", \"value\", [\"[]\", \"float32\", 4], \"constantFlags\", \"uint32\"];\n\n        this.ModelMatConstLinkV36 = [\"linkToken\", Utils.getQWordReader(), \"constantToken\", \"uint32\"];\n\n        this.ModelUVTransLinkV36 = [\"linkToken\", Utils.getQWordReader(), \"uvAnimId\", \"uint32\", \"type\", \"uint8\"];\n\n        this.ModelMaterialDataV36 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"materialFlags\",\n          \"uint32\",\n          \"sortOrder\",\n          \"uint32\",\n          \"texCoordCount\",\n          \"uint8\",\n          \"textures\",\n          Utils.getArrayReader(this.ModelTextureDataV36),\n          \"constants\",\n          Utils.getArrayReader(this.ModelConstantDataV36),\n          \"matConstLinks\",\n          Utils.getArrayReader(this.ModelMatConstLinkV36),\n          \"uvTransLinks\",\n          Utils.getArrayReader(this.ModelUVTransLinkV36),\n        ];\n\n        this.ModelMeshLodDataV36 = [\"indices\", Utils.getArrayReader(\"uint16\")];\n\n        this.ModelMeshMorphTargetV36 = [\n          \"positionIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"positions\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"normalIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"normals\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"meshName\",\n          Utils.getStringReader(),\n        ];\n\n        this.PackGrannyMeshType = [\"mesh\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelMeshDataV36 = [\n          \"visBone\",\n          Utils.getQWordReader(),\n          \"lods\",\n          Utils.getArrayReader(this.ModelMeshLodDataV36),\n          \"morphTargets\",\n          Utils.getArrayReader(this.ModelMeshMorphTargetV36),\n          \"mesh\",\n          this.PackGrannyMeshType,\n          \"flags\",\n          \"uint32\",\n          \"seamVertIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"meshName\",\n          Utils.getQWordReader(),\n          \"minBound\",\n          [\"[]\", \"float32\", 3],\n          \"maxBound\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.ModelTransformDataV36 = [\n          \"Flags\",\n          \"uint32\",\n          \"Position\",\n          [\"[]\", \"float32\", 3],\n          \"Orientation\",\n          [\"[]\", \"float32\", 4],\n          \"ScaleShear\",\n          [\"[]\", [\"[]\", \"float32\", 3], 3],\n        ];\n\n        this.ModelBoneDataV36 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"ParentIndex\",\n          \"uint32\",\n          \"LocalTransform\",\n          this.ModelTransformDataV36,\n          \"InverseWorld4x4\",\n          [\"[]\", [\"[]\", \"float32\", 4], 4],\n          \"LODError\",\n          \"float32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n        ];\n\n        this.ModelSkeletonDataV36 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Bones\",\n          Utils.getArrayReader(this.ModelBoneDataV36),\n          \"LODType\",\n          \"uint32\",\n        ];\n\n        this.ModelMeshBindingDataV36 = [\"Mesh\", Utils.getPointerReader(\"uint8\")];\n\n        this.PackGrannyTrackMaskType = [\"trackMask\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelTrackMaskV36 = [\"trackMask\", this.PackGrannyTrackMaskType, \"token\", Utils.getQWordReader()];\n\n        this.ModelModelDataV36 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Skeleton\",\n          Utils.getPointerReader(this.ModelSkeletonDataV36),\n          \"InitialPlacement\",\n          this.ModelTransformDataV36,\n          \"MeshBindings\",\n          Utils.getArrayReader(this.ModelMeshBindingDataV36),\n          \"boneFlags\",\n          Utils.getArrayReader(\"uint32\"),\n          \"emitterBones\",\n          Utils.getArrayReader(\"uint32\"),\n          \"trackMasks\",\n          Utils.getArrayReader(this.ModelTrackMaskV36),\n          \"skeletonHash\",\n          Utils.getArrayReader(\"uint8\"),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"radius\",\n          \"float32\",\n        ];\n\n        this.ModelPropertyDataV36 = [\n          \"id\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint32\",\n          \"mergeIndex\",\n          \"uint32\",\n          \"time\",\n          \"float32\",\n          \"val\",\n          Utils.getQWordReader(),\n          \"strVal\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.ModelParticleCloudV36 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"drag\",\n          \"float32\",\n          \"emitterIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"obstacleIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"velocity\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.ModelParticleCurveV36 = [\"curveType\", \"uint8\", \"keys\", Utils.getArrayReader([\"[]\", \"float32\", 2])];\n\n        this.ModelParticleFlipbookV36 = [\n          \"columns\",\n          \"uint8\",\n          \"count\",\n          \"uint8\",\n          \"fps\",\n          \"float32\",\n          \"rows\",\n          \"uint8\",\n          \"start\",\n          \"uint8\",\n        ];\n\n        this.ModelParticleEmitterV36 = [\n          \"acceleration\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"accelerationDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"accelerationDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"alignmentType\",\n          \"uint8\",\n          \"alignmentDir\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorBegin\",\n          [\"[]\", \"float32\", 4],\n          \"colorEnd\",\n          [\"[]\", \"float32\", 4],\n          \"colorPeriod\",\n          \"float32\",\n          \"colorFalloff\",\n          [\"[]\", \"float32\", 2],\n          \"drag\",\n          \"float32\",\n          \"emitterFlags\",\n          \"uint32\",\n          \"opacityCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV36),\n          \"opacityCurvePreset\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"flipbook\",\n          Utils.getPointerReader(this.ModelParticleFlipbookV36),\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"rotationChange\",\n          [\"[]\", \"float32\", 2],\n          \"rotationDrag\",\n          \"float32\",\n          \"rotationInitial\",\n          [\"[]\", \"float32\", 2],\n          \"scaleChange\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleInitial\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV36),\n          \"scaleCurvePreset\",\n          \"uint32\",\n          \"velocity\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"velocityDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"velocityDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"spawnGroupSize\",\n          [\"[]\", \"float32\", 2],\n          \"spawnPeriod\",\n          \"float32\",\n          \"spawnProbability\",\n          \"float32\",\n          \"spawnRadius\",\n          [\"[]\", \"float32\", 2],\n          \"spawnShape\",\n          \"uint8\",\n          \"spawnWindEmit\",\n          [\"[]\", \"float32\", 2],\n          \"spawnWindSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"texCoordRect\",\n          [\"[]\", \"float32\", 4],\n          \"windInfluence\",\n          \"uint8\",\n        ];\n\n        this.ModelCloudDataV36 = [\n          \"clouds\",\n          Utils.getArrayReader(this.ModelParticleCloudV36),\n          \"emitters\",\n          Utils.getArrayReader(this.ModelParticleEmitterV36),\n        ];\n\n        this.ModelObstacleDataV36 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"dragCoef\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"geoData\",\n          [\"[]\", \"float32\", 3],\n          \"gravityCoef\",\n          \"float32\",\n          \"response\",\n          \"uint8\",\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.ModelStreakV36 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"velocity\",\n          [\"[]\", \"float32\", 3],\n          \"anchorIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"bone\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"jitter\",\n          \"float32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"noise\",\n          \"float32\",\n          \"spawnDist\",\n          \"float32\",\n          \"texScale\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n        ];\n\n        this.ModelStreakAnchorV36 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"color\",\n          \"uint32\",\n          \"falloff\",\n          \"float32\",\n          \"lifetime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"texV\",\n          \"float32\",\n        ];\n\n        this.ModelStreakDataV36 = [\n          \"streaks\",\n          Utils.getArrayReader(this.ModelStreakV36),\n          \"anchors\",\n          Utils.getArrayReader(this.ModelStreakAnchorV36),\n        ];\n\n        this.ModelEffectLightV36 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"farDistance\",\n          \"float32\",\n          \"intensity\",\n          \"float32\",\n          \"nearDistance\",\n          \"float32\",\n        ];\n\n        this.ModelLightDataV36 = [\"effectLights\", Utils.getArrayReader(this.ModelEffectLightV36)];\n\n        this.PackVertexType = [\"fvf\", \"uint32\", \"vertices\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelClothBoneWeightV36 = [\"token\", Utils.getQWordReader(), \"weight\", \"uint8\"];\n\n        this.ModelClothMeshGroupV36 = [\"weights\", Utils.getArrayReader(this.ModelClothBoneWeightV36)];\n\n        this.ModelClothConstraintV36 = [\"vertIndexA\", \"uint16\", \"vertIndexB\", \"uint16\", \"distance\", \"float32\"];\n\n        this.ModelClothObstacleV36 = [\"bone\", Utils.getQWordReader(), \"type\", \"uint8\"];\n\n        this.ModelClothDataV36 = [\n          \"materialIndex\",\n          \"uint32\",\n          \"flags\",\n          \"uint8\",\n          \"gravity\",\n          \"float32\",\n          \"weight\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n          \"rigidness\",\n          \"uint8\",\n          \"mesh\",\n          this.PackVertexType,\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"lockCount\",\n          \"uint16\",\n          \"groups\",\n          Utils.getArrayReader(this.ModelClothMeshGroupV36),\n          \"softLocks\",\n          Utils.getArrayReader(\"uint8\"),\n          \"lod0Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV36),\n          \"lod1Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV36),\n          \"lod1VertexCount\",\n          \"uint16\",\n          \"lod1Indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"barycentricCoords\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"barycentricIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelClothObstacleV36),\n        ];\n\n        this.ModelLightningSystemV36 = [\n          \"boltIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelLightningBoltV36 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"nodeIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"colorBegin\",\n          [\"[]\", \"uint32\", 3],\n          \"colorEnd\",\n          [\"[]\", \"uint32\", 3],\n          \"colorPeriod\",\n          \"float32\",\n          \"colorFalloff\",\n          [\"[]\", \"float32\", 2],\n          \"flags\",\n          \"uint32\",\n          \"fps\",\n          \"float32\",\n          \"probability\",\n          \"float32\",\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"numSegments\",\n          \"uint16\",\n          \"opacity\",\n          [\"[]\", \"float32\", 2],\n          \"opacityPreset\",\n          \"uint8\",\n          \"period\",\n          \"float32\",\n          \"texOffset\",\n          \"float32\",\n          \"texScale\",\n          \"float32\",\n          \"texSpeed\",\n          \"float32\",\n          \"thickness\",\n          \"float32\",\n          \"thicknessPreset\",\n          \"uint8\",\n          \"type\",\n          \"uint8\",\n          \"variance\",\n          \"float32\",\n          \"variancePreset\",\n          \"uint8\",\n          \"noise\",\n          \"float32\",\n        ];\n\n        this.ModelLightningNodeV36 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"childrenIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"flags\",\n          \"uint32\",\n          \"probability\",\n          \"float32\",\n          \"radius\",\n          \"float32\",\n          \"shape\",\n          \"uint8\",\n          \"updatePos\",\n          \"float32\",\n        ];\n\n        this.ModelLightningDataV36 = [\n          \"systems\",\n          Utils.getArrayReader(this.ModelLightningSystemV36),\n          \"bolts\",\n          Utils.getArrayReader(this.ModelLightningBoltV36),\n          \"nodes\",\n          Utils.getArrayReader(this.ModelLightningNodeV36),\n        ];\n\n        this.ModelBoneConstraintLinkV36 = [\n          \"angle\",\n          \"float32\",\n          \"azimuth\",\n          \"float32\",\n          \"distance\",\n          [\"[]\", \"float32\", 2],\n          \"token\",\n          Utils.getQWordReader(),\n        ];\n\n        this.ModelBoneConstraintV36 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint16\",\n          \"twistOffset\",\n          \"float32\",\n          \"animBlend\",\n          \"float32\",\n          \"drag\",\n          \"float32\",\n          \"ellipseRatio\",\n          \"float32\",\n          \"gravity\",\n          \"float32\",\n          \"collisionRadius\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n          \"angle\",\n          [\"[]\", \"float32\", 2],\n          \"angleStrength\",\n          \"float32\",\n          \"angleType\",\n          \"uint8\",\n          \"distanceInner\",\n          [\"[]\", \"float32\", 2],\n          \"distanceInnerStrength\",\n          \"float32\",\n          \"distanceInnerType\",\n          \"uint8\",\n          \"links\",\n          Utils.getArrayReader(this.ModelBoneConstraintLinkV36),\n          \"distanceOuter\",\n          [\"[]\", \"float32\", 2],\n          \"distanceOuterStrength\",\n          \"float32\",\n          \"distanceOuterType\",\n          \"uint8\",\n          \"twist\",\n          [\"[]\", \"float32\", 2],\n          \"twistStrength\",\n          \"float32\",\n          \"twistType\",\n          \"uint8\",\n        ];\n\n        this.__root = this.ModelFileDataV36 = [\n          \"materials\",\n          Utils.getRefArrayReader(this.ModelMaterialDataV36),\n          \"meshes\",\n          Utils.getRefArrayReader(this.ModelMeshDataV36),\n          \"model\",\n          Utils.getPointerReader(this.ModelModelDataV36),\n          \"properties\",\n          Utils.getArrayReader(this.ModelPropertyDataV36),\n          \"cloudData\",\n          Utils.getPointerReader(this.ModelCloudDataV36),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelObstacleDataV36),\n          \"streakData\",\n          Utils.getPointerReader(this.ModelStreakDataV36),\n          \"lightData\",\n          Utils.getPointerReader(this.ModelLightDataV36),\n          \"clothData\",\n          Utils.getArrayReader(this.ModelClothDataV36),\n          \"actionOffsetNames\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"actionOffsets\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"lodOverride\",\n          [\"[]\", \"float32\", 2],\n          \"soundScript\",\n          Utils.getFileNameReader(),\n          \"lightningData\",\n          Utils.getPointerReader(this.ModelLightningDataV36),\n          \"boneConstraints\",\n          Utils.getArrayReader(this.ModelBoneConstraintV36),\n        ];\n      },\n\n      // => Version: 35, ReferencedFunction: 0xF2A400\n      35: function () {\n        this.ModelTextureDataV35 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"textureFlags\",\n          \"uint32\",\n          \"token\",\n          Utils.getQWordReader(),\n          \"blitId\",\n          Utils.getQWordReader(),\n          \"uvAnimId\",\n          \"uint32\",\n          \"uvPSInputIndex\",\n          \"uint8\",\n        ];\n\n        this.ModelConstantDataV35 = [\"name\", \"uint32\", \"value\", [\"[]\", \"float32\", 4], \"constantFlags\", \"uint32\"];\n\n        this.ModelMatConstLinkV35 = [\"linkToken\", Utils.getQWordReader(), \"constantToken\", \"uint32\"];\n\n        this.ModelUVTransLinkV35 = [\"linkToken\", Utils.getQWordReader(), \"uvAnimId\", \"uint32\", \"type\", \"uint8\"];\n\n        this.ModelMaterialDataV35 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"materialFlags\",\n          \"uint32\",\n          \"sortOrder\",\n          \"uint32\",\n          \"texCoordCount\",\n          \"uint8\",\n          \"textures\",\n          Utils.getArrayReader(this.ModelTextureDataV35),\n          \"constants\",\n          Utils.getArrayReader(this.ModelConstantDataV35),\n          \"matConstLinks\",\n          Utils.getArrayReader(this.ModelMatConstLinkV35),\n          \"uvTransLinks\",\n          Utils.getArrayReader(this.ModelUVTransLinkV35),\n        ];\n\n        this.ModelMeshLodDataV35 = [\"indices\", Utils.getArrayReader(\"uint16\")];\n\n        this.ModelMeshMorphTargetV35 = [\n          \"positionIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"positions\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"normalIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"normals\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"meshName\",\n          Utils.getStringReader(),\n        ];\n\n        this.PackGrannyMeshType = [\"mesh\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelMeshDataV35 = [\n          \"visBone\",\n          Utils.getQWordReader(),\n          \"lods\",\n          Utils.getArrayReader(this.ModelMeshLodDataV35),\n          \"morphTargets\",\n          Utils.getArrayReader(this.ModelMeshMorphTargetV35),\n          \"mesh\",\n          this.PackGrannyMeshType,\n          \"flags\",\n          \"uint32\",\n          \"seamVertIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"meshName\",\n          Utils.getQWordReader(),\n          \"minBound\",\n          [\"[]\", \"float32\", 3],\n          \"maxBound\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.ModelTransformDataV35 = [\n          \"Flags\",\n          \"uint32\",\n          \"Position\",\n          [\"[]\", \"float32\", 3],\n          \"Orientation\",\n          [\"[]\", \"float32\", 4],\n          \"ScaleShear\",\n          [\"[]\", [\"[]\", \"float32\", 3], 3],\n        ];\n\n        this.ModelBoneDataV35 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"ParentIndex\",\n          \"uint32\",\n          \"LocalTransform\",\n          this.ModelTransformDataV35,\n          \"InverseWorld4x4\",\n          [\"[]\", [\"[]\", \"float32\", 4], 4],\n          \"LODError\",\n          \"float32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n        ];\n\n        this.ModelSkeletonDataV35 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Bones\",\n          Utils.getArrayReader(this.ModelBoneDataV35),\n          \"LODType\",\n          \"uint32\",\n        ];\n\n        this.ModelMeshBindingDataV35 = [\"Mesh\", Utils.getPointerReader(\"uint8\")];\n\n        this.PackGrannyTrackMaskType = [\"trackMask\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelTrackMaskV35 = [\"trackMask\", this.PackGrannyTrackMaskType, \"token\", Utils.getQWordReader()];\n\n        this.ModelModelDataV35 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Skeleton\",\n          Utils.getPointerReader(this.ModelSkeletonDataV35),\n          \"InitialPlacement\",\n          this.ModelTransformDataV35,\n          \"MeshBindings\",\n          Utils.getArrayReader(this.ModelMeshBindingDataV35),\n          \"boneFlags\",\n          Utils.getArrayReader(\"uint32\"),\n          \"emitterBones\",\n          Utils.getArrayReader(\"uint32\"),\n          \"trackMasks\",\n          Utils.getArrayReader(this.ModelTrackMaskV35),\n          \"skeletonHash\",\n          Utils.getArrayReader(\"uint8\"),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"radius\",\n          \"float32\",\n        ];\n\n        this.ModelPropertyDataV35 = [\n          \"id\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint32\",\n          \"mergeIndex\",\n          \"uint32\",\n          \"time\",\n          \"float32\",\n          \"val\",\n          Utils.getQWordReader(),\n          \"strVal\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.ModelParticleCloudV35 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"drag\",\n          \"float32\",\n          \"emitterIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"obstacleIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"velocity\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.ModelParticleCurveV35 = [\"curveType\", \"uint8\", \"keys\", Utils.getArrayReader([\"[]\", \"float32\", 2])];\n\n        this.ModelParticleFlipbookV35 = [\n          \"columns\",\n          \"uint8\",\n          \"count\",\n          \"uint8\",\n          \"fps\",\n          \"float32\",\n          \"rows\",\n          \"uint8\",\n          \"start\",\n          \"uint8\",\n        ];\n\n        this.ModelParticleEmitterV35 = [\n          \"acceleration\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"accelerationDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"accelerationDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"alignmentType\",\n          \"uint8\",\n          \"alignmentDir\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorBegin\",\n          [\"[]\", \"float32\", 4],\n          \"colorEnd\",\n          [\"[]\", \"float32\", 4],\n          \"colorPeriod\",\n          \"float32\",\n          \"colorFalloff\",\n          [\"[]\", \"float32\", 2],\n          \"drag\",\n          \"float32\",\n          \"emitterFlags\",\n          \"uint32\",\n          \"opacityCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV35),\n          \"opacityCurvePreset\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"flipbook\",\n          Utils.getPointerReader(this.ModelParticleFlipbookV35),\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"rotationChange\",\n          [\"[]\", \"float32\", 2],\n          \"rotationDrag\",\n          \"float32\",\n          \"rotationInitial\",\n          [\"[]\", \"float32\", 2],\n          \"scaleChange\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleInitial\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV35),\n          \"scaleCurvePreset\",\n          \"uint32\",\n          \"velocity\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"velocityDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"velocityDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"spawnGroupSize\",\n          [\"[]\", \"float32\", 2],\n          \"spawnPeriod\",\n          \"float32\",\n          \"spawnProbability\",\n          \"float32\",\n          \"spawnRadius\",\n          [\"[]\", \"float32\", 2],\n          \"spawnShape\",\n          \"uint8\",\n          \"spawnWindEmit\",\n          [\"[]\", \"float32\", 2],\n          \"spawnWindSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"texCoordRect\",\n          [\"[]\", \"float32\", 4],\n          \"windInfluence\",\n          \"uint8\",\n        ];\n\n        this.ModelCloudDataV35 = [\n          \"clouds\",\n          Utils.getArrayReader(this.ModelParticleCloudV35),\n          \"emitters\",\n          Utils.getArrayReader(this.ModelParticleEmitterV35),\n        ];\n\n        this.ModelObstacleDataV35 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"dragCoef\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"geoData\",\n          [\"[]\", \"float32\", 3],\n          \"gravityCoef\",\n          \"float32\",\n          \"response\",\n          \"uint8\",\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.ModelStreakV35 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"velocity\",\n          [\"[]\", \"float32\", 3],\n          \"anchorIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"bone\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"jitter\",\n          \"float32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"noise\",\n          \"float32\",\n          \"spawnDist\",\n          \"float32\",\n          \"texScale\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n        ];\n\n        this.ModelStreakAnchorV35 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"color\",\n          \"uint32\",\n          \"falloff\",\n          \"float32\",\n          \"lifetime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"texV\",\n          \"float32\",\n        ];\n\n        this.ModelStreakDataV35 = [\n          \"streaks\",\n          Utils.getArrayReader(this.ModelStreakV35),\n          \"anchors\",\n          Utils.getArrayReader(this.ModelStreakAnchorV35),\n        ];\n\n        this.ModelEffectLightV35 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"farDistance\",\n          \"float32\",\n          \"intensity\",\n          \"float32\",\n          \"nearDistance\",\n          \"float32\",\n        ];\n\n        this.ModelLightDataV35 = [\"effectLights\", Utils.getArrayReader(this.ModelEffectLightV35)];\n\n        this.PackVertexType = [\"fvf\", \"uint32\", \"vertices\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelClothBoneWeightV35 = [\"token\", Utils.getQWordReader(), \"weight\", \"uint8\"];\n\n        this.ModelClothMeshGroupV35 = [\"weights\", Utils.getArrayReader(this.ModelClothBoneWeightV35)];\n\n        this.ModelClothConstraintV35 = [\"vertIndexA\", \"uint16\", \"vertIndexB\", \"uint16\", \"distance\", \"float32\"];\n\n        this.ModelClothObstacleV35 = [\"bone\", Utils.getQWordReader(), \"type\", \"uint8\"];\n\n        this.ModelClothDataV35 = [\n          \"materialIndex\",\n          \"uint32\",\n          \"flags\",\n          \"uint8\",\n          \"gravity\",\n          \"float32\",\n          \"weight\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n          \"rigidness\",\n          \"uint8\",\n          \"mesh\",\n          this.PackVertexType,\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"lockCount\",\n          \"uint16\",\n          \"groups\",\n          Utils.getArrayReader(this.ModelClothMeshGroupV35),\n          \"softLocks\",\n          Utils.getArrayReader(\"uint8\"),\n          \"lod0Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV35),\n          \"lod1Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV35),\n          \"lod1VertexCount\",\n          \"uint16\",\n          \"lod1Indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"barycentricCoords\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"barycentricIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelClothObstacleV35),\n        ];\n\n        this.ModelLightningSystemV35 = [\n          \"boltIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelLightningBoltV35 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"nodeIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"colorBegin\",\n          [\"[]\", \"uint32\", 3],\n          \"colorEnd\",\n          [\"[]\", \"uint32\", 3],\n          \"colorPeriod\",\n          \"float32\",\n          \"colorFalloff\",\n          [\"[]\", \"float32\", 2],\n          \"flags\",\n          \"uint32\",\n          \"fps\",\n          \"float32\",\n          \"probability\",\n          \"float32\",\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"numSegments\",\n          \"uint16\",\n          \"opacity\",\n          [\"[]\", \"float32\", 2],\n          \"opacityPreset\",\n          \"uint8\",\n          \"period\",\n          \"float32\",\n          \"texOffset\",\n          \"float32\",\n          \"texScale\",\n          \"float32\",\n          \"texSpeed\",\n          \"float32\",\n          \"thickness\",\n          \"float32\",\n          \"thicknessPreset\",\n          \"uint8\",\n          \"type\",\n          \"uint8\",\n          \"variance\",\n          \"float32\",\n          \"variancePreset\",\n          \"uint8\",\n          \"noise\",\n          \"float32\",\n        ];\n\n        this.ModelLightningNodeV35 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"childrenIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"flags\",\n          \"uint32\",\n          \"probability\",\n          \"float32\",\n          \"radius\",\n          \"float32\",\n          \"shape\",\n          \"uint8\",\n          \"updatePos\",\n          \"float32\",\n        ];\n\n        this.ModelLightningDataV35 = [\n          \"systems\",\n          Utils.getArrayReader(this.ModelLightningSystemV35),\n          \"bolts\",\n          Utils.getArrayReader(this.ModelLightningBoltV35),\n          \"nodes\",\n          Utils.getArrayReader(this.ModelLightningNodeV35),\n        ];\n\n        this.ModelBoneConstraintV35 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint16\",\n          \"twistOffset\",\n          \"float32\",\n          \"animBlend\",\n          \"uint8\",\n          \"drag\",\n          \"uint8\",\n          \"ellipseRatio\",\n          \"float32\",\n          \"gravity\",\n          \"uint8\",\n          \"collisionRadius\",\n          \"float32\",\n          \"wind\",\n          \"uint8\",\n          \"angle\",\n          [\"[]\", \"float32\", 2],\n          \"angleStrength\",\n          \"uint8\",\n          \"angleType\",\n          \"uint8\",\n          \"distanceInner\",\n          [\"[]\", \"float32\", 2],\n          \"distanceInnerStrength\",\n          \"uint8\",\n          \"distanceInnerType\",\n          \"uint8\",\n          \"distanceOuter\",\n          [\"[]\", \"float32\", 2],\n          \"distanceOuterStrength\",\n          \"uint8\",\n          \"distanceOuterType\",\n          \"uint8\",\n          \"twist\",\n          [\"[]\", \"float32\", 2],\n          \"twistStrength\",\n          \"uint8\",\n          \"twistType\",\n          \"uint8\",\n        ];\n\n        this.__root = this.ModelFileDataV35 = [\n          \"materials\",\n          Utils.getRefArrayReader(this.ModelMaterialDataV35),\n          \"meshes\",\n          Utils.getRefArrayReader(this.ModelMeshDataV35),\n          \"model\",\n          Utils.getPointerReader(this.ModelModelDataV35),\n          \"properties\",\n          Utils.getArrayReader(this.ModelPropertyDataV35),\n          \"cloudData\",\n          Utils.getPointerReader(this.ModelCloudDataV35),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelObstacleDataV35),\n          \"streakData\",\n          Utils.getPointerReader(this.ModelStreakDataV35),\n          \"lightData\",\n          Utils.getPointerReader(this.ModelLightDataV35),\n          \"clothData\",\n          Utils.getArrayReader(this.ModelClothDataV35),\n          \"actionOffsetNames\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"actionOffsets\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"lodOverride\",\n          [\"[]\", \"float32\", 2],\n          \"soundScript\",\n          Utils.getFileNameReader(),\n          \"lightningData\",\n          Utils.getPointerReader(this.ModelLightningDataV35),\n          \"boneConstraints\",\n          Utils.getArrayReader(this.ModelBoneConstraintV35),\n        ];\n      },\n\n      // => Version: 34, ReferencedFunction: 0xF2A2E0\n      34: function () {\n        this.ModelTextureDataV34 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"textureFlags\",\n          \"uint32\",\n          \"token\",\n          Utils.getQWordReader(),\n          \"blitId\",\n          Utils.getQWordReader(),\n          \"uvAnimId\",\n          \"uint32\",\n          \"uvPSInputIndex\",\n          \"uint8\",\n        ];\n\n        this.ModelConstantDataV34 = [\"name\", \"uint32\", \"value\", [\"[]\", \"float32\", 4], \"constantFlags\", \"uint32\"];\n\n        this.ModelMatConstLinkV34 = [\"linkToken\", Utils.getQWordReader(), \"constantToken\", \"uint32\"];\n\n        this.ModelUVTransLinkV34 = [\"linkToken\", Utils.getQWordReader(), \"uvAnimId\", \"uint32\", \"type\", \"uint8\"];\n\n        this.ModelMaterialDataV34 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"materialFlags\",\n          \"uint32\",\n          \"sortOrder\",\n          \"uint32\",\n          \"texCoordCount\",\n          \"uint8\",\n          \"textures\",\n          Utils.getArrayReader(this.ModelTextureDataV34),\n          \"constants\",\n          Utils.getArrayReader(this.ModelConstantDataV34),\n          \"matConstLinks\",\n          Utils.getArrayReader(this.ModelMatConstLinkV34),\n          \"uvTransLinks\",\n          Utils.getArrayReader(this.ModelUVTransLinkV34),\n        ];\n\n        this.ModelMeshLodDataV34 = [\"indices\", Utils.getArrayReader(\"uint16\")];\n\n        this.ModelMeshMorphTargetV34 = [\n          \"positionIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"positions\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"normalIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"normals\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"meshName\",\n          Utils.getStringReader(),\n        ];\n\n        this.PackGrannyMeshType = [\"mesh\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelMeshDataV34 = [\n          \"visBone\",\n          Utils.getQWordReader(),\n          \"lods\",\n          Utils.getArrayReader(this.ModelMeshLodDataV34),\n          \"morphTargets\",\n          Utils.getArrayReader(this.ModelMeshMorphTargetV34),\n          \"mesh\",\n          this.PackGrannyMeshType,\n          \"flags\",\n          \"uint32\",\n          \"seamVertIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"meshName\",\n          Utils.getQWordReader(),\n          \"minBound\",\n          [\"[]\", \"float32\", 3],\n          \"maxBound\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.ModelTransformDataV34 = [\n          \"Flags\",\n          \"uint32\",\n          \"Position\",\n          [\"[]\", \"float32\", 3],\n          \"Orientation\",\n          [\"[]\", \"float32\", 4],\n          \"ScaleShear\",\n          [\"[]\", [\"[]\", \"float32\", 3], 3],\n        ];\n\n        this.ModelBoneDataV34 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"ParentIndex\",\n          \"uint32\",\n          \"LocalTransform\",\n          this.ModelTransformDataV34,\n          \"InverseWorld4x4\",\n          [\"[]\", [\"[]\", \"float32\", 4], 4],\n          \"LODError\",\n          \"float32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n        ];\n\n        this.ModelSkeletonDataV34 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Bones\",\n          Utils.getArrayReader(this.ModelBoneDataV34),\n          \"LODType\",\n          \"uint32\",\n        ];\n\n        this.ModelMeshBindingDataV34 = [\"Mesh\", Utils.getPointerReader(\"uint8\")];\n\n        this.PackGrannyTrackMaskType = [\"trackMask\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelTrackMaskV34 = [\"trackMask\", this.PackGrannyTrackMaskType, \"token\", Utils.getQWordReader()];\n\n        this.ModelModelDataV34 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Skeleton\",\n          Utils.getPointerReader(this.ModelSkeletonDataV34),\n          \"InitialPlacement\",\n          this.ModelTransformDataV34,\n          \"MeshBindings\",\n          Utils.getArrayReader(this.ModelMeshBindingDataV34),\n          \"boneFlags\",\n          Utils.getArrayReader(\"uint32\"),\n          \"emitterBones\",\n          Utils.getArrayReader(\"uint32\"),\n          \"trackMasks\",\n          Utils.getArrayReader(this.ModelTrackMaskV34),\n          \"skeletonHash\",\n          Utils.getArrayReader(\"uint8\"),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"radius\",\n          \"float32\",\n        ];\n\n        this.ModelPropertyDataV34 = [\n          \"id\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint32\",\n          \"mergeIndex\",\n          \"uint32\",\n          \"time\",\n          \"float32\",\n          \"val\",\n          Utils.getQWordReader(),\n          \"strVal\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.ModelParticleCloudV34 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"drag\",\n          \"float32\",\n          \"emitterIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"obstacleIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"velocity\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.ModelParticleCurveV34 = [\"curveType\", \"uint8\", \"keys\", Utils.getArrayReader([\"[]\", \"float32\", 2])];\n\n        this.ModelParticleFlipbookV34 = [\n          \"columns\",\n          \"uint8\",\n          \"count\",\n          \"uint8\",\n          \"fps\",\n          \"float32\",\n          \"rows\",\n          \"uint8\",\n          \"start\",\n          \"uint8\",\n        ];\n\n        this.ModelParticleEmitterV34 = [\n          \"acceleration\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"accelerationDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"accelerationDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"alignmentType\",\n          \"uint8\",\n          \"alignmentDir\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorBegin\",\n          [\"[]\", \"float32\", 4],\n          \"colorEnd\",\n          [\"[]\", \"float32\", 4],\n          \"colorPeriod\",\n          \"float32\",\n          \"colorFalloff\",\n          [\"[]\", \"float32\", 2],\n          \"drag\",\n          \"float32\",\n          \"emitterFlags\",\n          \"uint32\",\n          \"opacityCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV34),\n          \"opacityCurvePreset\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"flipbook\",\n          Utils.getPointerReader(this.ModelParticleFlipbookV34),\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"rotationChange\",\n          [\"[]\", \"float32\", 2],\n          \"rotationDrag\",\n          \"float32\",\n          \"rotationInitial\",\n          [\"[]\", \"float32\", 2],\n          \"scaleChange\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleInitial\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV34),\n          \"scaleCurvePreset\",\n          \"uint32\",\n          \"velocity\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"velocityDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"velocityDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"spawnGroupSize\",\n          [\"[]\", \"float32\", 2],\n          \"spawnPeriod\",\n          \"float32\",\n          \"spawnProbability\",\n          \"float32\",\n          \"spawnRadius\",\n          [\"[]\", \"float32\", 2],\n          \"spawnShape\",\n          \"uint8\",\n          \"spawnWindEmit\",\n          [\"[]\", \"float32\", 2],\n          \"spawnWindSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"texCoordRect\",\n          [\"[]\", \"float32\", 4],\n          \"windInfluence\",\n          \"uint8\",\n        ];\n\n        this.ModelCloudDataV34 = [\n          \"clouds\",\n          Utils.getArrayReader(this.ModelParticleCloudV34),\n          \"emitters\",\n          Utils.getArrayReader(this.ModelParticleEmitterV34),\n        ];\n\n        this.ModelObstacleDataV34 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"dragCoef\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"geoData\",\n          [\"[]\", \"float32\", 3],\n          \"gravityCoef\",\n          \"float32\",\n          \"response\",\n          \"uint8\",\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.ModelStreakV34 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"velocity\",\n          [\"[]\", \"float32\", 3],\n          \"anchorIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"bone\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"jitter\",\n          \"float32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"noise\",\n          \"float32\",\n          \"spawnDist\",\n          \"float32\",\n          \"texScale\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n        ];\n\n        this.ModelStreakAnchorV34 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"color\",\n          \"uint32\",\n          \"falloff\",\n          \"float32\",\n          \"lifetime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"texV\",\n          \"float32\",\n        ];\n\n        this.ModelStreakDataV34 = [\n          \"streaks\",\n          Utils.getArrayReader(this.ModelStreakV34),\n          \"anchors\",\n          Utils.getArrayReader(this.ModelStreakAnchorV34),\n        ];\n\n        this.ModelEffectLightV34 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"farDistance\",\n          \"float32\",\n          \"intensity\",\n          \"float32\",\n          \"nearDistance\",\n          \"float32\",\n        ];\n\n        this.ModelLightDataV34 = [\"effectLights\", Utils.getArrayReader(this.ModelEffectLightV34)];\n\n        this.PackVertexType = [\"fvf\", \"uint32\", \"vertices\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelClothBoneWeightV34 = [\"token\", Utils.getQWordReader(), \"weight\", \"uint8\"];\n\n        this.ModelClothMeshGroupV34 = [\"weights\", Utils.getArrayReader(this.ModelClothBoneWeightV34)];\n\n        this.ModelClothConstraintV34 = [\"vertIndexA\", \"uint16\", \"vertIndexB\", \"uint16\", \"distance\", \"float32\"];\n\n        this.ModelClothObstacleV34 = [\"bone\", Utils.getQWordReader(), \"type\", \"uint8\"];\n\n        this.ModelClothDataV34 = [\n          \"materialIndex\",\n          \"uint32\",\n          \"flags\",\n          \"uint8\",\n          \"gravity\",\n          \"float32\",\n          \"weight\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n          \"rigidness\",\n          \"uint8\",\n          \"mesh\",\n          this.PackVertexType,\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"lockCount\",\n          \"uint16\",\n          \"groups\",\n          Utils.getArrayReader(this.ModelClothMeshGroupV34),\n          \"softLocks\",\n          Utils.getArrayReader(\"uint8\"),\n          \"lod0Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV34),\n          \"lod1Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV34),\n          \"lod1VertexCount\",\n          \"uint16\",\n          \"lod1Indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"barycentricCoords\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"barycentricIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelClothObstacleV34),\n        ];\n\n        this.ModelLightningSystemV34 = [\n          \"boltIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelLightningBoltV34 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"nodeIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"colorBegin\",\n          \"uint32\",\n          \"colorEnd\",\n          \"uint32\",\n          \"colorPeriod\",\n          \"float32\",\n          \"colorFalloff\",\n          [\"[]\", \"float32\", 2],\n          \"flags\",\n          \"uint32\",\n          \"fps\",\n          \"float32\",\n          \"probability\",\n          \"float32\",\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"numSegments\",\n          \"uint16\",\n          \"period\",\n          \"float32\",\n          \"texOffset\",\n          \"float32\",\n          \"texScale\",\n          \"float32\",\n          \"texSpeed\",\n          \"float32\",\n          \"thickness\",\n          \"float32\",\n          \"thicknessPreset\",\n          \"uint8\",\n          \"type\",\n          \"uint8\",\n          \"variance\",\n          \"float32\",\n          \"variancePreset\",\n          \"uint8\",\n          \"noise\",\n          \"float32\",\n        ];\n\n        this.ModelLightningNodeV34 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"childrenIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"flags\",\n          \"uint32\",\n          \"probability\",\n          \"float32\",\n          \"radius\",\n          \"float32\",\n          \"shape\",\n          \"uint8\",\n        ];\n\n        this.ModelLightningDataV34 = [\n          \"systems\",\n          Utils.getArrayReader(this.ModelLightningSystemV34),\n          \"bolts\",\n          Utils.getArrayReader(this.ModelLightningBoltV34),\n          \"nodes\",\n          Utils.getArrayReader(this.ModelLightningNodeV34),\n        ];\n\n        this.ModelBoneConstraintV34 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint16\",\n          \"twistOffset\",\n          \"float32\",\n          \"animBlend\",\n          \"uint8\",\n          \"drag\",\n          \"uint8\",\n          \"ellipseRatio\",\n          \"float32\",\n          \"gravity\",\n          \"uint8\",\n          \"collisionRadius\",\n          \"float32\",\n          \"wind\",\n          \"uint8\",\n          \"angle\",\n          [\"[]\", \"float32\", 2],\n          \"angleStrength\",\n          \"uint8\",\n          \"angleType\",\n          \"uint8\",\n          \"distanceInner\",\n          [\"[]\", \"float32\", 2],\n          \"distanceInnerStrength\",\n          \"uint8\",\n          \"distanceInnerType\",\n          \"uint8\",\n          \"distanceOuter\",\n          [\"[]\", \"float32\", 2],\n          \"distanceOuterStrength\",\n          \"uint8\",\n          \"distanceOuterType\",\n          \"uint8\",\n          \"twist\",\n          [\"[]\", \"float32\", 2],\n          \"twistStrength\",\n          \"uint8\",\n          \"twistType\",\n          \"uint8\",\n        ];\n\n        this.__root = this.ModelFileDataV34 = [\n          \"materials\",\n          Utils.getRefArrayReader(this.ModelMaterialDataV34),\n          \"meshes\",\n          Utils.getRefArrayReader(this.ModelMeshDataV34),\n          \"model\",\n          Utils.getPointerReader(this.ModelModelDataV34),\n          \"properties\",\n          Utils.getArrayReader(this.ModelPropertyDataV34),\n          \"cloudData\",\n          Utils.getPointerReader(this.ModelCloudDataV34),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelObstacleDataV34),\n          \"streakData\",\n          Utils.getPointerReader(this.ModelStreakDataV34),\n          \"lightData\",\n          Utils.getPointerReader(this.ModelLightDataV34),\n          \"clothData\",\n          Utils.getArrayReader(this.ModelClothDataV34),\n          \"actionOffsetNames\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"actionOffsets\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"lodOverride\",\n          [\"[]\", \"float32\", 2],\n          \"soundScript\",\n          Utils.getFileNameReader(),\n          \"lightningData\",\n          Utils.getPointerReader(this.ModelLightningDataV34),\n          \"boneConstraints\",\n          Utils.getArrayReader(this.ModelBoneConstraintV34),\n        ];\n      },\n\n      // => Version: 33\n      33: function () {\n        this.ModelTextureDataV33 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"textureFlags\",\n          \"uint32\",\n          \"token\",\n          Utils.getQWordReader(),\n          \"blitId\",\n          Utils.getQWordReader(),\n          \"uvAnimId\",\n          \"uint32\",\n          \"uvPSInputIndex\",\n          \"uint8\",\n        ];\n\n        this.ModelConstantDataV33 = [\"name\", \"uint32\", \"value\", [\"[]\", \"float32\", 4], \"constantFlags\", \"uint32\"];\n\n        this.ModelMatConstLinkV33 = [\"linkToken\", Utils.getQWordReader(), \"constantToken\", \"uint32\"];\n\n        this.ModelUVTransLinkV33 = [\"linkToken\", Utils.getQWordReader(), \"uvAnimId\", \"uint32\", \"type\", \"uint8\"];\n\n        this.ModelMaterialDataV33 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"materialFlags\",\n          \"uint32\",\n          \"sortOrder\",\n          \"uint32\",\n          \"texCoordCount\",\n          \"uint8\",\n          \"textures\",\n          Utils.getArrayReader(this.ModelTextureDataV33),\n          \"constants\",\n          Utils.getArrayReader(this.ModelConstantDataV33),\n          \"matConstLinks\",\n          Utils.getArrayReader(this.ModelMatConstLinkV33),\n          \"uvTransLinks\",\n          Utils.getArrayReader(this.ModelUVTransLinkV33),\n        ];\n\n        this.ModelMeshLodDataV33 = [\"indices\", Utils.getArrayReader(\"uint16\")];\n\n        this.ModelMeshMorphTargetV33 = [\n          \"positionIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"positions\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"normalIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"normals\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"meshName\",\n          Utils.getStringReader(),\n        ];\n\n        this.PackGrannyMeshType = [\"mesh\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelMeshDataV33 = [\n          \"lods\",\n          Utils.getArrayReader(this.ModelMeshLodDataV33),\n          \"morphTargets\",\n          Utils.getArrayReader(this.ModelMeshMorphTargetV33),\n          \"mesh\",\n          this.PackGrannyMeshType,\n          \"flags\",\n          \"uint32\",\n          \"visBoneIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"seamVertIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"meshName\",\n          Utils.getQWordReader(),\n          \"minBound\",\n          [\"[]\", \"float32\", 3],\n          \"maxBound\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.ModelTransformDataV33 = [\n          \"Flags\",\n          \"uint32\",\n          \"Position\",\n          [\"[]\", \"float32\", 3],\n          \"Orientation\",\n          [\"[]\", \"float32\", 4],\n          \"ScaleShear\",\n          [\"[]\", [\"[]\", \"float32\", 3], 3],\n        ];\n\n        this.ModelBoneDataV33 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"ParentIndex\",\n          \"uint32\",\n          \"LocalTransform\",\n          this.ModelTransformDataV33,\n          \"InverseWorld4x4\",\n          [\"[]\", [\"[]\", \"float32\", 4], 4],\n          \"LODError\",\n          \"float32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n        ];\n\n        this.ModelSkeletonDataV33 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Bones\",\n          Utils.getArrayReader(this.ModelBoneDataV33),\n          \"LODType\",\n          \"uint32\",\n        ];\n\n        this.ModelMeshBindingDataV33 = [\"Mesh\", Utils.getPointerReader(\"uint8\")];\n\n        this.PackGrannyTrackMaskType = [\"trackMask\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelTrackMaskV33 = [\"trackMask\", this.PackGrannyTrackMaskType, \"token\", Utils.getQWordReader()];\n\n        this.ModelModelDataV33 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Skeleton\",\n          Utils.getPointerReader(this.ModelSkeletonDataV33),\n          \"InitialPlacement\",\n          this.ModelTransformDataV33,\n          \"MeshBindings\",\n          Utils.getArrayReader(this.ModelMeshBindingDataV33),\n          \"boneFlags\",\n          Utils.getArrayReader(\"uint32\"),\n          \"emitterBones\",\n          Utils.getArrayReader(\"uint32\"),\n          \"trackMasks\",\n          Utils.getArrayReader(this.ModelTrackMaskV33),\n          \"skeletonHash\",\n          Utils.getArrayReader(\"uint8\"),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"radius\",\n          \"float32\",\n        ];\n\n        this.ModelPropertyDataV33 = [\n          \"id\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint32\",\n          \"mergeIndex\",\n          \"uint32\",\n          \"time\",\n          \"float32\",\n          \"val\",\n          Utils.getQWordReader(),\n          \"strVal\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.ModelParticleCloudV33 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"drag\",\n          \"float32\",\n          \"emitterIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"obstacleIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"velocity\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.ModelParticleCurveV33 = [\"curveType\", \"uint8\", \"keys\", Utils.getArrayReader([\"[]\", \"float32\", 2])];\n\n        this.ModelParticleFlipbookV33 = [\n          \"columns\",\n          \"uint8\",\n          \"count\",\n          \"uint8\",\n          \"fps\",\n          \"float32\",\n          \"rows\",\n          \"uint8\",\n          \"start\",\n          \"uint8\",\n        ];\n\n        this.ModelParticleEmitterV33 = [\n          \"acceleration\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"accelerationDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"accelerationDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"alignmentType\",\n          \"uint8\",\n          \"alignmentDir\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorBegin\",\n          [\"[]\", \"float32\", 4],\n          \"colorEnd\",\n          [\"[]\", \"float32\", 4],\n          \"colorPeriod\",\n          \"float32\",\n          \"colorFalloff\",\n          [\"[]\", \"float32\", 2],\n          \"drag\",\n          \"float32\",\n          \"emitterFlags\",\n          \"uint32\",\n          \"opacityCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV33),\n          \"opacityCurvePreset\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"flipbook\",\n          Utils.getPointerReader(this.ModelParticleFlipbookV33),\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"rotationChange\",\n          [\"[]\", \"float32\", 2],\n          \"rotationDrag\",\n          \"float32\",\n          \"rotationInitial\",\n          [\"[]\", \"float32\", 2],\n          \"scaleChange\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleInitial\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV33),\n          \"scaleCurvePreset\",\n          \"uint32\",\n          \"velocity\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"velocityDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"velocityDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"spawnGroupSize\",\n          [\"[]\", \"float32\", 2],\n          \"spawnPeriod\",\n          \"float32\",\n          \"spawnProbability\",\n          \"float32\",\n          \"spawnRadius\",\n          [\"[]\", \"float32\", 2],\n          \"spawnShape\",\n          \"uint8\",\n          \"spawnWindEmit\",\n          [\"[]\", \"float32\", 2],\n          \"spawnWindSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"texCoordRect\",\n          [\"[]\", \"float32\", 4],\n          \"visBoneIndex\",\n          \"uint32\",\n          \"windInfluence\",\n          \"uint8\",\n        ];\n\n        this.ModelCloudDataV33 = [\n          \"clouds\",\n          Utils.getArrayReader(this.ModelParticleCloudV33),\n          \"emitters\",\n          Utils.getArrayReader(this.ModelParticleEmitterV33),\n        ];\n\n        this.ModelObstacleDataV33 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"dragCoef\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"geoData\",\n          [\"[]\", \"float32\", 3],\n          \"gravityCoef\",\n          \"float32\",\n          \"response\",\n          \"uint8\",\n          \"type\",\n          \"uint8\",\n          \"visBoneIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelStreakV33 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"anchorIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"bone\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"jitter\",\n          \"float32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"noise\",\n          \"float32\",\n          \"spawnDist\",\n          \"float32\",\n          \"texScale\",\n          \"float32\",\n          \"visBoneIndex\",\n          \"uint32\",\n          \"wind\",\n          \"float32\",\n        ];\n\n        this.ModelStreakAnchorV33 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"color\",\n          \"uint32\",\n          \"falloff\",\n          \"float32\",\n          \"lifetime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"texV\",\n          \"float32\",\n        ];\n\n        this.ModelStreakDataV33 = [\n          \"streaks\",\n          Utils.getArrayReader(this.ModelStreakV33),\n          \"anchors\",\n          Utils.getArrayReader(this.ModelStreakAnchorV33),\n        ];\n\n        this.ModelEffectLightV33 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"farDistance\",\n          \"float32\",\n          \"intensity\",\n          \"float32\",\n          \"nearDistance\",\n          \"float32\",\n          \"visBoneIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelLightDataV33 = [\"effectLights\", Utils.getArrayReader(this.ModelEffectLightV33)];\n\n        this.PackVertexType = [\"fvf\", \"uint32\", \"vertices\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelClothBoneWeightV33 = [\"token\", Utils.getQWordReader(), \"weight\", \"uint8\"];\n\n        this.ModelClothMeshGroupV33 = [\"weights\", Utils.getArrayReader(this.ModelClothBoneWeightV33)];\n\n        this.ModelClothConstraintV33 = [\"vertIndexA\", \"uint16\", \"vertIndexB\", \"uint16\", \"distance\", \"float32\"];\n\n        this.ModelClothObstacleV33 = [\"bone\", Utils.getQWordReader(), \"type\", \"uint8\"];\n\n        this.ModelClothDataV33 = [\n          \"materialIndex\",\n          \"uint32\",\n          \"flags\",\n          \"uint8\",\n          \"gravity\",\n          \"float32\",\n          \"weight\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n          \"rigidness\",\n          \"uint8\",\n          \"mesh\",\n          this.PackVertexType,\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"lockCount\",\n          \"uint16\",\n          \"groups\",\n          Utils.getArrayReader(this.ModelClothMeshGroupV33),\n          \"softLocks\",\n          Utils.getArrayReader(\"uint8\"),\n          \"lod0Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV33),\n          \"lod1Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV33),\n          \"lod1VertexCount\",\n          \"uint16\",\n          \"lod1Indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"barycentricCoords\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"barycentricIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelClothObstacleV33),\n        ];\n\n        this.ModelLightningSystemV33 = [\n          \"boltIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelLightningBoltV33 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"nodeIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"colorBegin\",\n          \"uint32\",\n          \"colorEnd\",\n          \"uint32\",\n          \"colorPeriod\",\n          \"float32\",\n          \"colorFalloff\",\n          [\"[]\", \"float32\", 2],\n          \"flags\",\n          \"uint32\",\n          \"fps\",\n          \"float32\",\n          \"probability\",\n          \"float32\",\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"numSegments\",\n          \"uint16\",\n          \"period\",\n          \"float32\",\n          \"texOffset\",\n          \"float32\",\n          \"texScale\",\n          \"float32\",\n          \"texSpeed\",\n          \"float32\",\n          \"thickness\",\n          \"float32\",\n          \"thicknessPreset\",\n          \"uint8\",\n          \"type\",\n          \"uint8\",\n          \"variance\",\n          \"float32\",\n          \"variancePreset\",\n          \"uint8\",\n          \"noise\",\n          \"float32\",\n        ];\n\n        this.ModelLightningNodeV33 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"childrenIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"flags\",\n          \"uint32\",\n          \"probability\",\n          \"float32\",\n          \"radius\",\n          \"float32\",\n          \"shape\",\n          \"uint8\",\n          \"visBoneIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelLightningDataV33 = [\n          \"systems\",\n          Utils.getArrayReader(this.ModelLightningSystemV33),\n          \"bolts\",\n          Utils.getArrayReader(this.ModelLightningBoltV33),\n          \"nodes\",\n          Utils.getArrayReader(this.ModelLightningNodeV33),\n        ];\n\n        this.ModelBoneConstraintV33 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint16\",\n          \"twistOffset\",\n          \"float32\",\n          \"animBlend\",\n          \"uint8\",\n          \"drag\",\n          \"uint8\",\n          \"ellipseRatio\",\n          \"float32\",\n          \"gravity\",\n          \"uint8\",\n          \"collisionRadius\",\n          \"float32\",\n          \"wind\",\n          \"uint8\",\n          \"angle\",\n          [\"[]\", \"float32\", 2],\n          \"angleStrength\",\n          \"uint8\",\n          \"angleType\",\n          \"uint8\",\n          \"distanceInner\",\n          [\"[]\", \"float32\", 2],\n          \"distanceInnerStrength\",\n          \"uint8\",\n          \"distanceInnerType\",\n          \"uint8\",\n          \"distanceOuter\",\n          [\"[]\", \"float32\", 2],\n          \"distanceOuterStrength\",\n          \"uint8\",\n          \"distanceOuterType\",\n          \"uint8\",\n          \"twist\",\n          [\"[]\", \"float32\", 2],\n          \"twistStrength\",\n          \"uint8\",\n          \"twistType\",\n          \"uint8\",\n        ];\n\n        this.__root = this.ModelFileDataV33 = [\n          \"materials\",\n          Utils.getRefArrayReader(this.ModelMaterialDataV33),\n          \"meshes\",\n          Utils.getRefArrayReader(this.ModelMeshDataV33),\n          \"model\",\n          Utils.getPointerReader(this.ModelModelDataV33),\n          \"properties\",\n          Utils.getArrayReader(this.ModelPropertyDataV33),\n          \"cloudData\",\n          Utils.getPointerReader(this.ModelCloudDataV33),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelObstacleDataV33),\n          \"streakData\",\n          Utils.getPointerReader(this.ModelStreakDataV33),\n          \"lightData\",\n          Utils.getPointerReader(this.ModelLightDataV33),\n          \"clothData\",\n          Utils.getArrayReader(this.ModelClothDataV33),\n          \"actionOffsetNames\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"actionOffsets\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"lodOverride\",\n          [\"[]\", \"float32\", 2],\n          \"soundScript\",\n          Utils.getFileNameReader(),\n          \"lightningData\",\n          Utils.getPointerReader(this.ModelLightningDataV33),\n          \"boneConstraints\",\n          Utils.getArrayReader(this.ModelBoneConstraintV33),\n        ];\n      },\n\n      // => Version: 32\n      32: function () {\n        this.ModelTextureDataV32 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"textureFlags\",\n          \"uint32\",\n          \"token\",\n          Utils.getQWordReader(),\n          \"blitId\",\n          Utils.getQWordReader(),\n          \"uvAnimId\",\n          \"uint32\",\n          \"uvPSInputIndex\",\n          \"uint8\",\n        ];\n\n        this.ModelConstantDataV32 = [\"name\", \"uint32\", \"value\", [\"[]\", \"float32\", 4], \"constantFlags\", \"uint32\"];\n\n        this.ModelMatConstLinkV32 = [\"linkToken\", Utils.getQWordReader(), \"constantToken\", \"uint32\"];\n\n        this.ModelUVTransLinkV32 = [\"linkToken\", Utils.getQWordReader(), \"uvAnimId\", \"uint32\", \"type\", \"uint8\"];\n\n        this.ModelMaterialDataV32 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"materialFlags\",\n          \"uint32\",\n          \"sortOrder\",\n          \"uint32\",\n          \"texCoordCount\",\n          \"uint8\",\n          \"textures\",\n          Utils.getArrayReader(this.ModelTextureDataV32),\n          \"constants\",\n          Utils.getArrayReader(this.ModelConstantDataV32),\n          \"matConstLinks\",\n          Utils.getArrayReader(this.ModelMatConstLinkV32),\n          \"uvTransLinks\",\n          Utils.getArrayReader(this.ModelUVTransLinkV32),\n        ];\n\n        this.ModelMeshLodDataV32 = [\"indices\", Utils.getArrayReader(\"uint16\")];\n\n        this.ModelMeshMorphTargetV32 = [\n          \"positionIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"positions\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"normalIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"normals\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"meshName\",\n          Utils.getStringReader(),\n        ];\n\n        this.PackGrannyMeshType = [\"mesh\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelMeshDataV32 = [\n          \"lods\",\n          Utils.getArrayReader(this.ModelMeshLodDataV32),\n          \"morphTargets\",\n          Utils.getArrayReader(this.ModelMeshMorphTargetV32),\n          \"mesh\",\n          this.PackGrannyMeshType,\n          \"flags\",\n          \"uint32\",\n          \"visBoneIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"seamVertIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"meshName\",\n          Utils.getQWordReader(),\n          \"minBound\",\n          [\"[]\", \"float32\", 3],\n          \"maxBound\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.ModelTransformDataV32 = [\n          \"Flags\",\n          \"uint32\",\n          \"Position\",\n          [\"[]\", \"float32\", 3],\n          \"Orientation\",\n          [\"[]\", \"float32\", 4],\n          \"ScaleShear\",\n          [\"[]\", [\"[]\", \"float32\", 3], 3],\n        ];\n\n        this.ModelBoneDataV32 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"ParentIndex\",\n          \"uint32\",\n          \"LocalTransform\",\n          this.ModelTransformDataV32,\n          \"InverseWorld4x4\",\n          [\"[]\", [\"[]\", \"float32\", 4], 4],\n          \"LODError\",\n          \"float32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n        ];\n\n        this.ModelSkeletonDataV32 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Bones\",\n          Utils.getArrayReader(this.ModelBoneDataV32),\n          \"LODType\",\n          \"uint32\",\n        ];\n\n        this.ModelMeshBindingDataV32 = [\"Mesh\", Utils.getPointerReader(\"uint8\")];\n\n        this.PackGrannyTrackMaskType = [\"trackMask\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelTrackMaskV32 = [\"trackMask\", this.PackGrannyTrackMaskType, \"token\", Utils.getQWordReader()];\n\n        this.ModelModelDataV32 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Skeleton\",\n          Utils.getPointerReader(this.ModelSkeletonDataV32),\n          \"InitialPlacement\",\n          this.ModelTransformDataV32,\n          \"MeshBindings\",\n          Utils.getArrayReader(this.ModelMeshBindingDataV32),\n          \"boneFlags\",\n          Utils.getArrayReader(\"uint32\"),\n          \"emitterBones\",\n          Utils.getArrayReader(\"uint32\"),\n          \"trackMasks\",\n          Utils.getArrayReader(this.ModelTrackMaskV32),\n          \"skeletonHash\",\n          Utils.getArrayReader(\"uint8\"),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"radius\",\n          \"float32\",\n        ];\n\n        this.ModelPropertyDataV32 = [\n          \"id\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint32\",\n          \"mergeIndex\",\n          \"uint32\",\n          \"time\",\n          \"float32\",\n          \"val\",\n          Utils.getQWordReader(),\n          \"strVal\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.ModelParticleCloudV32 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"drag\",\n          \"float32\",\n          \"emitterIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"obstacleIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"velocity\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.ModelParticleCurveV32 = [\"curveType\", \"uint8\", \"keys\", Utils.getArrayReader([\"[]\", \"float32\", 2])];\n\n        this.ModelParticleFlipbookV32 = [\n          \"columns\",\n          \"uint8\",\n          \"count\",\n          \"uint8\",\n          \"fps\",\n          \"float32\",\n          \"rows\",\n          \"uint8\",\n          \"start\",\n          \"uint8\",\n        ];\n\n        this.ModelParticleEmitterV32 = [\n          \"acceleration\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"accelerationDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"accelerationDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"alignmentType\",\n          \"uint8\",\n          \"alignmentDir\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorBegin\",\n          [\"[]\", \"float32\", 4],\n          \"colorEnd\",\n          [\"[]\", \"float32\", 4],\n          \"colorPeriod\",\n          \"float32\",\n          \"colorFalloff\",\n          [\"[]\", \"float32\", 2],\n          \"drag\",\n          \"float32\",\n          \"emitterFlags\",\n          \"uint32\",\n          \"opacityCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV32),\n          \"opacityCurvePreset\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"flipbook\",\n          Utils.getPointerReader(this.ModelParticleFlipbookV32),\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"rotationChange\",\n          [\"[]\", \"float32\", 2],\n          \"rotationDrag\",\n          \"float32\",\n          \"rotationInitial\",\n          [\"[]\", \"float32\", 2],\n          \"scaleChange\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleInitial\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV32),\n          \"scaleCurvePreset\",\n          \"uint32\",\n          \"velocity\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"velocityDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"velocityDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"spawnGroupSize\",\n          [\"[]\", \"float32\", 2],\n          \"spawnPeriod\",\n          \"float32\",\n          \"spawnProbability\",\n          \"float32\",\n          \"spawnRadius\",\n          [\"[]\", \"float32\", 2],\n          \"spawnShape\",\n          \"uint8\",\n          \"spawnWindEmit\",\n          [\"[]\", \"float32\", 2],\n          \"spawnWindSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"texCoordRect\",\n          [\"[]\", \"float32\", 4],\n          \"visBoneIndex\",\n          \"uint32\",\n          \"windInfluence\",\n          \"uint8\",\n        ];\n\n        this.ModelCloudDataV32 = [\n          \"clouds\",\n          Utils.getArrayReader(this.ModelParticleCloudV32),\n          \"emitters\",\n          Utils.getArrayReader(this.ModelParticleEmitterV32),\n        ];\n\n        this.ModelObstacleDataV32 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"dragCoef\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"geoData\",\n          [\"[]\", \"float32\", 3],\n          \"gravityCoef\",\n          \"float32\",\n          \"response\",\n          \"uint8\",\n          \"type\",\n          \"uint8\",\n          \"visBoneIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelStreakV32 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"anchorIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"bone\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"jitter\",\n          \"float32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"noise\",\n          \"float32\",\n          \"spawnDist\",\n          \"float32\",\n          \"texScale\",\n          \"float32\",\n          \"visBoneIndex\",\n          \"uint32\",\n          \"wind\",\n          \"float32\",\n        ];\n\n        this.ModelStreakAnchorV32 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"color\",\n          \"uint32\",\n          \"falloff\",\n          \"float32\",\n          \"lifetime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"texV\",\n          \"float32\",\n        ];\n\n        this.ModelStreakDataV32 = [\n          \"streaks\",\n          Utils.getArrayReader(this.ModelStreakV32),\n          \"anchors\",\n          Utils.getArrayReader(this.ModelStreakAnchorV32),\n        ];\n\n        this.ModelEffectLightV32 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"farDistance\",\n          \"float32\",\n          \"intensity\",\n          \"float32\",\n          \"nearDistance\",\n          \"float32\",\n          \"visBoneIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelLightDataV32 = [\"effectLights\", Utils.getArrayReader(this.ModelEffectLightV32)];\n\n        this.PackVertexType = [\"fvf\", \"uint32\", \"vertices\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelClothBoneWeightV32 = [\"token\", Utils.getQWordReader(), \"weight\", \"uint8\"];\n\n        this.ModelClothMeshGroupV32 = [\"weights\", Utils.getArrayReader(this.ModelClothBoneWeightV32)];\n\n        this.ModelClothConstraintV32 = [\"vertIndexA\", \"uint16\", \"vertIndexB\", \"uint16\", \"distance\", \"float32\"];\n\n        this.ModelClothObstacleV32 = [\"bone\", Utils.getQWordReader(), \"type\", \"uint8\"];\n\n        this.ModelClothDataV32 = [\n          \"materialIndex\",\n          \"uint32\",\n          \"flags\",\n          \"uint8\",\n          \"gravity\",\n          \"float32\",\n          \"weight\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n          \"rigidness\",\n          \"uint8\",\n          \"mesh\",\n          this.PackVertexType,\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"lockCount\",\n          \"uint16\",\n          \"groups\",\n          Utils.getArrayReader(this.ModelClothMeshGroupV32),\n          \"softLocks\",\n          Utils.getArrayReader(\"uint8\"),\n          \"lod0Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV32),\n          \"lod1Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV32),\n          \"lod1VertexCount\",\n          \"uint16\",\n          \"lod1Indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"barycentricCoords\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"barycentricIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelClothObstacleV32),\n        ];\n\n        this.ModelLightningSystemV32 = [\n          \"boltIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelLightningBoltV32 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"nodeIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"colorBegin\",\n          \"uint32\",\n          \"colorEnd\",\n          \"uint32\",\n          \"colorPeriod\",\n          \"float32\",\n          \"colorFalloff\",\n          [\"[]\", \"float32\", 2],\n          \"flags\",\n          \"uint32\",\n          \"fps\",\n          \"float32\",\n          \"probability\",\n          \"float32\",\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"numSegments\",\n          \"uint16\",\n          \"period\",\n          \"float32\",\n          \"texOffset\",\n          \"float32\",\n          \"texScale\",\n          \"float32\",\n          \"texSpeed\",\n          \"float32\",\n          \"thickness\",\n          \"float32\",\n          \"thicknessPreset\",\n          \"uint8\",\n          \"type\",\n          \"uint8\",\n          \"variance\",\n          \"float32\",\n          \"variancePreset\",\n          \"uint8\",\n          \"noise\",\n          \"float32\",\n        ];\n\n        this.ModelLightningNodeV32 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"childrenIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"flags\",\n          \"uint32\",\n          \"probability\",\n          \"float32\",\n          \"radius\",\n          \"float32\",\n          \"shape\",\n          \"uint8\",\n          \"visBoneIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelLightningDataV32 = [\n          \"systems\",\n          Utils.getArrayReader(this.ModelLightningSystemV32),\n          \"bolts\",\n          Utils.getArrayReader(this.ModelLightningBoltV32),\n          \"nodes\",\n          Utils.getArrayReader(this.ModelLightningNodeV32),\n        ];\n\n        this.__root = this.ModelFileDataV32 = [\n          \"materials\",\n          Utils.getRefArrayReader(this.ModelMaterialDataV32),\n          \"meshes\",\n          Utils.getRefArrayReader(this.ModelMeshDataV32),\n          \"model\",\n          Utils.getPointerReader(this.ModelModelDataV32),\n          \"properties\",\n          Utils.getArrayReader(this.ModelPropertyDataV32),\n          \"cloudData\",\n          Utils.getPointerReader(this.ModelCloudDataV32),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelObstacleDataV32),\n          \"streakData\",\n          Utils.getPointerReader(this.ModelStreakDataV32),\n          \"lightData\",\n          Utils.getPointerReader(this.ModelLightDataV32),\n          \"clothData\",\n          Utils.getArrayReader(this.ModelClothDataV32),\n          \"actionOffsetNames\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"actionOffsets\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"lodOverride\",\n          [\"[]\", \"float32\", 2],\n          \"soundScript\",\n          Utils.getFileNameReader(),\n          \"lightningData\",\n          Utils.getPointerReader(this.ModelLightningDataV32),\n        ];\n      },\n\n      // => Version: 31\n      31: function () {\n        this.ModelTextureDataV31 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"textureFlags\",\n          \"uint32\",\n          \"token\",\n          Utils.getQWordReader(),\n          \"blitId\",\n          Utils.getQWordReader(),\n          \"uvAnimId\",\n          \"uint32\",\n          \"uvPSInputIndex\",\n          \"uint8\",\n        ];\n\n        this.ModelConstantDataV31 = [\"name\", \"uint32\", \"value\", [\"[]\", \"float32\", 4], \"constantFlags\", \"uint32\"];\n\n        this.ModelMatConstLinkV31 = [\"linkToken\", Utils.getQWordReader(), \"constantToken\", \"uint32\"];\n\n        this.ModelUVTransLinkV31 = [\"linkToken\", Utils.getQWordReader(), \"uvAnimId\", \"uint32\", \"type\", \"uint8\"];\n\n        this.ModelMaterialDataV31 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"materialFlags\",\n          \"uint32\",\n          \"sortOrder\",\n          \"uint32\",\n          \"texCoordCount\",\n          \"uint8\",\n          \"textures\",\n          Utils.getArrayReader(this.ModelTextureDataV31),\n          \"constants\",\n          Utils.getArrayReader(this.ModelConstantDataV31),\n          \"matConstLinks\",\n          Utils.getArrayReader(this.ModelMatConstLinkV31),\n          \"uvTransLinks\",\n          Utils.getArrayReader(this.ModelUVTransLinkV31),\n        ];\n\n        this.ModelMeshLodDataV31 = [\"indices\", Utils.getArrayReader(\"uint16\")];\n\n        this.ModelMeshMorphTargetV31 = [\n          \"positionIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"positions\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"normalIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"normals\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"meshName\",\n          Utils.getStringReader(),\n        ];\n\n        this.PackGrannyMeshType = [\"mesh\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelMeshDataV31 = [\n          \"lods\",\n          Utils.getArrayReader(this.ModelMeshLodDataV31),\n          \"morphTargets\",\n          Utils.getArrayReader(this.ModelMeshMorphTargetV31),\n          \"mesh\",\n          this.PackGrannyMeshType,\n          \"flags\",\n          \"uint32\",\n          \"visBoneIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"seamVertIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"meshName\",\n          Utils.getQWordReader(),\n          \"minBound\",\n          [\"[]\", \"float32\", 3],\n          \"maxBound\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.ModelTransformDataV31 = [\n          \"Flags\",\n          \"uint32\",\n          \"Position\",\n          [\"[]\", \"float32\", 3],\n          \"Orientation\",\n          [\"[]\", \"float32\", 4],\n          \"ScaleShear\",\n          [\"[]\", [\"[]\", \"float32\", 3], 3],\n        ];\n\n        this.ModelBoneDataV31 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"ParentIndex\",\n          \"uint32\",\n          \"LocalTransform\",\n          this.ModelTransformDataV31,\n          \"InverseWorld4x4\",\n          [\"[]\", [\"[]\", \"float32\", 4], 4],\n          \"LODError\",\n          \"float32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n        ];\n\n        this.ModelSkeletonDataV31 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Bones\",\n          Utils.getArrayReader(this.ModelBoneDataV31),\n          \"LODType\",\n          \"uint32\",\n        ];\n\n        this.ModelMeshBindingDataV31 = [\"Mesh\", Utils.getPointerReader(\"uint8\")];\n\n        this.PackGrannyTrackMaskType = [\"trackMask\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelTrackMaskV31 = [\"trackMask\", this.PackGrannyTrackMaskType, \"token\", Utils.getQWordReader()];\n\n        this.ModelModelDataV31 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Skeleton\",\n          Utils.getPointerReader(this.ModelSkeletonDataV31),\n          \"InitialPlacement\",\n          this.ModelTransformDataV31,\n          \"MeshBindings\",\n          Utils.getArrayReader(this.ModelMeshBindingDataV31),\n          \"boneFlags\",\n          Utils.getArrayReader(\"uint32\"),\n          \"emitterBones\",\n          Utils.getArrayReader(\"uint32\"),\n          \"trackMasks\",\n          Utils.getArrayReader(this.ModelTrackMaskV31),\n          \"skeletonHash\",\n          Utils.getArrayReader(\"uint8\"),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"radius\",\n          \"float32\",\n        ];\n\n        this.ModelPropertyDataV31 = [\n          \"id\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint32\",\n          \"mergeIndex\",\n          \"uint32\",\n          \"time\",\n          \"float32\",\n          \"val\",\n          Utils.getQWordReader(),\n          \"strVal\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.ModelParticleCloudV31 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"drag\",\n          \"float32\",\n          \"emitterIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"obstacleIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"velocity\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.ModelParticleCurveV31 = [\"curveType\", \"uint8\", \"keys\", Utils.getArrayReader([\"[]\", \"float32\", 2])];\n\n        this.ModelParticleFlipbookV31 = [\n          \"columns\",\n          \"uint8\",\n          \"count\",\n          \"uint8\",\n          \"fps\",\n          \"float32\",\n          \"rows\",\n          \"uint8\",\n          \"start\",\n          \"uint8\",\n        ];\n\n        this.ModelParticleEmitterV31 = [\n          \"acceleration\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"accelerationDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"accelerationDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"alignmentType\",\n          \"uint8\",\n          \"alignmentDir\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorBegin\",\n          [\"[]\", \"float32\", 4],\n          \"colorEnd\",\n          [\"[]\", \"float32\", 4],\n          \"colorPeriod\",\n          \"float32\",\n          \"colorFalloff\",\n          [\"[]\", \"float32\", 2],\n          \"drag\",\n          \"float32\",\n          \"emitterFlags\",\n          \"uint32\",\n          \"opacityCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV31),\n          \"opacityCurvePreset\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"flipbook\",\n          Utils.getPointerReader(this.ModelParticleFlipbookV31),\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"rotationChange\",\n          [\"[]\", \"float32\", 2],\n          \"rotationDrag\",\n          \"float32\",\n          \"rotationInitial\",\n          [\"[]\", \"float32\", 2],\n          \"scaleChange\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleInitial\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV31),\n          \"scaleCurvePreset\",\n          \"uint32\",\n          \"velocity\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"velocityDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"velocityDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"spawnGroupSize\",\n          [\"[]\", \"float32\", 2],\n          \"spawnPeriod\",\n          \"float32\",\n          \"spawnProbability\",\n          \"float32\",\n          \"spawnRadius\",\n          [\"[]\", \"float32\", 2],\n          \"spawnShape\",\n          \"uint8\",\n          \"spawnWindEmit\",\n          [\"[]\", \"float32\", 2],\n          \"spawnWindSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"texCoordRect\",\n          [\"[]\", \"float32\", 4],\n          \"visBoneIndex\",\n          \"uint32\",\n          \"windInfluence\",\n          \"uint8\",\n        ];\n\n        this.ModelCloudDataV31 = [\n          \"clouds\",\n          Utils.getArrayReader(this.ModelParticleCloudV31),\n          \"emitters\",\n          Utils.getArrayReader(this.ModelParticleEmitterV31),\n        ];\n\n        this.ModelObstacleDataV31 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"dragCoef\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"geoData\",\n          [\"[]\", \"float32\", 3],\n          \"gravityCoef\",\n          \"float32\",\n          \"response\",\n          \"uint8\",\n          \"type\",\n          \"uint8\",\n          \"visBoneIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelStreakV31 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"anchorIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"bone\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"jitter\",\n          \"float32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"noise\",\n          \"float32\",\n          \"spawnDist\",\n          \"float32\",\n          \"texScale\",\n          \"float32\",\n          \"visBoneIndex\",\n          \"uint32\",\n          \"wind\",\n          \"float32\",\n        ];\n\n        this.ModelStreakAnchorV31 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"color\",\n          \"uint32\",\n          \"falloff\",\n          \"float32\",\n          \"lifetime\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"texV\",\n          \"float32\",\n        ];\n\n        this.ModelStreakDataV31 = [\n          \"streaks\",\n          Utils.getArrayReader(this.ModelStreakV31),\n          \"anchors\",\n          Utils.getArrayReader(this.ModelStreakAnchorV31),\n        ];\n\n        this.ModelEffectLightV31 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"farDistance\",\n          \"float32\",\n          \"intensity\",\n          \"float32\",\n          \"nearDistance\",\n          \"float32\",\n          \"visBoneIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelLightDataV31 = [\"effectLights\", Utils.getArrayReader(this.ModelEffectLightV31)];\n\n        this.PackVertexType = [\"fvf\", \"uint32\", \"vertices\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelClothBoneWeightV31 = [\"token\", Utils.getQWordReader(), \"weight\", \"uint8\"];\n\n        this.ModelClothMeshGroupV31 = [\"weights\", Utils.getArrayReader(this.ModelClothBoneWeightV31)];\n\n        this.ModelClothConstraintV31 = [\"vertIndexA\", \"uint16\", \"vertIndexB\", \"uint16\", \"distance\", \"float32\"];\n\n        this.ModelClothObstacleV31 = [\"bone\", Utils.getQWordReader(), \"type\", \"uint8\"];\n\n        this.ModelClothDataV31 = [\n          \"materialIndex\",\n          \"uint32\",\n          \"flags\",\n          \"uint8\",\n          \"gravity\",\n          \"float32\",\n          \"weight\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n          \"rigidness\",\n          \"uint8\",\n          \"mesh\",\n          this.PackVertexType,\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"lockCount\",\n          \"uint16\",\n          \"groups\",\n          Utils.getArrayReader(this.ModelClothMeshGroupV31),\n          \"softLocks\",\n          Utils.getArrayReader(\"uint8\"),\n          \"lod0Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV31),\n          \"lod1Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV31),\n          \"lod1VertexCount\",\n          \"uint16\",\n          \"lod1Indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"barycentricCoords\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"barycentricIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelClothObstacleV31),\n        ];\n\n        this.__root = this.ModelFileDataV31 = [\n          \"materials\",\n          Utils.getRefArrayReader(this.ModelMaterialDataV31),\n          \"meshes\",\n          Utils.getRefArrayReader(this.ModelMeshDataV31),\n          \"model\",\n          Utils.getPointerReader(this.ModelModelDataV31),\n          \"properties\",\n          Utils.getArrayReader(this.ModelPropertyDataV31),\n          \"cloudData\",\n          Utils.getPointerReader(this.ModelCloudDataV31),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelObstacleDataV31),\n          \"streakData\",\n          Utils.getPointerReader(this.ModelStreakDataV31),\n          \"lightData\",\n          Utils.getPointerReader(this.ModelLightDataV31),\n          \"clothData\",\n          Utils.getArrayReader(this.ModelClothDataV31),\n          \"actionOffsetNames\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"actionOffsets\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"lodOverride\",\n          [\"[]\", \"float32\", 2],\n          \"soundScript\",\n          Utils.getFileNameReader(),\n        ];\n      },\n\n      // => Version: 30\n      30: function () {\n        this.ModelTextureDataV30 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"textureFlags\",\n          \"uint32\",\n          \"token\",\n          Utils.getQWordReader(),\n          \"blitId\",\n          Utils.getQWordReader(),\n          \"uvAnimId\",\n          \"uint32\",\n          \"uvPSInputIndex\",\n          \"uint8\",\n        ];\n\n        this.ModelConstantDataV30 = [\"name\", \"uint32\", \"value\", [\"[]\", \"float32\", 4], \"constantFlags\", \"uint32\"];\n\n        this.ModelMatConstLinkV30 = [\"linkToken\", Utils.getQWordReader(), \"constantToken\", \"uint32\"];\n\n        this.ModelUVTransLinkV30 = [\"linkToken\", Utils.getQWordReader(), \"uvAnimId\", \"uint32\", \"type\", \"uint8\"];\n\n        this.ModelMaterialDataV30 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"materialFlags\",\n          \"uint32\",\n          \"sortOrder\",\n          \"uint32\",\n          \"texCoordCount\",\n          \"uint8\",\n          \"textures\",\n          Utils.getArrayReader(this.ModelTextureDataV30),\n          \"constants\",\n          Utils.getArrayReader(this.ModelConstantDataV30),\n          \"matConstLinks\",\n          Utils.getArrayReader(this.ModelMatConstLinkV30),\n          \"uvTransLinks\",\n          Utils.getArrayReader(this.ModelUVTransLinkV30),\n        ];\n\n        this.ModelMeshLodDataV30 = [\"indices\", Utils.getArrayReader(\"uint16\")];\n\n        this.ModelMeshMorphTargetV30 = [\n          \"positionIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"positions\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"normalIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"normals\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"meshName\",\n          Utils.getStringReader(),\n        ];\n\n        this.PackGrannyMeshType = [\"mesh\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelMeshDataV30 = [\n          \"lods\",\n          Utils.getArrayReader(this.ModelMeshLodDataV30),\n          \"morphTargets\",\n          Utils.getArrayReader(this.ModelMeshMorphTargetV30),\n          \"mesh\",\n          this.PackGrannyMeshType,\n          \"flags\",\n          \"uint32\",\n          \"visBoneIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"seamVertIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"meshName\",\n          Utils.getQWordReader(),\n          \"minBound\",\n          [\"[]\", \"float32\", 3],\n          \"maxBound\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.ModelTransformDataV30 = [\n          \"Flags\",\n          \"uint32\",\n          \"Position\",\n          [\"[]\", \"float32\", 3],\n          \"Orientation\",\n          [\"[]\", \"float32\", 4],\n          \"ScaleShear\",\n          [\"[]\", [\"[]\", \"float32\", 3], 3],\n        ];\n\n        this.ModelBoneDataV30 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"ParentIndex\",\n          \"uint32\",\n          \"LocalTransform\",\n          this.ModelTransformDataV30,\n          \"InverseWorld4x4\",\n          [\"[]\", [\"[]\", \"float32\", 4], 4],\n          \"LODError\",\n          \"float32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n        ];\n\n        this.ModelSkeletonDataV30 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Bones\",\n          Utils.getArrayReader(this.ModelBoneDataV30),\n          \"LODType\",\n          \"uint32\",\n        ];\n\n        this.ModelMeshBindingDataV30 = [\"Mesh\", Utils.getPointerReader(\"uint8\")];\n\n        this.PackGrannyTrackMaskType = [\"trackMask\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelTrackMaskV30 = [\"trackMask\", this.PackGrannyTrackMaskType, \"token\", Utils.getQWordReader()];\n\n        this.ModelModelDataV30 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Skeleton\",\n          Utils.getPointerReader(this.ModelSkeletonDataV30),\n          \"InitialPlacement\",\n          this.ModelTransformDataV30,\n          \"MeshBindings\",\n          Utils.getArrayReader(this.ModelMeshBindingDataV30),\n          \"boneFlags\",\n          Utils.getArrayReader(\"uint32\"),\n          \"emitterBones\",\n          Utils.getArrayReader(\"uint32\"),\n          \"trackMasks\",\n          Utils.getArrayReader(this.ModelTrackMaskV30),\n          \"skeletonHash\",\n          Utils.getArrayReader(\"uint8\"),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"radius\",\n          \"float32\",\n        ];\n\n        this.ModelPropertyDataV30 = [\n          \"id\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint32\",\n          \"mergeIndex\",\n          \"uint32\",\n          \"time\",\n          \"float32\",\n          \"val\",\n          Utils.getQWordReader(),\n          \"strVal\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.ModelParticleCloudV30 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"drag\",\n          \"float32\",\n          \"emitterIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"obstacleIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"velocity\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.ModelParticleCurveV30 = [\"curveType\", \"uint8\", \"keys\", Utils.getArrayReader([\"[]\", \"float32\", 2])];\n\n        this.ModelParticleFlipbookV30 = [\n          \"columns\",\n          \"uint8\",\n          \"count\",\n          \"uint8\",\n          \"fps\",\n          \"float32\",\n          \"rows\",\n          \"uint8\",\n          \"start\",\n          \"uint8\",\n        ];\n\n        this.ModelParticleEmitterV30 = [\n          \"acceleration\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"accelerationDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"accelerationDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"alignmentType\",\n          \"uint8\",\n          \"alignmentDir\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorBegin\",\n          [\"[]\", \"float32\", 4],\n          \"colorEnd\",\n          [\"[]\", \"float32\", 4],\n          \"colorPeriod\",\n          \"float32\",\n          \"colorFalloff\",\n          [\"[]\", \"float32\", 2],\n          \"drag\",\n          \"float32\",\n          \"emitterFlags\",\n          \"uint32\",\n          \"opacityCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV30),\n          \"opacityCurvePreset\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"flipbook\",\n          Utils.getPointerReader(this.ModelParticleFlipbookV30),\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"rotationChange\",\n          [\"[]\", \"float32\", 2],\n          \"rotationDrag\",\n          \"float32\",\n          \"rotationInitial\",\n          [\"[]\", \"float32\", 2],\n          \"scaleChange\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleInitial\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV30),\n          \"scaleCurvePreset\",\n          \"uint32\",\n          \"velocity\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"velocityDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"velocityDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"spawnGroupSize\",\n          [\"[]\", \"float32\", 2],\n          \"spawnPeriod\",\n          \"float32\",\n          \"spawnProbability\",\n          \"float32\",\n          \"spawnRadius\",\n          [\"[]\", \"float32\", 2],\n          \"spawnShape\",\n          \"uint8\",\n          \"spawnWindEmit\",\n          [\"[]\", \"float32\", 2],\n          \"spawnWindSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"texCoordRect\",\n          [\"[]\", \"float32\", 4],\n          \"visBoneIndex\",\n          \"uint32\",\n          \"windInfluence\",\n          \"uint8\",\n        ];\n\n        this.ModelCloudDataV30 = [\n          \"clouds\",\n          Utils.getArrayReader(this.ModelParticleCloudV30),\n          \"emitters\",\n          Utils.getArrayReader(this.ModelParticleEmitterV30),\n        ];\n\n        this.ModelObstacleDataV30 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"dragCoef\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"geoData\",\n          [\"[]\", \"float32\", 3],\n          \"gravityCoef\",\n          \"float32\",\n          \"response\",\n          \"uint8\",\n          \"type\",\n          \"uint8\",\n          \"visBoneIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelStreakV30 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"anchorIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"bone\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"jitter\",\n          \"float32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"noise\",\n          \"float32\",\n          \"spawnDist\",\n          \"float32\",\n          \"stretchDist\",\n          \"float32\",\n          \"texScale\",\n          \"float32\",\n          \"visBoneIndex\",\n          \"uint32\",\n          \"wind\",\n          \"float32\",\n        ];\n\n        this.ModelStreakAnchorV30 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"color\",\n          \"uint32\",\n          \"falloff\",\n          \"float32\",\n          \"lifetime\",\n          \"float32\",\n        ];\n\n        this.ModelStreakDataV30 = [\n          \"streaks\",\n          Utils.getArrayReader(this.ModelStreakV30),\n          \"anchors\",\n          Utils.getArrayReader(this.ModelStreakAnchorV30),\n        ];\n\n        this.ModelEffectLightV30 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"farDistance\",\n          \"float32\",\n          \"intensity\",\n          \"float32\",\n          \"nearDistance\",\n          \"float32\",\n          \"visBoneIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelLightDataV30 = [\"effectLights\", Utils.getArrayReader(this.ModelEffectLightV30)];\n\n        this.PackVertexType = [\"fvf\", \"uint32\", \"vertices\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelClothBoneWeightV30 = [\"token\", Utils.getQWordReader(), \"weight\", \"uint8\"];\n\n        this.ModelClothMeshGroupV30 = [\"weights\", Utils.getArrayReader(this.ModelClothBoneWeightV30)];\n\n        this.ModelClothConstraintV30 = [\"vertIndexA\", \"uint16\", \"vertIndexB\", \"uint16\", \"distance\", \"float32\"];\n\n        this.ModelClothObstacleV30 = [\"bone\", Utils.getQWordReader(), \"type\", \"uint8\"];\n\n        this.ModelClothDataV30 = [\n          \"materialIndex\",\n          \"uint32\",\n          \"flags\",\n          \"uint8\",\n          \"gravity\",\n          \"float32\",\n          \"weight\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n          \"rigidness\",\n          \"uint8\",\n          \"mesh\",\n          this.PackVertexType,\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"lockCount\",\n          \"uint16\",\n          \"groups\",\n          Utils.getArrayReader(this.ModelClothMeshGroupV30),\n          \"softLocks\",\n          Utils.getArrayReader(\"uint8\"),\n          \"lod0Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV30),\n          \"lod1Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV30),\n          \"lod1VertexCount\",\n          \"uint16\",\n          \"lod1Indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"barycentricCoords\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"barycentricIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelClothObstacleV30),\n        ];\n\n        this.__root = this.ModelFileDataV30 = [\n          \"materials\",\n          Utils.getRefArrayReader(this.ModelMaterialDataV30),\n          \"meshes\",\n          Utils.getRefArrayReader(this.ModelMeshDataV30),\n          \"model\",\n          Utils.getPointerReader(this.ModelModelDataV30),\n          \"properties\",\n          Utils.getArrayReader(this.ModelPropertyDataV30),\n          \"cloudData\",\n          Utils.getPointerReader(this.ModelCloudDataV30),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelObstacleDataV30),\n          \"streakData\",\n          Utils.getPointerReader(this.ModelStreakDataV30),\n          \"lightData\",\n          Utils.getPointerReader(this.ModelLightDataV30),\n          \"clothData\",\n          Utils.getArrayReader(this.ModelClothDataV30),\n          \"actionOffsetNames\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"actionOffsets\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"lodOverride\",\n          [\"[]\", \"float32\", 2],\n          \"soundScript\",\n          Utils.getFileNameReader(),\n        ];\n      },\n\n      // => Version: 29, ReferencedFunction: 0xF2A230\n      29: function () {\n        this.ModelTextureDataV29 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"textureFlags\",\n          \"uint32\",\n          \"token\",\n          Utils.getQWordReader(),\n          \"blitId\",\n          Utils.getQWordReader(),\n          \"uvAnimId\",\n          \"uint32\",\n          \"uvPSInputIndex\",\n          \"uint8\",\n        ];\n\n        this.ModelConstantDataV29 = [\"name\", \"uint32\", \"value\", [\"[]\", \"float32\", 4], \"constantFlags\", \"uint32\"];\n\n        this.ModelMatConstLinkV29 = [\"linkToken\", Utils.getQWordReader(), \"constantToken\", \"uint32\"];\n\n        this.ModelUVTransLinkV29 = [\"linkToken\", Utils.getQWordReader(), \"uvAnimId\", \"uint32\", \"type\", \"uint8\"];\n\n        this.ModelMaterialDataV29 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"materialFlags\",\n          \"uint32\",\n          \"sortOrder\",\n          \"uint32\",\n          \"texCoordCount\",\n          \"uint8\",\n          \"textures\",\n          Utils.getArrayReader(this.ModelTextureDataV29),\n          \"constants\",\n          Utils.getArrayReader(this.ModelConstantDataV29),\n          \"matConstLinks\",\n          Utils.getArrayReader(this.ModelMatConstLinkV29),\n          \"uvTransLinks\",\n          Utils.getArrayReader(this.ModelUVTransLinkV29),\n        ];\n\n        this.ModelMeshLodDataV29 = [\"indices\", Utils.getArrayReader(\"uint16\")];\n\n        this.ModelMeshMorphTargetV29 = [\n          \"positionIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"positions\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"normalIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"normals\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"meshName\",\n          Utils.getStringReader(),\n        ];\n\n        this.PackGrannyMeshType = [\"mesh\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelMeshDataV29 = [\n          \"lods\",\n          Utils.getArrayReader(this.ModelMeshLodDataV29),\n          \"morphTargets\",\n          Utils.getArrayReader(this.ModelMeshMorphTargetV29),\n          \"mesh\",\n          this.PackGrannyMeshType,\n          \"flags\",\n          \"uint32\",\n          \"visBoneIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"seamVertIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"meshName\",\n          Utils.getQWordReader(),\n          \"minBound\",\n          [\"[]\", \"float32\", 3],\n          \"maxBound\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.ModelTransformDataV29 = [\n          \"Flags\",\n          \"uint32\",\n          \"Position\",\n          [\"[]\", \"float32\", 3],\n          \"Orientation\",\n          [\"[]\", \"float32\", 4],\n          \"ScaleShear\",\n          [\"[]\", [\"[]\", \"float32\", 3], 3],\n        ];\n\n        this.ModelBoneDataV29 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"ParentIndex\",\n          \"uint32\",\n          \"LocalTransform\",\n          this.ModelTransformDataV29,\n          \"InverseWorld4x4\",\n          [\"[]\", [\"[]\", \"float32\", 4], 4],\n          \"LODError\",\n          \"float32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n        ];\n\n        this.ModelSkeletonDataV29 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Bones\",\n          Utils.getArrayReader(this.ModelBoneDataV29),\n          \"LODType\",\n          \"uint32\",\n        ];\n\n        this.ModelMeshBindingDataV29 = [\"Mesh\", Utils.getPointerReader(\"uint8\")];\n\n        this.PackGrannyTrackMaskType = [\"trackMask\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelTrackMaskV29 = [\"trackMask\", this.PackGrannyTrackMaskType, \"token\", Utils.getQWordReader()];\n\n        this.ModelModelDataV29 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Skeleton\",\n          Utils.getPointerReader(this.ModelSkeletonDataV29),\n          \"InitialPlacement\",\n          this.ModelTransformDataV29,\n          \"MeshBindings\",\n          Utils.getArrayReader(this.ModelMeshBindingDataV29),\n          \"boneFlags\",\n          Utils.getArrayReader(\"uint32\"),\n          \"emitterBones\",\n          Utils.getArrayReader(\"uint32\"),\n          \"trackMasks\",\n          Utils.getArrayReader(this.ModelTrackMaskV29),\n          \"skeletonHash\",\n          Utils.getArrayReader(\"uint8\"),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"radius\",\n          \"float32\",\n        ];\n\n        this.ModelPropertyDataV29 = [\n          \"id\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint32\",\n          \"mergeIndex\",\n          \"uint32\",\n          \"val\",\n          Utils.getQWordReader(),\n          \"strVal\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.ModelParticleCloudV29 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"drag\",\n          \"float32\",\n          \"emitterIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"obstacleIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"velocity\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.ModelParticleCurveV29 = [\"curveType\", \"uint8\", \"keys\", Utils.getArrayReader([\"[]\", \"float32\", 2])];\n\n        this.ModelParticleFlipbookV29 = [\n          \"columns\",\n          \"uint8\",\n          \"count\",\n          \"uint8\",\n          \"fps\",\n          \"float32\",\n          \"rows\",\n          \"uint8\",\n          \"start\",\n          \"uint8\",\n        ];\n\n        this.ModelParticleEmitterV29 = [\n          \"acceleration\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"accelerationDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"accelerationDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"alignmentType\",\n          \"uint8\",\n          \"alignmentDir\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorBegin\",\n          [\"[]\", \"float32\", 4],\n          \"colorEnd\",\n          [\"[]\", \"float32\", 4],\n          \"colorPeriod\",\n          \"float32\",\n          \"colorFalloff\",\n          [\"[]\", \"float32\", 2],\n          \"drag\",\n          \"float32\",\n          \"emitterFlags\",\n          \"uint32\",\n          \"opacityCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV29),\n          \"opacityCurvePreset\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"flipbook\",\n          Utils.getPointerReader(this.ModelParticleFlipbookV29),\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"rotationChange\",\n          [\"[]\", \"float32\", 2],\n          \"rotationDrag\",\n          \"float32\",\n          \"rotationInitial\",\n          [\"[]\", \"float32\", 2],\n          \"scaleChange\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleInitial\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV29),\n          \"scaleCurvePreset\",\n          \"uint32\",\n          \"velocity\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"velocityDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"velocityDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"spawnGroupSize\",\n          [\"[]\", \"float32\", 2],\n          \"spawnPeriod\",\n          \"float32\",\n          \"spawnProbability\",\n          \"float32\",\n          \"spawnRadius\",\n          [\"[]\", \"float32\", 2],\n          \"spawnShape\",\n          \"uint8\",\n          \"spawnWindEmit\",\n          [\"[]\", \"float32\", 2],\n          \"spawnWindSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"texCoordRect\",\n          [\"[]\", \"float32\", 4],\n          \"visBoneIndex\",\n          \"uint32\",\n          \"windInfluence\",\n          \"uint8\",\n        ];\n\n        this.ModelCloudDataV29 = [\n          \"clouds\",\n          Utils.getArrayReader(this.ModelParticleCloudV29),\n          \"emitters\",\n          Utils.getArrayReader(this.ModelParticleEmitterV29),\n        ];\n\n        this.ModelObstacleDataV29 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"dragCoef\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"geoData\",\n          [\"[]\", \"float32\", 3],\n          \"gravityCoef\",\n          \"float32\",\n          \"response\",\n          \"uint8\",\n          \"type\",\n          \"uint8\",\n          \"visBoneIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelStreakV29 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"anchorIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"bone\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"jitter\",\n          \"float32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"noise\",\n          \"float32\",\n          \"spawnDist\",\n          \"float32\",\n          \"stretchDist\",\n          \"float32\",\n          \"texScale\",\n          \"float32\",\n          \"visBoneIndex\",\n          \"uint32\",\n          \"wind\",\n          \"float32\",\n        ];\n\n        this.ModelStreakAnchorV29 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"color\",\n          \"uint32\",\n          \"falloff\",\n          \"float32\",\n          \"lifetime\",\n          \"float32\",\n        ];\n\n        this.ModelStreakDataV29 = [\n          \"streaks\",\n          Utils.getArrayReader(this.ModelStreakV29),\n          \"anchors\",\n          Utils.getArrayReader(this.ModelStreakAnchorV29),\n        ];\n\n        this.ModelEffectLightV29 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"farDistance\",\n          \"float32\",\n          \"intensity\",\n          \"float32\",\n          \"nearDistance\",\n          \"float32\",\n          \"visBoneIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelLightDataV29 = [\"effectLights\", Utils.getArrayReader(this.ModelEffectLightV29)];\n\n        this.PackVertexType = [\"fvf\", \"uint32\", \"vertices\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelClothBoneWeightV29 = [\"token\", Utils.getQWordReader(), \"weight\", \"uint8\"];\n\n        this.ModelClothMeshGroupV29 = [\"weights\", Utils.getArrayReader(this.ModelClothBoneWeightV29)];\n\n        this.ModelClothConstraintV29 = [\"vertIndexA\", \"uint16\", \"vertIndexB\", \"uint16\", \"distance\", \"float32\"];\n\n        this.ModelClothObstacleV29 = [\"bone\", Utils.getQWordReader(), \"type\", \"uint8\"];\n\n        this.ModelClothDataV29 = [\n          \"materialIndex\",\n          \"uint32\",\n          \"flags\",\n          \"uint8\",\n          \"gravity\",\n          \"float32\",\n          \"weight\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n          \"rigidness\",\n          \"uint8\",\n          \"mesh\",\n          this.PackVertexType,\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"lockCount\",\n          \"uint16\",\n          \"groups\",\n          Utils.getArrayReader(this.ModelClothMeshGroupV29),\n          \"softLocks\",\n          Utils.getArrayReader(\"uint8\"),\n          \"lod0Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV29),\n          \"lod1Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV29),\n          \"lod1VertexCount\",\n          \"uint16\",\n          \"lod1Indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"barycentricCoords\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"barycentricIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelClothObstacleV29),\n        ];\n\n        this.__root = this.ModelFileDataV29 = [\n          \"materials\",\n          Utils.getRefArrayReader(this.ModelMaterialDataV29),\n          \"meshes\",\n          Utils.getRefArrayReader(this.ModelMeshDataV29),\n          \"model\",\n          Utils.getPointerReader(this.ModelModelDataV29),\n          \"properties\",\n          Utils.getArrayReader(this.ModelPropertyDataV29),\n          \"cloudData\",\n          Utils.getPointerReader(this.ModelCloudDataV29),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelObstacleDataV29),\n          \"streakData\",\n          Utils.getPointerReader(this.ModelStreakDataV29),\n          \"lightData\",\n          Utils.getPointerReader(this.ModelLightDataV29),\n          \"clothData\",\n          Utils.getArrayReader(this.ModelClothDataV29),\n          \"actionOffsetNames\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"actionOffsets\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"lodOverride\",\n          [\"[]\", \"float32\", 2],\n          \"soundScript\",\n          Utils.getFileNameReader(),\n        ];\n      },\n\n      // => Version: 28\n      28: function () {\n        this.ModelTextureDataV28 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"textureFlags\",\n          \"uint32\",\n          \"token\",\n          Utils.getQWordReader(),\n          \"blitId\",\n          Utils.getQWordReader(),\n          \"uvAnimId\",\n          \"uint8\",\n          \"uvPSInputIndex\",\n          \"uint8\",\n        ];\n\n        this.ModelConstantDataV28 = [\"name\", \"uint32\", \"value\", [\"[]\", \"float32\", 4], \"constantFlags\", \"uint32\"];\n\n        this.ModelMaterialDataV28 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"materialFlags\",\n          \"uint32\",\n          \"sortOrder\",\n          \"uint32\",\n          \"texCoordCount\",\n          \"uint8\",\n          \"textures\",\n          Utils.getArrayReader(this.ModelTextureDataV28),\n          \"constants\",\n          Utils.getArrayReader(this.ModelConstantDataV28),\n        ];\n\n        this.ModelMeshLodDataV28 = [\"indices\", Utils.getArrayReader(\"uint16\")];\n\n        this.ModelMeshMorphTargetV28 = [\n          \"positionIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"positions\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"normalIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"normals\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"meshName\",\n          Utils.getStringReader(),\n        ];\n\n        this.PackGrannyMeshType = [\"mesh\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelMeshDataV28 = [\n          \"lods\",\n          Utils.getArrayReader(this.ModelMeshLodDataV28),\n          \"morphTargets\",\n          Utils.getArrayReader(this.ModelMeshMorphTargetV28),\n          \"mesh\",\n          this.PackGrannyMeshType,\n          \"flags\",\n          \"uint32\",\n          \"visBoneIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"seamVertIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"meshName\",\n          Utils.getQWordReader(),\n          \"minBound\",\n          [\"[]\", \"float32\", 3],\n          \"maxBound\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.ModelTransformDataV28 = [\n          \"Flags\",\n          \"uint32\",\n          \"Position\",\n          [\"[]\", \"float32\", 3],\n          \"Orientation\",\n          [\"[]\", \"float32\", 4],\n          \"ScaleShear\",\n          [\"[]\", [\"[]\", \"float32\", 3], 3],\n        ];\n\n        this.ModelBoneDataV28 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"ParentIndex\",\n          \"uint32\",\n          \"LocalTransform\",\n          this.ModelTransformDataV28,\n          \"InverseWorld4x4\",\n          [\"[]\", [\"[]\", \"float32\", 4], 4],\n          \"LODError\",\n          \"float32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n        ];\n\n        this.ModelSkeletonDataV28 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Bones\",\n          Utils.getArrayReader(this.ModelBoneDataV28),\n          \"LODType\",\n          \"uint32\",\n        ];\n\n        this.ModelMeshBindingDataV28 = [\"Mesh\", Utils.getPointerReader(\"uint8\")];\n\n        this.PackGrannyTrackMaskType = [\"trackMask\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelTrackMaskV28 = [\"trackMask\", this.PackGrannyTrackMaskType, \"token\", Utils.getQWordReader()];\n\n        this.ModelModelDataV28 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Skeleton\",\n          Utils.getPointerReader(this.ModelSkeletonDataV28),\n          \"InitialPlacement\",\n          this.ModelTransformDataV28,\n          \"MeshBindings\",\n          Utils.getArrayReader(this.ModelMeshBindingDataV28),\n          \"boneFlags\",\n          Utils.getArrayReader(\"uint32\"),\n          \"emitterBones\",\n          Utils.getArrayReader(\"uint32\"),\n          \"trackMasks\",\n          Utils.getArrayReader(this.ModelTrackMaskV28),\n          \"skeletonHash\",\n          Utils.getArrayReader(\"uint8\"),\n          \"center\",\n          [\"[]\", \"float32\", 3],\n          \"radius\",\n          \"float32\",\n        ];\n\n        this.ModelPropertyDataV28 = [\n          \"id\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint32\",\n          \"mergeIndex\",\n          \"uint32\",\n          \"val\",\n          Utils.getQWordReader(),\n          \"strVal\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.ModelParticleCloudV28 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"drag\",\n          \"float32\",\n          \"emitterIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"obstacleIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"velocity\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.ModelParticleCurveV28 = [\"curveType\", \"uint8\", \"keys\", Utils.getArrayReader([\"[]\", \"float32\", 2])];\n\n        this.ModelParticleFlipbookV28 = [\n          \"columns\",\n          \"uint8\",\n          \"count\",\n          \"uint8\",\n          \"fps\",\n          \"float32\",\n          \"rows\",\n          \"uint8\",\n          \"start\",\n          \"uint8\",\n        ];\n\n        this.ModelParticleEmitterV28 = [\n          \"acceleration\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"accelerationDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"accelerationDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"alignmentType\",\n          \"uint8\",\n          \"alignmentDir\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorBegin\",\n          [\"[]\", \"float32\", 4],\n          \"colorEnd\",\n          [\"[]\", \"float32\", 4],\n          \"colorPeriod\",\n          \"float32\",\n          \"colorFalloff\",\n          [\"[]\", \"float32\", 2],\n          \"drag\",\n          \"float32\",\n          \"emitterFlags\",\n          \"uint32\",\n          \"opacityCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV28),\n          \"opacityCurvePreset\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"flipbook\",\n          Utils.getPointerReader(this.ModelParticleFlipbookV28),\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"rotationChange\",\n          [\"[]\", \"float32\", 2],\n          \"rotationDrag\",\n          \"float32\",\n          \"rotationInitial\",\n          [\"[]\", \"float32\", 2],\n          \"scaleChange\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleInitial\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV28),\n          \"scaleCurvePreset\",\n          \"uint32\",\n          \"velocity\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"velocityDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"velocityDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"spawnGroupSize\",\n          [\"[]\", \"float32\", 2],\n          \"spawnPeriod\",\n          \"float32\",\n          \"spawnProbability\",\n          \"float32\",\n          \"spawnRadius\",\n          [\"[]\", \"float32\", 2],\n          \"spawnShape\",\n          \"uint8\",\n          \"spawnWindEmit\",\n          [\"[]\", \"float32\", 2],\n          \"spawnWindSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"texCoordRect\",\n          [\"[]\", \"float32\", 4],\n          \"visBoneIndex\",\n          \"uint32\",\n          \"windInfluence\",\n          \"uint8\",\n        ];\n\n        this.ModelCloudDataV28 = [\n          \"clouds\",\n          Utils.getArrayReader(this.ModelParticleCloudV28),\n          \"emitters\",\n          Utils.getArrayReader(this.ModelParticleEmitterV28),\n        ];\n\n        this.ModelObstacleDataV28 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"dragCoef\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"geoData\",\n          [\"[]\", \"float32\", 3],\n          \"gravityCoef\",\n          \"float32\",\n          \"response\",\n          \"uint8\",\n          \"type\",\n          \"uint8\",\n          \"visBoneIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelStreakV28 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"anchorIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"bone\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"jitter\",\n          \"float32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"noise\",\n          \"float32\",\n          \"spawnDist\",\n          \"float32\",\n          \"stretchDist\",\n          \"float32\",\n          \"texScale\",\n          \"float32\",\n          \"visBoneIndex\",\n          \"uint32\",\n          \"wind\",\n          \"float32\",\n        ];\n\n        this.ModelStreakAnchorV28 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"color\",\n          \"uint32\",\n          \"falloff\",\n          \"float32\",\n          \"lifetime\",\n          \"float32\",\n        ];\n\n        this.ModelStreakDataV28 = [\n          \"streaks\",\n          Utils.getArrayReader(this.ModelStreakV28),\n          \"anchors\",\n          Utils.getArrayReader(this.ModelStreakAnchorV28),\n        ];\n\n        this.ModelEffectLightV28 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"farDistance\",\n          \"float32\",\n          \"intensity\",\n          \"float32\",\n          \"nearDistance\",\n          \"float32\",\n          \"visBoneIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelLightDataV28 = [\"effectLights\", Utils.getArrayReader(this.ModelEffectLightV28)];\n\n        this.PackVertexType = [\"fvf\", \"uint32\", \"vertices\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelClothBoneWeightV28 = [\"token\", Utils.getQWordReader(), \"weight\", \"uint8\"];\n\n        this.ModelClothMeshGroupV28 = [\"weights\", Utils.getArrayReader(this.ModelClothBoneWeightV28)];\n\n        this.ModelClothConstraintV28 = [\"vertIndexA\", \"uint16\", \"vertIndexB\", \"uint16\", \"distance\", \"float32\"];\n\n        this.ModelClothDataV28 = [\n          \"materialIndex\",\n          \"uint32\",\n          \"flags\",\n          \"uint8\",\n          \"gravity\",\n          \"float32\",\n          \"weight\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n          \"rigidness\",\n          \"uint8\",\n          \"mesh\",\n          this.PackVertexType,\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"lockCount\",\n          \"uint16\",\n          \"groups\",\n          Utils.getArrayReader(this.ModelClothMeshGroupV28),\n          \"softLocks\",\n          Utils.getArrayReader(\"uint8\"),\n          \"lod0Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV28),\n          \"lod1Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV28),\n          \"lod1VertexCount\",\n          \"uint16\",\n          \"lod1Indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"barycentricCoords\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"barycentricIndices\",\n          Utils.getArrayReader(\"uint16\"),\n        ];\n\n        this.__root = this.ModelFileDataV28 = [\n          \"materials\",\n          Utils.getRefArrayReader(this.ModelMaterialDataV28),\n          \"meshes\",\n          Utils.getRefArrayReader(this.ModelMeshDataV28),\n          \"model\",\n          Utils.getPointerReader(this.ModelModelDataV28),\n          \"properties\",\n          Utils.getArrayReader(this.ModelPropertyDataV28),\n          \"cloudData\",\n          Utils.getPointerReader(this.ModelCloudDataV28),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelObstacleDataV28),\n          \"streakData\",\n          Utils.getPointerReader(this.ModelStreakDataV28),\n          \"lightData\",\n          Utils.getPointerReader(this.ModelLightDataV28),\n          \"clothData\",\n          Utils.getArrayReader(this.ModelClothDataV28),\n          \"actionOffsetNames\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"actionOffsets\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"lodOverride\",\n          [\"[]\", \"float32\", 2],\n          \"soundScript\",\n          Utils.getFileNameReader(),\n        ];\n      },\n\n      // => Version: 27\n      27: function () {\n        this.ModelTextureDataV27 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"textureFlags\",\n          \"uint32\",\n          \"token\",\n          Utils.getQWordReader(),\n          \"blitId\",\n          Utils.getQWordReader(),\n          \"uvAnimId\",\n          \"uint8\",\n          \"uvPSInputIndex\",\n          \"uint8\",\n        ];\n\n        this.ModelConstantDataV27 = [\"name\", \"uint32\", \"value\", [\"[]\", \"float32\", 4], \"constantFlags\", \"uint32\"];\n\n        this.ModelMaterialDataV27 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"materialFlags\",\n          \"uint32\",\n          \"sortOrder\",\n          \"uint32\",\n          \"texCoordCount\",\n          \"uint8\",\n          \"textures\",\n          Utils.getArrayReader(this.ModelTextureDataV27),\n          \"constants\",\n          Utils.getArrayReader(this.ModelConstantDataV27),\n        ];\n\n        this.ModelMeshLodDataV27 = [\"indices\", Utils.getArrayReader(\"uint16\")];\n\n        this.ModelMeshMorphTargetV27 = [\n          \"positionIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"positions\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"normalIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"normals\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"meshName\",\n          Utils.getStringReader(),\n        ];\n\n        this.PackGrannyMeshType = [\"mesh\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelMeshDataV27 = [\n          \"lods\",\n          Utils.getArrayReader(this.ModelMeshLodDataV27),\n          \"morphTargets\",\n          Utils.getArrayReader(this.ModelMeshMorphTargetV27),\n          \"mesh\",\n          this.PackGrannyMeshType,\n          \"flags\",\n          \"uint32\",\n          \"visBoneIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"seamVertIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"meshName\",\n          Utils.getQWordReader(),\n        ];\n\n        this.ModelTransformDataV27 = [\n          \"Flags\",\n          \"uint32\",\n          \"Position\",\n          [\"[]\", \"float32\", 3],\n          \"Orientation\",\n          [\"[]\", \"float32\", 4],\n          \"ScaleShear\",\n          [\"[]\", [\"[]\", \"float32\", 3], 3],\n        ];\n\n        this.ModelBoneDataV27 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"ParentIndex\",\n          \"uint32\",\n          \"LocalTransform\",\n          this.ModelTransformDataV27,\n          \"InverseWorld4x4\",\n          [\"[]\", [\"[]\", \"float32\", 4], 4],\n          \"LODError\",\n          \"float32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n        ];\n\n        this.ModelSkeletonDataV27 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Bones\",\n          Utils.getArrayReader(this.ModelBoneDataV27),\n          \"LODType\",\n          \"uint32\",\n        ];\n\n        this.ModelMeshBindingDataV27 = [\"Mesh\", Utils.getPointerReader(\"uint8\")];\n\n        this.PackGrannyTrackMaskType = [\"trackMask\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelTrackMaskV27 = [\"trackMask\", this.PackGrannyTrackMaskType, \"token\", Utils.getQWordReader()];\n\n        this.ModelModelDataV27 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Skeleton\",\n          Utils.getPointerReader(this.ModelSkeletonDataV27),\n          \"InitialPlacement\",\n          this.ModelTransformDataV27,\n          \"MeshBindings\",\n          Utils.getArrayReader(this.ModelMeshBindingDataV27),\n          \"boneFlags\",\n          Utils.getArrayReader(\"uint32\"),\n          \"emitterBones\",\n          Utils.getArrayReader(\"uint32\"),\n          \"trackMasks\",\n          Utils.getArrayReader(this.ModelTrackMaskV27),\n          \"skeletonHash\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.ModelPropertyDataV27 = [\n          \"id\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint32\",\n          \"mergeIndex\",\n          \"uint32\",\n          \"val\",\n          Utils.getQWordReader(),\n          \"strVal\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.ModelParticleCloudV27 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"drag\",\n          \"float32\",\n          \"emitterIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"obstacleIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"velocity\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.ModelParticleCurveV27 = [\"curveType\", \"uint8\", \"keys\", Utils.getArrayReader([\"[]\", \"float32\", 2])];\n\n        this.ModelParticleFlipbookV27 = [\n          \"columns\",\n          \"uint8\",\n          \"count\",\n          \"uint8\",\n          \"fps\",\n          \"float32\",\n          \"rows\",\n          \"uint8\",\n          \"start\",\n          \"uint8\",\n        ];\n\n        this.ModelParticleEmitterV27 = [\n          \"acceleration\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"accelerationDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"accelerationDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"alignmentType\",\n          \"uint8\",\n          \"alignmentDir\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorBegin\",\n          [\"[]\", \"float32\", 4],\n          \"colorEnd\",\n          [\"[]\", \"float32\", 4],\n          \"colorPeriod\",\n          \"float32\",\n          \"colorFalloff\",\n          [\"[]\", \"float32\", 2],\n          \"drag\",\n          \"float32\",\n          \"emitterFlags\",\n          \"uint32\",\n          \"opacityCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV27),\n          \"opacityCurvePreset\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"flipbook\",\n          Utils.getPointerReader(this.ModelParticleFlipbookV27),\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"rotationChange\",\n          [\"[]\", \"float32\", 2],\n          \"rotationDrag\",\n          \"float32\",\n          \"rotationInitial\",\n          [\"[]\", \"float32\", 2],\n          \"scaleChange\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleInitial\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV27),\n          \"scaleCurvePreset\",\n          \"uint32\",\n          \"velocity\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"velocityDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"velocityDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"spawnGroupSize\",\n          [\"[]\", \"float32\", 2],\n          \"spawnPeriod\",\n          \"float32\",\n          \"spawnProbability\",\n          \"float32\",\n          \"spawnRadius\",\n          [\"[]\", \"float32\", 2],\n          \"spawnShape\",\n          \"uint8\",\n          \"spawnWindEmit\",\n          [\"[]\", \"float32\", 2],\n          \"spawnWindSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"texCoordRect\",\n          [\"[]\", \"float32\", 4],\n          \"visBoneIndex\",\n          \"uint32\",\n          \"windInfluence\",\n          \"uint8\",\n        ];\n\n        this.ModelCloudDataV27 = [\n          \"clouds\",\n          Utils.getArrayReader(this.ModelParticleCloudV27),\n          \"emitters\",\n          Utils.getArrayReader(this.ModelParticleEmitterV27),\n        ];\n\n        this.ModelObstacleDataV27 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"dragCoef\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"geoData\",\n          [\"[]\", \"float32\", 3],\n          \"gravityCoef\",\n          \"float32\",\n          \"response\",\n          \"uint8\",\n          \"type\",\n          \"uint8\",\n          \"visBoneIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelStreakV27 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"anchorIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"bone\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"jitter\",\n          \"float32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"noise\",\n          \"float32\",\n          \"spawnDist\",\n          \"float32\",\n          \"stretchDist\",\n          \"float32\",\n          \"texScale\",\n          \"float32\",\n          \"visBoneIndex\",\n          \"uint32\",\n          \"wind\",\n          \"float32\",\n        ];\n\n        this.ModelStreakAnchorV27 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"color\",\n          \"uint32\",\n          \"falloff\",\n          \"float32\",\n          \"lifetime\",\n          \"float32\",\n        ];\n\n        this.ModelStreakDataV27 = [\n          \"streaks\",\n          Utils.getArrayReader(this.ModelStreakV27),\n          \"anchors\",\n          Utils.getArrayReader(this.ModelStreakAnchorV27),\n        ];\n\n        this.ModelEffectLightV27 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"farDistance\",\n          \"float32\",\n          \"intensity\",\n          \"float32\",\n          \"nearDistance\",\n          \"float32\",\n          \"visBoneIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelLightDataV27 = [\"effectLights\", Utils.getArrayReader(this.ModelEffectLightV27)];\n\n        this.PackVertexType = [\"fvf\", \"uint32\", \"vertices\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelClothBoneWeightV27 = [\"token\", Utils.getQWordReader(), \"weight\", \"uint8\"];\n\n        this.ModelClothMeshGroupV27 = [\"weights\", Utils.getArrayReader(this.ModelClothBoneWeightV27)];\n\n        this.ModelClothConstraintV27 = [\"vertIndexA\", \"uint16\", \"vertIndexB\", \"uint16\", \"distance\", \"float32\"];\n\n        this.ModelClothDataV27 = [\n          \"materialIndex\",\n          \"uint32\",\n          \"flags\",\n          \"uint8\",\n          \"gravity\",\n          \"float32\",\n          \"weight\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n          \"rigidness\",\n          \"uint8\",\n          \"mesh\",\n          this.PackVertexType,\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"lockCount\",\n          \"uint16\",\n          \"groups\",\n          Utils.getArrayReader(this.ModelClothMeshGroupV27),\n          \"softLocks\",\n          Utils.getArrayReader(\"uint8\"),\n          \"lod0Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV27),\n          \"lod1Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV27),\n          \"lod1VertexCount\",\n          \"uint16\",\n          \"lod1Indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"barycentricCoords\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"barycentricIndices\",\n          Utils.getArrayReader(\"uint16\"),\n        ];\n\n        this.__root = this.ModelFileDataV27 = [\n          \"materials\",\n          Utils.getRefArrayReader(this.ModelMaterialDataV27),\n          \"meshes\",\n          Utils.getRefArrayReader(this.ModelMeshDataV27),\n          \"model\",\n          Utils.getPointerReader(this.ModelModelDataV27),\n          \"properties\",\n          Utils.getArrayReader(this.ModelPropertyDataV27),\n          \"cloudData\",\n          Utils.getPointerReader(this.ModelCloudDataV27),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelObstacleDataV27),\n          \"streakData\",\n          Utils.getPointerReader(this.ModelStreakDataV27),\n          \"lightData\",\n          Utils.getPointerReader(this.ModelLightDataV27),\n          \"clothData\",\n          Utils.getArrayReader(this.ModelClothDataV27),\n          \"actionOffsetNames\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"actionOffsets\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"lodOverride\",\n          [\"[]\", \"float32\", 2],\n          \"soundScript\",\n          Utils.getFileNameReader(),\n        ];\n      },\n\n      // => Version: 26, ReferencedFunction: 0xF29DB0\n      26: function () {\n        this.ModelTextureDataV26 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"textureFlags\",\n          \"uint32\",\n          \"token\",\n          Utils.getQWordReader(),\n          \"blitId\",\n          Utils.getQWordReader(),\n          \"uvAnimId\",\n          \"uint8\",\n          \"uvPSInputIndex\",\n          \"uint8\",\n        ];\n\n        this.ModelConstantDataV26 = [\"name\", \"uint32\", \"value\", [\"[]\", \"float32\", 4], \"constantFlags\", \"uint32\"];\n\n        this.ModelMaterialDataV26 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"materialFlags\",\n          \"uint32\",\n          \"sortOrder\",\n          \"uint32\",\n          \"texCoordCount\",\n          \"uint8\",\n          \"textures\",\n          Utils.getArrayReader(this.ModelTextureDataV26),\n          \"constants\",\n          Utils.getArrayReader(this.ModelConstantDataV26),\n        ];\n\n        this.ModelMeshLodDataV26 = [\"indices\", Utils.getArrayReader(\"uint16\")];\n\n        this.ModelMeshMorphTargetV26 = [\n          \"positionIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"positions\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"normalIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"normals\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"meshName\",\n          Utils.getStringReader(),\n        ];\n\n        this.PackGrannyMeshType = [\"mesh\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelMeshDataV26 = [\n          \"lods\",\n          Utils.getArrayReader(this.ModelMeshLodDataV26),\n          \"morphTargets\",\n          Utils.getArrayReader(this.ModelMeshMorphTargetV26),\n          \"mesh\",\n          this.PackGrannyMeshType,\n          \"flags\",\n          \"uint32\",\n          \"visBoneIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"seamVertIndices\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n\n        this.ModelTransformDataV26 = [\n          \"Flags\",\n          \"uint32\",\n          \"Position\",\n          [\"[]\", \"float32\", 3],\n          \"Orientation\",\n          [\"[]\", \"float32\", 4],\n          \"ScaleShear\",\n          [\"[]\", [\"[]\", \"float32\", 3], 3],\n        ];\n\n        this.ModelBoneDataV26 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"ParentIndex\",\n          \"uint32\",\n          \"LocalTransform\",\n          this.ModelTransformDataV26,\n          \"InverseWorld4x4\",\n          [\"[]\", [\"[]\", \"float32\", 4], 4],\n          \"LODError\",\n          \"float32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n        ];\n\n        this.ModelSkeletonDataV26 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Bones\",\n          Utils.getArrayReader(this.ModelBoneDataV26),\n          \"LODType\",\n          \"uint32\",\n        ];\n\n        this.ModelMeshBindingDataV26 = [\"Mesh\", Utils.getPointerReader(\"uint8\")];\n\n        this.PackGrannyTrackMaskType = [\"trackMask\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelTrackMaskV26 = [\"trackMask\", this.PackGrannyTrackMaskType, \"token\", Utils.getQWordReader()];\n\n        this.ModelModelDataV26 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Skeleton\",\n          Utils.getPointerReader(this.ModelSkeletonDataV26),\n          \"InitialPlacement\",\n          this.ModelTransformDataV26,\n          \"MeshBindings\",\n          Utils.getArrayReader(this.ModelMeshBindingDataV26),\n          \"boneFlags\",\n          Utils.getArrayReader(\"uint32\"),\n          \"emitterBones\",\n          Utils.getArrayReader(\"uint32\"),\n          \"trackMasks\",\n          Utils.getArrayReader(this.ModelTrackMaskV26),\n          \"skeletonHash\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.ModelPropertyDataV26 = [\n          \"id\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint32\",\n          \"mergeIndex\",\n          \"uint32\",\n          \"val\",\n          Utils.getQWordReader(),\n          \"strVal\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.ModelParticleCloudV26 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"drag\",\n          \"float32\",\n          \"emitterIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"obstacleIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"velocity\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.ModelParticleCurveV26 = [\"curveType\", \"uint8\", \"keys\", Utils.getArrayReader([\"[]\", \"float32\", 2])];\n\n        this.ModelParticleFlipbookV26 = [\n          \"columns\",\n          \"uint8\",\n          \"count\",\n          \"uint8\",\n          \"fps\",\n          \"float32\",\n          \"rows\",\n          \"uint8\",\n          \"start\",\n          \"uint8\",\n        ];\n\n        this.ModelParticleEmitterV26 = [\n          \"acceleration\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"accelerationDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"accelerationDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"alignmentType\",\n          \"uint8\",\n          \"alignmentDir\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorBegin\",\n          [\"[]\", \"float32\", 4],\n          \"colorEnd\",\n          [\"[]\", \"float32\", 4],\n          \"colorPeriod\",\n          \"float32\",\n          \"colorFalloff\",\n          [\"[]\", \"float32\", 2],\n          \"drag\",\n          \"float32\",\n          \"emitterFlags\",\n          \"uint32\",\n          \"opacityCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV26),\n          \"opacityCurvePreset\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"flipbook\",\n          Utils.getPointerReader(this.ModelParticleFlipbookV26),\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"rotationChange\",\n          [\"[]\", \"float32\", 2],\n          \"rotationDrag\",\n          \"float32\",\n          \"rotationInitial\",\n          [\"[]\", \"float32\", 2],\n          \"scaleChange\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleInitial\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV26),\n          \"scaleCurvePreset\",\n          \"uint32\",\n          \"velocity\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"velocityDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"velocityDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"spawnGroupSize\",\n          [\"[]\", \"float32\", 2],\n          \"spawnPeriod\",\n          \"float32\",\n          \"spawnProbability\",\n          \"float32\",\n          \"spawnRadius\",\n          [\"[]\", \"float32\", 2],\n          \"spawnShape\",\n          \"uint8\",\n          \"spawnWindEmit\",\n          [\"[]\", \"float32\", 2],\n          \"spawnWindSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"texCoordRect\",\n          [\"[]\", \"float32\", 4],\n          \"visBoneIndex\",\n          \"uint32\",\n          \"windInfluence\",\n          \"uint8\",\n        ];\n\n        this.ModelCloudDataV26 = [\n          \"clouds\",\n          Utils.getArrayReader(this.ModelParticleCloudV26),\n          \"emitters\",\n          Utils.getArrayReader(this.ModelParticleEmitterV26),\n        ];\n\n        this.ModelObstacleDataV26 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"dragCoef\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"geoData\",\n          [\"[]\", \"float32\", 3],\n          \"gravityCoef\",\n          \"float32\",\n          \"response\",\n          \"uint8\",\n          \"type\",\n          \"uint8\",\n          \"visBoneIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelStreakV26 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"anchorIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"bone\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"jitter\",\n          \"float32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"noise\",\n          \"float32\",\n          \"spawnDist\",\n          \"float32\",\n          \"stretchDist\",\n          \"float32\",\n          \"texScale\",\n          \"float32\",\n          \"visBoneIndex\",\n          \"uint32\",\n          \"wind\",\n          \"float32\",\n        ];\n\n        this.ModelStreakAnchorV26 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"color\",\n          \"uint32\",\n          \"falloff\",\n          \"float32\",\n          \"lifetime\",\n          \"float32\",\n        ];\n\n        this.ModelStreakDataV26 = [\n          \"streaks\",\n          Utils.getArrayReader(this.ModelStreakV26),\n          \"anchors\",\n          Utils.getArrayReader(this.ModelStreakAnchorV26),\n        ];\n\n        this.ModelEffectLightV26 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"farDistance\",\n          \"float32\",\n          \"intensity\",\n          \"float32\",\n          \"nearDistance\",\n          \"float32\",\n          \"visBoneIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelLightDataV26 = [\"effectLights\", Utils.getArrayReader(this.ModelEffectLightV26)];\n\n        this.PackVertexType = [\"fvf\", \"uint32\", \"vertices\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelClothBoneWeightV26 = [\"token\", Utils.getQWordReader(), \"weight\", \"uint8\"];\n\n        this.ModelClothMeshGroupV26 = [\"weights\", Utils.getArrayReader(this.ModelClothBoneWeightV26)];\n\n        this.ModelClothConstraintV26 = [\"vertIndexA\", \"uint16\", \"vertIndexB\", \"uint16\", \"distance\", \"float32\"];\n\n        this.ModelClothDataV26 = [\n          \"materialIndex\",\n          \"uint32\",\n          \"flags\",\n          \"uint8\",\n          \"gravity\",\n          \"float32\",\n          \"weight\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n          \"rigidness\",\n          \"uint8\",\n          \"mesh\",\n          this.PackVertexType,\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"lockCount\",\n          \"uint16\",\n          \"groups\",\n          Utils.getArrayReader(this.ModelClothMeshGroupV26),\n          \"softLocks\",\n          Utils.getArrayReader(\"uint8\"),\n          \"lod0Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV26),\n          \"lod1Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV26),\n          \"lod1VertexCount\",\n          \"uint16\",\n          \"lod1Indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"barycentricCoords\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"barycentricIndices\",\n          Utils.getArrayReader(\"uint16\"),\n        ];\n\n        this.__root = this.ModelFileDataV26 = [\n          \"materials\",\n          Utils.getRefArrayReader(this.ModelMaterialDataV26),\n          \"meshes\",\n          Utils.getRefArrayReader(this.ModelMeshDataV26),\n          \"model\",\n          Utils.getPointerReader(this.ModelModelDataV26),\n          \"properties\",\n          Utils.getArrayReader(this.ModelPropertyDataV26),\n          \"cloudData\",\n          Utils.getPointerReader(this.ModelCloudDataV26),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelObstacleDataV26),\n          \"streakData\",\n          Utils.getPointerReader(this.ModelStreakDataV26),\n          \"lightData\",\n          Utils.getPointerReader(this.ModelLightDataV26),\n          \"clothData\",\n          Utils.getArrayReader(this.ModelClothDataV26),\n          \"actionOffsetNames\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"actionOffsets\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"lodOverride\",\n          [\"[]\", \"float32\", 2],\n          \"soundScript\",\n          Utils.getFileNameReader(),\n        ];\n      },\n\n      // => Version: 25, ReferencedFunction: 0xF29C20\n      25: function () {\n        this.ModelTextureDataV25 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"textureFlags\",\n          \"uint32\",\n          \"token\",\n          Utils.getQWordReader(),\n          \"blitId\",\n          Utils.getQWordReader(),\n          \"uvAnimId\",\n          \"uint8\",\n          \"uvPSInputIndex\",\n          \"uint8\",\n        ];\n\n        this.ModelConstantDataV25 = [\"name\", \"uint32\", \"value\", [\"[]\", \"float32\", 4], \"constantFlags\", \"uint32\"];\n\n        this.ModelMaterialDataV25 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"materialFlags\",\n          \"uint32\",\n          \"sortOrder\",\n          \"uint32\",\n          \"texCoordCount\",\n          \"uint8\",\n          \"textures\",\n          Utils.getArrayReader(this.ModelTextureDataV25),\n          \"constants\",\n          Utils.getArrayReader(this.ModelConstantDataV25),\n        ];\n\n        this.ModelMeshLodDataV25 = [\"indices\", Utils.getArrayReader(\"uint16\")];\n\n        this.ModelMeshMorphTargetV25 = [\n          \"positionIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"positions\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"normalIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"normals\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"meshName\",\n          Utils.getStringReader(),\n        ];\n\n        this.PackGrannyMeshType = [\"mesh\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelMeshDataV25 = [\n          \"lods\",\n          Utils.getArrayReader(this.ModelMeshLodDataV25),\n          \"morphTargets\",\n          Utils.getArrayReader(this.ModelMeshMorphTargetV25),\n          \"mesh\",\n          this.PackGrannyMeshType,\n          \"flags\",\n          \"uint32\",\n          \"visBoneIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"seamVertIndices\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n\n        this.ModelTransformDataV25 = [\n          \"Flags\",\n          \"uint32\",\n          \"Position\",\n          [\"[]\", \"float32\", 3],\n          \"Orientation\",\n          [\"[]\", \"float32\", 4],\n          \"ScaleShear\",\n          [\"[]\", [\"[]\", \"float32\", 3], 3],\n        ];\n\n        this.ModelBoneDataV25 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"ParentIndex\",\n          \"uint32\",\n          \"LocalTransform\",\n          this.ModelTransformDataV25,\n          \"InverseWorld4x4\",\n          [\"[]\", [\"[]\", \"float32\", 4], 4],\n          \"LODError\",\n          \"float32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n        ];\n\n        this.ModelSkeletonDataV25 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Bones\",\n          Utils.getArrayReader(this.ModelBoneDataV25),\n          \"LODType\",\n          \"uint32\",\n        ];\n\n        this.ModelMeshBindingDataV25 = [\"Mesh\", Utils.getPointerReader(\"uint8\")];\n\n        this.PackGrannyTrackMaskType = [\"trackMask\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelTrackMaskV25 = [\"trackMask\", this.PackGrannyTrackMaskType, \"token\", Utils.getQWordReader()];\n\n        this.ModelModelDataV25 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Skeleton\",\n          Utils.getPointerReader(this.ModelSkeletonDataV25),\n          \"InitialPlacement\",\n          this.ModelTransformDataV25,\n          \"MeshBindings\",\n          Utils.getArrayReader(this.ModelMeshBindingDataV25),\n          \"boneFlags\",\n          Utils.getArrayReader(\"uint32\"),\n          \"emitterBones\",\n          Utils.getArrayReader(\"uint32\"),\n          \"trackMasks\",\n          Utils.getArrayReader(this.ModelTrackMaskV25),\n          \"skeletonHash\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.ModelFloatPropertyDataV25 = [\"token\", Utils.getQWordReader(), \"value\", \"float32\"];\n\n        this.ModelPropertyDataV25 = [\n          \"boolTokens\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"floatValues\",\n          Utils.getArrayReader(this.ModelFloatPropertyDataV25),\n        ];\n\n        this.ModelParticleCloudV25 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"drag\",\n          \"float32\",\n          \"emitterIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"obstacleIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"velocity\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.ModelParticleCurveV25 = [\"curveType\", \"uint8\", \"keys\", Utils.getArrayReader([\"[]\", \"float32\", 2])];\n\n        this.ModelParticleFlipbookV25 = [\n          \"columns\",\n          \"uint8\",\n          \"count\",\n          \"uint8\",\n          \"fps\",\n          \"float32\",\n          \"rows\",\n          \"uint8\",\n          \"start\",\n          \"uint8\",\n        ];\n\n        this.ModelParticleEmitterV25 = [\n          \"acceleration\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"accelerationDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"accelerationDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"alignmentType\",\n          \"uint8\",\n          \"alignmentDir\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorBegin\",\n          [\"[]\", \"float32\", 4],\n          \"colorEnd\",\n          [\"[]\", \"float32\", 4],\n          \"colorPeriod\",\n          \"float32\",\n          \"colorFalloff\",\n          [\"[]\", \"float32\", 2],\n          \"drag\",\n          \"float32\",\n          \"emitterFlags\",\n          \"uint32\",\n          \"opacityCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV25),\n          \"opacityCurvePreset\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"flipbook\",\n          Utils.getPointerReader(this.ModelParticleFlipbookV25),\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"rotationChange\",\n          [\"[]\", \"float32\", 2],\n          \"rotationDrag\",\n          \"float32\",\n          \"rotationInitial\",\n          [\"[]\", \"float32\", 2],\n          \"scaleChange\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleInitial\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV25),\n          \"scaleCurvePreset\",\n          \"uint32\",\n          \"velocity\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"velocityDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"velocityDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"spawnGroupSize\",\n          [\"[]\", \"float32\", 2],\n          \"spawnPeriod\",\n          \"float32\",\n          \"spawnProbability\",\n          \"float32\",\n          \"spawnRadius\",\n          [\"[]\", \"float32\", 2],\n          \"spawnShape\",\n          \"uint8\",\n          \"spawnWindEmit\",\n          [\"[]\", \"float32\", 2],\n          \"spawnWindSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"texCoordRect\",\n          [\"[]\", \"float32\", 4],\n          \"visBoneIndex\",\n          \"uint32\",\n          \"windInfluence\",\n          \"uint8\",\n        ];\n\n        this.ModelCloudDataV25 = [\n          \"clouds\",\n          Utils.getArrayReader(this.ModelParticleCloudV25),\n          \"emitters\",\n          Utils.getArrayReader(this.ModelParticleEmitterV25),\n        ];\n\n        this.ModelObstacleDataV25 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"dragCoef\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"geoData\",\n          [\"[]\", \"float32\", 3],\n          \"gravityCoef\",\n          \"float32\",\n          \"response\",\n          \"uint8\",\n          \"type\",\n          \"uint8\",\n          \"visBoneIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelStreakV25 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"anchorIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"bone\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"jitter\",\n          \"float32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"noise\",\n          \"float32\",\n          \"spawnDist\",\n          \"float32\",\n          \"stretchDist\",\n          \"float32\",\n          \"texScale\",\n          \"float32\",\n          \"visBoneIndex\",\n          \"uint32\",\n          \"wind\",\n          \"float32\",\n        ];\n\n        this.ModelStreakAnchorV25 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"color\",\n          \"uint32\",\n          \"falloff\",\n          \"float32\",\n          \"lifetime\",\n          \"float32\",\n        ];\n\n        this.ModelStreakDataV25 = [\n          \"streaks\",\n          Utils.getArrayReader(this.ModelStreakV25),\n          \"anchors\",\n          Utils.getArrayReader(this.ModelStreakAnchorV25),\n        ];\n\n        this.ModelEffectLightV25 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"farDistance\",\n          \"float32\",\n          \"intensity\",\n          \"float32\",\n          \"nearDistance\",\n          \"float32\",\n          \"visBoneIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelLightDataV25 = [\"effectLights\", Utils.getArrayReader(this.ModelEffectLightV25)];\n\n        this.PackVertexType = [\"fvf\", \"uint32\", \"vertices\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelClothBoneWeightV25 = [\"token\", Utils.getQWordReader(), \"weight\", \"uint8\"];\n\n        this.ModelClothMeshGroupV25 = [\"weights\", Utils.getArrayReader(this.ModelClothBoneWeightV25)];\n\n        this.ModelClothConstraintV25 = [\"vertIndexA\", \"uint16\", \"vertIndexB\", \"uint16\", \"distance\", \"float32\"];\n\n        this.ModelClothDataV25 = [\n          \"materialIndex\",\n          \"uint32\",\n          \"flags\",\n          \"uint8\",\n          \"gravity\",\n          \"float32\",\n          \"weight\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n          \"rigidness\",\n          \"uint8\",\n          \"mesh\",\n          this.PackVertexType,\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"lockCount\",\n          \"uint16\",\n          \"groups\",\n          Utils.getArrayReader(this.ModelClothMeshGroupV25),\n          \"softLocks\",\n          Utils.getArrayReader(\"uint8\"),\n          \"lod0Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV25),\n          \"lod1Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV25),\n          \"lod1VertexCount\",\n          \"uint16\",\n          \"lod1Indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"barycentricCoords\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"barycentricIndices\",\n          Utils.getArrayReader(\"uint16\"),\n        ];\n\n        this.__root = this.ModelFileDataV25 = [\n          \"materials\",\n          Utils.getRefArrayReader(this.ModelMaterialDataV25),\n          \"meshes\",\n          Utils.getRefArrayReader(this.ModelMeshDataV25),\n          \"model\",\n          Utils.getPointerReader(this.ModelModelDataV25),\n          \"properties\",\n          Utils.getPointerReader(this.ModelPropertyDataV25),\n          \"cloudData\",\n          Utils.getPointerReader(this.ModelCloudDataV25),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelObstacleDataV25),\n          \"streakData\",\n          Utils.getPointerReader(this.ModelStreakDataV25),\n          \"lightData\",\n          Utils.getPointerReader(this.ModelLightDataV25),\n          \"clothData\",\n          Utils.getArrayReader(this.ModelClothDataV25),\n          \"actionOffsetNames\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"actionOffsets\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"lodOverride\",\n          [\"[]\", \"float32\", 2],\n          \"soundScript\",\n          Utils.getFileNameReader(),\n        ];\n      },\n\n      // => Version: 24, ReferencedFunction: 0xF29BC0\n      24: function () {\n        this.ModelTextureDataV24 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"textureFlags\",\n          \"uint32\",\n          \"token\",\n          Utils.getQWordReader(),\n          \"blitId\",\n          Utils.getQWordReader(),\n          \"uvAnimId\",\n          \"uint8\",\n          \"uvPSInputIndex\",\n          \"uint8\",\n        ];\n\n        this.ModelConstantDataV24 = [\"name\", \"uint32\", \"value\", [\"[]\", \"float32\", 4], \"constantFlags\", \"uint32\"];\n\n        this.ModelMaterialDataV24 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"materialFlags\",\n          \"uint32\",\n          \"sortOrder\",\n          \"uint32\",\n          \"texCoordCount\",\n          \"uint8\",\n          \"textures\",\n          Utils.getArrayReader(this.ModelTextureDataV24),\n          \"constants\",\n          Utils.getArrayReader(this.ModelConstantDataV24),\n        ];\n\n        this.ModelMeshLodDataV24 = [\"indices\", Utils.getArrayReader(\"uint16\")];\n\n        this.ModelMeshMorphTargetV24 = [\n          \"positionIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"positions\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"normalIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"normals\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"meshName\",\n          Utils.getStringReader(),\n        ];\n\n        this.PackGrannyMeshType = [\"mesh\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelMeshDataV24 = [\n          \"lods\",\n          Utils.getArrayReader(this.ModelMeshLodDataV24),\n          \"morphTargets\",\n          Utils.getArrayReader(this.ModelMeshMorphTargetV24),\n          \"mesh\",\n          this.PackGrannyMeshType,\n          \"flags\",\n          \"uint32\",\n          \"visBoneIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"seamVertIndices\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n\n        this.ModelTransformDataV24 = [\n          \"Flags\",\n          \"uint32\",\n          \"Position\",\n          [\"[]\", \"float32\", 3],\n          \"Orientation\",\n          [\"[]\", \"float32\", 4],\n          \"ScaleShear\",\n          [\"[]\", [\"[]\", \"float32\", 3], 3],\n        ];\n\n        this.ModelBoneDataV24 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"ParentIndex\",\n          \"uint32\",\n          \"LocalTransform\",\n          this.ModelTransformDataV24,\n          \"InverseWorld4x4\",\n          [\"[]\", [\"[]\", \"float32\", 4], 4],\n          \"LODError\",\n          \"float32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n        ];\n\n        this.ModelSkeletonDataV24 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Bones\",\n          Utils.getArrayReader(this.ModelBoneDataV24),\n          \"LODType\",\n          \"uint32\",\n        ];\n\n        this.ModelMeshBindingDataV24 = [\"Mesh\", Utils.getPointerReader(\"uint8\")];\n\n        this.PackGrannyTrackMaskType = [\"trackMask\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelTrackMaskV24 = [\"trackMask\", this.PackGrannyTrackMaskType, \"token\", Utils.getQWordReader()];\n\n        this.ModelModelDataV24 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Skeleton\",\n          Utils.getPointerReader(this.ModelSkeletonDataV24),\n          \"InitialPlacement\",\n          this.ModelTransformDataV24,\n          \"MeshBindings\",\n          Utils.getArrayReader(this.ModelMeshBindingDataV24),\n          \"boneFlags\",\n          Utils.getArrayReader(\"uint32\"),\n          \"emitterBones\",\n          Utils.getArrayReader(\"uint32\"),\n          \"trackMasks\",\n          Utils.getArrayReader(this.ModelTrackMaskV24),\n          \"skeletonHash\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.ModelFloatPropertyDataV24 = [\"token\", Utils.getQWordReader(), \"value\", \"float32\"];\n\n        this.ModelPropertyDataV24 = [\n          \"boolTokens\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"floatValues\",\n          Utils.getArrayReader(this.ModelFloatPropertyDataV24),\n        ];\n\n        this.ModelParticleCloudV24 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"drag\",\n          \"float32\",\n          \"emitterIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"obstacleIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"velocity\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.ModelParticleCurveV24 = [\"curveType\", \"uint8\", \"keys\", Utils.getArrayReader([\"[]\", \"float32\", 2])];\n\n        this.ModelParticleFlipbookV24 = [\n          \"columns\",\n          \"uint8\",\n          \"count\",\n          \"uint8\",\n          \"fps\",\n          \"uint32\",\n          \"rows\",\n          \"uint8\",\n          \"start\",\n          \"uint8\",\n        ];\n\n        this.ModelParticleEmitterV24 = [\n          \"acceleration\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"accelerationDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"accelerationDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"alignmentType\",\n          \"uint8\",\n          \"alignmentDir\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorBegin\",\n          [\"[]\", \"float32\", 4],\n          \"colorEnd\",\n          [\"[]\", \"float32\", 4],\n          \"colorPeriod\",\n          \"float32\",\n          \"colorFalloff\",\n          [\"[]\", \"float32\", 2],\n          \"drag\",\n          \"float32\",\n          \"emitterFlags\",\n          \"uint32\",\n          \"opacityCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV24),\n          \"opacityCurvePreset\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"flipbook\",\n          Utils.getPointerReader(this.ModelParticleFlipbookV24),\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"rotationChange\",\n          [\"[]\", \"float32\", 2],\n          \"rotationDrag\",\n          \"float32\",\n          \"rotationInitial\",\n          [\"[]\", \"float32\", 2],\n          \"scaleChange\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleInitial\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV24),\n          \"scaleCurvePreset\",\n          \"uint32\",\n          \"velocity\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"velocityDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"velocityDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"spawnGroupSize\",\n          [\"[]\", \"float32\", 2],\n          \"spawnPeriod\",\n          \"float32\",\n          \"spawnProbability\",\n          \"float32\",\n          \"spawnRadius\",\n          [\"[]\", \"float32\", 2],\n          \"spawnShape\",\n          \"uint8\",\n          \"spawnWindEmit\",\n          [\"[]\", \"float32\", 2],\n          \"spawnWindSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"texCoordRect\",\n          [\"[]\", \"float32\", 4],\n          \"visBoneIndex\",\n          \"uint32\",\n          \"windInfluence\",\n          \"uint8\",\n        ];\n\n        this.ModelCloudDataV24 = [\n          \"clouds\",\n          Utils.getArrayReader(this.ModelParticleCloudV24),\n          \"emitters\",\n          Utils.getArrayReader(this.ModelParticleEmitterV24),\n        ];\n\n        this.ModelObstacleDataV24 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"dragCoef\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"geoData\",\n          [\"[]\", \"float32\", 3],\n          \"gravityCoef\",\n          \"float32\",\n          \"response\",\n          \"uint8\",\n          \"type\",\n          \"uint8\",\n          \"visBoneIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelStreakV24 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"anchorIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"bone\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"noise\",\n          \"float32\",\n          \"spawnDist\",\n          \"float32\",\n          \"stretchDist\",\n          \"float32\",\n          \"texScale\",\n          \"float32\",\n          \"visBoneIndex\",\n          \"uint32\",\n          \"wind\",\n          \"float32\",\n        ];\n\n        this.ModelStreakAnchorV24 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"color\",\n          \"uint32\",\n          \"falloff\",\n          \"float32\",\n          \"lifetime\",\n          \"float32\",\n        ];\n\n        this.ModelStreakDataV24 = [\n          \"streaks\",\n          Utils.getArrayReader(this.ModelStreakV24),\n          \"anchors\",\n          Utils.getArrayReader(this.ModelStreakAnchorV24),\n        ];\n\n        this.ModelEffectLightV24 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"farDistance\",\n          \"float32\",\n          \"intensity\",\n          \"float32\",\n          \"nearDistance\",\n          \"float32\",\n          \"visBoneIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelLightDataV24 = [\"effectLights\", Utils.getArrayReader(this.ModelEffectLightV24)];\n\n        this.PackVertexType = [\"fvf\", \"uint32\", \"vertices\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelClothBoneWeightV24 = [\"token\", Utils.getQWordReader(), \"weight\", \"uint8\"];\n\n        this.ModelClothMeshGroupV24 = [\"weights\", Utils.getArrayReader(this.ModelClothBoneWeightV24)];\n\n        this.ModelClothConstraintV24 = [\"vertIndexA\", \"uint16\", \"vertIndexB\", \"uint16\", \"distance\", \"float32\"];\n\n        this.ModelClothDataV24 = [\n          \"materialIndex\",\n          \"uint32\",\n          \"flags\",\n          \"uint8\",\n          \"gravity\",\n          \"float32\",\n          \"weight\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n          \"rigidness\",\n          \"uint8\",\n          \"mesh\",\n          this.PackVertexType,\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"lockCount\",\n          \"uint16\",\n          \"groups\",\n          Utils.getArrayReader(this.ModelClothMeshGroupV24),\n          \"softLocks\",\n          Utils.getArrayReader(\"uint8\"),\n          \"lod0Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV24),\n          \"lod1Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV24),\n          \"lod1VertexCount\",\n          \"uint16\",\n          \"lod1Indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"barycentricCoords\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"barycentricIndices\",\n          Utils.getArrayReader(\"uint16\"),\n        ];\n\n        this.__root = this.ModelFileDataV24 = [\n          \"materials\",\n          Utils.getRefArrayReader(this.ModelMaterialDataV24),\n          \"meshes\",\n          Utils.getRefArrayReader(this.ModelMeshDataV24),\n          \"model\",\n          Utils.getPointerReader(this.ModelModelDataV24),\n          \"properties\",\n          Utils.getPointerReader(this.ModelPropertyDataV24),\n          \"cloudData\",\n          Utils.getPointerReader(this.ModelCloudDataV24),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelObstacleDataV24),\n          \"streakData\",\n          Utils.getPointerReader(this.ModelStreakDataV24),\n          \"lightData\",\n          Utils.getPointerReader(this.ModelLightDataV24),\n          \"clothData\",\n          Utils.getArrayReader(this.ModelClothDataV24),\n          \"actionOffsetNames\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"actionOffsets\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"lodOverride\",\n          [\"[]\", \"float32\", 2],\n          \"soundScript\",\n          Utils.getFileNameReader(),\n        ];\n      },\n\n      // => Version: 23, ReferencedFunction: 0xF29B50\n      23: function () {\n        this.ModelTextureDataV23 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"textureFlags\",\n          \"uint32\",\n          \"token\",\n          Utils.getQWordReader(),\n          \"blitId\",\n          Utils.getQWordReader(),\n          \"uvAnimId\",\n          \"uint8\",\n          \"uvPSInputIndex\",\n          \"uint8\",\n        ];\n\n        this.ModelConstantDataV23 = [\"name\", \"uint32\", \"value\", [\"[]\", \"float32\", 4], \"constantFlags\", \"uint32\"];\n\n        this.ModelMaterialDataV23 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"materialFlags\",\n          \"uint32\",\n          \"sortOrder\",\n          \"uint32\",\n          \"texCoordCount\",\n          \"uint8\",\n          \"textures\",\n          Utils.getArrayReader(this.ModelTextureDataV23),\n          \"constants\",\n          Utils.getArrayReader(this.ModelConstantDataV23),\n        ];\n\n        this.ModelMeshLodDataV23 = [\"indices\", Utils.getArrayReader(\"uint16\")];\n\n        this.ModelMeshMorphTargetV23 = [\n          \"positionIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"positions\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"normalIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"normals\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"meshName\",\n          Utils.getStringReader(),\n        ];\n\n        this.PackGrannyMeshType = [\"mesh\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelMeshDataV23 = [\n          \"lods\",\n          Utils.getArrayReader(this.ModelMeshLodDataV23),\n          \"morphTargets\",\n          Utils.getArrayReader(this.ModelMeshMorphTargetV23),\n          \"mesh\",\n          this.PackGrannyMeshType,\n          \"flags\",\n          \"uint32\",\n          \"visBoneIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"seamVertIndices\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n\n        this.ModelTransformDataV23 = [\n          \"Flags\",\n          \"uint32\",\n          \"Position\",\n          [\"[]\", \"float32\", 3],\n          \"Orientation\",\n          [\"[]\", \"float32\", 4],\n          \"ScaleShear\",\n          [\"[]\", [\"[]\", \"float32\", 3], 3],\n        ];\n\n        this.ModelBoneDataV23 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"ParentIndex\",\n          \"uint32\",\n          \"LocalTransform\",\n          this.ModelTransformDataV23,\n          \"InverseWorld4x4\",\n          [\"[]\", [\"[]\", \"float32\", 4], 4],\n          \"LODError\",\n          \"float32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n        ];\n\n        this.ModelSkeletonDataV23 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Bones\",\n          Utils.getArrayReader(this.ModelBoneDataV23),\n          \"LODType\",\n          \"uint32\",\n        ];\n\n        this.ModelMeshBindingDataV23 = [\"Mesh\", Utils.getPointerReader(\"uint8\")];\n\n        this.PackGrannyTrackMaskType = [\"trackMask\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelTrackMaskV23 = [\"trackMask\", this.PackGrannyTrackMaskType, \"token\", Utils.getQWordReader()];\n\n        this.ModelModelDataV23 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Skeleton\",\n          Utils.getPointerReader(this.ModelSkeletonDataV23),\n          \"InitialPlacement\",\n          this.ModelTransformDataV23,\n          \"MeshBindings\",\n          Utils.getArrayReader(this.ModelMeshBindingDataV23),\n          \"boneFlags\",\n          Utils.getArrayReader(\"uint32\"),\n          \"emitterBones\",\n          Utils.getArrayReader(\"uint32\"),\n          \"trackMasks\",\n          Utils.getArrayReader(this.ModelTrackMaskV23),\n          \"skeletonHash\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.ModelFloatPropertyDataV23 = [\"token\", Utils.getQWordReader(), \"value\", \"float32\"];\n\n        this.ModelPropertyDataV23 = [\n          \"boolTokens\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"floatValues\",\n          Utils.getArrayReader(this.ModelFloatPropertyDataV23),\n        ];\n\n        this.ModelParticleCloudV23 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"drag\",\n          \"float32\",\n          \"emitterIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"obstacleIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"velocity\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.ModelParticleCurveV23 = [\"curveType\", \"uint8\", \"keys\", Utils.getArrayReader([\"[]\", \"float32\", 2])];\n\n        this.ModelParticleFlipbookV23 = [\n          \"columns\",\n          \"uint8\",\n          \"count\",\n          \"uint8\",\n          \"fps\",\n          \"uint32\",\n          \"rows\",\n          \"uint8\",\n          \"start\",\n          \"uint8\",\n        ];\n\n        this.ModelParticleEmitterV23 = [\n          \"acceleration\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"accelerationDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"accelerationDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"alignmentType\",\n          \"uint8\",\n          \"alignmentDir\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorBegin\",\n          [\"[]\", \"float32\", 4],\n          \"colorEnd\",\n          [\"[]\", \"float32\", 4],\n          \"colorPeriod\",\n          \"float32\",\n          \"colorFalloff\",\n          [\"[]\", \"float32\", 2],\n          \"drag\",\n          \"float32\",\n          \"opacityCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV23),\n          \"opacityCurvePreset\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"flipbook\",\n          Utils.getPointerReader(this.ModelParticleFlipbookV23),\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"rotationChange\",\n          [\"[]\", \"float32\", 2],\n          \"rotationDrag\",\n          \"float32\",\n          \"rotationInitial\",\n          [\"[]\", \"float32\", 2],\n          \"scaleChange\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleInitial\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV23),\n          \"scaleCurvePreset\",\n          \"uint32\",\n          \"velocity\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"velocityDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"velocityDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"spawnGroupSize\",\n          [\"[]\", \"float32\", 2],\n          \"spawnPeriod\",\n          \"float32\",\n          \"spawnProbability\",\n          \"float32\",\n          \"spawnRadius\",\n          [\"[]\", \"float32\", 2],\n          \"spawnShape\",\n          \"uint8\",\n          \"spawnWindEmit\",\n          [\"[]\", \"float32\", 2],\n          \"spawnWindSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"texCoordRect\",\n          [\"[]\", \"float32\", 4],\n          \"visBoneIndex\",\n          \"uint32\",\n          \"windInfluence\",\n          \"uint8\",\n        ];\n\n        this.ModelCloudDataV23 = [\n          \"clouds\",\n          Utils.getArrayReader(this.ModelParticleCloudV23),\n          \"emitters\",\n          Utils.getArrayReader(this.ModelParticleEmitterV23),\n        ];\n\n        this.ModelObstacleDataV23 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"dragCoef\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"geoData\",\n          [\"[]\", \"float32\", 3],\n          \"gravityCoef\",\n          \"float32\",\n          \"response\",\n          \"uint8\",\n          \"type\",\n          \"uint8\",\n          \"visBoneIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelStreakV23 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"anchorIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"bone\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"noise\",\n          \"float32\",\n          \"spawnDist\",\n          \"float32\",\n          \"stretchDist\",\n          \"float32\",\n          \"texScale\",\n          \"float32\",\n          \"visBoneIndex\",\n          \"uint32\",\n          \"wind\",\n          \"float32\",\n        ];\n\n        this.ModelStreakAnchorV23 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"color\",\n          \"uint32\",\n          \"falloff\",\n          \"float32\",\n          \"lifetime\",\n          \"float32\",\n        ];\n\n        this.ModelStreakDataV23 = [\n          \"streaks\",\n          Utils.getArrayReader(this.ModelStreakV23),\n          \"anchors\",\n          Utils.getArrayReader(this.ModelStreakAnchorV23),\n        ];\n\n        this.ModelEffectLightV23 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"farDistance\",\n          \"float32\",\n          \"intensity\",\n          \"float32\",\n          \"nearDistance\",\n          \"float32\",\n          \"visBoneIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelLightDataV23 = [\"effectLights\", Utils.getArrayReader(this.ModelEffectLightV23)];\n\n        this.PackVertexType = [\"fvf\", \"uint32\", \"vertices\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelClothBoneWeightV23 = [\"token\", Utils.getQWordReader(), \"weight\", \"uint8\"];\n\n        this.ModelClothMeshGroupV23 = [\"weights\", Utils.getArrayReader(this.ModelClothBoneWeightV23)];\n\n        this.ModelClothConstraintV23 = [\"vertIndexA\", \"uint16\", \"vertIndexB\", \"uint16\", \"distance\", \"float32\"];\n\n        this.ModelClothDataV23 = [\n          \"materialIndex\",\n          \"uint32\",\n          \"flags\",\n          \"uint8\",\n          \"gravity\",\n          \"float32\",\n          \"weight\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n          \"rigidness\",\n          \"uint8\",\n          \"mesh\",\n          this.PackVertexType,\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"lockCount\",\n          \"uint16\",\n          \"groups\",\n          Utils.getArrayReader(this.ModelClothMeshGroupV23),\n          \"softLocks\",\n          Utils.getArrayReader(\"uint8\"),\n          \"lod0Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV23),\n          \"lod1Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV23),\n          \"lod1VertexCount\",\n          \"uint16\",\n          \"lod1Indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"barycentricCoords\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"barycentricIndices\",\n          Utils.getArrayReader(\"uint16\"),\n        ];\n\n        this.__root = this.ModelFileDataV23 = [\n          \"materials\",\n          Utils.getRefArrayReader(this.ModelMaterialDataV23),\n          \"meshes\",\n          Utils.getRefArrayReader(this.ModelMeshDataV23),\n          \"model\",\n          Utils.getPointerReader(this.ModelModelDataV23),\n          \"properties\",\n          Utils.getPointerReader(this.ModelPropertyDataV23),\n          \"cloudData\",\n          Utils.getPointerReader(this.ModelCloudDataV23),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelObstacleDataV23),\n          \"streakData\",\n          Utils.getPointerReader(this.ModelStreakDataV23),\n          \"lightData\",\n          Utils.getPointerReader(this.ModelLightDataV23),\n          \"clothData\",\n          Utils.getArrayReader(this.ModelClothDataV23),\n          \"actionOffsetNames\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"actionOffsets\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"lodOverride\",\n          [\"[]\", \"float32\", 2],\n          \"soundScript\",\n          Utils.getFileNameReader(),\n        ];\n      },\n\n      // => Version: 22\n      22: function () {\n        this.ModelTextureDataV22 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"textureFlags\",\n          \"uint32\",\n          \"token\",\n          Utils.getQWordReader(),\n          \"blitId\",\n          Utils.getQWordReader(),\n          \"uvAnimId\",\n          \"uint8\",\n          \"uvPSInputIndex\",\n          \"uint8\",\n        ];\n\n        this.ModelConstantDataV22 = [\"name\", \"uint32\", \"value\", [\"[]\", \"float32\", 4], \"constantFlags\", \"uint32\"];\n\n        this.ModelMaterialDataV22 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"materialFlags\",\n          \"uint32\",\n          \"sortOrder\",\n          \"uint32\",\n          \"texCoordCount\",\n          \"uint8\",\n          \"textures\",\n          Utils.getArrayReader(this.ModelTextureDataV22),\n          \"constants\",\n          Utils.getArrayReader(this.ModelConstantDataV22),\n        ];\n\n        this.ModelMeshLodDataV22 = [\"indices\", Utils.getArrayReader(\"uint16\")];\n\n        this.ModelMeshMorphTargetV22 = [\n          \"positionIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"positions\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"normalIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"normals\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"meshName\",\n          Utils.getStringReader(),\n        ];\n\n        this.PackGrannyMeshType = [\"mesh\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelMeshDataV22 = [\n          \"lods\",\n          Utils.getArrayReader(this.ModelMeshLodDataV22),\n          \"morphTargets\",\n          Utils.getArrayReader(this.ModelMeshMorphTargetV22),\n          \"mesh\",\n          this.PackGrannyMeshType,\n          \"flags\",\n          \"uint32\",\n          \"visBoneIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"seamVertIndices\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n\n        this.ModelTransformDataV22 = [\n          \"Flags\",\n          \"uint32\",\n          \"Position\",\n          [\"[]\", \"float32\", 3],\n          \"Orientation\",\n          [\"[]\", \"float32\", 4],\n          \"ScaleShear\",\n          [\"[]\", [\"[]\", \"float32\", 3], 3],\n        ];\n\n        this.ModelBoneDataV22 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"ParentIndex\",\n          \"uint32\",\n          \"LocalTransform\",\n          this.ModelTransformDataV22,\n          \"InverseWorld4x4\",\n          [\"[]\", [\"[]\", \"float32\", 4], 4],\n          \"LODError\",\n          \"float32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n        ];\n\n        this.ModelSkeletonDataV22 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Bones\",\n          Utils.getArrayReader(this.ModelBoneDataV22),\n          \"LODType\",\n          \"uint32\",\n        ];\n\n        this.ModelMeshBindingDataV22 = [\"Mesh\", Utils.getPointerReader(\"uint8\")];\n\n        this.PackGrannyTrackMaskType = [\"trackMask\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelTrackMaskV22 = [\"trackMask\", this.PackGrannyTrackMaskType, \"token\", Utils.getQWordReader()];\n\n        this.ModelModelDataV22 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Skeleton\",\n          Utils.getPointerReader(this.ModelSkeletonDataV22),\n          \"InitialPlacement\",\n          this.ModelTransformDataV22,\n          \"MeshBindings\",\n          Utils.getArrayReader(this.ModelMeshBindingDataV22),\n          \"boneFlags\",\n          Utils.getArrayReader(\"uint32\"),\n          \"emitterBones\",\n          Utils.getArrayReader(\"uint32\"),\n          \"trackMasks\",\n          Utils.getArrayReader(this.ModelTrackMaskV22),\n          \"skeletonHash\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.ModelFloatPropertyDataV22 = [\"token\", Utils.getQWordReader(), \"value\", \"float32\"];\n\n        this.ModelPropertyDataV22 = [\n          \"boolTokens\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"floatValues\",\n          Utils.getArrayReader(this.ModelFloatPropertyDataV22),\n        ];\n\n        this.ModelParticleCloudV22 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"drag\",\n          \"float32\",\n          \"emitterIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"obstacleIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"velocity\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.ModelParticleCurveV22 = [\"curveType\", \"uint8\", \"keys\", Utils.getArrayReader([\"[]\", \"float32\", 2])];\n\n        this.ModelParticleFlipbookV22 = [\n          \"columns\",\n          \"uint8\",\n          \"count\",\n          \"uint8\",\n          \"fps\",\n          \"uint32\",\n          \"rows\",\n          \"uint8\",\n          \"start\",\n          \"uint8\",\n        ];\n\n        this.ModelParticleEmitterV22 = [\n          \"acceleration\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"accelerationDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"accelerationDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"alignmentType\",\n          \"uint8\",\n          \"alignmentDir\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorBegin\",\n          [\"[]\", \"float32\", 4],\n          \"colorEnd\",\n          [\"[]\", \"float32\", 4],\n          \"colorPeriod\",\n          \"float32\",\n          \"colorFalloff\",\n          [\"[]\", \"float32\", 2],\n          \"drag\",\n          \"float32\",\n          \"opacityCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV22),\n          \"opacityCurvePreset\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"flipbook\",\n          Utils.getPointerReader(this.ModelParticleFlipbookV22),\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"rotationChange\",\n          [\"[]\", \"float32\", 2],\n          \"rotationDrag\",\n          \"float32\",\n          \"rotationInitial\",\n          [\"[]\", \"float32\", 2],\n          \"scaleChange\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleInitial\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV22),\n          \"scaleCurvePreset\",\n          \"uint32\",\n          \"velocity\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"velocityDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"velocityDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"spawnGroupSize\",\n          [\"[]\", \"float32\", 2],\n          \"spawnPeriod\",\n          \"float32\",\n          \"spawnProbability\",\n          \"float32\",\n          \"spawnRadius\",\n          [\"[]\", \"float32\", 2],\n          \"spawnShape\",\n          \"uint8\",\n          \"spawnWindEmit\",\n          [\"[]\", \"float32\", 2],\n          \"spawnWindSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"texCoordRect\",\n          [\"[]\", \"float32\", 4],\n          \"visBoneIndex\",\n          \"uint32\",\n          \"windInfluence\",\n          \"uint8\",\n        ];\n\n        this.ModelParticleObstacleV22 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"dragCoef\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"geoData\",\n          [\"[]\", \"float32\", 3],\n          \"gravityCoef\",\n          \"float32\",\n          \"response\",\n          \"uint8\",\n          \"type\",\n          \"uint8\",\n          \"visBoneIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelCloudDataV22 = [\n          \"clouds\",\n          Utils.getArrayReader(this.ModelParticleCloudV22),\n          \"emitters\",\n          Utils.getArrayReader(this.ModelParticleEmitterV22),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelParticleObstacleV22),\n        ];\n\n        this.ModelStreakV22 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"anchorIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"bone\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"noise\",\n          \"float32\",\n          \"spawnDist\",\n          \"float32\",\n          \"stretchDist\",\n          \"float32\",\n          \"texScale\",\n          \"float32\",\n          \"visBoneIndex\",\n          \"uint32\",\n          \"wind\",\n          \"float32\",\n        ];\n\n        this.ModelStreakAnchorV22 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"color\",\n          \"uint32\",\n          \"falloff\",\n          \"float32\",\n          \"lifetime\",\n          \"float32\",\n        ];\n\n        this.ModelStreakDataV22 = [\n          \"streaks\",\n          Utils.getArrayReader(this.ModelStreakV22),\n          \"anchors\",\n          Utils.getArrayReader(this.ModelStreakAnchorV22),\n        ];\n\n        this.ModelEffectLightV22 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"farDistance\",\n          \"float32\",\n          \"intensity\",\n          \"float32\",\n          \"nearDistance\",\n          \"float32\",\n          \"visBoneIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelLightDataV22 = [\"effectLights\", Utils.getArrayReader(this.ModelEffectLightV22)];\n\n        this.PackVertexType = [\"fvf\", \"uint32\", \"vertices\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelClothBoneWeightV22 = [\"token\", Utils.getQWordReader(), \"weight\", \"uint8\"];\n\n        this.ModelClothMeshGroupV22 = [\"weights\", Utils.getArrayReader(this.ModelClothBoneWeightV22)];\n\n        this.ModelClothConstraintV22 = [\"vertIndexA\", \"uint16\", \"vertIndexB\", \"uint16\", \"distance\", \"float32\"];\n\n        this.ModelClothDataV22 = [\n          \"materialIndex\",\n          \"uint32\",\n          \"flags\",\n          \"uint8\",\n          \"gravity\",\n          \"float32\",\n          \"weight\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n          \"rigidness\",\n          \"uint8\",\n          \"mesh\",\n          this.PackVertexType,\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"lockCount\",\n          \"uint16\",\n          \"groups\",\n          Utils.getArrayReader(this.ModelClothMeshGroupV22),\n          \"softLocks\",\n          Utils.getArrayReader(\"uint8\"),\n          \"lod0Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV22),\n          \"lod1Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV22),\n          \"lod1VertexCount\",\n          \"uint16\",\n          \"lod1Indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"barycentricCoords\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"barycentricIndices\",\n          Utils.getArrayReader(\"uint16\"),\n        ];\n\n        this.__root = this.ModelFileDataV22 = [\n          \"materials\",\n          Utils.getRefArrayReader(this.ModelMaterialDataV22),\n          \"meshes\",\n          Utils.getRefArrayReader(this.ModelMeshDataV22),\n          \"model\",\n          Utils.getPointerReader(this.ModelModelDataV22),\n          \"properties\",\n          Utils.getPointerReader(this.ModelPropertyDataV22),\n          \"cloudData\",\n          Utils.getPointerReader(this.ModelCloudDataV22),\n          \"streakData\",\n          Utils.getPointerReader(this.ModelStreakDataV22),\n          \"lightData\",\n          Utils.getPointerReader(this.ModelLightDataV22),\n          \"clothData\",\n          Utils.getArrayReader(this.ModelClothDataV22),\n          \"actionOffsetNames\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"actionOffsets\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"lodOverride\",\n          [\"[]\", \"float32\", 2],\n          \"soundScript\",\n          Utils.getFileNameReader(),\n        ];\n      },\n\n      // => Version: 21, ReferencedFunction: 0xF29A90\n      21: function () {\n        this.ModelTextureDataV21 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"textureFlags\",\n          \"uint32\",\n          \"token\",\n          Utils.getQWordReader(),\n          \"blitId\",\n          Utils.getQWordReader(),\n          \"uvAnimId\",\n          \"uint8\",\n          \"uvPSInputIndex\",\n          \"uint8\",\n        ];\n\n        this.ModelConstantDataV21 = [\"name\", \"uint32\", \"value\", [\"[]\", \"float32\", 4], \"constantFlags\", \"uint32\"];\n\n        this.ModelMaterialDataV21 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"materialFlags\",\n          \"uint32\",\n          \"sortOrder\",\n          \"uint32\",\n          \"texCoordCount\",\n          \"uint8\",\n          \"textures\",\n          Utils.getArrayReader(this.ModelTextureDataV21),\n          \"constants\",\n          Utils.getArrayReader(this.ModelConstantDataV21),\n        ];\n\n        this.ModelMeshLodDataV21 = [\"indices\", Utils.getArrayReader(\"uint16\")];\n\n        this.ModelMeshMorphTargetV21 = [\n          \"positionIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"positions\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"normalIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"normals\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"meshName\",\n          Utils.getStringReader(),\n        ];\n\n        this.PackGrannyMeshType = [\"mesh\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelMeshDataV21 = [\n          \"lods\",\n          Utils.getArrayReader(this.ModelMeshLodDataV21),\n          \"morphTargets\",\n          Utils.getArrayReader(this.ModelMeshMorphTargetV21),\n          \"mesh\",\n          this.PackGrannyMeshType,\n          \"flags\",\n          \"uint32\",\n          \"visBoneIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"seamVertIndices\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n\n        this.ModelTransformDataV21 = [\n          \"Flags\",\n          \"uint32\",\n          \"Position\",\n          [\"[]\", \"float32\", 3],\n          \"Orientation\",\n          [\"[]\", \"float32\", 4],\n          \"ScaleShear\",\n          [\"[]\", [\"[]\", \"float32\", 3], 3],\n        ];\n\n        this.ModelBoneDataV21 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"ParentIndex\",\n          \"uint32\",\n          \"LocalTransform\",\n          this.ModelTransformDataV21,\n          \"InverseWorld4x4\",\n          [\"[]\", [\"[]\", \"float32\", 4], 4],\n          \"LODError\",\n          \"float32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n        ];\n\n        this.ModelSkeletonDataV21 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Bones\",\n          Utils.getArrayReader(this.ModelBoneDataV21),\n          \"LODType\",\n          \"uint32\",\n        ];\n\n        this.ModelMeshBindingDataV21 = [\"Mesh\", Utils.getPointerReader(\"uint8\")];\n\n        this.PackGrannyTrackMaskType = [\"trackMask\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelTrackMaskV21 = [\"trackMask\", this.PackGrannyTrackMaskType, \"token\", Utils.getQWordReader()];\n\n        this.ModelModelDataV21 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Skeleton\",\n          Utils.getPointerReader(this.ModelSkeletonDataV21),\n          \"InitialPlacement\",\n          this.ModelTransformDataV21,\n          \"MeshBindings\",\n          Utils.getArrayReader(this.ModelMeshBindingDataV21),\n          \"boneFlags\",\n          Utils.getArrayReader(\"uint32\"),\n          \"emitterBones\",\n          Utils.getArrayReader(\"uint32\"),\n          \"trackMasks\",\n          Utils.getArrayReader(this.ModelTrackMaskV21),\n          \"skeletonHash\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.ModelFloatPropertyDataV21 = [\"token\", Utils.getQWordReader(), \"value\", \"float32\"];\n\n        this.ModelPropertyDataV21 = [\n          \"boolTokens\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"floatValues\",\n          Utils.getArrayReader(this.ModelFloatPropertyDataV21),\n        ];\n\n        this.ModelParticleCloudV21 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"drag\",\n          \"float32\",\n          \"emitterIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"obstacleIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"velocity\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.ModelParticleCurveV21 = [\"curveType\", \"uint8\", \"keys\", Utils.getArrayReader([\"[]\", \"float32\", 2])];\n\n        this.ModelParticleFlipbookV21 = [\n          \"columns\",\n          \"uint8\",\n          \"count\",\n          \"uint8\",\n          \"fps\",\n          \"uint32\",\n          \"rows\",\n          \"uint8\",\n          \"start\",\n          \"uint8\",\n        ];\n\n        this.ModelParticleEmitterV21 = [\n          \"acceleration\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"accelerationDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"accelerationDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"alignmentType\",\n          \"uint8\",\n          \"alignmentDir\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorBegin\",\n          [\"[]\", \"float32\", 4],\n          \"colorEnd\",\n          [\"[]\", \"float32\", 4],\n          \"colorPeriod\",\n          \"float32\",\n          \"colorFalloff\",\n          [\"[]\", \"float32\", 2],\n          \"drag\",\n          \"float32\",\n          \"opacityCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV21),\n          \"opacityCurvePreset\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"flipbook\",\n          Utils.getPointerReader(this.ModelParticleFlipbookV21),\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"rotationChange\",\n          [\"[]\", \"float32\", 2],\n          \"rotationDrag\",\n          \"float32\",\n          \"rotationInitial\",\n          [\"[]\", \"float32\", 2],\n          \"scaleChange\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleInitial\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV21),\n          \"scaleCurvePreset\",\n          \"uint32\",\n          \"velocity\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"velocityDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"velocityDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"spawnGroupSize\",\n          [\"[]\", \"float32\", 2],\n          \"spawnPeriod\",\n          \"float32\",\n          \"spawnProbability\",\n          \"float32\",\n          \"spawnRadius\",\n          [\"[]\", \"float32\", 2],\n          \"spawnShape\",\n          \"uint8\",\n          \"spawnWindEmit\",\n          [\"[]\", \"float32\", 2],\n          \"spawnWindSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"texCoordRect\",\n          [\"[]\", \"float32\", 4],\n          \"visBoneIndex\",\n          \"uint32\",\n          \"windInfluence\",\n          \"uint8\",\n        ];\n\n        this.ModelParticleObstacleV21 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"dragCoef\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"geoData\",\n          [\"[]\", \"float32\", 3],\n          \"gravityCoef\",\n          \"float32\",\n          \"response\",\n          \"uint8\",\n          \"type\",\n          \"uint8\",\n          \"visBoneIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelCloudDataV21 = [\n          \"clouds\",\n          Utils.getArrayReader(this.ModelParticleCloudV21),\n          \"emitters\",\n          Utils.getArrayReader(this.ModelParticleEmitterV21),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelParticleObstacleV21),\n        ];\n\n        this.ModelStreakV21 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"anchorIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"bone\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"noise\",\n          \"float32\",\n          \"spawnDist\",\n          \"float32\",\n          \"stretchDist\",\n          \"float32\",\n          \"texScale\",\n          \"float32\",\n          \"visBoneIndex\",\n          \"uint32\",\n          \"wind\",\n          \"float32\",\n        ];\n\n        this.ModelStreakAnchorV21 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"color\",\n          \"uint32\",\n          \"falloff\",\n          \"float32\",\n          \"lifetime\",\n          \"float32\",\n        ];\n\n        this.ModelStreakDataV21 = [\n          \"streaks\",\n          Utils.getArrayReader(this.ModelStreakV21),\n          \"anchors\",\n          Utils.getArrayReader(this.ModelStreakAnchorV21),\n        ];\n\n        this.ModelEffectLightV21 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"farDistance\",\n          \"float32\",\n          \"intensity\",\n          \"float32\",\n          \"nearDistance\",\n          \"float32\",\n          \"visBoneIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelLightDataV21 = [\"effectLights\", Utils.getArrayReader(this.ModelEffectLightV21)];\n\n        this.PackVertexType = [\"fvf\", \"uint32\", \"vertices\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelClothBoneWeightV21 = [\"token\", Utils.getQWordReader(), \"weight\", \"uint8\"];\n\n        this.ModelClothMeshGroupV21 = [\"weights\", Utils.getArrayReader(this.ModelClothBoneWeightV21)];\n\n        this.ModelClothConstraintV21 = [\"vertIndexA\", \"uint16\", \"vertIndexB\", \"uint16\", \"distance\", \"float32\"];\n\n        this.ModelClothDataV21 = [\n          \"materialIndex\",\n          \"uint32\",\n          \"flags\",\n          \"uint8\",\n          \"gravity\",\n          \"float32\",\n          \"weight\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n          \"rigidness\",\n          \"uint8\",\n          \"mesh\",\n          this.PackVertexType,\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"lockCount\",\n          \"uint16\",\n          \"groups\",\n          Utils.getArrayReader(this.ModelClothMeshGroupV21),\n          \"softLocks\",\n          Utils.getArrayReader(\"uint8\"),\n          \"lod0Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV21),\n          \"lod1Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV21),\n          \"lod1VertexCount\",\n          \"uint16\",\n          \"lod1Indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"barycentricCoords\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"barycentricIndices\",\n          Utils.getArrayReader(\"uint16\"),\n        ];\n\n        this.__root = this.ModelFileDataV21 = [\n          \"materials\",\n          Utils.getRefArrayReader(this.ModelMaterialDataV21),\n          \"meshes\",\n          Utils.getRefArrayReader(this.ModelMeshDataV21),\n          \"model\",\n          Utils.getPointerReader(this.ModelModelDataV21),\n          \"properties\",\n          Utils.getPointerReader(this.ModelPropertyDataV21),\n          \"cloudData\",\n          Utils.getPointerReader(this.ModelCloudDataV21),\n          \"streakData\",\n          Utils.getPointerReader(this.ModelStreakDataV21),\n          \"lightData\",\n          Utils.getPointerReader(this.ModelLightDataV21),\n          \"clothData\",\n          Utils.getArrayReader(this.ModelClothDataV21),\n          \"actionOffsetNames\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"actionOffsets\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"lodOverride\",\n          [\"[]\", \"float32\", 2],\n          \"soundScript\",\n          Utils.getFileNameReader(),\n        ];\n      },\n\n      // => Version: 20, ReferencedFunction: 0xF298E0\n      20: function () {\n        this.ModelTextureDataV20 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"textureFlags\",\n          \"uint32\",\n          \"token\",\n          Utils.getQWordReader(),\n          \"blitId\",\n          Utils.getQWordReader(),\n          \"uvAnimId\",\n          \"uint8\",\n          \"uvPSInputIndex\",\n          \"uint8\",\n        ];\n\n        this.ModelConstantDataV20 = [\"name\", \"uint32\", \"value\", [\"[]\", \"float32\", 4], \"constantFlags\", \"uint32\"];\n\n        this.ModelMaterialDataV20 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"materialFlags\",\n          \"uint32\",\n          \"sortOrder\",\n          \"uint32\",\n          \"texCoordCount\",\n          \"uint8\",\n          \"textures\",\n          Utils.getArrayReader(this.ModelTextureDataV20),\n          \"constants\",\n          Utils.getArrayReader(this.ModelConstantDataV20),\n        ];\n\n        this.ModelMeshLodDataV20 = [\"indices\", Utils.getArrayReader(\"uint16\")];\n\n        this.ModelMeshMorphTargetV20 = [\n          \"positionIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"positions\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"normalIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"normals\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"meshName\",\n          Utils.getStringReader(),\n        ];\n\n        this.PackGrannyMeshType = [\"mesh\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelMeshDataV20 = [\n          \"lods\",\n          Utils.getArrayReader(this.ModelMeshLodDataV20),\n          \"morphTargets\",\n          Utils.getArrayReader(this.ModelMeshMorphTargetV20),\n          \"mesh\",\n          this.PackGrannyMeshType,\n          \"flags\",\n          \"uint32\",\n          \"visBoneIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"seamVertIndices\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n\n        this.ModelTransformDataV20 = [\n          \"Flags\",\n          \"uint32\",\n          \"Position\",\n          [\"[]\", \"float32\", 3],\n          \"Orientation\",\n          [\"[]\", \"float32\", 4],\n          \"ScaleShear\",\n          [\"[]\", [\"[]\", \"float32\", 3], 3],\n        ];\n\n        this.ModelBoneDataV20 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"ParentIndex\",\n          \"uint32\",\n          \"LocalTransform\",\n          this.ModelTransformDataV20,\n          \"InverseWorld4x4\",\n          [\"[]\", [\"[]\", \"float32\", 4], 4],\n          \"LODError\",\n          \"float32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n        ];\n\n        this.ModelSkeletonDataV20 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Bones\",\n          Utils.getArrayReader(this.ModelBoneDataV20),\n          \"LODType\",\n          \"uint32\",\n        ];\n\n        this.ModelMeshBindingDataV20 = [\"Mesh\", Utils.getPointerReader(\"uint8\")];\n\n        this.PackGrannyTrackMaskType = [\"trackMask\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelTrackMaskV20 = [\"trackMask\", this.PackGrannyTrackMaskType, \"token\", Utils.getQWordReader()];\n\n        this.ModelModelDataV20 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Skeleton\",\n          Utils.getPointerReader(this.ModelSkeletonDataV20),\n          \"InitialPlacement\",\n          this.ModelTransformDataV20,\n          \"MeshBindings\",\n          Utils.getArrayReader(this.ModelMeshBindingDataV20),\n          \"boneFlags\",\n          Utils.getArrayReader(\"uint32\"),\n          \"trackMasks\",\n          Utils.getArrayReader(this.ModelTrackMaskV20),\n          \"skeletonHash\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.ModelFloatPropertyDataV20 = [\"token\", Utils.getQWordReader(), \"value\", \"float32\"];\n\n        this.ModelPropertyDataV20 = [\n          \"boolTokens\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"floatValues\",\n          Utils.getArrayReader(this.ModelFloatPropertyDataV20),\n        ];\n\n        this.ModelParticleCloudV20 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"drag\",\n          \"float32\",\n          \"emitterIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"obstacleIndices\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n\n        this.ModelParticleCurveV20 = [\"curveType\", \"uint8\", \"keys\", Utils.getArrayReader([\"[]\", \"float32\", 2])];\n\n        this.ModelParticleFlipbookV20 = [\n          \"columns\",\n          \"uint8\",\n          \"count\",\n          \"uint8\",\n          \"flags\",\n          \"uint8\",\n          \"fps\",\n          \"uint32\",\n          \"rows\",\n          \"uint8\",\n          \"start\",\n          \"uint8\",\n        ];\n\n        this.ModelParticleEmitterV20 = [\n          \"acceleration\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"accelerationDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"accelerationDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorBegin\",\n          [\"[]\", \"float32\", 4],\n          \"colorEnd\",\n          [\"[]\", \"float32\", 4],\n          \"colorPeriod\",\n          [\"[]\", \"float32\", 2],\n          \"colorFalloff\",\n          \"float32\",\n          \"drag\",\n          \"float32\",\n          \"opacityCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV20),\n          \"opacityCurvePreset\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"flipbook\",\n          Utils.getPointerReader(this.ModelParticleFlipbookV20),\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"rotationChange\",\n          [\"[]\", \"float32\", 2],\n          \"rotationDrag\",\n          \"float32\",\n          \"rotationInitial\",\n          [\"[]\", \"float32\", 2],\n          \"scaleChange\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleInitial\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV20),\n          \"scaleCurvePreset\",\n          \"uint32\",\n          \"velocity\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"velocityDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"velocityDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"spawnGroupSize\",\n          [\"[]\", \"float32\", 2],\n          \"spawnPeriod\",\n          \"float32\",\n          \"spawnProbability\",\n          \"float32\",\n          \"spawnRadius\",\n          [\"[]\", \"float32\", 2],\n          \"spawnShape\",\n          \"uint8\",\n          \"spawnWindEmit\",\n          [\"[]\", \"float32\", 2],\n          \"spawnWindSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"texCoordRect\",\n          [\"[]\", \"float32\", 4],\n          \"visBoneIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelParticleObstacleV20 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"dragCoef\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"geoData\",\n          [\"[]\", \"float32\", 3],\n          \"gravityCoef\",\n          \"float32\",\n          \"response\",\n          \"uint8\",\n          \"type\",\n          \"uint8\",\n          \"visBoneIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelCloudDataV20 = [\n          \"clouds\",\n          Utils.getArrayReader(this.ModelParticleCloudV20),\n          \"emitters\",\n          Utils.getArrayReader(this.ModelParticleEmitterV20),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelParticleObstacleV20),\n        ];\n\n        this.ModelStreakV20 = [\n          \"anchorIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"bone\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"spawnFreq\",\n          \"float32\",\n          \"stretchDist\",\n          \"float32\",\n          \"texScale\",\n          \"float32\",\n          \"visBoneIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelStreakAnchorV20 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"color\",\n          \"uint32\",\n          \"falloff\",\n          \"float32\",\n          \"lifetime\",\n          \"float32\",\n        ];\n\n        this.ModelStreakDataV20 = [\n          \"streaks\",\n          Utils.getArrayReader(this.ModelStreakV20),\n          \"anchors\",\n          Utils.getArrayReader(this.ModelStreakAnchorV20),\n        ];\n\n        this.ModelEffectLightV20 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"farDistance\",\n          \"float32\",\n          \"intensity\",\n          \"float32\",\n          \"nearDistance\",\n          \"float32\",\n          \"visBoneIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelLightDataV20 = [\"effectLights\", Utils.getArrayReader(this.ModelEffectLightV20)];\n\n        this.PackVertexType = [\"fvf\", \"uint32\", \"vertices\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelClothBoneWeightV20 = [\"token\", Utils.getQWordReader(), \"weight\", \"uint8\"];\n\n        this.ModelClothMeshGroupV20 = [\"weights\", Utils.getArrayReader(this.ModelClothBoneWeightV20)];\n\n        this.ModelClothConstraintV20 = [\"vertIndexA\", \"uint16\", \"vertIndexB\", \"uint16\", \"distance\", \"float32\"];\n\n        this.ModelClothDataV20 = [\n          \"materialIndex\",\n          \"uint32\",\n          \"flags\",\n          \"uint8\",\n          \"gravity\",\n          \"float32\",\n          \"weight\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n          \"rigidness\",\n          \"uint8\",\n          \"mesh\",\n          this.PackVertexType,\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"lockCount\",\n          \"uint16\",\n          \"groups\",\n          Utils.getArrayReader(this.ModelClothMeshGroupV20),\n          \"softLocks\",\n          Utils.getArrayReader(\"uint8\"),\n          \"lod0Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV20),\n          \"lod1Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV20),\n          \"lod1VertexCount\",\n          \"uint16\",\n          \"lod1Indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"barycentricCoords\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"barycentricIndices\",\n          Utils.getArrayReader(\"uint16\"),\n        ];\n\n        this.__root = this.ModelFileDataV20 = [\n          \"materials\",\n          Utils.getRefArrayReader(this.ModelMaterialDataV20),\n          \"meshes\",\n          Utils.getRefArrayReader(this.ModelMeshDataV20),\n          \"model\",\n          Utils.getPointerReader(this.ModelModelDataV20),\n          \"properties\",\n          Utils.getPointerReader(this.ModelPropertyDataV20),\n          \"cloudData\",\n          Utils.getPointerReader(this.ModelCloudDataV20),\n          \"streakData\",\n          Utils.getPointerReader(this.ModelStreakDataV20),\n          \"lightData\",\n          Utils.getPointerReader(this.ModelLightDataV20),\n          \"clothData\",\n          Utils.getArrayReader(this.ModelClothDataV20),\n          \"actionOffsetNames\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"actionOffsets\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"lodOverride\",\n          [\"[]\", \"float32\", 2],\n          \"soundScript\",\n          Utils.getFileNameReader(),\n        ];\n      },\n\n      // => Version: 19\n      19: function () {\n        this.ModelTextureDataV19 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"textureFlags\",\n          \"uint32\",\n          \"token\",\n          Utils.getQWordReader(),\n          \"blitId\",\n          Utils.getQWordReader(),\n          \"uvAnimId\",\n          \"uint8\",\n          \"uvPSInputIndex\",\n          \"uint8\",\n        ];\n\n        this.ModelConstantDataV19 = [\"name\", \"uint32\", \"value\", [\"[]\", \"float32\", 4], \"constantFlags\", \"uint32\"];\n\n        this.ModelMaterialDataV19 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"materialFlags\",\n          \"uint32\",\n          \"sortOrder\",\n          \"uint32\",\n          \"texCoordCount\",\n          \"uint8\",\n          \"textures\",\n          Utils.getArrayReader(this.ModelTextureDataV19),\n          \"constants\",\n          Utils.getArrayReader(this.ModelConstantDataV19),\n        ];\n\n        this.ModelMeshLodDataV19 = [\"indices\", Utils.getArrayReader(\"uint16\")];\n\n        this.ModelMeshMorphTargetV19 = [\n          \"positionIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"positions\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"normalIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"normals\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"meshName\",\n          Utils.getStringReader(),\n        ];\n\n        this.PackGrannyMeshType = [\"mesh\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelMeshDataV19 = [\n          \"lods\",\n          Utils.getArrayReader(this.ModelMeshLodDataV19),\n          \"morphTargets\",\n          Utils.getArrayReader(this.ModelMeshMorphTargetV19),\n          \"mesh\",\n          this.PackGrannyMeshType,\n          \"flags\",\n          \"uint32\",\n          \"visBoneIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"seamVertIndices\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n\n        this.ModelTransformDataV19 = [\n          \"Flags\",\n          \"uint32\",\n          \"Position\",\n          [\"[]\", \"float32\", 3],\n          \"Orientation\",\n          [\"[]\", \"float32\", 4],\n          \"ScaleShear\",\n          [\"[]\", [\"[]\", \"float32\", 3], 3],\n        ];\n\n        this.ModelBoneDataV19 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"ParentIndex\",\n          \"uint32\",\n          \"LocalTransform\",\n          this.ModelTransformDataV19,\n          \"InverseWorld4x4\",\n          [\"[]\", [\"[]\", \"float32\", 4], 4],\n          \"LODError\",\n          \"float32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n        ];\n\n        this.ModelSkeletonDataV19 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Bones\",\n          Utils.getArrayReader(this.ModelBoneDataV19),\n          \"LODType\",\n          \"uint32\",\n        ];\n\n        this.ModelMeshBindingDataV19 = [\"Mesh\", Utils.getPointerReader(\"uint8\")];\n\n        this.PackGrannyTrackMaskType = [\"trackMask\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelTrackMaskV19 = [\"trackMask\", this.PackGrannyTrackMaskType, \"token\", Utils.getQWordReader()];\n\n        this.ModelModelDataV19 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Skeleton\",\n          Utils.getPointerReader(this.ModelSkeletonDataV19),\n          \"InitialPlacement\",\n          this.ModelTransformDataV19,\n          \"MeshBindings\",\n          Utils.getArrayReader(this.ModelMeshBindingDataV19),\n          \"boneFlags\",\n          Utils.getArrayReader(\"uint32\"),\n          \"trackMasks\",\n          Utils.getArrayReader(this.ModelTrackMaskV19),\n          \"skeletonHash\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.ModelFloatPropertyDataV19 = [\"token\", Utils.getQWordReader(), \"value\", \"float32\"];\n\n        this.ModelPropertyDataV19 = [\n          \"boolTokens\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"floatValues\",\n          Utils.getArrayReader(this.ModelFloatPropertyDataV19),\n        ];\n\n        this.ModelParticleCloudV19 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"drag\",\n          \"float32\",\n          \"emitterIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"obstacleIndices\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n\n        this.ModelParticleCurveV19 = [\"curveType\", \"uint8\", \"keys\", Utils.getArrayReader([\"[]\", \"float32\", 2])];\n\n        this.ModelParticleFlipbookV19 = [\n          \"columns\",\n          \"uint8\",\n          \"count\",\n          \"uint8\",\n          \"flags\",\n          \"uint8\",\n          \"fps\",\n          \"uint32\",\n          \"rows\",\n          \"uint8\",\n          \"start\",\n          \"uint8\",\n        ];\n\n        this.ModelParticleEmitterV19 = [\n          \"acceleration\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"accelerationDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"accelerationDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorBegin\",\n          [\"[]\", \"float32\", 4],\n          \"colorEnd\",\n          [\"[]\", \"float32\", 4],\n          \"colorPeriod\",\n          [\"[]\", \"float32\", 2],\n          \"colorFalloff\",\n          \"float32\",\n          \"drag\",\n          \"float32\",\n          \"opacityCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV19),\n          \"opacityCurvePreset\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"flipbook\",\n          Utils.getPointerReader(this.ModelParticleFlipbookV19),\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"rotationChange\",\n          [\"[]\", \"float32\", 2],\n          \"rotationDrag\",\n          \"float32\",\n          \"rotationInitial\",\n          [\"[]\", \"float32\", 2],\n          \"scaleChange\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleInitial\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV19),\n          \"scaleCurvePreset\",\n          \"uint32\",\n          \"velocity\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"velocityDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"velocityDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"spawnGroupSize\",\n          [\"[]\", \"float32\", 2],\n          \"spawnPeriod\",\n          \"float32\",\n          \"spawnProbability\",\n          \"float32\",\n          \"spawnRadius\",\n          [\"[]\", \"float32\", 2],\n          \"spawnShape\",\n          \"uint8\",\n          \"spawnWindEmit\",\n          [\"[]\", \"float32\", 2],\n          \"spawnWindSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"texCoordRect\",\n          [\"[]\", \"float32\", 4],\n          \"visBoneIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelParticleObstacleV19 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"dragCoef\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"geoData\",\n          [\"[]\", \"float32\", 3],\n          \"gravityCoef\",\n          \"float32\",\n          \"response\",\n          \"uint8\",\n          \"type\",\n          \"uint8\",\n          \"visBoneIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelCloudDataV19 = [\n          \"clouds\",\n          Utils.getArrayReader(this.ModelParticleCloudV19),\n          \"emitters\",\n          Utils.getArrayReader(this.ModelParticleEmitterV19),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelParticleObstacleV19),\n        ];\n\n        this.ModelStreakV19 = [\n          \"anchorIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"bone\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"spawnFreq\",\n          \"float32\",\n          \"stretchDist\",\n          \"float32\",\n          \"texScale\",\n          \"float32\",\n          \"visBoneIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelStreakAnchorV19 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"color\",\n          \"uint32\",\n          \"falloff\",\n          \"float32\",\n          \"lifetime\",\n          \"float32\",\n        ];\n\n        this.ModelStreakDataV19 = [\n          \"streaks\",\n          Utils.getArrayReader(this.ModelStreakV19),\n          \"anchors\",\n          Utils.getArrayReader(this.ModelStreakAnchorV19),\n        ];\n\n        this.ModelEffectLightV19 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"farDistance\",\n          \"float32\",\n          \"intensity\",\n          \"float32\",\n          \"nearDistance\",\n          \"float32\",\n          \"visBoneIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelLightDataV19 = [\"effectLights\", Utils.getArrayReader(this.ModelEffectLightV19)];\n\n        this.PackVertexType = [\"fvf\", \"uint32\", \"vertices\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelClothBoneWeightV19 = [\"index\", \"uint16\", \"weight\", \"uint8\"];\n\n        this.ModelClothMeshGroupV19 = [\"weights\", Utils.getArrayReader(this.ModelClothBoneWeightV19)];\n\n        this.ModelClothConstraintV19 = [\"vertIndexA\", \"uint16\", \"vertIndexB\", \"uint16\", \"distance\", \"float32\"];\n\n        this.ModelClothDataV19 = [\n          \"materialIndex\",\n          \"uint32\",\n          \"flags\",\n          \"uint8\",\n          \"gravity\",\n          \"float32\",\n          \"weight\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n          \"rigidness\",\n          \"uint8\",\n          \"mesh\",\n          this.PackVertexType,\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"lockCount\",\n          \"uint16\",\n          \"groups\",\n          Utils.getArrayReader(this.ModelClothMeshGroupV19),\n          \"softLocks\",\n          Utils.getArrayReader(\"uint8\"),\n          \"lod0Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV19),\n          \"lod1Constraints\",\n          Utils.getArrayReader(this.ModelClothConstraintV19),\n          \"lod1VertexCount\",\n          \"uint16\",\n          \"lod1Indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"barycentricCoords\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"barycentricIndices\",\n          Utils.getArrayReader(\"uint16\"),\n        ];\n\n        this.__root = this.ModelFileDataV19 = [\n          \"materials\",\n          Utils.getRefArrayReader(this.ModelMaterialDataV19),\n          \"meshes\",\n          Utils.getRefArrayReader(this.ModelMeshDataV19),\n          \"model\",\n          Utils.getPointerReader(this.ModelModelDataV19),\n          \"properties\",\n          Utils.getPointerReader(this.ModelPropertyDataV19),\n          \"cloudData\",\n          Utils.getPointerReader(this.ModelCloudDataV19),\n          \"streakData\",\n          Utils.getPointerReader(this.ModelStreakDataV19),\n          \"lightData\",\n          Utils.getPointerReader(this.ModelLightDataV19),\n          \"clothData\",\n          Utils.getArrayReader(this.ModelClothDataV19),\n          \"actionOffsetNames\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"actionOffsets\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"lodOverride\",\n          [\"[]\", \"float32\", 2],\n          \"soundScript\",\n          Utils.getFileNameReader(),\n        ];\n      },\n\n      // => Version: 18\n      18: function () {\n        this.ModelTextureDataV18 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"textureFlags\",\n          \"uint32\",\n          \"token\",\n          Utils.getQWordReader(),\n          \"blitId\",\n          Utils.getQWordReader(),\n          \"uvAnimId\",\n          \"uint8\",\n          \"uvPSInputIndex\",\n          \"uint8\",\n        ];\n\n        this.ModelConstantDataV18 = [\"name\", \"uint32\", \"value\", [\"[]\", \"float32\", 4], \"constantFlags\", \"uint32\"];\n\n        this.ModelMaterialDataV18 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"materialFlags\",\n          \"uint32\",\n          \"sortOrder\",\n          \"uint32\",\n          \"texCoordCount\",\n          \"uint8\",\n          \"textures\",\n          Utils.getArrayReader(this.ModelTextureDataV18),\n          \"constants\",\n          Utils.getArrayReader(this.ModelConstantDataV18),\n        ];\n\n        this.ModelMeshLodDataV18 = [\"indices\", Utils.getArrayReader(\"uint16\")];\n\n        this.ModelMeshMorphTargetV18 = [\n          \"positionIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"positions\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"normalIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"normals\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"meshName\",\n          Utils.getStringReader(),\n        ];\n\n        this.PackGrannyMeshType = [\"mesh\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelMeshDataV18 = [\n          \"lods\",\n          Utils.getArrayReader(this.ModelMeshLodDataV18),\n          \"morphTargets\",\n          Utils.getArrayReader(this.ModelMeshMorphTargetV18),\n          \"mesh\",\n          this.PackGrannyMeshType,\n          \"flags\",\n          \"uint32\",\n          \"visBoneIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"seamVertIndices\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n\n        this.ModelTransformDataV18 = [\n          \"Flags\",\n          \"uint32\",\n          \"Position\",\n          [\"[]\", \"float32\", 3],\n          \"Orientation\",\n          [\"[]\", \"float32\", 4],\n          \"ScaleShear\",\n          [\"[]\", [\"[]\", \"float32\", 3], 3],\n        ];\n\n        this.ModelBoneDataV18 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"ParentIndex\",\n          \"uint32\",\n          \"LocalTransform\",\n          this.ModelTransformDataV18,\n          \"InverseWorld4x4\",\n          [\"[]\", [\"[]\", \"float32\", 4], 4],\n          \"LODError\",\n          \"float32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n        ];\n\n        this.ModelSkeletonDataV18 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Bones\",\n          Utils.getArrayReader(this.ModelBoneDataV18),\n          \"LODType\",\n          \"uint32\",\n        ];\n\n        this.ModelMeshBindingDataV18 = [\"Mesh\", Utils.getPointerReader(\"uint8\")];\n\n        this.PackGrannyTrackMaskType = [\"trackMask\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelTrackMaskV18 = [\"trackMask\", this.PackGrannyTrackMaskType, \"token\", Utils.getQWordReader()];\n\n        this.ModelModelDataV18 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Skeleton\",\n          Utils.getPointerReader(this.ModelSkeletonDataV18),\n          \"InitialPlacement\",\n          this.ModelTransformDataV18,\n          \"MeshBindings\",\n          Utils.getArrayReader(this.ModelMeshBindingDataV18),\n          \"boneFlags\",\n          Utils.getArrayReader(\"uint32\"),\n          \"trackMasks\",\n          Utils.getArrayReader(this.ModelTrackMaskV18),\n          \"skeletonHash\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.ModelFloatPropertyDataV18 = [\"token\", Utils.getQWordReader(), \"value\", \"float32\"];\n\n        this.ModelPropertyDataV18 = [\n          \"boolTokens\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"floatValues\",\n          Utils.getArrayReader(this.ModelFloatPropertyDataV18),\n        ];\n\n        this.ModelParticleCloudV18 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"drag\",\n          \"float32\",\n          \"emitterIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"obstacleIndices\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n\n        this.ModelParticleCurveV18 = [\"curveType\", \"uint8\", \"keys\", Utils.getArrayReader([\"[]\", \"float32\", 2])];\n\n        this.ModelParticleFlipbookV18 = [\n          \"columns\",\n          \"uint8\",\n          \"count\",\n          \"uint8\",\n          \"flags\",\n          \"uint8\",\n          \"fps\",\n          \"uint32\",\n          \"rows\",\n          \"uint8\",\n          \"start\",\n          \"uint8\",\n        ];\n\n        this.ModelParticleEmitterV18 = [\n          \"acceleration\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"accelerationDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"accelerationDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorBegin\",\n          [\"[]\", \"float32\", 4],\n          \"colorEnd\",\n          [\"[]\", \"float32\", 4],\n          \"colorPeriod\",\n          [\"[]\", \"float32\", 2],\n          \"colorFalloff\",\n          \"float32\",\n          \"drag\",\n          \"float32\",\n          \"opacityCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV18),\n          \"opacityCurvePreset\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"flipbook\",\n          Utils.getPointerReader(this.ModelParticleFlipbookV18),\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"rotationChange\",\n          [\"[]\", \"float32\", 2],\n          \"rotationDrag\",\n          \"float32\",\n          \"rotationInitial\",\n          [\"[]\", \"float32\", 2],\n          \"scaleChange\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleInitial\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV18),\n          \"scaleCurvePreset\",\n          \"uint32\",\n          \"velocity\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"velocityDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"velocityDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"spawnGroupSize\",\n          [\"[]\", \"float32\", 2],\n          \"spawnPeriod\",\n          \"float32\",\n          \"spawnProbability\",\n          \"float32\",\n          \"spawnRadius\",\n          [\"[]\", \"float32\", 2],\n          \"spawnShape\",\n          \"uint8\",\n          \"spawnWindEmit\",\n          [\"[]\", \"float32\", 2],\n          \"spawnWindSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"texCoordRect\",\n          [\"[]\", \"float32\", 4],\n          \"visBoneIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelParticleObstacleV18 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"dragCoef\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"geoData\",\n          [\"[]\", \"float32\", 3],\n          \"gravityCoef\",\n          \"float32\",\n          \"response\",\n          \"uint8\",\n          \"type\",\n          \"uint8\",\n          \"visBoneIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelCloudDataV18 = [\n          \"clouds\",\n          Utils.getArrayReader(this.ModelParticleCloudV18),\n          \"emitters\",\n          Utils.getArrayReader(this.ModelParticleEmitterV18),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelParticleObstacleV18),\n        ];\n\n        this.ModelStreakV18 = [\n          \"anchorIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"bone\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"spawnFreq\",\n          \"float32\",\n          \"stretchDist\",\n          \"float32\",\n          \"texScale\",\n          \"float32\",\n          \"visBoneIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelStreakAnchorV18 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"color\",\n          \"uint32\",\n          \"falloff\",\n          \"float32\",\n          \"lifetime\",\n          \"float32\",\n        ];\n\n        this.ModelStreakDataV18 = [\n          \"streaks\",\n          Utils.getArrayReader(this.ModelStreakV18),\n          \"anchors\",\n          Utils.getArrayReader(this.ModelStreakAnchorV18),\n        ];\n\n        this.ModelEffectLightV18 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"color\",\n          [\"[]\", \"uint8\", 3],\n          \"farDistance\",\n          \"float32\",\n          \"intensity\",\n          \"float32\",\n          \"nearDistance\",\n          \"float32\",\n          \"visBoneIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelLightDataV18 = [\"effectLights\", Utils.getArrayReader(this.ModelEffectLightV18)];\n\n        this.__root = this.ModelFileDataV18 = [\n          \"materials\",\n          Utils.getRefArrayReader(this.ModelMaterialDataV18),\n          \"meshes\",\n          Utils.getRefArrayReader(this.ModelMeshDataV18),\n          \"model\",\n          Utils.getPointerReader(this.ModelModelDataV18),\n          \"properties\",\n          Utils.getPointerReader(this.ModelPropertyDataV18),\n          \"cloudData\",\n          Utils.getPointerReader(this.ModelCloudDataV18),\n          \"streakData\",\n          Utils.getPointerReader(this.ModelStreakDataV18),\n          \"lightData\",\n          Utils.getPointerReader(this.ModelLightDataV18),\n          \"actionOffsetNames\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"actionOffsets\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"lodOverride\",\n          [\"[]\", \"float32\", 2],\n          \"soundScript\",\n          Utils.getFileNameReader(),\n        ];\n      },\n\n      // => Version: 17\n      17: function () {\n        this.ModelTextureDataV17 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"textureFlags\",\n          \"uint32\",\n          \"token\",\n          Utils.getQWordReader(),\n          \"blitId\",\n          Utils.getQWordReader(),\n          \"uvAnimId\",\n          \"uint8\",\n          \"uvPSInputIndex\",\n          \"uint8\",\n        ];\n\n        this.ModelConstantDataV17 = [\"name\", \"uint32\", \"value\", [\"[]\", \"float32\", 4], \"constantFlags\", \"uint32\"];\n\n        this.ModelMaterialDataV17 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"materialFlags\",\n          \"uint32\",\n          \"sortOrder\",\n          \"uint32\",\n          \"texCoordCount\",\n          \"uint8\",\n          \"textures\",\n          Utils.getArrayReader(this.ModelTextureDataV17),\n          \"constants\",\n          Utils.getArrayReader(this.ModelConstantDataV17),\n        ];\n\n        this.ModelMeshLodDataV17 = [\"indices\", Utils.getArrayReader(\"uint16\")];\n\n        this.ModelMeshMorphTargetV17 = [\n          \"positionIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"positions\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"normalIndices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"normals\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n        ];\n\n        this.PackGrannyMeshType = [\"mesh\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelMeshDataV17 = [\n          \"lods\",\n          Utils.getArrayReader(this.ModelMeshLodDataV17),\n          \"morphTargets\",\n          Utils.getArrayReader(this.ModelMeshMorphTargetV17),\n          \"mesh\",\n          this.PackGrannyMeshType,\n          \"flags\",\n          \"uint32\",\n          \"visBoneIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"seamVertIndices\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n\n        this.ModelTransformDataV17 = [\n          \"Flags\",\n          \"uint32\",\n          \"Position\",\n          [\"[]\", \"float32\", 3],\n          \"Orientation\",\n          [\"[]\", \"float32\", 4],\n          \"ScaleShear\",\n          [\"[]\", [\"[]\", \"float32\", 3], 3],\n        ];\n\n        this.ModelBoneDataV17 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"ParentIndex\",\n          \"uint32\",\n          \"LocalTransform\",\n          this.ModelTransformDataV17,\n          \"InverseWorld4x4\",\n          [\"[]\", [\"[]\", \"float32\", 4], 4],\n          \"LODError\",\n          \"float32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n        ];\n\n        this.ModelSkeletonDataV17 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Bones\",\n          Utils.getArrayReader(this.ModelBoneDataV17),\n          \"LODType\",\n          \"uint32\",\n        ];\n\n        this.ModelMeshBindingDataV17 = [\"Mesh\", Utils.getPointerReader(\"uint8\")];\n\n        this.ModelModelDataV17 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Skeleton\",\n          Utils.getPointerReader(this.ModelSkeletonDataV17),\n          \"InitialPlacement\",\n          this.ModelTransformDataV17,\n          \"MeshBindings\",\n          Utils.getArrayReader(this.ModelMeshBindingDataV17),\n          \"boneFlags\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n\n        this.ModelFloatPropertyDataV17 = [\"token\", Utils.getQWordReader(), \"value\", \"float32\"];\n\n        this.ModelPropertyDataV17 = [\n          \"boolTokens\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"floatValues\",\n          Utils.getArrayReader(this.ModelFloatPropertyDataV17),\n        ];\n\n        this.ModelParticleCloudV17 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"drag\",\n          \"float32\",\n          \"emitterIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"obstacleIndices\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n\n        this.ModelParticleCurveV17 = [\"curveType\", \"uint8\", \"keys\", Utils.getArrayReader([\"[]\", \"float32\", 2])];\n\n        this.ModelParticleFlipbookV17 = [\n          \"columns\",\n          \"uint8\",\n          \"count\",\n          \"uint8\",\n          \"flags\",\n          \"uint8\",\n          \"fps\",\n          \"uint32\",\n          \"rows\",\n          \"uint8\",\n          \"start\",\n          \"uint8\",\n        ];\n\n        this.ModelParticleEmitterV17 = [\n          \"acceleration\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"accelerationDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"accelerationDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorBegin\",\n          [\"[]\", \"float32\", 4],\n          \"colorEnd\",\n          [\"[]\", \"float32\", 4],\n          \"colorPeriod\",\n          [\"[]\", \"float32\", 2],\n          \"colorFalloff\",\n          \"float32\",\n          \"drag\",\n          \"float32\",\n          \"opacityCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV17),\n          \"opacityCurvePreset\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"flipbook\",\n          Utils.getPointerReader(this.ModelParticleFlipbookV17),\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"rotationChange\",\n          [\"[]\", \"float32\", 2],\n          \"rotationDrag\",\n          \"float32\",\n          \"rotationInitial\",\n          [\"[]\", \"float32\", 2],\n          \"scaleChange\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleInitial\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV17),\n          \"scaleCurvePreset\",\n          \"uint32\",\n          \"velocity\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"velocityDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"velocityDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"spawnGroupSize\",\n          [\"[]\", \"float32\", 2],\n          \"spawnPeriod\",\n          \"float32\",\n          \"spawnProbability\",\n          \"float32\",\n          \"spawnRadius\",\n          [\"[]\", \"float32\", 2],\n          \"spawnShape\",\n          \"uint8\",\n          \"spawnWindEmit\",\n          [\"[]\", \"float32\", 2],\n          \"spawnWindSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"texCoordRect\",\n          [\"[]\", \"float32\", 4],\n          \"visBoneIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelParticleObstacleV17 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"dragCoef\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"geoData\",\n          [\"[]\", \"float32\", 3],\n          \"gravityCoef\",\n          \"float32\",\n          \"response\",\n          \"uint8\",\n          \"type\",\n          \"uint8\",\n          \"visBoneIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelCloudDataV17 = [\n          \"clouds\",\n          Utils.getArrayReader(this.ModelParticleCloudV17),\n          \"emitters\",\n          Utils.getArrayReader(this.ModelParticleEmitterV17),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelParticleObstacleV17),\n        ];\n\n        this.ModelStreakV17 = [\n          \"anchorIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"bone\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"spawnFreq\",\n          \"float32\",\n          \"stretchDist\",\n          \"float32\",\n          \"texScale\",\n          \"float32\",\n          \"visBoneIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelStreakAnchorV17 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"color\",\n          \"uint32\",\n          \"falloff\",\n          \"float32\",\n          \"lifetime\",\n          \"float32\",\n        ];\n\n        this.ModelStreakDataV17 = [\n          \"streaks\",\n          Utils.getArrayReader(this.ModelStreakV17),\n          \"anchors\",\n          Utils.getArrayReader(this.ModelStreakAnchorV17),\n        ];\n\n        this.ModelEffectLightV17 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"color\",\n          [\"[]\", \"uint8\", 4],\n          \"ranges\",\n          [\"[]\", \"float32\", 2],\n        ];\n\n        this.ModelLightDataV17 = [\"effectLights\", Utils.getArrayReader(this.ModelEffectLightV17)];\n\n        this.__root = this.ModelFileDataV17 = [\n          \"materials\",\n          Utils.getRefArrayReader(this.ModelMaterialDataV17),\n          \"meshes\",\n          Utils.getRefArrayReader(this.ModelMeshDataV17),\n          \"model\",\n          Utils.getPointerReader(this.ModelModelDataV17),\n          \"properties\",\n          Utils.getPointerReader(this.ModelPropertyDataV17),\n          \"cloudData\",\n          Utils.getPointerReader(this.ModelCloudDataV17),\n          \"streakData\",\n          Utils.getPointerReader(this.ModelStreakDataV17),\n          \"lightData\",\n          Utils.getPointerReader(this.ModelLightDataV17),\n          \"actionOffsetNames\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"actionOffsets\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"lodOverride\",\n          [\"[]\", \"float32\", 2],\n          \"soundScript\",\n          Utils.getFileNameReader(),\n        ];\n      },\n\n      // => Version: 16\n      16: function () {\n        this.ModelTextureDataV16 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"textureFlags\",\n          \"uint32\",\n          \"token\",\n          Utils.getQWordReader(),\n          \"blitId\",\n          Utils.getQWordReader(),\n          \"uvAnimId\",\n          \"uint8\",\n          \"uvPSInputIndex\",\n          \"uint8\",\n        ];\n\n        this.ModelConstantDataV16 = [\"name\", \"uint32\", \"value\", [\"[]\", \"float32\", 4], \"constantFlags\", \"uint32\"];\n\n        this.ModelMaterialDataV16 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"materialFlags\",\n          \"uint32\",\n          \"sortOrder\",\n          \"uint32\",\n          \"texCoordCount\",\n          \"uint8\",\n          \"textures\",\n          Utils.getArrayReader(this.ModelTextureDataV16),\n          \"constants\",\n          Utils.getArrayReader(this.ModelConstantDataV16),\n        ];\n\n        this.ModelMeshLodDataV16 = [\"indices\", Utils.getArrayReader(\"uint16\")];\n\n        this.PackGrannyMeshType = [\"mesh\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelMeshDataV16 = [\n          \"lods\",\n          Utils.getArrayReader(this.ModelMeshLodDataV16),\n          \"mesh\",\n          this.PackGrannyMeshType,\n          \"flags\",\n          \"uint32\",\n          \"visBoneIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"seamVertIndices\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n\n        this.ModelTransformDataV16 = [\n          \"Flags\",\n          \"uint32\",\n          \"Position\",\n          [\"[]\", \"float32\", 3],\n          \"Orientation\",\n          [\"[]\", \"float32\", 4],\n          \"ScaleShear\",\n          [\"[]\", [\"[]\", \"float32\", 3], 3],\n        ];\n\n        this.ModelBoneDataV16 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"ParentIndex\",\n          \"uint32\",\n          \"LocalTransform\",\n          this.ModelTransformDataV16,\n          \"InverseWorld4x4\",\n          [\"[]\", [\"[]\", \"float32\", 4], 4],\n          \"LODError\",\n          \"float32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n        ];\n\n        this.ModelSkeletonDataV16 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Bones\",\n          Utils.getArrayReader(this.ModelBoneDataV16),\n          \"LODType\",\n          \"uint32\",\n        ];\n\n        this.ModelMeshBindingDataV16 = [\"Mesh\", Utils.getPointerReader(\"uint8\")];\n\n        this.ModelModelDataV16 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Skeleton\",\n          Utils.getPointerReader(this.ModelSkeletonDataV16),\n          \"InitialPlacement\",\n          this.ModelTransformDataV16,\n          \"MeshBindings\",\n          Utils.getArrayReader(this.ModelMeshBindingDataV16),\n          \"boneFlags\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n\n        this.ModelFloatPropertyDataV16 = [\"token\", Utils.getQWordReader(), \"value\", \"float32\"];\n\n        this.ModelPropertyDataV16 = [\n          \"boolTokens\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"floatValues\",\n          Utils.getArrayReader(this.ModelFloatPropertyDataV16),\n        ];\n\n        this.ModelParticleCloudV16 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"drag\",\n          \"float32\",\n          \"emitterIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"obstacleIndices\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n\n        this.ModelParticleCurveV16 = [\"curveType\", \"uint8\", \"keys\", Utils.getArrayReader([\"[]\", \"float32\", 2])];\n\n        this.ModelParticleFlipbookV16 = [\n          \"columns\",\n          \"uint8\",\n          \"count\",\n          \"uint8\",\n          \"flags\",\n          \"uint8\",\n          \"fps\",\n          \"uint32\",\n          \"rows\",\n          \"uint8\",\n          \"start\",\n          \"uint8\",\n        ];\n\n        this.ModelParticleEmitterV16 = [\n          \"acceleration\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"accelerationDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"accelerationDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorBegin\",\n          [\"[]\", \"float32\", 4],\n          \"colorEnd\",\n          [\"[]\", \"float32\", 4],\n          \"colorPeriod\",\n          [\"[]\", \"float32\", 2],\n          \"colorFalloff\",\n          \"float32\",\n          \"drag\",\n          \"float32\",\n          \"opacityCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV16),\n          \"opacityCurvePreset\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"flipbook\",\n          Utils.getPointerReader(this.ModelParticleFlipbookV16),\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"rotationChange\",\n          [\"[]\", \"float32\", 2],\n          \"rotationDrag\",\n          \"float32\",\n          \"rotationInitial\",\n          [\"[]\", \"float32\", 2],\n          \"scaleChange\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleInitial\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV16),\n          \"scaleCurvePreset\",\n          \"uint32\",\n          \"velocity\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"velocityDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"velocityDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"spawnGroupSize\",\n          [\"[]\", \"float32\", 2],\n          \"spawnPeriod\",\n          \"float32\",\n          \"spawnProbability\",\n          \"float32\",\n          \"spawnRadius\",\n          [\"[]\", \"float32\", 2],\n          \"spawnShape\",\n          \"uint8\",\n          \"spawnWindEmit\",\n          [\"[]\", \"float32\", 2],\n          \"spawnWindSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"texCoordRect\",\n          [\"[]\", \"float32\", 4],\n          \"visBoneIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelParticleObstacleV16 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"dragCoef\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"geoData\",\n          [\"[]\", \"float32\", 3],\n          \"gravityCoef\",\n          \"float32\",\n          \"response\",\n          \"uint8\",\n          \"type\",\n          \"uint8\",\n          \"visBoneIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelCloudDataV16 = [\n          \"clouds\",\n          Utils.getArrayReader(this.ModelParticleCloudV16),\n          \"emitters\",\n          Utils.getArrayReader(this.ModelParticleEmitterV16),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelParticleObstacleV16),\n        ];\n\n        this.ModelStreakV16 = [\n          \"anchorIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"bone\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"spawnFreq\",\n          \"float32\",\n          \"stretchDist\",\n          \"float32\",\n          \"texScale\",\n          \"float32\",\n          \"visBoneIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelStreakAnchorV16 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"color\",\n          \"uint32\",\n          \"falloff\",\n          \"float32\",\n          \"lifetime\",\n          \"float32\",\n        ];\n\n        this.ModelStreakDataV16 = [\n          \"streaks\",\n          Utils.getArrayReader(this.ModelStreakV16),\n          \"anchors\",\n          Utils.getArrayReader(this.ModelStreakAnchorV16),\n        ];\n\n        this.ModelEffectLightV16 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"color\",\n          [\"[]\", \"uint8\", 4],\n          \"ranges\",\n          [\"[]\", \"float32\", 2],\n        ];\n\n        this.ModelLightDataV16 = [\"effectLights\", Utils.getArrayReader(this.ModelEffectLightV16)];\n\n        this.__root = this.ModelFileDataV16 = [\n          \"materials\",\n          Utils.getRefArrayReader(this.ModelMaterialDataV16),\n          \"meshes\",\n          Utils.getRefArrayReader(this.ModelMeshDataV16),\n          \"model\",\n          Utils.getPointerReader(this.ModelModelDataV16),\n          \"properties\",\n          Utils.getPointerReader(this.ModelPropertyDataV16),\n          \"cloudData\",\n          Utils.getPointerReader(this.ModelCloudDataV16),\n          \"streakData\",\n          Utils.getPointerReader(this.ModelStreakDataV16),\n          \"lightData\",\n          Utils.getPointerReader(this.ModelLightDataV16),\n          \"actionOffsetNames\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"actionOffsets\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"lodOverride\",\n          [\"[]\", \"float32\", 2],\n        ];\n      },\n\n      // => Version: 15\n      15: function () {\n        this.ModelTextureDataV15 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"textureFlags\",\n          \"uint32\",\n          \"token\",\n          Utils.getQWordReader(),\n          \"blitId\",\n          Utils.getQWordReader(),\n          \"uvAnimId\",\n          \"uint8\",\n          \"uvPSInputIndex\",\n          \"uint8\",\n        ];\n\n        this.ModelConstantDataV15 = [\"name\", \"uint32\", \"value\", [\"[]\", \"float32\", 4], \"constantFlags\", \"uint32\"];\n\n        this.ModelMaterialDataV15 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"materialFlags\",\n          \"uint32\",\n          \"sortOrder\",\n          \"uint32\",\n          \"texCoordCount\",\n          \"uint8\",\n          \"textures\",\n          Utils.getArrayReader(this.ModelTextureDataV15),\n          \"constants\",\n          Utils.getArrayReader(this.ModelConstantDataV15),\n        ];\n\n        this.ModelMeshLodDataV15 = [\"indices\", Utils.getArrayReader(\"uint16\")];\n\n        this.PackGrannyMeshType = [\"mesh\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelMeshDataV15 = [\n          \"lods\",\n          Utils.getArrayReader(this.ModelMeshLodDataV15),\n          \"mesh\",\n          this.PackGrannyMeshType,\n          \"flags\",\n          \"uint32\",\n          \"visBoneIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"seamVertIndices\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n\n        this.ModelTransformDataV15 = [\n          \"Flags\",\n          \"uint32\",\n          \"Position\",\n          [\"[]\", \"float32\", 3],\n          \"Orientation\",\n          [\"[]\", \"float32\", 4],\n          \"ScaleShear\",\n          [\"[]\", [\"[]\", \"float32\", 3], 3],\n        ];\n\n        this.ModelBoneDataV15 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"ParentIndex\",\n          \"uint32\",\n          \"LocalTransform\",\n          this.ModelTransformDataV15,\n          \"InverseWorld4x4\",\n          [\"[]\", [\"[]\", \"float32\", 4], 4],\n          \"LODError\",\n          \"float32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n        ];\n\n        this.ModelSkeletonDataV15 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Bones\",\n          Utils.getArrayReader(this.ModelBoneDataV15),\n          \"LODType\",\n          \"uint32\",\n        ];\n\n        this.ModelMeshBindingDataV15 = [\"Mesh\", Utils.getPointerReader(\"uint8\")];\n\n        this.ModelModelDataV15 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Skeleton\",\n          Utils.getPointerReader(this.ModelSkeletonDataV15),\n          \"InitialPlacement\",\n          this.ModelTransformDataV15,\n          \"MeshBindings\",\n          Utils.getArrayReader(this.ModelMeshBindingDataV15),\n          \"boneFlags\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n\n        this.ModelFloatPropertyDataV15 = [\"token\", Utils.getQWordReader(), \"value\", \"float32\"];\n\n        this.ModelPropertyDataV15 = [\n          \"boolTokens\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"floatValues\",\n          Utils.getArrayReader(this.ModelFloatPropertyDataV15),\n        ];\n\n        this.ModelParticleCloudV15 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"drag\",\n          \"float32\",\n          \"emitterIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"obstacleIndices\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n\n        this.ModelParticleCurveV15 = [\"curveType\", \"uint8\", \"keys\", Utils.getArrayReader([\"[]\", \"float32\", 2])];\n\n        this.ModelParticleFlipbookV15 = [\n          \"columns\",\n          \"uint8\",\n          \"count\",\n          \"uint8\",\n          \"flags\",\n          \"uint8\",\n          \"fps\",\n          \"uint32\",\n          \"rows\",\n          \"uint8\",\n          \"start\",\n          \"uint8\",\n        ];\n\n        this.ModelParticleEmitterV15 = [\n          \"acceleration\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"accelerationDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"accelerationDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorBegin\",\n          [\"[]\", \"float32\", 4],\n          \"colorEnd\",\n          [\"[]\", \"float32\", 4],\n          \"colorPeriod\",\n          [\"[]\", \"float32\", 2],\n          \"colorFalloff\",\n          \"float32\",\n          \"drag\",\n          \"float32\",\n          \"opacityCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV15),\n          \"opacityCurvePreset\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"flipbook\",\n          Utils.getPointerReader(this.ModelParticleFlipbookV15),\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"rotationChange\",\n          [\"[]\", \"float32\", 2],\n          \"rotationDrag\",\n          \"float32\",\n          \"rotationInitial\",\n          [\"[]\", \"float32\", 2],\n          \"scaleChange\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleInitial\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV15),\n          \"scaleCurvePreset\",\n          \"uint32\",\n          \"velocity\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"velocityDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"velocityDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"spawnGroupSize\",\n          [\"[]\", \"float32\", 2],\n          \"spawnPeriod\",\n          \"float32\",\n          \"spawnProbability\",\n          \"float32\",\n          \"spawnRadius\",\n          [\"[]\", \"float32\", 2],\n          \"spawnShape\",\n          \"uint8\",\n          \"spawnWindEmit\",\n          [\"[]\", \"float32\", 2],\n          \"spawnWindSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"texCoordRect\",\n          [\"[]\", \"float32\", 4],\n          \"visBoneIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelParticleObstacleV15 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"dragCoef\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"geoData\",\n          [\"[]\", \"float32\", 3],\n          \"gravityCoef\",\n          \"float32\",\n          \"response\",\n          \"uint8\",\n          \"type\",\n          \"uint8\",\n          \"visBoneIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelCloudDataV15 = [\n          \"clouds\",\n          Utils.getArrayReader(this.ModelParticleCloudV15),\n          \"emitters\",\n          Utils.getArrayReader(this.ModelParticleEmitterV15),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelParticleObstacleV15),\n        ];\n\n        this.ModelStreakV15 = [\n          \"anchorIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"bone\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"spawnFreq\",\n          \"float32\",\n          \"stretchDist\",\n          \"float32\",\n          \"texScale\",\n          \"float32\",\n          \"visBoneIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelStreakAnchorV15 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"color\",\n          \"uint32\",\n          \"falloff\",\n          \"float32\",\n          \"lifetime\",\n          \"float32\",\n        ];\n\n        this.ModelStreakDataV15 = [\n          \"streaks\",\n          Utils.getArrayReader(this.ModelStreakV15),\n          \"anchors\",\n          Utils.getArrayReader(this.ModelStreakAnchorV15),\n        ];\n\n        this.ModelEffectLightV15 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"color\",\n          [\"[]\", \"uint8\", 4],\n          \"ranges\",\n          [\"[]\", \"float32\", 2],\n        ];\n\n        this.ModelLightDataV15 = [\"effectLights\", Utils.getArrayReader(this.ModelEffectLightV15)];\n\n        this.__root = this.ModelFileDataV15 = [\n          \"materials\",\n          Utils.getRefArrayReader(this.ModelMaterialDataV15),\n          \"meshes\",\n          Utils.getRefArrayReader(this.ModelMeshDataV15),\n          \"model\",\n          Utils.getPointerReader(this.ModelModelDataV15),\n          \"properties\",\n          Utils.getPointerReader(this.ModelPropertyDataV15),\n          \"cloudData\",\n          Utils.getPointerReader(this.ModelCloudDataV15),\n          \"streakData\",\n          Utils.getPointerReader(this.ModelStreakDataV15),\n          \"lightData\",\n          Utils.getPointerReader(this.ModelLightDataV15),\n          \"actionOffsetNames\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"actionOffsets\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n        ];\n      },\n\n      // => Version: 14\n      14: function () {\n        this.ModelTextureDataV14 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"textureFlags\",\n          \"uint32\",\n          \"token\",\n          Utils.getQWordReader(),\n          \"blitId\",\n          Utils.getQWordReader(),\n          \"uvAnimId\",\n          \"uint8\",\n          \"uvPSInputIndex\",\n          \"uint8\",\n        ];\n\n        this.ModelConstantDataV14 = [\"name\", \"uint32\", \"value\", [\"[]\", \"float32\", 4], \"constantFlags\", \"uint32\"];\n\n        this.ModelMaterialDataV14 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"materialFlags\",\n          \"uint32\",\n          \"sortOrder\",\n          \"uint32\",\n          \"texCoordCount\",\n          \"uint8\",\n          \"textures\",\n          Utils.getArrayReader(this.ModelTextureDataV14),\n          \"constants\",\n          Utils.getArrayReader(this.ModelConstantDataV14),\n        ];\n\n        this.PackGrannyMeshType = [\"mesh\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelMeshDataV14 = [\n          \"mesh\",\n          this.PackGrannyMeshType,\n          \"flags\",\n          \"uint32\",\n          \"visBoneIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"seamVertIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"actionOffsetNames\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"actionOffsets\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n        ];\n\n        this.ModelTransformDataV14 = [\n          \"Flags\",\n          \"uint32\",\n          \"Position\",\n          [\"[]\", \"float32\", 3],\n          \"Orientation\",\n          [\"[]\", \"float32\", 4],\n          \"ScaleShear\",\n          [\"[]\", [\"[]\", \"float32\", 3], 3],\n        ];\n\n        this.ModelBoneDataV14 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"ParentIndex\",\n          \"uint32\",\n          \"LocalTransform\",\n          this.ModelTransformDataV14,\n          \"InverseWorld4x4\",\n          [\"[]\", [\"[]\", \"float32\", 4], 4],\n          \"LODError\",\n          \"float32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n        ];\n\n        this.ModelSkeletonDataV14 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Bones\",\n          Utils.getArrayReader(this.ModelBoneDataV14),\n          \"LODType\",\n          \"uint32\",\n        ];\n\n        this.ModelMeshBindingDataV14 = [\"Mesh\", Utils.getPointerReader(\"uint8\")];\n\n        this.ModelModelDataV14 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Skeleton\",\n          Utils.getPointerReader(this.ModelSkeletonDataV14),\n          \"InitialPlacement\",\n          this.ModelTransformDataV14,\n          \"MeshBindings\",\n          Utils.getArrayReader(this.ModelMeshBindingDataV14),\n          \"boneFlags\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n\n        this.ModelFloatPropertyDataV14 = [\"token\", Utils.getQWordReader(), \"value\", \"float32\"];\n\n        this.ModelPropertyDataV14 = [\n          \"boolTokens\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"floatValues\",\n          Utils.getArrayReader(this.ModelFloatPropertyDataV14),\n        ];\n\n        this.ModelParticleCloudV14 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"drag\",\n          \"float32\",\n          \"emitterIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"obstacleIndices\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n\n        this.ModelParticleCurveV14 = [\"curveType\", \"uint8\", \"keys\", Utils.getArrayReader([\"[]\", \"float32\", 2])];\n\n        this.ModelParticleFlipbookV14 = [\n          \"columns\",\n          \"uint8\",\n          \"count\",\n          \"uint8\",\n          \"flags\",\n          \"uint8\",\n          \"fps\",\n          \"uint32\",\n          \"rows\",\n          \"uint8\",\n          \"start\",\n          \"uint8\",\n        ];\n\n        this.ModelParticleEmitterV14 = [\n          \"acceleration\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"accelerationDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"accelerationDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorBegin\",\n          [\"[]\", \"float32\", 4],\n          \"colorEnd\",\n          [\"[]\", \"float32\", 4],\n          \"colorPeriod\",\n          [\"[]\", \"float32\", 2],\n          \"colorFalloff\",\n          \"float32\",\n          \"drag\",\n          \"float32\",\n          \"opacityCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV14),\n          \"opacityCurvePreset\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"flipbook\",\n          Utils.getPointerReader(this.ModelParticleFlipbookV14),\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"rotationChange\",\n          [\"[]\", \"float32\", 2],\n          \"rotationDrag\",\n          \"float32\",\n          \"rotationInitial\",\n          [\"[]\", \"float32\", 2],\n          \"scaleChange\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleInitial\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV14),\n          \"scaleCurvePreset\",\n          \"uint32\",\n          \"velocity\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"velocityDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"velocityDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"spawnGroupSize\",\n          [\"[]\", \"float32\", 2],\n          \"spawnPeriod\",\n          \"float32\",\n          \"spawnProbability\",\n          \"float32\",\n          \"spawnRadius\",\n          [\"[]\", \"float32\", 2],\n          \"spawnShape\",\n          \"uint8\",\n          \"spawnWindEmit\",\n          [\"[]\", \"float32\", 2],\n          \"spawnWindSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"texCoordRect\",\n          [\"[]\", \"float32\", 4],\n          \"visBoneIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelParticleObstacleV14 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"dragCoef\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"geoData\",\n          [\"[]\", \"float32\", 3],\n          \"gravityCoef\",\n          \"float32\",\n          \"response\",\n          \"uint8\",\n          \"type\",\n          \"uint8\",\n          \"visBoneIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelCloudDataV14 = [\n          \"clouds\",\n          Utils.getArrayReader(this.ModelParticleCloudV14),\n          \"emitters\",\n          Utils.getArrayReader(this.ModelParticleEmitterV14),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelParticleObstacleV14),\n        ];\n\n        this.ModelStreakV14 = [\n          \"anchorIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"bone\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"spawnFreq\",\n          \"float32\",\n          \"stretchDist\",\n          \"float32\",\n          \"texScale\",\n          \"float32\",\n          \"visBoneIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelStreakAnchorV14 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"color\",\n          \"uint32\",\n          \"falloff\",\n          \"float32\",\n          \"lifetime\",\n          \"float32\",\n        ];\n\n        this.ModelStreakDataV14 = [\n          \"streaks\",\n          Utils.getArrayReader(this.ModelStreakV14),\n          \"anchors\",\n          Utils.getArrayReader(this.ModelStreakAnchorV14),\n        ];\n\n        this.__root = this.ModelFileDataV14 = [\n          \"materials\",\n          Utils.getRefArrayReader(this.ModelMaterialDataV14),\n          \"meshes\",\n          Utils.getRefArrayReader(this.ModelMeshDataV14),\n          \"model\",\n          Utils.getPointerReader(this.ModelModelDataV14),\n          \"properties\",\n          Utils.getPointerReader(this.ModelPropertyDataV14),\n          \"cloudData\",\n          Utils.getPointerReader(this.ModelCloudDataV14),\n          \"streakData\",\n          Utils.getPointerReader(this.ModelStreakDataV14),\n        ];\n      },\n\n      // => Version: 13\n      13: function () {\n        this.ModelTextureDataV13 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"textureFlags\",\n          \"uint32\",\n          \"token\",\n          Utils.getQWordReader(),\n          \"blitId\",\n          Utils.getQWordReader(),\n          \"uvAnimId\",\n          \"uint8\",\n          \"uvPSInputIndex\",\n          \"uint8\",\n        ];\n\n        this.ModelConstantDataV13 = [\"name\", \"uint32\", \"value\", [\"[]\", \"float32\", 4], \"constantFlags\", \"uint32\"];\n\n        this.ModelMaterialDataV13 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"materialFlags\",\n          \"uint32\",\n          \"sortOrder\",\n          \"uint32\",\n          \"texCoordCount\",\n          \"uint8\",\n          \"textures\",\n          Utils.getArrayReader(this.ModelTextureDataV13),\n          \"constants\",\n          Utils.getArrayReader(this.ModelConstantDataV13),\n        ];\n\n        this.PackGrannyMeshType = [\"mesh\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelMeshDataV13 = [\n          \"mesh\",\n          this.PackGrannyMeshType,\n          \"flags\",\n          \"uint32\",\n          \"visBoneIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"seamVertIndices\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n\n        this.ModelTransformDataV13 = [\n          \"Flags\",\n          \"uint32\",\n          \"Position\",\n          [\"[]\", \"float32\", 3],\n          \"Orientation\",\n          [\"[]\", \"float32\", 4],\n          \"ScaleShear\",\n          [\"[]\", [\"[]\", \"float32\", 3], 3],\n        ];\n\n        this.ModelBoneDataV13 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"ParentIndex\",\n          \"uint32\",\n          \"LocalTransform\",\n          this.ModelTransformDataV13,\n          \"InverseWorld4x4\",\n          [\"[]\", [\"[]\", \"float32\", 4], 4],\n          \"LODError\",\n          \"float32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n        ];\n\n        this.ModelSkeletonDataV13 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Bones\",\n          Utils.getArrayReader(this.ModelBoneDataV13),\n          \"LODType\",\n          \"uint32\",\n        ];\n\n        this.ModelMeshBindingDataV13 = [\"Mesh\", Utils.getPointerReader(\"uint8\")];\n\n        this.ModelModelDataV13 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Skeleton\",\n          Utils.getPointerReader(this.ModelSkeletonDataV13),\n          \"InitialPlacement\",\n          this.ModelTransformDataV13,\n          \"MeshBindings\",\n          Utils.getArrayReader(this.ModelMeshBindingDataV13),\n          \"boneFlags\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n\n        this.ModelFloatPropertyDataV13 = [\"token\", Utils.getQWordReader(), \"value\", \"float32\"];\n\n        this.ModelPropertyDataV13 = [\n          \"boolTokens\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"floatValues\",\n          Utils.getArrayReader(this.ModelFloatPropertyDataV13),\n        ];\n\n        this.ModelParticleCloudV13 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"drag\",\n          \"float32\",\n          \"emitterIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"obstacleIndices\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n\n        this.ModelParticleCurveV13 = [\"curveType\", \"uint8\", \"keys\", Utils.getArrayReader([\"[]\", \"float32\", 2])];\n\n        this.ModelParticleFlipbookV13 = [\n          \"columns\",\n          \"uint8\",\n          \"count\",\n          \"uint8\",\n          \"flags\",\n          \"uint8\",\n          \"fps\",\n          \"uint32\",\n          \"rows\",\n          \"uint8\",\n          \"start\",\n          \"uint8\",\n        ];\n\n        this.ModelParticleEmitterV13 = [\n          \"acceleration\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"accelerationDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"accelerationDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorBegin\",\n          [\"[]\", \"float32\", 4],\n          \"colorEnd\",\n          [\"[]\", \"float32\", 4],\n          \"colorPeriod\",\n          [\"[]\", \"float32\", 2],\n          \"colorFalloff\",\n          \"float32\",\n          \"drag\",\n          \"float32\",\n          \"opacityCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV13),\n          \"opacityCurvePreset\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"flipbook\",\n          Utils.getPointerReader(this.ModelParticleFlipbookV13),\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"rotationChange\",\n          [\"[]\", \"float32\", 2],\n          \"rotationDrag\",\n          \"float32\",\n          \"rotationInitial\",\n          [\"[]\", \"float32\", 2],\n          \"scaleChange\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleInitial\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV13),\n          \"scaleCurvePreset\",\n          \"uint32\",\n          \"velocity\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"velocityDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"velocityDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"spawnGroupSize\",\n          [\"[]\", \"float32\", 2],\n          \"spawnPeriod\",\n          \"float32\",\n          \"spawnProbability\",\n          \"float32\",\n          \"spawnRadius\",\n          [\"[]\", \"float32\", 2],\n          \"spawnShape\",\n          \"uint8\",\n          \"spawnWindEmit\",\n          [\"[]\", \"float32\", 2],\n          \"spawnWindSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"texCoordRect\",\n          [\"[]\", \"float32\", 4],\n          \"visBoneIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelParticleObstacleV13 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"dragCoef\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"geoData\",\n          [\"[]\", \"float32\", 3],\n          \"gravityCoef\",\n          \"float32\",\n          \"response\",\n          \"uint8\",\n          \"type\",\n          \"uint8\",\n          \"visBoneIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelCloudDataV13 = [\n          \"clouds\",\n          Utils.getArrayReader(this.ModelParticleCloudV13),\n          \"emitters\",\n          Utils.getArrayReader(this.ModelParticleEmitterV13),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelParticleObstacleV13),\n        ];\n\n        this.ModelStreakV13 = [\n          \"anchorIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"bone\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"spawnFreq\",\n          \"float32\",\n          \"stretchDist\",\n          \"float32\",\n          \"texScale\",\n          \"float32\",\n          \"visBoneIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelStreakAnchorV13 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"color\",\n          \"uint32\",\n          \"falloff\",\n          \"float32\",\n          \"lifetime\",\n          \"float32\",\n        ];\n\n        this.ModelStreakDataV13 = [\n          \"streaks\",\n          Utils.getArrayReader(this.ModelStreakV13),\n          \"anchors\",\n          Utils.getArrayReader(this.ModelStreakAnchorV13),\n        ];\n\n        this.__root = this.ModelFileDataV13 = [\n          \"materials\",\n          Utils.getRefArrayReader(this.ModelMaterialDataV13),\n          \"meshes\",\n          Utils.getRefArrayReader(this.ModelMeshDataV13),\n          \"model\",\n          Utils.getPointerReader(this.ModelModelDataV13),\n          \"properties\",\n          Utils.getPointerReader(this.ModelPropertyDataV13),\n          \"cloudData\",\n          Utils.getPointerReader(this.ModelCloudDataV13),\n          \"streakData\",\n          Utils.getPointerReader(this.ModelStreakDataV13),\n        ];\n      },\n\n      // => Version: 12\n      12: function () {\n        this.ModelTextureDataV12 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"textureFlags\",\n          \"uint32\",\n          \"token\",\n          Utils.getQWordReader(),\n          \"blitId\",\n          Utils.getQWordReader(),\n          \"uvAnimId\",\n          \"uint8\",\n          \"uvPSInputIndex\",\n          \"uint8\",\n        ];\n\n        this.ModelConstantDataV12 = [\"name\", \"uint32\", \"value\", [\"[]\", \"float32\", 4], \"constantFlags\", \"uint32\"];\n\n        this.ModelMaterialDataV12 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"materialFlags\",\n          \"uint32\",\n          \"sortOrder\",\n          \"uint32\",\n          \"texCoordCount\",\n          \"uint8\",\n          \"textures\",\n          Utils.getArrayReader(this.ModelTextureDataV12),\n          \"constants\",\n          Utils.getArrayReader(this.ModelConstantDataV12),\n        ];\n\n        this.PackGrannyMeshType = [\"mesh\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelMeshDataV12 = [\n          \"mesh\",\n          this.PackGrannyMeshType,\n          \"flags\",\n          \"uint32\",\n          \"visBoneIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"seamVertIndices\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n\n        this.ModelTransformDataV12 = [\n          \"Flags\",\n          \"uint32\",\n          \"Position\",\n          [\"[]\", \"float32\", 3],\n          \"Orientation\",\n          [\"[]\", \"float32\", 4],\n          \"ScaleShear\",\n          [\"[]\", [\"[]\", \"float32\", 3], 3],\n        ];\n\n        this.ModelBoneDataV12 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"ParentIndex\",\n          \"uint32\",\n          \"LocalTransform\",\n          this.ModelTransformDataV12,\n          \"InverseWorld4x4\",\n          [\"[]\", [\"[]\", \"float32\", 4], 4],\n          \"LODError\",\n          \"float32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n        ];\n\n        this.ModelSkeletonDataV12 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Bones\",\n          Utils.getArrayReader(this.ModelBoneDataV12),\n          \"LODType\",\n          \"uint32\",\n        ];\n\n        this.ModelMeshBindingDataV12 = [\"Mesh\", Utils.getPointerReader(\"uint8\")];\n\n        this.ModelModelDataV12 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Skeleton\",\n          Utils.getPointerReader(this.ModelSkeletonDataV12),\n          \"InitialPlacement\",\n          this.ModelTransformDataV12,\n          \"MeshBindings\",\n          Utils.getArrayReader(this.ModelMeshBindingDataV12),\n          \"boneFlags\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n\n        this.ModelFloatPropertyDataV12 = [\"token\", Utils.getQWordReader(), \"value\", \"float32\"];\n\n        this.ModelPropertyDataV12 = [\n          \"boolTokens\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"floatValues\",\n          Utils.getArrayReader(this.ModelFloatPropertyDataV12),\n        ];\n\n        this.ModelParticleCloudV12 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"drag\",\n          \"float32\",\n          \"emitterIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"obstacleIndices\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n\n        this.ModelParticleCurveV12 = [\"curveType\", \"uint8\", \"keys\", Utils.getArrayReader([\"[]\", \"float32\", 2])];\n\n        this.ModelParticleFlipbookV12 = [\n          \"columns\",\n          \"uint8\",\n          \"count\",\n          \"uint8\",\n          \"flags\",\n          \"uint8\",\n          \"fps\",\n          \"uint32\",\n          \"rows\",\n          \"uint8\",\n          \"start\",\n          \"uint8\",\n        ];\n\n        this.ModelParticleEmitterV12 = [\n          \"acceleration\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"accelerationDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"accelerationDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorBegin\",\n          [\"[]\", \"float32\", 4],\n          \"colorEnd\",\n          [\"[]\", \"float32\", 4],\n          \"colorPeriod\",\n          [\"[]\", \"float32\", 2],\n          \"colorFalloff\",\n          \"float32\",\n          \"drag\",\n          \"float32\",\n          \"opacityCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV12),\n          \"opacityCurvePreset\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"flipbook\",\n          Utils.getPointerReader(this.ModelParticleFlipbookV12),\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"rotationChange\",\n          [\"[]\", \"float32\", 2],\n          \"rotationDrag\",\n          \"float32\",\n          \"rotationInitial\",\n          [\"[]\", \"float32\", 2],\n          \"scaleChange\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleInitial\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV12),\n          \"scaleCurvePreset\",\n          \"uint32\",\n          \"velocity\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"velocityDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"velocityDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"spawnGroupSize\",\n          [\"[]\", \"float32\", 2],\n          \"spawnPeriod\",\n          \"float32\",\n          \"spawnProbability\",\n          \"float32\",\n          \"spawnRadius\",\n          [\"[]\", \"float32\", 2],\n          \"spawnShape\",\n          \"uint8\",\n          \"spawnWindEmit\",\n          [\"[]\", \"float32\", 2],\n          \"spawnWindSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"texCoordRect\",\n          [\"[]\", \"float32\", 4],\n          \"visBoneIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelParticleObstacleV12 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"dragCoef\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"geoData\",\n          [\"[]\", \"float32\", 3],\n          \"gravityCoef\",\n          \"float32\",\n          \"response\",\n          \"uint8\",\n          \"type\",\n          \"uint8\",\n          \"visBoneIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelCloudDataV12 = [\n          \"clouds\",\n          Utils.getArrayReader(this.ModelParticleCloudV12),\n          \"emitters\",\n          Utils.getArrayReader(this.ModelParticleEmitterV12),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelParticleObstacleV12),\n        ];\n\n        this.ModelStreakV12 = [\n          \"anchorIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"bone\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"spawnFreq\",\n          \"float32\",\n          \"stretchDist\",\n          \"float32\",\n          \"texScale\",\n          \"float32\",\n          \"visBoneIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelStreakAnchorV12 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"color\",\n          \"uint32\",\n          \"falloff\",\n          \"float32\",\n          \"lifetime\",\n          \"float32\",\n        ];\n\n        this.ModelStreakDataV12 = [\n          \"streaks\",\n          Utils.getArrayReader(this.ModelStreakV12),\n          \"anchors\",\n          Utils.getArrayReader(this.ModelStreakAnchorV12),\n        ];\n\n        this.__root = this.ModelFileDataV12 = [\n          \"materials\",\n          Utils.getRefArrayReader(this.ModelMaterialDataV12),\n          \"meshes\",\n          Utils.getRefArrayReader(this.ModelMeshDataV12),\n          \"model\",\n          Utils.getPointerReader(this.ModelModelDataV12),\n          \"properties\",\n          Utils.getPointerReader(this.ModelPropertyDataV12),\n          \"cloudData\",\n          Utils.getPointerReader(this.ModelCloudDataV12),\n          \"streakData\",\n          Utils.getPointerReader(this.ModelStreakDataV12),\n        ];\n      },\n\n      // => Version: 11, ReferencedFunction: 0xF296A0\n      11: function () {\n        this.ModelTextureDataV11 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"textureFlags\",\n          \"uint32\",\n          \"token\",\n          Utils.getQWordReader(),\n          \"blitId\",\n          Utils.getQWordReader(),\n          \"uvAnimId\",\n          \"uint8\",\n          \"uvPSInputIndex\",\n          \"uint8\",\n        ];\n\n        this.ModelConstantDataV11 = [\"name\", \"uint32\", \"value\", [\"[]\", \"float32\", 4], \"constantFlags\", \"uint32\"];\n\n        this.ModelMaterialDataV11 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"materialFlags\",\n          \"uint32\",\n          \"sortOrder\",\n          \"uint32\",\n          \"texCoordCount\",\n          \"uint8\",\n          \"textures\",\n          Utils.getArrayReader(this.ModelTextureDataV11),\n          \"constants\",\n          Utils.getArrayReader(this.ModelConstantDataV11),\n        ];\n\n        this.PackGrannyMeshType = [\"mesh\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelMeshDataV11 = [\n          \"mesh\",\n          this.PackGrannyMeshType,\n          \"flags\",\n          \"uint32\",\n          \"visBoneIndices\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n\n        this.ModelTransformDataV11 = [\n          \"Flags\",\n          \"uint32\",\n          \"Position\",\n          [\"[]\", \"float32\", 3],\n          \"Orientation\",\n          [\"[]\", \"float32\", 4],\n          \"ScaleShear\",\n          [\"[]\", [\"[]\", \"float32\", 3], 3],\n        ];\n\n        this.ModelBoneDataV11 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"ParentIndex\",\n          \"uint32\",\n          \"LocalTransform\",\n          this.ModelTransformDataV11,\n          \"InverseWorld4x4\",\n          [\"[]\", [\"[]\", \"float32\", 4], 4],\n          \"LODError\",\n          \"float32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n        ];\n\n        this.ModelSkeletonDataV11 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Bones\",\n          Utils.getArrayReader(this.ModelBoneDataV11),\n          \"LODType\",\n          \"uint32\",\n        ];\n\n        this.ModelMeshBindingDataV11 = [\"Mesh\", Utils.getPointerReader(\"uint8\")];\n\n        this.ModelModelDataV11 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Skeleton\",\n          Utils.getPointerReader(this.ModelSkeletonDataV11),\n          \"InitialPlacement\",\n          this.ModelTransformDataV11,\n          \"MeshBindings\",\n          Utils.getArrayReader(this.ModelMeshBindingDataV11),\n          \"boneFlags\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n\n        this.ModelFloatPropertyDataV11 = [\"token\", Utils.getQWordReader(), \"value\", \"float32\"];\n\n        this.ModelPropertyDataV11 = [\n          \"boolTokens\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"floatValues\",\n          Utils.getArrayReader(this.ModelFloatPropertyDataV11),\n        ];\n\n        this.ModelParticleCloudV11 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"drag\",\n          \"float32\",\n          \"emitterIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"obstacleIndices\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n\n        this.ModelParticleCurveV11 = [\"curveType\", \"uint8\", \"keys\", Utils.getArrayReader([\"[]\", \"float32\", 2])];\n\n        this.ModelParticleFlipbookV11 = [\n          \"columns\",\n          \"uint8\",\n          \"count\",\n          \"uint8\",\n          \"flags\",\n          \"uint8\",\n          \"fps\",\n          \"uint32\",\n          \"rows\",\n          \"uint8\",\n          \"start\",\n          \"uint8\",\n        ];\n\n        this.ModelParticleEmitterV11 = [\n          \"acceleration\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"accelerationDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"accelerationDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorBegin\",\n          [\"[]\", \"float32\", 4],\n          \"colorEnd\",\n          [\"[]\", \"float32\", 4],\n          \"colorPeriod\",\n          [\"[]\", \"float32\", 2],\n          \"colorFalloff\",\n          \"float32\",\n          \"drag\",\n          \"float32\",\n          \"opacityCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV11),\n          \"opacityCurvePreset\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"flipbook\",\n          Utils.getPointerReader(this.ModelParticleFlipbookV11),\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"rotationChange\",\n          [\"[]\", \"float32\", 2],\n          \"rotationDrag\",\n          \"float32\",\n          \"rotationInitial\",\n          [\"[]\", \"float32\", 2],\n          \"scaleChange\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleInitial\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleCurve\",\n          Utils.getPointerReader(this.ModelParticleCurveV11),\n          \"scaleCurvePreset\",\n          \"uint32\",\n          \"velocity\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"velocityDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"velocityDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"spawnGroupSize\",\n          [\"[]\", \"float32\", 2],\n          \"spawnPeriod\",\n          \"float32\",\n          \"spawnProbability\",\n          \"float32\",\n          \"spawnRadius\",\n          [\"[]\", \"float32\", 2],\n          \"spawnShape\",\n          \"uint8\",\n          \"spawnWindEmit\",\n          [\"[]\", \"float32\", 2],\n          \"spawnWindSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"texCoordRect\",\n          [\"[]\", \"float32\", 4],\n          \"visBoneIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelParticleObstacleV11 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"dragCoef\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"geoData\",\n          [\"[]\", \"float32\", 3],\n          \"gravityCoef\",\n          \"float32\",\n          \"response\",\n          \"uint8\",\n          \"type\",\n          \"uint8\",\n          \"visBoneIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelCloudDataV11 = [\n          \"clouds\",\n          Utils.getArrayReader(this.ModelParticleCloudV11),\n          \"emitters\",\n          Utils.getArrayReader(this.ModelParticleEmitterV11),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelParticleObstacleV11),\n        ];\n\n        this.ModelStreakV11 = [\n          \"anchorIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"bone\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"spawnFreq\",\n          \"float32\",\n          \"stretchDist\",\n          \"float32\",\n          \"texScale\",\n          \"float32\",\n          \"visBoneIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelStreakAnchorV11 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"color\",\n          \"uint32\",\n          \"falloff\",\n          \"float32\",\n          \"lifetime\",\n          \"float32\",\n        ];\n\n        this.ModelStreakDataV11 = [\n          \"streaks\",\n          Utils.getArrayReader(this.ModelStreakV11),\n          \"anchors\",\n          Utils.getArrayReader(this.ModelStreakAnchorV11),\n        ];\n\n        this.__root = this.ModelFileDataV11 = [\n          \"materials\",\n          Utils.getRefArrayReader(this.ModelMaterialDataV11),\n          \"meshes\",\n          Utils.getRefArrayReader(this.ModelMeshDataV11),\n          \"model\",\n          Utils.getPointerReader(this.ModelModelDataV11),\n          \"properties\",\n          Utils.getPointerReader(this.ModelPropertyDataV11),\n          \"cloudData\",\n          Utils.getPointerReader(this.ModelCloudDataV11),\n          \"streakData\",\n          Utils.getPointerReader(this.ModelStreakDataV11),\n        ];\n      },\n\n      // => Version: 10\n      10: function () {\n        this.ModelTextureDataV10 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"textureFlags\",\n          \"uint32\",\n          \"token\",\n          Utils.getQWordReader(),\n          \"blitId\",\n          Utils.getQWordReader(),\n          \"uvAnimId\",\n          \"uint8\",\n          \"uvPSInputIndex\",\n          \"uint8\",\n        ];\n\n        this.ModelConstantDataV10 = [\"name\", \"uint32\", \"value\", [\"[]\", \"float32\", 4], \"constantFlags\", \"uint32\"];\n\n        this.ModelMaterialDataV10 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"materialFlags\",\n          \"uint32\",\n          \"sortOrder\",\n          \"uint32\",\n          \"texCoordCount\",\n          \"uint8\",\n          \"textures\",\n          Utils.getArrayReader(this.ModelTextureDataV10),\n          \"constants\",\n          Utils.getArrayReader(this.ModelConstantDataV10),\n        ];\n\n        this.PackGrannyMeshType = [\"mesh\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelMeshDataV10 = [\n          \"mesh\",\n          this.PackGrannyMeshType,\n          \"flags\",\n          \"uint32\",\n          \"visBoneIndices\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n\n        this.ModelTransformDataV10 = [\n          \"Flags\",\n          \"uint32\",\n          \"Position\",\n          [\"[]\", \"float32\", 3],\n          \"Orientation\",\n          [\"[]\", \"float32\", 4],\n          \"ScaleShear\",\n          [\"[]\", [\"[]\", \"float32\", 3], 3],\n        ];\n\n        this.ModelBoneDataV10 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"ParentIndex\",\n          \"uint32\",\n          \"LocalTransform\",\n          this.ModelTransformDataV10,\n          \"InverseWorld4x4\",\n          [\"[]\", [\"[]\", \"float32\", 4], 4],\n          \"LODError\",\n          \"float32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n        ];\n\n        this.ModelSkeletonDataV10 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Bones\",\n          Utils.getArrayReader(this.ModelBoneDataV10),\n          \"LODType\",\n          \"uint32\",\n        ];\n\n        this.ModelMeshBindingDataV10 = [\"Mesh\", Utils.getPointerReader(\"uint8\")];\n\n        this.ModelModelDataV10 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Skeleton\",\n          Utils.getPointerReader(this.ModelSkeletonDataV10),\n          \"InitialPlacement\",\n          this.ModelTransformDataV10,\n          \"MeshBindings\",\n          Utils.getArrayReader(this.ModelMeshBindingDataV10),\n          \"boneFlags\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n\n        this.ModelFloatPropertyDataV10 = [\"token\", Utils.getQWordReader(), \"value\", \"float32\"];\n\n        this.ModelPropertyDataV10 = [\n          \"boolTokens\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"floatValues\",\n          Utils.getArrayReader(this.ModelFloatPropertyDataV10),\n        ];\n\n        this.ModelParticleFlipbookV10 = [\n          \"columns\",\n          \"uint8\",\n          \"count\",\n          \"uint8\",\n          \"flags\",\n          \"uint8\",\n          \"fps\",\n          \"uint32\",\n          \"rows\",\n          \"uint8\",\n          \"start\",\n          \"uint8\",\n        ];\n\n        this.ModelParticleCloudV10 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"drag\",\n          \"float32\",\n          \"emitterIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"flags\",\n          \"uint32\",\n          \"flipbook\",\n          Utils.getArrayReader(this.ModelParticleFlipbookV10),\n          \"materialIndex\",\n          \"uint32\",\n          \"obstacleIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"opacityCurveType\",\n          \"uint8\",\n          \"opacityKeys\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n          \"scaleCurveType\",\n          \"uint8\",\n          \"scaleKeys\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n        ];\n\n        this.ModelParticleEmitterV10 = [\n          \"acceleration\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorBegin\",\n          [\"[]\", \"float32\", 4],\n          \"colorEnd\",\n          [\"[]\", \"float32\", 4],\n          \"colorPeriod\",\n          [\"[]\", \"float32\", 2],\n          \"flags\",\n          \"uint32\",\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"rotationChange\",\n          [\"[]\", \"float32\", 2],\n          \"rotationInitial\",\n          [\"[]\", \"float32\", 2],\n          \"scaleChange\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleInitial\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"velocity\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"velocityDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"velocityDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"spawnGroupSize\",\n          [\"[]\", \"float32\", 2],\n          \"spawnPeriod\",\n          \"float32\",\n          \"spawnProbability\",\n          \"float32\",\n          \"spawnRadius\",\n          [\"[]\", \"float32\", 2],\n          \"spawnShape\",\n          \"uint8\",\n          \"visBoneIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelParticleObstacleV10 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"dragCoef\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"geoData\",\n          [\"[]\", \"float32\", 3],\n          \"gravityCoef\",\n          \"float32\",\n          \"response\",\n          \"uint8\",\n          \"type\",\n          \"uint8\",\n          \"visBoneIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelCloudDataV10 = [\n          \"clouds\",\n          Utils.getArrayReader(this.ModelParticleCloudV10),\n          \"emitters\",\n          Utils.getArrayReader(this.ModelParticleEmitterV10),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelParticleObstacleV10),\n        ];\n\n        this.ModelStreakV10 = [\n          \"anchorIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"bone\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"materialIndex\",\n          \"uint32\",\n          \"spawnFreq\",\n          \"float32\",\n          \"stretchDist\",\n          \"float32\",\n          \"texScale\",\n          \"float32\",\n          \"visBoneIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelStreakAnchorV10 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"color\",\n          \"uint32\",\n          \"falloff\",\n          \"float32\",\n          \"lifetime\",\n          \"float32\",\n        ];\n\n        this.ModelStreakDataV10 = [\n          \"streaks\",\n          Utils.getArrayReader(this.ModelStreakV10),\n          \"anchors\",\n          Utils.getArrayReader(this.ModelStreakAnchorV10),\n        ];\n\n        this.__root = this.ModelFileDataV10 = [\n          \"materials\",\n          Utils.getRefArrayReader(this.ModelMaterialDataV10),\n          \"meshes\",\n          Utils.getRefArrayReader(this.ModelMeshDataV10),\n          \"model\",\n          Utils.getPointerReader(this.ModelModelDataV10),\n          \"properties\",\n          Utils.getPointerReader(this.ModelPropertyDataV10),\n          \"cloudData\",\n          Utils.getPointerReader(this.ModelCloudDataV10),\n          \"streakData\",\n          Utils.getPointerReader(this.ModelStreakDataV10),\n        ];\n      },\n\n      // => Version: 9\n      9: function () {\n        this.ModelTextureDataV9 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"textureFlags\",\n          \"uint32\",\n          \"token\",\n          Utils.getQWordReader(),\n          \"blitId\",\n          Utils.getQWordReader(),\n          \"uvAnimId\",\n          \"uint8\",\n          \"uvPSInputIndex\",\n          \"uint8\",\n        ];\n\n        this.ModelConstantDataV9 = [\"name\", \"uint32\", \"value\", [\"[]\", \"float32\", 4], \"constantFlags\", \"uint32\"];\n\n        this.ModelMaterialDataV9 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"materialFlags\",\n          \"uint32\",\n          \"sortOrder\",\n          \"uint32\",\n          \"texCoordCount\",\n          \"uint8\",\n          \"textures\",\n          Utils.getArrayReader(this.ModelTextureDataV9),\n          \"constants\",\n          Utils.getArrayReader(this.ModelConstantDataV9),\n        ];\n\n        this.PackGrannyMeshType = [\"mesh\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelMeshDataV9 = [\n          \"mesh\",\n          this.PackGrannyMeshType,\n          \"flags\",\n          \"uint32\",\n          \"visBoneIndices\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n\n        this.ModelTransformDataV9 = [\n          \"Flags\",\n          \"uint32\",\n          \"Position\",\n          [\"[]\", \"float32\", 3],\n          \"Orientation\",\n          [\"[]\", \"float32\", 4],\n          \"ScaleShear\",\n          [\"[]\", [\"[]\", \"float32\", 3], 3],\n        ];\n\n        this.ModelBoneDataV9 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"ParentIndex\",\n          \"uint32\",\n          \"LocalTransform\",\n          this.ModelTransformDataV9,\n          \"InverseWorld4x4\",\n          [\"[]\", [\"[]\", \"float32\", 4], 4],\n          \"LODError\",\n          \"float32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n        ];\n\n        this.ModelSkeletonDataV9 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Bones\",\n          Utils.getArrayReader(this.ModelBoneDataV9),\n          \"LODType\",\n          \"uint32\",\n        ];\n\n        this.ModelMeshBindingDataV9 = [\"Mesh\", Utils.getPointerReader(\"uint8\")];\n\n        this.ModelModelDataV9 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Skeleton\",\n          Utils.getPointerReader(this.ModelSkeletonDataV9),\n          \"InitialPlacement\",\n          this.ModelTransformDataV9,\n          \"MeshBindings\",\n          Utils.getArrayReader(this.ModelMeshBindingDataV9),\n          \"boneFlags\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n\n        this.ModelFloatPropertyDataV9 = [\"token\", Utils.getQWordReader(), \"value\", \"float32\"];\n\n        this.ModelPropertyDataV9 = [\n          \"boolTokens\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"floatValues\",\n          Utils.getArrayReader(this.ModelFloatPropertyDataV9),\n        ];\n\n        this.ModelParticleFlipbookV9 = [\n          \"columns\",\n          \"uint8\",\n          \"count\",\n          \"uint8\",\n          \"flags\",\n          \"uint8\",\n          \"fps\",\n          \"uint32\",\n          \"rows\",\n          \"uint8\",\n          \"start\",\n          \"uint8\",\n        ];\n\n        this.ModelParticleCloudV9 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"drag\",\n          \"float32\",\n          \"emitterIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"flags\",\n          \"uint32\",\n          \"flipbook\",\n          Utils.getArrayReader(this.ModelParticleFlipbookV9),\n          \"materialIndex\",\n          \"uint32\",\n          \"obstacleIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"opacityCurveType\",\n          \"uint8\",\n          \"opacityKeys\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n          \"scaleCurveType\",\n          \"uint8\",\n          \"scaleKeys\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n        ];\n\n        this.ModelParticleEmitterV9 = [\n          \"acceleration\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorBegin\",\n          [\"[]\", \"float32\", 4],\n          \"colorEnd\",\n          [\"[]\", \"float32\", 4],\n          \"colorPeriod\",\n          [\"[]\", \"float32\", 2],\n          \"flags\",\n          \"uint32\",\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"rotationChange\",\n          [\"[]\", \"float32\", 2],\n          \"rotationInitial\",\n          [\"[]\", \"float32\", 2],\n          \"scaleChange\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleInitial\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"velocity\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"velocityDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"velocityDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"spawnGroupSize\",\n          [\"[]\", \"float32\", 2],\n          \"spawnPeriod\",\n          \"float32\",\n          \"spawnProbability\",\n          \"float32\",\n          \"spawnRadius\",\n          [\"[]\", \"float32\", 2],\n          \"spawnShape\",\n          \"uint8\",\n          \"visBoneIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelParticleObstacleV9 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"dragCoef\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"geoData\",\n          [\"[]\", \"float32\", 3],\n          \"gravityCoef\",\n          \"float32\",\n          \"response\",\n          \"uint8\",\n          \"type\",\n          \"uint8\",\n          \"visBoneIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelCloudDataV9 = [\n          \"clouds\",\n          Utils.getArrayReader(this.ModelParticleCloudV9),\n          \"emitters\",\n          Utils.getArrayReader(this.ModelParticleEmitterV9),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelParticleObstacleV9),\n        ];\n\n        this.__root = this.ModelFileDataV9 = [\n          \"materials\",\n          Utils.getRefArrayReader(this.ModelMaterialDataV9),\n          \"meshes\",\n          Utils.getRefArrayReader(this.ModelMeshDataV9),\n          \"model\",\n          Utils.getPointerReader(this.ModelModelDataV9),\n          \"properties\",\n          Utils.getPointerReader(this.ModelPropertyDataV9),\n          \"cloudData\",\n          Utils.getPointerReader(this.ModelCloudDataV9),\n        ];\n      },\n\n      // => Version: 8, ReferencedFunction: 0xF2C790\n      8: function () {\n        this.ModelTextureDataV8 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"textureFlags\",\n          \"uint32\",\n          \"token\",\n          Utils.getQWordReader(),\n          \"blitId\",\n          Utils.getQWordReader(),\n          \"uvAnimId\",\n          \"uint8\",\n          \"uvPSInputIndex\",\n          \"uint8\",\n        ];\n\n        this.ModelConstantDataV8 = [\"name\", \"uint32\", \"value\", [\"[]\", \"float32\", 4], \"constantFlags\", \"uint32\"];\n\n        this.ModelMaterialDataV8 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"materialFlags\",\n          \"uint32\",\n          \"sortOrder\",\n          \"uint32\",\n          \"textures\",\n          Utils.getArrayReader(this.ModelTextureDataV8),\n          \"constants\",\n          Utils.getArrayReader(this.ModelConstantDataV8),\n        ];\n\n        this.PackGrannyMeshType = [\"mesh\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelMeshDataV8 = [\n          \"mesh\",\n          this.PackGrannyMeshType,\n          \"flags\",\n          \"uint32\",\n          \"visBoneIndices\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n\n        this.ModelTransformDataV8 = [\n          \"Flags\",\n          \"uint32\",\n          \"Position\",\n          [\"[]\", \"float32\", 3],\n          \"Orientation\",\n          [\"[]\", \"float32\", 4],\n          \"ScaleShear\",\n          [\"[]\", [\"[]\", \"float32\", 3], 3],\n        ];\n\n        this.ModelBoneDataV8 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"ParentIndex\",\n          \"uint32\",\n          \"LocalTransform\",\n          this.ModelTransformDataV8,\n          \"InverseWorld4x4\",\n          [\"[]\", [\"[]\", \"float32\", 4], 4],\n          \"LODError\",\n          \"float32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n        ];\n\n        this.ModelSkeletonDataV8 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Bones\",\n          Utils.getArrayReader(this.ModelBoneDataV8),\n          \"LODType\",\n          \"uint32\",\n        ];\n\n        this.ModelMeshBindingDataV8 = [\"Mesh\", Utils.getPointerReader(\"uint8\")];\n\n        this.ModelModelDataV8 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Skeleton\",\n          Utils.getPointerReader(this.ModelSkeletonDataV8),\n          \"InitialPlacement\",\n          this.ModelTransformDataV8,\n          \"MeshBindings\",\n          Utils.getArrayReader(this.ModelMeshBindingDataV8),\n          \"boneFlags\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n\n        this.ModelFloatPropertyDataV8 = [\"token\", Utils.getQWordReader(), \"value\", \"float32\"];\n\n        this.ModelPropertyDataV8 = [\n          \"boolTokens\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"floatValues\",\n          Utils.getArrayReader(this.ModelFloatPropertyDataV8),\n        ];\n\n        this.ModelParticleFlipbookV8 = [\n          \"columns\",\n          \"uint8\",\n          \"count\",\n          \"uint8\",\n          \"flags\",\n          \"uint8\",\n          \"fps\",\n          \"uint32\",\n          \"rows\",\n          \"uint8\",\n          \"start\",\n          \"uint8\",\n        ];\n\n        this.ModelParticleCloudV8 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"drag\",\n          \"float32\",\n          \"emitterIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"flags\",\n          \"uint32\",\n          \"flipbook\",\n          Utils.getArrayReader(this.ModelParticleFlipbookV8),\n          \"materialIndex\",\n          \"uint32\",\n          \"obstacleIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"opacityCurveType\",\n          \"uint8\",\n          \"opacityKeys\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n          \"scaleCurveType\",\n          \"uint8\",\n          \"scaleKeys\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n        ];\n\n        this.ModelParticleEmitterV8 = [\n          \"acceleration\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorBegin\",\n          [\"[]\", \"float32\", 4],\n          \"colorEnd\",\n          [\"[]\", \"float32\", 4],\n          \"colorPeriod\",\n          [\"[]\", \"float32\", 2],\n          \"flags\",\n          \"uint32\",\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"rotationChange\",\n          [\"[]\", \"float32\", 2],\n          \"rotationInitial\",\n          [\"[]\", \"float32\", 2],\n          \"scaleChange\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleInitial\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"velocity\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"velocityDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"velocityDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"spawnGroupSize\",\n          [\"[]\", \"float32\", 2],\n          \"spawnPeriod\",\n          \"float32\",\n          \"spawnProbability\",\n          \"float32\",\n          \"spawnRadius\",\n          [\"[]\", \"float32\", 2],\n          \"spawnShape\",\n          \"uint8\",\n          \"visBoneIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelParticleObstacleV8 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"dragCoef\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"geoData\",\n          [\"[]\", \"float32\", 3],\n          \"gravityCoef\",\n          \"float32\",\n          \"response\",\n          \"uint8\",\n          \"type\",\n          \"uint8\",\n          \"visBoneIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelCloudDataV8 = [\n          \"clouds\",\n          Utils.getArrayReader(this.ModelParticleCloudV8),\n          \"emitters\",\n          Utils.getArrayReader(this.ModelParticleEmitterV8),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelParticleObstacleV8),\n        ];\n\n        this.__root = this.ModelFileDataV8 = [\n          \"materials\",\n          Utils.getRefArrayReader(this.ModelMaterialDataV8),\n          \"meshes\",\n          Utils.getRefArrayReader(this.ModelMeshDataV8),\n          \"model\",\n          Utils.getPointerReader(this.ModelModelDataV8),\n          \"properties\",\n          Utils.getPointerReader(this.ModelPropertyDataV8),\n          \"cloudData\",\n          Utils.getPointerReader(this.ModelCloudDataV8),\n        ];\n      },\n\n      // => Version: 7\n      7: function () {\n        this.ModelTextureDataV7 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"textureFlags\",\n          \"uint32\",\n          \"token\",\n          Utils.getQWordReader(),\n          \"blitId\",\n          Utils.getQWordReader(),\n        ];\n\n        this.ModelConstantDataV7 = [\"name\", \"uint32\", \"value\", [\"[]\", \"float32\", 4], \"constantFlags\", \"uint32\"];\n\n        this.ModelMaterialDataV7 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"materialFlags\",\n          \"uint32\",\n          \"sortOrder\",\n          \"uint32\",\n          \"textures\",\n          Utils.getArrayReader(this.ModelTextureDataV7),\n          \"constants\",\n          Utils.getArrayReader(this.ModelConstantDataV7),\n        ];\n\n        this.PackGrannyMeshType = [\"mesh\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelMeshDataV7 = [\n          \"mesh\",\n          this.PackGrannyMeshType,\n          \"flags\",\n          \"uint32\",\n          \"visBoneIndices\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n\n        this.PackGrannyAnimationTypeV0 = [\"animation\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelVisTrackDataV7 = [\"boneIndex\", \"uint32\", \"keys\", Utils.getArrayReader(\"float32\")];\n\n        this.ModelAnimationDataV7 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"animation\",\n          this.PackGrannyAnimationTypeV0,\n          \"moveSpeed\",\n          \"float32\",\n          \"visTrackData\",\n          Utils.getArrayReader(this.ModelVisTrackDataV7),\n        ];\n\n        this.ModelAnimationImportDataV7 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"sequenceTokens\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.ModelTransformDataV7 = [\n          \"Flags\",\n          \"uint32\",\n          \"Position\",\n          [\"[]\", \"float32\", 3],\n          \"Orientation\",\n          [\"[]\", \"float32\", 4],\n          \"ScaleShear\",\n          [\"[]\", [\"[]\", \"float32\", 3], 3],\n        ];\n\n        this.ModelBoneDataV7 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"ParentIndex\",\n          \"uint32\",\n          \"LocalTransform\",\n          this.ModelTransformDataV7,\n          \"InverseWorld4x4\",\n          [\"[]\", [\"[]\", \"float32\", 4], 4],\n          \"LODError\",\n          \"float32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n        ];\n\n        this.ModelSkeletonDataV7 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Bones\",\n          Utils.getArrayReader(this.ModelBoneDataV7),\n          \"LODType\",\n          \"uint32\",\n        ];\n\n        this.ModelMeshBindingDataV7 = [\"Mesh\", Utils.getPointerReader(\"uint8\")];\n\n        this.ModelModelDataV7 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Skeleton\",\n          Utils.getPointerReader(this.ModelSkeletonDataV7),\n          \"InitialPlacement\",\n          this.ModelTransformDataV7,\n          \"MeshBindings\",\n          Utils.getArrayReader(this.ModelMeshBindingDataV7),\n          \"boneFlags\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n\n        this.ModelFloatPropertyDataV7 = [\"token\", Utils.getQWordReader(), \"value\", \"float32\"];\n\n        this.ModelPropertyDataV7 = [\n          \"boolTokens\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"floatValues\",\n          Utils.getArrayReader(this.ModelFloatPropertyDataV7),\n        ];\n\n        this.ModelCollisionMeshV7 = [\n          \"animationSequence\",\n          Utils.getQWordReader(),\n          \"vertices\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"surfaces\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.ModelCollisionCloudV7 = [\n          \"animationSequence\",\n          Utils.getQWordReader(),\n          \"points\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"surface\",\n          \"uint8\",\n        ];\n\n        this.ModelCollisionCubeV7 = [\"transform\", [\"[]\", [\"[]\", \"float32\", 4], 3], \"surface\", \"uint8\"];\n\n        this.ModelCollisionSphereV7 = [\"radius\", \"float32\", \"position\", [\"[]\", \"float32\", 3], \"surface\", \"uint8\"];\n\n        this.ModelCollisionSurfaceV7 = [\"tokens\", Utils.getArrayReader(Utils.getQWordReader())];\n\n        this.ModelCollisionDataV7 = [\n          \"meshes\",\n          Utils.getArrayReader(this.ModelCollisionMeshV7),\n          \"clouds\",\n          Utils.getArrayReader(this.ModelCollisionCloudV7),\n          \"cubes\",\n          Utils.getArrayReader(this.ModelCollisionCubeV7),\n          \"spheres\",\n          Utils.getArrayReader(this.ModelCollisionSphereV7),\n          \"surfaces\",\n          Utils.getArrayReader(this.ModelCollisionSurfaceV7),\n        ];\n\n        this.ModelParticleFlipbookV7 = [\n          \"columns\",\n          \"uint8\",\n          \"count\",\n          \"uint8\",\n          \"flags\",\n          \"uint8\",\n          \"fps\",\n          \"uint32\",\n          \"rows\",\n          \"uint8\",\n          \"start\",\n          \"uint8\",\n        ];\n\n        this.ModelParticleCloudV7 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"drag\",\n          \"float32\",\n          \"emitterIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"flags\",\n          \"uint32\",\n          \"flipbook\",\n          Utils.getArrayReader(this.ModelParticleFlipbookV7),\n          \"materialIndex\",\n          \"uint32\",\n          \"obstacleIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"opacityCurveType\",\n          \"uint8\",\n          \"opacityKeys\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n          \"scaleCurveType\",\n          \"uint8\",\n          \"scaleKeys\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n        ];\n\n        this.ModelParticleEmitterV7 = [\n          \"acceleration\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorBegin\",\n          [\"[]\", \"float32\", 4],\n          \"colorEnd\",\n          [\"[]\", \"float32\", 4],\n          \"colorPeriod\",\n          [\"[]\", \"float32\", 2],\n          \"flags\",\n          \"uint32\",\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"rotationChange\",\n          [\"[]\", \"float32\", 2],\n          \"rotationInitial\",\n          [\"[]\", \"float32\", 2],\n          \"scaleChange\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleInitial\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"velocity\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"velocityDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"velocityDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"spawnGroupSize\",\n          [\"[]\", \"float32\", 2],\n          \"spawnPeriod\",\n          \"float32\",\n          \"spawnProbability\",\n          \"float32\",\n          \"spawnRadius\",\n          [\"[]\", \"float32\", 2],\n          \"spawnShape\",\n          \"uint8\",\n          \"visBoneIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelParticleObstacleV7 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"dragCoef\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"geoData\",\n          [\"[]\", \"float32\", 3],\n          \"gravityCoef\",\n          \"float32\",\n          \"response\",\n          \"uint8\",\n          \"type\",\n          \"uint8\",\n          \"visBoneIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelCloudDataV7 = [\n          \"clouds\",\n          Utils.getArrayReader(this.ModelParticleCloudV7),\n          \"emitters\",\n          Utils.getArrayReader(this.ModelParticleEmitterV7),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelParticleObstacleV7),\n        ];\n\n        this.__root = this.ModelFileDataV7 = [\n          \"materials\",\n          Utils.getRefArrayReader(this.ModelMaterialDataV7),\n          \"meshes\",\n          Utils.getRefArrayReader(this.ModelMeshDataV7),\n          \"animations\",\n          Utils.getRefArrayReader(this.ModelAnimationDataV7),\n          \"animationFallbacks\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"animationImports\",\n          Utils.getArrayReader(this.ModelAnimationImportDataV7),\n          \"model\",\n          Utils.getPointerReader(this.ModelModelDataV7),\n          \"properties\",\n          Utils.getPointerReader(this.ModelPropertyDataV7),\n          \"collisionData\",\n          Utils.getPointerReader(this.ModelCollisionDataV7),\n          \"cloudData\",\n          Utils.getPointerReader(this.ModelCloudDataV7),\n        ];\n      },\n\n      // => Version: 6, ReferencedFunction: 0xF2BED0\n      6: function () {\n        this.ModelTextureDataV6 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"textureFlags\",\n          \"uint32\",\n          \"token\",\n          Utils.getQWordReader(),\n          \"blitId\",\n          Utils.getQWordReader(),\n        ];\n\n        this.ModelConstantDataV6 = [\"name\", \"uint32\", \"value\", [\"[]\", \"float32\", 4], \"constantFlags\", \"uint32\"];\n\n        this.ModelMaterialDataV6 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"materialFlags\",\n          \"uint32\",\n          \"sortOrder\",\n          \"uint32\",\n          \"textures\",\n          Utils.getArrayReader(this.ModelTextureDataV6),\n          \"constants\",\n          Utils.getArrayReader(this.ModelConstantDataV6),\n        ];\n\n        this.PackGrannyMeshType = [\"mesh\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelMeshDataV6 = [\n          \"mesh\",\n          this.PackGrannyMeshType,\n          \"flags\",\n          \"uint32\",\n          \"visBoneIndices\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n\n        this.PackGrannyAnimationTypeV0 = [\"animation\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelVisTrackDataV6 = [\"boneIndex\", \"uint32\", \"keys\", Utils.getArrayReader(\"float32\")];\n\n        this.ModelAnimationDataV6 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"animation\",\n          this.PackGrannyAnimationTypeV0,\n          \"moveSpeed\",\n          \"float32\",\n          \"visTrackData\",\n          Utils.getArrayReader(this.ModelVisTrackDataV6),\n        ];\n\n        this.ModelAnimationImportDataV6 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"sequenceTokens\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.ModelTransformDataV6 = [\n          \"Flags\",\n          \"uint32\",\n          \"Position\",\n          [\"[]\", \"float32\", 3],\n          \"Orientation\",\n          [\"[]\", \"float32\", 4],\n          \"ScaleShear\",\n          [\"[]\", [\"[]\", \"float32\", 3], 3],\n        ];\n\n        this.ModelBoneDataV6 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"ParentIndex\",\n          \"uint32\",\n          \"LocalTransform\",\n          this.ModelTransformDataV6,\n          \"InverseWorld4x4\",\n          [\"[]\", [\"[]\", \"float32\", 4], 4],\n          \"LODError\",\n          \"float32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n        ];\n\n        this.ModelSkeletonDataV6 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Bones\",\n          Utils.getArrayReader(this.ModelBoneDataV6),\n          \"LODType\",\n          \"uint32\",\n        ];\n\n        this.ModelMeshBindingDataV6 = [\"Mesh\", Utils.getPointerReader(\"uint8\")];\n\n        this.ModelModelDataV6 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Skeleton\",\n          Utils.getPointerReader(this.ModelSkeletonDataV6),\n          \"InitialPlacement\",\n          this.ModelTransformDataV6,\n          \"MeshBindings\",\n          Utils.getArrayReader(this.ModelMeshBindingDataV6),\n        ];\n\n        this.ModelFloatPropertyDataV6 = [\"token\", Utils.getQWordReader(), \"value\", \"float32\"];\n\n        this.ModelPropertyDataV6 = [\n          \"boolTokens\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"floatValues\",\n          Utils.getArrayReader(this.ModelFloatPropertyDataV6),\n        ];\n\n        this.ModelCollisionMeshV6 = [\n          \"animationSequence\",\n          Utils.getQWordReader(),\n          \"vertices\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"surfaces\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.ModelCollisionCloudV6 = [\n          \"animationSequence\",\n          Utils.getQWordReader(),\n          \"points\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"surface\",\n          \"uint8\",\n        ];\n\n        this.ModelCollisionCubeV6 = [\"transform\", [\"[]\", [\"[]\", \"float32\", 4], 3], \"surface\", \"uint8\"];\n\n        this.ModelCollisionSphereV6 = [\"radius\", \"float32\", \"position\", [\"[]\", \"float32\", 3], \"surface\", \"uint8\"];\n\n        this.ModelCollisionSurfaceV6 = [\"tokens\", Utils.getArrayReader(Utils.getQWordReader())];\n\n        this.ModelCollisionDataV6 = [\n          \"meshes\",\n          Utils.getArrayReader(this.ModelCollisionMeshV6),\n          \"clouds\",\n          Utils.getArrayReader(this.ModelCollisionCloudV6),\n          \"cubes\",\n          Utils.getArrayReader(this.ModelCollisionCubeV6),\n          \"spheres\",\n          Utils.getArrayReader(this.ModelCollisionSphereV6),\n          \"surfaces\",\n          Utils.getArrayReader(this.ModelCollisionSurfaceV6),\n        ];\n\n        this.ModelParticleFlipbookV6 = [\n          \"columns\",\n          \"uint8\",\n          \"count\",\n          \"uint8\",\n          \"flags\",\n          \"uint8\",\n          \"fps\",\n          \"uint32\",\n          \"rows\",\n          \"uint8\",\n          \"start\",\n          \"uint8\",\n        ];\n\n        this.ModelParticleCloudV6 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"drag\",\n          \"float32\",\n          \"emitterIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"flags\",\n          \"uint32\",\n          \"flipbook\",\n          Utils.getArrayReader(this.ModelParticleFlipbookV6),\n          \"materialIndex\",\n          \"uint32\",\n          \"obstacleIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"opacityCurveType\",\n          \"uint8\",\n          \"opacityKeys\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n          \"scaleCurveType\",\n          \"uint8\",\n          \"scaleKeys\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n        ];\n\n        this.ModelParticleEmitterV6 = [\n          \"acceleration\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorBegin\",\n          [\"[]\", \"float32\", 4],\n          \"colorEnd\",\n          [\"[]\", \"float32\", 4],\n          \"colorPeriod\",\n          [\"[]\", \"float32\", 2],\n          \"flags\",\n          \"uint32\",\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"rotationChange\",\n          [\"[]\", \"float32\", 2],\n          \"rotationInitial\",\n          [\"[]\", \"float32\", 2],\n          \"scaleChange\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleInitial\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"velocity\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"velocityDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"velocityDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"spawnGroupSize\",\n          [\"[]\", \"float32\", 2],\n          \"spawnPeriod\",\n          \"float32\",\n          \"spawnProbability\",\n          \"float32\",\n          \"spawnRadius\",\n          [\"[]\", \"float32\", 2],\n          \"spawnShape\",\n          \"uint8\",\n          \"visBoneIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelParticleObstacleV6 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"dragCoef\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"geoData\",\n          [\"[]\", \"float32\", 3],\n          \"gravityCoef\",\n          \"float32\",\n          \"response\",\n          \"uint8\",\n          \"type\",\n          \"uint8\",\n          \"visBoneIndex\",\n          \"uint32\",\n        ];\n\n        this.ModelCloudDataV6 = [\n          \"clouds\",\n          Utils.getArrayReader(this.ModelParticleCloudV6),\n          \"emitters\",\n          Utils.getArrayReader(this.ModelParticleEmitterV6),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelParticleObstacleV6),\n        ];\n\n        this.__root = this.ModelFileDataV6 = [\n          \"materials\",\n          Utils.getRefArrayReader(this.ModelMaterialDataV6),\n          \"meshes\",\n          Utils.getRefArrayReader(this.ModelMeshDataV6),\n          \"animations\",\n          Utils.getRefArrayReader(this.ModelAnimationDataV6),\n          \"animationFallbacks\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"animationImports\",\n          Utils.getArrayReader(this.ModelAnimationImportDataV6),\n          \"model\",\n          Utils.getPointerReader(this.ModelModelDataV6),\n          \"properties\",\n          Utils.getPointerReader(this.ModelPropertyDataV6),\n          \"collisionData\",\n          Utils.getPointerReader(this.ModelCollisionDataV6),\n          \"cloudData\",\n          Utils.getPointerReader(this.ModelCloudDataV6),\n        ];\n      },\n\n      // => Version: 5\n      5: function () {\n        this.ModelTextureDataV5 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"textureFlags\",\n          \"uint32\",\n          \"token\",\n          Utils.getQWordReader(),\n          \"blitId\",\n          Utils.getQWordReader(),\n        ];\n\n        this.ModelConstantDataV5 = [\"name\", \"uint32\", \"value\", [\"[]\", \"float32\", 4], \"constantFlags\", \"uint32\"];\n\n        this.ModelMaterialDataV5 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"materialFlags\",\n          \"uint32\",\n          \"sortOrder\",\n          \"uint32\",\n          \"textures\",\n          Utils.getArrayReader(this.ModelTextureDataV5),\n          \"constants\",\n          Utils.getArrayReader(this.ModelConstantDataV5),\n        ];\n\n        this.PackGrannyMeshType = [\"mesh\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelMeshDataV5 = [\n          \"mesh\",\n          this.PackGrannyMeshType,\n          \"flags\",\n          \"uint32\",\n          \"visTokens\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.PackGrannyAnimationTypeV0 = [\"animation\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelVisTrackDataV5 = [\"token\", Utils.getQWordReader(), \"keys\", Utils.getArrayReader(\"float32\")];\n\n        this.ModelAnimationDataV5 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"animation\",\n          this.PackGrannyAnimationTypeV0,\n          \"moveSpeed\",\n          \"float32\",\n          \"visTrackData\",\n          Utils.getArrayReader(this.ModelVisTrackDataV5),\n        ];\n\n        this.ModelTransformDataV5 = [\n          \"Flags\",\n          \"uint32\",\n          \"Position\",\n          [\"[]\", \"float32\", 3],\n          \"Orientation\",\n          [\"[]\", \"float32\", 4],\n          \"ScaleShear\",\n          [\"[]\", [\"[]\", \"float32\", 3], 3],\n        ];\n\n        this.ModelBoneDataV5 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"ParentIndex\",\n          \"uint32\",\n          \"LocalTransform\",\n          this.ModelTransformDataV5,\n          \"InverseWorld4x4\",\n          [\"[]\", [\"[]\", \"float32\", 4], 4],\n          \"LODError\",\n          \"float32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n        ];\n\n        this.ModelSkeletonDataV5 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Bones\",\n          Utils.getArrayReader(this.ModelBoneDataV5),\n          \"LODType\",\n          \"uint32\",\n        ];\n\n        this.ModelMeshBindingDataV5 = [\"Mesh\", Utils.getPointerReader(\"uint8\")];\n\n        this.ModelModelDataV5 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Skeleton\",\n          Utils.getPointerReader(this.ModelSkeletonDataV5),\n          \"InitialPlacement\",\n          this.ModelTransformDataV5,\n          \"MeshBindings\",\n          Utils.getArrayReader(this.ModelMeshBindingDataV5),\n        ];\n\n        this.ModelFloatPropertyDataV5 = [\"token\", Utils.getQWordReader(), \"value\", \"float32\"];\n\n        this.ModelPropertyDataV5 = [\n          \"boolTokens\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"floatValues\",\n          Utils.getArrayReader(this.ModelFloatPropertyDataV5),\n        ];\n\n        this.ModelCollisionMeshV5 = [\n          \"animationSequence\",\n          Utils.getQWordReader(),\n          \"vertices\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"surfaces\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.ModelCollisionCloudV5 = [\n          \"animationSequence\",\n          Utils.getQWordReader(),\n          \"points\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"surface\",\n          \"uint8\",\n        ];\n\n        this.ModelCollisionCubeV5 = [\"transform\", [\"[]\", [\"[]\", \"float32\", 4], 3], \"surface\", \"uint8\"];\n\n        this.ModelCollisionSphereV5 = [\"radius\", \"float32\", \"position\", [\"[]\", \"float32\", 3], \"surface\", \"uint8\"];\n\n        this.ModelCollisionSurfaceV5 = [\"tokens\", Utils.getArrayReader(Utils.getQWordReader())];\n\n        this.ModelCollisionDataV5 = [\n          \"meshes\",\n          Utils.getArrayReader(this.ModelCollisionMeshV5),\n          \"clouds\",\n          Utils.getArrayReader(this.ModelCollisionCloudV5),\n          \"cubes\",\n          Utils.getArrayReader(this.ModelCollisionCubeV5),\n          \"spheres\",\n          Utils.getArrayReader(this.ModelCollisionSphereV5),\n          \"surfaces\",\n          Utils.getArrayReader(this.ModelCollisionSurfaceV5),\n        ];\n\n        this.ModelParticleFlipbookV5 = [\n          \"columns\",\n          \"uint8\",\n          \"count\",\n          \"uint8\",\n          \"flags\",\n          \"uint8\",\n          \"fps\",\n          \"uint32\",\n          \"rows\",\n          \"uint8\",\n          \"start\",\n          \"uint8\",\n        ];\n\n        this.ModelParticleCloudV5 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"drag\",\n          \"float32\",\n          \"emitterIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"flags\",\n          \"uint32\",\n          \"flipbook\",\n          Utils.getArrayReader(this.ModelParticleFlipbookV5),\n          \"materialIndex\",\n          \"uint32\",\n          \"obstacleIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"opacityCurveType\",\n          \"uint8\",\n          \"opacityKeys\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n          \"scaleCurveType\",\n          \"uint8\",\n          \"scaleKeys\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n        ];\n\n        this.ModelParticleEmitterV5 = [\n          \"acceleration\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorBegin\",\n          [\"[]\", \"float32\", 4],\n          \"colorEnd\",\n          [\"[]\", \"float32\", 4],\n          \"colorPeriod\",\n          [\"[]\", \"float32\", 2],\n          \"flags\",\n          \"uint32\",\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"rotationChange\",\n          [\"[]\", \"float32\", 2],\n          \"rotationInitial\",\n          [\"[]\", \"float32\", 2],\n          \"scaleChange\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleInitial\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"velocity\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"velocityDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"velocityDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"spawnGroupSize\",\n          [\"[]\", \"float32\", 2],\n          \"spawnPeriod\",\n          \"float32\",\n          \"spawnProbability\",\n          \"float32\",\n          \"spawnRadius\",\n          [\"[]\", \"float32\", 2],\n          \"spawnShape\",\n          \"uint8\",\n        ];\n\n        this.ModelParticleObstacleV5 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"dragCoef\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"geoData\",\n          [\"[]\", \"float32\", 3],\n          \"gravityCoef\",\n          \"float32\",\n          \"response\",\n          \"uint8\",\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.ModelCloudDataV5 = [\n          \"clouds\",\n          Utils.getArrayReader(this.ModelParticleCloudV5),\n          \"emitters\",\n          Utils.getArrayReader(this.ModelParticleEmitterV5),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelParticleObstacleV5),\n        ];\n\n        this.__root = this.ModelFileDataV5 = [\n          \"materials\",\n          Utils.getRefArrayReader(this.ModelMaterialDataV5),\n          \"meshes\",\n          Utils.getRefArrayReader(this.ModelMeshDataV5),\n          \"animations\",\n          Utils.getRefArrayReader(this.ModelAnimationDataV5),\n          \"model\",\n          Utils.getPointerReader(this.ModelModelDataV5),\n          \"properties\",\n          Utils.getPointerReader(this.ModelPropertyDataV5),\n          \"collisionData\",\n          Utils.getPointerReader(this.ModelCollisionDataV5),\n          \"cloudData\",\n          Utils.getPointerReader(this.ModelCloudDataV5),\n        ];\n      },\n\n      // => Version: 4\n      4: function () {\n        this.ModelTextureDataV4 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"textureFlags\",\n          \"uint32\",\n          \"token\",\n          Utils.getQWordReader(),\n          \"blitId\",\n          Utils.getQWordReader(),\n        ];\n\n        this.ModelConstantDataV4 = [\"name\", \"uint32\", \"value\", [\"[]\", \"float32\", 4], \"constantFlags\", \"uint32\"];\n\n        this.ModelMaterialDataV4 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"materialFlags\",\n          \"uint32\",\n          \"sortOrder\",\n          \"uint32\",\n          \"textures\",\n          Utils.getArrayReader(this.ModelTextureDataV4),\n          \"constants\",\n          Utils.getArrayReader(this.ModelConstantDataV4),\n        ];\n\n        this.PackGrannyMeshType = [\"mesh\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelMeshDataV4 = [\n          \"mesh\",\n          this.PackGrannyMeshType,\n          \"visTokens\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.PackGrannyAnimationTypeV0 = [\"animation\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelVisTrackDataV4 = [\"token\", Utils.getQWordReader(), \"keys\", Utils.getArrayReader(\"float32\")];\n\n        this.ModelAnimationDataV4 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"animation\",\n          this.PackGrannyAnimationTypeV0,\n          \"moveSpeed\",\n          \"float32\",\n          \"visTrackData\",\n          Utils.getArrayReader(this.ModelVisTrackDataV4),\n        ];\n\n        this.ModelTransformDataV4 = [\n          \"Flags\",\n          \"uint32\",\n          \"Position\",\n          [\"[]\", \"float32\", 3],\n          \"Orientation\",\n          [\"[]\", \"float32\", 4],\n          \"ScaleShear\",\n          [\"[]\", [\"[]\", \"float32\", 3], 3],\n        ];\n\n        this.ModelBoneDataV4 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"ParentIndex\",\n          \"uint32\",\n          \"LocalTransform\",\n          this.ModelTransformDataV4,\n          \"InverseWorld4x4\",\n          [\"[]\", [\"[]\", \"float32\", 4], 4],\n          \"LODError\",\n          \"float32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n        ];\n\n        this.ModelSkeletonDataV4 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Bones\",\n          Utils.getArrayReader(this.ModelBoneDataV4),\n          \"LODType\",\n          \"uint32\",\n        ];\n\n        this.ModelMeshBindingDataV4 = [\"Mesh\", Utils.getPointerReader(\"uint8\")];\n\n        this.ModelModelDataV4 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Skeleton\",\n          Utils.getPointerReader(this.ModelSkeletonDataV4),\n          \"InitialPlacement\",\n          this.ModelTransformDataV4,\n          \"MeshBindings\",\n          Utils.getArrayReader(this.ModelMeshBindingDataV4),\n        ];\n\n        this.ModelFloatPropertyDataV4 = [\"token\", Utils.getQWordReader(), \"value\", \"float32\"];\n\n        this.ModelPropertyDataV4 = [\n          \"boolTokens\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"floatValues\",\n          Utils.getArrayReader(this.ModelFloatPropertyDataV4),\n        ];\n\n        this.ModelCollisionMeshV4 = [\n          \"animationSequence\",\n          Utils.getQWordReader(),\n          \"vertices\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"surfaces\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.ModelCollisionCloudV4 = [\n          \"animationSequence\",\n          Utils.getQWordReader(),\n          \"points\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"surface\",\n          \"uint8\",\n        ];\n\n        this.ModelCollisionCubeV4 = [\"transform\", [\"[]\", [\"[]\", \"float32\", 4], 3], \"surface\", \"uint8\"];\n\n        this.ModelCollisionSphereV4 = [\"radius\", \"float32\", \"position\", [\"[]\", \"float32\", 3], \"surface\", \"uint8\"];\n\n        this.ModelCollisionSurfaceV4 = [\"tokens\", Utils.getArrayReader(Utils.getQWordReader())];\n\n        this.ModelCollisionDataV4 = [\n          \"meshes\",\n          Utils.getArrayReader(this.ModelCollisionMeshV4),\n          \"clouds\",\n          Utils.getArrayReader(this.ModelCollisionCloudV4),\n          \"cubes\",\n          Utils.getArrayReader(this.ModelCollisionCubeV4),\n          \"spheres\",\n          Utils.getArrayReader(this.ModelCollisionSphereV4),\n          \"surfaces\",\n          Utils.getArrayReader(this.ModelCollisionSurfaceV4),\n        ];\n\n        this.ModelParticleFlipbookV4 = [\n          \"columns\",\n          \"uint8\",\n          \"count\",\n          \"uint8\",\n          \"flags\",\n          \"uint8\",\n          \"fps\",\n          \"uint32\",\n          \"rows\",\n          \"uint8\",\n          \"start\",\n          \"uint8\",\n        ];\n\n        this.ModelParticleCloudV4 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"drag\",\n          \"float32\",\n          \"emitterIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"flipbook\",\n          Utils.getArrayReader(this.ModelParticleFlipbookV4),\n          \"materialIndex\",\n          \"uint32\",\n          \"obstacleIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"opacityCurveType\",\n          \"uint8\",\n          \"opacityKeys\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n          \"scaleCurveType\",\n          \"uint8\",\n          \"scaleKeys\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n        ];\n\n        this.ModelParticleEmitterV4 = [\n          \"acceleration\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorBegin\",\n          [\"[]\", \"float32\", 4],\n          \"colorEnd\",\n          [\"[]\", \"float32\", 4],\n          \"colorPeriod\",\n          [\"[]\", \"float32\", 2],\n          \"flags\",\n          \"uint32\",\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"rotationChange\",\n          [\"[]\", \"float32\", 2],\n          \"rotationInitial\",\n          [\"[]\", \"float32\", 2],\n          \"scaleChange\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleInitial\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"velocity\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"velocityDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"velocityDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"spawnGroupSize\",\n          [\"[]\", \"float32\", 2],\n          \"spawnPeriod\",\n          \"float32\",\n          \"spawnProbability\",\n          \"float32\",\n          \"spawnRadius\",\n          [\"[]\", \"float32\", 2],\n          \"spawnShape\",\n          \"uint8\",\n        ];\n\n        this.ModelParticleObstacleV4 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"dragCoef\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"geoData\",\n          [\"[]\", \"float32\", 3],\n          \"gravityCoef\",\n          \"float32\",\n          \"response\",\n          \"uint8\",\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.ModelCloudDataV4 = [\n          \"clouds\",\n          Utils.getArrayReader(this.ModelParticleCloudV4),\n          \"emitters\",\n          Utils.getArrayReader(this.ModelParticleEmitterV4),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelParticleObstacleV4),\n        ];\n\n        this.__root = this.ModelFileDataV4 = [\n          \"materials\",\n          Utils.getRefArrayReader(this.ModelMaterialDataV4),\n          \"meshes\",\n          Utils.getRefArrayReader(this.ModelMeshDataV4),\n          \"animations\",\n          Utils.getRefArrayReader(this.ModelAnimationDataV4),\n          \"model\",\n          Utils.getPointerReader(this.ModelModelDataV4),\n          \"properties\",\n          Utils.getPointerReader(this.ModelPropertyDataV4),\n          \"collisionData\",\n          Utils.getPointerReader(this.ModelCollisionDataV4),\n          \"cloudData\",\n          Utils.getPointerReader(this.ModelCloudDataV4),\n        ];\n      },\n\n      // => Version: 3\n      3: function () {\n        this.ModelTextureDataV3 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"textureFlags\",\n          \"uint32\",\n          \"token\",\n          Utils.getQWordReader(),\n          \"blitId\",\n          Utils.getQWordReader(),\n        ];\n\n        this.ModelConstantDataV3 = [\"name\", \"uint32\", \"value\", [\"[]\", \"float32\", 4], \"constantFlags\", \"uint32\"];\n\n        this.ModelMaterialDataV3 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"materialFlags\",\n          \"uint32\",\n          \"sortOrder\",\n          \"uint32\",\n          \"textures\",\n          Utils.getArrayReader(this.ModelTextureDataV3),\n          \"constants\",\n          Utils.getArrayReader(this.ModelConstantDataV3),\n        ];\n\n        this.PackGrannyMeshType = [\"mesh\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelMeshDataV3 = [\"mesh\", this.PackGrannyMeshType];\n\n        this.PackGrannyAnimationTypeV0 = [\"animation\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelAnimationDataV3 = [\"token\", Utils.getQWordReader(), \"animation\", this.PackGrannyAnimationTypeV0];\n\n        this.ModelTransformDataV3 = [\n          \"Flags\",\n          \"uint32\",\n          \"Position\",\n          [\"[]\", \"float32\", 3],\n          \"Orientation\",\n          [\"[]\", \"float32\", 4],\n          \"ScaleShear\",\n          [\"[]\", [\"[]\", \"float32\", 3], 3],\n        ];\n\n        this.ModelBoneDataV3 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"ParentIndex\",\n          \"uint32\",\n          \"LocalTransform\",\n          this.ModelTransformDataV3,\n          \"InverseWorld4x4\",\n          [\"[]\", [\"[]\", \"float32\", 4], 4],\n          \"LODError\",\n          \"float32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n        ];\n\n        this.ModelSkeletonDataV3 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Bones\",\n          Utils.getArrayReader(this.ModelBoneDataV3),\n          \"LODType\",\n          \"uint32\",\n        ];\n\n        this.ModelMeshBindingDataV3 = [\"Mesh\", Utils.getPointerReader(\"uint8\")];\n\n        this.ModelModelDataV3 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Skeleton\",\n          Utils.getPointerReader(this.ModelSkeletonDataV3),\n          \"InitialPlacement\",\n          this.ModelTransformDataV3,\n          \"MeshBindings\",\n          Utils.getArrayReader(this.ModelMeshBindingDataV3),\n        ];\n\n        this.ModelFloatPropertyDataV3 = [\"token\", Utils.getQWordReader(), \"value\", \"float32\"];\n\n        this.ModelPropertyDataV3 = [\n          \"boolTokens\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"floatValues\",\n          Utils.getArrayReader(this.ModelFloatPropertyDataV3),\n        ];\n\n        this.ModelCollisionMeshV3 = [\n          \"animationSequence\",\n          Utils.getQWordReader(),\n          \"vertices\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"surfaces\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.ModelCollisionCloudV3 = [\n          \"animationSequence\",\n          Utils.getQWordReader(),\n          \"points\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"surface\",\n          \"uint8\",\n        ];\n\n        this.ModelCollisionCubeV3 = [\"transform\", [\"[]\", [\"[]\", \"float32\", 4], 3], \"surface\", \"uint8\"];\n\n        this.ModelCollisionSphereV3 = [\"radius\", \"float32\", \"position\", [\"[]\", \"float32\", 3], \"surface\", \"uint8\"];\n\n        this.ModelCollisionSurfaceV3 = [\"tokens\", Utils.getArrayReader(Utils.getQWordReader())];\n\n        this.ModelCollisionDataV3 = [\n          \"meshes\",\n          Utils.getArrayReader(this.ModelCollisionMeshV3),\n          \"clouds\",\n          Utils.getArrayReader(this.ModelCollisionCloudV3),\n          \"cubes\",\n          Utils.getArrayReader(this.ModelCollisionCubeV3),\n          \"spheres\",\n          Utils.getArrayReader(this.ModelCollisionSphereV3),\n          \"surfaces\",\n          Utils.getArrayReader(this.ModelCollisionSurfaceV3),\n        ];\n\n        this.ModelParticleFlipbookV3 = [\n          \"columns\",\n          \"uint8\",\n          \"count\",\n          \"uint8\",\n          \"flags\",\n          \"uint8\",\n          \"fps\",\n          \"uint32\",\n          \"rows\",\n          \"uint8\",\n          \"start\",\n          \"uint8\",\n        ];\n\n        this.ModelParticleCloudV3 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"drag\",\n          \"float32\",\n          \"emitterIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"flipbook\",\n          Utils.getArrayReader(this.ModelParticleFlipbookV3),\n          \"materialIndex\",\n          \"uint32\",\n          \"obstacleIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"opacityCurveType\",\n          \"uint8\",\n          \"opacityKeys\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n          \"scaleCurveType\",\n          \"uint8\",\n          \"scaleKeys\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n        ];\n\n        this.ModelParticleEmitterV3 = [\n          \"acceleration\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorBegin\",\n          [\"[]\", \"float32\", 4],\n          \"colorEnd\",\n          [\"[]\", \"float32\", 4],\n          \"colorPeriod\",\n          [\"[]\", \"float32\", 2],\n          \"flags\",\n          \"uint32\",\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"rotationChange\",\n          [\"[]\", \"float32\", 2],\n          \"rotationInitial\",\n          [\"[]\", \"float32\", 2],\n          \"scaleChange\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleInitial\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"velocity\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"velocityDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"velocityDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"spawnGroupSize\",\n          [\"[]\", \"float32\", 2],\n          \"spawnPeriod\",\n          \"float32\",\n          \"spawnProbability\",\n          \"float32\",\n          \"spawnRadius\",\n          [\"[]\", \"float32\", 2],\n          \"spawnShape\",\n          \"uint8\",\n        ];\n\n        this.ModelParticleObstacleV3 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"dragCoef\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"geoData\",\n          [\"[]\", \"float32\", 3],\n          \"gravityCoef\",\n          \"float32\",\n          \"response\",\n          \"uint8\",\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.ModelCloudDataV3 = [\n          \"clouds\",\n          Utils.getArrayReader(this.ModelParticleCloudV3),\n          \"emitters\",\n          Utils.getArrayReader(this.ModelParticleEmitterV3),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelParticleObstacleV3),\n        ];\n\n        this.__root = this.ModelFileDataV3 = [\n          \"materials\",\n          Utils.getRefArrayReader(this.ModelMaterialDataV3),\n          \"meshes\",\n          Utils.getRefArrayReader(this.ModelMeshDataV3),\n          \"animations\",\n          Utils.getRefArrayReader(this.ModelAnimationDataV3),\n          \"model\",\n          Utils.getPointerReader(this.ModelModelDataV3),\n          \"properties\",\n          Utils.getPointerReader(this.ModelPropertyDataV3),\n          \"collisionData\",\n          Utils.getPointerReader(this.ModelCollisionDataV3),\n          \"cloudData\",\n          Utils.getPointerReader(this.ModelCloudDataV3),\n        ];\n      },\n\n      // => Version: 2\n      2: function () {\n        this.ModelTextureDataV2 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"textureFlags\",\n          \"uint32\",\n          \"token\",\n          Utils.getQWordReader(),\n          \"blitId\",\n          Utils.getQWordReader(),\n        ];\n\n        this.ModelConstantDataV2 = [\"name\", \"uint32\", \"value\", [\"[]\", \"float32\", 4], \"constantFlags\", \"uint32\"];\n\n        this.ModelMaterialDataV2 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"materialFlags\",\n          \"uint32\",\n          \"sortOrder\",\n          \"uint32\",\n          \"textures\",\n          Utils.getArrayReader(this.ModelTextureDataV2),\n          \"constants\",\n          Utils.getArrayReader(this.ModelConstantDataV2),\n        ];\n\n        this.PackGrannyMeshType = [\"mesh\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelMeshDataV2 = [\"mesh\", this.PackGrannyMeshType];\n\n        this.PackGrannyAnimationTypeV0 = [\"animation\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelAnimationDataV2 = [\"token\", Utils.getQWordReader(), \"animation\", this.PackGrannyAnimationTypeV0];\n\n        this.ModelTransformDataV2 = [\n          \"Flags\",\n          \"uint32\",\n          \"Position\",\n          [\"[]\", \"float32\", 3],\n          \"Orientation\",\n          [\"[]\", \"float32\", 4],\n          \"ScaleShear\",\n          [\"[]\", [\"[]\", \"float32\", 3], 3],\n        ];\n\n        this.ModelBoneDataV2 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"ParentIndex\",\n          \"uint32\",\n          \"LocalTransform\",\n          this.ModelTransformDataV2,\n          \"InverseWorld4x4\",\n          [\"[]\", [\"[]\", \"float32\", 4], 4],\n          \"LODError\",\n          \"float32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n        ];\n\n        this.ModelSkeletonDataV2 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Bones\",\n          Utils.getArrayReader(this.ModelBoneDataV2),\n          \"LODType\",\n          \"uint32\",\n        ];\n\n        this.ModelMeshBindingDataV2 = [\"Mesh\", Utils.getPointerReader(\"uint8\")];\n\n        this.ModelModelDataV2 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Skeleton\",\n          Utils.getPointerReader(this.ModelSkeletonDataV2),\n          \"InitialPlacement\",\n          this.ModelTransformDataV2,\n          \"MeshBindings\",\n          Utils.getArrayReader(this.ModelMeshBindingDataV2),\n        ];\n\n        this.ModelFloatPropertyDataV2 = [\"token\", Utils.getQWordReader(), \"value\", \"float32\"];\n\n        this.ModelPropertyDataV2 = [\n          \"boolTokens\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"floatValues\",\n          Utils.getArrayReader(this.ModelFloatPropertyDataV2),\n        ];\n\n        this.ModelCollisionMeshV2 = [\n          \"animationSequence\",\n          Utils.getQWordReader(),\n          \"vertices\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"surfaces\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.ModelCollisionCloudV2 = [\n          \"animationSequence\",\n          Utils.getQWordReader(),\n          \"points\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"surface\",\n          \"uint8\",\n        ];\n\n        this.ModelCollisionSurfaceV2 = [\"tokens\", Utils.getArrayReader(Utils.getQWordReader())];\n\n        this.ModelCollisionDataV2 = [\n          \"meshes\",\n          Utils.getArrayReader(this.ModelCollisionMeshV2),\n          \"clouds\",\n          Utils.getArrayReader(this.ModelCollisionCloudV2),\n          \"surfaces\",\n          Utils.getArrayReader(this.ModelCollisionSurfaceV2),\n        ];\n\n        this.ModelParticleFlipbookV2 = [\n          \"columns\",\n          \"uint8\",\n          \"count\",\n          \"uint8\",\n          \"flags\",\n          \"uint8\",\n          \"fps\",\n          \"uint32\",\n          \"rows\",\n          \"uint8\",\n          \"start\",\n          \"uint8\",\n        ];\n\n        this.ModelParticleCloudV2 = [\n          \"acceleration\",\n          [\"[]\", \"float32\", 3],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"drag\",\n          \"float32\",\n          \"emitterIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"flipbook\",\n          Utils.getArrayReader(this.ModelParticleFlipbookV2),\n          \"materialIndex\",\n          \"uint32\",\n          \"obstacleIndices\",\n          Utils.getArrayReader(\"uint32\"),\n          \"opacityCurveType\",\n          \"uint8\",\n          \"opacityKeys\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n          \"scaleCurveType\",\n          \"uint8\",\n          \"scaleKeys\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n        ];\n\n        this.ModelParticleEmitterV2 = [\n          \"acceleration\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"bone\",\n          Utils.getQWordReader(),\n          \"colorBegin\",\n          [\"[]\", \"float32\", 4],\n          \"colorEnd\",\n          [\"[]\", \"float32\", 4],\n          \"colorPeriod\",\n          [\"[]\", \"float32\", 2],\n          \"flags\",\n          \"uint32\",\n          \"lifetime\",\n          [\"[]\", \"float32\", 2],\n          \"rotationChange\",\n          [\"[]\", \"float32\", 2],\n          \"rotationInitial\",\n          [\"[]\", \"float32\", 2],\n          \"scaleChange\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"scaleInitial\",\n          [\"[]\", [\"[]\", \"float32\", 2], 2],\n          \"velocity\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"velocityDistRange\",\n          [\"[]\", \"float32\", 2],\n          \"velocityDistSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"spawnGroupSize\",\n          [\"[]\", \"float32\", 2],\n          \"spawnPeriod\",\n          \"float32\",\n          \"spawnProbability\",\n          \"float32\",\n          \"spawnRadius\",\n          [\"[]\", \"float32\", 2],\n          \"spawnShape\",\n          \"uint8\",\n        ];\n\n        this.ModelParticleObstacleV2 = [\n          \"bone\",\n          Utils.getQWordReader(),\n          \"dragCoef\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"geoData\",\n          [\"[]\", \"float32\", 3],\n          \"gravityCoef\",\n          \"float32\",\n          \"response\",\n          \"uint8\",\n          \"type\",\n          \"uint8\",\n        ];\n\n        this.ModelCloudDataV2 = [\n          \"clouds\",\n          Utils.getArrayReader(this.ModelParticleCloudV2),\n          \"emitters\",\n          Utils.getArrayReader(this.ModelParticleEmitterV2),\n          \"obstacles\",\n          Utils.getArrayReader(this.ModelParticleObstacleV2),\n        ];\n\n        this.__root = this.ModelFileDataV2 = [\n          \"materials\",\n          Utils.getRefArrayReader(this.ModelMaterialDataV2),\n          \"meshes\",\n          Utils.getRefArrayReader(this.ModelMeshDataV2),\n          \"animations\",\n          Utils.getRefArrayReader(this.ModelAnimationDataV2),\n          \"model\",\n          Utils.getPointerReader(this.ModelModelDataV2),\n          \"properties\",\n          Utils.getPointerReader(this.ModelPropertyDataV2),\n          \"collisionData\",\n          Utils.getPointerReader(this.ModelCollisionDataV2),\n          \"cloudData\",\n          Utils.getPointerReader(this.ModelCloudDataV2),\n        ];\n      },\n\n      // => Version: 1\n      1: function () {\n        this.ModelTextureDataV1 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"textureFlags\",\n          \"uint32\",\n          \"token\",\n          Utils.getQWordReader(),\n          \"blitId\",\n          Utils.getQWordReader(),\n        ];\n\n        this.ModelConstantDataV1 = [\"name\", \"uint32\", \"value\", [\"[]\", \"float32\", 4], \"constantFlags\", \"uint32\"];\n\n        this.ModelMaterialDataV1 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"materialFlags\",\n          \"uint32\",\n          \"sortOrder\",\n          \"uint32\",\n          \"textures\",\n          Utils.getArrayReader(this.ModelTextureDataV1),\n          \"constants\",\n          Utils.getArrayReader(this.ModelConstantDataV1),\n        ];\n\n        this.PackGrannyMeshType = [\"mesh\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelMeshDataV1 = [\"mesh\", this.PackGrannyMeshType];\n\n        this.PackGrannyAnimationTypeV0 = [\"animation\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelAnimationDataV1 = [\"token\", Utils.getQWordReader(), \"animation\", this.PackGrannyAnimationTypeV0];\n\n        this.ModelTransformDataV1 = [\n          \"Flags\",\n          \"uint32\",\n          \"Position\",\n          [\"[]\", \"float32\", 3],\n          \"Orientation\",\n          [\"[]\", \"float32\", 4],\n          \"ScaleShear\",\n          [\"[]\", [\"[]\", \"float32\", 3], 3],\n        ];\n\n        this.ModelBoneDataV1 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"ParentIndex\",\n          \"uint32\",\n          \"LocalTransform\",\n          this.ModelTransformDataV1,\n          \"InverseWorld4x4\",\n          [\"[]\", [\"[]\", \"float32\", 4], 4],\n          \"LODError\",\n          \"float32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n        ];\n\n        this.ModelSkeletonDataV1 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Bones\",\n          Utils.getArrayReader(this.ModelBoneDataV1),\n          \"LODType\",\n          \"uint32\",\n        ];\n\n        this.ModelMeshBindingDataV1 = [\"Mesh\", Utils.getPointerReader(\"uint8\")];\n\n        this.ModelModelDataV1 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Skeleton\",\n          Utils.getPointerReader(this.ModelSkeletonDataV1),\n          \"InitialPlacement\",\n          this.ModelTransformDataV1,\n          \"MeshBindings\",\n          Utils.getArrayReader(this.ModelMeshBindingDataV1),\n        ];\n\n        this.ModelFloatPropertyDataV1 = [\"token\", Utils.getQWordReader(), \"value\", \"float32\"];\n\n        this.ModelPropertyDataV1 = [\n          \"boolTokens\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"floatValues\",\n          Utils.getArrayReader(this.ModelFloatPropertyDataV1),\n        ];\n\n        this.ModelChunkCollisionMeshV1 = [\n          \"animationSequence\",\n          Utils.getQWordReader(),\n          \"vertices\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"surfaces\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.ModelChunkCollisionCloudV1 = [\n          \"animationSequence\",\n          Utils.getQWordReader(),\n          \"points\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"surface\",\n          \"uint8\",\n        ];\n\n        this.ModelChunkCollisionSurfaceV1 = [\"tokens\", Utils.getArrayReader(Utils.getQWordReader())];\n\n        this.ModelChunkCollisionDataV1 = [\n          \"meshes\",\n          Utils.getArrayReader(this.ModelChunkCollisionMeshV1),\n          \"clouds\",\n          Utils.getArrayReader(this.ModelChunkCollisionCloudV1),\n          \"surfaces\",\n          Utils.getArrayReader(this.ModelChunkCollisionSurfaceV1),\n        ];\n\n        this.__root = this.ModelFileDataV1 = [\n          \"materials\",\n          Utils.getRefArrayReader(this.ModelMaterialDataV1),\n          \"meshes\",\n          Utils.getRefArrayReader(this.ModelMeshDataV1),\n          \"animations\",\n          Utils.getRefArrayReader(this.ModelAnimationDataV1),\n          \"model\",\n          Utils.getPointerReader(this.ModelModelDataV1),\n          \"properties\",\n          Utils.getPointerReader(this.ModelPropertyDataV1),\n          \"collisionData\",\n          Utils.getPointerReader(this.ModelChunkCollisionDataV1),\n        ];\n      },\n\n      // => Version: 0\n      0: function () {\n        this.ModelTextureDataV0 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"textureFlags\",\n          \"uint32\",\n          \"token\",\n          Utils.getQWordReader(),\n          \"blitId\",\n          Utils.getQWordReader(),\n        ];\n\n        this.ModelConstantDataV0 = [\"name\", \"uint32\", \"value\", [\"[]\", \"float32\", 4], \"constantFlags\", \"uint32\"];\n\n        this.ModelMaterialDataV0 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"materialFlags\",\n          \"uint32\",\n          \"sortOrder\",\n          \"uint32\",\n          \"textures\",\n          Utils.getArrayReader(this.ModelTextureDataV0),\n          \"constants\",\n          Utils.getArrayReader(this.ModelConstantDataV0),\n        ];\n\n        this.PackGrannyMeshType = [\"mesh\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelMeshDataV0 = [\"mesh\", this.PackGrannyMeshType];\n\n        this.PackGrannyAnimationTypeV0 = [\"animation\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelAnimationDataV0 = [\"token\", Utils.getQWordReader(), \"animation\", this.PackGrannyAnimationTypeV0];\n\n        this.ModelTransformDataV0 = [\n          \"Flags\",\n          \"uint32\",\n          \"Position\",\n          [\"[]\", \"float32\", 3],\n          \"Orientation\",\n          [\"[]\", \"float32\", 4],\n          \"ScaleShear\",\n          [\"[]\", [\"[]\", \"float32\", 3], 3],\n        ];\n\n        this.ModelBoneDataV0 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"ParentIndex\",\n          \"uint32\",\n          \"LocalTransform\",\n          this.ModelTransformDataV0,\n          \"InverseWorld4x4\",\n          [\"[]\", [\"[]\", \"float32\", 4], 4],\n          \"LODError\",\n          \"float32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n        ];\n\n        this.ModelSkeletonDataV0 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Bones\",\n          Utils.getArrayReader(this.ModelBoneDataV0),\n          \"LODType\",\n          \"uint32\",\n        ];\n\n        this.ModelMeshBindingDataV0 = [\"Mesh\", Utils.getPointerReader(\"uint8\")];\n\n        this.ModelModelDataV0 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Skeleton\",\n          Utils.getPointerReader(this.ModelSkeletonDataV0),\n          \"InitialPlacement\",\n          this.ModelTransformDataV0,\n          \"MeshBindings\",\n          Utils.getArrayReader(this.ModelMeshBindingDataV0),\n        ];\n\n        this.ModelFloatPropertyDataV0 = [\"token\", Utils.getQWordReader(), \"value\", \"float32\"];\n\n        this.ModelPropertyDataV0 = [\n          \"boolTokens\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"floatValues\",\n          Utils.getArrayReader(this.ModelFloatPropertyDataV0),\n        ];\n\n        this.__root = this.ModelFileDataV0 = [\n          \"materials\",\n          Utils.getRefArrayReader(this.ModelMaterialDataV0),\n          \"meshes\",\n          Utils.getRefArrayReader(this.ModelMeshDataV0),\n          \"animations\",\n          Utils.getRefArrayReader(this.ModelAnimationDataV0),\n          \"model\",\n          Utils.getPointerReader(this.ModelModelDataV0),\n          \"properties\",\n          Utils.getPointerReader(this.ModelPropertyDataV0),\n        ];\n      },\n    },\n  },\n];\n","const Utils = require(\"../../util/ParserUtils.js\");\n\nmodule.exports = [\n  /// ==================================================\n  /// Chunk: MRAS, versions: 1, strucTab: 0x1528BA0\n  /// ==================================================\n\n  {\n    name: \"MRAS\",\n    versions: {\n      // => Version: 0\n      0: function () {\n        this.AmatAppleShaderConstant = [\"token\", \"uint32\", \"regIndex\", \"uint32\", \"regCount\", \"uint32\"];\n\n        this.AmatAppleShader = [\n          \"isPixelShader\",\n          \"uint32\",\n          \"cachedData\",\n          Utils.getArrayReader(\"uint8\"),\n          \"physicalData\",\n          Utils.getArrayReader(\"uint8\"),\n          \"constants\",\n          Utils.getArrayReader(this.AmatAppleShaderConstant),\n          \"samplers\",\n          Utils.getArrayReader(this.AmatAppleShaderConstant),\n        ];\n\n        this.AmatAppleRenderState = [\n          \"cullMode\",\n          \"uint32\",\n          \"blendControl\",\n          \"uint32\",\n          \"alphaTestAndMask\",\n          \"uint32\",\n          \"alphaTestRef\",\n          \"uint32\",\n          \"colorWrite_ARGB\",\n          \"uint32\",\n          \"depthWriteEnable\",\n          \"uint32\",\n          \"depthFunction\",\n          \"uint32\",\n          \"depthBias\",\n          \"float32\",\n        ];\n\n        this.AmatApplePass = [\n          \"renderState\",\n          this.AmatAppleRenderState,\n          \"pixelShader\",\n          \"uint32\",\n          \"vertexShader\",\n          \"uint32\",\n          \"psFileFame\",\n          Utils.getFileNameReader(),\n          \"vsFileName\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.AmatAppleEffect = [\"token\", Utils.getQWordReader(), \"passes\", Utils.getArrayReader(this.AmatApplePass)];\n\n        this.AmatAppleSamplerState = [\n          \"addressU\",\n          \"uint32\",\n          \"addressV\",\n          \"uint32\",\n          \"addressW\",\n          \"uint32\",\n          \"borderColor\",\n          \"uint32\",\n          \"magFilter\",\n          \"uint32\",\n          \"maxAnisotropy\",\n          \"uint32\",\n          \"maxMipLevel\",\n          \"uint32\",\n          \"minFilter\",\n          \"uint32\",\n          \"mipFilter\",\n          \"uint32\",\n          \"mipMapLodBias\",\n          \"float32\",\n        ];\n\n        this.__root = this.AmatAppleMaterial = [\n          \"name\",\n          Utils.getStringReader(),\n          \"shaders\",\n          Utils.getArrayReader(this.AmatAppleShader),\n          \"effects\",\n          Utils.getArrayReader(this.AmatAppleEffect),\n          \"samplers\",\n          Utils.getArrayReader(this.AmatAppleSamplerState),\n        ];\n      },\n    },\n  },\n];\n","const Utils = require(\"../../util/ParserUtils.js\");\n\nmodule.exports = [\n  /// ==================================================\n  /// Chunk: msn, versions: 3, strucTab: 0x1721258\n  /// ==================================================\n\n  {\n    name: \"msn\",\n    versions: {\n      // => Version: 2\n      2: function () {\n        this.PackMapInterestPoint = [\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"forward\",\n          [\"[]\", \"float32\", 3],\n          \"description\",\n          Utils.getString16Reader(),\n        ];\n\n        this.__root = this.MapMission = [\"interestPoint\", Utils.getArrayReader(this.PackMapInterestPoint)];\n      },\n\n      // => Version: 1\n      1: function () {\n        this.PackMapInterestPoint = [\"position\", [\"[]\", \"float32\", 3], \"forward\", [\"[]\", \"float32\", 3]];\n\n        this.__root = this.MapMission = [\"interestPoint\", Utils.getArrayReader(this.PackMapInterestPoint)];\n      },\n    },\n  },\n];\n","const Utils = require(\"../../util/ParserUtils.js\");\n\nmodule.exports = [\n  /// ==================================================\n  /// Chunk: nm15, versions: 4, strucTab: 0x1723E10\n  /// ==================================================\n\n  {\n    name: \"nm15\",\n    versions: {\n      // => Version: 3, ReferencedFunction: 0x452AB0\n      3: function () {\n        this.PackMapNavMeshChunkV3 = [\n          \"chunkIndex\",\n          \"uint32\",\n          \"boundsMin\",\n          [\"[]\", \"float32\", 3],\n          \"boundsMax\",\n          [\"[]\", \"float32\", 3],\n          \"navMeshData\",\n          Utils.getArrayReader(\"uint8\"),\n          \"coarseGraphData\",\n          Utils.getArrayReader(\"uint8\"),\n          \"queryMediatorMoppData\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.PackMapNavMeshMoverV3 = [\n          \"chunkIndex\",\n          \"uint32\",\n          \"mapPropId\",\n          Utils.getQWordReader(),\n          \"navMeshData\",\n          Utils.getArrayReader(\"uint8\"),\n          \"coarseGraphData\",\n          Utils.getArrayReader(\"uint8\"),\n          \"mediatorData\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.__root = this.PackMapNavMeshV3 = [\n          \"boundsMin\",\n          [\"[]\", \"float32\", 3],\n          \"boundsMax\",\n          [\"[]\", \"float32\", 3],\n          \"chunkDims\",\n          [\"[]\", \"uint32\", 2],\n          \"chunkArray\",\n          Utils.getArrayReader(this.PackMapNavMeshChunkV3),\n          \"dynamicArray\",\n          Utils.getArrayReader(this.PackMapNavMeshMoverV3),\n        ];\n      },\n\n      // => Version: 2\n      2: function () {\n        this.PackMapNavMeshChunkV2 = [\n          \"boundsMin\",\n          [\"[]\", \"float32\", 3],\n          \"boundsMax\",\n          [\"[]\", \"float32\", 3],\n          \"navMeshData\",\n          Utils.getArrayReader(\"uint8\"),\n          \"coarseGraphData\",\n          Utils.getArrayReader(\"uint8\"),\n          \"queryMediatorMoppData\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.PackMapNavMeshMoverV2 = [\n          \"mapPropId\",\n          Utils.getQWordReader(),\n          \"navMeshData\",\n          Utils.getArrayReader(\"uint8\"),\n          \"coarseGraphData\",\n          Utils.getArrayReader(\"uint8\"),\n          \"mediatorData\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.__root = this.PackMapNavMeshV2 = [\n          \"boundsMin\",\n          [\"[]\", \"float32\", 3],\n          \"boundsMax\",\n          [\"[]\", \"float32\", 3],\n          \"chunkDims\",\n          [\"[]\", \"uint32\", 2],\n          \"chunkArray\",\n          Utils.getArrayReader(this.PackMapNavMeshChunkV2),\n          \"dynamicArray\",\n          Utils.getArrayReader(this.PackMapNavMeshMoverV2),\n        ];\n      },\n\n      // => Version: 1, ReferencedFunction: 0xEB7230\n      1: function () {\n        this.PackMapNavMeshChunkV1 = [\n          \"boundsMin\",\n          [\"[]\", \"float32\", 3],\n          \"boundsMax\",\n          [\"[]\", \"float32\", 3],\n          \"navMeshData\",\n          Utils.getArrayReader(\"uint8\"),\n          \"coarseGraphData\",\n          Utils.getArrayReader(\"uint8\"),\n          \"queryMediatorMoppData\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.__root = this.PackMapNavMeshV1 = [\n          \"boundsMin\",\n          [\"[]\", \"float32\", 3],\n          \"boundsMax\",\n          [\"[]\", \"float32\", 3],\n          \"chunkDims\",\n          [\"[]\", \"uint32\", 2],\n          \"chunkArray\",\n          Utils.getArrayReader(this.PackMapNavMeshChunkV1),\n        ];\n      },\n\n      // => Version: 0\n      0: function () {\n        this.PackMapNavMeshChunkV0 = [\n          \"boundsMin\",\n          [\"[]\", \"float32\", 3],\n          \"boundsMax\",\n          [\"[]\", \"float32\", 3],\n          \"navMeshData\",\n          Utils.getArrayReader(\"uint8\"),\n          \"coarseGraphData\",\n          Utils.getArrayReader(\"uint8\"),\n          \"queryMediatorMoppData\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.__root = this.PackMapNavMeshV0 = [\n          \"boundsMin\",\n          [\"[]\", \"float32\", 3],\n          \"boundsMax\",\n          [\"[]\", \"float32\", 3],\n          \"chunkDims\",\n          [\"[]\", \"uint32\", 2],\n          \"chunkArray\",\n          Utils.getArrayReader(this.PackMapNavMeshChunkV0),\n        ];\n      },\n    },\n  },\n\n  /// ==================================================\n  /// Chunk: nm15, versions: 4, strucTab: 0x1723F40\n  /// ==================================================\n\n  {\n    name: \"nm15\",\n    versions: {\n      // => Version: 3\n      3: function () {\n        this.__root = this.PackMapNavMeshChunkV3 = [\n          \"chunkIndex\",\n          \"uint32\",\n          \"boundsMin\",\n          [\"[]\", \"float32\", 3],\n          \"boundsMax\",\n          [\"[]\", \"float32\", 3],\n          \"navMeshData\",\n          Utils.getArrayReader(\"uint8\"),\n          \"coarseGraphData\",\n          Utils.getArrayReader(\"uint8\"),\n          \"queryMediatorMoppData\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n      },\n\n      // => Version: 2\n      2: function () {\n        this.__root = this.PackMapNavMeshChunkV2 = [\n          \"boundsMin\",\n          [\"[]\", \"float32\", 3],\n          \"boundsMax\",\n          [\"[]\", \"float32\", 3],\n          \"navMeshData\",\n          Utils.getArrayReader(\"uint8\"),\n          \"coarseGraphData\",\n          Utils.getArrayReader(\"uint8\"),\n          \"queryMediatorMoppData\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n      },\n\n      // => Version: 1, ReferencedFunction: 0xEB71D0\n      1: function () {\n        this.__root = this.PackMapNavMeshChunkV1 = [\n          \"boundsMin\",\n          [\"[]\", \"float32\", 3],\n          \"boundsMax\",\n          [\"[]\", \"float32\", 3],\n          \"navMeshData\",\n          Utils.getArrayReader(\"uint8\"),\n          \"coarseGraphData\",\n          Utils.getArrayReader(\"uint8\"),\n          \"queryMediatorMoppData\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n      },\n\n      // => Version: 0\n      0: function () {\n        this.__root = this.PackMapNavMeshChunkV0 = [\n          \"boundsMin\",\n          [\"[]\", \"float32\", 3],\n          \"boundsMax\",\n          [\"[]\", \"float32\", 3],\n          \"navMeshData\",\n          Utils.getArrayReader(\"uint8\"),\n          \"coarseGraphData\",\n          Utils.getArrayReader(\"uint8\"),\n          \"queryMediatorMoppData\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n      },\n    },\n  },\n];\n","const Utils = require(\"../../util/ParserUtils.js\");\n\nmodule.exports = [\n  /// ==================================================\n  /// Chunk: nmex, versions: 4, strucTab: 0x1723E40\n  /// ==================================================\n\n  {\n    name: \"nmex\",\n    versions: {\n      // => Version: 3\n      3: function () {\n        this.PackMapNavMeshChunkExternalV3 = [\n          \"boundsMin\",\n          [\"[]\", \"float32\", 3],\n          \"boundsMax\",\n          [\"[]\", \"float32\", 3],\n          \"filename\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackMapNavMeshMoverV3 = [\n          \"chunkIndex\",\n          \"uint32\",\n          \"mapPropId\",\n          Utils.getQWordReader(),\n          \"navMeshData\",\n          Utils.getArrayReader(\"uint8\"),\n          \"coarseGraphData\",\n          Utils.getArrayReader(\"uint8\"),\n          \"mediatorData\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.__root = this.PackMapNavMeshExternalV3 = [\n          \"boundsMin\",\n          [\"[]\", \"float32\", 3],\n          \"boundsMax\",\n          [\"[]\", \"float32\", 3],\n          \"chunkDims\",\n          [\"[]\", \"uint32\", 2],\n          \"chunkArray\",\n          Utils.getArrayReader(this.PackMapNavMeshChunkExternalV3),\n          \"dynamicArray\",\n          Utils.getArrayReader(this.PackMapNavMeshMoverV3),\n        ];\n      },\n\n      // => Version: 2\n      2: function () {\n        this.PackMapNavMeshChunkExternalV2 = [\n          \"boundsMin\",\n          [\"[]\", \"float32\", 3],\n          \"boundsMax\",\n          [\"[]\", \"float32\", 3],\n          \"filename\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.PackMapNavMeshMoverV2 = [\n          \"mapPropId\",\n          Utils.getQWordReader(),\n          \"navMeshData\",\n          Utils.getArrayReader(\"uint8\"),\n          \"coarseGraphData\",\n          Utils.getArrayReader(\"uint8\"),\n          \"mediatorData\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.__root = this.PackMapNavMeshExternalV2 = [\n          \"boundsMin\",\n          [\"[]\", \"float32\", 3],\n          \"boundsMax\",\n          [\"[]\", \"float32\", 3],\n          \"chunkDims\",\n          [\"[]\", \"uint32\", 2],\n          \"chunkArray\",\n          Utils.getArrayReader(this.PackMapNavMeshChunkExternalV2),\n          \"dynamicArray\",\n          Utils.getArrayReader(this.PackMapNavMeshMoverV2),\n        ];\n      },\n\n      // => Version: 1\n      1: function () {\n        this.PackMapNavMeshChunkExternalV1 = [\n          \"boundsMin\",\n          [\"[]\", \"float32\", 3],\n          \"boundsMax\",\n          [\"[]\", \"float32\", 3],\n          \"filename\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.__root = this.PackMapNavMeshExternalV1 = [\n          \"boundsMin\",\n          [\"[]\", \"float32\", 3],\n          \"boundsMax\",\n          [\"[]\", \"float32\", 3],\n          \"chunkDims\",\n          [\"[]\", \"uint32\", 2],\n          \"chunkArray\",\n          Utils.getArrayReader(this.PackMapNavMeshChunkExternalV1),\n        ];\n      },\n\n      // => Version: 0\n      0: function () {\n        this.PackMapNavMeshChunkExternalV0 = [\n          \"boundsMin\",\n          [\"[]\", \"float32\", 3],\n          \"boundsMax\",\n          [\"[]\", \"float32\", 3],\n          \"filename\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.__root = this.PackMapNavMeshExternalV0 = [\n          \"boundsMin\",\n          [\"[]\", \"float32\", 3],\n          \"boundsMax\",\n          [\"[]\", \"float32\", 3],\n          \"chunkDims\",\n          [\"[]\", \"uint32\", 2],\n          \"chunkArray\",\n          Utils.getArrayReader(this.PackMapNavMeshChunkExternalV0),\n        ];\n      },\n    },\n  },\n];\n","const Utils = require(\"../../util/ParserUtils.js\");\n\nmodule.exports = [\n  /// ==================================================\n  /// Chunk: obs, versions: 3, strucTab: 0x172127C\n  /// ==================================================\n\n  {\n    name: \"obs\",\n    versions: {\n      // => Version: 2\n      2: function () {\n        this.PackMapEditCollision = [\n          \"token\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"bottmVertices\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"topVertices\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"name\",\n          Utils.getString16Reader(),\n          \"surface\",\n          Utils.getQWordReader(),\n        ];\n\n        this.__root = this.MapObstacles = [\"obstacles\", Utils.getArrayReader(this.PackMapEditCollision)];\n      },\n\n      // => Version: 1\n      1: function () {\n        this.PackMapEditCollision = [\n          \"token\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"bottmVertices\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"topVertices\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.__root = this.MapObstacles = [\"obstacles\", Utils.getArrayReader(this.PackMapEditCollision)];\n      },\n\n      // => Version: 0\n      0: function () {\n        this.PackMapEditCollision = [\n          \"token\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"bottmVertices\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"topVertices\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n        ];\n\n        this.__root = this.MapObstacles = [\"obstacles\", Utils.getArrayReader(this.PackMapEditCollision)];\n      },\n    },\n  },\n];\n","const Utils = require(\"../../util/ParserUtils.js\");\n\nmodule.exports = [\n  /// ==================================================\n  /// Chunk: occ, versions: 1, strucTab: 0x17213F0\n  /// ==================================================\n\n  {\n    name: \"occ\",\n    versions: {\n      // => Version: 0\n      0: function () {\n        this.MapOcclusion = [\n          \"token\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"vertices\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"name\",\n          Utils.getString16Reader(),\n        ];\n\n        this.__root = this.MapOcclusions = [\"Occlusions\", Utils.getArrayReader(this.MapOcclusion)];\n      },\n    },\n  },\n];\n","const Utils = require(\"../../util/ParserUtils.js\");\n\nmodule.exports = [\n  /// ==================================================\n  /// Chunk: octm, versions: 1, strucTab: 0x17213FC\n  /// ==================================================\n\n  {\n    name: \"octm\",\n    versions: {\n      // => Version: 0\n      0: function () {\n        this.__root = this.MapOcclusionTome = [\n          \"enableTomeQueries\",\n          \"uint32\",\n          \"tome\",\n          Utils.getArrayReader(\"uint8\"),\n          \"propIDMap\",\n          Utils.getArrayReader(\"uint8\"),\n          \"reserved\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n      },\n    },\n  },\n];\n","const Utils = require(\"../../util/ParserUtils.js\");\n\nmodule.exports = [\n  /// ==================================================\n  /// Chunk: pack, versions: 1, strucTab: 0x1721464\n  /// ==================================================\n\n  {\n    name: \"pack\",\n    versions: {\n      // => Version: 0\n      0: function () {\n        this.MapVariant = [\n          \"file\",\n          Utils.getString16Reader(),\n          \"name\",\n          Utils.getString16Reader(),\n          \"token\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n        ];\n\n        this.__root = this.MapPackage = [\n          \"baseFile\",\n          Utils.getFileNameReader(),\n          \"variants\",\n          Utils.getArrayReader(this.MapVariant),\n          \"flags\",\n          \"uint32\",\n        ];\n      },\n    },\n  },\n];\n","module.exports = [\n  /// ==================================================\n  /// Chunk: parm, versions: 1, strucTab: 0x1721458\n  /// ==================================================\n\n  {\n    name: \"parm\",\n    versions: {\n      // => Version: 0\n      0: function () {\n        this.__root = this.MapParam = [\"rect\", [\"[]\", \"float32\", 4], \"flags\", \"uint32\", \"guid\", [\"[]\", \"uint8\", 16]];\n      },\n    },\n  },\n];\n","const Utils = require(\"../../util/ParserUtils.js\");\n\nmodule.exports = [\n  /// ==================================================\n  /// Chunk: PGTB, versions: 4, strucTab: 0x153BDD8\n  /// ==================================================\n\n  {\n    name: \"PGTB\",\n    versions: {\n      // => Version: 3, ReferencedFunction: 0x6127C0\n      3: function () {\n        this.PagedImageLayerDataV3 = [\n          \"rawDims\",\n          [\"[]\", \"uint32\", 2],\n          \"strippedDims\",\n          [\"[]\", \"uint32\", 2],\n          \"rawFormat\",\n          \"uint32\",\n          \"strippedFormat\",\n          \"uint32\",\n          \"diskFormat\",\n          \"uint32\",\n        ];\n\n        this.PagedImagePageDataV3 = [\n          \"layer\",\n          \"uint32\",\n          \"coord\",\n          [\"[]\", \"uint32\", 2],\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"flags\",\n          \"uint32\",\n          \"solidColor\",\n          [\"[]\", \"uint8\", 4],\n        ];\n\n        this.__root = this.PagedImageTableDataV3 = [\n          \"layers\",\n          Utils.getArrayReader(this.PagedImageLayerDataV3),\n          \"rawPages\",\n          Utils.getArrayReader(this.PagedImagePageDataV3),\n          \"strippedPages\",\n          Utils.getArrayReader(this.PagedImagePageDataV3),\n          \"flags\",\n          \"uint32\",\n        ];\n      },\n\n      // => Version: 2\n      2: function () {\n        this.PagedImageLayerDataV2 = [\n          \"dims\",\n          [\"[]\", \"uint32\", 2],\n          \"rawDims\",\n          [\"[]\", \"uint32\", 2],\n          \"diskFormat\",\n          \"uint32\",\n          \"rawFormat\",\n          \"uint32\",\n          \"strippedFormat\",\n          \"uint32\",\n        ];\n\n        this.PagedImagePageDataV2 = [\n          \"layer\",\n          \"uint32\",\n          \"coord\",\n          [\"[]\", \"uint32\", 2],\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"flags\",\n          \"uint32\",\n          \"solidColor\",\n          [\"[]\", \"uint8\", 4],\n        ];\n\n        this.__root = this.PagedImageTableDataV2 = [\n          \"layers\",\n          Utils.getArrayReader(this.PagedImageLayerDataV2),\n          \"pages\",\n          Utils.getArrayReader(this.PagedImagePageDataV2),\n          \"flags\",\n          \"uint32\",\n        ];\n      },\n\n      // => Version: 1\n      1: function () {\n        this.PagedImageLayerDataV1 = [\n          \"dims\",\n          [\"[]\", \"uint32\", 2],\n          \"rawDims\",\n          [\"[]\", \"uint32\", 2],\n          \"diskFormat\",\n          \"uint32\",\n          \"rawFormat\",\n          \"uint32\",\n          \"strippedFormat\",\n          \"uint32\",\n        ];\n\n        this.PagedImagePageDataV1 = [\n          \"layer\",\n          \"uint32\",\n          \"coord\",\n          [\"[]\", \"uint32\", 2],\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"flags\",\n          \"uint32\",\n          \"solidColor\",\n          [\"[]\", \"uint8\", 4],\n        ];\n\n        this.__root = this.PagedImageTableDataV1 = [\n          \"layers\",\n          Utils.getArrayReader(this.PagedImageLayerDataV1),\n          \"pages\",\n          Utils.getArrayReader(this.PagedImagePageDataV1),\n        ];\n      },\n\n      // => Version: 0\n      0: function () {\n        this.PagedImageLayerDataV0 = [\n          \"dims\",\n          [\"[]\", \"uint32\", 2],\n          \"rawDims\",\n          [\"[]\", \"uint32\", 2],\n          \"diskFormat\",\n          \"uint32\",\n          \"rawFormat\",\n          \"uint32\",\n          \"strippedFormat\",\n          \"uint32\",\n        ];\n\n        this.PagedImagePageDataV0 = [\n          \"layer\",\n          \"uint32\",\n          \"coord\",\n          [\"[]\", \"uint32\", 2],\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"flags\",\n          \"uint32\",\n        ];\n\n        this.__root = this.PagedImageTableDataV0 = [\n          \"layers\",\n          Utils.getArrayReader(this.PagedImageLayerDataV0),\n          \"pages\",\n          Utils.getArrayReader(this.PagedImagePageDataV0),\n        ];\n      },\n    },\n  },\n];\n","const Utils = require(\"../../util/ParserUtils.js\");\n\nmodule.exports = [\n  /// ==================================================\n  /// Chunk: phys, versions: 11, strucTab: 0x17219F0\n  /// ==================================================\n\n  {\n    name: \"phys\",\n    versions: {\n      // => Version: 10\n      10: function () {\n        this.PackMapPhysicsMeshV10 = [\n          \"indexArray\",\n          Utils.getArrayReader(\"uint16\"),\n          \"vertexArray\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"moppCodeData\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.PackMapPhysicsObjectV10 = [\n          \"mesh\",\n          Utils.getPointerReader(this.PackMapPhysicsMeshV10),\n          \"sceneFilePtr\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.PackMapPhysicsObjectRefV10 = [\"sequence\", Utils.getQWordReader(), \"objectIndex\", \"uint32\"];\n\n        this.PackMapPhysicsGeometryV10 = [\n          \"filePath\",\n          Utils.getString16Reader(),\n          \"quantizedExtents\",\n          \"uint8\",\n          \"objRefArray\",\n          Utils.getArrayReader(this.PackMapPhysicsObjectRefV10),\n          \"surface\",\n          Utils.getArrayReader(\"uint16\"),\n        ];\n\n        this.PackMapPhysicsModelPropV10 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"scale\",\n          \"float32\",\n          \"translate\",\n          [\"[]\", \"float32\", 3],\n          \"rotate\",\n          [\"[]\", \"float32\", 4],\n          \"geometryIndex\",\n          \"uint32\",\n        ];\n\n        this.PackMapPhysicsModelZoneV8 = [\n          \"scale\",\n          \"float32\",\n          \"translate\",\n          [\"[]\", \"float32\", 3],\n          \"rotate\",\n          [\"[]\", \"float32\", 4],\n          \"geometryIndex\",\n          \"uint32\",\n        ];\n\n        this.PackMapPhysicsModelObstacleV10 = [\"translate\", [\"[]\", \"float32\", 3], \"geometryIndex\", \"uint32\"];\n\n        this.PackMapPhysicsBlockV10 = [\n          \"boundsMin\",\n          [\"[]\", \"float32\", 3],\n          \"boundsMax\",\n          [\"[]\", \"float32\", 3],\n          \"objectArray\",\n          Utils.getArrayReader(this.PackMapPhysicsObjectV10),\n          \"geometryArray\",\n          Utils.getArrayReader(this.PackMapPhysicsGeometryV10),\n          \"propModelArray\",\n          Utils.getArrayReader(this.PackMapPhysicsModelPropV10),\n          \"debrisModelArray\",\n          Utils.getArrayReader(this.PackMapPhysicsModelPropV10),\n          \"zoneModelArray\",\n          Utils.getArrayReader(this.PackMapPhysicsModelZoneV8),\n          \"obsModelArray\",\n          Utils.getArrayReader(this.PackMapPhysicsModelObstacleV10),\n        ];\n\n        this.__root = this.PackMapPhysicsV10 = [\n          \"boundsMin\",\n          [\"[]\", \"float32\", 3],\n          \"boundsMax\",\n          [\"[]\", \"float32\", 3],\n          \"blockArray\",\n          Utils.getArrayReader(this.PackMapPhysicsBlockV10),\n        ];\n      },\n\n      // => Version: 9, ReferencedFunction: 0xEBA150\n      9: function () {\n        this.PackMapPhysicsMeshV9 = [\n          \"indexArray\",\n          Utils.getArrayReader(\"uint16\"),\n          \"vertexArray\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"moppCodeData\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.PackMapPhysicsObjectV9 = [\n          \"mesh\",\n          Utils.getPointerReader(this.PackMapPhysicsMeshV9),\n          \"sceneFilePtr\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.PackMapPhysicsObjectRefV9 = [\"sequence\", Utils.getQWordReader(), \"objectIndex\", \"uint32\"];\n\n        this.PackMapPhysicsGeometryV9 = [\n          \"filePath\",\n          Utils.getString16Reader(),\n          \"quantizedExtents\",\n          \"uint8\",\n          \"objRefArray\",\n          Utils.getArrayReader(this.PackMapPhysicsObjectRefV9),\n        ];\n\n        this.PackMapPhysicsModelPropV9 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"scale\",\n          \"float32\",\n          \"translate\",\n          [\"[]\", \"float32\", 3],\n          \"rotate\",\n          [\"[]\", \"float32\", 4],\n          \"geometryIndex\",\n          \"uint32\",\n        ];\n\n        this.PackMapPhysicsModelZoneV7 = [\n          \"scale\",\n          \"float32\",\n          \"translate\",\n          [\"[]\", \"float32\", 3],\n          \"rotate\",\n          [\"[]\", \"float32\", 4],\n          \"geometryIndex\",\n          \"uint32\",\n        ];\n\n        this.PackMapPhysicsModelObstacleV9 = [\"translate\", [\"[]\", \"float32\", 3], \"geometryIndex\", \"uint32\"];\n\n        this.PackMapPhysicsBlockV9 = [\n          \"boundsMin\",\n          [\"[]\", \"float32\", 3],\n          \"boundsMax\",\n          [\"[]\", \"float32\", 3],\n          \"objectArray\",\n          Utils.getArrayReader(this.PackMapPhysicsObjectV9),\n          \"geometryArray\",\n          Utils.getArrayReader(this.PackMapPhysicsGeometryV9),\n          \"propModelArray\",\n          Utils.getArrayReader(this.PackMapPhysicsModelPropV9),\n          \"debrisModelArray\",\n          Utils.getArrayReader(this.PackMapPhysicsModelPropV9),\n          \"zoneModelArray\",\n          Utils.getArrayReader(this.PackMapPhysicsModelZoneV7),\n          \"obsModelArray\",\n          Utils.getArrayReader(this.PackMapPhysicsModelObstacleV9),\n        ];\n\n        this.__root = this.PackMapPhysicsV9 = [\n          \"boundsMin\",\n          [\"[]\", \"float32\", 3],\n          \"boundsMax\",\n          [\"[]\", \"float32\", 3],\n          \"blockArray\",\n          Utils.getArrayReader(this.PackMapPhysicsBlockV9),\n        ];\n      },\n\n      // => Version: 8\n      8: function () {\n        this.PackMapPhysicsMeshV8 = [\n          \"indexArray\",\n          Utils.getArrayReader(\"uint16\"),\n          \"vertexArray\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"moppCodeData\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.SceneBoxShapeV7 = [\n          \"dimensions\",\n          [\"[]\", \"float32\", 3],\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.SceneSphereShapeV7 = [\"center\", [\"[]\", \"float32\", 3], \"radius\", \"float32\"];\n\n        this.SceneCapsuleShapeV7 = [\"p0\", [\"[]\", \"float32\", 3], \"p1\", [\"[]\", \"float32\", 3], \"radius\", \"float32\"];\n\n        this.SceneMeshShapeV7 = [\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"vertices\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"moppInfo\",\n          [\"[]\", \"float32\", 4],\n          \"moppBytes\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.SceneFilePhysicsV7 = [\n          \"boxes\",\n          Utils.getArrayReader(this.SceneBoxShapeV7),\n          \"spheres\",\n          Utils.getArrayReader(this.SceneSphereShapeV7),\n          \"capsules\",\n          Utils.getArrayReader(this.SceneCapsuleShapeV7),\n          \"meshes\",\n          Utils.getArrayReader(this.SceneMeshShapeV7),\n        ];\n\n        this.ScenePathNodeV6 = [\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 4],\n          \"flags\",\n          \"uint32\",\n          \"smoothing\",\n          \"float32\",\n          \"singlesided\",\n          \"uint8\",\n        ];\n\n        this.ScenePathV6 = [\n          \"properties\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"points\",\n          Utils.getArrayReader(this.ScenePathNodeV6),\n          \"closed\",\n          \"uint8\",\n        ];\n\n        this.SceneEdgeV6 = [\"indices\", [\"[]\", \"uint32\", 2], \"triangles\", Utils.getArrayReader(\"uint32\")];\n\n        this.SceneGameMeshV6 = [\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"vertices\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"edges\",\n          Utils.getArrayReader(this.SceneEdgeV6),\n          \"moppInfo\",\n          [\"[]\", \"float32\", 4],\n          \"moppBytes\",\n          Utils.getArrayReader(\"uint8\"),\n          \"surfaces\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.SceneGameSurfaceV6 = [\"tokens\", Utils.getArrayReader(Utils.getQWordReader())];\n\n        this.SceneFileGameV6 = [\n          \"paths\",\n          Utils.getArrayReader(this.ScenePathV6),\n          \"meshes\",\n          Utils.getArrayReader(this.SceneGameMeshV6),\n          \"surfaces\",\n          Utils.getArrayReader(this.SceneGameSurfaceV6),\n        ];\n\n        this.PackMapPhysicsObjectV8 = [\n          \"mesh\",\n          Utils.getPointerReader(this.PackMapPhysicsMeshV8),\n          \"physics\",\n          Utils.getPointerReader(this.SceneFilePhysicsV7),\n          \"game\",\n          Utils.getPointerReader(this.SceneFileGameV6),\n        ];\n\n        this.PackMapPhysicsObjectRefV8 = [\"sequence\", Utils.getQWordReader(), \"objectIndex\", \"uint32\"];\n\n        this.PackMapPhysicsGeometryV8 = [\n          \"filePath\",\n          Utils.getString16Reader(),\n          \"quantizedExtents\",\n          \"uint8\",\n          \"objRefArray\",\n          Utils.getArrayReader(this.PackMapPhysicsObjectRefV8),\n        ];\n\n        this.PackMapPhysicsModelPropV8 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"scale\",\n          \"float32\",\n          \"translate\",\n          [\"[]\", \"float32\", 3],\n          \"rotate\",\n          [\"[]\", \"float32\", 4],\n          \"geometryIndex\",\n          \"uint32\",\n        ];\n\n        this.PackMapPhysicsModelZoneV6 = [\n          \"scale\",\n          \"float32\",\n          \"translate\",\n          [\"[]\", \"float32\", 3],\n          \"rotate\",\n          [\"[]\", \"float32\", 4],\n          \"geometryIndex\",\n          \"uint32\",\n        ];\n\n        this.PackMapPhysicsModelObstacleV8 = [\"translate\", [\"[]\", \"float32\", 3], \"geometryIndex\", \"uint32\"];\n\n        this.PackMapPhysicsBlockV8 = [\n          \"boundsMin\",\n          [\"[]\", \"float32\", 3],\n          \"boundsMax\",\n          [\"[]\", \"float32\", 3],\n          \"objectArray\",\n          Utils.getArrayReader(this.PackMapPhysicsObjectV8),\n          \"geometryArray\",\n          Utils.getArrayReader(this.PackMapPhysicsGeometryV8),\n          \"propModelArray\",\n          Utils.getArrayReader(this.PackMapPhysicsModelPropV8),\n          \"debrisModelArray\",\n          Utils.getArrayReader(this.PackMapPhysicsModelPropV8),\n          \"zoneModelArray\",\n          Utils.getArrayReader(this.PackMapPhysicsModelZoneV6),\n          \"obsModelArray\",\n          Utils.getArrayReader(this.PackMapPhysicsModelObstacleV8),\n        ];\n\n        this.__root = this.PackMapPhysicsV8 = [\n          \"boundsMin\",\n          [\"[]\", \"float32\", 3],\n          \"boundsMax\",\n          [\"[]\", \"float32\", 3],\n          \"blockArray\",\n          Utils.getArrayReader(this.PackMapPhysicsBlockV8),\n        ];\n      },\n\n      // => Version: 7\n      7: function () {\n        this.PackMapPhysicsMeshV7 = [\n          \"indexArray\",\n          Utils.getArrayReader(\"uint16\"),\n          \"vertexArray\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"moppCodeData\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.SceneBoxShapeV7 = [\n          \"dimensions\",\n          [\"[]\", \"float32\", 3],\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.SceneSphereShapeV7 = [\"center\", [\"[]\", \"float32\", 3], \"radius\", \"float32\"];\n\n        this.SceneCapsuleShapeV7 = [\"p0\", [\"[]\", \"float32\", 3], \"p1\", [\"[]\", \"float32\", 3], \"radius\", \"float32\"];\n\n        this.SceneMeshShapeV7 = [\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"vertices\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"moppInfo\",\n          [\"[]\", \"float32\", 4],\n          \"moppBytes\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.SceneFilePhysicsV7 = [\n          \"boxes\",\n          Utils.getArrayReader(this.SceneBoxShapeV7),\n          \"spheres\",\n          Utils.getArrayReader(this.SceneSphereShapeV7),\n          \"capsules\",\n          Utils.getArrayReader(this.SceneCapsuleShapeV7),\n          \"meshes\",\n          Utils.getArrayReader(this.SceneMeshShapeV7),\n        ];\n\n        this.ScenePathNodeV6 = [\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 4],\n          \"flags\",\n          \"uint32\",\n          \"smoothing\",\n          \"float32\",\n          \"singlesided\",\n          \"uint8\",\n        ];\n\n        this.ScenePathV6 = [\n          \"properties\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"points\",\n          Utils.getArrayReader(this.ScenePathNodeV6),\n          \"closed\",\n          \"uint8\",\n        ];\n\n        this.SceneEdgeV6 = [\"indices\", [\"[]\", \"uint32\", 2], \"triangles\", Utils.getArrayReader(\"uint32\")];\n\n        this.SceneGameMeshV6 = [\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"vertices\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"edges\",\n          Utils.getArrayReader(this.SceneEdgeV6),\n          \"moppInfo\",\n          [\"[]\", \"float32\", 4],\n          \"moppBytes\",\n          Utils.getArrayReader(\"uint8\"),\n          \"surfaces\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.SceneGameSurfaceV6 = [\"tokens\", Utils.getArrayReader(Utils.getQWordReader())];\n\n        this.SceneFileGameV6 = [\n          \"paths\",\n          Utils.getArrayReader(this.ScenePathV6),\n          \"meshes\",\n          Utils.getArrayReader(this.SceneGameMeshV6),\n          \"surfaces\",\n          Utils.getArrayReader(this.SceneGameSurfaceV6),\n        ];\n\n        this.PackMapPhysicsObjectV7 = [\n          \"mesh\",\n          Utils.getPointerReader(this.PackMapPhysicsMeshV7),\n          \"physics\",\n          Utils.getPointerReader(this.SceneFilePhysicsV7),\n          \"game\",\n          Utils.getPointerReader(this.SceneFileGameV6),\n        ];\n\n        this.PackMapPhysicsObjectRefV7 = [\"sequence\", Utils.getQWordReader(), \"objectIndex\", \"uint32\"];\n\n        this.PackMapPhysicsGeometryV7 = [\n          \"filePath\",\n          Utils.getString16Reader(),\n          \"quantizedExtents\",\n          \"uint8\",\n          \"objRefArray\",\n          Utils.getArrayReader(this.PackMapPhysicsObjectRefV7),\n        ];\n\n        this.PackMapPhysicsModelPropV7 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"scale\",\n          \"float32\",\n          \"translate\",\n          [\"[]\", \"float32\", 3],\n          \"rotate\",\n          [\"[]\", \"float32\", 4],\n          \"geometryIndex\",\n          \"uint32\",\n        ];\n\n        this.PackMapPhysicsModelZoneV5 = [\n          \"scale\",\n          \"float32\",\n          \"translate\",\n          [\"[]\", \"float32\", 3],\n          \"rotate\",\n          [\"[]\", \"float32\", 4],\n          \"geometryIndex\",\n          \"uint32\",\n        ];\n\n        this.PackMapPhysicsModelObstacleV7 = [\"translate\", [\"[]\", \"float32\", 3], \"geometryIndex\", \"uint32\"];\n\n        this.PackMapPhysicsBlockV7 = [\n          \"boundsMin\",\n          [\"[]\", \"float32\", 3],\n          \"boundsMax\",\n          [\"[]\", \"float32\", 3],\n          \"objectArray\",\n          Utils.getArrayReader(this.PackMapPhysicsObjectV7),\n          \"geometryArray\",\n          Utils.getArrayReader(this.PackMapPhysicsGeometryV7),\n          \"propModelArray\",\n          Utils.getArrayReader(this.PackMapPhysicsModelPropV7),\n          \"zoneModelArray\",\n          Utils.getArrayReader(this.PackMapPhysicsModelZoneV5),\n          \"obsModelArray\",\n          Utils.getArrayReader(this.PackMapPhysicsModelObstacleV7),\n        ];\n\n        this.__root = this.PackMapPhysicsV7 = [\n          \"boundsMin\",\n          [\"[]\", \"float32\", 3],\n          \"boundsMax\",\n          [\"[]\", \"float32\", 3],\n          \"blockArray\",\n          Utils.getArrayReader(this.PackMapPhysicsBlockV7),\n        ];\n      },\n\n      // => Version: 6, ReferencedFunction: 0xEBA130\n      6: function () {\n        this.PackMapPhysicsMeshV6 = [\n          \"indexArray\",\n          Utils.getArrayReader(\"uint16\"),\n          \"vertexArray\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"moppCodeData\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.SceneBoxShapeV7 = [\n          \"dimensions\",\n          [\"[]\", \"float32\", 3],\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.SceneSphereShapeV7 = [\"center\", [\"[]\", \"float32\", 3], \"radius\", \"float32\"];\n\n        this.SceneCapsuleShapeV7 = [\"p0\", [\"[]\", \"float32\", 3], \"p1\", [\"[]\", \"float32\", 3], \"radius\", \"float32\"];\n\n        this.SceneMeshShapeV7 = [\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"vertices\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"moppInfo\",\n          [\"[]\", \"float32\", 4],\n          \"moppBytes\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.SceneFilePhysicsV7 = [\n          \"boxes\",\n          Utils.getArrayReader(this.SceneBoxShapeV7),\n          \"spheres\",\n          Utils.getArrayReader(this.SceneSphereShapeV7),\n          \"capsules\",\n          Utils.getArrayReader(this.SceneCapsuleShapeV7),\n          \"meshes\",\n          Utils.getArrayReader(this.SceneMeshShapeV7),\n        ];\n\n        this.ScenePathNodeV6 = [\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 4],\n          \"flags\",\n          \"uint32\",\n          \"smoothing\",\n          \"float32\",\n          \"singlesided\",\n          \"uint8\",\n        ];\n\n        this.ScenePathV6 = [\n          \"properties\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"points\",\n          Utils.getArrayReader(this.ScenePathNodeV6),\n          \"closed\",\n          \"uint8\",\n        ];\n\n        this.SceneEdgeV6 = [\"indices\", [\"[]\", \"uint32\", 2], \"triangles\", Utils.getArrayReader(\"uint32\")];\n\n        this.SceneGameMeshV6 = [\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"vertices\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"edges\",\n          Utils.getArrayReader(this.SceneEdgeV6),\n          \"moppInfo\",\n          [\"[]\", \"float32\", 4],\n          \"moppBytes\",\n          Utils.getArrayReader(\"uint8\"),\n          \"surfaces\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.SceneGameSurfaceV6 = [\"tokens\", Utils.getArrayReader(Utils.getQWordReader())];\n\n        this.SceneFileGameV6 = [\n          \"paths\",\n          Utils.getArrayReader(this.ScenePathV6),\n          \"meshes\",\n          Utils.getArrayReader(this.SceneGameMeshV6),\n          \"surfaces\",\n          Utils.getArrayReader(this.SceneGameSurfaceV6),\n        ];\n\n        this.PackMapPhysicsObjectV6 = [\n          \"mesh\",\n          Utils.getPointerReader(this.PackMapPhysicsMeshV6),\n          \"physics\",\n          Utils.getPointerReader(this.SceneFilePhysicsV7),\n          \"game\",\n          Utils.getPointerReader(this.SceneFileGameV6),\n        ];\n\n        this.PackMapPhysicsObjectRefV6 = [\"sequence\", Utils.getQWordReader(), \"objectIndex\", \"uint32\"];\n\n        this.PackMapPhysicsGeometryV6 = [\n          \"filePath\",\n          Utils.getString16Reader(),\n          \"quantizedExtents\",\n          \"uint8\",\n          \"objRefArray\",\n          Utils.getArrayReader(this.PackMapPhysicsObjectRefV6),\n        ];\n\n        this.PackMapPhysicsModelPropV6 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"scale\",\n          \"float32\",\n          \"translate\",\n          [\"[]\", \"float32\", 3],\n          \"rotate\",\n          [\"[]\", \"float32\", 4],\n          \"geometryIndex\",\n          \"uint32\",\n        ];\n\n        this.PackMapPhysicsModelZoneV4 = [\n          \"scale\",\n          \"float32\",\n          \"translate\",\n          [\"[]\", \"float32\", 3],\n          \"rotate\",\n          [\"[]\", \"float32\", 4],\n          \"geometryIndex\",\n          \"uint32\",\n        ];\n\n        this.PackMapPhysicsModelObstacleV6 = [\"translate\", [\"[]\", \"float32\", 3], \"geometryIndex\", \"uint32\"];\n\n        this.__root = this.PackMapPhysicsV6 = [\n          \"boundsMin\",\n          [\"[]\", \"float32\", 3],\n          \"boundsMax\",\n          [\"[]\", \"float32\", 3],\n          \"objectArray\",\n          Utils.getArrayReader(this.PackMapPhysicsObjectV6),\n          \"geometryArray\",\n          Utils.getArrayReader(this.PackMapPhysicsGeometryV6),\n          \"propModelArray\",\n          Utils.getArrayReader(this.PackMapPhysicsModelPropV6),\n          \"zoneModelArray\",\n          Utils.getArrayReader(this.PackMapPhysicsModelZoneV4),\n          \"obsModelArray\",\n          Utils.getArrayReader(this.PackMapPhysicsModelObstacleV6),\n        ];\n      },\n\n      // => Version: 5, ReferencedFunction: 0xEBA130\n      5: function () {\n        this.PackMapPhysicsMeshV5 = [\n          \"indexArray\",\n          Utils.getArrayReader(\"uint16\"),\n          \"vertexArray\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"moppCodeData\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.SceneBoxShapeV7 = [\n          \"dimensions\",\n          [\"[]\", \"float32\", 3],\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.SceneSphereShapeV7 = [\"center\", [\"[]\", \"float32\", 3], \"radius\", \"float32\"];\n\n        this.SceneCapsuleShapeV7 = [\"p0\", [\"[]\", \"float32\", 3], \"p1\", [\"[]\", \"float32\", 3], \"radius\", \"float32\"];\n\n        this.SceneMeshShapeV7 = [\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"vertices\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"moppInfo\",\n          [\"[]\", \"float32\", 4],\n          \"moppBytes\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.SceneFilePhysicsV7 = [\n          \"boxes\",\n          Utils.getArrayReader(this.SceneBoxShapeV7),\n          \"spheres\",\n          Utils.getArrayReader(this.SceneSphereShapeV7),\n          \"capsules\",\n          Utils.getArrayReader(this.SceneCapsuleShapeV7),\n          \"meshes\",\n          Utils.getArrayReader(this.SceneMeshShapeV7),\n        ];\n\n        this.ScenePathNodeV5 = [\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 4],\n          \"radius\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"smoothing\",\n          \"float32\",\n          \"singlesided\",\n          \"uint8\",\n        ];\n\n        this.ScenePathV5 = [\n          \"properties\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"points\",\n          Utils.getArrayReader(this.ScenePathNodeV5),\n          \"closed\",\n          \"uint8\",\n        ];\n\n        this.SceneEdgeV5 = [\"indices\", [\"[]\", \"uint32\", 2], \"triangles\", Utils.getArrayReader(\"uint32\")];\n\n        this.SceneGameMeshV5 = [\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"vertices\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"edges\",\n          Utils.getArrayReader(this.SceneEdgeV5),\n          \"moppInfo\",\n          [\"[]\", \"float32\", 4],\n          \"moppBytes\",\n          Utils.getArrayReader(\"uint8\"),\n          \"surfaceFlags\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n\n        this.SceneFileGameV5 = [\n          \"paths\",\n          Utils.getArrayReader(this.ScenePathV5),\n          \"meshes\",\n          Utils.getArrayReader(this.SceneGameMeshV5),\n        ];\n\n        this.PackMapPhysicsObjectV5 = [\n          \"mesh\",\n          Utils.getPointerReader(this.PackMapPhysicsMeshV5),\n          \"physics\",\n          Utils.getPointerReader(this.SceneFilePhysicsV7),\n          \"game\",\n          Utils.getPointerReader(this.SceneFileGameV5),\n        ];\n\n        this.PackMapPhysicsObjectRefV5 = [\"sequence\", Utils.getQWordReader(), \"objectIndex\", \"uint32\"];\n\n        this.PackMapPhysicsGeometryV5 = [\n          \"filePath\",\n          Utils.getString16Reader(),\n          \"quantizedExtents\",\n          \"uint8\",\n          \"objRefArray\",\n          Utils.getArrayReader(this.PackMapPhysicsObjectRefV5),\n        ];\n\n        this.PackMapPhysicsModelPropV5 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"scale\",\n          \"float32\",\n          \"translate\",\n          [\"[]\", \"float32\", 3],\n          \"rotate\",\n          [\"[]\", \"float32\", 4],\n          \"geometryIndex\",\n          \"uint32\",\n        ];\n\n        this.PackMapPhysicsModelZoneV3 = [\n          \"scale\",\n          \"float32\",\n          \"translate\",\n          [\"[]\", \"float32\", 3],\n          \"rotate\",\n          [\"[]\", \"float32\", 4],\n          \"geometryIndex\",\n          \"uint32\",\n        ];\n\n        this.PackMapPhysicsModelObstacleV5 = [\"translate\", [\"[]\", \"float32\", 3], \"geometryIndex\", \"uint32\"];\n\n        this.__root = this.PackMapPhysicsV5 = [\n          \"boundsMin\",\n          [\"[]\", \"float32\", 3],\n          \"boundsMax\",\n          [\"[]\", \"float32\", 3],\n          \"objectArray\",\n          Utils.getArrayReader(this.PackMapPhysicsObjectV5),\n          \"geometryArray\",\n          Utils.getArrayReader(this.PackMapPhysicsGeometryV5),\n          \"propModelArray\",\n          Utils.getArrayReader(this.PackMapPhysicsModelPropV5),\n          \"zoneModelArray\",\n          Utils.getArrayReader(this.PackMapPhysicsModelZoneV3),\n          \"obsModelArray\",\n          Utils.getArrayReader(this.PackMapPhysicsModelObstacleV5),\n        ];\n      },\n\n      // => Version: 4, ReferencedFunction: 0xEBA130\n      4: function () {\n        this.PackMapPhysicsMeshV4 = [\n          \"indexArray\",\n          Utils.getArrayReader(\"uint16\"),\n          \"vertexArray\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"moppCodeData\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.SceneBoxShapeV7 = [\n          \"dimensions\",\n          [\"[]\", \"float32\", 3],\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.SceneSphereShapeV7 = [\"center\", [\"[]\", \"float32\", 3], \"radius\", \"float32\"];\n\n        this.SceneCapsuleShapeV7 = [\"p0\", [\"[]\", \"float32\", 3], \"p1\", [\"[]\", \"float32\", 3], \"radius\", \"float32\"];\n\n        this.SceneMeshShapeV7 = [\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"vertices\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"moppInfo\",\n          [\"[]\", \"float32\", 4],\n          \"moppBytes\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.SceneFilePhysicsV7 = [\n          \"boxes\",\n          Utils.getArrayReader(this.SceneBoxShapeV7),\n          \"spheres\",\n          Utils.getArrayReader(this.SceneSphereShapeV7),\n          \"capsules\",\n          Utils.getArrayReader(this.SceneCapsuleShapeV7),\n          \"meshes\",\n          Utils.getArrayReader(this.SceneMeshShapeV7),\n        ];\n\n        this.ScenePathNodeV5 = [\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 4],\n          \"radius\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"smoothing\",\n          \"float32\",\n          \"singlesided\",\n          \"uint8\",\n        ];\n\n        this.ScenePathV5 = [\n          \"properties\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"points\",\n          Utils.getArrayReader(this.ScenePathNodeV5),\n          \"closed\",\n          \"uint8\",\n        ];\n\n        this.SceneEdgeV5 = [\"indices\", [\"[]\", \"uint32\", 2], \"triangles\", Utils.getArrayReader(\"uint32\")];\n\n        this.SceneGameMeshV5 = [\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"vertices\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"edges\",\n          Utils.getArrayReader(this.SceneEdgeV5),\n          \"moppInfo\",\n          [\"[]\", \"float32\", 4],\n          \"moppBytes\",\n          Utils.getArrayReader(\"uint8\"),\n          \"surfaceFlags\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n\n        this.SceneFileGameV5 = [\n          \"paths\",\n          Utils.getArrayReader(this.ScenePathV5),\n          \"meshes\",\n          Utils.getArrayReader(this.SceneGameMeshV5),\n        ];\n\n        this.PackMapPhysicsObjectV4 = [\n          \"mesh\",\n          Utils.getPointerReader(this.PackMapPhysicsMeshV4),\n          \"physics\",\n          Utils.getPointerReader(this.SceneFilePhysicsV7),\n          \"game\",\n          Utils.getPointerReader(this.SceneFileGameV5),\n        ];\n\n        this.PackMapPhysicsObjectRefV4 = [\"sequence\", Utils.getQWordReader(), \"objectIndex\", \"uint32\"];\n\n        this.PackMapPhysicsGeometryV4 = [\n          \"filePath\",\n          Utils.getFileNameReader(),\n          \"quantizedExtents\",\n          \"uint8\",\n          \"objRefArray\",\n          Utils.getArrayReader(this.PackMapPhysicsObjectRefV4),\n        ];\n\n        this.PackMapPhysicsModelPropV4 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"scale\",\n          \"float32\",\n          \"translate\",\n          [\"[]\", \"float32\", 3],\n          \"rotate\",\n          [\"[]\", \"float32\", 4],\n          \"geometryIndex\",\n          \"uint32\",\n        ];\n\n        this.PackMapPhysicsModelZoneV2 = [\n          \"scale\",\n          \"float32\",\n          \"translate\",\n          [\"[]\", \"float32\", 3],\n          \"rotate\",\n          [\"[]\", \"float32\", 4],\n          \"geometryIndex\",\n          \"uint32\",\n        ];\n\n        this.PackMapPhysicsModelObstacleV4 = [\"translate\", [\"[]\", \"float32\", 3], \"geometryIndex\", \"uint32\"];\n\n        this.__root = this.PackMapPhysicsV4 = [\n          \"boundsMin\",\n          [\"[]\", \"float32\", 3],\n          \"boundsMax\",\n          [\"[]\", \"float32\", 3],\n          \"objectArray\",\n          Utils.getArrayReader(this.PackMapPhysicsObjectV4),\n          \"geometryArray\",\n          Utils.getArrayReader(this.PackMapPhysicsGeometryV4),\n          \"propModelArray\",\n          Utils.getArrayReader(this.PackMapPhysicsModelPropV4),\n          \"zoneModelArray\",\n          Utils.getArrayReader(this.PackMapPhysicsModelZoneV2),\n          \"obsModelArray\",\n          Utils.getArrayReader(this.PackMapPhysicsModelObstacleV4),\n        ];\n      },\n\n      // => Version: 3\n      3: function () {\n        this.PackMapPhysicsMeshV3 = [\n          \"indexArray\",\n          Utils.getArrayReader(\"uint16\"),\n          \"vertexArray\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"moppCodeData\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.PackMapPhysicsShapeDataV3 = [\"scale\", \"float32\", \"gameDataPtr\", Utils.getArrayReader(\"uint8\")];\n\n        this.PackMapPhysicsGeometryV3 = [\"shapeDataIndexArray\", Utils.getArrayReader(\"uint32\")];\n\n        this.PackMapPhysicsModelPropV3 = [\n          \"token\",\n          [\"[]\", \"uint32\", 2],\n          \"scale\",\n          \"float32\",\n          \"translate\",\n          [\"[]\", \"float32\", 3],\n          \"rotate\",\n          [\"[]\", \"float32\", 3],\n          \"geometryIndex\",\n          \"uint32\",\n        ];\n\n        this.PackMapPhysicsModelZoneV1 = [\n          \"scale\",\n          \"float32\",\n          \"translate\",\n          [\"[]\", \"float32\", 3],\n          \"rotate\",\n          [\"[]\", \"float32\", 3],\n          \"geometryIndex\",\n          \"uint32\",\n        ];\n\n        this.__root = this.PackMapPhysicsV3 = [\n          \"boundsMin\",\n          [\"[]\", \"float32\", 3],\n          \"boundsMax\",\n          [\"[]\", \"float32\", 3],\n          \"meshArray\",\n          Utils.getArrayReader(this.PackMapPhysicsMeshV3),\n          \"shapeArray\",\n          Utils.getArrayReader(this.PackMapPhysicsShapeDataV3),\n          \"geometryArray\",\n          Utils.getArrayReader(this.PackMapPhysicsGeometryV3),\n          \"propModelArray\",\n          Utils.getArrayReader(this.PackMapPhysicsModelPropV3),\n          \"zoneModelArray\",\n          Utils.getArrayReader(this.PackMapPhysicsModelZoneV1),\n        ];\n      },\n\n      // => Version: 2, ReferencedFunction: 0xEBA110\n      2: function () {\n        this.PackMapPhysicsShapeDataV2 = [\"scale\", \"float32\", \"gameDataPtr\", Utils.getArrayReader(\"uint8\")];\n\n        this.PackMapPhysicsGeometryV2 = [\"shapeDataIndexArray\", Utils.getArrayReader(\"uint32\")];\n\n        this.PackMapPhysicsModelPropV2 = [\n          \"token\",\n          [\"[]\", \"uint32\", 2],\n          \"scale\",\n          \"float32\",\n          \"translate\",\n          [\"[]\", \"float32\", 3],\n          \"rotate\",\n          [\"[]\", \"float32\", 3],\n          \"geometryIndex\",\n          \"uint32\",\n        ];\n\n        this.PackMapPhysicsModelZoneV0 = [\n          \"scale\",\n          \"float32\",\n          \"translate\",\n          [\"[]\", \"float32\", 3],\n          \"rotate\",\n          [\"[]\", \"float32\", 3],\n          \"geometryIndex\",\n          \"uint32\",\n        ];\n\n        this.__root = this.PackMapPhysicsV2 = [\n          \"boundsMin\",\n          [\"[]\", \"float32\", 3],\n          \"boundsMax\",\n          [\"[]\", \"float32\", 3],\n          \"shapeArray\",\n          Utils.getArrayReader(this.PackMapPhysicsShapeDataV2),\n          \"geometryArray\",\n          Utils.getArrayReader(this.PackMapPhysicsGeometryV2),\n          \"propModelArray\",\n          Utils.getArrayReader(this.PackMapPhysicsModelPropV2),\n          \"zoneModelArray\",\n          Utils.getArrayReader(this.PackMapPhysicsModelZoneV0),\n        ];\n      },\n\n      // => Version: 1, ReferencedFunction: 0xEBA0F0\n      1: function () {\n        this.PackMapPhysicsShapeDataV1 = [\"scale\", \"float32\", \"gameDataPtr\", Utils.getArrayReader(\"uint8\")];\n\n        this.PackMapPhysicsGeometryV1 = [\"shapeDataIndexArray\", Utils.getArrayReader(\"uint32\")];\n\n        this.PackMapPhysicsModelPropV1 = [\n          \"token\",\n          [\"[]\", \"uint32\", 2],\n          \"scale\",\n          \"float32\",\n          \"translate\",\n          [\"[]\", \"float32\", 3],\n          \"rotate\",\n          [\"[]\", \"float32\", 3],\n          \"geometryIndex\",\n          \"uint32\",\n        ];\n\n        this.__root = this.PackMapPhysicsV1 = [\n          \"boundsMin\",\n          [\"[]\", \"float32\", 3],\n          \"boundsMax\",\n          [\"[]\", \"float32\", 3],\n          \"shapeArray\",\n          Utils.getArrayReader(this.PackMapPhysicsShapeDataV1),\n          \"geometryArray\",\n          Utils.getArrayReader(this.PackMapPhysicsGeometryV1),\n          \"propModelArray\",\n          Utils.getArrayReader(this.PackMapPhysicsModelPropV1),\n        ];\n      },\n    },\n  },\n];\n","const Utils = require(\"../../util/ParserUtils.js\");\n\nmodule.exports = [\n  /// ==================================================\n  /// Chunk: PHYS, versions: 9, strucTab: 0x1830478\n  /// ==================================================\n\n  {\n    name: \"PHYS\",\n    versions: {\n      // => Version: 8\n      8: function () {\n        this.SceneBoxShapeV8 = [\n          \"dimensions\",\n          [\"[]\", \"float32\", 3],\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.SceneSphereShapeV8 = [\"center\", [\"[]\", \"float32\", 3], \"radius\", \"float32\"];\n\n        this.SceneCapsuleShapeV8 = [\"p0\", [\"[]\", \"float32\", 3], \"p1\", [\"[]\", \"float32\", 3], \"radius\", \"float32\"];\n\n        this.SceneMeshShapeV8 = [\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"vertices\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"moppInfo\",\n          [\"[]\", \"float32\", 4],\n          \"moppBytes\",\n          Utils.getArrayReader(\"uint8\"),\n          \"surfaces\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.SceneSurfaceV8 = [\"tokens\", Utils.getArrayReader(Utils.getQWordReader())];\n\n        this.__root = this.SceneFilePhysicsV8 = [\n          \"boxes\",\n          Utils.getArrayReader(this.SceneBoxShapeV8),\n          \"spheres\",\n          Utils.getArrayReader(this.SceneSphereShapeV8),\n          \"capsules\",\n          Utils.getArrayReader(this.SceneCapsuleShapeV8),\n          \"meshes\",\n          Utils.getArrayReader(this.SceneMeshShapeV8),\n          \"surfaces\",\n          Utils.getArrayReader(this.SceneSurfaceV8),\n        ];\n      },\n\n      // => Version: 7\n      7: function () {\n        this.SceneBoxShapeV7 = [\n          \"dimensions\",\n          [\"[]\", \"float32\", 3],\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.SceneSphereShapeV7 = [\"center\", [\"[]\", \"float32\", 3], \"radius\", \"float32\"];\n\n        this.SceneCapsuleShapeV7 = [\"p0\", [\"[]\", \"float32\", 3], \"p1\", [\"[]\", \"float32\", 3], \"radius\", \"float32\"];\n\n        this.SceneMeshShapeV7 = [\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"vertices\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"moppInfo\",\n          [\"[]\", \"float32\", 4],\n          \"moppBytes\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.__root = this.SceneFilePhysicsV7 = [\n          \"boxes\",\n          Utils.getArrayReader(this.SceneBoxShapeV7),\n          \"spheres\",\n          Utils.getArrayReader(this.SceneSphereShapeV7),\n          \"capsules\",\n          Utils.getArrayReader(this.SceneCapsuleShapeV7),\n          \"meshes\",\n          Utils.getArrayReader(this.SceneMeshShapeV7),\n        ];\n      },\n\n      // => Version: 6\n      6: function () {\n        this.SceneShapeSurfaceV6 = [\"tokens\", Utils.getArrayReader(Utils.getQWordReader())];\n\n        this.SceneBoxShapeV6 = [\n          \"surface\",\n          \"uint8\",\n          \"dimensions\",\n          [\"[]\", \"float32\", 3],\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.SceneSphereShapeV6 = [\"surface\", \"uint8\", \"center\", [\"[]\", \"float32\", 3], \"radius\", \"float32\"];\n\n        this.SceneCapsuleShapeV6 = [\n          \"surface\",\n          \"uint8\",\n          \"p0\",\n          [\"[]\", \"float32\", 3],\n          \"p1\",\n          [\"[]\", \"float32\", 3],\n          \"radius\",\n          \"float32\",\n        ];\n\n        this.SceneMeshShapeV6 = [\n          \"surfaces\",\n          Utils.getArrayReader(\"uint8\"),\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"vertices\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"moppInfo\",\n          [\"[]\", \"float32\", 4],\n          \"moppBytes\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.SceneCollisionShapeV6 = [\"shapeIndex\", \"uint32\"];\n\n        this.SceneTriggerShapeV6 = [\"shapeIndex\", \"uint32\", \"flags\", \"uint32\"];\n\n        this.SceneNamedShapeV6 = [\"shapeIndex\", \"uint32\"];\n\n        this.__root = this.SceneFilePhysicsV6 = [\n          \"surfaces\",\n          Utils.getArrayReader(this.SceneShapeSurfaceV6),\n          \"boxes\",\n          Utils.getArrayReader(this.SceneBoxShapeV6),\n          \"spheres\",\n          Utils.getArrayReader(this.SceneSphereShapeV6),\n          \"capsules\",\n          Utils.getArrayReader(this.SceneCapsuleShapeV6),\n          \"meshes\",\n          Utils.getArrayReader(this.SceneMeshShapeV6),\n          \"collisionShapes\",\n          Utils.getArrayReader(this.SceneCollisionShapeV6),\n          \"triggerShapes\",\n          Utils.getArrayReader(this.SceneTriggerShapeV6),\n          \"namedShapes\",\n          Utils.getArrayReader(this.SceneNamedShapeV6),\n        ];\n      },\n\n      // => Version: 5\n      5: function () {\n        this.SceneShapeSurfaceV5 = [\"tokens\", Utils.getArrayReader(Utils.getQWordReader())];\n\n        this.SceneBoxShapeV5 = [\n          \"surface\",\n          \"uint8\",\n          \"dimensions\",\n          [\"[]\", \"float32\", 3],\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.SceneSphereShapeV5 = [\"surface\", \"uint8\", \"center\", [\"[]\", \"float32\", 3], \"radius\", \"float32\"];\n\n        this.SceneMeshShapeV5 = [\n          \"surfaces\",\n          Utils.getArrayReader(\"uint8\"),\n          \"indices\",\n          Utils.getArrayReader(\"uint16\"),\n          \"vertices\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"moppInfo\",\n          [\"[]\", \"float32\", 4],\n          \"moppBytes\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.SceneCollisionShapeV5 = [\"shapeIndex\", \"uint32\"];\n\n        this.SceneTriggerShapeV5 = [\"shapeIndex\", \"uint32\", \"flags\", \"uint32\"];\n\n        this.SceneNamedShapeV5 = [\"shapeIndex\", \"uint32\"];\n\n        this.__root = this.SceneFilePhysicsV5 = [\n          \"surfaces\",\n          Utils.getArrayReader(this.SceneShapeSurfaceV5),\n          \"boxes\",\n          Utils.getArrayReader(this.SceneBoxShapeV5),\n          \"spheres\",\n          Utils.getArrayReader(this.SceneSphereShapeV5),\n          \"meshes\",\n          Utils.getArrayReader(this.SceneMeshShapeV5),\n          \"collisionShapes\",\n          Utils.getArrayReader(this.SceneCollisionShapeV5),\n          \"triggerShapes\",\n          Utils.getArrayReader(this.SceneTriggerShapeV5),\n          \"namedShapes\",\n          Utils.getArrayReader(this.SceneNamedShapeV5),\n        ];\n      },\n\n      // => Version: 4\n      4: function () {\n        this.SceneShapeV4 = [\"surfaces\", Utils.getArrayReader(\"uint8\")];\n\n        this.SceneShapeSurfaceV4 = [\"tokens\", Utils.getArrayReader(Utils.getQWordReader())];\n\n        this.SceneCollisionShapeV4 = [\"shapeIndex\", \"uint32\"];\n\n        this.SceneTriggerShapeV4 = [\"shapeIndex\", \"uint32\", \"flags\", \"uint32\"];\n\n        this.SceneNamedShapeV4 = [\"shapeIndex\", \"uint32\"];\n\n        this.__root = this.SceneFilePhysicsV4 = [\n          \"shapeData\",\n          Utils.getArrayReader(\"uint8\"),\n          \"shapes\",\n          Utils.getArrayReader(this.SceneShapeV4),\n          \"surfaces\",\n          Utils.getArrayReader(this.SceneShapeSurfaceV4),\n          \"collisionShapes\",\n          Utils.getArrayReader(this.SceneCollisionShapeV4),\n          \"triggerShapes\",\n          Utils.getArrayReader(this.SceneTriggerShapeV4),\n          \"namedShapes\",\n          Utils.getArrayReader(this.SceneNamedShapeV4),\n        ];\n      },\n\n      // => Version: 3\n      3: function () {\n        this.SceneShapeV3 = [\"surfaces\", Utils.getArrayReader(\"uint8\")];\n\n        this.SceneShapeSurfaceV3 = [\"tokens\", Utils.getArrayReader(Utils.getQWordReader())];\n\n        this.SceneCollisionShapeV3 = [\"shapeIndex\", \"uint32\"];\n\n        this.SceneTriggerShapeV3 = [\"shapeIndex\", \"uint32\", \"flags\", \"uint32\"];\n\n        this.SceneNamedShapeV3 = [\"shapeIndex\", \"uint32\"];\n\n        this.ScenePathPhysicsV3 = [\"pathData\", Utils.getArrayReader([\"[]\", \"float32\", 4])];\n\n        this.__root = this.SceneFilePhysicsV3 = [\n          \"shapeData\",\n          Utils.getArrayReader(\"uint8\"),\n          \"shapes\",\n          Utils.getArrayReader(this.SceneShapeV3),\n          \"surfaces\",\n          Utils.getArrayReader(this.SceneShapeSurfaceV3),\n          \"collisionShapes\",\n          Utils.getArrayReader(this.SceneCollisionShapeV3),\n          \"triggerShapes\",\n          Utils.getArrayReader(this.SceneTriggerShapeV3),\n          \"namedShapes\",\n          Utils.getArrayReader(this.SceneNamedShapeV3),\n          \"paths\",\n          Utils.getArrayReader(this.ScenePathPhysicsV3),\n        ];\n      },\n\n      // => Version: 2\n      2: function () {\n        this.SceneShapeV2 = [\"shapeOffset\", \"uint32\"];\n\n        this.SceneCollisionShapeV2 = [\"shapeIndex\", \"uint32\"];\n\n        this.SceneQueryShapeV2 = [\"shapeIndex\", \"uint32\"];\n\n        this.SceneNamedShapeV2 = [\"shapeIndex\", \"uint32\"];\n\n        this.ScenePathPhysicsV2 = [\"pathData\", Utils.getArrayReader([\"[]\", \"float32\", 4])];\n\n        this.__root = this.SceneFilePhysicsV2 = [\n          \"shapeData\",\n          Utils.getArrayReader(\"uint8\"),\n          \"shapes\",\n          Utils.getArrayReader(this.SceneShapeV2),\n          \"collisionShapes\",\n          Utils.getArrayReader(this.SceneCollisionShapeV2),\n          \"queryShapes\",\n          Utils.getArrayReader(this.SceneQueryShapeV2),\n          \"namedShapes\",\n          Utils.getArrayReader(this.SceneNamedShapeV2),\n          \"paths\",\n          Utils.getArrayReader(this.ScenePathPhysicsV2),\n        ];\n      },\n\n      // => Version: 1\n      1: function () {\n        this.SceneShapeV1 = [\"shapeOffset\", \"uint32\"];\n\n        this.SceneCollisionShapeV1 = [\"shapeIndex\", \"uint32\"];\n\n        this.SceneNamedShapeV1 = [\"shapeIndex\", \"uint32\"];\n\n        this.ScenePathPhysicsV1 = [\"pathData\", Utils.getArrayReader([\"[]\", \"float32\", 4])];\n\n        this.__root = this.SceneFilePhysicsV1 = [\n          \"shapeData\",\n          Utils.getArrayReader(\"uint8\"),\n          \"shapes\",\n          Utils.getArrayReader(this.SceneShapeV1),\n          \"collisionShapes\",\n          Utils.getArrayReader(this.SceneCollisionShapeV1),\n          \"namedShapes\",\n          Utils.getArrayReader(this.SceneNamedShapeV1),\n          \"paths\",\n          Utils.getArrayReader(this.ScenePathPhysicsV1),\n        ];\n      },\n\n      // => Version: 0\n      0: function () {\n        this.SceneShapeV0 = [\"shapeOffset\", \"uint32\"];\n\n        this.SceneCollisionShapeV0 = [\"shapeIndex\", \"uint32\"];\n\n        this.SceneNamedShapeV0 = [\"shapeIndex\", \"uint32\"];\n\n        this.__root = this.SceneFilePhysicsV0 = [\n          \"shapeData\",\n          Utils.getArrayReader(\"uint8\"),\n          \"shapes\",\n          Utils.getArrayReader(this.SceneShapeV0),\n          \"collisionShapes\",\n          Utils.getArrayReader(this.SceneCollisionShapeV0),\n          \"namedShapes\",\n          Utils.getArrayReader(this.SceneNamedShapeV0),\n        ];\n      },\n    },\n  },\n];\n","const Utils = require(\"../../util/ParserUtils.js\");\n\nmodule.exports = [\n  /// ==================================================\n  /// Chunk: pnvm, versions: 3, strucTab: 0x172158C\n  /// ==================================================\n\n  {\n    name: \"pnvm\",\n    versions: {\n      // => Version: 2\n      2: function () {\n        this.PackMapPhysicsNavMeshChunkV2 = [\n          \"navMeshData\",\n          Utils.getArrayReader(\"uint8\"),\n          \"mediatorMoppData\",\n          Utils.getArrayReader(\"uint8\"),\n          \"coarseGraphData\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.__root = this.PackMapPhysicsNavMeshV2 = [\n          \"boundsMin\",\n          [\"[]\", \"float32\", 3],\n          \"boundsMax\",\n          [\"[]\", \"float32\", 3],\n          \"chunkDims\",\n          [\"[]\", \"uint32\", 2],\n          \"erosionRadius\",\n          \"float32\",\n          \"chunkArray\",\n          Utils.getArrayReader(this.PackMapPhysicsNavMeshChunkV2),\n        ];\n      },\n\n      // => Version: 1, ReferencedFunction: 0xEBB290\n      1: function () {\n        this.PackMapPhysicsNavMeshChunkV1 = [\n          \"boundsMin\",\n          [\"[]\", \"float32\", 3],\n          \"boundsMax\",\n          [\"[]\", \"float32\", 3],\n          \"navMeshData\",\n          Utils.getArrayReader(\"uint8\"),\n          \"mediatorMoppData\",\n          Utils.getArrayReader(\"uint8\"),\n          \"coarseGraphData\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.__root = this.PackMapPhysicsNavMeshV1 = [\n          \"boundsMin\",\n          [\"[]\", \"float32\", 3],\n          \"boundsMax\",\n          [\"[]\", \"float32\", 3],\n          \"chunkDims\",\n          [\"[]\", \"uint32\", 2],\n          \"chunkArray\",\n          Utils.getArrayReader(this.PackMapPhysicsNavMeshChunkV1),\n        ];\n      },\n\n      // => Version: 0\n      0: function () {\n        this.PackMapPhysicsNavMeshChunkV0 = [\n          \"boundsMin\",\n          [\"[]\", \"float32\", 3],\n          \"boundsMax\",\n          [\"[]\", \"float32\", 3],\n          \"navMeshData\",\n          Utils.getArrayReader(\"uint8\"),\n          \"mediatorMoppData\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.__root = this.PackMapPhysicsNavMeshV0 = [\n          \"boundsMin\",\n          [\"[]\", \"float32\", 3],\n          \"boundsMax\",\n          [\"[]\", \"float32\", 3],\n          \"chunkDims\",\n          [\"[]\", \"uint32\", 2],\n          \"chunkArray\",\n          Utils.getArrayReader(this.PackMapPhysicsNavMeshChunkV0),\n        ];\n      },\n    },\n  },\n];\n","const Utils = require(\"../../util/ParserUtils.js\");\n\nmodule.exports = [\n  /// ==================================================\n  /// Chunk: PPSH, versions: 1, strucTab: 0x1528BD0\n  /// ==================================================\n\n  {\n    name: \"PPSH\",\n    versions: {\n      // => Version: 0\n      0: function () {\n        this.AmatPs3ShaderConstant = [\n          \"token\",\n          \"uint32\",\n          \"regIndex\",\n          \"uint32\",\n          \"regCount\",\n          \"uint32\",\n          \"regValue\",\n          [\"[]\", \"float32\", 4],\n          \"data\",\n          \"uint32\",\n        ];\n\n        this.AmatPs3SamplerConstant = [\"regIndex\", \"uint32\", \"stateIndex\", \"uint32\", \"texIndex\", \"uint32\"];\n\n        this.__root = this.AmatPs3FragmentShaderConfig = [\n          \"offset\",\n          \"uint32\",\n          \"attributeInputMask\",\n          \"uint32\",\n          \"texCoordsInputMask\",\n          \"uint32\",\n          \"texCoords2D\",\n          \"uint32\",\n          \"texCoordsCentroid\",\n          \"uint32\",\n          \"fragmentControl\",\n          \"uint32\",\n          \"registerCount\",\n          \"uint32\",\n          \"constants\",\n          Utils.getArrayReader(this.AmatPs3ShaderConstant),\n          \"samplers\",\n          Utils.getArrayReader(this.AmatPs3SamplerConstant),\n          \"code\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n      },\n    },\n  },\n];\n","const Utils = require(\"../../util/ParserUtils.js\");\n\nmodule.exports = [\n  /// ==================================================\n  /// Chunk: prp2, versions: 22, strucTab: 0x1721F10\n  /// ==================================================\n\n  {\n    name: \"prp2\",\n    versions: {\n      // => Version: 21\n      21: function () {\n        this.PackMapPropConstantV18 = [\"token\", \"uint32\", \"constant\", [\"[]\", \"float32\", 4], \"submodel\", \"uint32\"];\n\n        this.PackMapPropObjV21 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"blitTextures\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"constants\",\n          Utils.getArrayReader(this.PackMapPropConstantV18),\n          \"guid\",\n          Utils.getQWordReader(),\n          \"permutation\",\n          Utils.getQWordReader(),\n          \"bounds\",\n          [\"[]\", \"float32\", 4],\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"color\",\n          [\"[]\", \"uint8\", 4],\n          \"scale\",\n          \"float32\",\n          \"lod1\",\n          \"float32\",\n          \"lod2\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"reserved\",\n          \"uint32\",\n          \"broadId\",\n          \"uint16\",\n          \"bucketId\",\n          \"uint16\",\n          \"byte\",\n          \"uint8\",\n          \"sortLayer\",\n          \"uint8\",\n        ];\n\n        this.PackMapPropObjAnimSeqV21 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"blitTextures\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"constants\",\n          Utils.getArrayReader(this.PackMapPropConstantV18),\n          \"guid\",\n          Utils.getQWordReader(),\n          \"permutation\",\n          Utils.getQWordReader(),\n          \"bounds\",\n          [\"[]\", \"float32\", 4],\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"color\",\n          [\"[]\", \"uint8\", 4],\n          \"scale\",\n          \"float32\",\n          \"lod1\",\n          \"float32\",\n          \"lod2\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"reserved\",\n          \"uint32\",\n          \"broadId\",\n          \"uint16\",\n          \"bucketId\",\n          \"uint16\",\n          \"byte\",\n          \"uint8\",\n          \"sortLayer\",\n          \"uint8\",\n          \"animSequence\",\n          Utils.getQWordReader(),\n        ];\n\n        this.PackMapPropTransformV21 = [\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"scale\",\n          \"float32\",\n        ];\n\n        this.PackMapPropObjInstanceV21 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"blitTextures\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"constants\",\n          Utils.getArrayReader(this.PackMapPropConstantV18),\n          \"guid\",\n          Utils.getQWordReader(),\n          \"permutation\",\n          Utils.getQWordReader(),\n          \"bounds\",\n          [\"[]\", \"float32\", 4],\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"color\",\n          [\"[]\", \"uint8\", 4],\n          \"scale\",\n          \"float32\",\n          \"lod1\",\n          \"float32\",\n          \"lod2\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"reserved\",\n          \"uint32\",\n          \"broadId\",\n          \"uint16\",\n          \"bucketId\",\n          \"uint16\",\n          \"byte\",\n          \"uint8\",\n          \"sortLayer\",\n          \"uint8\",\n          \"transforms\",\n          Utils.getArrayReader(this.PackMapPropTransformV21),\n          \"origGuidArray\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.PackMapPropObjToolV21 = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"layerMask\",\n          \"uint32\",\n          \"glomType\",\n          \"uint8\",\n          \"children\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.PackMapPropObjMetaV21 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"blitTextures\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"constants\",\n          Utils.getArrayReader(this.PackMapPropConstantV18),\n          \"guid\",\n          Utils.getQWordReader(),\n          \"permutation\",\n          Utils.getQWordReader(),\n          \"bounds\",\n          [\"[]\", \"float32\", 4],\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"color\",\n          [\"[]\", \"uint8\", 4],\n          \"scale\",\n          \"float32\",\n          \"lod1\",\n          \"float32\",\n          \"lod2\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"reserved\",\n          \"uint32\",\n          \"broadId\",\n          \"uint16\",\n          \"bucketId\",\n          \"uint16\",\n          \"byte\",\n          \"uint8\",\n          \"sortLayer\",\n          \"uint8\",\n          \"layerMask\",\n          \"uint32\",\n          \"glomType\",\n          \"uint8\",\n          \"parent\",\n          Utils.getQWordReader(),\n          \"glomOrigin\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.PackMapPropObjVolumeV21 = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"layerMask\",\n          \"uint32\",\n          \"glomType\",\n          \"uint8\",\n          \"children\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"glomClipScale\",\n          [\"[]\", \"float32\", 3],\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"scale\",\n          \"float32\",\n        ];\n\n        this.PackBroadphaseType = [\"broadphaseData\", Utils.getArrayReader(\"uint8\")];\n\n        this.__root = this.PackMapPropV21 = [\n          \"propArray\",\n          Utils.getArrayReader(this.PackMapPropObjV21),\n          \"propAnimArray\",\n          Utils.getArrayReader(this.PackMapPropObjAnimSeqV21),\n          \"propInstanceArray\",\n          Utils.getArrayReader(this.PackMapPropObjInstanceV21),\n          \"propToolArray\",\n          Utils.getArrayReader(this.PackMapPropObjToolV21),\n          \"propMetaArray\",\n          Utils.getArrayReader(this.PackMapPropObjMetaV21),\n          \"propVolumeArray\",\n          Utils.getArrayReader(this.PackMapPropObjVolumeV21),\n          \"reserved\",\n          Utils.getString16Reader(),\n          \"broadPhase\",\n          this.PackBroadphaseType,\n          \"nextBroadId\",\n          \"uint32\",\n        ];\n      },\n\n      // => Version: 20\n      20: function () {\n        this.PackMapPropConstantV17 = [\"token\", \"uint32\", \"constant\", [\"[]\", \"float32\", 4], \"submodel\", \"uint32\"];\n\n        this.PackMapPropObjV20 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"blitTextures\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"constants\",\n          Utils.getArrayReader(this.PackMapPropConstantV17),\n          \"guid\",\n          Utils.getQWordReader(),\n          \"permutation\",\n          Utils.getQWordReader(),\n          \"bounds\",\n          [\"[]\", \"float32\", 4],\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"color\",\n          [\"[]\", \"uint8\", 4],\n          \"scale\",\n          \"float32\",\n          \"lod1\",\n          \"float32\",\n          \"lod2\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"broadId\",\n          \"uint16\",\n          \"bucketId\",\n          \"uint16\",\n          \"byte\",\n          \"uint8\",\n          \"sortLayer\",\n          \"uint8\",\n        ];\n\n        this.PackMapPropObjAnimSeqV20 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"blitTextures\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"constants\",\n          Utils.getArrayReader(this.PackMapPropConstantV17),\n          \"guid\",\n          Utils.getQWordReader(),\n          \"permutation\",\n          Utils.getQWordReader(),\n          \"bounds\",\n          [\"[]\", \"float32\", 4],\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"color\",\n          [\"[]\", \"uint8\", 4],\n          \"scale\",\n          \"float32\",\n          \"lod1\",\n          \"float32\",\n          \"lod2\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"broadId\",\n          \"uint16\",\n          \"bucketId\",\n          \"uint16\",\n          \"byte\",\n          \"uint8\",\n          \"sortLayer\",\n          \"uint8\",\n          \"animSequence\",\n          Utils.getQWordReader(),\n        ];\n\n        this.PackMapPropTransformV20 = [\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"scale\",\n          \"float32\",\n        ];\n\n        this.PackMapPropObjInstanceV20 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"blitTextures\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"constants\",\n          Utils.getArrayReader(this.PackMapPropConstantV17),\n          \"guid\",\n          Utils.getQWordReader(),\n          \"permutation\",\n          Utils.getQWordReader(),\n          \"bounds\",\n          [\"[]\", \"float32\", 4],\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"color\",\n          [\"[]\", \"uint8\", 4],\n          \"scale\",\n          \"float32\",\n          \"lod1\",\n          \"float32\",\n          \"lod2\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"broadId\",\n          \"uint16\",\n          \"bucketId\",\n          \"uint16\",\n          \"byte\",\n          \"uint8\",\n          \"sortLayer\",\n          \"uint8\",\n          \"transforms\",\n          Utils.getArrayReader(this.PackMapPropTransformV20),\n          \"origGuidArray\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.PackMapPropObjToolV20 = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"layerMask\",\n          \"uint32\",\n          \"glomType\",\n          \"uint8\",\n          \"children\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.PackMapPropObjMetaV20 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"blitTextures\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"constants\",\n          Utils.getArrayReader(this.PackMapPropConstantV17),\n          \"guid\",\n          Utils.getQWordReader(),\n          \"permutation\",\n          Utils.getQWordReader(),\n          \"bounds\",\n          [\"[]\", \"float32\", 4],\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"color\",\n          [\"[]\", \"uint8\", 4],\n          \"scale\",\n          \"float32\",\n          \"lod1\",\n          \"float32\",\n          \"lod2\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"broadId\",\n          \"uint16\",\n          \"bucketId\",\n          \"uint16\",\n          \"byte\",\n          \"uint8\",\n          \"sortLayer\",\n          \"uint8\",\n          \"layerMask\",\n          \"uint32\",\n          \"glomType\",\n          \"uint8\",\n          \"parent\",\n          Utils.getQWordReader(),\n          \"glomOrigin\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.PackMapPropObjVolumeV20 = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"layerMask\",\n          \"uint32\",\n          \"glomType\",\n          \"uint8\",\n          \"children\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"glomClipScale\",\n          [\"[]\", \"float32\", 3],\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"scale\",\n          \"float32\",\n        ];\n\n        this.PackBroadphaseType = [\"broadphaseData\", Utils.getArrayReader(\"uint8\")];\n\n        this.__root = this.PackMapPropV20 = [\n          \"propArray\",\n          Utils.getArrayReader(this.PackMapPropObjV20),\n          \"propAnimArray\",\n          Utils.getArrayReader(this.PackMapPropObjAnimSeqV20),\n          \"propInstanceArray\",\n          Utils.getArrayReader(this.PackMapPropObjInstanceV20),\n          \"propToolArray\",\n          Utils.getArrayReader(this.PackMapPropObjToolV20),\n          \"propMetaArray\",\n          Utils.getArrayReader(this.PackMapPropObjMetaV20),\n          \"propVolumeArray\",\n          Utils.getArrayReader(this.PackMapPropObjVolumeV20),\n          \"broadPhase\",\n          this.PackBroadphaseType,\n          \"nextBroadId\",\n          \"uint32\",\n        ];\n      },\n\n      // => Version: 19\n      19: function () {\n        this.PackMapPropObjV19 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"blitTextures\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"constTokens\",\n          Utils.getArrayReader(\"uint32\"),\n          \"constValues\",\n          Utils.getArrayReader([\"[]\", \"float32\", 4]),\n          \"guid\",\n          Utils.getQWordReader(),\n          \"permutation\",\n          Utils.getQWordReader(),\n          \"bounds\",\n          [\"[]\", \"float32\", 4],\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"color\",\n          [\"[]\", \"uint8\", 4],\n          \"scale\",\n          \"float32\",\n          \"lod1\",\n          \"float32\",\n          \"lod2\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"broadId\",\n          \"uint16\",\n          \"bucketId\",\n          \"uint16\",\n          \"byte\",\n          \"uint8\",\n          \"sortLayer\",\n          \"uint8\",\n        ];\n\n        this.PackMapPropObjAnimSeqV19 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"blitTextures\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"constTokens\",\n          Utils.getArrayReader(\"uint32\"),\n          \"constValues\",\n          Utils.getArrayReader([\"[]\", \"float32\", 4]),\n          \"guid\",\n          Utils.getQWordReader(),\n          \"permutation\",\n          Utils.getQWordReader(),\n          \"bounds\",\n          [\"[]\", \"float32\", 4],\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"color\",\n          [\"[]\", \"uint8\", 4],\n          \"scale\",\n          \"float32\",\n          \"lod1\",\n          \"float32\",\n          \"lod2\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"broadId\",\n          \"uint16\",\n          \"bucketId\",\n          \"uint16\",\n          \"byte\",\n          \"uint8\",\n          \"sortLayer\",\n          \"uint8\",\n          \"animSequence\",\n          Utils.getQWordReader(),\n        ];\n\n        this.PackMapPropTransformV19 = [\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"scale\",\n          \"float32\",\n        ];\n\n        this.PackMapPropObjInstanceV19 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"blitTextures\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"constTokens\",\n          Utils.getArrayReader(\"uint32\"),\n          \"constValues\",\n          Utils.getArrayReader([\"[]\", \"float32\", 4]),\n          \"guid\",\n          Utils.getQWordReader(),\n          \"permutation\",\n          Utils.getQWordReader(),\n          \"bounds\",\n          [\"[]\", \"float32\", 4],\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"color\",\n          [\"[]\", \"uint8\", 4],\n          \"scale\",\n          \"float32\",\n          \"lod1\",\n          \"float32\",\n          \"lod2\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"broadId\",\n          \"uint16\",\n          \"bucketId\",\n          \"uint16\",\n          \"byte\",\n          \"uint8\",\n          \"sortLayer\",\n          \"uint8\",\n          \"transforms\",\n          Utils.getArrayReader(this.PackMapPropTransformV19),\n          \"origGuidArray\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.PackMapPropObjToolV19 = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"layerMask\",\n          \"uint32\",\n          \"glomType\",\n          \"uint8\",\n          \"children\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.PackMapPropObjMetaV19 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"blitTextures\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"constTokens\",\n          Utils.getArrayReader(\"uint32\"),\n          \"constValues\",\n          Utils.getArrayReader([\"[]\", \"float32\", 4]),\n          \"guid\",\n          Utils.getQWordReader(),\n          \"permutation\",\n          Utils.getQWordReader(),\n          \"bounds\",\n          [\"[]\", \"float32\", 4],\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"color\",\n          [\"[]\", \"uint8\", 4],\n          \"scale\",\n          \"float32\",\n          \"lod1\",\n          \"float32\",\n          \"lod2\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"broadId\",\n          \"uint16\",\n          \"bucketId\",\n          \"uint16\",\n          \"byte\",\n          \"uint8\",\n          \"sortLayer\",\n          \"uint8\",\n          \"layerMask\",\n          \"uint32\",\n          \"glomType\",\n          \"uint8\",\n          \"parent\",\n          Utils.getQWordReader(),\n          \"glomOrigin\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.PackMapPropObjVolumeV19 = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"layerMask\",\n          \"uint32\",\n          \"glomType\",\n          \"uint8\",\n          \"children\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"glomClipScale\",\n          [\"[]\", \"float32\", 3],\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"scale\",\n          \"float32\",\n        ];\n\n        this.PackBroadphaseType = [\"broadphaseData\", Utils.getArrayReader(\"uint8\")];\n\n        this.__root = this.PackMapPropV19 = [\n          \"propArray\",\n          Utils.getArrayReader(this.PackMapPropObjV19),\n          \"propAnimArray\",\n          Utils.getArrayReader(this.PackMapPropObjAnimSeqV19),\n          \"propInstanceArray\",\n          Utils.getArrayReader(this.PackMapPropObjInstanceV19),\n          \"propToolArray\",\n          Utils.getArrayReader(this.PackMapPropObjToolV19),\n          \"propMetaArray\",\n          Utils.getArrayReader(this.PackMapPropObjMetaV19),\n          \"propVolumeArray\",\n          Utils.getArrayReader(this.PackMapPropObjVolumeV19),\n          \"broadPhase\",\n          this.PackBroadphaseType,\n          \"nextBroadId\",\n          \"uint32\",\n        ];\n      },\n\n      // => Version: 18\n      18: function () {\n        this.PackMapPropObjV18 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"blitTextures\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"guid\",\n          Utils.getQWordReader(),\n          \"permutation\",\n          Utils.getQWordReader(),\n          \"bounds\",\n          [\"[]\", \"float32\", 4],\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"color\",\n          [\"[]\", \"uint8\", 4],\n          \"scale\",\n          \"float32\",\n          \"lod1\",\n          \"float32\",\n          \"lod2\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"broadId\",\n          \"uint16\",\n          \"bucketId\",\n          \"uint16\",\n          \"byte\",\n          \"uint8\",\n          \"sortLayer\",\n          \"uint8\",\n        ];\n\n        this.PackMapPropObjAnimSeqV18 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"blitTextures\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"guid\",\n          Utils.getQWordReader(),\n          \"permutation\",\n          Utils.getQWordReader(),\n          \"bounds\",\n          [\"[]\", \"float32\", 4],\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"color\",\n          [\"[]\", \"uint8\", 4],\n          \"scale\",\n          \"float32\",\n          \"lod1\",\n          \"float32\",\n          \"lod2\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"broadId\",\n          \"uint16\",\n          \"bucketId\",\n          \"uint16\",\n          \"byte\",\n          \"uint8\",\n          \"sortLayer\",\n          \"uint8\",\n          \"animSequence\",\n          Utils.getQWordReader(),\n        ];\n\n        this.PackMapPropTransformV18 = [\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"scale\",\n          \"float32\",\n        ];\n\n        this.PackMapPropObjInstanceV18 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"blitTextures\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"guid\",\n          Utils.getQWordReader(),\n          \"permutation\",\n          Utils.getQWordReader(),\n          \"bounds\",\n          [\"[]\", \"float32\", 4],\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"color\",\n          [\"[]\", \"uint8\", 4],\n          \"scale\",\n          \"float32\",\n          \"lod1\",\n          \"float32\",\n          \"lod2\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"broadId\",\n          \"uint16\",\n          \"bucketId\",\n          \"uint16\",\n          \"byte\",\n          \"uint8\",\n          \"sortLayer\",\n          \"uint8\",\n          \"transforms\",\n          Utils.getArrayReader(this.PackMapPropTransformV18),\n          \"origGuidArray\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.PackMapPropObjToolV18 = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"layerMask\",\n          \"uint32\",\n          \"glomType\",\n          \"uint8\",\n          \"children\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.PackMapPropObjMetaV18 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"blitTextures\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"guid\",\n          Utils.getQWordReader(),\n          \"permutation\",\n          Utils.getQWordReader(),\n          \"bounds\",\n          [\"[]\", \"float32\", 4],\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"color\",\n          [\"[]\", \"uint8\", 4],\n          \"scale\",\n          \"float32\",\n          \"lod1\",\n          \"float32\",\n          \"lod2\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"broadId\",\n          \"uint16\",\n          \"bucketId\",\n          \"uint16\",\n          \"byte\",\n          \"uint8\",\n          \"sortLayer\",\n          \"uint8\",\n          \"layerMask\",\n          \"uint32\",\n          \"glomType\",\n          \"uint8\",\n          \"parent\",\n          Utils.getQWordReader(),\n          \"glomOrigin\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.PackMapPropObjVolumeV18 = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"layerMask\",\n          \"uint32\",\n          \"glomType\",\n          \"uint8\",\n          \"children\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"glomClipScale\",\n          [\"[]\", \"float32\", 3],\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"scale\",\n          \"float32\",\n        ];\n\n        this.PackBroadphaseType = [\"broadphaseData\", Utils.getArrayReader(\"uint8\")];\n\n        this.__root = this.PackMapPropV18 = [\n          \"propArray\",\n          Utils.getArrayReader(this.PackMapPropObjV18),\n          \"propAnimArray\",\n          Utils.getArrayReader(this.PackMapPropObjAnimSeqV18),\n          \"propInstanceArray\",\n          Utils.getArrayReader(this.PackMapPropObjInstanceV18),\n          \"propToolArray\",\n          Utils.getArrayReader(this.PackMapPropObjToolV18),\n          \"propMetaArray\",\n          Utils.getArrayReader(this.PackMapPropObjMetaV18),\n          \"propVolumeArray\",\n          Utils.getArrayReader(this.PackMapPropObjVolumeV18),\n          \"broadPhase\",\n          this.PackBroadphaseType,\n          \"nextBroadId\",\n          \"uint32\",\n        ];\n      },\n\n      // => Version: 17, ReferencedFunction: 0xEB6AF0\n      17: function () {\n        this.PackMapPropObjV17 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"blitTextures\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"guid\",\n          Utils.getQWordReader(),\n          \"permutation\",\n          Utils.getQWordReader(),\n          \"bounds\",\n          [\"[]\", \"float32\", 4],\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"color\",\n          [\"[]\", \"uint8\", 4],\n          \"scale\",\n          \"float32\",\n          \"lod1\",\n          \"float32\",\n          \"lod2\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"broadId\",\n          \"uint16\",\n          \"bucketId\",\n          \"uint16\",\n          \"byte\",\n          \"uint8\",\n        ];\n\n        this.PackMapPropObjAnimSeqV17 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"blitTextures\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"guid\",\n          Utils.getQWordReader(),\n          \"permutation\",\n          Utils.getQWordReader(),\n          \"bounds\",\n          [\"[]\", \"float32\", 4],\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"color\",\n          [\"[]\", \"uint8\", 4],\n          \"scale\",\n          \"float32\",\n          \"lod1\",\n          \"float32\",\n          \"lod2\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"broadId\",\n          \"uint16\",\n          \"bucketId\",\n          \"uint16\",\n          \"byte\",\n          \"uint8\",\n          \"animSequence\",\n          Utils.getQWordReader(),\n        ];\n\n        this.PackMapPropTransformV17 = [\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"scale\",\n          \"float32\",\n        ];\n\n        this.PackMapPropObjInstanceV17 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"blitTextures\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"guid\",\n          Utils.getQWordReader(),\n          \"permutation\",\n          Utils.getQWordReader(),\n          \"bounds\",\n          [\"[]\", \"float32\", 4],\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"color\",\n          [\"[]\", \"uint8\", 4],\n          \"scale\",\n          \"float32\",\n          \"lod1\",\n          \"float32\",\n          \"lod2\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"broadId\",\n          \"uint16\",\n          \"bucketId\",\n          \"uint16\",\n          \"byte\",\n          \"uint8\",\n          \"transforms\",\n          Utils.getArrayReader(this.PackMapPropTransformV17),\n          \"origGuidArray\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.PackMapPropObjToolV17 = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"layerMask\",\n          \"uint32\",\n          \"glomType\",\n          \"uint8\",\n          \"children\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.PackMapPropObjMetaV17 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"blitTextures\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"guid\",\n          Utils.getQWordReader(),\n          \"permutation\",\n          Utils.getQWordReader(),\n          \"bounds\",\n          [\"[]\", \"float32\", 4],\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"color\",\n          [\"[]\", \"uint8\", 4],\n          \"scale\",\n          \"float32\",\n          \"lod1\",\n          \"float32\",\n          \"lod2\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"broadId\",\n          \"uint16\",\n          \"bucketId\",\n          \"uint16\",\n          \"byte\",\n          \"uint8\",\n          \"layerMask\",\n          \"uint32\",\n          \"glomType\",\n          \"uint8\",\n          \"parent\",\n          Utils.getQWordReader(),\n          \"glomOrigin\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.PackMapPropObjVolumeV17 = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"layerMask\",\n          \"uint32\",\n          \"glomType\",\n          \"uint8\",\n          \"children\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"glomClipScale\",\n          [\"[]\", \"float32\", 3],\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"scale\",\n          \"float32\",\n        ];\n\n        this.PackBroadphaseType = [\"broadphaseData\", Utils.getArrayReader(\"uint8\")];\n\n        this.__root = this.PackMapPropV17 = [\n          \"propArray\",\n          Utils.getArrayReader(this.PackMapPropObjV17),\n          \"propAnimArray\",\n          Utils.getArrayReader(this.PackMapPropObjAnimSeqV17),\n          \"propInstanceArray\",\n          Utils.getArrayReader(this.PackMapPropObjInstanceV17),\n          \"propToolArray\",\n          Utils.getArrayReader(this.PackMapPropObjToolV17),\n          \"propMetaArray\",\n          Utils.getArrayReader(this.PackMapPropObjMetaV17),\n          \"propVolumeArray\",\n          Utils.getArrayReader(this.PackMapPropObjVolumeV17),\n          \"broadPhase\",\n          this.PackBroadphaseType,\n          \"nextBroadId\",\n          \"uint32\",\n        ];\n      },\n\n      // => Version: 16\n      16: function () {\n        this.PackMapPropObjV16 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"blitTextures\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"guid\",\n          Utils.getQWordReader(),\n          \"permutation\",\n          Utils.getQWordReader(),\n          \"bounds\",\n          [\"[]\", \"float32\", 4],\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"color\",\n          [\"[]\", \"uint8\", 4],\n          \"scale\",\n          \"float32\",\n          \"lod1\",\n          \"float32\",\n          \"lod2\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"broadId\",\n          \"uint16\",\n          \"bucketId\",\n          \"uint16\",\n          \"byte\",\n          \"uint8\",\n        ];\n\n        this.PackMapPropObjAnimSeqV16 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"blitTextures\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"guid\",\n          Utils.getQWordReader(),\n          \"permutation\",\n          Utils.getQWordReader(),\n          \"bounds\",\n          [\"[]\", \"float32\", 4],\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"color\",\n          [\"[]\", \"uint8\", 4],\n          \"scale\",\n          \"float32\",\n          \"lod1\",\n          \"float32\",\n          \"lod2\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"broadId\",\n          \"uint16\",\n          \"bucketId\",\n          \"uint16\",\n          \"byte\",\n          \"uint8\",\n          \"animSequence\",\n          Utils.getQWordReader(),\n        ];\n\n        this.PackMapPropTransformV16 = [\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"scale\",\n          \"float32\",\n        ];\n\n        this.PackMapPropObjInstanceV16 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"blitTextures\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"guid\",\n          Utils.getQWordReader(),\n          \"permutation\",\n          Utils.getQWordReader(),\n          \"bounds\",\n          [\"[]\", \"float32\", 4],\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"color\",\n          [\"[]\", \"uint8\", 4],\n          \"scale\",\n          \"float32\",\n          \"lod1\",\n          \"float32\",\n          \"lod2\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"broadId\",\n          \"uint16\",\n          \"bucketId\",\n          \"uint16\",\n          \"byte\",\n          \"uint8\",\n          \"transforms\",\n          Utils.getArrayReader(this.PackMapPropTransformV16),\n          \"origGuidArray\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.PackMapPropObjToolV16 = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"layerMask\",\n          \"uint32\",\n          \"glomType\",\n          \"uint8\",\n          \"children\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.PackMapPropObjMetaV16 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"blitTextures\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"guid\",\n          Utils.getQWordReader(),\n          \"permutation\",\n          Utils.getQWordReader(),\n          \"bounds\",\n          [\"[]\", \"float32\", 4],\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"color\",\n          [\"[]\", \"uint8\", 4],\n          \"scale\",\n          \"float32\",\n          \"lod1\",\n          \"float32\",\n          \"lod2\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"broadId\",\n          \"uint16\",\n          \"bucketId\",\n          \"uint16\",\n          \"byte\",\n          \"uint8\",\n          \"layerMask\",\n          \"uint32\",\n          \"glomType\",\n          \"uint8\",\n          \"parent\",\n          Utils.getQWordReader(),\n          \"glomOrigin\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.PackMapPropObjVolumeV16 = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"layerMask\",\n          \"uint32\",\n          \"glomType\",\n          \"uint8\",\n          \"children\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"glomClipScale\",\n          [\"[]\", \"float32\", 3],\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"scale\",\n          \"float32\",\n        ];\n\n        this.PackBroadphaseType = [\"broadphaseData\", Utils.getArrayReader(\"uint8\")];\n\n        this.__root = this.PackMapPropV16 = [\n          \"propArray\",\n          Utils.getArrayReader(this.PackMapPropObjV16),\n          \"propAnimArray\",\n          Utils.getArrayReader(this.PackMapPropObjAnimSeqV16),\n          \"propInstanceArray\",\n          Utils.getArrayReader(this.PackMapPropObjInstanceV16),\n          \"propToolArray\",\n          Utils.getArrayReader(this.PackMapPropObjToolV16),\n          \"propMetaArray\",\n          Utils.getArrayReader(this.PackMapPropObjMetaV16),\n          \"propVolumeArray\",\n          Utils.getArrayReader(this.PackMapPropObjVolumeV16),\n          \"broadPhase\",\n          this.PackBroadphaseType,\n          \"nextBroadId\",\n          \"uint32\",\n        ];\n      },\n\n      // => Version: 15\n      15: function () {\n        this.PackMapPropObjV15 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"blitTextures\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"guid\",\n          Utils.getQWordReader(),\n          \"bounds\",\n          [\"[]\", \"float32\", 4],\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"color\",\n          [\"[]\", \"uint8\", 4],\n          \"scale\",\n          \"float32\",\n          \"lod1\",\n          \"float32\",\n          \"lod2\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"broadId\",\n          \"uint16\",\n          \"bucketId\",\n          \"uint16\",\n          \"byte\",\n          \"uint8\",\n        ];\n\n        this.PackMapPropObjAnimSeqV15 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"blitTextures\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"guid\",\n          Utils.getQWordReader(),\n          \"bounds\",\n          [\"[]\", \"float32\", 4],\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"color\",\n          [\"[]\", \"uint8\", 4],\n          \"scale\",\n          \"float32\",\n          \"lod1\",\n          \"float32\",\n          \"lod2\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"broadId\",\n          \"uint16\",\n          \"bucketId\",\n          \"uint16\",\n          \"byte\",\n          \"uint8\",\n          \"animSequence\",\n          Utils.getQWordReader(),\n        ];\n\n        this.PackMapPropTransformV15 = [\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"scale\",\n          \"float32\",\n        ];\n\n        this.PackMapPropObjInstanceV15 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"blitTextures\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"guid\",\n          Utils.getQWordReader(),\n          \"bounds\",\n          [\"[]\", \"float32\", 4],\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"color\",\n          [\"[]\", \"uint8\", 4],\n          \"scale\",\n          \"float32\",\n          \"lod1\",\n          \"float32\",\n          \"lod2\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"broadId\",\n          \"uint16\",\n          \"bucketId\",\n          \"uint16\",\n          \"byte\",\n          \"uint8\",\n          \"transforms\",\n          Utils.getArrayReader(this.PackMapPropTransformV15),\n          \"origGuidArray\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.PackMapPropObjToolV15 = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"layerMask\",\n          \"uint32\",\n          \"glomType\",\n          \"uint8\",\n          \"children\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.PackMapPropObjMetaV15 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"blitTextures\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"guid\",\n          Utils.getQWordReader(),\n          \"bounds\",\n          [\"[]\", \"float32\", 4],\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"color\",\n          [\"[]\", \"uint8\", 4],\n          \"scale\",\n          \"float32\",\n          \"lod1\",\n          \"float32\",\n          \"lod2\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"broadId\",\n          \"uint16\",\n          \"bucketId\",\n          \"uint16\",\n          \"byte\",\n          \"uint8\",\n          \"layerMask\",\n          \"uint32\",\n          \"glomType\",\n          \"uint8\",\n          \"parent\",\n          Utils.getQWordReader(),\n          \"glomOrigin\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.PackMapPropObjVolumeV15 = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"layerMask\",\n          \"uint32\",\n          \"glomType\",\n          \"uint8\",\n          \"children\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"glomClipScale\",\n          [\"[]\", \"float32\", 3],\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"scale\",\n          \"float32\",\n        ];\n\n        this.PackBroadphaseType = [\"broadphaseData\", Utils.getArrayReader(\"uint8\")];\n\n        this.__root = this.PackMapPropV15 = [\n          \"propArray\",\n          Utils.getArrayReader(this.PackMapPropObjV15),\n          \"propAnimArray\",\n          Utils.getArrayReader(this.PackMapPropObjAnimSeqV15),\n          \"propInstanceArray\",\n          Utils.getArrayReader(this.PackMapPropObjInstanceV15),\n          \"propToolArray\",\n          Utils.getArrayReader(this.PackMapPropObjToolV15),\n          \"propMetaArray\",\n          Utils.getArrayReader(this.PackMapPropObjMetaV15),\n          \"propVolumeArray\",\n          Utils.getArrayReader(this.PackMapPropObjVolumeV15),\n          \"broadPhase\",\n          this.PackBroadphaseType,\n          \"nextBroadId\",\n          \"uint32\",\n        ];\n      },\n\n      // => Version: 14, ReferencedFunction: 0xEB6A80\n      14: function () {\n        this.PackMapPropObjV14 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"blitTextures\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"guid\",\n          Utils.getQWordReader(),\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"color\",\n          [\"[]\", \"uint8\", 4],\n          \"scale\",\n          \"float32\",\n          \"lod1\",\n          \"float32\",\n          \"lod2\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"broadId\",\n          \"uint16\",\n          \"bucketId\",\n          \"uint16\",\n          \"byte\",\n          \"uint8\",\n        ];\n\n        this.PackMapPropObjAnimSeqV14 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"blitTextures\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"guid\",\n          Utils.getQWordReader(),\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"color\",\n          [\"[]\", \"uint8\", 4],\n          \"scale\",\n          \"float32\",\n          \"lod1\",\n          \"float32\",\n          \"lod2\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"broadId\",\n          \"uint16\",\n          \"bucketId\",\n          \"uint16\",\n          \"byte\",\n          \"uint8\",\n          \"animSequence\",\n          Utils.getQWordReader(),\n        ];\n\n        this.PackMapPropObjToolV14 = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"layerMask\",\n          \"uint32\",\n          \"glomType\",\n          \"uint8\",\n          \"children\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.PackMapPropObjMetaV14 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"blitTextures\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"guid\",\n          Utils.getQWordReader(),\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"color\",\n          [\"[]\", \"uint8\", 4],\n          \"scale\",\n          \"float32\",\n          \"lod1\",\n          \"float32\",\n          \"lod2\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"broadId\",\n          \"uint16\",\n          \"bucketId\",\n          \"uint16\",\n          \"byte\",\n          \"uint8\",\n          \"layerMask\",\n          \"uint32\",\n          \"glomType\",\n          \"uint8\",\n          \"parent\",\n          Utils.getQWordReader(),\n          \"glomOrigin\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.PackMapPropObjVolumeV14 = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"layerMask\",\n          \"uint32\",\n          \"glomType\",\n          \"uint8\",\n          \"children\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"glomClipScale\",\n          [\"[]\", \"float32\", 3],\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"scale\",\n          \"float32\",\n        ];\n\n        this.PackBroadphaseType = [\"broadphaseData\", Utils.getArrayReader(\"uint8\")];\n\n        this.__root = this.PackMapPropV14 = [\n          \"propArray\",\n          Utils.getArrayReader(this.PackMapPropObjV14),\n          \"propAnimArray\",\n          Utils.getArrayReader(this.PackMapPropObjAnimSeqV14),\n          \"propToolArray\",\n          Utils.getArrayReader(this.PackMapPropObjToolV14),\n          \"propMetaArray\",\n          Utils.getArrayReader(this.PackMapPropObjMetaV14),\n          \"propVolumeArray\",\n          Utils.getArrayReader(this.PackMapPropObjVolumeV14),\n          \"broadPhase\",\n          this.PackBroadphaseType,\n          \"nextBroadId\",\n          \"uint32\",\n        ];\n      },\n\n      // => Version: 13\n      13: function () {\n        this.PackMapPropObjV13 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"blitTextures\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"guid\",\n          Utils.getQWordReader(),\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"color\",\n          [\"[]\", \"uint8\", 4],\n          \"scale\",\n          \"float32\",\n          \"lod1\",\n          \"float32\",\n          \"lod2\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"broadId\",\n          \"uint16\",\n          \"byte\",\n          \"uint8\",\n        ];\n\n        this.PackMapPropObjAnimSeqV13 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"blitTextures\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"guid\",\n          Utils.getQWordReader(),\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"color\",\n          [\"[]\", \"uint8\", 4],\n          \"scale\",\n          \"float32\",\n          \"lod1\",\n          \"float32\",\n          \"lod2\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"broadId\",\n          \"uint16\",\n          \"byte\",\n          \"uint8\",\n          \"animSequence\",\n          Utils.getQWordReader(),\n        ];\n\n        this.PackMapPropObjToolV13 = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"layerMask\",\n          \"uint32\",\n          \"glomType\",\n          \"uint8\",\n          \"children\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.PackMapPropObjMetaV13 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"blitTextures\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"guid\",\n          Utils.getQWordReader(),\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"color\",\n          [\"[]\", \"uint8\", 4],\n          \"scale\",\n          \"float32\",\n          \"lod1\",\n          \"float32\",\n          \"lod2\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"broadId\",\n          \"uint16\",\n          \"byte\",\n          \"uint8\",\n          \"layerMask\",\n          \"uint32\",\n          \"glomType\",\n          \"uint8\",\n          \"parent\",\n          Utils.getQWordReader(),\n          \"glomOrigin\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.PackMapPropObjVolumeV13 = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"layerMask\",\n          \"uint32\",\n          \"glomType\",\n          \"uint8\",\n          \"children\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"glomClipScale\",\n          [\"[]\", \"float32\", 3],\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"scale\",\n          \"float32\",\n        ];\n\n        this.PackBroadphaseType = [\"broadphaseData\", Utils.getArrayReader(\"uint8\")];\n\n        this.__root = this.PackMapPropV13 = [\n          \"propArray\",\n          Utils.getArrayReader(this.PackMapPropObjV13),\n          \"propAnimArray\",\n          Utils.getArrayReader(this.PackMapPropObjAnimSeqV13),\n          \"propToolArray\",\n          Utils.getArrayReader(this.PackMapPropObjToolV13),\n          \"propMetaArray\",\n          Utils.getArrayReader(this.PackMapPropObjMetaV13),\n          \"propVolumeArray\",\n          Utils.getArrayReader(this.PackMapPropObjVolumeV13),\n          \"broadPhase\",\n          this.PackBroadphaseType,\n          \"nextBroadId\",\n          \"uint32\",\n        ];\n      },\n\n      // => Version: 12, ReferencedFunction: 0xEB5900\n      12: function () {\n        this.PackMapPropObjV12 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"blitTextures\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"guid\",\n          Utils.getQWordReader(),\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"color\",\n          [\"[]\", \"uint8\", 4],\n          \"scale\",\n          \"float32\",\n          \"lod1\",\n          \"float32\",\n          \"lod2\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"broadId\",\n          \"uint16\",\n          \"byte\",\n          \"uint8\",\n        ];\n\n        this.PackMapPropObjAnimSeqV12 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"blitTextures\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"guid\",\n          Utils.getQWordReader(),\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"color\",\n          [\"[]\", \"uint8\", 4],\n          \"scale\",\n          \"float32\",\n          \"lod1\",\n          \"float32\",\n          \"lod2\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"broadId\",\n          \"uint16\",\n          \"byte\",\n          \"uint8\",\n          \"animSequence\",\n          Utils.getQWordReader(),\n        ];\n\n        this.PackMapPropObjToolV12 = [\"guid\", Utils.getQWordReader(), \"layerMask\", \"uint32\", \"glomType\", \"uint8\"];\n\n        this.PackMapPropObjMetaV12 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"blitTextures\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"guid\",\n          Utils.getQWordReader(),\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"color\",\n          [\"[]\", \"uint8\", 4],\n          \"scale\",\n          \"float32\",\n          \"lod1\",\n          \"float32\",\n          \"lod2\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"broadId\",\n          \"uint16\",\n          \"byte\",\n          \"uint8\",\n          \"layerMask\",\n          \"uint32\",\n          \"glomType\",\n          \"uint8\",\n          \"parent\",\n          Utils.getQWordReader(),\n          \"glomOrigin\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.PackMapPropObjVolumeV12 = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"layerMask\",\n          \"uint32\",\n          \"glomType\",\n          \"uint8\",\n          \"glomClipScale\",\n          [\"[]\", \"float32\", 3],\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"scale\",\n          \"float32\",\n        ];\n\n        this.PackBroadphaseType = [\"broadphaseData\", Utils.getArrayReader(\"uint8\")];\n\n        this.__root = this.PackMapPropV12 = [\n          \"propArray\",\n          Utils.getArrayReader(this.PackMapPropObjV12),\n          \"propAnimArray\",\n          Utils.getArrayReader(this.PackMapPropObjAnimSeqV12),\n          \"propToolArray\",\n          Utils.getArrayReader(this.PackMapPropObjToolV12),\n          \"propMetaArray\",\n          Utils.getArrayReader(this.PackMapPropObjMetaV12),\n          \"propVolumeArray\",\n          Utils.getArrayReader(this.PackMapPropObjVolumeV12),\n          \"broadPhase\",\n          this.PackBroadphaseType,\n          \"nextBroadId\",\n          \"uint32\",\n        ];\n      },\n\n      // => Version: 11, ReferencedFunction: 0xEB5740\n      11: function () {\n        this.PackMapPropObjV11 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"blitTextures\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"guid\",\n          Utils.getQWordReader(),\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"color\",\n          [\"[]\", \"uint8\", 4],\n          \"scale\",\n          \"float32\",\n          \"lod1\",\n          \"float32\",\n          \"lod2\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"broadId\",\n          \"uint16\",\n          \"byte\",\n          \"uint8\",\n        ];\n\n        this.PackMapPropObjAnimSeqV11 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"blitTextures\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"guid\",\n          Utils.getQWordReader(),\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"color\",\n          [\"[]\", \"uint8\", 4],\n          \"scale\",\n          \"float32\",\n          \"lod1\",\n          \"float32\",\n          \"lod2\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"broadId\",\n          \"uint16\",\n          \"byte\",\n          \"uint8\",\n          \"animSequence\",\n          Utils.getQWordReader(),\n        ];\n\n        this.PackMapPropObjToolV11 = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"layerMask\",\n          \"uint32\",\n          \"glomOrigin\",\n          [\"[]\", \"float32\", 3],\n          \"glomClipScale\",\n          [\"[]\", \"float32\", 3],\n          \"glomTargetId\",\n          Utils.getQWordReader(),\n          \"glomType\",\n          \"uint8\",\n        ];\n\n        this.PackBroadphaseType = [\"broadphaseData\", Utils.getArrayReader(\"uint8\")];\n\n        this.__root = this.PackMapPropV11 = [\n          \"propArray\",\n          Utils.getArrayReader(this.PackMapPropObjV11),\n          \"propAnimArray\",\n          Utils.getArrayReader(this.PackMapPropObjAnimSeqV11),\n          \"propToolArray\",\n          Utils.getArrayReader(this.PackMapPropObjToolV11),\n          \"broadPhase\",\n          this.PackBroadphaseType,\n          \"nextBroadId\",\n          \"uint32\",\n        ];\n      },\n\n      // => Version: 10, ReferencedFunction: 0xEB6F90\n      10: function () {\n        this.PackMapPropObjV10 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"blitTextures\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"guid\",\n          Utils.getQWordReader(),\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"color\",\n          [\"[]\", \"uint8\", 4],\n          \"scale\",\n          \"float32\",\n          \"lod1\",\n          \"float32\",\n          \"lod2\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"byte\",\n          \"uint8\",\n        ];\n\n        this.PackMapPropObjAnimSeqV10 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"blitTextures\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"guid\",\n          Utils.getQWordReader(),\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"color\",\n          [\"[]\", \"uint8\", 4],\n          \"scale\",\n          \"float32\",\n          \"lod1\",\n          \"float32\",\n          \"lod2\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"byte\",\n          \"uint8\",\n          \"animSequence\",\n          Utils.getQWordReader(),\n        ];\n\n        this.PackMapPropObjToolV10 = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"layerMask\",\n          \"uint32\",\n          \"glomOrigin\",\n          [\"[]\", \"float32\", 3],\n          \"glomClipScale\",\n          [\"[]\", \"float32\", 3],\n          \"glomTargetId\",\n          Utils.getQWordReader(),\n          \"glomType\",\n          \"uint8\",\n        ];\n\n        this.__root = this.PackMapPropV10 = [\n          \"propArray\",\n          Utils.getArrayReader(this.PackMapPropObjV10),\n          \"propAnimArray\",\n          Utils.getArrayReader(this.PackMapPropObjAnimSeqV10),\n          \"propToolArray\",\n          Utils.getArrayReader(this.PackMapPropObjToolV10),\n        ];\n      },\n\n      // => Version: 9, ReferencedFunction: 0xEB6E40\n      9: function () {\n        this.PackMapPropObjV9 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"blitTextures\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"guid\",\n          Utils.getQWordReader(),\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"color\",\n          [\"[]\", \"uint8\", 4],\n          \"scale\",\n          \"float32\",\n          \"lod1\",\n          \"float32\",\n          \"lod2\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"byte\",\n          \"uint8\",\n        ];\n\n        this.PackMapPropObjAnimSeqV9 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"blitTextures\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"guid\",\n          Utils.getQWordReader(),\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"color\",\n          [\"[]\", \"uint8\", 4],\n          \"scale\",\n          \"float32\",\n          \"lod1\",\n          \"float32\",\n          \"lod2\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"byte\",\n          \"uint8\",\n          \"animSequence\",\n          Utils.getQWordReader(),\n        ];\n\n        this.PackMapPropObjToolV9 = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"layerMask\",\n          \"uint32\",\n          \"glomOrigin\",\n          [\"[]\", \"float32\", 3],\n          \"glomClipScale\",\n          [\"[]\", \"float32\", 3],\n          \"glomTargetId\",\n          Utils.getQWordReader(),\n          \"glomType\",\n          \"uint8\",\n        ];\n\n        this.__root = this.PackMapPropV9 = [\n          \"propArray\",\n          Utils.getArrayReader(this.PackMapPropObjV9),\n          \"propAnimArray\",\n          Utils.getArrayReader(this.PackMapPropObjAnimSeqV9),\n          \"propToolArray\",\n          Utils.getArrayReader(this.PackMapPropObjToolV9),\n        ];\n      },\n\n      // => Version: 8\n      8: function () {\n        this.PackMapPropObjV8 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"blitTextures\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"guid\",\n          Utils.getQWordReader(),\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"color\",\n          [\"[]\", \"uint8\", 4],\n          \"scale\",\n          \"float32\",\n          \"lod1\",\n          \"float32\",\n          \"lod2\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"byte\",\n          \"uint8\",\n        ];\n\n        this.PackMapPropObjAnimSeqV8 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"blitTextures\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"guid\",\n          Utils.getQWordReader(),\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"color\",\n          [\"[]\", \"uint8\", 4],\n          \"scale\",\n          \"float32\",\n          \"lod1\",\n          \"float32\",\n          \"lod2\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"byte\",\n          \"uint8\",\n          \"animSequence\",\n          Utils.getQWordReader(),\n        ];\n\n        this.PackMapPropObjToolV8 = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"layerMask\",\n          \"uint32\",\n          \"glomOrigin\",\n          [\"[]\", \"float32\", 3],\n          \"glomClipScale\",\n          [\"[]\", \"float32\", 3],\n          \"glomTargetId\",\n          Utils.getQWordReader(),\n          \"glomType\",\n          \"uint8\",\n        ];\n\n        this.__root = this.PackMapPropV8 = [\n          \"propArray\",\n          Utils.getArrayReader(this.PackMapPropObjV8),\n          \"propAnimArray\",\n          Utils.getArrayReader(this.PackMapPropObjAnimSeqV8),\n          \"propToolArray\",\n          Utils.getArrayReader(this.PackMapPropObjToolV8),\n        ];\n      },\n\n      // => Version: 7, ReferencedFunction: 0xEB6DF0\n      7: function () {\n        this.PackMapPropObjV7 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"guid\",\n          Utils.getQWordReader(),\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"color\",\n          [\"[]\", \"uint8\", 4],\n          \"scale\",\n          \"float32\",\n          \"lod1\",\n          \"float32\",\n          \"lod2\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"byte\",\n          \"uint8\",\n        ];\n\n        this.PackMapPropObjAnimSeqV7 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"guid\",\n          Utils.getQWordReader(),\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"color\",\n          [\"[]\", \"uint8\", 4],\n          \"scale\",\n          \"float32\",\n          \"lod1\",\n          \"float32\",\n          \"lod2\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"byte\",\n          \"uint8\",\n          \"animSequence\",\n          Utils.getQWordReader(),\n        ];\n\n        this.PackMapPropObjToolV7 = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"layerMask\",\n          \"uint32\",\n          \"glomOrigin\",\n          [\"[]\", \"float32\", 3],\n          \"glomClipScale\",\n          [\"[]\", \"float32\", 3],\n          \"glomTargetId\",\n          Utils.getQWordReader(),\n          \"glomType\",\n          \"uint8\",\n        ];\n\n        this.__root = this.PackMapPropV7 = [\n          \"propArray\",\n          Utils.getArrayReader(this.PackMapPropObjV7),\n          \"propAnimArray\",\n          Utils.getArrayReader(this.PackMapPropObjAnimSeqV7),\n          \"propToolArray\",\n          Utils.getArrayReader(this.PackMapPropObjToolV7),\n        ];\n      },\n\n      // => Version: 6, ReferencedFunction: 0xEB6C50\n      6: function () {\n        this.PackMapPropObjV6 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"guid\",\n          Utils.getQWordReader(),\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"scale\",\n          \"float32\",\n          \"lod1\",\n          \"float32\",\n          \"lod2\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"byte\",\n          \"uint8\",\n        ];\n\n        this.PackMapPropObjAnimSeqV6 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"guid\",\n          Utils.getQWordReader(),\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"scale\",\n          \"float32\",\n          \"lod1\",\n          \"float32\",\n          \"lod2\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"byte\",\n          \"uint8\",\n          \"animSequence\",\n          Utils.getQWordReader(),\n        ];\n\n        this.PackMapPropObjToolV6 = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"layerMask\",\n          \"uint32\",\n          \"glomOrigin\",\n          [\"[]\", \"float32\", 3],\n          \"glomClipScale\",\n          [\"[]\", \"float32\", 3],\n          \"glomTargetId\",\n          Utils.getQWordReader(),\n          \"glomType\",\n          \"uint8\",\n        ];\n\n        this.__root = this.PackMapPropV6 = [\n          \"propArray\",\n          Utils.getArrayReader(this.PackMapPropObjV6),\n          \"propAnimArray\",\n          Utils.getArrayReader(this.PackMapPropObjAnimSeqV6),\n          \"propToolArray\",\n          Utils.getArrayReader(this.PackMapPropObjToolV6),\n        ];\n      },\n\n      // => Version: 5\n      5: function () {\n        this.PackMapPropObjV5 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"guid\",\n          Utils.getQWordReader(),\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"scale\",\n          \"float32\",\n          \"lod1\",\n          \"uint16\",\n          \"lod2\",\n          \"uint16\",\n          \"flags\",\n          \"uint32\",\n          \"byte\",\n          \"uint8\",\n        ];\n\n        this.PackMapPropObjAnimSeqV5 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"guid\",\n          Utils.getQWordReader(),\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"scale\",\n          \"float32\",\n          \"lod1\",\n          \"uint16\",\n          \"lod2\",\n          \"uint16\",\n          \"flags\",\n          \"uint32\",\n          \"byte\",\n          \"uint8\",\n          \"animSequence\",\n          Utils.getQWordReader(),\n        ];\n\n        this.PackMapPropObjToolV5 = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"layerMask\",\n          \"uint32\",\n          \"glomOrigin\",\n          [\"[]\", \"float32\", 3],\n          \"glomClipScale\",\n          [\"[]\", \"float32\", 3],\n          \"glomTargetId\",\n          Utils.getQWordReader(),\n          \"glomType\",\n          \"uint8\",\n        ];\n\n        this.__root = this.PackMapPropV5 = [\n          \"propArray\",\n          Utils.getArrayReader(this.PackMapPropObjV5),\n          \"propAnimArray\",\n          Utils.getArrayReader(this.PackMapPropObjAnimSeqV5),\n          \"propToolArray\",\n          Utils.getArrayReader(this.PackMapPropObjToolV5),\n        ];\n      },\n\n      // => Version: 4\n      4: function () {\n        this.PackMapPropObjV4 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"guid\",\n          Utils.getQWordReader(),\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"scale\",\n          \"float32\",\n          \"lod1\",\n          \"uint16\",\n          \"lod2\",\n          \"uint16\",\n          \"flags\",\n          \"uint32\",\n          \"byte\",\n          \"uint8\",\n        ];\n\n        this.PackMapPropObjAnimSeqV4 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"guid\",\n          Utils.getQWordReader(),\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"scale\",\n          \"float32\",\n          \"lod1\",\n          \"uint16\",\n          \"lod2\",\n          \"uint16\",\n          \"flags\",\n          \"uint32\",\n          \"byte\",\n          \"uint8\",\n          \"animSequence\",\n          Utils.getQWordReader(),\n        ];\n\n        this.PackMapPropObjToolV4 = [\"guid\", Utils.getQWordReader(), \"layerMask\", \"uint32\"];\n\n        this.__root = this.PackMapPropV4 = [\n          \"propArray\",\n          Utils.getArrayReader(this.PackMapPropObjV4),\n          \"propAnimArray\",\n          Utils.getArrayReader(this.PackMapPropObjAnimSeqV4),\n          \"propToolArray\",\n          Utils.getArrayReader(this.PackMapPropObjToolV4),\n        ];\n      },\n\n      // => Version: 3\n      3: function () {\n        this.PackMapPropObjV3 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"guid\",\n          Utils.getQWordReader(),\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"scale\",\n          \"float32\",\n          \"lod1\",\n          \"uint16\",\n          \"lod2\",\n          \"uint16\",\n          \"flags\",\n          \"uint32\",\n        ];\n\n        this.PackMapPropObjAnimSeqV3 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"guid\",\n          Utils.getQWordReader(),\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"rotation\",\n          [\"[]\", \"float32\", 3],\n          \"scale\",\n          \"float32\",\n          \"lod1\",\n          \"uint16\",\n          \"lod2\",\n          \"uint16\",\n          \"flags\",\n          \"uint32\",\n          \"animSequence\",\n          Utils.getQWordReader(),\n        ];\n\n        this.PackMapPropObjToolV3 = [\"guid\", Utils.getQWordReader(), \"layerMask\", \"uint32\"];\n\n        this.__root = this.PackMapPropV3 = [\n          \"propArray\",\n          Utils.getArrayReader(this.PackMapPropObjV3),\n          \"propAnimArray\",\n          Utils.getArrayReader(this.PackMapPropObjAnimSeqV3),\n          \"propToolArray\",\n          Utils.getArrayReader(this.PackMapPropObjToolV3),\n        ];\n      },\n    },\n  },\n];\n","const Utils = require(\"../../util/ParserUtils.js\");\n\nmodule.exports = [\n  /// ==================================================\n  /// Chunk: PRPS, versions: 1, strucTab: 0x177326C\n  /// ==================================================\n\n  {\n    name: \"PRPS\",\n    versions: {\n      // => Version: 0\n      0: function () {\n        this.ModelFixedOffsetData = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"parentBone\",\n          Utils.getQWordReader(),\n          \"translation\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.ModelPropertyData = [\n          \"id\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint32\",\n          \"mergeIndex\",\n          \"uint32\",\n          \"time\",\n          \"float32\",\n          \"val\",\n          Utils.getQWordReader(),\n          \"strVal\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.__root = this.ModelFileProperties = [\n          \"fixedOffsetData\",\n          Utils.getArrayReader(this.ModelFixedOffsetData),\n          \"properties\",\n          Utils.getArrayReader(this.ModelPropertyData),\n        ];\n      },\n    },\n  },\n];\n","const Utils = require(\"../../util/ParserUtils.js\");\n\nmodule.exports = [\n  /// ==================================================\n  /// Chunk: PS3S, versions: 1, strucTab: 0x1528AD4\n  /// ==================================================\n\n  {\n    name: \"PS3S\",\n    versions: {\n      // => Version: 0\n      0: function () {\n        this.AmatPs3ShaderConstant = [\n          \"token\",\n          \"uint32\",\n          \"regIndex\",\n          \"uint32\",\n          \"regCount\",\n          \"uint32\",\n          \"regValue\",\n          [\"[]\", \"float32\", 4],\n          \"data\",\n          \"uint32\",\n        ];\n\n        this.AmatPs3SamplerConstant = [\"regIndex\", \"uint32\", \"stateIndex\", \"uint32\", \"texIndex\", \"uint32\"];\n\n        this.AmatPs3FragmentShaderConfig = [\n          \"offset\",\n          \"uint32\",\n          \"attributeInputMask\",\n          \"uint32\",\n          \"texCoordsInputMask\",\n          \"uint32\",\n          \"texCoords2D\",\n          \"uint32\",\n          \"texCoordsCentroid\",\n          \"uint32\",\n          \"fragmentControl\",\n          \"uint32\",\n          \"registerCount\",\n          \"uint32\",\n          \"constants\",\n          Utils.getArrayReader(this.AmatPs3ShaderConstant),\n          \"samplers\",\n          Utils.getArrayReader(this.AmatPs3SamplerConstant),\n          \"code\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.AmatPs3VertexShaderConfig = [\n          \"instructionSlot\",\n          \"uint32\",\n          \"instructionCount\",\n          \"uint32\",\n          \"attributeInputMask\",\n          \"uint32\",\n          \"registerCount\",\n          \"uint32\",\n          \"constants\",\n          Utils.getArrayReader(this.AmatPs3ShaderConstant),\n          \"samplers\",\n          Utils.getArrayReader(this.AmatPs3SamplerConstant),\n          \"code\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.AmatPs3RenderState = [\n          \"cullMode\",\n          \"uint32\",\n          \"alphaFunc\",\n          \"uint32\",\n          \"alphaRef\",\n          \"uint32\",\n          \"blendOp\",\n          \"uint32\",\n          \"blendSrc\",\n          \"uint32\",\n          \"blendDst\",\n          \"uint32\",\n          \"colorMask\",\n          \"uint32\",\n          \"depthWrite\",\n          \"uint32\",\n          \"depthFunc\",\n          \"uint32\",\n          \"depthBias\",\n          \"float32\",\n        ];\n\n        this.AmatPs3Pass = [\n          \"renderState\",\n          this.AmatPs3RenderState,\n          \"pixelShader\",\n          \"uint32\",\n          \"vertexShader\",\n          \"uint32\",\n          \"psFileFame\",\n          Utils.getFileNameReader(),\n          \"vsFileName\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.AmatPs3Effect = [\"token\", Utils.getQWordReader(), \"passes\", Utils.getArrayReader(this.AmatPs3Pass)];\n\n        this.AmatPs3Sampler = [\n          \"wraps\",\n          \"uint32\",\n          \"wrapt\",\n          \"uint32\",\n          \"maxAniso\",\n          \"uint32\",\n          \"filterMin\",\n          \"uint32\",\n          \"filterMag\",\n          \"uint32\",\n          \"filterBias\",\n          \"uint32\",\n        ];\n\n        this.__root = this.AmatPs3Material = [\n          \"name\",\n          Utils.getStringReader(),\n          \"fragmentShaders\",\n          Utils.getArrayReader(this.AmatPs3FragmentShaderConfig),\n          \"vertexShaders\",\n          Utils.getArrayReader(this.AmatPs3VertexShaderConfig),\n          \"effects\",\n          Utils.getArrayReader(this.AmatPs3Effect),\n          \"samplers\",\n          Utils.getArrayReader(this.AmatPs3Sampler),\n        ];\n      },\n    },\n  },\n];\n","const Utils = require(\"../../util/ParserUtils.js\");\n\nmodule.exports = [\n  /// ==================================================\n  /// Chunk: PVSH, versions: 1, strucTab: 0x1528BDC\n  /// ==================================================\n\n  {\n    name: \"PVSH\",\n    versions: {\n      // => Version: 0\n      0: function () {\n        this.AmatPs3ShaderConstant = [\n          \"token\",\n          \"uint32\",\n          \"regIndex\",\n          \"uint32\",\n          \"regCount\",\n          \"uint32\",\n          \"regValue\",\n          [\"[]\", \"float32\", 4],\n          \"data\",\n          \"uint32\",\n        ];\n\n        this.AmatPs3SamplerConstant = [\"regIndex\", \"uint32\", \"stateIndex\", \"uint32\", \"texIndex\", \"uint32\"];\n\n        this.__root = this.AmatPs3VertexShaderConfig = [\n          \"instructionSlot\",\n          \"uint32\",\n          \"instructionCount\",\n          \"uint32\",\n          \"attributeInputMask\",\n          \"uint32\",\n          \"registerCount\",\n          \"uint32\",\n          \"constants\",\n          Utils.getArrayReader(this.AmatPs3ShaderConstant),\n          \"samplers\",\n          Utils.getArrayReader(this.AmatPs3SamplerConstant),\n          \"code\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n      },\n    },\n  },\n];\n","const Utils = require(\"../../util/ParserUtils.js\");\n\nmodule.exports = [\n  /// ==================================================\n  /// Chunk: reso, versions: 2, strucTab: 0x17228C8\n  /// ==================================================\n\n  {\n    name: \"reso\",\n    versions: {\n      // => Version: 1\n      1: function () {\n        this.PackMapResourceMapNodeItemV1 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"type\",\n          \"uint32\",\n          \"permutation\",\n          Utils.getQWordReader(),\n        ];\n\n        this.PackMapResourceMapNodeV1 = [\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"flags\",\n          \"uint32\",\n          \"itemArray\",\n          Utils.getArrayReader(this.PackMapResourceMapNodeItemV1),\n        ];\n\n        this.__root = this.PackMapResourceMapV1 = [\"nodeArray\", Utils.getArrayReader(this.PackMapResourceMapNodeV1)];\n      },\n\n      // => Version: 0\n      0: function () {\n        this.PackMapResourceMapNodeItemV0 = [\"filename\", Utils.getFileNameReader(), \"type\", \"uint32\"];\n\n        this.PackMapResourceMapNodeV0 = [\n          \"position\",\n          [\"[]\", \"float32\", 3],\n          \"flags\",\n          \"uint32\",\n          \"itemArray\",\n          Utils.getArrayReader(this.PackMapResourceMapNodeItemV0),\n        ];\n\n        this.__root = this.PackMapResourceMapV0 = [\"nodeArray\", Utils.getArrayReader(this.PackMapResourceMapNodeV0)];\n      },\n    },\n  },\n];\n","const Utils = require(\"../../util/ParserUtils.js\");\n\nmodule.exports = [\n  /// ==================================================\n  /// Chunk: rive, versions: 6, strucTab: 0x1722A90\n  /// ==================================================\n\n  {\n    name: \"rive\",\n    versions: {\n      // => Version: 5, ReferencedFunction: 0xEB50C0\n      5: function () {\n        this.PackMapRiverProperty = [\n          \"type\",\n          \"uint32\",\n          \"val\",\n          Utils.getQWordReader(),\n          \"strVal\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.MapRiverReach = [\"properties\", Utils.getArrayReader(this.PackMapRiverProperty)];\n\n        this.MapRiver = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"name\",\n          Utils.getString16Reader(),\n          \"properties\",\n          Utils.getArrayReader(this.PackMapRiverProperty),\n          \"points\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"reaches\",\n          Utils.getArrayReader(this.MapRiverReach),\n        ];\n\n        this.__root = this.PackMapRivers = [\"rivers\", Utils.getArrayReader(this.MapRiver)];\n      },\n\n      // => Version: 4\n      4: function () {\n        this.MapRiverTextureMap = [\n          \"scale\",\n          \"float32\",\n          \"speedX\",\n          \"float32\",\n          \"speedY\",\n          \"float32\",\n          \"tiling\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"uvIndex\",\n          \"uint8\",\n        ];\n\n        this.MapRiverMaterial = [\n          \"materialFile\",\n          Utils.getFileNameReader(),\n          \"textureFiles\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"constantTokens\",\n          Utils.getArrayReader(\"uint32\"),\n          \"constantValues\",\n          Utils.getArrayReader([\"[]\", \"float32\", 4]),\n          \"textureMaps\",\n          Utils.getArrayReader(this.MapRiverTextureMap),\n          \"flags\",\n          \"uint32\",\n        ];\n\n        this.MapRiverReach = [\n          \"width\",\n          \"float32\",\n          \"curveLength\",\n          \"float32\",\n          \"curvePercent\",\n          \"float32\",\n          \"xTessellation\",\n          \"uint32\",\n          \"yTessellation\",\n          [\"[]\", \"uint32\", 2],\n          \"broadId\",\n          \"uint32\",\n          \"fvf\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"materials\",\n          Utils.getArrayReader(this.MapRiverMaterial),\n          \"reserved\",\n          Utils.getString16Reader(),\n        ];\n\n        this.MapRiver = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"name\",\n          Utils.getString16Reader(),\n          \"xTiling\",\n          \"float32\",\n          \"points\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"reaches\",\n          Utils.getArrayReader(this.MapRiverReach),\n          \"flags\",\n          \"uint32\",\n        ];\n\n        this.PackBroadphaseType = [\"broadphaseData\", Utils.getArrayReader(\"uint8\")];\n\n        this.__root = this.PackMapRivers = [\n          \"flags\",\n          \"uint32\",\n          \"nextBroadId\",\n          \"uint32\",\n          \"rivers\",\n          Utils.getArrayReader(this.MapRiver),\n          \"broadPhase\",\n          this.PackBroadphaseType,\n        ];\n      },\n\n      // => Version: 3\n      3: function () {\n        this.MapRiverTextureMap = [\n          \"scale\",\n          \"float32\",\n          \"speedX\",\n          \"float32\",\n          \"speedY\",\n          \"float32\",\n          \"tiling\",\n          \"float32\",\n          \"uvIndex\",\n          \"uint8\",\n        ];\n\n        this.MapRiverMaterial = [\n          \"materialFile\",\n          Utils.getFileNameReader(),\n          \"textureFiles\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"constantTokens\",\n          Utils.getArrayReader(\"uint32\"),\n          \"constantValues\",\n          Utils.getArrayReader([\"[]\", \"float32\", 4]),\n          \"textureMaps\",\n          Utils.getArrayReader(this.MapRiverTextureMap),\n        ];\n\n        this.MapRiverReach = [\n          \"width\",\n          \"float32\",\n          \"curveLength\",\n          \"float32\",\n          \"curvePercent\",\n          \"float32\",\n          \"xTessellation\",\n          \"uint32\",\n          \"yTessellation\",\n          [\"[]\", \"uint32\", 2],\n          \"broadId\",\n          \"uint32\",\n          \"fvf\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"materials\",\n          Utils.getArrayReader(this.MapRiverMaterial),\n        ];\n\n        this.MapRiver = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"name\",\n          Utils.getString16Reader(),\n          \"xTiling\",\n          \"float32\",\n          \"points\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"reaches\",\n          Utils.getArrayReader(this.MapRiverReach),\n          \"flags\",\n          \"uint32\",\n        ];\n\n        this.PackBroadphaseType = [\"broadphaseData\", Utils.getArrayReader(\"uint8\")];\n\n        this.__root = this.PackMapRivers = [\n          \"flags\",\n          \"uint32\",\n          \"nextBroadId\",\n          \"uint32\",\n          \"rivers\",\n          Utils.getArrayReader(this.MapRiver),\n          \"broadPhase\",\n          this.PackBroadphaseType,\n        ];\n      },\n\n      // => Version: 2\n      2: function () {\n        this.MapRiverTextureMap = [\n          \"scale\",\n          \"float32\",\n          \"speedX\",\n          \"float32\",\n          \"speedY\",\n          \"float32\",\n          \"tiling\",\n          \"float32\",\n          \"uvIndex\",\n          \"uint8\",\n        ];\n\n        this.MapRiverMaterial = [\n          \"materialFile\",\n          Utils.getFileNameReader(),\n          \"textureFiles\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"constantTokens\",\n          Utils.getArrayReader(\"uint32\"),\n          \"constantValues\",\n          Utils.getArrayReader([\"[]\", \"float32\", 4]),\n          \"textureMaps\",\n          Utils.getArrayReader(this.MapRiverTextureMap),\n        ];\n\n        this.MapRiverReach = [\n          \"width\",\n          \"float32\",\n          \"curveLength\",\n          \"float32\",\n          \"curvePercent\",\n          \"float32\",\n          \"xTessellation\",\n          \"uint32\",\n          \"yTessellation\",\n          [\"[]\", \"uint32\", 2],\n          \"broadId\",\n          \"uint32\",\n          \"fvf\",\n          \"uint32\",\n          \"materials\",\n          Utils.getArrayReader(this.MapRiverMaterial),\n        ];\n\n        this.MapRiver = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"name\",\n          Utils.getString16Reader(),\n          \"xTiling\",\n          \"float32\",\n          \"points\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"reaches\",\n          Utils.getArrayReader(this.MapRiverReach),\n        ];\n\n        this.PackBroadphaseType = [\"broadphaseData\", Utils.getArrayReader(\"uint8\")];\n\n        this.__root = this.PackMapRivers = [\n          \"flags\",\n          \"uint32\",\n          \"nextBroadId\",\n          \"uint32\",\n          \"rivers\",\n          Utils.getArrayReader(this.MapRiver),\n          \"broadPhase\",\n          this.PackBroadphaseType,\n        ];\n      },\n\n      // => Version: 1\n      1: function () {\n        this.MapRiverTextureMap = [\n          \"scale\",\n          \"float32\",\n          \"speedX\",\n          \"float32\",\n          \"speedY\",\n          \"float32\",\n          \"tiling\",\n          \"float32\",\n          \"uvIndex\",\n          \"uint8\",\n        ];\n\n        this.MapRiverMaterial = [\n          \"materialFile\",\n          Utils.getFileNameReader(),\n          \"textureFiles\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"constantTokens\",\n          Utils.getArrayReader(\"uint32\"),\n          \"constantValues\",\n          Utils.getArrayReader([\"[]\", \"float32\", 4]),\n          \"textureMaps\",\n          Utils.getArrayReader(this.MapRiverTextureMap),\n        ];\n\n        this.MapRiverReach = [\n          \"width\",\n          \"float32\",\n          \"curveLength\",\n          \"float32\",\n          \"curvePercent\",\n          \"float32\",\n          \"xTessellation\",\n          \"uint32\",\n          \"yTessellation\",\n          [\"[]\", \"uint32\", 2],\n          \"broadId\",\n          \"uint32\",\n          \"materials\",\n          Utils.getArrayReader(this.MapRiverMaterial),\n        ];\n\n        this.MapRiver = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"name\",\n          Utils.getString16Reader(),\n          \"xTiling\",\n          \"float32\",\n          \"points\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"reaches\",\n          Utils.getArrayReader(this.MapRiverReach),\n        ];\n\n        this.PackBroadphaseType = [\"broadphaseData\", Utils.getArrayReader(\"uint8\")];\n\n        this.__root = this.PackMapRivers = [\n          \"flags\",\n          \"uint32\",\n          \"nextBroadId\",\n          \"uint32\",\n          \"rivers\",\n          Utils.getArrayReader(this.MapRiver),\n          \"broadPhase\",\n          this.PackBroadphaseType,\n        ];\n      },\n\n      // => Version: 0\n      0: function () {\n        this.MapRiverTextureMap = [\"scale\", \"float32\", \"speed\", \"float32\", \"tiling\", \"float32\", \"uvIndex\", \"uint8\"];\n\n        this.MapRiverMaterial = [\n          \"materialFile\",\n          Utils.getFileNameReader(),\n          \"textureFiles\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"constantTokens\",\n          Utils.getArrayReader(\"uint32\"),\n          \"constantValues\",\n          Utils.getArrayReader([\"[]\", \"float32\", 4]),\n          \"textureMaps\",\n          Utils.getArrayReader(this.MapRiverTextureMap),\n        ];\n\n        this.MapRiverReach = [\n          \"width\",\n          \"float32\",\n          \"curveLength\",\n          \"float32\",\n          \"curvePercent\",\n          \"float32\",\n          \"xTessellation\",\n          \"uint32\",\n          \"yTessellation\",\n          [\"[]\", \"uint32\", 2],\n          \"broadId\",\n          \"uint32\",\n          \"materials\",\n          Utils.getArrayReader(this.MapRiverMaterial),\n        ];\n\n        this.MapRiver = [\n          \"guid\",\n          Utils.getQWordReader(),\n          \"xTiling\",\n          \"float32\",\n          \"points\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"reaches\",\n          Utils.getArrayReader(this.MapRiverReach),\n        ];\n\n        this.PackBroadphaseType = [\"broadphaseData\", Utils.getArrayReader(\"uint8\")];\n\n        this.__root = this.PackMapRivers = [\n          \"flags\",\n          \"uint32\",\n          \"nextBroadId\",\n          \"uint32\",\n          \"rivers\",\n          Utils.getArrayReader(this.MapRiver),\n          \"broadPhase\",\n          this.PackBroadphaseType,\n        ];\n      },\n    },\n  },\n];\n","const Utils = require(\"../../util/ParserUtils.js\");\n\nmodule.exports = [\n  /// ==================================================\n  /// Chunk: ROOT, versions: 2, strucTab: 0x17731F0\n  /// ==================================================\n\n  {\n    name: \"ROOT\",\n    versions: {\n      // => Version: 1, ReferencedFunction: 0xF290C0\n      1: function () {\n        this.ModelRootMotionV1 = [\n          \"sequence\",\n          Utils.getQWordReader(),\n          \"keys\",\n          Utils.getArrayReader(\"float32\"),\n          \"posValues\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n          \"quatValues\",\n          Utils.getArrayReader([\"[]\", \"float32\", 4]),\n        ];\n\n        this.__root = this.ModelFileRootMotionV1 = [\"rootMotions\", Utils.getArrayReader(this.ModelRootMotionV1)];\n      },\n\n      // => Version: 0\n      0: function () {\n        this.ModelRootMotionV0 = [\n          \"sequence\",\n          Utils.getQWordReader(),\n          \"keys\",\n          Utils.getArrayReader(\"float32\"),\n          \"values\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n        ];\n\n        this.__root = this.ModelFileRootMotionV0 = [\"rootMotions\", Utils.getArrayReader(this.ModelRootMotionV0)];\n      },\n    },\n  },\n];\n","const Utils = require(\"../../util/ParserUtils.js\");\n\nmodule.exports = [\n  /// ==================================================\n  /// Chunk: seqn, versions: 1, strucTab: 0x1884454\n  /// ==================================================\n\n  {\n    name: \"seqn\",\n    versions: {\n      // => Version: 0\n      0: function () {\n        this.PackAnimSequenceChargeStageV0 = [\"duration\", \"uint16\", \"endingChargeLevel\", \"uint8\"];\n\n        this.PackAnimSequenceStepActionV0 = [\"duration\", \"uint32\"];\n\n        this.PackAnimSequenceStepMoveV0 = [\n          \"duration\",\n          \"uint32\",\n          \"moveRotation\",\n          [\"[]\", \"float32\", 4],\n          \"facingRotation\",\n          [\"[]\", \"float32\", 4],\n          \"velocity\",\n          [\"[]\", \"float32\", 2],\n        ];\n\n        this.PackAnimSequenceStepV0 = [\n          \"type\",\n          \"uint8\",\n          \"animationSpeed\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"action\",\n          Utils.getPointerReader(this.PackAnimSequenceStepActionV0),\n          \"move\",\n          Utils.getPointerReader(this.PackAnimSequenceStepMoveV0),\n        ];\n\n        this.PackAnimSequenceTriggerV0 = [\"trigger\", \"uint8\", \"time\", \"uint32\", \"flags\", \"uint32\"];\n\n        this.PackAnimSequenceDataV0 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint32\",\n          \"blendInTime\",\n          \"float32\",\n          \"blendOutTime\",\n          \"float32\",\n          \"chargeStages\",\n          Utils.getArrayReader(this.PackAnimSequenceChargeStageV0),\n          \"steps\",\n          Utils.getArrayReader(this.PackAnimSequenceStepV0),\n          \"triggers\",\n          Utils.getArrayReader(this.PackAnimSequenceTriggerV0),\n        ];\n\n        this.PackAnimSequenceV0 = [\n          \"sequence\",\n          Utils.getQWordReader(),\n          \"animationData\",\n          Utils.getArrayReader(this.PackAnimSequenceDataV0),\n        ];\n\n        this.__root = this.PackAnimSequencesV0 = [\"sequences\", Utils.getArrayReader(this.PackAnimSequenceV0)];\n      },\n    },\n  },\n];\n","const Utils = require(\"../../util/ParserUtils.js\");\n\nmodule.exports = [\n  /// ==================================================\n  /// Chunk: shad, versions: 2, strucTab: 0x1722DB8\n  /// ==================================================\n\n  {\n    name: \"shad\",\n    versions: {\n      // => Version: 1, ReferencedFunction: 0xEBB230\n      1: function () {\n        this.PackMapShadowTileV1 = [\"compressionMode\", \"uint32\", \"bytes\", Utils.getArrayReader(\"uint8\")];\n\n        this.__root = this.PackMapShadowV1 = [\n          \"shadowDims\",\n          [\"[]\", \"uint32\", 2],\n          \"tileDims\",\n          [\"[]\", \"uint32\", 2],\n          \"tiles\",\n          Utils.getArrayReader(this.PackMapShadowTileV1),\n          \"worldToShadow\",\n          [\"[]\", \"float32\", 16],\n          \"s\",\n          [\"[]\", \"float32\", 2],\n          \"t\",\n          [\"[]\", \"float32\", 2],\n          \"u\",\n          [\"[]\", \"float32\", 2],\n          \"shadowEye\",\n          [\"[]\", \"float32\", 3],\n          \"shadowDir\",\n          [\"[]\", \"float32\", 3],\n          \"shadowUp\",\n          [\"[]\", \"float32\", 3],\n        ];\n      },\n\n      // => Version: 0\n      0: function () {\n        this.PackMapShadowTileV0 = [\"compressionMode\", \"uint32\", \"bytes\", Utils.getArrayReader(\"uint8\")];\n\n        this.__root = this.PackMapShadowV0 = [\n          \"shadowDims\",\n          [\"[]\", \"uint32\", 2],\n          \"tileDims\",\n          [\"[]\", \"uint32\", 2],\n          \"tiles\",\n          Utils.getArrayReader(this.PackMapShadowTileV0),\n          \"worldToShadow\",\n          [\"[]\", \"float32\", 16],\n          \"s\",\n          [\"[]\", \"float32\", 2],\n          \"t\",\n          [\"[]\", \"float32\", 2],\n          \"u\",\n          [\"[]\", \"float32\", 2],\n        ];\n      },\n    },\n  },\n];\n","const Utils = require(\"../../util/ParserUtils.js\");\n\nmodule.exports = [\n  /// ==================================================\n  /// Chunk: shex, versions: 2, strucTab: 0x1722DD0\n  /// ==================================================\n\n  {\n    name: \"shex\",\n    versions: {\n      // => Version: 1\n      1: function () {\n        this.__root = this.PackMapShadowExtV1 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"shadowDims\",\n          [\"[]\", \"uint32\", 2],\n        ];\n      },\n    },\n  },\n];\n","const Utils = require(\"../../util/ParserUtils.js\");\n\nmodule.exports = [\n  /// ==================================================\n  /// Chunk: shor, versions: 4, strucTab: 0x1722DE8\n  /// ==================================================\n\n  {\n    name: \"shor\",\n    versions: {\n      // => Version: 3, ReferencedFunction: 0xEBB250\n      3: function () {\n        this.MapShoreChain = [\n          \"offset\",\n          \"float32\",\n          \"opacity\",\n          \"float32\",\n          \"animationSpeed\",\n          \"float32\",\n          \"edgeSize\",\n          [\"[]\", \"float32\", 2],\n          \"flags\",\n          \"uint32\",\n          \"points\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n          \"materialFilename\",\n          Utils.getFileNameReader(),\n          \"textureFilenames\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"restTime\",\n          \"float32\",\n          \"fadeRanges\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"simplifyDistMin\",\n          \"float32\",\n          \"simplifyDistMax\",\n          \"float32\",\n          \"simplifyDot\",\n          \"float32\",\n        ];\n\n        this.__root = this.MapShore = [\"chains\", Utils.getArrayReader(this.MapShoreChain)];\n      },\n\n      // => Version: 2\n      2: function () {\n        this.MapShoreChain = [\n          \"offset\",\n          \"float32\",\n          \"opacity\",\n          \"float32\",\n          \"animationSpeed\",\n          \"float32\",\n          \"edgeSize\",\n          [\"[]\", \"float32\", 2],\n          \"flags\",\n          \"uint32\",\n          \"points\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n          \"materialFilename\",\n          Utils.getFileNameReader(),\n          \"textureFilenames\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n          \"restTime\",\n          \"float32\",\n          \"fadeRanges\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n        ];\n\n        this.__root = this.MapShore = [\"chains\", Utils.getArrayReader(this.MapShoreChain)];\n      },\n    },\n  },\n];\n","const Utils = require(\"../../util/ParserUtils.js\");\n\nmodule.exports = [\n  /// ==================================================\n  /// Chunk: SKEL, versions: 2, strucTab: 0x1773254\n  /// ==================================================\n\n  {\n    name: \"SKEL\",\n    versions: {\n      // => Version: 1, ReferencedFunction: 0xF29110\n      1: function () {\n        this.ModelTransformData = [\n          \"Flags\",\n          \"uint32\",\n          \"Position\",\n          [\"[]\", \"float32\", 3],\n          \"Orientation\",\n          [\"[]\", \"float32\", 4],\n          \"ScaleShear\",\n          [\"[]\", [\"[]\", \"float32\", 3], 3],\n        ];\n\n        this.ModelBoneData = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"ParentIndex\",\n          \"uint32\",\n          \"LocalTransform\",\n          this.ModelTransformData,\n          \"InverseWorld4x4\",\n          [\"[]\", [\"[]\", \"float32\", 4], 4],\n          \"LODError\",\n          \"float32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n        ];\n\n        this.ModelGrannySkeletonV1 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Bones\",\n          Utils.getArrayReader(this.ModelBoneData),\n          \"LODType\",\n          \"uint32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n        ];\n\n        this.ModelMeshBindingData = [\"Mesh\", Utils.getPointerReader(\"uint8\")];\n\n        this.ModelGrannyModelV1 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Skeleton\",\n          Utils.getPointerReader(this.ModelGrannySkeletonV1),\n          \"InitialPlacement\",\n          this.ModelTransformData,\n          \"MeshBindings\",\n          Utils.getArrayReader(this.ModelMeshBindingData),\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n        ];\n\n        this.ModelBoneConstraintLinkV63 = [\n          \"angle\",\n          \"float32\",\n          \"azimuth\",\n          \"float32\",\n          \"distance\",\n          [\"[]\", \"float32\", 2],\n          \"token\",\n          Utils.getQWordReader(),\n        ];\n\n        this.ModelBoneConstraintV63 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint16\",\n          \"twistOffset\",\n          \"float32\",\n          \"animBlend\",\n          \"float32\",\n          \"drag\",\n          \"float32\",\n          \"ellipseRatio\",\n          \"float32\",\n          \"gravity\",\n          \"float32\",\n          \"collisionRadius\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n          \"angle\",\n          [\"[]\", \"float32\", 2],\n          \"angleStrength\",\n          \"float32\",\n          \"angleType\",\n          \"uint8\",\n          \"distanceInner\",\n          [\"[]\", \"float32\", 2],\n          \"distanceInnerStrength\",\n          \"float32\",\n          \"distanceInnerType\",\n          \"uint8\",\n          \"links\",\n          Utils.getArrayReader(this.ModelBoneConstraintLinkV63),\n          \"distanceOuter\",\n          [\"[]\", \"float32\", 2],\n          \"distanceOuterStrength\",\n          \"float32\",\n          \"distanceOuterType\",\n          \"uint8\",\n          \"twist\",\n          [\"[]\", \"float32\", 2],\n          \"twistStrength\",\n          \"float32\",\n          \"twistType\",\n          \"uint8\",\n        ];\n\n        this.PackGrannyMirrorSpecType = [\"mirrorSpec\", Utils.getArrayReader(\"uint8\")];\n\n        this.PackGrannyTrackMaskType = [\"trackMask\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelTrackMaskV63 = [\"data\", this.PackGrannyTrackMaskType, \"token\", Utils.getQWordReader()];\n\n        this.ModelSkeletonDataV63 = [\n          \"grannyModel\",\n          Utils.getPointerReader(this.ModelGrannyModelV1),\n          \"boneConstraints\",\n          Utils.getArrayReader(this.ModelBoneConstraintV63),\n          \"boneFlags\",\n          Utils.getArrayReader(\"uint32\"),\n          \"mirrorSpec\",\n          this.PackGrannyMirrorSpecType,\n          \"emitterBones\",\n          Utils.getArrayReader(\"uint32\"),\n          \"trackMasks\",\n          Utils.getArrayReader(this.ModelTrackMaskV63),\n        ];\n\n        this.ModelSkeletonOverridesV1 = [\"boneConstraints\", Utils.getArrayReader(this.ModelBoneConstraintV63)];\n\n        this.__root = this.ModelFileSkeletonV1 = [\n          \"skeletonData\",\n          Utils.getPointerReader(this.ModelSkeletonDataV63),\n          \"fileReference\",\n          Utils.getFileNameReader(),\n          \"overrides\",\n          Utils.getPointerReader(this.ModelSkeletonOverridesV1),\n        ];\n      },\n\n      // => Version: 0\n      0: function () {\n        this.ModelTransformData = [\n          \"Flags\",\n          \"uint32\",\n          \"Position\",\n          [\"[]\", \"float32\", 3],\n          \"Orientation\",\n          [\"[]\", \"float32\", 4],\n          \"ScaleShear\",\n          [\"[]\", [\"[]\", \"float32\", 3], 3],\n        ];\n\n        this.ModelBoneData = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"ParentIndex\",\n          \"uint32\",\n          \"LocalTransform\",\n          this.ModelTransformData,\n          \"InverseWorld4x4\",\n          [\"[]\", [\"[]\", \"float32\", 4], 4],\n          \"LODError\",\n          \"float32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n        ];\n\n        this.ModelGrannySkeletonV0 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Bones\",\n          Utils.getArrayReader(this.ModelBoneData),\n          \"LODType\",\n          \"uint32\",\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n        ];\n\n        this.ModelMeshBindingData = [\"Mesh\", Utils.getPointerReader(\"uint8\")];\n\n        this.ModelGrannyModelV0 = [\n          \"Name\",\n          Utils.getStringReader(),\n          \"Skeleton\",\n          Utils.getPointerReader(this.ModelGrannySkeletonV0),\n          \"InitialPlacement\",\n          this.ModelTransformData,\n          \"MeshBindings\",\n          Utils.getArrayReader(this.ModelMeshBindingData),\n          \"ExtendedData.Type\",\n          Utils.getPointerReader(\"uint8\"),\n          \"ExtendedData.Object\",\n          Utils.getPointerReader(\"uint8\"),\n        ];\n\n        this.ModelBoneConstraintLinkV62 = [\n          \"angle\",\n          \"float32\",\n          \"azimuth\",\n          \"float32\",\n          \"distance\",\n          [\"[]\", \"float32\", 2],\n          \"token\",\n          Utils.getQWordReader(),\n        ];\n\n        this.ModelBoneConstraintV62 = [\n          \"token\",\n          Utils.getQWordReader(),\n          \"flags\",\n          \"uint16\",\n          \"twistOffset\",\n          \"float32\",\n          \"animBlend\",\n          \"float32\",\n          \"drag\",\n          \"float32\",\n          \"ellipseRatio\",\n          \"float32\",\n          \"gravity\",\n          \"float32\",\n          \"collisionRadius\",\n          \"float32\",\n          \"wind\",\n          \"float32\",\n          \"angle\",\n          [\"[]\", \"float32\", 2],\n          \"angleStrength\",\n          \"float32\",\n          \"angleType\",\n          \"uint8\",\n          \"distanceInner\",\n          [\"[]\", \"float32\", 2],\n          \"distanceInnerStrength\",\n          \"float32\",\n          \"distanceInnerType\",\n          \"uint8\",\n          \"links\",\n          Utils.getArrayReader(this.ModelBoneConstraintLinkV62),\n          \"distanceOuter\",\n          [\"[]\", \"float32\", 2],\n          \"distanceOuterStrength\",\n          \"float32\",\n          \"distanceOuterType\",\n          \"uint8\",\n          \"twist\",\n          [\"[]\", \"float32\", 2],\n          \"twistStrength\",\n          \"float32\",\n          \"twistType\",\n          \"uint8\",\n        ];\n\n        this.ModelBoneSymmetryV62 = [\"boneLeft\", Utils.getQWordReader(), \"boneRight\", Utils.getQWordReader()];\n\n        this.PackGrannyTrackMaskType = [\"trackMask\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelTrackMaskV62 = [\"data\", this.PackGrannyTrackMaskType, \"token\", Utils.getQWordReader()];\n\n        this.ModelSkeletonDataV62 = [\n          \"grannyModel\",\n          Utils.getPointerReader(this.ModelGrannyModelV0),\n          \"boneConstraints\",\n          Utils.getArrayReader(this.ModelBoneConstraintV62),\n          \"boneFlags\",\n          Utils.getArrayReader(\"uint32\"),\n          \"boneSymmetries\",\n          Utils.getArrayReader(this.ModelBoneSymmetryV62),\n          \"emitterBones\",\n          Utils.getArrayReader(\"uint32\"),\n          \"trackMasks\",\n          Utils.getArrayReader(this.ModelTrackMaskV62),\n        ];\n\n        this.__root = this.ModelFileSkeletonV0 = [\n          \"skeletonData\",\n          Utils.getPointerReader(this.ModelSkeletonDataV62),\n          \"fileReference\",\n          Utils.getFileNameReader(),\n        ];\n      },\n    },\n  },\n\n  /// ==================================================\n  /// Chunk: SKEL, versions: 4, strucTab: 0x183055C\n  /// ==================================================\n\n  {\n    name: \"SKEL\",\n    versions: {\n      // => Version: 3\n      3: function () {\n        this.SceneBoneV3 = [\n          \"vertexA\",\n          [\"[]\", \"float32\", 3],\n          \"vertexB\",\n          [\"[]\", \"float32\", 3],\n          \"radius\",\n          \"float32\",\n          \"mass\",\n          \"float32\",\n          \"name\",\n          Utils.getQWordReader(),\n        ];\n\n        this.SceneJointV3 = [\n          \"bones\",\n          [\"[]\", \"uint32\", 2],\n          \"pivots\",\n          [\"[]\", [\"[]\", \"float32\", 3], 2],\n          \"twists\",\n          [\"[]\", [\"[]\", \"float32\", 3], 2],\n          \"planes\",\n          [\"[]\", [\"[]\", \"float32\", 3], 2],\n          \"coneLimit\",\n          \"float32\",\n          \"planeMin\",\n          \"float32\",\n          \"planeMax\",\n          \"float32\",\n          \"twistMin\",\n          \"float32\",\n          \"twistMax\",\n          \"float32\",\n        ];\n\n        this.SceneHingeJointV3 = [\n          \"bones\",\n          [\"[]\", \"uint32\", 2],\n          \"pivots\",\n          [\"[]\", [\"[]\", \"float32\", 3], 2],\n          \"hinges\",\n          [\"[]\", [\"[]\", \"float32\", 3], 2],\n          \"normals\",\n          [\"[]\", [\"[]\", \"float32\", 3], 2],\n          \"limitMin\",\n          \"float32\",\n          \"limitMax\",\n          \"float32\",\n        ];\n\n        this.__root = this.SceneFileSkeletonV3 = [\n          \"bones\",\n          Utils.getArrayReader(this.SceneBoneV3),\n          \"joints\",\n          Utils.getArrayReader(this.SceneJointV3),\n          \"hingeJoints\",\n          Utils.getArrayReader(this.SceneHingeJointV3),\n          \"ragdollToModel\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n      },\n\n      // => Version: 2\n      2: function () {\n        this.SceneBoneV2 = [\n          \"vertexA\",\n          [\"[]\", \"float32\", 3],\n          \"vertexB\",\n          [\"[]\", \"float32\", 3],\n          \"radius\",\n          \"float32\",\n          \"mass\",\n          \"float32\",\n        ];\n\n        this.SceneJointV2 = [\n          \"bones\",\n          [\"[]\", \"uint32\", 2],\n          \"pivots\",\n          [\"[]\", [\"[]\", \"float32\", 3], 2],\n          \"twists\",\n          [\"[]\", [\"[]\", \"float32\", 3], 2],\n          \"planes\",\n          [\"[]\", [\"[]\", \"float32\", 3], 2],\n          \"coneLimit\",\n          \"float32\",\n          \"planeMin\",\n          \"float32\",\n          \"planeMax\",\n          \"float32\",\n          \"twistMin\",\n          \"float32\",\n          \"twistMax\",\n          \"float32\",\n        ];\n\n        this.SceneHingeJointV2 = [\n          \"bones\",\n          [\"[]\", \"uint32\", 2],\n          \"pivots\",\n          [\"[]\", [\"[]\", \"float32\", 3], 2],\n          \"hinges\",\n          [\"[]\", [\"[]\", \"float32\", 3], 2],\n          \"normals\",\n          [\"[]\", [\"[]\", \"float32\", 3], 2],\n          \"limitMin\",\n          \"float32\",\n          \"limitMax\",\n          \"float32\",\n        ];\n\n        this.__root = this.SceneFileSkeletonV2 = [\n          \"bones\",\n          Utils.getArrayReader(this.SceneBoneV2),\n          \"joints\",\n          Utils.getArrayReader(this.SceneJointV2),\n          \"hingeJoints\",\n          Utils.getArrayReader(this.SceneHingeJointV2),\n          \"ragdollToModel\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n      },\n\n      // => Version: 1\n      1: function () {\n        this.SceneBoneV1 = [\n          \"vertexA\",\n          [\"[]\", \"float32\", 3],\n          \"vertexB\",\n          [\"[]\", \"float32\", 3],\n          \"radius\",\n          \"float32\",\n          \"mass\",\n          \"float32\",\n        ];\n\n        this.SceneJointV1 = [\n          \"bones\",\n          [\"[]\", \"uint32\", 2],\n          \"pivots\",\n          [\"[]\", [\"[]\", \"float32\", 3], 2],\n          \"twists\",\n          [\"[]\", [\"[]\", \"float32\", 3], 2],\n          \"planes\",\n          [\"[]\", [\"[]\", \"float32\", 3], 2],\n          \"coneLimit\",\n          \"float32\",\n          \"planeMin\",\n          \"float32\",\n          \"planeMax\",\n          \"float32\",\n          \"twistMin\",\n          \"float32\",\n          \"twistMax\",\n          \"float32\",\n        ];\n\n        this.SceneHingeJointV1 = [\n          \"bones\",\n          [\"[]\", \"uint32\", 2],\n          \"pivots\",\n          [\"[]\", [\"[]\", \"float32\", 3], 2],\n          \"hinges\",\n          [\"[]\", [\"[]\", \"float32\", 3], 2],\n          \"normals\",\n          [\"[]\", [\"[]\", \"float32\", 3], 2],\n          \"limitMin\",\n          \"float32\",\n          \"limitMax\",\n          \"float32\",\n        ];\n\n        this.SceneUnmappedBoneV1 = [\n          \"modelBoneIndex\",\n          \"uint32\",\n          \"sceneBoneIndex\",\n          \"uint32\",\n          \"localPose\",\n          [\"[]\", [\"[]\", \"float32\", 4], 3],\n        ];\n\n        this.__root = this.SceneFileSkeletonV1 = [\n          \"bones\",\n          Utils.getArrayReader(this.SceneBoneV1),\n          \"joints\",\n          Utils.getArrayReader(this.SceneJointV1),\n          \"hingeJoints\",\n          Utils.getArrayReader(this.SceneHingeJointV1),\n          \"unmappedBones\",\n          Utils.getArrayReader(this.SceneUnmappedBoneV1),\n          \"ragdollToModel\",\n          Utils.getArrayReader(\"uint32\"),\n          \"modelToRagdoll\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n      },\n\n      // => Version: 0\n      0: function () {\n        this.SceneBoneV0 = [\n          \"vertexA\",\n          [\"[]\", \"float32\", 3],\n          \"vertexB\",\n          [\"[]\", \"float32\", 3],\n          \"radius\",\n          \"float32\",\n          \"mass\",\n          \"float32\",\n        ];\n\n        this.SceneJointV0 = [\n          \"bones\",\n          [\"[]\", \"uint32\", 2],\n          \"pivots\",\n          [\"[]\", [\"[]\", \"float32\", 3], 2],\n          \"twists\",\n          [\"[]\", [\"[]\", \"float32\", 3], 2],\n          \"planes\",\n          [\"[]\", [\"[]\", \"float32\", 3], 2],\n          \"coneLimit\",\n          \"float32\",\n          \"planeMin\",\n          \"float32\",\n          \"planeMax\",\n          \"float32\",\n          \"twistMin\",\n          \"float32\",\n          \"twistMax\",\n          \"float32\",\n        ];\n\n        this.SceneUnmappedBoneV0 = [\n          \"modelBoneIndex\",\n          \"uint32\",\n          \"sceneBoneIndex\",\n          \"uint32\",\n          \"localPose\",\n          [\"[]\", [\"[]\", \"float32\", 4], 3],\n        ];\n\n        this.__root = this.SceneFileSkeletonV0 = [\n          \"bones\",\n          Utils.getArrayReader(this.SceneBoneV0),\n          \"joints\",\n          Utils.getArrayReader(this.SceneJointV0),\n          \"unmappedBones\",\n          Utils.getArrayReader(this.SceneUnmappedBoneV0),\n          \"ragdollToModel\",\n          Utils.getArrayReader(\"uint32\"),\n          \"modelToRagdoll\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n      },\n    },\n  },\n];\n","const Utils = require(\"../../util/ParserUtils.js\");\n\nmodule.exports = [\n  /// ==================================================\n  /// Chunk: snd, versions: 1, strucTab: 0x1721AA4\n  /// ==================================================\n\n  {\n    name: \"snd\",\n    versions: {\n      // => Version: 0\n      0: function () {\n        this.__root = this.MapLegacy = [\n          \"data\",\n          Utils.getArrayReader(\"uint8\"),\n          \"files\",\n          Utils.getArrayReader(Utils.getFileNameReader()),\n        ];\n      },\n    },\n  },\n];\n","const Utils = require(\"../../util/ParserUtils.js\");\n\nmodule.exports = [\n  /// ==================================================\n  /// Chunk: SPPA, versions: 1, strucTab: 0x1528BF4\n  /// ==================================================\n\n  {\n    name: \"SPPA\",\n    versions: {\n      // => Version: 0\n      0: function () {\n        this.AmatAppleShaderConstant = [\"token\", \"uint32\", \"regIndex\", \"uint32\", \"regCount\", \"uint32\"];\n\n        this.__root = this.AmatAppleShader = [\n          \"isPixelShader\",\n          \"uint32\",\n          \"cachedData\",\n          Utils.getArrayReader(\"uint8\"),\n          \"physicalData\",\n          Utils.getArrayReader(\"uint8\"),\n          \"constants\",\n          Utils.getArrayReader(this.AmatAppleShaderConstant),\n          \"samplers\",\n          Utils.getArrayReader(this.AmatAppleShaderConstant),\n        ];\n      },\n    },\n  },\n];\n","const Utils = require(\"../../util/ParserUtils.js\");\n\nmodule.exports = [\n  /// ==================================================\n  /// Chunk: surf, versions: 3, strucTab: 0x1722F58\n  /// ==================================================\n\n  {\n    name: \"surf\",\n    versions: {\n      // => Version: 2\n      2: function () {\n        this.MapSurfaceAttribute = [\"Id\", Utils.getQWordReader(), \"Sound\", Utils.getQWordReader(), \"flags\", \"uint32\"];\n\n        this.MapSurfaceAttributeTool = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"category\",\n          Utils.getString16Reader(),\n          \"color\",\n          [\"[]\", \"uint8\", 4],\n        ];\n\n        this.MapSurfaceOverride = [\"surfaceId\", Utils.getQWordReader(), \"bitArray\", Utils.getArrayReader(\"uint32\")];\n\n        this.MapSurfaceTerrainOverride = [\n          \"chunkCoord\",\n          [\"[]\", \"uint32\", 2],\n          \"overrideArray\",\n          Utils.getArrayReader(this.MapSurfaceOverride),\n        ];\n\n        this.MapSurfacePropOverride = [\n          \"propId\",\n          Utils.getQWordReader(),\n          \"overrideArray\",\n          Utils.getArrayReader(this.MapSurfaceOverride),\n        ];\n\n        this.__root = this.MapSurfaces = [\n          \"attributeData\",\n          Utils.getArrayReader(this.MapSurfaceAttribute),\n          \"toolData\",\n          Utils.getArrayReader(this.MapSurfaceAttributeTool),\n          \"terrainArray\",\n          Utils.getArrayReader(this.MapSurfaceTerrainOverride),\n          \"propArray\",\n          Utils.getArrayReader(this.MapSurfacePropOverride),\n        ];\n      },\n\n      // => Version: 1\n      1: function () {\n        this.MapSurfaceAttribute = [\"Id\", Utils.getQWordReader(), \"Sound\", Utils.getQWordReader(), \"flags\", \"uint32\"];\n\n        this.MapSurfaceAttributeTool = [\n          \"name\",\n          Utils.getString16Reader(),\n          \"category\",\n          Utils.getString16Reader(),\n          \"color\",\n          [\"[]\", \"uint8\", 4],\n        ];\n\n        this.__root = this.MapSurfaces = [\n          \"attributeData\",\n          Utils.getArrayReader(this.MapSurfaceAttribute),\n          \"toolData\",\n          Utils.getArrayReader(this.MapSurfaceAttributeTool),\n        ];\n      },\n\n      // => Version: 0\n      0: function () {\n        this.MapSurfaceMeta = [\"index\", \"uint16\", \"descriptor\", \"uint8\", \"data\", \"uint8\"];\n\n        this.MapSurfaceChunk = [\n          \"coord\",\n          [\"[]\", \"uint32\", 3],\n          \"metadata\",\n          Utils.getArrayReader(this.MapSurfaceMeta),\n          \"typeData\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.__root = this.MapSurfaces = [\n          \"chunkData\",\n          Utils.getArrayReader(this.MapSurfaceChunk),\n          \"typeData\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n      },\n    },\n  },\n];\n","const Utils = require(\"../../util/ParserUtils.js\");\n\nmodule.exports = [\n  /// ==================================================\n  /// Chunk: TKAC, versions: 1, strucTab: 0x1835188\n  /// ==================================================\n\n  {\n    name: \"TKAC\",\n    versions: {\n      // => Version: 0\n      0: function () {\n        this.KeyEntry = [\"assetType\", \"uint32\", \"assetId\", \"uint32\", \"key\", Utils.getQWordReader()];\n\n        this.__root = this.KeyTableData = [\"keyEntryArr\", Utils.getArrayReader(this.KeyEntry)];\n      },\n    },\n  },\n];\n","const Utils = require(\"../../util/ParserUtils.js\");\n\nmodule.exports = [\n  /// ==================================================\n  /// Chunk: tlfs, versions: 1, strucTab: 0x1721550\n  /// ==================================================\n\n  {\n    name: \"tlfs\",\n    versions: {\n      // => Version: 0\n      0: function () {\n        this.PackMapToolFsFileV0 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"time\",\n          Utils.getQWordReader(),\n          \"dataPtr\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.__root = this.PackMapToolFsV0 = [\"filePtr\", Utils.getArrayReader(this.PackMapToolFsFileV0)];\n      },\n    },\n  },\n];\n","const Utils = require(\"../../util/ParserUtils.js\");\n\nmodule.exports = [\n  /// ==================================================\n  /// Chunk: TOOL, versions: 4, strucTab: 0x1528B70\n  /// ==================================================\n\n  {\n    name: \"TOOL\",\n    versions: {\n      // => Version: 3, ReferencedFunction: 0x5AEBF0\n      3: function () {\n        this.AmatToolConstant = [\n          \"token\",\n          \"uint32\",\n          \"displayName\",\n          Utils.getString16Reader(),\n          \"defaultValue\",\n          [\"[]\", \"float32\", 4],\n          \"flags\",\n          \"uint32\",\n          \"minValue\",\n          [\"[]\", \"float32\", 4],\n          \"maxValue\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.AmatToolTexture = [\n          \"texName\",\n          Utils.getString16Reader(),\n          \"texDefaultFile\",\n          Utils.getString16Reader(),\n          \"flags\",\n          \"uint32\",\n          \"texGen\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n\n        this.__root = this.AmatToolParams = [\n          \"description\",\n          Utils.getString16Reader(),\n          \"flags\",\n          \"uint32\",\n          \"texCoordCount\",\n          \"uint8\",\n          \"texTransformCount\",\n          \"uint8\",\n          \"decompressedTextCount\",\n          \"uint32\",\n          \"compressedText\",\n          Utils.getArrayReader(\"uint8\"),\n          \"constants\",\n          Utils.getArrayReader(this.AmatToolConstant),\n          \"textures\",\n          Utils.getArrayReader(this.AmatToolTexture),\n        ];\n      },\n\n      // => Version: 2, ReferencedFunction: 0x5AEB70\n      2: function () {\n        this.AmatToolConstant = [\n          \"token\",\n          \"uint32\",\n          \"displayName\",\n          Utils.getString16Reader(),\n          \"defaultValue\",\n          [\"[]\", \"float32\", 4],\n          \"flags\",\n          \"uint32\",\n          \"minValue\",\n          [\"[]\", \"float32\", 4],\n          \"maxValue\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.AmatToolTexture = [\n          \"texName\",\n          Utils.getString16Reader(),\n          \"texDefaultFile\",\n          Utils.getString16Reader(),\n          \"flags\",\n          \"uint32\",\n          \"texGen\",\n          Utils.getArrayReader(\"uint32\"),\n          \"texTransform\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n\n        this.__root = this.AmatToolParams = [\n          \"description\",\n          Utils.getString16Reader(),\n          \"flags\",\n          \"uint32\",\n          \"text\",\n          Utils.getStringReader(),\n          \"texCoordCount\",\n          \"uint8\",\n          \"texTransformCount\",\n          \"uint8\",\n          \"constants\",\n          Utils.getArrayReader(this.AmatToolConstant),\n          \"textures\",\n          Utils.getArrayReader(this.AmatToolTexture),\n        ];\n      },\n\n      // => Version: 1, ReferencedFunction: 0x5AEB10\n      1: function () {\n        this.AmatToolConstantV1 = [\n          \"token\",\n          \"uint32\",\n          \"displayName\",\n          Utils.getString16Reader(),\n          \"defaultValue\",\n          [\"[]\", \"float32\", 4],\n          \"flags\",\n          \"uint32\",\n          \"minValue\",\n          [\"[]\", \"float32\", 4],\n          \"maxValue\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.AmatToolTextureV1 = [\n          \"texName\",\n          Utils.getString16Reader(),\n          \"texDefaultFile\",\n          Utils.getString16Reader(),\n          \"flags\",\n          \"uint32\",\n          \"texGen\",\n          Utils.getArrayReader(\"uint32\"),\n          \"texTransform\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n\n        this.__root = this.AmatToolParamsV1 = [\n          \"description\",\n          Utils.getString16Reader(),\n          \"flags\",\n          \"uint32\",\n          \"text\",\n          Utils.getStringReader(),\n          \"texCoordCount\",\n          \"uint8\",\n          \"texTransformCount\",\n          \"uint8\",\n          \"constants\",\n          Utils.getArrayReader(this.AmatToolConstantV1),\n          \"textures\",\n          Utils.getArrayReader(this.AmatToolTextureV1),\n        ];\n      },\n\n      // => Version: 0\n      0: function () {\n        this.AmatToolConstantV0 = [\n          \"token\",\n          \"uint32\",\n          \"displayName\",\n          Utils.getString16Reader(),\n          \"defaultValue\",\n          [\"[]\", \"float32\", 4],\n          \"flags\",\n          \"uint32\",\n          \"minValue\",\n          [\"[]\", \"float32\", 4],\n          \"maxValue\",\n          [\"[]\", \"float32\", 4],\n        ];\n\n        this.AmatToolTextureV0 = [\n          \"texName\",\n          Utils.getString16Reader(),\n          \"texDefaultFile\",\n          Utils.getString16Reader(),\n          \"flags\",\n          \"uint32\",\n          \"texGen\",\n          Utils.getArrayReader(\"uint32\"),\n          \"texTransform\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n\n        this.__root = this.AmatToolParamsV0 = [\n          \"description\",\n          Utils.getString16Reader(),\n          \"flags\",\n          \"uint32\",\n          \"text\",\n          Utils.getStringReader(),\n          \"texCoordCount\",\n          \"uint8\",\n          \"texTransformCount\",\n          \"uint8\",\n          \"constants\",\n          Utils.getArrayReader(this.AmatToolConstantV0),\n          \"textures\",\n          Utils.getArrayReader(this.AmatToolTextureV0),\n        ];\n      },\n    },\n  },\n\n  /// ==================================================\n  /// Chunk: TOOL, versions: 17, strucTab: 0x17730D8\n  /// ==================================================\n\n  {\n    name: \"TOOL\",\n    versions: {\n      // => Version: 16, ReferencedFunction: 0xF29440\n      16: function () {\n        this.ModelToolCloudV16 = [\n          \"cloudNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"emitterNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n        ];\n\n        this.ModelToolBlitTextureV16 = [\"blitId\", Utils.getQWordReader(), \"filename\", Utils.getFileNameReader()];\n\n        this.ModelToolStreakV16 = [\n          \"streakNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"anchorNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n        ];\n\n        this.ModelToolLightningV16 = [\n          \"systemNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"boltNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"nodeNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n        ];\n\n        this.PackGrannyAnimationTypeV1 = [\n          \"animation\",\n          Utils.getArrayReader(\"uint8\"),\n          \"pointers\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n\n        this.ModelToolAnimationV16 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"filename\",\n          Utils.getString16Reader(),\n          \"data\",\n          this.PackGrannyAnimationTypeV1,\n        ];\n\n        this.ModelSequenceCompressionInfoV16 = [\n          \"animToken\",\n          Utils.getQWordReader(),\n          \"cmpGroup\",\n          Utils.getString16Reader(),\n          \"cmpType\",\n          Utils.getString16Reader(),\n        ];\n\n        this.__root = this.ModelFileToolV16 = [\n          \"modelType\",\n          Utils.getQWordReader(),\n          \"materialNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"obstacleNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"cloudData\",\n          Utils.getPointerReader(this.ModelToolCloudV16),\n          \"blitTextures\",\n          Utils.getArrayReader(this.ModelToolBlitTextureV16),\n          \"streakData\",\n          Utils.getPointerReader(this.ModelToolStreakV16),\n          \"lightningData\",\n          Utils.getPointerReader(this.ModelToolLightningV16),\n          \"permutationTokens\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"highLodAnimations\",\n          Utils.getArrayReader(this.ModelToolAnimationV16),\n          \"compressionInfos\",\n          Utils.getArrayReader(this.ModelSequenceCompressionInfoV16),\n          \"region\",\n          Utils.getStringReader(),\n        ];\n      },\n\n      // => Version: 15\n      15: function () {\n        this.ModelToolCloudV15 = [\n          \"cloudNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"emitterNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n        ];\n\n        this.ModelToolBlitTextureV15 = [\"blitId\", Utils.getQWordReader(), \"filename\", Utils.getFileNameReader()];\n\n        this.ModelToolStreakV15 = [\n          \"streakNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"anchorNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n        ];\n\n        this.ModelToolLightningV15 = [\n          \"systemNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"boltNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"nodeNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n        ];\n\n        this.PackGrannyAnimationTypeV0 = [\"animation\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelToolAnimationV15 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"filename\",\n          Utils.getString16Reader(),\n          \"data\",\n          this.PackGrannyAnimationTypeV0,\n        ];\n\n        this.ModelSequenceCompressionInfoV15 = [\n          \"animToken\",\n          Utils.getQWordReader(),\n          \"cmpGroup\",\n          Utils.getString16Reader(),\n          \"cmpType\",\n          Utils.getString16Reader(),\n        ];\n\n        this.__root = this.ModelFileToolV15 = [\n          \"modelType\",\n          Utils.getQWordReader(),\n          \"materialNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"obstacleNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"cloudData\",\n          Utils.getPointerReader(this.ModelToolCloudV15),\n          \"blitTextures\",\n          Utils.getArrayReader(this.ModelToolBlitTextureV15),\n          \"streakData\",\n          Utils.getPointerReader(this.ModelToolStreakV15),\n          \"lightningData\",\n          Utils.getPointerReader(this.ModelToolLightningV15),\n          \"permutationTokens\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"highLodAnimations\",\n          Utils.getArrayReader(this.ModelToolAnimationV15),\n          \"compressionInfos\",\n          Utils.getArrayReader(this.ModelSequenceCompressionInfoV15),\n          \"region\",\n          Utils.getStringReader(),\n        ];\n      },\n\n      // => Version: 14\n      14: function () {\n        this.ModelToolCloudV14 = [\n          \"cloudNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"emitterNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n        ];\n\n        this.ModelToolBlitTextureV14 = [\"blitId\", Utils.getQWordReader(), \"filename\", Utils.getFileNameReader()];\n\n        this.ModelToolStreakV14 = [\n          \"streakNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"anchorNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n        ];\n\n        this.ModelToolLightningV14 = [\n          \"systemNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"boltNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"nodeNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n        ];\n\n        this.PackGrannyAnimationTypeV0 = [\"animation\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelToolAnimationV14 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"filename\",\n          Utils.getString16Reader(),\n          \"data\",\n          this.PackGrannyAnimationTypeV0,\n        ];\n\n        this.ModelSequenceCompressionInfoV14 = [\n          \"animToken\",\n          Utils.getQWordReader(),\n          \"cmpGroup\",\n          Utils.getString16Reader(),\n          \"cmpType\",\n          Utils.getString16Reader(),\n        ];\n\n        this.__root = this.ModelFileToolV14 = [\n          \"modelType\",\n          Utils.getQWordReader(),\n          \"materialNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"obstacleNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"cloudData\",\n          Utils.getPointerReader(this.ModelToolCloudV14),\n          \"blitTextures\",\n          Utils.getArrayReader(this.ModelToolBlitTextureV14),\n          \"streakData\",\n          Utils.getPointerReader(this.ModelToolStreakV14),\n          \"lightningData\",\n          Utils.getPointerReader(this.ModelToolLightningV14),\n          \"permutationTokens\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"highLodAnimations\",\n          Utils.getArrayReader(this.ModelToolAnimationV14),\n          \"compressionInfos\",\n          Utils.getArrayReader(this.ModelSequenceCompressionInfoV14),\n        ];\n      },\n\n      // => Version: 13\n      13: function () {\n        this.ModelToolCloudV13 = [\n          \"cloudNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"emitterNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n        ];\n\n        this.ModelToolBlitTextureV13 = [\"blitId\", Utils.getQWordReader(), \"filename\", Utils.getFileNameReader()];\n\n        this.ModelToolStreakV13 = [\n          \"streakNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"anchorNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n        ];\n\n        this.ModelToolLightningV13 = [\n          \"systemNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"boltNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"nodeNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n        ];\n\n        this.PackGrannyAnimationTypeV0 = [\"animation\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelToolAnimationV13 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"filename\",\n          Utils.getString16Reader(),\n          \"data\",\n          this.PackGrannyAnimationTypeV0,\n        ];\n\n        this.__root = this.ModelFileToolV13 = [\n          \"modelType\",\n          Utils.getQWordReader(),\n          \"materialNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"obstacleNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"cloudData\",\n          Utils.getPointerReader(this.ModelToolCloudV13),\n          \"blitTextures\",\n          Utils.getArrayReader(this.ModelToolBlitTextureV13),\n          \"streakData\",\n          Utils.getPointerReader(this.ModelToolStreakV13),\n          \"lightningData\",\n          Utils.getPointerReader(this.ModelToolLightningV13),\n          \"permutationTokens\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"highLodAnimations\",\n          Utils.getArrayReader(this.ModelToolAnimationV13),\n        ];\n      },\n\n      // => Version: 12\n      12: function () {\n        this.ModelToolCloudV12 = [\n          \"cloudNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"emitterNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n        ];\n\n        this.ModelToolBlitTextureV12 = [\"blitId\", Utils.getQWordReader(), \"filename\", Utils.getFileNameReader()];\n\n        this.ModelToolStreakV12 = [\n          \"streakNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"anchorNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n        ];\n\n        this.ModelToolLightningV12 = [\n          \"systemNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"boltNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"nodeNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n        ];\n\n        this.PackGrannyAnimationTypeV0 = [\"animation\", Utils.getArrayReader(\"uint8\")];\n\n        this.ModelToolAnimationV12 = [\n          \"name\",\n          Utils.getQWordReader(),\n          \"filename\",\n          Utils.getString16Reader(),\n          \"data\",\n          this.PackGrannyAnimationTypeV0,\n        ];\n\n        this.__root = this.ModelFileToolV12 = [\n          \"modelType\",\n          Utils.getQWordReader(),\n          \"materialNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"obstacleNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"cloudData\",\n          Utils.getPointerReader(this.ModelToolCloudV12),\n          \"blitTextures\",\n          Utils.getArrayReader(this.ModelToolBlitTextureV12),\n          \"streakData\",\n          Utils.getPointerReader(this.ModelToolStreakV12),\n          \"lightningData\",\n          Utils.getPointerReader(this.ModelToolLightningV12),\n          \"permutationTokens\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"highLodAnimations\",\n          Utils.getArrayReader(this.ModelToolAnimationV12),\n        ];\n      },\n\n      // => Version: 11, ReferencedFunction: 0xF29420\n      11: function () {\n        this.ModelToolCloudV11 = [\n          \"cloudNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"emitterNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n        ];\n\n        this.ModelToolBlitTextureV11 = [\"blitId\", Utils.getQWordReader(), \"filename\", Utils.getFileNameReader()];\n\n        this.ModelToolStreakV11 = [\n          \"streakNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"anchorNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n        ];\n\n        this.ModelToolLightningV11 = [\n          \"systemNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"boltNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"nodeNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n        ];\n\n        this.__root = this.ModelFileToolV11 = [\n          \"modelType\",\n          Utils.getQWordReader(),\n          \"materialNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"obstacleNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"cloudData\",\n          Utils.getPointerReader(this.ModelToolCloudV11),\n          \"blitTextures\",\n          Utils.getArrayReader(this.ModelToolBlitTextureV11),\n          \"streakData\",\n          Utils.getPointerReader(this.ModelToolStreakV11),\n          \"lightningData\",\n          Utils.getPointerReader(this.ModelToolLightningV11),\n          \"permutationTokens\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n      },\n\n      // => Version: 10, ReferencedFunction: 0xF29590\n      10: function () {\n        this.ModelToolCloudV10 = [\n          \"cloudNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"emitterNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n        ];\n\n        this.ModelToolBlitTextureV10 = [\"blitId\", Utils.getQWordReader(), \"filename\", Utils.getFileNameReader()];\n\n        this.ModelToolStreakV10 = [\n          \"streakNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"anchorNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n        ];\n\n        this.ModelToolLightningV10 = [\n          \"systemNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"boltNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"nodeNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n        ];\n\n        this.__root = this.ModelFileToolV10 = [\n          \"modelType\",\n          Utils.getQWordReader(),\n          \"materialNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"obstacleNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"cloudData\",\n          Utils.getPointerReader(this.ModelToolCloudV10),\n          \"blitTextures\",\n          Utils.getArrayReader(this.ModelToolBlitTextureV10),\n          \"streakData\",\n          Utils.getPointerReader(this.ModelToolStreakV10),\n          \"lightningData\",\n          Utils.getPointerReader(this.ModelToolLightningV10),\n          \"permutationTokens\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n      },\n\n      // => Version: 9\n      9: function () {\n        this.ModelToolCloudV9 = [\n          \"cloudNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"emitterNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n        ];\n\n        this.ModelToolBlitTextureV9 = [\"blitId\", Utils.getQWordReader(), \"filename\", Utils.getFileNameReader()];\n\n        this.ModelToolStreakV9 = [\n          \"streakNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"anchorNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n        ];\n\n        this.ModelToolLightningV9 = [\n          \"systemNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"boltNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"nodeNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n        ];\n\n        this.ModelToolPropertyDataV9 = [\n          \"id\",\n          Utils.getQWordReader(),\n          \"type\",\n          \"uint32\",\n          \"mergeIndex\",\n          \"uint32\",\n          \"time\",\n          \"float32\",\n          \"val\",\n          Utils.getQWordReader(),\n          \"strVal\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.__root = this.ModelFileToolV9 = [\n          \"modelType\",\n          Utils.getQWordReader(),\n          \"materialNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"obstacleNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"cloudData\",\n          Utils.getPointerReader(this.ModelToolCloudV9),\n          \"blitTextures\",\n          Utils.getArrayReader(this.ModelToolBlitTextureV9),\n          \"streakData\",\n          Utils.getPointerReader(this.ModelToolStreakV9),\n          \"lightningData\",\n          Utils.getPointerReader(this.ModelToolLightningV9),\n          \"permutationTokens\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n          \"properties\",\n          Utils.getArrayReader(this.ModelToolPropertyDataV9),\n        ];\n      },\n\n      // => Version: 8\n      8: function () {\n        this.ModelToolCloudV8 = [\n          \"cloudNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"emitterNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n        ];\n\n        this.ModelToolBlitTextureV8 = [\"blitId\", Utils.getQWordReader(), \"filename\", Utils.getFileNameReader()];\n\n        this.ModelToolStreakV8 = [\n          \"streakNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"anchorNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n        ];\n\n        this.ModelToolLightningV8 = [\n          \"systemNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"boltNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"nodeNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n        ];\n\n        this.__root = this.ModelFileToolV8 = [\n          \"modelType\",\n          Utils.getQWordReader(),\n          \"materialNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"obstacleNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"cloudData\",\n          Utils.getPointerReader(this.ModelToolCloudV8),\n          \"blitTextures\",\n          Utils.getArrayReader(this.ModelToolBlitTextureV8),\n          \"streakData\",\n          Utils.getPointerReader(this.ModelToolStreakV8),\n          \"lightningData\",\n          Utils.getPointerReader(this.ModelToolLightningV8),\n          \"permutationTokens\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n      },\n\n      // => Version: 7\n      7: function () {\n        this.ModelToolCloudV7 = [\n          \"cloudNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"emitterNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n        ];\n\n        this.ModelToolBlitTextureV7 = [\"blitId\", Utils.getQWordReader(), \"filename\", Utils.getFileNameReader()];\n\n        this.ModelToolStreakV7 = [\n          \"streakNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"anchorNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n        ];\n\n        this.ModelToolLightningV7 = [\n          \"systemNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"boltNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"nodeNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n        ];\n\n        this.__root = this.ModelFileToolV7 = [\n          \"modelType\",\n          Utils.getQWordReader(),\n          \"materialNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"obstacleNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"cloudData\",\n          Utils.getPointerReader(this.ModelToolCloudV7),\n          \"blitTextures\",\n          Utils.getArrayReader(this.ModelToolBlitTextureV7),\n          \"streakData\",\n          Utils.getPointerReader(this.ModelToolStreakV7),\n          \"lightningData\",\n          Utils.getPointerReader(this.ModelToolLightningV7),\n        ];\n      },\n\n      // => Version: 6, ReferencedFunction: 0xF29550\n      6: function () {\n        this.ModelToolCloudV6 = [\n          \"cloudNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"emitterNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n        ];\n\n        this.ModelToolBlitTextureV6 = [\"blitId\", Utils.getQWordReader(), \"filename\", Utils.getFileNameReader()];\n\n        this.ModelToolStreakV6 = [\n          \"streakNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"anchorNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n        ];\n\n        this.__root = this.ModelFileToolV6 = [\n          \"modelType\",\n          Utils.getQWordReader(),\n          \"materialNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"obstacleNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"cloudData\",\n          Utils.getPointerReader(this.ModelToolCloudV6),\n          \"blitTextures\",\n          Utils.getArrayReader(this.ModelToolBlitTextureV6),\n          \"streakData\",\n          Utils.getPointerReader(this.ModelToolStreakV6),\n        ];\n      },\n\n      // => Version: 5, ReferencedFunction: 0xF29520\n      5: function () {\n        this.ModelToolCloudV5 = [\n          \"cloudNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"emitterNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n        ];\n\n        this.ModelToolMotionV5 = [\n          \"sequence\",\n          Utils.getQWordReader(),\n          \"keys\",\n          Utils.getArrayReader(\"float32\"),\n          \"values\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n        ];\n\n        this.ModelToolBlitTextureV5 = [\"blitId\", Utils.getQWordReader(), \"filename\", Utils.getFileNameReader()];\n\n        this.ModelToolStreakV5 = [\n          \"streakNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"anchorNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n        ];\n\n        this.__root = this.ModelFileToolV5 = [\n          \"modelType\",\n          Utils.getQWordReader(),\n          \"materialNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"obstacleNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"cloudData\",\n          Utils.getPointerReader(this.ModelToolCloudV5),\n          \"motions\",\n          Utils.getArrayReader(this.ModelToolMotionV5),\n          \"blitTextures\",\n          Utils.getArrayReader(this.ModelToolBlitTextureV5),\n          \"streakData\",\n          Utils.getPointerReader(this.ModelToolStreakV5),\n        ];\n      },\n\n      // => Version: 4\n      4: function () {\n        this.ModelToolCloudV4 = [\n          \"cloudNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"emitterNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"obstacleNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n        ];\n\n        this.ModelToolMotionV4 = [\n          \"sequence\",\n          Utils.getQWordReader(),\n          \"keys\",\n          Utils.getArrayReader(\"float32\"),\n          \"values\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n        ];\n\n        this.ModelToolBlitTextureV4 = [\"blitId\", Utils.getQWordReader(), \"filename\", Utils.getFileNameReader()];\n\n        this.ModelToolStreakV4 = [\n          \"streakNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"anchorNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n        ];\n\n        this.__root = this.ModelFileToolV4 = [\n          \"modelType\",\n          Utils.getQWordReader(),\n          \"materialNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"cloudData\",\n          Utils.getPointerReader(this.ModelToolCloudV4),\n          \"motions\",\n          Utils.getArrayReader(this.ModelToolMotionV4),\n          \"blitTextures\",\n          Utils.getArrayReader(this.ModelToolBlitTextureV4),\n          \"streakData\",\n          Utils.getPointerReader(this.ModelToolStreakV4),\n        ];\n      },\n\n      // => Version: 3\n      3: function () {\n        this.ModelToolCloudV3 = [\n          \"cloudNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"emitterNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"obstacleNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n        ];\n\n        this.ModelToolMotionV3 = [\n          \"sequence\",\n          Utils.getQWordReader(),\n          \"keys\",\n          Utils.getArrayReader(\"float32\"),\n          \"values\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n        ];\n\n        this.ModelToolBlitTextureV3 = [\"blitId\", Utils.getQWordReader(), \"filename\", Utils.getFileNameReader()];\n\n        this.__root = this.ModelFileToolV3 = [\n          \"modelType\",\n          Utils.getQWordReader(),\n          \"materialNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"cloudData\",\n          Utils.getPointerReader(this.ModelToolCloudV3),\n          \"motions\",\n          Utils.getArrayReader(this.ModelToolMotionV3),\n          \"blitTextures\",\n          Utils.getArrayReader(this.ModelToolBlitTextureV3),\n        ];\n      },\n\n      // => Version: 2\n      2: function () {\n        this.ModelToolCloudV2 = [\n          \"cloudNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"emitterNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"obstacleNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n        ];\n\n        this.ModelToolMotionV2 = [\n          \"sequence\",\n          Utils.getQWordReader(),\n          \"keys\",\n          Utils.getArrayReader(\"float32\"),\n          \"values\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n        ];\n\n        this.ModelToolBlitTextureV2 = [\"blitId\", Utils.getQWordReader(), \"filename\", Utils.getFileNameReader()];\n\n        this.__root = this.ModelFileToolV2 = [\n          \"materialNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"cloudData\",\n          Utils.getPointerReader(this.ModelToolCloudV2),\n          \"motions\",\n          Utils.getArrayReader(this.ModelToolMotionV2),\n          \"blitTextures\",\n          Utils.getArrayReader(this.ModelToolBlitTextureV2),\n        ];\n      },\n\n      // => Version: 1\n      1: function () {\n        this.ModelToolCloudV1 = [\n          \"cloudNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"emitterNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"obstacleNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n        ];\n\n        this.ModelToolMotionV1 = [\n          \"sequence\",\n          Utils.getQWordReader(),\n          \"keys\",\n          Utils.getArrayReader(\"float32\"),\n          \"values\",\n          Utils.getArrayReader([\"[]\", \"float32\", 3]),\n        ];\n\n        this.__root = this.ModelFileToolV1 = [\n          \"materialNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"cloudData\",\n          Utils.getPointerReader(this.ModelToolCloudV1),\n          \"motions\",\n          Utils.getArrayReader(this.ModelToolMotionV1),\n        ];\n      },\n\n      // => Version: 0\n      0: function () {\n        this.ModelToolCloudV0 = [\n          \"cloudNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"emitterNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"obstacleNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n        ];\n\n        this.__root = this.ModelFileToolV0 = [\n          \"materialNames\",\n          Utils.getArrayReader(Utils.getStringReader()),\n          \"cloudData\",\n          Utils.getPointerReader(this.ModelToolCloudV0),\n        ];\n      },\n    },\n  },\n];\n","const Utils = require(\"../../util/ParserUtils.js\");\n\nmodule.exports = [\n  /// ==================================================\n  /// Chunk: trn, versions: 15, strucTab: 0x17232A8\n  /// ==================================================\n\n  {\n    name: \"trn\",\n    versions: {\n      // => Version: 14\n      14: function () {\n        this.PackMapTerrainChunkV14 = [\n          \"chunkFlags\",\n          \"uint32\",\n          \"surfaceIndexArray\",\n          Utils.getArrayReader(\"uint16\"),\n          \"surfaceTokenArray\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n\n        this.PackMapTerrainConstV14 = [\"tokenName\", \"uint32\", \"value\", [\"[]\", \"float32\", 4]];\n\n        this.PackMapTerrainTexV14 = [\n          \"tokenName\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"flags\",\n          [\"[]\", \"uint32\", 2],\n          \"layer\",\n          \"uint32\",\n        ];\n\n        this.PackMapTerrainMaterialV14 = [\n          \"materialFile\",\n          Utils.getFileNameReader(),\n          \"fvf\",\n          \"uint32\",\n          \"constIndexArray\",\n          Utils.getArrayReader(\"uint32\"),\n          \"texIndexArray\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n\n        this.PackMapTerrainChunkUVDataV14 = [\n          \"translation\",\n          [\"[]\", \"float32\", 2],\n          \"xScaleRange\",\n          [\"[]\", \"float32\", 2],\n          \"yScaleRange\",\n          [\"[]\", \"float32\", 2],\n          \"scaleSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"rotation\",\n          \"float32\",\n        ];\n\n        this.PackMapTerrrainChunkMaterialV14 = [\n          \"tiling\",\n          [\"[]\", \"uint8\", 3],\n          \"hiResMaterial\",\n          this.PackMapTerrainMaterialV14,\n          \"loResMaterial\",\n          this.PackMapTerrainMaterialV14,\n          \"faderMaterial\",\n          this.PackMapTerrainMaterialV14,\n          \"uvData\",\n          Utils.getPointerReader(this.PackMapTerrainChunkUVDataV14),\n        ];\n\n        this.PackMapTerrainMaterialsV14 = [\n          \"pagedImage\",\n          Utils.getFileNameReader(),\n          \"constArray\",\n          Utils.getArrayReader(this.PackMapTerrainConstV14),\n          \"texFileArray\",\n          Utils.getArrayReader(this.PackMapTerrainTexV14),\n          \"materials\",\n          Utils.getArrayReader(this.PackMapTerrrainChunkMaterialV14),\n          \"midFade\",\n          [\"[]\", \"float32\", 2],\n          \"farFade\",\n          [\"[]\", \"float32\", 2],\n        ];\n\n        this.__root = this.PackMapTerrainV14 = [\n          \"dims\",\n          [\"[]\", \"uint32\", 2],\n          \"swapDistance\",\n          \"float32\",\n          \"heightMapArray\",\n          Utils.getArrayReader(\"float32\"),\n          \"tileFlagArray\",\n          Utils.getArrayReader(\"uint32\"),\n          \"chunkArray\",\n          Utils.getArrayReader(this.PackMapTerrainChunkV14),\n          \"materials\",\n          Utils.getPointerReader(this.PackMapTerrainMaterialsV14),\n        ];\n      },\n\n      // => Version: 13, ReferencedFunction: 0xEBAF80\n      13: function () {\n        this.PackMapTerrainChunkV13 = [\"chunkFlags\", \"uint32\", \"tileTableArray\", Utils.getArrayReader(\"uint8\")];\n\n        this.PackMapTerrainConstV13 = [\"tokenName\", \"uint32\", \"value\", [\"[]\", \"float32\", 4]];\n\n        this.PackMapTerrainTexV13 = [\n          \"tokenName\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"flags\",\n          [\"[]\", \"uint32\", 2],\n          \"layer\",\n          \"uint32\",\n        ];\n\n        this.PackMapTerrainMaterialV13 = [\n          \"materialFile\",\n          Utils.getFileNameReader(),\n          \"fvf\",\n          \"uint32\",\n          \"constIndexArray\",\n          Utils.getArrayReader(\"uint32\"),\n          \"texIndexArray\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n\n        this.PackMapTerrainChunkUVDataV13 = [\n          \"translation\",\n          [\"[]\", \"float32\", 2],\n          \"xScaleRange\",\n          [\"[]\", \"float32\", 2],\n          \"yScaleRange\",\n          [\"[]\", \"float32\", 2],\n          \"scaleSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"rotation\",\n          \"float32\",\n        ];\n\n        this.PackMapTerrrainChunkMaterialV13 = [\n          \"tiling\",\n          [\"[]\", \"uint8\", 3],\n          \"hiResMaterial\",\n          this.PackMapTerrainMaterialV13,\n          \"loResMaterial\",\n          this.PackMapTerrainMaterialV13,\n          \"faderMaterial\",\n          this.PackMapTerrainMaterialV13,\n          \"uvData\",\n          Utils.getPointerReader(this.PackMapTerrainChunkUVDataV13),\n        ];\n\n        this.PackMapTerrainMaterialsV13 = [\n          \"pagedImage\",\n          Utils.getFileNameReader(),\n          \"constArray\",\n          Utils.getArrayReader(this.PackMapTerrainConstV13),\n          \"texFileArray\",\n          Utils.getArrayReader(this.PackMapTerrainTexV13),\n          \"materials\",\n          Utils.getArrayReader(this.PackMapTerrrainChunkMaterialV13),\n          \"midFade\",\n          [\"[]\", \"float32\", 2],\n          \"farFade\",\n          [\"[]\", \"float32\", 2],\n        ];\n\n        this.__root = this.PackMapTerrainV13 = [\n          \"dims\",\n          [\"[]\", \"uint32\", 2],\n          \"swapDistance\",\n          \"float32\",\n          \"heightMapArray\",\n          Utils.getArrayReader(\"float32\"),\n          \"tileFlagArray\",\n          Utils.getArrayReader(\"uint32\"),\n          \"chunkArray\",\n          Utils.getArrayReader(this.PackMapTerrainChunkV13),\n          \"materials\",\n          Utils.getPointerReader(this.PackMapTerrainMaterialsV13),\n          \"typeArray\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n      },\n\n      // => Version: 12, ReferencedFunction: 0xEBAE60\n      12: function () {\n        this.PackMapTerrainChunkV12 = [\"chunkFlags\", \"uint32\", \"tileTableArray\", Utils.getArrayReader(\"uint8\")];\n\n        this.PackMapTerrainConstV12 = [\"tokenName\", \"uint32\", \"value\", [\"[]\", \"float32\", 4]];\n\n        this.PackMapTerrainTexV12 = [\n          \"tokenName\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"flags\",\n          [\"[]\", \"uint32\", 2],\n          \"layer\",\n          \"uint32\",\n        ];\n\n        this.PackMapTerrainMaterialV12 = [\n          \"materialFile\",\n          Utils.getFileNameReader(),\n          \"fvf\",\n          \"uint32\",\n          \"constIndexArray\",\n          Utils.getArrayReader(\"uint32\"),\n          \"texIndexArray\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n\n        this.PackMapTerrainChunkUVDataV12 = [\n          \"translation\",\n          [\"[]\", \"float32\", 2],\n          \"xScaleRange\",\n          [\"[]\", \"float32\", 2],\n          \"yScaleRange\",\n          [\"[]\", \"float32\", 2],\n          \"scaleSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"rotation\",\n          \"float32\",\n        ];\n\n        this.PackMapTerrrainChunkMaterialV12 = [\n          \"tiling\",\n          [\"[]\", \"uint8\", 3],\n          \"hiResMaterial\",\n          this.PackMapTerrainMaterialV12,\n          \"loResMaterial\",\n          this.PackMapTerrainMaterialV12,\n          \"uvData\",\n          Utils.getPointerReader(this.PackMapTerrainChunkUVDataV12),\n        ];\n\n        this.PackMapTerrainMaterialsV12 = [\n          \"pagedImage\",\n          Utils.getFileNameReader(),\n          \"constArray\",\n          Utils.getArrayReader(this.PackMapTerrainConstV12),\n          \"texFileArray\",\n          Utils.getArrayReader(this.PackMapTerrainTexV12),\n          \"materials\",\n          Utils.getArrayReader(this.PackMapTerrrainChunkMaterialV12),\n        ];\n\n        this.__root = this.PackMapTerrainV12 = [\n          \"dims\",\n          [\"[]\", \"uint32\", 2],\n          \"swapDistance\",\n          \"float32\",\n          \"heightMapArray\",\n          Utils.getArrayReader(\"float32\"),\n          \"tileFlagArray\",\n          Utils.getArrayReader(\"uint32\"),\n          \"chunkArray\",\n          Utils.getArrayReader(this.PackMapTerrainChunkV12),\n          \"materials\",\n          Utils.getPointerReader(this.PackMapTerrainMaterialsV12),\n          \"typeArray\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n      },\n\n      // => Version: 11, ReferencedFunction: 0xEBADD0\n      11: function () {\n        this.PackMapTerrainChunkV11 = [\"chunkFlags\", \"uint32\", \"tileTableArray\", Utils.getArrayReader(\"uint8\")];\n\n        this.PackMapTerrainConstV11 = [\"tokenName\", \"uint32\", \"value\", [\"[]\", \"float32\", 4]];\n\n        this.PackMapTerrainTexV11 = [\n          \"tokenName\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"flags\",\n          [\"[]\", \"uint32\", 2],\n          \"layer\",\n          \"uint32\",\n        ];\n\n        this.PackMapTerrainMaterialV11 = [\n          \"materialFile\",\n          Utils.getFileNameReader(),\n          \"fvf\",\n          \"uint32\",\n          \"constIndexArray\",\n          Utils.getArrayReader(\"uint32\"),\n          \"texIndexArray\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n\n        this.PackMapTerrainChunkUVDataV11 = [\n          \"translation\",\n          [\"[]\", \"float32\", 2],\n          \"xScaleRange\",\n          [\"[]\", \"float32\", 2],\n          \"yScaleRange\",\n          [\"[]\", \"float32\", 2],\n          \"scaleSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"rotation\",\n          \"float32\",\n        ];\n\n        this.PackMapTerrrainChunkMaterialV11 = [\n          \"tiling\",\n          [\"[]\", \"uint8\", 3],\n          \"hiResMaterial\",\n          this.PackMapTerrainMaterialV11,\n          \"loResMaterial\",\n          this.PackMapTerrainMaterialV11,\n          \"uvData\",\n          Utils.getPointerReader(this.PackMapTerrainChunkUVDataV11),\n        ];\n\n        this.PackMapTerrainMaterialsV11 = [\n          \"pagedImage\",\n          Utils.getFileNameReader(),\n          \"constArray\",\n          Utils.getArrayReader(this.PackMapTerrainConstV11),\n          \"texFileArray\",\n          Utils.getArrayReader(this.PackMapTerrainTexV11),\n          \"materials\",\n          Utils.getArrayReader(this.PackMapTerrrainChunkMaterialV11),\n        ];\n\n        this.__root = this.PackMapTerrainV11 = [\n          \"dims\",\n          [\"[]\", \"uint32\", 2],\n          \"swapDistance\",\n          \"float32\",\n          \"heightMapArray\",\n          Utils.getArrayReader(\"float32\"),\n          \"tileFlagArray\",\n          Utils.getArrayReader(\"uint32\"),\n          \"chunkArray\",\n          Utils.getArrayReader(this.PackMapTerrainChunkV11),\n          \"materials\",\n          Utils.getPointerReader(this.PackMapTerrainMaterialsV11),\n          \"typeArray\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n      },\n\n      // => Version: 10\n      10: function () {\n        this.PackMapTerrainChunkV10 = [\"chunkFlags\", \"uint32\", \"tileTableArray\", Utils.getArrayReader(\"uint8\")];\n\n        this.PackMapTerrainConstV10 = [\"tokenName\", \"uint32\", \"value\", [\"[]\", \"float32\", 4]];\n\n        this.PackMapTerrainTexV10 = [\n          \"tokenName\",\n          \"uint32\",\n          \"flags\",\n          \"uint32\",\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"flags\",\n          [\"[]\", \"uint32\", 2],\n          \"layer\",\n          \"uint32\",\n        ];\n\n        this.PackMapTerrainMaterialV10 = [\n          \"materialFile\",\n          Utils.getFileNameReader(),\n          \"fvf\",\n          \"uint32\",\n          \"constIndexArray\",\n          Utils.getArrayReader(\"uint32\"),\n          \"texIndexArray\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n\n        this.PackMapTerrainChunkUVDataV10 = [\n          \"translation\",\n          [\"[]\", \"float32\", 2],\n          \"xScaleRange\",\n          [\"[]\", \"float32\", 2],\n          \"yScaleRange\",\n          [\"[]\", \"float32\", 2],\n          \"scaleSpeed\",\n          [\"[]\", \"float32\", 2],\n          \"rotation\",\n          \"float32\",\n        ];\n\n        this.PackMapTerrrainChunkMaterialV10 = [\n          \"tiling\",\n          \"uint8\",\n          \"hiResMaterial\",\n          this.PackMapTerrainMaterialV10,\n          \"loResMaterial\",\n          this.PackMapTerrainMaterialV10,\n          \"uvData\",\n          Utils.getPointerReader(this.PackMapTerrainChunkUVDataV10),\n        ];\n\n        this.PackMapTerrainMaterialsV10 = [\n          \"pagedImage\",\n          Utils.getFileNameReader(),\n          \"constArray\",\n          Utils.getArrayReader(this.PackMapTerrainConstV10),\n          \"texFileArray\",\n          Utils.getArrayReader(this.PackMapTerrainTexV10),\n          \"materials\",\n          Utils.getArrayReader(this.PackMapTerrrainChunkMaterialV10),\n        ];\n\n        this.__root = this.PackMapTerrainV10 = [\n          \"dims\",\n          [\"[]\", \"uint32\", 2],\n          \"swapDistance\",\n          \"float32\",\n          \"heightMapArray\",\n          Utils.getArrayReader(\"float32\"),\n          \"tileFlagArray\",\n          Utils.getArrayReader(\"uint32\"),\n          \"chunkArray\",\n          Utils.getArrayReader(this.PackMapTerrainChunkV10),\n          \"materials\",\n          Utils.getPointerReader(this.PackMapTerrainMaterialsV10),\n          \"typeArray\",\n          Utils.getArrayReader(Utils.getQWordReader()),\n        ];\n      },\n    },\n  },\n];\n","const Utils = require(\"../../util/ParserUtils.js\");\n\nmodule.exports = [\n  /// ==================================================\n  /// Chunk: trni, versions: 4, strucTab: 0x1723418\n  /// ==================================================\n\n  {\n    name: \"trni\",\n    versions: {\n      // => Version: 3, ReferencedFunction: 0xEBAFE0\n      3: function () {\n        this.PagedImageLayerDataV3 = [\n          \"rawDims\",\n          [\"[]\", \"uint32\", 2],\n          \"strippedDims\",\n          [\"[]\", \"uint32\", 2],\n          \"rawFormat\",\n          \"uint32\",\n          \"strippedFormat\",\n          \"uint32\",\n          \"diskFormat\",\n          \"uint32\",\n        ];\n\n        this.PagedImagePageDataV3 = [\n          \"layer\",\n          \"uint32\",\n          \"coord\",\n          [\"[]\", \"uint32\", 2],\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"flags\",\n          \"uint32\",\n          \"solidColor\",\n          [\"[]\", \"uint8\", 4],\n        ];\n\n        this.PagedImageTableDataV3 = [\n          \"layers\",\n          Utils.getArrayReader(this.PagedImageLayerDataV3),\n          \"rawPages\",\n          Utils.getArrayReader(this.PagedImagePageDataV3),\n          \"strippedPages\",\n          Utils.getArrayReader(this.PagedImagePageDataV3),\n          \"flags\",\n          \"uint32\",\n        ];\n\n        this.PagedImageEmbeddedPageDataV3 = [\n          \"layer\",\n          \"uint32\",\n          \"coord\",\n          [\"[]\", \"uint32\", 2],\n          \"data\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.PagedImageEmbeddedPagesDataV3 = [\n          \"rawPages\",\n          Utils.getArrayReader(this.PagedImageEmbeddedPageDataV3),\n          \"strippedPages\",\n          Utils.getArrayReader(this.PagedImageEmbeddedPageDataV3),\n        ];\n\n        this.__root = this.MapTerrainImg = [\n          \"tableData\",\n          Utils.getPointerReader(this.PagedImageTableDataV3),\n          \"pageData\",\n          Utils.getPointerReader(this.PagedImageEmbeddedPagesDataV3),\n        ];\n      },\n\n      // => Version: 2\n      2: function () {\n        this.PagedImageLayerDataV2 = [\n          \"dims\",\n          [\"[]\", \"uint32\", 2],\n          \"rawDims\",\n          [\"[]\", \"uint32\", 2],\n          \"diskFormat\",\n          \"uint32\",\n          \"rawFormat\",\n          \"uint32\",\n          \"strippedFormat\",\n          \"uint32\",\n        ];\n\n        this.PagedImagePageDataV2 = [\n          \"layer\",\n          \"uint32\",\n          \"coord\",\n          [\"[]\", \"uint32\", 2],\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"flags\",\n          \"uint32\",\n          \"solidColor\",\n          [\"[]\", \"uint8\", 4],\n        ];\n\n        this.PagedImageTableDataV2 = [\n          \"layers\",\n          Utils.getArrayReader(this.PagedImageLayerDataV2),\n          \"pages\",\n          Utils.getArrayReader(this.PagedImagePageDataV2),\n          \"flags\",\n          \"uint32\",\n        ];\n\n        this.PagedImageEmbeddedPageDataV2 = [\n          \"layer\",\n          \"uint32\",\n          \"coord\",\n          [\"[]\", \"uint32\", 2],\n          \"rawData\",\n          Utils.getArrayReader(\"uint8\"),\n          \"compressedData\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.PagedImageEmbeddedPagesDataV2 = [\"pages\", Utils.getArrayReader(this.PagedImageEmbeddedPageDataV2)];\n\n        this.__root = this.MapTerrainImg = [\n          \"tableData\",\n          Utils.getPointerReader(this.PagedImageTableDataV2),\n          \"pageData\",\n          Utils.getPointerReader(this.PagedImageEmbeddedPagesDataV2),\n        ];\n      },\n\n      // => Version: 1\n      1: function () {\n        this.PagedImageLayerDataV1 = [\n          \"dims\",\n          [\"[]\", \"uint32\", 2],\n          \"rawDims\",\n          [\"[]\", \"uint32\", 2],\n          \"diskFormat\",\n          \"uint32\",\n          \"rawFormat\",\n          \"uint32\",\n          \"strippedFormat\",\n          \"uint32\",\n        ];\n\n        this.PagedImagePageDataV1 = [\n          \"layer\",\n          \"uint32\",\n          \"coord\",\n          [\"[]\", \"uint32\", 2],\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"flags\",\n          \"uint32\",\n          \"solidColor\",\n          [\"[]\", \"uint8\", 4],\n        ];\n\n        this.PagedImageTableDataV1 = [\n          \"layers\",\n          Utils.getArrayReader(this.PagedImageLayerDataV1),\n          \"pages\",\n          Utils.getArrayReader(this.PagedImagePageDataV1),\n        ];\n\n        this.PagedImageEmbeddedPageDataV1 = [\n          \"layer\",\n          \"uint32\",\n          \"coord\",\n          [\"[]\", \"uint32\", 2],\n          \"rawData\",\n          Utils.getArrayReader(\"uint8\"),\n          \"compressedData\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.PagedImageEmbeddedPagesDataV1 = [\"pages\", Utils.getArrayReader(this.PagedImageEmbeddedPageDataV1)];\n\n        this.__root = this.MapTerrainImg = [\n          \"tableData\",\n          Utils.getPointerReader(this.PagedImageTableDataV1),\n          \"pageData\",\n          Utils.getPointerReader(this.PagedImageEmbeddedPagesDataV1),\n        ];\n      },\n\n      // => Version: 0\n      0: function () {\n        this.PagedImageLayerDataV0 = [\n          \"dims\",\n          [\"[]\", \"uint32\", 2],\n          \"rawDims\",\n          [\"[]\", \"uint32\", 2],\n          \"diskFormat\",\n          \"uint32\",\n          \"rawFormat\",\n          \"uint32\",\n          \"strippedFormat\",\n          \"uint32\",\n        ];\n\n        this.PagedImagePageDataV0 = [\n          \"layer\",\n          \"uint32\",\n          \"coord\",\n          [\"[]\", \"uint32\", 2],\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"flags\",\n          \"uint32\",\n        ];\n\n        this.PagedImageTableDataV0 = [\n          \"layers\",\n          Utils.getArrayReader(this.PagedImageLayerDataV0),\n          \"pages\",\n          Utils.getArrayReader(this.PagedImagePageDataV0),\n        ];\n\n        this.PagedImageEmbeddedPageDataV0 = [\n          \"layer\",\n          \"uint32\",\n          \"coord\",\n          [\"[]\", \"uint32\", 2],\n          \"rawData\",\n          Utils.getArrayReader(\"uint8\"),\n          \"compressedData\",\n          Utils.getArrayReader(\"uint8\"),\n        ];\n\n        this.PagedImageEmbeddedPagesDataV0 = [\"pages\", Utils.getArrayReader(this.PagedImageEmbeddedPageDataV0)];\n\n        this.__root = this.MapTerrainImg = [\n          \"tableData\",\n          Utils.getPointerReader(this.PagedImageTableDataV0),\n          \"pageData\",\n          Utils.getPointerReader(this.PagedImageEmbeddedPagesDataV0),\n        ];\n      },\n    },\n  },\n];\n","const Utils = require(\"../../util/ParserUtils.js\");\n\nmodule.exports = [\n  /// ==================================================\n  /// Chunk: txtm, versions: 1, strucTab: 0x15657D4\n  /// ==================================================\n\n  {\n    name: \"txtm\",\n    versions: {\n      // => Version: 0\n      0: function () {\n        this.TextPackLanguage = [\"filenames\", Utils.getArrayReader(Utils.getFileNameReader())];\n\n        this.__root = this.TextPackManifest = [\n          \"stringsPerFile\",\n          \"uint32\",\n          \"languages\",\n          Utils.getArrayReader(this.TextPackLanguage),\n        ];\n      },\n    },\n  },\n];\n","const Utils = require(\"../../util/ParserUtils.js\");\n\nmodule.exports = [\n  /// ==================================================\n  /// Chunk: txtp, versions: 1, strucTab: 0x15657EC\n  /// ==================================================\n\n  {\n    name: \"txtp\",\n    versions: {\n      // => Version: 0\n      0: function () {\n        this.TextPackPassword = [\"textId\", \"uint32\", \"password\", Utils.getQWordReader()];\n\n        this.__root = this.TextPackPasswords = [\n          \"stringCount\",\n          \"uint32\",\n          \"passwords\",\n          Utils.getArrayReader(this.TextPackPassword),\n        ];\n      },\n    },\n  },\n];\n","const Utils = require(\"../../util/ParserUtils.js\");\n\nmodule.exports = [\n  /// ==================================================\n  /// Chunk: txtv, versions: 1, strucTab: 0x1565804\n  /// ==================================================\n\n  {\n    name: \"txtv\",\n    versions: {\n      // => Version: 0\n      0: function () {\n        this.TextPackVoice = [\"textId\", \"uint32\", \"voiceId\", \"uint32\"];\n\n        this.__root = this.TextPackVoices = [\"voices\", Utils.getArrayReader(this.TextPackVoice)];\n      },\n    },\n  },\n];\n","const Utils = require(\"../../util/ParserUtils.js\");\n\nmodule.exports = [\n  /// ==================================================\n  /// Chunk: UPDA, versions: 1, strucTab: 0x1528BB8\n  /// ==================================================\n\n  {\n    name: \"UPDA\",\n    versions: {\n      // => Version: 0\n      0: function () {\n        this.AmatAppleUPDBentry = [\n          \"originalSize\",\n          \"uint32\",\n          \"compressedData\",\n          Utils.getArrayReader(\"uint8\"),\n          \"originalName\",\n          Utils.getStringReader(),\n        ];\n\n        this.__root = this.AmatAppleUPDBinfo = [\"uPDBarray\", Utils.getArrayReader(this.AmatAppleUPDBentry)];\n      },\n    },\n  },\n];\n","const Utils = require(\"../../util/ParserUtils.js\");\n\nmodule.exports = [\n  /// ==================================================\n  /// Chunk: UPDB, versions: 1, strucTab: 0x1528BC4\n  /// ==================================================\n\n  {\n    name: \"UPDB\",\n    versions: {\n      // => Version: 0\n      0: function () {\n        this.AmatXbxUPDBentry = [\n          \"originalSize\",\n          \"uint32\",\n          \"compressedData\",\n          Utils.getArrayReader(\"uint8\"),\n          \"originalName\",\n          Utils.getStringReader(),\n        ];\n\n        this.__root = this.AmatXbxUPDBinfo = [\"uPDBarray\", Utils.getArrayReader(this.AmatXbxUPDBentry)];\n      },\n    },\n  },\n];\n","const Utils = require(\"../../util/ParserUtils.js\");\n\nmodule.exports = [\n  /// ==================================================\n  /// Chunk: vari, versions: 1, strucTab: 0x156581C\n  /// ==================================================\n\n  {\n    name: \"vari\",\n    versions: {\n      // => Version: 0\n      0: function () {\n        this.TextPackVariant = [\"textId\", \"uint32\", \"variantTextIds\", Utils.getArrayReader(\"uint32\")];\n\n        this.__root = this.TextPackVariants = [\"variants\", Utils.getArrayReader(this.TextPackVariant)];\n      },\n    },\n  },\n];\n","const Utils = require(\"../../util/ParserUtils.js\");\n\nmodule.exports = [\n  /// ==================================================\n  /// Chunk: watr, versions: 1, strucTab: 0x172335C\n  /// ==================================================\n\n  {\n    name: \"watr\",\n    versions: {\n      // => Version: 0\n      0: function () {\n        this.__root = this.PackMapWaterV0 = [\n          \"waterFoamData\",\n          Utils.getArrayReader(\"uint8\"),\n          \"waterChunks\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n      },\n    },\n  },\n];\n","const Utils = require(\"../../util/ParserUtils.js\");\n\nmodule.exports = [\n  /// ==================================================\n  /// Chunk: XBXS, versions: 1, strucTab: 0x1528BAC\n  /// ==================================================\n\n  {\n    name: \"XBXS\",\n    versions: {\n      // => Version: 0\n      0: function () {\n        this.AmatXbxShaderConstant = [\"token\", \"uint32\", \"regIndex\", \"uint32\", \"regCount\", \"uint32\"];\n\n        this.AmatXbxSamplerConstant = [\"regIndex\", \"uint32\", \"stateIndex\", \"uint32\", \"texIndex\", \"uint32\"];\n\n        this.AmatXbxShader = [\n          \"isPixelShader\",\n          \"uint32\",\n          \"cachedData\",\n          Utils.getArrayReader(\"uint8\"),\n          \"physicalData\",\n          Utils.getArrayReader(\"uint8\"),\n          \"constants\",\n          Utils.getArrayReader(this.AmatXbxShaderConstant),\n          \"samplers\",\n          Utils.getArrayReader(this.AmatXbxSamplerConstant),\n        ];\n\n        this.AmatXbxRenderState = [\n          \"cullMode\",\n          \"uint32\",\n          \"blendControl\",\n          \"uint32\",\n          \"alphaTestAndMask\",\n          \"uint32\",\n          \"alphaTestRef\",\n          \"uint32\",\n          \"colorWrite_ARGB\",\n          \"uint32\",\n          \"depthWriteEnable\",\n          \"uint32\",\n          \"depthFunction\",\n          \"uint32\",\n          \"depthBias\",\n          \"float32\",\n        ];\n\n        this.AmatXbxPass = [\n          \"renderState\",\n          this.AmatXbxRenderState,\n          \"pixelShader\",\n          \"uint32\",\n          \"vertexShader\",\n          \"uint32\",\n          \"psFileFame\",\n          Utils.getFileNameReader(),\n          \"vsFileName\",\n          Utils.getFileNameReader(),\n        ];\n\n        this.AmatXbxEffect = [\"token\", Utils.getQWordReader(), \"passes\", Utils.getArrayReader(this.AmatXbxPass)];\n\n        this.AmatXbxSamplerState = [\n          \"addressU\",\n          \"uint32\",\n          \"addressV\",\n          \"uint32\",\n          \"addressW\",\n          \"uint32\",\n          \"borderColor\",\n          \"uint32\",\n          \"magFilter\",\n          \"uint32\",\n          \"maxAnisotropy\",\n          \"uint32\",\n          \"maxMipLevel\",\n          \"uint32\",\n          \"minFilter\",\n          \"uint32\",\n          \"mipFilter\",\n          \"uint32\",\n          \"mipMapLodBias\",\n          \"float32\",\n        ];\n\n        this.__root = this.AmatXbxMaterial = [\n          \"name\",\n          Utils.getStringReader(),\n          \"shaders\",\n          Utils.getArrayReader(this.AmatXbxShader),\n          \"effects\",\n          Utils.getArrayReader(this.AmatXbxEffect),\n          \"samplers\",\n          Utils.getArrayReader(this.AmatXbxSamplerState),\n        ];\n      },\n    },\n  },\n];\n","const Utils = require(\"../../util/ParserUtils.js\");\n\nmodule.exports = [\n  /// ==================================================\n  /// Chunk: XSHD, versions: 1, strucTab: 0x1528BE8\n  /// ==================================================\n\n  {\n    name: \"XSHD\",\n    versions: {\n      // => Version: 0\n      0: function () {\n        this.AmatXbxShaderConstant = [\"token\", \"uint32\", \"regIndex\", \"uint32\", \"regCount\", \"uint32\"];\n\n        this.AmatXbxSamplerConstant = [\"regIndex\", \"uint32\", \"stateIndex\", \"uint32\", \"texIndex\", \"uint32\"];\n\n        this.__root = this.AmatXbxShader = [\n          \"isPixelShader\",\n          \"uint32\",\n          \"cachedData\",\n          Utils.getArrayReader(\"uint8\"),\n          \"physicalData\",\n          Utils.getArrayReader(\"uint8\"),\n          \"constants\",\n          Utils.getArrayReader(this.AmatXbxShaderConstant),\n          \"samplers\",\n          Utils.getArrayReader(this.AmatXbxSamplerConstant),\n        ];\n      },\n    },\n  },\n];\n","const Utils = require(\"../../util/ParserUtils.js\");\n\nmodule.exports = [\n  /// ==================================================\n  /// Chunk: zon2, versions: 22, strucTab: 0x1723840\n  /// ==================================================\n\n  {\n    name: \"zon2\",\n    versions: {\n      // => Version: 21\n      21: function () {\n        this.PackMapZoneModelV22 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"probability\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"hslOffset\",\n          [\"[]\", \"float32\", 3],\n          \"zOffsets\",\n          [\"[]\", \"uint8\", 2],\n        ];\n\n        this.PackMapZoneLayerDefV22 = [\n          \"type\",\n          \"uint8\",\n          \"height\",\n          \"uint8\",\n          \"width\",\n          \"uint8\",\n          \"radiusGround\",\n          \"uint8\",\n          \"sortGroup\",\n          \"uint8\",\n          \"tiling\",\n          \"uint8\",\n          \"scaleRange\",\n          [\"[]\", \"float32\", 2],\n          \"probability\",\n          \"float32\",\n          \"fadeRange\",\n          [\"[]\", \"float32\", 2],\n          \"rotRange\",\n          [\"[]\", [\"[]\", \"float32\", 2], 3],\n          \"hslRanges\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"instanceScaleJitter\",\n          \"float32\",\n          \"noise\",\n          \"uint8\",\n          \"layerFlags\",\n          \"uint32\",\n          \"materialname\",\n          Utils.getFileNameReader(),\n          \"modelArray\",\n          Utils.getArrayReader(this.PackMapZoneModelV22),\n          \"subModel\",\n          Utils.getPointerReader(this.PackMapZoneModelV22),\n          \"reserved\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapZonePageV10 = [\n          \"flags\",\n          Utils.getArrayReader(\"uint8\"),\n          \"chunkCoord\",\n          [\"[]\", \"uint32\", 2],\n          \"seed\",\n          \"uint8\",\n          \"paintFlags\",\n          Utils.getArrayReader(\"uint32\"),\n          \"string\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapZonePageTableV10 = [\"pageArray\", Utils.getArrayReader(this.PackMapZonePageV10), \"flags\", \"uint32\"];\n\n        this.PackMapZoneDefV22 = [\n          \"defFilename\",\n          Utils.getFileNameReader(),\n          \"token\",\n          \"uint32\",\n          \"layerDefArray\",\n          Utils.getArrayReader(this.PackMapZoneLayerDefV22),\n          \"timeStamp\",\n          Utils.getQWordReader(),\n          \"pageTable\",\n          Utils.getPointerReader(this.PackMapZonePageTableV10),\n          \"reserved\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackMapZoneEncodingDataV22 = [\"index\", \"uint16\", \"offset\", \"uint8\"];\n\n        this.PackMapZoneCollideDataV22 = [\"normalX\", \"float32\", \"normalY\", \"float32\", \"zPos\", \"float32\"];\n\n        this.PackMapZoneV22 = [\n          \"zoneFlags\",\n          \"uint32\",\n          \"vertRect\",\n          [\"[]\", \"uint32\", 4],\n          \"waterHeight\",\n          \"float32\",\n          \"seed\",\n          \"uint8\",\n          \"defToken\",\n          \"uint32\",\n          \"range\",\n          [\"[]\", \"float32\", 2],\n          \"zPos\",\n          \"float32\",\n          \"flags\",\n          Utils.getArrayReader(\"uint8\"),\n          \"encodeData\",\n          Utils.getArrayReader(this.PackMapZoneEncodingDataV22),\n          \"collideData\",\n          Utils.getArrayReader(this.PackMapZoneCollideDataV22),\n          \"offsetData\",\n          Utils.getArrayReader(\"uint16\"),\n          \"vertices\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n          \"broadId\",\n          \"uint16\",\n          \"reserved\",\n          Utils.getString16Reader(),\n        ];\n\n        this.PackBroadphaseType = [\"broadphaseData\", Utils.getArrayReader(\"uint8\")];\n\n        this.__root = this.PackMapZonesV22 = [\n          \"zoneDefArray\",\n          Utils.getArrayReader(this.PackMapZoneDefV22),\n          \"zoneArray\",\n          Utils.getArrayReader(this.PackMapZoneV22),\n          \"broadPhase\",\n          this.PackBroadphaseType,\n          \"maxBroadId\",\n          \"uint16\",\n          \"string\",\n          Utils.getString16Reader(),\n        ];\n      },\n\n      // => Version: 20, ReferencedFunction: 0xEB7610\n      20: function () {\n        this.PackMapZoneModelV21 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"probability\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"hslOffset\",\n          [\"[]\", \"float32\", 3],\n          \"zOffsets\",\n          [\"[]\", \"uint8\", 2],\n        ];\n\n        this.PackMapZoneLayerDefV21 = [\n          \"type\",\n          \"uint8\",\n          \"height\",\n          \"uint8\",\n          \"width\",\n          \"uint8\",\n          \"radiusGround\",\n          \"uint8\",\n          \"sortGroup\",\n          \"uint8\",\n          \"tiling\",\n          \"uint8\",\n          \"scaleRange\",\n          [\"[]\", \"float32\", 2],\n          \"probability\",\n          \"float32\",\n          \"fadeRange\",\n          [\"[]\", \"float32\", 2],\n          \"rotRange\",\n          [\"[]\", [\"[]\", \"float32\", 2], 3],\n          \"hslRanges\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"instanceScaleJitter\",\n          \"float32\",\n          \"noise\",\n          \"uint8\",\n          \"layerFlags\",\n          \"uint32\",\n          \"materialname\",\n          Utils.getFileNameReader(),\n          \"modelArray\",\n          Utils.getArrayReader(this.PackMapZoneModelV21),\n          \"subModel\",\n          Utils.getPointerReader(this.PackMapZoneModelV21),\n        ];\n\n        this.PackMapZonePageV9 = [\n          \"flags\",\n          Utils.getArrayReader(\"uint8\"),\n          \"chunkCoord\",\n          [\"[]\", \"uint32\", 2],\n          \"seed\",\n          \"uint8\",\n          \"paintFlags\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n\n        this.PackMapZonePageTableV9 = [\"pageArray\", Utils.getArrayReader(this.PackMapZonePageV9), \"flags\", \"uint32\"];\n\n        this.PackMapZoneDefV21 = [\n          \"defFilename\",\n          Utils.getFileNameReader(),\n          \"token\",\n          \"uint32\",\n          \"layerDefArray\",\n          Utils.getArrayReader(this.PackMapZoneLayerDefV21),\n          \"timeStamp\",\n          Utils.getQWordReader(),\n          \"pageTable\",\n          Utils.getPointerReader(this.PackMapZonePageTableV9),\n        ];\n\n        this.PackMapZoneEncodingDataV21 = [\"index\", \"uint16\", \"offset\", \"uint8\"];\n\n        this.PackMapZoneCollideDataV21 = [\"normalX\", \"float32\", \"normalY\", \"float32\", \"zPos\", \"float32\"];\n\n        this.PackMapZoneV21 = [\n          \"zoneFlags\",\n          \"uint32\",\n          \"vertRect\",\n          [\"[]\", \"uint32\", 4],\n          \"waterHeight\",\n          \"float32\",\n          \"seed\",\n          \"uint8\",\n          \"defToken\",\n          \"uint32\",\n          \"range\",\n          [\"[]\", \"float32\", 2],\n          \"zPos\",\n          \"float32\",\n          \"flags\",\n          Utils.getArrayReader(\"uint8\"),\n          \"encodeData\",\n          Utils.getArrayReader(this.PackMapZoneEncodingDataV21),\n          \"collideData\",\n          Utils.getArrayReader(this.PackMapZoneCollideDataV21),\n          \"offsetData\",\n          Utils.getArrayReader(\"uint16\"),\n          \"vertices\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n          \"broadId\",\n          \"uint16\",\n        ];\n\n        this.PackBroadphaseType = [\"broadphaseData\", Utils.getArrayReader(\"uint8\")];\n\n        this.__root = this.PackMapZonesV21 = [\n          \"zoneDefArray\",\n          Utils.getArrayReader(this.PackMapZoneDefV21),\n          \"zoneArray\",\n          Utils.getArrayReader(this.PackMapZoneV21),\n          \"broadPhase\",\n          this.PackBroadphaseType,\n          \"maxBroadId\",\n          \"uint16\",\n        ];\n      },\n\n      // => Version: 19, ReferencedFunction: 0x452AB0\n      19: function () {\n        this.PackMapZoneModelV20 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"probability\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"hslOffset\",\n          [\"[]\", \"float32\", 3],\n          \"zOffsets\",\n          [\"[]\", \"uint8\", 2],\n        ];\n\n        this.PackMapZoneLayerDefV20 = [\n          \"type\",\n          \"uint8\",\n          \"height\",\n          \"uint8\",\n          \"width\",\n          \"uint8\",\n          \"radiusGround\",\n          \"uint8\",\n          \"sortGroup\",\n          \"uint8\",\n          \"tiling\",\n          \"uint8\",\n          \"scaleRange\",\n          [\"[]\", \"float32\", 2],\n          \"probability\",\n          \"float32\",\n          \"fadeRange\",\n          [\"[]\", \"float32\", 2],\n          \"rotRange\",\n          [\"[]\", [\"[]\", \"float32\", 2], 3],\n          \"hslRanges\",\n          [\"[]\", [\"[]\", \"float32\", 2], 3],\n          \"instanceScaleJitter\",\n          \"float32\",\n          \"noise\",\n          \"uint8\",\n          \"layerFlags\",\n          \"uint32\",\n          \"materialname\",\n          Utils.getFileNameReader(),\n          \"modelArray\",\n          Utils.getArrayReader(this.PackMapZoneModelV20),\n          \"subModel\",\n          Utils.getPointerReader(this.PackMapZoneModelV20),\n        ];\n\n        this.PackMapZonePageV8 = [\n          \"flags\",\n          Utils.getArrayReader(\"uint8\"),\n          \"chunkCoord\",\n          [\"[]\", \"uint32\", 2],\n          \"seed\",\n          \"uint8\",\n          \"paintFlags\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n\n        this.PackMapZonePageTableV8 = [\"pageArray\", Utils.getArrayReader(this.PackMapZonePageV8), \"flags\", \"uint32\"];\n\n        this.PackMapZoneDefV20 = [\n          \"defFilename\",\n          Utils.getFileNameReader(),\n          \"token\",\n          \"uint32\",\n          \"layerDefArray\",\n          Utils.getArrayReader(this.PackMapZoneLayerDefV20),\n          \"timeStamp\",\n          Utils.getQWordReader(),\n          \"pageTable\",\n          Utils.getPointerReader(this.PackMapZonePageTableV8),\n        ];\n\n        this.PackMapZoneEncodingDataV20 = [\"index\", \"uint16\", \"offset\", \"uint8\"];\n\n        this.PackMapZoneCollideDataV20 = [\"normalX\", \"float32\", \"normalY\", \"float32\", \"zPos\", \"float32\"];\n\n        this.PackMapZoneV20 = [\n          \"zoneFlags\",\n          \"uint32\",\n          \"vertRect\",\n          [\"[]\", \"uint32\", 4],\n          \"waterHeight\",\n          \"float32\",\n          \"seed\",\n          \"uint8\",\n          \"defToken\",\n          \"uint32\",\n          \"range\",\n          [\"[]\", \"float32\", 2],\n          \"zPos\",\n          \"float32\",\n          \"flags\",\n          Utils.getArrayReader(\"uint8\"),\n          \"encodeData\",\n          Utils.getArrayReader(this.PackMapZoneEncodingDataV20),\n          \"collideData\",\n          Utils.getArrayReader(this.PackMapZoneCollideDataV20),\n          \"offsetData\",\n          Utils.getArrayReader(\"uint16\"),\n          \"vertices\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n          \"broadId\",\n          \"uint16\",\n        ];\n\n        this.PackBroadphaseType = [\"broadphaseData\", Utils.getArrayReader(\"uint8\")];\n\n        this.__root = this.PackMapZonesV20 = [\n          \"zoneDefArray\",\n          Utils.getArrayReader(this.PackMapZoneDefV20),\n          \"zoneArray\",\n          Utils.getArrayReader(this.PackMapZoneV20),\n          \"broadPhase\",\n          this.PackBroadphaseType,\n          \"maxBroadId\",\n          \"uint16\",\n        ];\n      },\n\n      // => Version: 18, ReferencedFunction: 0xEB7580\n      18: function () {\n        this.PackMapZoneModelV19 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"probability\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"hslOffset\",\n          [\"[]\", \"float32\", 3],\n          \"zOffsets\",\n          [\"[]\", \"uint8\", 2],\n        ];\n\n        this.PackMapZoneLayerDefV19 = [\n          \"type\",\n          \"uint8\",\n          \"height\",\n          \"uint8\",\n          \"width\",\n          \"uint8\",\n          \"radiusGround\",\n          \"uint8\",\n          \"sortGroup\",\n          \"uint8\",\n          \"tiling\",\n          \"uint8\",\n          \"scaleRange\",\n          [\"[]\", \"float32\", 2],\n          \"probability\",\n          \"float32\",\n          \"fadeRange\",\n          [\"[]\", \"float32\", 2],\n          \"rotRange\",\n          [\"[]\", [\"[]\", \"float32\", 2], 3],\n          \"hslRanges\",\n          [\"[]\", [\"[]\", \"float32\", 2], 4],\n          \"noise\",\n          \"uint8\",\n          \"layerFlags\",\n          \"uint32\",\n          \"materialname\",\n          Utils.getFileNameReader(),\n          \"modelArray\",\n          Utils.getArrayReader(this.PackMapZoneModelV19),\n          \"subModel\",\n          Utils.getPointerReader(this.PackMapZoneModelV19),\n        ];\n\n        this.PackMapZonePageV7 = [\n          \"flags\",\n          Utils.getArrayReader(\"uint8\"),\n          \"chunkCoord\",\n          [\"[]\", \"uint32\", 2],\n          \"seed\",\n          \"uint8\",\n          \"paintFlags\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n\n        this.PackMapZonePageTableV7 = [\"pageArray\", Utils.getArrayReader(this.PackMapZonePageV7), \"flags\", \"uint32\"];\n\n        this.PackMapZoneDefV19 = [\n          \"defFilename\",\n          Utils.getFileNameReader(),\n          \"token\",\n          \"uint32\",\n          \"layerDefArray\",\n          Utils.getArrayReader(this.PackMapZoneLayerDefV19),\n          \"timeStamp\",\n          Utils.getQWordReader(),\n          \"pageTable\",\n          Utils.getPointerReader(this.PackMapZonePageTableV7),\n        ];\n\n        this.PackMapZoneEncodingDataV19 = [\"index\", \"uint16\", \"offset\", \"uint8\"];\n\n        this.PackMapZoneCollideDataV19 = [\"normalX\", \"float32\", \"normalY\", \"float32\", \"zPos\", \"float32\"];\n\n        this.PackMapZoneV19 = [\n          \"zoneFlags\",\n          \"uint32\",\n          \"vertRect\",\n          [\"[]\", \"uint32\", 4],\n          \"waterHeight\",\n          \"float32\",\n          \"seed\",\n          \"uint8\",\n          \"defToken\",\n          \"uint32\",\n          \"range\",\n          [\"[]\", \"float32\", 2],\n          \"zPos\",\n          \"float32\",\n          \"flags\",\n          Utils.getArrayReader(\"uint8\"),\n          \"encodeData\",\n          Utils.getArrayReader(this.PackMapZoneEncodingDataV19),\n          \"collideData\",\n          Utils.getArrayReader(this.PackMapZoneCollideDataV19),\n          \"offsetData\",\n          Utils.getArrayReader(\"uint16\"),\n          \"vertices\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n          \"broadId\",\n          \"uint16\",\n        ];\n\n        this.PackBroadphaseType = [\"broadphaseData\", Utils.getArrayReader(\"uint8\")];\n\n        this.__root = this.PackMapZonesV19 = [\n          \"zoneDefArray\",\n          Utils.getArrayReader(this.PackMapZoneDefV19),\n          \"zoneArray\",\n          Utils.getArrayReader(this.PackMapZoneV19),\n          \"broadPhase\",\n          this.PackBroadphaseType,\n          \"maxBroadId\",\n          \"uint16\",\n        ];\n      },\n\n      // => Version: 17, ReferencedFunction: 0xEB74C0\n      17: function () {\n        this.PackMapZoneModelV18 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"probability\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"hslOffset\",\n          [\"[]\", \"float32\", 3],\n          \"zOffsets\",\n          [\"[]\", \"uint8\", 2],\n        ];\n\n        this.PackMapZoneLayerDefV18 = [\n          \"type\",\n          \"uint8\",\n          \"height\",\n          \"uint8\",\n          \"width\",\n          \"uint8\",\n          \"radiusGround\",\n          \"uint8\",\n          \"sortGroup\",\n          \"uint8\",\n          \"tiling\",\n          \"uint8\",\n          \"scaleRange\",\n          [\"[]\", \"float32\", 2],\n          \"probability\",\n          \"float32\",\n          \"fadeRange\",\n          [\"[]\", \"float32\", 2],\n          \"rotRange\",\n          [\"[]\", [\"[]\", \"float32\", 2], 3],\n          \"hslRanges\",\n          [\"[]\", [\"[]\", \"float32\", 2], 3],\n          \"noise\",\n          \"uint8\",\n          \"layerFlags\",\n          \"uint32\",\n          \"materialname\",\n          Utils.getFileNameReader(),\n          \"modelArray\",\n          Utils.getArrayReader(this.PackMapZoneModelV18),\n          \"subModel\",\n          Utils.getPointerReader(this.PackMapZoneModelV18),\n        ];\n\n        this.PackMapZonePageV6 = [\n          \"flags\",\n          Utils.getArrayReader(\"uint8\"),\n          \"chunkCoord\",\n          [\"[]\", \"uint32\", 2],\n          \"seed\",\n          \"uint8\",\n          \"paintFlags\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n\n        this.PackMapZonePageTableV6 = [\"pageArray\", Utils.getArrayReader(this.PackMapZonePageV6), \"flags\", \"uint32\"];\n\n        this.PackMapZoneDefV18 = [\n          \"defFilename\",\n          Utils.getFileNameReader(),\n          \"token\",\n          \"uint32\",\n          \"layerDefArray\",\n          Utils.getArrayReader(this.PackMapZoneLayerDefV18),\n          \"timeStamp\",\n          Utils.getQWordReader(),\n          \"pageTable\",\n          Utils.getPointerReader(this.PackMapZonePageTableV6),\n        ];\n\n        this.PackMapZoneEncodingDataV18 = [\"index\", \"uint16\", \"offset\", \"uint8\"];\n\n        this.PackMapZoneCollideDataV18 = [\"normalX\", \"float32\", \"normalY\", \"float32\", \"zPos\", \"float32\"];\n\n        this.PackMapZoneV18 = [\n          \"zoneFlags\",\n          \"uint32\",\n          \"vertRect\",\n          [\"[]\", \"uint32\", 4],\n          \"waterHeight\",\n          \"float32\",\n          \"seed\",\n          \"uint8\",\n          \"defToken\",\n          \"uint32\",\n          \"range\",\n          [\"[]\", \"float32\", 2],\n          \"zPos\",\n          \"float32\",\n          \"flags\",\n          Utils.getArrayReader(\"uint8\"),\n          \"encodeData\",\n          Utils.getArrayReader(this.PackMapZoneEncodingDataV18),\n          \"collideData\",\n          Utils.getArrayReader(this.PackMapZoneCollideDataV18),\n          \"offsetData\",\n          Utils.getArrayReader(\"uint16\"),\n          \"vertices\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n          \"broadId\",\n          \"uint16\",\n        ];\n\n        this.PackBroadphaseType = [\"broadphaseData\", Utils.getArrayReader(\"uint8\")];\n\n        this.__root = this.PackMapZonesV18 = [\n          \"zoneDefArray\",\n          Utils.getArrayReader(this.PackMapZoneDefV18),\n          \"zoneArray\",\n          Utils.getArrayReader(this.PackMapZoneV18),\n          \"broadPhase\",\n          this.PackBroadphaseType,\n          \"maxBroadId\",\n          \"uint16\",\n        ];\n      },\n\n      // => Version: 16, ReferencedFunction: 0xEB72D0\n      16: function () {\n        this.PackMapZoneModelV17 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"probability\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"hslOffset\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.PackMapZoneLayerDefV17 = [\n          \"type\",\n          \"uint8\",\n          \"height\",\n          \"uint8\",\n          \"width\",\n          \"uint8\",\n          \"radiusGround\",\n          \"uint8\",\n          \"sortGroup\",\n          \"uint8\",\n          \"tiling\",\n          \"uint8\",\n          \"scaleRange\",\n          [\"[]\", \"float32\", 2],\n          \"probability\",\n          \"float32\",\n          \"fadeRange\",\n          [\"[]\", \"float32\", 2],\n          \"rotRange\",\n          [\"[]\", [\"[]\", \"float32\", 2], 3],\n          \"noise\",\n          \"uint8\",\n          \"layerFlags\",\n          \"uint32\",\n          \"modelArray\",\n          Utils.getArrayReader(this.PackMapZoneModelV17),\n          \"subModel\",\n          Utils.getPointerReader(this.PackMapZoneModelV17),\n        ];\n\n        this.PackMapZonePageV5 = [\n          \"flags\",\n          Utils.getArrayReader(\"uint8\"),\n          \"chunkCoord\",\n          [\"[]\", \"uint32\", 2],\n          \"seed\",\n          \"uint8\",\n          \"paintFlags\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n\n        this.PackMapZonePageTableV5 = [\"pageArray\", Utils.getArrayReader(this.PackMapZonePageV5), \"flags\", \"uint32\"];\n\n        this.PackMapZoneDefV17 = [\n          \"defFilename\",\n          Utils.getFileNameReader(),\n          \"token\",\n          \"uint32\",\n          \"layerDefArray\",\n          Utils.getArrayReader(this.PackMapZoneLayerDefV17),\n          \"timeStamp\",\n          Utils.getQWordReader(),\n          \"pageTable\",\n          Utils.getPointerReader(this.PackMapZonePageTableV5),\n        ];\n\n        this.PackMapZoneEncodingDataV17 = [\"index\", \"uint16\", \"offset\", \"uint8\"];\n\n        this.PackMapZoneCollideDataV17 = [\"normalX\", \"float32\", \"normalY\", \"float32\", \"zPos\", \"float32\"];\n\n        this.PackMapZoneV17 = [\n          \"zoneFlags\",\n          \"uint32\",\n          \"vertRect\",\n          [\"[]\", \"uint32\", 4],\n          \"waterHeight\",\n          \"float32\",\n          \"seed\",\n          \"uint8\",\n          \"defToken\",\n          \"uint32\",\n          \"range\",\n          [\"[]\", \"float32\", 2],\n          \"zPos\",\n          \"float32\",\n          \"flags\",\n          Utils.getArrayReader(\"uint8\"),\n          \"encodeData\",\n          Utils.getArrayReader(this.PackMapZoneEncodingDataV17),\n          \"collideData\",\n          Utils.getArrayReader(this.PackMapZoneCollideDataV17),\n          \"offsetData\",\n          Utils.getArrayReader(\"uint16\"),\n          \"vertices\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n          \"broadId\",\n          \"uint16\",\n        ];\n\n        this.PackBroadphaseType = [\"broadphaseData\", Utils.getArrayReader(\"uint8\")];\n\n        this.__root = this.PackMapZonesV17 = [\n          \"zoneDefArray\",\n          Utils.getArrayReader(this.PackMapZoneDefV17),\n          \"zoneArray\",\n          Utils.getArrayReader(this.PackMapZoneV17),\n          \"broadPhase\",\n          this.PackBroadphaseType,\n          \"maxBroadId\",\n          \"uint16\",\n        ];\n      },\n\n      // => Version: 15, ReferencedFunction: 0xEB72D0\n      15: function () {\n        this.PackMapZoneModelV16 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"probability\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"hslOffset\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.PackMapZoneLayerDefV16 = [\n          \"type\",\n          \"uint8\",\n          \"height\",\n          \"uint8\",\n          \"width\",\n          \"uint8\",\n          \"radiusGround\",\n          \"uint8\",\n          \"sortGroup\",\n          \"uint8\",\n          \"tiling\",\n          \"uint8\",\n          \"scaleRange\",\n          [\"[]\", \"float32\", 2],\n          \"probability\",\n          \"float32\",\n          \"fadeRange\",\n          [\"[]\", \"float32\", 2],\n          \"rotRange\",\n          [\"[]\", [\"[]\", \"float32\", 2], 3],\n          \"noise\",\n          \"uint8\",\n          \"layerFlags\",\n          \"uint32\",\n          \"modelArray\",\n          Utils.getArrayReader(this.PackMapZoneModelV16),\n          \"subModel\",\n          Utils.getPointerReader(this.PackMapZoneModelV16),\n        ];\n\n        this.PackMapZonePageV4 = [\n          \"flags\",\n          Utils.getArrayReader(\"uint8\"),\n          \"chunkCoord\",\n          [\"[]\", \"uint32\", 2],\n          \"seed\",\n          \"uint8\",\n          \"paintFlags\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n\n        this.PackMapZonePageTableV4 = [\"pageArray\", Utils.getArrayReader(this.PackMapZonePageV4), \"flags\", \"uint32\"];\n\n        this.PackMapZoneDefV16 = [\n          \"defFilename\",\n          Utils.getFileNameReader(),\n          \"token\",\n          \"uint32\",\n          \"layerDefArray\",\n          Utils.getArrayReader(this.PackMapZoneLayerDefV16),\n          \"timeStamp\",\n          Utils.getQWordReader(),\n          \"pageTable\",\n          Utils.getPointerReader(this.PackMapZonePageTableV4),\n        ];\n\n        this.PackMapZoneEncodingDataV16 = [\"index\", \"uint16\", \"offset\", \"uint8\"];\n\n        this.PackMapZoneCollideDataV16 = [\"normalX\", \"float32\", \"normalY\", \"float32\", \"zPos\", \"float32\"];\n\n        this.PackMapZoneV16 = [\n          \"zoneFlags\",\n          \"uint32\",\n          \"vertRect\",\n          [\"[]\", \"uint32\", 4],\n          \"waterHeight\",\n          \"float32\",\n          \"seed\",\n          \"uint8\",\n          \"defToken\",\n          \"uint32\",\n          \"range\",\n          [\"[]\", \"float32\", 2],\n          \"zPos\",\n          \"float32\",\n          \"flags\",\n          Utils.getArrayReader(\"uint8\"),\n          \"encodeData\",\n          Utils.getArrayReader(this.PackMapZoneEncodingDataV16),\n          \"collideData\",\n          Utils.getArrayReader(this.PackMapZoneCollideDataV16),\n          \"offsetData\",\n          Utils.getArrayReader(\"uint16\"),\n          \"vertices\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n          \"broadId\",\n          \"uint16\",\n        ];\n\n        this.PackBroadphaseType = [\"broadphaseData\", Utils.getArrayReader(\"uint8\")];\n\n        this.__root = this.PackMapZonesV16 = [\n          \"zoneDefArray\",\n          Utils.getArrayReader(this.PackMapZoneDefV16),\n          \"zoneArray\",\n          Utils.getArrayReader(this.PackMapZoneV16),\n          \"broadPhase\",\n          this.PackBroadphaseType,\n          \"maxBroadId\",\n          \"uint16\",\n        ];\n      },\n\n      // => Version: 14\n      14: function () {\n        this.PackMapZoneModelV15 = [\n          \"filename\",\n          Utils.getFileNameReader(),\n          \"probability\",\n          \"float32\",\n          \"flags\",\n          \"uint32\",\n          \"hslOffset\",\n          [\"[]\", \"float32\", 3],\n        ];\n\n        this.PackMapZoneLayerDefV15 = [\n          \"type\",\n          \"uint8\",\n          \"height\",\n          \"uint8\",\n          \"width\",\n          \"uint8\",\n          \"radiusGround\",\n          \"uint8\",\n          \"sortGroup\",\n          \"uint8\",\n          \"tiling\",\n          \"uint8\",\n          \"scaleRange\",\n          [\"[]\", \"float32\", 2],\n          \"probability\",\n          \"float32\",\n          \"fadeRange\",\n          [\"[]\", \"float32\", 2],\n          \"rotRange\",\n          [\"[]\", [\"[]\", \"float32\", 2], 3],\n          \"noise\",\n          \"uint8\",\n          \"layerFlags\",\n          \"uint32\",\n          \"modelArray\",\n          Utils.getArrayReader(this.PackMapZoneModelV15),\n          \"subModel\",\n          Utils.getPointerReader(this.PackMapZoneModelV15),\n        ];\n\n        this.PackMapZonePageV3 = [\n          \"flags\",\n          Utils.getArrayReader(\"uint8\"),\n          \"chunkCoord\",\n          [\"[]\", \"uint32\", 2],\n          \"seed\",\n          \"uint8\",\n          \"paintFlags\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n\n        this.PackMapZonePageTableV3 = [\"pageArray\", Utils.getArrayReader(this.PackMapZonePageV3), \"flags\", \"uint32\"];\n\n        this.PackMapZoneDefV15 = [\n          \"defFilename\",\n          Utils.getFileNameReader(),\n          \"token\",\n          \"uint32\",\n          \"layerDefArray\",\n          Utils.getArrayReader(this.PackMapZoneLayerDefV15),\n          \"timeStamp\",\n          Utils.getQWordReader(),\n          \"pageTable\",\n          Utils.getPointerReader(this.PackMapZonePageTableV3),\n        ];\n\n        this.PackMapZoneEncodingDataV15 = [\"index\", \"uint16\", \"offset\", \"uint8\"];\n\n        this.PackMapZoneCollideDataV15 = [\"normalX\", \"float32\", \"normalY\", \"float32\", \"zPos\", \"float32\"];\n\n        this.PackMapZoneV15 = [\n          \"zoneFlags\",\n          \"uint32\",\n          \"vertRect\",\n          [\"[]\", \"uint32\", 4],\n          \"waterHeight\",\n          \"float32\",\n          \"seed\",\n          \"uint8\",\n          \"defToken\",\n          \"uint32\",\n          \"range\",\n          [\"[]\", \"float32\", 2],\n          \"zPos\",\n          \"float32\",\n          \"flags\",\n          Utils.getArrayReader(\"uint8\"),\n          \"encodeData\",\n          Utils.getArrayReader(this.PackMapZoneEncodingDataV15),\n          \"collideData\",\n          Utils.getArrayReader(this.PackMapZoneCollideDataV15),\n          \"offsetData\",\n          Utils.getArrayReader(\"uint16\"),\n          \"vertices\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n        ];\n\n        this.__root = this.PackMapZonesV15 = [\n          \"zoneDefArray\",\n          Utils.getArrayReader(this.PackMapZoneDefV15),\n          \"zoneArray\",\n          Utils.getArrayReader(this.PackMapZoneV15),\n        ];\n      },\n\n      // => Version: 13\n      13: function () {\n        this.PackMapZoneModelV14 = [\"filename\", Utils.getFileNameReader(), \"probability\", \"float32\", \"flags\", \"uint32\"];\n\n        this.PackMapZoneLayerDefV14 = [\n          \"type\",\n          \"uint8\",\n          \"height\",\n          \"uint8\",\n          \"width\",\n          \"uint8\",\n          \"radiusGround\",\n          \"uint8\",\n          \"sortGroup\",\n          \"uint8\",\n          \"tiling\",\n          \"uint8\",\n          \"scaleRange\",\n          [\"[]\", \"float32\", 2],\n          \"probability\",\n          \"float32\",\n          \"fadeRange\",\n          [\"[]\", \"float32\", 2],\n          \"rotRange\",\n          [\"[]\", [\"[]\", \"float32\", 2], 3],\n          \"noise\",\n          \"uint8\",\n          \"layerFlags\",\n          \"uint32\",\n          \"modelArray\",\n          Utils.getArrayReader(this.PackMapZoneModelV14),\n          \"subModel\",\n          Utils.getPointerReader(this.PackMapZoneModelV14),\n        ];\n\n        this.PackMapZonePageV2 = [\n          \"flags\",\n          Utils.getArrayReader(\"uint8\"),\n          \"chunkCoord\",\n          [\"[]\", \"uint32\", 2],\n          \"seed\",\n          \"uint8\",\n          \"paintFlags\",\n          Utils.getArrayReader(\"uint32\"),\n        ];\n\n        this.PackMapZonePageTableV2 = [\"pageArray\", Utils.getArrayReader(this.PackMapZonePageV2), \"flags\", \"uint32\"];\n\n        this.PackMapZoneDefV14 = [\n          \"defFilename\",\n          Utils.getFileNameReader(),\n          \"token\",\n          \"uint32\",\n          \"layerDefArray\",\n          Utils.getArrayReader(this.PackMapZoneLayerDefV14),\n          \"timeStamp\",\n          Utils.getQWordReader(),\n          \"pageTable\",\n          Utils.getPointerReader(this.PackMapZonePageTableV2),\n        ];\n\n        this.PackMapZoneEncodingDataV14 = [\"index\", \"uint16\", \"offset\", \"uint8\"];\n\n        this.PackMapZoneCollideDataV14 = [\"normalX\", \"float32\", \"normalY\", \"float32\", \"zPos\", \"float32\"];\n\n        this.PackMapZoneV14 = [\n          \"zoneFlags\",\n          \"uint32\",\n          \"vertRect\",\n          [\"[]\", \"uint32\", 4],\n          \"waterHeight\",\n          \"float32\",\n          \"seed\",\n          \"uint8\",\n          \"defToken\",\n          \"uint32\",\n          \"range\",\n          [\"[]\", \"float32\", 2],\n          \"zPos\",\n          \"float32\",\n          \"flags\",\n          Utils.getArrayReader(\"uint8\"),\n          \"encodeData\",\n          Utils.getArrayReader(this.PackMapZoneEncodingDataV14),\n          \"collideData\",\n          Utils.getArrayReader(this.PackMapZoneCollideDataV14),\n          \"offsetData\",\n          Utils.getArrayReader(\"uint16\"),\n          \"vertices\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n        ];\n\n        this.__root = this.PackMapZonesV14 = [\n          \"zoneDefArray\",\n          Utils.getArrayReader(this.PackMapZoneDefV14),\n          \"zoneArray\",\n          Utils.getArrayReader(this.PackMapZoneV14),\n        ];\n      },\n\n      // => Version: 12\n      12: function () {\n        this.PackMapZoneModelV13 = [\"filename\", Utils.getFileNameReader(), \"probability\", \"float32\", \"flags\", \"uint32\"];\n\n        this.PackMapZoneLayerDefV13 = [\n          \"type\",\n          \"uint8\",\n          \"height\",\n          \"uint8\",\n          \"width\",\n          \"uint8\",\n          \"radiusGround\",\n          \"uint8\",\n          \"sortGroup\",\n          \"uint8\",\n          \"tiling\",\n          \"uint8\",\n          \"scaleRange\",\n          [\"[]\", \"float32\", 2],\n          \"probability\",\n          \"float32\",\n          \"fadeRange\",\n          [\"[]\", \"float32\", 2],\n          \"rotRange\",\n          [\"[]\", [\"[]\", \"float32\", 2], 3],\n          \"noise\",\n          \"uint8\",\n          \"layerFlags\",\n          \"uint32\",\n          \"modelArray\",\n          Utils.getArrayReader(this.PackMapZoneModelV13),\n          \"subModel\",\n          Utils.getPointerReader(this.PackMapZoneModelV13),\n        ];\n\n        this.PackMapZoneDefV13 = [\n          \"defFilename\",\n          Utils.getFileNameReader(),\n          \"token\",\n          \"uint32\",\n          \"layerDefArray\",\n          Utils.getArrayReader(this.PackMapZoneLayerDefV13),\n          \"timeStamp\",\n          Utils.getQWordReader(),\n        ];\n\n        this.PackMapZoneEncodingDataV13 = [\"index\", \"uint16\", \"offset\", \"uint8\"];\n\n        this.PackMapZoneCollideDataV13 = [\"normalX\", \"float32\", \"normalY\", \"float32\", \"zPos\", \"float32\"];\n\n        this.PackMapZoneV13 = [\n          \"zoneFlags\",\n          \"uint32\",\n          \"vertRect\",\n          [\"[]\", \"uint32\", 4],\n          \"waterHeight\",\n          \"float32\",\n          \"seed\",\n          \"uint8\",\n          \"defToken\",\n          \"uint32\",\n          \"range\",\n          [\"[]\", \"float32\", 2],\n          \"zPos\",\n          \"float32\",\n          \"flags\",\n          Utils.getArrayReader(\"uint8\"),\n          \"encodeData\",\n          Utils.getArrayReader(this.PackMapZoneEncodingDataV13),\n          \"collideData\",\n          Utils.getArrayReader(this.PackMapZoneCollideDataV13),\n          \"offsetData\",\n          Utils.getArrayReader(\"uint16\"),\n          \"vertices\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n        ];\n\n        this.__root = this.PackMapZonesV13 = [\n          \"zoneDefArray\",\n          Utils.getArrayReader(this.PackMapZoneDefV13),\n          \"zoneArray\",\n          Utils.getArrayReader(this.PackMapZoneV13),\n        ];\n      },\n\n      // => Version: 11\n      11: function () {\n        this.PackMapZoneModelV12 = [\"filename\", Utils.getFileNameReader(), \"probability\", \"float32\", \"flags\", \"uint32\"];\n\n        this.PackMapZoneLayerDefV12 = [\n          \"height\",\n          \"uint8\",\n          \"width\",\n          \"uint8\",\n          \"radiusGround\",\n          \"uint8\",\n          \"sortGroup\",\n          \"uint8\",\n          \"tiling\",\n          \"uint8\",\n          \"scaleRange\",\n          [\"[]\", \"float32\", 2],\n          \"probability\",\n          \"float32\",\n          \"fadeRange\",\n          [\"[]\", \"float32\", 2],\n          \"rotRange\",\n          [\"[]\", [\"[]\", \"float32\", 2], 3],\n          \"noise\",\n          \"uint8\",\n          \"layerFlags\",\n          \"uint32\",\n          \"modelArray\",\n          Utils.getArrayReader(this.PackMapZoneModelV12),\n          \"subModel\",\n          Utils.getPointerReader(this.PackMapZoneModelV12),\n        ];\n\n        this.PackMapZoneDefV12 = [\n          \"defFilename\",\n          Utils.getFileNameReader(),\n          \"token\",\n          \"uint32\",\n          \"layerDefArray\",\n          Utils.getArrayReader(this.PackMapZoneLayerDefV12),\n          \"timeStamp\",\n          Utils.getQWordReader(),\n        ];\n\n        this.PackMapZoneEncodingDataV12 = [\"index\", \"uint16\", \"offset\", \"uint8\"];\n\n        this.PackMapZoneCollideDataV12 = [\"normalX\", \"float32\", \"normalY\", \"float32\", \"zPos\", \"float32\"];\n\n        this.PackMapZoneV12 = [\n          \"zoneFlags\",\n          \"uint32\",\n          \"vertRect\",\n          [\"[]\", \"uint32\", 4],\n          \"waterHeight\",\n          \"float32\",\n          \"seed\",\n          \"uint8\",\n          \"defToken\",\n          \"uint32\",\n          \"range\",\n          [\"[]\", \"float32\", 2],\n          \"zPos\",\n          \"float32\",\n          \"flags\",\n          Utils.getArrayReader(\"uint8\"),\n          \"encodeData\",\n          Utils.getArrayReader(this.PackMapZoneEncodingDataV12),\n          \"collideData\",\n          Utils.getArrayReader(this.PackMapZoneCollideDataV12),\n          \"offsetData\",\n          Utils.getArrayReader(\"uint16\"),\n          \"vertices\",\n          Utils.getArrayReader([\"[]\", \"float32\", 2]),\n        ];\n\n        this.__root = this.PackMapZonesV12 = [\n          \"zoneDefArray\",\n          Utils.getArrayReader(this.PackMapZoneDefV12),\n          \"zoneArray\",\n          Utils.getArrayReader(this.PackMapZoneV12),\n        ];\n      },\n    },\n  },\n];\n","/*\nCopyright © Tyria3DLibrary project contributors\n\nThis file is part of the Tyria 3D Library.\n\nTyria 3D Library is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nTyria 3D Library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with the Tyria 3D Library. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nconst HEAD_STRUCT = [\n  \"type\",\n  \"cstring:4\",\n  \"chunkDataSize\",\n  \"uint32\",\n  \"chunkVersion\",\n  \"uint16\",\n  \"chunkHeaderSize\",\n  \"uint16\",\n  \"offsetTableOffset\",\n  \"uint32\",\n];\n\n/**\n * Settings for resolving conflicting chunk names in different files.\n * @private\n * @property DUPLICATE_SETTINGS\n * @type {Object}\n */\nlet DUPLICATE_SETTINGS;\n\n// Replacement for DUPLICATE_SETTINGS, based on the name of the root property.\nconst PACKTOCHUNK = [\n  { pack: \"MODL\", chunk: \"ANIM\", root: \"ModelFileAnimation\" },\n  { pack: \"MODL\", chunk: \"GAME\", root: \"ModelFileGame\" },\n  { pack: \"MODL\", chunk: \"SKEL\", root: \"ModelFileSkeleton\" },\n  { pack: \"MODL\", chunk: \"TOOL\", root: \"ModelFileTool\" },\n  { pack: \"cntc\", chunk: \"Main\", root: \"PackContent\" },\n  { pack: \"mMet\", chunk: \"Main\", root: \"PackMapMetadata\" },\n  { pack: \"AMAT\", chunk: \"TOOL\", root: \"AmatToolParams\" },\n  { pack: \"cmaC\", chunk: \"main\", root: \"CollideModelManifest\" },\n];\n\n// Builds the DUPLICATE_SETTINGS based on the provided T3D.formats.\n// Required to be done dynamically since the 32 bit and 64bits have different ordering\nfunction genDuplicateSettings() {\n  // Early return if the settings have been already generated\n  if (DUPLICATE_SETTINGS) return;\n\n  function getRootName(definition) {\n    const a = new definition();\n    return Object.keys(a).filter((v) => {\n      return a[v] === a.__root && v !== \"__root\";\n    })[0];\n  }\n\n  DUPLICATE_SETTINGS = {};\n  for (const setting of PACKTOCHUNK) {\n    const regex = new RegExp(`^${setting.root}(V[0-9]*)?$`);\n    const chunkDef = T3D.formats.filter((v) => {\n      return v.name === setting.chunk;\n    });\n\n    for (const defsIdx in chunkDef) {\n      const defs = chunkDef[defsIdx].versions;\n      const lastVersion = defs[Object.keys(defs).pop()];\n      const rootName = getRootName(lastVersion);\n      if (rootName.match(regex)) {\n        if (!DUPLICATE_SETTINGS[setting.chunk]) {\n          DUPLICATE_SETTINGS[setting.chunk] = [];\n        }\n        DUPLICATE_SETTINGS[setting.chunk][defsIdx] = setting.pack;\n        break;\n      }\n    }\n  }\n}\n\n/**\n * Basic chunk parsing functionality for Guild Wars 2 file chunks\n *\n * @constructor\n * @param {DataStream} ds A DataStream containing deflated chunk binary data.\n * @param {Number} addr Offset of chunk start within the DataStream\n */\nclass GW2Chunk {\n  constructor(ds, addr) {\n    // Early returns if already called, it defines the DUPLICATE_SETTINGS variable\n    genDuplicateSettings();\n\n    /**\n     * @property {DataStream} ds The DataStream data source used by this chunk.\n     */\n    this.ds = ds;\n\n    /**\n     * @property {Number} addr The address to this Chunk within ds.\n     */\n    this.addr = addr;\n\n    /**\n     * @property {Object} data The typed data read from the body of this chunk.\n     */\n    this.data = null;\n\n    /**\n     * @property {Number} headerLength The length in bytes of the chunk header.\n     */\n    this.headerLength = NaN;\n\n    /**\n     * @property {Object} header Chunk header data.\n     */\n    this.loadHead();\n  }\n\n  /**\n   * Parses the chunk header data, populating the header property.\n   */\n  loadHead() {\n    this.ds.seek(this.addr);\n    this.header = this.ds.readStruct(HEAD_STRUCT);\n\n    this.headerLength = this.ds.position - this.addr;\n  }\n\n  /**\n   * @param  {String} fileType The main type of the pack file containing this chunk.\n   * Used for resolving chunk naming conflicts between pack file types.\n   * @return {Array}  DataStream formatted array describing the data\n   * sctructures of this chunk\n   */\n  getDefinition(fileType) {\n    /// Normally we're looking for the 0th occurance\n    /// But some chunk names occur multiple times and we're interrested\n    /// in the N:th occurance of the definition.\n    ///\n    /// I've no idea how this is automated, for now just use the\n    /// settings object I've put together from experience.\n    let useNthIndex = 0;\n\n    /// If this chunk has multiple definitions\n    /// get to know what def to use...\n    const fileTypes = DUPLICATE_SETTINGS[this.header.type];\n    if (fileTypes) {\n      useNthIndex = -1;\n\n      /// Check what file name entry matches this file name\n      for (let i = 0; i < fileTypes.length && useNthIndex === -1; i++) {\n        const ft = fileTypes[i];\n\n        if (ft === fileType) {\n          useNthIndex = i;\n        }\n      }\n\n      /// We didnt find this file name!\n      /// TODO: if you get this error, please update the DUPLICATE_SETTINGS above\n      if (useNthIndex === -1) {\n        throw new Error(\"We didnt find this file name!\");\n        //debugger;\n      }\n    }\n\n    let defsFound = 0;\n    for (let i = 0; i < T3D.formats.length; i++) {\n      const f = T3D.formats[i];\n\n      /// Chunk name needs to match\n      if (f.name === this.header.type) {\n        /// There needs to be a chunk def version matching the one specifiend\n        ///\n        /// AND If this is the Nth occurance of the chunk definition\n        /// and we're looking for the Nth occurance, return it.\n        ///\n        /// chunkVersion in the dat uses 0 indexing\n        if (defsFound === useNthIndex && f.versions[this.header.chunkVersion]) {\n          return new f.versions[this.header.chunkVersion]().__root;\n        }\n\n        defsFound++;\n      }\n    }\n  }\n\n  /**\n   * Parses the chunk main data, populating the data property.\n   *\n   * @param  {String} fileType The main type of the pack file containing this chunk.\n   * Used for resolving chunk naming conflicts between pack file types when\n   * looking up the structure definition for this chunk.\n   */\n  loadData(fileType) {\n    const def = this.getDefinition(fileType);\n\n    if (def) {\n      this.ds.seek(this.addr + this.headerLength);\n      this.data = this.ds.readStruct(def);\n    } else {\n      T3D.Logger.log(\n        T3D.Logger.TYPE_WARNING,\n        \"Could not find a definition for chunk\",\n        this.header.type,\n        \"version\",\n        this.header.chunkVersion,\n        \"file name\",\n        fileType\n      );\n    }\n  }\n\n  /**\n   * Retrieves the next chunk is the datastream. In practice this means the next chunk\n   * within the same pack file.\n   *\n   * @return {GW2Chunk} The next chunk if any, otherwise null.\n   */\n  next() {\n    try {\n      // Calculate actual data size, as mChunkDataSize\n      // does not count the size of some header variables\n      return new GW2Chunk(this.ds, this.addr + 8 + this.header.chunkDataSize);\n    } catch (e) {\n      /// Out of bounds probably\n    }\n    return null;\n  }\n}\n\nmodule.exports = GW2Chunk;\n","/*\nCopyright © Tyria3DLibrary project contributors\n\nThis file is part of the Tyria 3D Library.\n\nTyria 3D Library is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nTyria 3D Library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with the Tyria 3D Library. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nconst Chunk = require(\"./GW2Chunk\");\n\nconst HEAD_STRUCT = [\n  \"identifier\",\n  \"cstring:2\",\n  \"unknownField1\",\n  \"uint16\",\n  \"unknownField2\",\n  \"uint16\",\n  \"pkFileVersion\",\n  \"uint16\",\n  \"type\",\n  \"cstring:4\",\n];\n\n/**\n * Basic header and chunk parsing functionality for Guild Wars 2 pack files (PF)\n *\n * @constructor\n * @param {DataStream} ds A DataStream containing deflated file binary data.\n * @param {Number} addr Offset of file start within the DataStream\n * @param {boolean} noChunks If true, the file does not parse its\n * chunks on creation.\n */\nclass GW2File {\n  constructor(ds, addr, noChunks) {\n    /**\n     * @property {DataStream} ds The DataStream data source used by this file.\n     */\n    this.ds = ds;\n\n    /**\n     * @property {Number} addr The address to this File within ds.\n     */\n    this.addr = addr;\n\n    /// Not used anymore I think\n    this.data = null;\n\n    /**\n     * @property {Number} headerLength The length in bytes of the file header.\n     */\n    this.headerLength = NaN;\n\n    /**\n     * All {{#crossLink \"GW2Chunk\"}}chunks{{/crossLink}} contained in the file.\n     *\n     * @property chunks\n     * @type GW2Chunk[]\n     */\n    this.chunks = [];\n\n    /**\n     * @property {Object} header Chunk header data.\n     */\n    this.readHead();\n\n    if (!noChunks) {\n      this.readChunks();\n    }\n  }\n\n  /**\n   * Parses the file header data, populating the header property.\n   */\n  readHead() {\n    this.ds.seek(this.addr);\n    this.header = this.ds.readStruct(HEAD_STRUCT);\n    this.headerLength = this.ds.position - this.addr;\n  }\n\n  /**\n   * Parses the file headers and populates the chunks property.\n   */\n  readChunks() {\n    /// Reset chunks\n    this.chunks = [];\n\n    // var structs = this.getChunkStructs && this.getChunkStructs();\n\n    /// Load basic Chunk in order to read the chunk header.\n    let ch = new Chunk(this.ds, this.headerLength + this.addr);\n\n    // while(structs && ch!=null && ch.header.type){\n    while (ch !== null && ch.header.type) {\n      /// Load data and pass file type if we need to determine what chunk entry to use\n      /// (Some chunks in different files share the same chunk name)\n      ch.loadData(this.header.type);\n      this.chunks.push(ch);\n\n      /// Load next basic Chunk in order to read the chunk header.\n      ch = ch.next();\n    }\n  }\n\n  /**\n   * Get a GW2Chunk from this file\n   *\n   * @param  {String} type The name, or type of the desired chunk.\n   * @return {GW2Chunk} The first GW2Chunk in this file matching the type name, or null if no matching GW2Chunk was found.\n   */\n  getChunk(type) {\n    for (let i = 0; i < this.chunks.length; i++) {\n      if (this.chunks[i].header.type.toLowerCase() === type.toLowerCase()) {\n        return this.chunks[i];\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Provides a list of known header types and their parsing structure. Should be defined by each file type individually.\n   *\n   * @return {Object} An object mapping chunk identifiers to DataStream structure descriptors.\n   */\n  getChunkStructs() {\n    return {};\n  }\n}\n\nmodule.exports = GW2File;\n","// A progress cache is needed to debounce logs at the same percentage\nconst progressCache = {};\n\n/**\n * This utility function is a helper for showing loading progress of dataRenderers.\n * It automatically generates progress logs which can be used outside of the library to show progress bars.\n * Must be used on loop implementations where the maximum index is known in advance\n *\n * @param {Object} logger The default logger or given one\n * @param {Number} currentIndex Current index of the item being loaded\n * @param {Number} maxIndex Maximum index of items to load\n * @param {String} progressName Name of the resource being loaded\n */\nfunction progress(logger, currentIndex, maxIndex, progressName) {\n  const percent = Math.round((1000.0 * currentIndex) / maxIndex) / 10.0;\n  // Make sure we don't spam logs\n  if (progressCache[progressName] !== percent) {\n    const consistentPercent = percent + (percent.toString().indexOf(\".\") < 0 ? \".0\" : \"\");\n    logger.log(T3D.Logger.TYPE_PROGRESS, progressName, consistentPercent);\n    progressCache[progressName] = percent;\n  }\n\n  // Clean cache on last item\n  if (currentIndex === maxIndex) {\n    progressCache[progressName] = undefined;\n  }\n}\n\nmodule.exports = {\n  progress,\n};\n","/*\nCopyright © Tyria3DLibrary project contributors\n\nThis file is part of the Tyria 3D Library.\n\nTyria 3D Library is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nTyria 3D Library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with the Tyria 3D Library. If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/*\n  guid 1683952224941671000 is fucked up floor in SAB HUB\n  materialFilename for that mesh is 564821, shared with lots of stuff\n  lod 1 and 2 are both 0\n  material flags is 2056\n*/\n\n/**\n * Collection of methods for generating THREE materials and textures\n * from Guild Wars 2 data formats.\n * @namespace MaterialUtils\n */\n\n/**\n * Builds a custom vertex shader for a given number of uv cannels.\n * WIP not implemented yet!\n *\n * @memberof MaterialUtils\n * @param  {Number} numUv Number of UV channels used by this shader\n * @return {String}       Genereted vertex shader source\n */\nfunction buildVS(numUv) {\n  let vdefs = \"\";\n  let adefs = \"\";\n  let reads = \"\";\n  for (let i = 0; i < numUv; i++) {\n    vdefs += \"varying vec2 vUv_\" + (i + 1) + \";\\n\";\n\n    /// uv and uv2 are defined by THREE\n    if (i > 1) adefs += \"attribute vec2 uv\" + (i + 1) + \";\\n\";\n\n    reads += \"vUv_\" + (i + 1) + \" = uv\" + (i > 0 ? i + 1 : \"\") + \";\\n\";\n  }\n\n  return (\n    adefs +\n    vdefs +\n    \"void main()\\n\" +\n    \"{\\n\" +\n    reads +\n    \"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\" +\n    \"gl_Position = projectionMatrix * mvPosition;\\n\" +\n    \"}\"\n  );\n}\n\n/**\n * Generate a texture of a specified color, used to be part of THREEjs\n *\n * @memberof MaterialUtils\n * @param {Number} width\n * @param {Number} height\n * @param {THREE.Color} color\n * @returns {THREE.DataTexture}\n */\nfunction generateDataTexture(width, height, color) {\n  // create a buffer with color data\n  const size = width * height;\n  const data = new Uint8Array(4 * size);\n  const r = Math.floor(color.r * 255);\n  const g = Math.floor(color.g * 255);\n  const b = Math.floor(color.b * 255);\n  const a = 255;\n\n  for (let i = 0; i < size; i++) {\n    const stride = i * 4;\n\n    data[stride] = r;\n    data[stride + 1] = g;\n    data[stride + 2] = b;\n    data[stride + 3] = a;\n  }\n  // used the buffer to create a DataTexture\n  return new THREE.DataTexture(data, width, height, THREE.RGBAFormat);\n}\n\n/**\n * Builds a custom pixel shader for a given number of uv cannels.\n * WIP not implemented yet!\n *\n * @memberof MaterialUtils\n * @param  {Array}  textures  THREE textures\n * @param  {Number} numUv     Number of UV channels used by this shader\n * @param  {Number} alphaTest Texture see-trough alpha treshold\n * @param  {any} lightMap  TODO\n * @returns {string}\n */\nfunction buildPS(textures, numUv, alphaTest, lightMap) {\n  const t1uv = \"vUv_\" + (textures[0].uvIdx + 1);\n\n  let discard = \"\";\n\n  if (alphaTest) {\n    discard = \"    if (c1.a < 0.5) \\n\" + \"       discard;\\n\";\n  }\n\n  /// Color from 1st text or lighted by 2nd?\n  let writeColor = \"gl_FragColor = c1;\\n\";\n\n  if (lightMap) {\n    const texIdx = 0;\n    // var t2uv = \"vUv_4\";//+(3-textures[texIdx].uvIdx+1);\n    const t2uv = \"vUv_1\"; // + (textures[texIdx].uvIdx+1);\n    // console.log(\"t2uv\",t2uv);\n\n    writeColor = \"   vec4 c2 = texture2D( texture\" + (texIdx + 1) + \", \" + t2uv + \" );\\n\" + \"     gl_FragColor = c2;\\n\";\n    // \"     gl_FragColor = vec4(c2.rgb * c1.r/.5, c2.a);\\n\";\n  }\n\n  let uniforms = \"\";\n  textures.forEach(function (t, idx) {\n    uniforms += \"uniform sampler2D texture\" + (idx + 1) + \";\\n\";\n  });\n  /* uniforms += \"uniform sampler2D texture1;\\n\";\n  if(lightMap)\n    uniforms += \"uniform sampler2D texture2;\\n\"; */\n\n  let varyings = \"\";\n  for (let i = 0; i < numUv; i++) {\n    varyings += \"varying vec2 vUv_\" + (i + 1) + \";\\n\";\n  }\n\n  return (\n    uniforms +\n    varyings +\n    \"void main( void ) {\\n\" +\n    \"    vec4 c1 = texture2D( texture1, \" +\n    t1uv +\n    \" );\\n\" +\n    discard +\n    writeColor +\n    \"}\"\n  );\n}\n\n/**\n * WIP, concept for generatin materials to render multi UV chanelled meshes.\n *\n * @memberof MaterialUtils\n * @param  {Array}   textures  THREE texture\n * @param  {Number} numUV     Number of UV channels used by this shader\n * @param  {Number} alphaTest Texture see-trough alpha treshold\n * @return {THREE.ShaderMaterial} Generated shader\n */\nfunction getUVMat(textures, numUV, alphaTest) {\n  let lightMap = false;\n  const uniforms = {};\n\n  textures.forEach(function (t, idx) {\n    uniforms[\"texture\" + idx] = { type: \"t\", value: t };\n  });\n\n  if (textures.length > 1) {\n    lightMap = true;\n  }\n\n  const attributes = {};\n\n  for (let i = 2; i < numUV; i++) {\n    attributes[\"uv\" + (i + 1)] = { type: \"v2\", value: [] };\n  }\n\n  const vs = buildVS(numUV);\n\n  return new THREE.ShaderMaterial({\n    uniforms: uniforms,\n    vertexShader: vs,\n    fragmentShader: buildPS(textures, numUV, alphaTest, lightMap),\n    attributes: attributes,\n    side: THREE.FrontSide,\n  });\n}\n\n/**\n * Builds a THREE texture from a ModelMaterialData by reading settings and\n * loading any required data from the localReader. Uses sharedTextures for\n * texture caching.\n *\n * This method is full of guesses and estimations, and could be improved on\n * a lot, allowing rendering of multi UV channeled materials, or special\n * materials like custom color chanelled gear.\n *\n * @memberof MaterialUtils\n * @param  {ModelMaterialData} material   A value object often automaticaly\n *                                         generated by a\n *                                         {{#crossLink \"GW2Chunk\"}}{{/crossLink}}\n *                                         structure definitions can be found in\n *                                         AllFormats.js, look for the latest\n *                                         version of ModelMaterialData\n *\n * @param  {GW2File} materialFile   A GW2File instance, must be of type AMAT\n * @param  {LocalReader} localReader The LocalReader to load the file contents from.\n * @param  {Object} sharedTextures  Value Object for keeping the texture cache\n * @return {THREE.Material}         A THREE Material with the generated contents and settings.\n */\nfunction getMaterial(material, materialFile, localReader, sharedTextures) {\n  if (!materialFile) return;\n\n  const dxChunk = materialFile.getChunk(\"dx9s\");\n  let grChunk = materialFile.getChunk(\"grmt\");\n\n  /// Append all textures to the custom material\n  const finalTextures = [];\n\n  // Some materials don't use textures..\n  if (material && material.textures.length && dxChunk.data.techniques.length > 0) {\n    /// TODO: check for flags!\n    ///\n    /// techinques[] -> passes[] -> effects[] -> samplerIndex[]\n    ///\n    // console.log(\"num effects\",dxChunk.data.techniques[0].passes[0].effects.length);\n\n    // if(grChunk.data.flags!=76)\n    //  return;\n\n    /// 3 teqs : high medium low                GRAPHICS LEVEL SETTINGS\n    /// 1 passes                        DON'T CARE\n    /// 15 effects      Each effect has a pixel shader     HOW??\n    /// 1 or 2 sampler indices                   USE ALL! (Multi material)\n\n    const effects = dxChunk.data.techniques[0].passes[0].effects;\n    // var effect = effects[10];\n    const effect = effects[0];\n\n    //let shader = dxChunk.data.shaders[effect.pixelShader];\n\n    /* effects.forEach(function (eff) {\n      if(eff.samplerIndex.length > effect.samplerIndex.length)\n        effect = eff;\n    }); */\n    // var samplerIdx = effect.samplerIndex[0];\n\n    const samplerTextures = [];\n    let textureToken;\n    let samplerTex;\n    for (let i = 0; i < effect.samplerIndex.length; i++) {\n      const samplerIdx = effect.samplerIndex[i];\n      const sampler = dxChunk.data.samplers[samplerIdx];\n\n      /// SHOULD NEVER HAPPEN, hide mesh!\n      if (!sampler) continue; // return;\n\n      textureToken = sampler && grChunk.data.texTokens[sampler.textureIndex];\n      if (!textureToken) textureToken = \"0-0\";\n      /* else\n        textureToken =textureToken.val; */\n\n      /// Find the texture reffered by this sampler\n      samplerTex = null;\n\n      material.textures.forEach(function (tex /*, index*/) {\n        /// Seems like only 1st part of token is used...\n        if (!samplerTex && tex.token.split(\"-\")[0] === textureToken.split(\"-\")[0]) {\n          // console.log(\"TEX match\",tex.token, textureToken)\n          samplerTex = tex;\n        }\n      });\n\n      /// Add this sampler's texture to the collection of all textures\n      if (samplerTex) {\n        samplerTextures.push(samplerTex);\n      } else {\n        /// FALLBACK, just guess what texture we should use\n        if (sampler) {\n          samplerTextures.push(material.textures[sampler.textureIndex]);\n        } else if (material.textures.length > 0) {\n          samplerTextures.push(material.textures[0]);\n        } else {\n          return;\n        }\n      }\n    } /// END for each sampler index in effect\n\n    /// We now have all textures\n    // console.log(\"textures from sampler\", samplerTextures);\n\n    /// Fallback to using whatever texture there is.\n    if (samplerTextures.length <= 0) {\n      return;\n      // mainTex =  material.textures[0];\n    }\n\n    // console.log(\"num samplers \",samplerTextures.length);\n    samplerTextures.forEach(function (texture, idx) {\n      if (!texture) return;\n\n      /// Set texture \"URL\"\n      const texURL = texture && texture.filename;\n\n      /// Load texture from RAM or local reader:\n      finalTextures[idx] = getTexture(texURL, localReader, sharedTextures);\n      if (finalTextures[idx]) {\n        finalTextures[idx].uvIdx = texture.uvPSInputIndex;\n      }\n    });\n  } /// End if material and texture\n\n  let finalMaterial;\n\n  /// Create custom shader material if there are textures\n  if (finalTextures) {\n    // TODO: make this work!\n    //eslint-disable-next-line no-constant-condition\n    if (false && finalTextures.length > 0) {\n      finalMaterial = getUVMat(finalTextures, material.texCoordCount, grChunk.data.flags !== 16460);\n    } else {\n      let ft = false;\n      let nt = false;\n      material.textures.forEach(function (t) {\n        // Flag for diffuse map\n        if (!ft && t.token.split(\"-\")[0] === \"1733499172\") ft = t;\n\n        // Flag for normal map\n        if (!nt && t.token.split(\"-\")[0] === \"404146670\") nt = t;\n      });\n\n      if (!ft || ft.filename <= 0) return;\n\n      finalMaterial = new THREE.MeshPhongMaterial({\n        side: THREE.FrontSide,\n        map: getTexture(ft.filename, localReader, sharedTextures),\n      });\n      if (nt) {\n        const normalMap = getTexture(nt.filename, localReader, sharedTextures);\n        normalMap.flipY = true;\n        finalMaterial.normalMap = normalMap;\n      }\n\n      finalMaterial.textureFilename = ft.filename;\n      if (grChunk.data.flags !== 16460) {\n        // console.log(\"Setting alpha flag for \",grChunk.data.flags)\n        finalMaterial.alphaTest = 0.05;\n      }\n    }\n  }\n\n  /// Fallback material is monocolored red\n  else {\n    finalMaterial = new THREE.MeshBasicMaterial({\n      side: THREE.FrontSide,\n      color: 0xff0000,\n      shading: THREE.FlatShading,\n    });\n  }\n\n  finalMaterial.needsUpdate = true;\n\n  /// Set material props\n  /// disable for now in order for custom shaders not to fuck up\n\n  if (material) {\n    const alphaMask0 = 0x0001; // + 0x0100 + 0x0200;\n    const alphaMask1 = 0x0010;\n    const alphaMask2 = 0x0100 + 0x0200;\n    //let alphaMask2b = 0x0200;\n\n    grChunk = materialFile.getChunk(\"grmt\");\n\n    // Enable alpha test for transparent flags\n    if (\n      material.materialFlags & alphaMask0 ||\n      material.materialFlags & alphaMask1 ||\n      material.materialFlags & alphaMask2 // && solidColor != null\n    ) {\n      // return;\n      // mesh.material.transparent = true;\n      // mesh.material.opacity = 2.0;\n      // var clr = solidColor;\n      // var propAlpha = 0;\n      /// Backgroud color adds to alpha\n      // if( mesh.materialFlags == 2569  ){\n      /// This is rly just guesswork\n      /// Check material flag  2568 (as int) and compare material filename 27353 to 20041\n      /// Same flags but some have alpha and some don't\n      // if( mesh.materialFlags & alphaMask2b  ){\n      //  propAlpha =  (clr[3] - 128)/128;\n      //  //propAlpha = Math.max(0,propAlpha);\n      // }\n      // mesh.material.alphaTest = Math.max(0, 0.1 );//- propAlpha*2);\n    }\n\n    /// GRCHUNK -> DATA -> FLAGS\n\n    /// HAS LIGHT - TEX - ? - EMISSIVE16460\n    ///\n\n    /// 56533 LOD FOR TOMBSTONE?\n\n    //  16460      0100 0000 0100 1100      \"standard\" stuff rendering OK in SAB (no alpha test)\n\n    //\n    //  16452(SAB)    0100 0000 0100 0100      yellow numbers in sab signs\n    //  16448(SAB)    0100 0000 0100 0000      faces on rocks, cloudmen, skybox portal images, holes in walls, floor plates...\n    //                        no lighting??\n    //\n    //   8268      0010 0000 0100 1100\n    //   3392      0000 1101 0100 0000      Moto machine light bulbs\n    //   2380      0000 1001 0100 1100\n    //   2368      0000 1001 0100 0000      Fountain water with rings, portal border and circular \"light\"\n    //    332      0000 0001 0100 1100\n    //    324      0000 0001 0100 0100      Moto face sprites\n    //\n    //    320(SAB)    0000 0001 0100 0000      portal textures (normal maps ish)\n    //\n    //     76      0000 0000 0100 1100      LOTS OF STUFF\n    //                           Tree leaves, ground, hills, some roofs, flags, street lights\n    //                           sheild textures, some fences, water tops, waterfall\n    //\n    //                           IN KHYLO \"everything with alpha\"\n    //\n    //\n    //     68      0000 0000 0100 0100      Some flowers (lo res?) fountain edges foam\n    //\n    //     64(SAB)    0000 0000 0100 0000      clouds, sun iamge\n\n    const lightMask = 8;\n\n    const knownFileFlags = [24652, 16460, 16452, 16448, 8268, 3392, 2380, 2368, 332, 324, 320, 76, 68, 64];\n\n    if (knownFileFlags.indexOf(grChunk.data.flags) < 0) {\n      T3D.Logger.log(T3D.Logger.TYPE_WARNING, \"unknown GR flag\", grChunk.data.flags);\n    }\n\n    if (!(grChunk.data.flags & lightMask)) {\n      // debugger;\n      // console.log(\"no light\");\n      finalMaterial = new THREE.MeshBasicMaterial({\n        side: THREE.FrontSide,\n        map: finalMaterial.map,\n      });\n    }\n\n    if (grChunk.data.flags !== 16460) {\n      finalMaterial.alphaTest = 0.05;\n    }\n  } /// End if material\n\n  return finalMaterial;\n}\n\n/**\n * Load image data into a THREE.Texture from a texture file in the .dat file, using a LocalReader.\n * Any loaded tetures are added to sharedTextures, allowing for texture caching and fewer reads.\n *\n * @memberof MaterialUtils\n * @param  {Number} texURL         The fileId or baseId of the file to load image data from.\n * @param  {LocalReader} localReader    The LocalReader to load the file contents from.\n * @param  {Object} sharedTextures Value Object for keeping the texture cache\n * @return {THREE.Texture} A texture that will be populated by the file data when it is loaded.\n */\nfunction getTexture(texURL, localReader, sharedTextures) {\n  let finalTexture;\n\n  /// Read texture from shared array of loaded textures\n  /// or read it from URL and add to shared ones!\n  if (texURL && sharedTextures[texURL]) {\n    /// Just read from already loaded textures.\n    finalTexture = sharedTextures[texURL];\n  } else if (texURL) {\n    /// Load and add to shared array.\n    finalTexture = loadLocalTexture(localReader, texURL);\n\n    /// Set standard texture functionality.\n    finalTexture.wrapT = THREE.RepeatWrapping;\n    finalTexture.wrapS = THREE.RepeatWrapping;\n    finalTexture.flipY = false;\n\n    sharedTextures[texURL] = finalTexture;\n  }\n\n  return finalTexture;\n}\n\n/**\n * Load image data into a THREE.Texture from a texture file in the .dat file, using a LocalReader.\n * If you're loading multiple textures, make sure to use\n * {{#crossLink \"MaterialUtils/getTexture\"}}{{/crossLink}} that allows you to cache textures.\n *\n * @memberof MaterialUtils\n * @param {LocalReader} localReader - The LocalReader to load the file contents from.\n * @param {Number} fileId - The fileId or baseId of the file to load image data from.\n * @param {Number} mapping - What THREE mapping the returned texture will use, not implemented.\n\n * @return {THREE.Texture} A texture that will be populated by the file data when it is loaded.\n */\nfunction loadLocalTexture(localReader, fileId, mapping, defaultColor, onerror) {\n  if (defaultColor === undefined) {\n    defaultColor = Math.floor(0xffffff * Math.random());\n  }\n\n  /// Temporary texture that will be returned by the function.\n  /// Color is randomized in order to differentiate different textures during loading.\n  const texture = generateDataTexture(\n    1, // Width\n    1, // Height\n    new THREE.Color(defaultColor) // Color\n  );\n\n  // Threejs r71 is using these settings by default, r72+ changed it\n  texture.minFilter = THREE.LinearMipMapLinearFilter;\n  texture.magFilter = THREE.LinearFilter;\n  texture.generateMipmaps = true;\n  texture.flipY = true;\n\n  /// Only allow non-zero fileId, otherwise jsut return static texture\n  if (parseInt(fileId) <= 0) {\n    if (onerror) onerror();\n    return texture;\n  }\n\n  /// Load file using LocalReader.\n  localReader.loadFile(\n    fileId,\n    function (inflatedData, dxtType, imageWidth, imageHeigth) {\n      /// Require infalted data to be returned.\n      if (!inflatedData) {\n        if (onerror) onerror();\n        return;\n      }\n\n      /// Create image using returned data.\n      const image = {\n        data: new Uint8Array(inflatedData),\n        width: imageWidth,\n        height: imageHeigth,\n      };\n\n      /// Use RGBA for all textures for now...\n      /// TODO: don't use alpha for some formats!\n      texture.format =\n        //eslint-disable-next-line no-constant-condition\n        dxtType === 3 || dxtType === 5 || true ? THREE.RGBAFormat : THREE.RGBFormat;\n\n      /// Update texture with the loaded image.\n      texture.image = image;\n      texture.needsUpdate = true;\n    },\n    true\n  );\n\n  /// Return texture with temporary content.\n  return texture;\n}\n\nmodule.exports = {\n  buildVS: buildVS,\n  generateDataTexture: generateDataTexture,\n  buildPS: buildPS,\n  getUVMat: getUVMat,\n  getMaterial: getMaterial,\n  loadLocalTexture: loadLocalTexture,\n};\n","/*\nCopyright © Tyria3DLibrary project contributors\n\nThis file is part of the Tyria 3D Library.\n\nTyria 3D Library is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nTyria 3D Library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with the Tyria 3D Library. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nconst base32Max = Math.pow(2, 32);\n\n/**\n * Collection Math and sorting methods\n * @namespace MathUtils\n */\n\n/**\n * Takes an integer and calculates what the 16 bit float\n * representation of the binary data used to read the integer is.\n *\n * @memberof MathUtils\n * @param  {Number} h Integer value\n * @return {Number} Float value\n */\nfunction f16(h) {\n  const s = (h & 0x8000) >> 15;\n  const e = (h & 0x7c00) >> 10;\n  const f = h & 0x03ff;\n\n  if (e === 0) {\n    return (s ? -1 : 1) * Math.pow(2, -14) * (f / Math.pow(2, 10));\n  } else if (e === 0x1f) {\n    return f ? NaN : (s ? -1 : 1) * Infinity;\n  }\n\n  return (s ? -1 : 1) * Math.pow(2, e - 15) * (1 + f / Math.pow(2, 10));\n}\n\n/**\n * Calculates the number of binary ones present in the data used to\n * generate the input integer.\n *\n * @memberof MathUtils\n * @param  {Number} bits Integer\n * @return {Number}      Number of binary ones in the data\n */\nfunction popcount(bits) {\n  const SK5 = 0x55555555;\n  const SK3 = 0x33333333;\n  const SKF0 = 0x0f0f0f0f;\n  // let SKFF = 0xff00ff\n\n  bits -= (bits >> 1) & SK5;\n  bits = (bits & SK3) + ((bits >> 2) & SK3);\n  bits = (bits & SKF0) + ((bits >> 4) & SKF0);\n  bits += bits >> 8;\n\n  return (bits + (bits >> 15)) & 63;\n}\n\n/**\n * Calculates the 64 bit integer value of two 32 bit integers. Only works up to\n * the limit of the javascript Number maximum value.\n *\n * @memberof MathUtils\n * @param  {Number[]} arr     Input integers, length should be 2.\n * @return {Number}      64 bit representation of the two integers.\n */\nfunction arr32To64(arr) {\n  /// Re-read as uint64 (still little endian)\n  /// Warn: this will not work for ~50+ bit longs cus all JS numbers are 64 bit floats...\n  return base32Max * arr[1] + arr[0];\n}\n\n/**\n * Sorts an array and returns unique values only.\n *\n * @memberof MathUtils\n * @param  {Array} arr_in     Input array\n * @param  {Function} comparator A comparator function between the objects in arr_in\n * @return {Array}            Sorted and unique value.\n */\nfunction sort_unique(arr_in, comparator) {\n  const arr = Array.prototype.sort.call(arr_in, comparator);\n\n  const u = {};\n  const a = [];\n  for (let i = 0, l = arr.length; i < l; ++i) {\n    // eslint-disable-next-line no-prototype-builtins\n    if (u.hasOwnProperty(arr[i])) {\n      continue;\n    }\n    a.push(arr[i]);\n    u[arr[i]] = 1;\n  }\n\n  return a;\n}\n\nmodule.exports = {\n  f16: f16,\n  popcount: popcount,\n  arr32To64: arr32To64,\n  sort_unique: sort_unique,\n};\n","/*\nCopyright © Tyria3DLibrary project contributors\n\nThis file is part of the Tyria 3D Library.\n\nTyria 3D Library is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nTyria 3D Library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with the Tyria 3D Library. If not, see <http://www.gnu.org/licenses/>.\n*/\n\n/**\n * @namespace ParserUtils\n */\n\n/**\n * Collection of methods used for parsing complex data types from the .dat\n *\n * Most of these methods are only refered by the automatically generated script\n * AllFormats.js\n *\n */\n\nmodule.exports = {\n  /**\n   * Generates a function for reading an array using DataStream\n   *\n   * @param  {Array} structDef DataStream formatted structure definition\n   *                           for the items in the array.\n   * @param  {Number} maxCount The maximum allowed length of the array.\n   *                           Allows any length if left unspecified.\n   * @return {Function}        The generated parsing function.\n   */\n  getArrayReader: function (structDef, maxCount) {\n    return function (ds, struct) {\n      let ret = [];\n      try {\n        const arr_len = ds.readUint32();\n        const offset = ds.readUint32();\n        if (offset === 0) {\n          return ret;\n        }\n        const arr_ptr = ds.position - 4 + offset;\n        const pos = ds.position;\n\n        if (maxCount && arr_len > maxCount) {\n          throw \"Array length \" + arr_len + \" exceeded allowed maximum \" + maxCount;\n        }\n\n        ds.seek(arr_ptr);\n        ret = ds.readType([\"[]\", structDef, arr_len], struct);\n        ds.seek(pos);\n      } catch (e) {\n        console.warn(\"getArrayReader Failed loading array\", e);\n        console.warn(\"getArrayReader Failed loading array, structDef\", structDef);\n      }\n      return ret;\n    };\n  },\n\n  /**\n   * Generates a function for reading a refered array using DataStream\n   *\n   * @param  {Array} structDef DataStream formatted structure definition\n   *                           for the items in the array.\n   * @return {Function}        The generated parsing function.\n   */\n  getRefArrayReader: function (structDef) {\n    return function (ds) {\n      const ret_arr = [];\n\n      /// Read array of offsets\n      const arr_len = ds.readUint32();\n      const arr_ptr = ds.position + ds.readUint32();\n\n      if (arr_len === 0) {\n        return ret_arr;\n      }\n\n      const orgPos = ds.position;\n\n      /// Go to pointer and read an array of offsets!\n      ds.seek(arr_ptr);\n      const offsets = ds.readInt32Array(arr_len);\n\n      // p_data is after having read array\n      // var pointer = p_data - 4;\n      let pointer = orgPos - 4;\n\n      // auto offset  = *reinterpret_cast<const int32*>(pointer);\n      ds.seek(pointer);\n      const offset = ds.readUint32(); /// this should be the same as arr_ptr\n\n      // pointer     += offset;\n      pointer += offset;\n\n      for (let i = 0; i < offsets.length; i++) {\n        if (offsets[i] !== 0) {\n          const pos = pointer + i * 4 + offsets[i];\n          ds.seek(pos);\n\n          try {\n            ret_arr.push(ds.readStruct(structDef));\n          } catch (e) {\n            // debugger;\n            ret_arr.push(null);\n            console.warn(\"getRefArrayReader could not find refered data at offset\", offsets[i], e);\n          }\n        }\n      } /// End for each offset\n\n      ds.seek(orgPos);\n      return ret_arr;\n    };\n  },\n\n  /**\n   * Generates a function for reading a 64bit initeger. For now just reads each\n   * 32 bit integer and glues together as a string.\n   *\n   * @return {Function}        The generated parsing function.\n   */\n  getQWordReader: function () {\n    // let base32Max = 4294967296;\n    return function (ds /*, struct */) {\n      return ds.readUint32() + \"-\" + ds.readUint32();\n\n      // let p0 = ds.readUint32();\n      // let p1 = ds.readUint32();\n      // return base32Max * p1 + p0;\n    };\n  },\n\n  /**\n   * Generates a function for reading a string of 8 bit chars.\n   *\n   * @return {Function}        The generated parsing function.\n   */\n  getStringReader: function () {\n    return function (ds /*, struct*/) {\n      const ptr = ds.position + ds.readUint32();\n      const pos = ds.position;\n\n      /// Go to pointer\n      ds.seek(ptr);\n\n      const ret = ds.readCString();\n\n      /// Go back to where we were\n      ds.seek(pos);\n\n      return ret;\n    };\n  },\n\n  /**\n   * Generates a function for reading a string of 16 bit chars.\n   *\n   * @return {Function}        The generated parsing function.\n   */\n  getString16Reader: function (stringOffset) {\n    return function (ds /*, struct*/) {\n      const ptr = ds.position + ds.readUint32() + (stringOffset || 0);\n      const pos = ds.position;\n\n      /// Go to pointer\n      ds.seek(ptr);\n\n      let ret = \"\";\n      let num;\n      while (ds.position + 2 < ds.byteLength && (num = ds.readUint16()) !== 0) {\n        ret += String.fromCharCode(num);\n      }\n      // ds.readCString();\n\n      /// Go back to where we were\n      ds.seek(pos);\n\n      return ret;\n    };\n  },\n\n  /**\n   * Generates a function for reading a pointer.\n   *\n   * @param  {Array} structDef DataStream formatted structure definition\n   *                           for the item pointed to.\n   * @return {Function}        The generated parsing function.\n   */\n  getPointerReader: function (structDef) {\n    return function (ds /*, struct*/) {\n      const offset = ds.readUint32();\n\n      if (offset === 0) {\n        return {};\n      }\n\n      const ptr = ds.position - 4 + offset;\n      const pos = ds.position;\n\n      /// Go to pointer\n      ds.seek(ptr);\n\n      const ret = ds.readStruct(structDef);\n\n      /// Go back to where we were\n      ds.seek(pos);\n\n      return ret;\n    };\n  },\n\n  /**\n   * Generates a function for reading a filename/file Id.\n   *\n   * @return {Function}        The generated parsing function.\n   */\n  getFileNameReader: function () {\n    return function (ds /*, struct*/) {\n      let pos;\n      try {\n        const ptr = ds.position + ds.readUint32();\n        pos = ds.position;\n\n        /// Go to pointer\n        ds.seek(ptr);\n\n        const fileRef = ds.readStruct([\n          \"m_lowPart\",\n          \"uint16\", // uint16 m_lowPart;\n          \"m_highPart\",\n          \"uint16\", // uint16 m_highPart;\n          \"m_terminator\",\n          \"uint16\", // uint16 m_terminator;\n        ]);\n\n        /// Getting the file name...\n        /// Both need to be >= than 256 (terminator is 0)\n        let ret = 0xff00 * (fileRef.m_highPart - 0x100) + (fileRef.m_lowPart - 0x100) + 1;\n        // var ret = (fileRef.m_highPart - 0x100) * 0xff00 + (fileRef.m_lowPart - 0xff);\n\n        if (ret < 0) {\n          ret = 0;\n          // console.log(\"FR negative\", fileRef.m_highPart, fileRef.m_lowPart, fileRef.m_terminator);\n          // debugger;\n        }\n\n        /// Go back to where we were\n        ds.seek(pos);\n\n        return ret;\n      } catch (e) {\n        /// Go back to where we were\n        ds.seek(pos);\n\n        return -1;\n      }\n    };\n  },\n};\n","/*\nCopyright © Tyria3DLibrary project contributors\n\nThis file is part of the Tyria 3D Library.\n\nTyria 3D Library is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nTyria 3D Library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with the Tyria 3D Library. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nconst GW2File = require(\"../format/file/GW2File\");\nconst MaterialUtils = require(\"./MaterialUtils\");\nconst MathUtils = require(\"./MathUtils\");\n\n// TODO: Remove this local cache!!\nconst matFiles = {};\n\n/**\n * Object describing the meaning of the bits in fvf integers.\n * @property fvfFormat\n * @private\n * @type {Object}\n */\nconst fvfFormat = {\n  Position: 0x00000001 /** < 12 bytes. Position as three 32-bit floats in the order x, y, z. */,\n  Weights: 0x00000002 /** < 4 bytes. Contains bone weights. */,\n  Group: 0x00000004 /** < 4 bytes. Related to bone weights. */,\n  Normal: 0x00000008 /** < 12 bytes. Normal as three 32-bit floats in the order x, y, z. */,\n  Color: 0x00000010 /** < 4 bytes. Vertex color. */,\n  Tangent: 0x00000020 /** < 12 bytes. Tangent as three 32-bit floats in the order x, y, z. */,\n  Bitangent: 0x00000040 /** < 12 bytes. Bitangent as three 32-bit floats in the order x, y, z. */,\n  TangentFrame: 0x00000080 /** < 12 bytes. */,\n  UV32Mask: 0x0000ff00 /** < 8 bytes for each set bit. Contains UV-coords as two 32-bit floats in the order u, v. */,\n  UV16Mask: 0x00ff0000 /** < 4 bytes for each set bit. Contains UV-coords as two 16-bit floats in the order u, v. */,\n  Unknown1: 0x01000000 /** < 48 bytes. Unknown data. */,\n  Unknown2: 0x02000000 /** < 4 bytes. Unknown data. */,\n  Unknown3: 0x04000000 /** < 4 bytes. Unknown data. */,\n  Unknown4: 0x08000000 /** < 16 bytes. Unknown data. */,\n  PositionCompressed: 0x10000000 /** < 6 bytes. Position as three 16-bit floats in the order x, y, z. */,\n  Unknown5: 0x20000000 /** < 12 bytes. Unknown data. **/,\n};\n\n/**\n * Collection of methods used for generating THREE meshes from Guild Wars 2 data formats.\n * @namespace RenderUtils\n */\n\n/**\n * Creates a mesh representing a single plane.\n *\n * @memberof RenderUtils\n * @param  {Object} rect     An object with x1,x2,y1 and y2 properties.\n * @param  {Number} yPos     Vertical position of the rectangle.\n * @param  {THREE.Material} material   Mesh material to apply.\n * @param  {Number} dy       Mesh height.\n * @return {THREE.Mesh}      The generated mesh.\n */\nfunction renderRect(rect, yPos, material, dy) {\n  const dx = rect.x1 - rect.x2;\n  const dz = rect.y1 - rect.y2;\n  if (!dy) dy = 1;\n\n  const cx = (rect.x1 + rect.x2) / 2;\n  const cz = (rect.y1 + rect.y2) / 2;\n  const cy = yPos;\n\n  const geometry = new THREE.BoxGeometry(dx, dy, dz);\n\n  material =\n    material ||\n    new THREE.MeshBasicMaterial({\n      color: 0xff0000,\n      wireframe: true,\n    });\n  const plane = new THREE.Mesh(geometry, material);\n  plane.overdraw = true;\n\n  plane.position.x = cx;\n  plane.position.y = cy;\n  plane.position.z = cz;\n\n  return plane;\n}\n\n/**\n * Returns a THREE representation of the data contained by a GW2 model file.\n * The data is read using a LocalReader reference into the GW2 .dat.\n *\n * @memberof RenderUtils\n * @param {LocalReader} localReader The LocalReader to load the file contents from.\n * @param {Object} chunk Model GEOM chunk.\n * @param {Object} modelDataChunk Model MODL chunk.\n * @param {Object} sharedTextures  Value Object for keeping the texture cache.\n * @param {boolean} showUnmaterialed If false does not render any models with missing materials.\n *\n * @return {Array} Each geometry in the model file represented by a textured THREE.Mesh object\n */\nfunction renderGeomChunk(localReader, chunk, modelDataChunk, sharedTextures, showUnmaterialed) {\n  const rawMeshes = chunk.data.meshes;\n  const meshes = [];\n  const mats = modelDataChunk.data.permutations[0].materials;\n\n  rawMeshes.forEach(function (rawMesh) {\n    const rawGeom = rawMesh.geometry;\n    const fvf = rawGeom.verts.mesh.fvf; // rawGeom.fvf;\n\n    const numVerts = rawGeom.verts.vertexCount; // rawGeom.vertexCount;\n\n    const rawVerts = rawGeom.verts.mesh.vertices; // rawGeom.vertices\n\n    const indices = rawGeom.indices.indices;\n\n    const geom = new THREE.BufferGeometry();\n\n    const vertDS = new DataStream(rawVerts.buffer);\n\n    // Dirty step length for now:\n    const stride = rawVerts.length / numVerts;\n\n    // Each vertex\n    // DO UV as well\n    const vertices = new Float32Array(numVerts * 3);\n    // let tangents = null;\n    const normals = null;\n    const uvs = [];\n\n    /// Calculate the distance to the first pair of UV data from the\n    /// start of the vertex entry\n    ///\n    const distToNormals =\n      !!(fvf & fvfFormat.Position) * 12 + !!(fvf & fvfFormat.Weights) * 4 + !!(fvf & fvfFormat.Group) * 4;\n\n    const distToTangent = distToNormals + !!(fvf & fvfFormat.Normal) * 12 + !!(fvf & fvfFormat.Color) * 4;\n\n    const distToBittangent = distToTangent + !!(fvf & fvfFormat.Tangent) * 12;\n\n    const distToTangentFrame = distToBittangent + !!(fvf & fvfFormat.Bitangent) * 12;\n\n    const distToUV = distToTangentFrame + !!(fvf & fvfFormat.TangentFrame) * 12;\n\n    /// Check if the UV is 32 bit float or 16 bit float.\n    const uv32Flag = (fvf & fvfFormat.UV32Mask) >> 8;\n    const uv16Flag = (fvf & fvfFormat.UV16Mask) >> 16;\n    const isUV32 = !!uv32Flag;\n    const hasUV = !!uv16Flag || !!uv32Flag;\n\n    /// Popcount (count the number of binary 1's) in the UV flag\n    /// to get the number of UV pairs used in this vertex format.\n    const masked = isUV32 ? uv32Flag : uv16Flag;\n    let numUV = MathUtils.popcount(masked);\n\n    numUV = Math.min(numUV, 1.0);\n\n    /// Create typed UV arrays\n    if (hasUV) {\n      for (let i = 0; i < numUV; i++) {\n        uvs[i] = new Float32Array(numVerts * 2);\n      }\n    }\n\n    if (fvf & fvfFormat.Normal) {\n      // console.log(\"HAS Normal\");\n    }\n\n    if (fvf & fvfFormat.Tangent) {\n      // console.log(\"HAS Tangent\");\n    }\n\n    if (fvf & fvfFormat.Bitangent) {\n      // console.log(\"HAS Bitangent\");\n    }\n    if (fvf & fvfFormat.TangentFrame) {\n      // console.log(\"HAS TangentFrame\");\n    }\n\n    /// Read data from each vertex data entry\n    for (let i = 0; i < numVerts; i++) {\n      /// Go to vertex memory position\n      vertDS.seek(i * stride);\n\n      /// Read position data\n      /// (we just hope all meshes has 32 bit position...)\n      const x = vertDS.readFloat32();\n      const z = vertDS.readFloat32();\n      const y = vertDS.readFloat32();\n\n      /// Write position data, transformed to Tyria3D coordinate system.\n      vertices[i * 3 + 0] = x; // - c.x;\n      vertices[i * 3 + 1] = -y; // + c.y;\n      vertices[i * 3 + 2] = -z; // + c.z;\n\n      /// Read data at UV position\n      if (hasUV) {\n        for (let uvIdx = 0; uvIdx < numUV; uvIdx++) {\n          vertDS.seek(i * stride + distToUV + uvIdx * (isUV32 ? 8 : 4));\n\n          /// Add one UV pair:\n\n          let u, v;\n          if (isUV32) {\n            u = vertDS.readUint32();\n            v = vertDS.readUint32();\n          } else {\n            u = MathUtils.f16(vertDS.readUint16());\n            v = MathUtils.f16(vertDS.readUint16());\n          }\n\n          /// Push to correct UV array\n          uvs[uvIdx][i * 2 + 0] = u;\n          uvs[uvIdx][i * 2 + 1] = v;\n        }\n      } /// End if has UV\n    } /// End each vertex\n\n    /// Each face descripbed in indices\n    const faces = new Uint16Array(indices.length);\n    for (let i = 0; i < indices.length; i += 3) {\n      // This is ONE face\n      faces[i + 0] = indices[i + 2];\n      faces[i + 1] = indices[i + 1];\n      faces[i + 2] = indices[i + 0];\n    } // End each index aka \"face\"\n\n    /// Add position, index and uv props to buffered geometry\n    geom.setAttribute(\"position\", new THREE.BufferAttribute(vertices, 3));\n    // geom.setAttribute( 'index', new THREE.BufferAttribute( faces, 1) );\n    geom.setIndex(new THREE.BufferAttribute(faces, 1));\n\n    if (normals) {\n      console.log(\"adding normals\");\n      geom.setAttribute(\"normal\", new THREE.BufferAttribute(normals, 3));\n      geom.normalizeNormals();\n      geom.normalsNeedUpdate = true;\n    } else {\n      /// Calculate normals\n      geom.computeVertexNormals();\n    }\n\n    if (hasUV) {\n      for (let uvIdx = 0; uvIdx < numUV; uvIdx++) {\n        /// Names are \"uv\", \"uv2\", \"uv3\", ... , \"uvN\"\n        const uvName = \"uv\" + (uvIdx > 0 ? uvIdx + 1 : \"\");\n\n        /// Set \"custom\" attribute uvN\n        geom.setAttribute(uvName, new THREE.BufferAttribute(uvs[uvIdx], 2));\n\n        /// Flag for update\n        geom.attributes[uvName].needsUpdate = true;\n      }\n\n      /// Not needed anymore?\n      geom.uvsNeedUpdate = true;\n    }\n\n    /// Tell geometry to update its UVs and buffers\n    geom.buffersNeedUpdate = true;\n\n    /// DONE READING VERTEX DATA\n\n    /// Get material used for this mesh\n    const matIdx = rawMesh.materialIndex;\n    const mat = mats[matIdx];\n    let materialFile = null;\n\n    if (mat && matFiles[mat.filename]) {\n      materialFile = matFiles[mat.filename];\n    }\n\n    let finalMaterial = MaterialUtils.getMaterial(mat, materialFile, localReader, sharedTextures);\n\n    /// IF we could not find a material abort OR use a wireframe placeholder.\n    if (!finalMaterial) {\n      if (showUnmaterialed) {\n        finalMaterial = new THREE.MeshLambertMaterial({\n          color: 0x5bb1e8,\n          wireframe: false,\n          side: THREE.DoubleSide,\n        });\n      } else {\n        return;\n      }\n    }\n\n    /// Create the final mesh from the BufferedGeometry and MeshBasicMaterial\n    const finalMesh = new THREE.Mesh(geom, finalMaterial);\n\n    /// Set material info on the returned mesh\n    if (mat) {\n      finalMesh.materialFlags = mat.materialFlags;\n      finalMesh.materialFilename = mat.filename;\n    }\n\n    finalMesh.materialName = rawMesh.materialName;\n\n    /// Use materialFilename, materialName, and material.textureFilename in order to build export\n\n    /// Set lod info on the returned mesh\n    finalMesh.numLods = rawMesh.geometry.lods.length;\n    finalMesh.lodOverride = modelDataChunk.data.lodOverride;\n\n    /// Set flag and UV info on the returned mehs\n    finalMesh.flags = rawMesh.flags;\n    finalMesh.numUV = numUV;\n\n    /// Add mesh to returned Array\n    meshes.push(finalMesh);\n  }); /// End rawMeshes for Each\n\n  return meshes;\n}\n\n/**\n * Merge multiple meshes together and return an instancedMesh for it\n * @param {Array} meshes Three Meshes to be merged into a single mesh\n * @param {Number} size Size of the instanced mesh\n * @param {Number} filterFlags When undefined, it will render all LODs. When using 0, only show most detailed LOD\n * @returns {Mesh} a Three instanced mesh\n */\nfunction getInstancedMesh(meshes, size, filterFlags = 0) {\n  const meshMaterials = [];\n  const mergedGeometry = new THREE.Geometry();\n  meshes.forEach((mesh, index) => {\n    // If filterFlags is set, we ignore any mesh without the correct flag\n    if (filterFlags !== undefined && mesh.flags !== filterFlags) {\n      return;\n    }\n    meshMaterials.push(mesh.material);\n    // It's only possible to merge geometries of the same type\n    const meshGeometry = new THREE.Geometry().fromBufferGeometry(mesh.geometry);\n    mergedGeometry.merge(meshGeometry, mesh.matrix, index);\n  });\n  const finalMesh = new THREE.InstancedMesh(mergedGeometry, meshMaterials, size);\n  finalMesh.updateMatrix();\n  finalMesh.matrixAutoUpdate = false;\n\n  return finalMesh;\n}\n\n/**\n * Loads mesh array from Model file and sends as argument to callback.\n *\n * @memberof RenderUtils\n * @async\n * @param  {Number} filename Name of the model file to load data from.\n * @param  {Array} solidColor RGBA array of 4 integers\n * @param {LocalReader} localReader The LocalReader to load the file contents from.\n * @param {Object} sharedTextures  Value Object for keeping the texture cache.\n * @param {boolean} showUnmaterialed If false does not render any models with missing materials.\n\n * @param  {Function} callback Fired once all meshes have been loaded.\n * two arguments are passed to the callback function.\n *\n * The first argument is an Array with each textured THREE.Mesh objects.\n *\n * The second argument is the bounding spehere of this model file.\n *\n */\n\nfunction loadMeshFromModelFile(filename, solidColor, localReader, sharedTextures, showUnmaterialed, callback) {\n  // Short handles prop attributes\n  const finalMeshes = [];\n\n  /// Load file\n  localReader.loadFile(filename, function (inflatedData) {\n    try {\n      if (!inflatedData) {\n        throw \"Could not find MFT entry for \" + filename;\n      }\n\n      const ds = new DataStream(inflatedData);\n\n      const modelFile = new GW2File(ds, 0);\n\n      // MODL for materials -> textures\n      const modelDataChunk = modelFile.getChunk(\"modl\");\n\n      // GEOM for geometry\n      const geometryDataChunk = modelFile.getChunk(\"geom\");\n\n      /// Hacky fix for not being able to adjust for position\n      const boundingSphere = modelDataChunk.data.boundingSphere;\n      const bsc = boundingSphere.center;\n      boundingSphere.radius += Math.sqrt(bsc[0] * bsc[0] + Math.sqrt(bsc[1] * bsc[1] + bsc[2] * bsc[2]));\n\n      /// Load all material files\n      const allMats = modelDataChunk.data.permutations[0].materials;\n\n      //eslint-disable-next-line no-inner-declarations\n      function loadMaterialIndex(mIdx, matCallback) {\n        if (mIdx >= allMats.length) {\n          matCallback();\n          return;\n        }\n\n        const mat = allMats[mIdx];\n\n        /// Skip if file is loaded\n        if (matFiles[mat.filename]) {\n          loadMaterialIndex(mIdx + 1, matCallback);\n          return;\n        }\n\n        localReader.loadFile(mat.filename, function (inflatedData) {\n          if (inflatedData) {\n            const ds = new DataStream(inflatedData);\n            const materialFile = new GW2File(ds, 0);\n            matFiles[mat.filename] = materialFile;\n          }\n\n          loadMaterialIndex(mIdx + 1, matCallback);\n        });\n      }\n\n      loadMaterialIndex(0, function () {\n        /// Create meshes\n        const meshes = renderGeomChunk(\n          localReader,\n          geometryDataChunk,\n          modelDataChunk,\n          sharedTextures,\n          showUnmaterialed\n        );\n\n        // Build mesh group\n        meshes.forEach(function (mesh) {\n          /// Material flags\n          const knownflags = [\n            /*\n              1-5\n              Has Tex?  IDK      Light?    Alpha?\n\n              5-8\n              0      0       IDK       Water?\n\n              9-12\n              Has Tex?  0      Alpha?    Alpha?\n\n              13\n              IDK KEV\n              */\n\n            0, // 0 0000 0000 0000    Ground / Wall splashes\n            8, // 0 0000 0000 1000    Broken Khylo roof DDS\n            9, // 0 0000 0000 1001    Tree leaves\n\n            520, // 0 0010 0000 1000    Some LOD modules, fires, smoke, inside of tents (some DSS textures)\n\n            2056, // 0 1000 0000 1000    Solid objects, also broken animations\n\n            /// Solids here are unhappy, or are they? could be animations etc\n            2057, // 0 1000 0000 1001    Windmill sails, bushes, trees, but also a statue and a few pieces of wall\n\n            2060, // 0 1000 0000 1100    A few solid objects, like wooden barricades, one(!) painting\n            2061, // 0 1000 0000 1101    A few bushes, two paintings\n\n            2312, // 0 1001 0000 1000    Opaque Clock tower main walls AND IVY\n            2316, // 0 1001 0000 1100    Bushes, inner flower walkway a ramp and a box\n\n            // Number 10\n            2568, // 0 1010 0000 1000    Lots of solids; walls, tents also some tent details WITH alpa\n\n            // Number 11\n            2569, // 0 1010 0000 1001    Solids like walls and roofs and appernt non solids like ropes\n\n            2572, // 0 1010 0000 1100    Solid wooden beems, lamp posts\n            2573, // 0 1010 0000 1101    Lamp holders, bushes, fences, apparent non solids\n            2584, // 0 1010 0001 1000    Fountain Well water\n\n            2824, // 0 1011 0000 1000    Windows, sign arrows, cloth roofs (non solids) BUT straw roofs\n            2828, // 0 1011 0000 1100    A few fence post (non solids)\n            2840, // 0 1011 0001 1000    Fountain running water + pipe water\n\n            4617, // 1 0010 0000 1001    Found nothing\n            6664, // 1 1010 0000 1000    Two groups of solid boxes\n          ];\n\n          // let alphaMask0 = 0x0001 // + 0x0100 + 0x0200;\n          // let alphaMask1 = 0x0010\n          // let alphaMask2 = 0x0100 + 0x0200\n          // let alphaMask2b = 0x0200\n\n          const texMask = 0x8 + 0x0800;\n\n          if (knownflags.indexOf(mesh.materialFlags) !== 11) {\n            // return;\n          }\n\n          // No smoke etc\n          if (mesh.materialFlags === 520) {\n            // return;\n          }\n\n          // Must have texture\n          if (!showUnmaterialed && !(mesh.materialFlags & texMask)) {\n            return;\n          }\n\n          // NO lods\n          if (mesh.flags === 4 || mesh.flags === 1 || mesh.flags === 0) {\n            // return;\n          }\n\n          // Add to final colection\n          finalMeshes.push(mesh);\n        }); /// END FOR EACH meshes\n\n        callback(finalMeshes, boundingSphere);\n      }); /// END LOAD MATERIALS CALLBACK\n    } catch (e) {\n      console.warn(\"Failed rendering model \" + filename, e);\n      const mesh = new THREE.Mesh(new THREE.BoxGeometry(200, 2000, 200), new THREE.MeshNormalMaterial());\n      mesh.flags = 4;\n      mesh.materialFlags = 2056;\n      mesh.lodOverride = [1000000, 1000000];\n      finalMeshes.push(mesh);\n\n      /// Send the final meshes to callback function\n      callback(finalMeshes);\n    }\n  }); /// END FILE LOADED CALLBACK FUNCTION\n}\n\n/**\n * Gets a mesh array from Model file and sends as argument to callback. Uses a cache of meshes in order\n * to never read the same model file twice.\n *\n * @memberof RenderUtils\n * @async\n * @param  {Number} filename The fileId or baseId of the Model file to load\n * @param  {Array} color RGBA array of 4 integers\n * @param  {LocalReader} localReader The LocalReader object used to read data from the GW2 .dat file.\n * @param {Object} sharedMeshes  Value Object for keeping the texture cache.\n * @param {Object} sharedTextures  Value Object for keeping the texture cache.\n * @param {boolean} showUnmaterialed If false does not render any models with missing materials.\n * @param  {Function} callback Fired once all meshes have been loaded.\n * three arguments are passed to the callback function.\n *\n * The first argument is an Array with each textured THREE.Mesh objects.\n *\n * The second argument is a boolean, true indicates that these meshes were not\n * loaded from the dat file, but retrieved from the run time cache.\n *\n * The third argument is the bounding spehere of this model file.\n */\nfunction getMeshesForFilename(filename, color, localReader, sharedMeshes, sharedTextures, showUnmaterialed, callback) {\n  /// If this file has already been loaded, just return a reference to the meshes.\n  /// isCached will be set to true to inform the caller the meshes will probably\n  /// have to be cloned in some way.\n  if (sharedMeshes[filename]) {\n    callback(sharedMeshes[filename].meshes, true, sharedMeshes[filename].boundingSphere);\n  }\n\n  /// If this file has never been loaded, load it using loadMeshFromModelFile\n  /// the resulting mesh array will be cached within this model's scope.\n  else {\n    loadMeshFromModelFile(filename, color, localReader, sharedTextures, showUnmaterialed, function (\n      meshes,\n      boundingSphere\n    ) {\n      /// Cache result if any.\n      if (meshes) {\n        sharedMeshes[filename] = {\n          meshes: meshes,\n          boundingSphere: boundingSphere,\n        };\n      }\n\n      /// Allways fire callback.\n      callback(meshes, false, boundingSphere);\n    });\n  }\n}\n\n/**\n * WIP, Tries to find all fileIds refered by a model file.\n *\n * @memberof RenderUtils\n * @async\n * @param  {Number}   filename    Model file Id\n * @param  {LocalReader}   localReader LocalReader instance to read from\n * @param  {Function} callback   First argument is list of used file IDs\n */\nfunction getFilesUsedByModel(filename, localReader, callback) {\n  const fileIds = [filename];\n\n  /// Load model file\n  localReader.loadFile(filename, function (inflatedData) {\n    try {\n      if (!inflatedData) {\n        throw \"Could not find MFT entry for \" + filename;\n      }\n\n      const ds = new DataStream(inflatedData);\n      const modelFile = new GW2File(ds, 0);\n\n      // MODL for materials -> textures\n      const modelDataChunk = modelFile.getChunk(\"modl\");\n\n      /// Get materials used by model\n      const mats = modelDataChunk.data.permutations[0].materials;\n\n      /// Add each material file AND referenced TEXTURES\n      mats.forEach(function (mat) {\n        /// Add material file id\n        const matFileName = mat.filename;\n        fileIds.push(matFileName);\n\n        /// Add each texture file id\n        mat.textures.forEach(function (tex) {\n          fileIds.push(tex.filename);\n        });\n      });\n    } catch (e) {\n      console.warn(\"Could not export any data\", e);\n    }\n\n    callback(fileIds);\n  });\n}\n\nmodule.exports = {\n  renderRect: renderRect,\n  renderGeomChunk: renderGeomChunk,\n  loadMeshFromModelFile: loadMeshFromModelFile,\n  getMeshesForFilename: getMeshesForFilename,\n  getFilesUsedByModel: getFilesUsedByModel,\n  getInstancedMesh: getInstancedMesh,\n};\n","/*\nCopyright © Tyria3DLibrary project contributors\n\nThis file is part of the Tyria 3D Library.\n\nTyria 3D Library is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nTyria 3D Library is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with the Tyria 3D Library. If not, see <http://www.gnu.org/licenses/>.\n*/\n\nmodule.exports = {\n  /// TODO: port fog from in-engine\n\n  getFragmentShader: function () {\n    return [\n      \"uniform vec2 uvScale;\",\n      \"uniform vec2 offset;\",\n      \"uniform sampler2D texturePicker;\",\n      \"uniform sampler2D texturePicker2;\",\n      \"uniform sampler2D texture1;\",\n      \"uniform sampler2D texture2;\",\n      \"uniform sampler2D texture3;\",\n      \"uniform sampler2D texture4;\",\n\n      \"#include <common>\",\n      \"#include <logdepthbuf_pars_fragment>\",\n\n      \"varying vec2 vUv;\",\n      \"varying vec3 vecNormal;\",\n\n      \"vec3 blend(\",\n      \"vec4 texture1, float a1, vec4 texture2, float a2,\",\n      \"vec4 texture3, float a3, vec4 texture4, float a4)\",\n      \"{\",\n      \"float depth = 2.0;\",\n      \"float alphaMult = 1.0;\",\n      \"float alphaAdd  = 0.0;\",\n      \"a1 *= 4.0;\",\n      \"a2 *= 4.0;\",\n      \"a3 *= 4.0;\",\n      \"a4 *= 4.0;\",\n      \"a1 =  a1+(1.5+texture1.a);\",\n      \"a2 =  a2+(1.5+texture2.a);\",\n      \"a3 =  a3+(1.5+texture3.a);\",\n      \"a4 =  a4+(1.5+texture4.a);\",\n      \"float ma = max(a1,a2);\",\n      \"ma = max(ma,a3);\",\n      \"ma = max(ma,a4);\",\n      \"ma -= depth;\",\n      \"float b1 = max(a1 - ma, 0.0);\",\n      \"float b2 = max(a2 - ma, 0.0);\",\n      \"float b3 = max(a3 - ma, 0.0);\",\n      \"float b4 = max(a4 - ma, 0.0);\",\n      \"return (\",\n      \"texture1.rgb * b1 + texture2.rgb * b2 +\",\n      \"texture3.rgb * b3 + texture4.rgb * b4 \",\n      \") / (b1 + b2 + b3 + b4);\",\n      \"}\",\n\n      \"void main( void ) {\",\n      \"vec2 position = vUv*uvScale;\",\n      \"float edge = 1.0/1024.0;\",\n      \"vec2 compPos = edge + (vUv*0.25 + offset) * (1.0-edge*2.0);\",\n      \"vec4 tp1 = texture2D( texturePicker, compPos);\",\n      \"vec4 tp2 = texture2D( texturePicker2, compPos);\",\n      \"vec4 composite = tp1;\",\n      \"vec4 t1 = texture2D( texture1, position );\",\n      \"vec4 t2 = texture2D( texture2, position );\",\n      \"vec4 t3 = texture2D( texture3, position );\",\n      \"vec4 t4 = texture2D( texture4, position );\",\n      \"vec3 color = blend(\",\n      \"t1, tp1.a,\",\n      \"t2, tp1.b,\",\n      \"t3, tp1.g,\",\n      \"t4, tp1.r\",\n      \");\",\n      \"color *= 0.5+tp2.r;\",\n      \"gl_FragColor = vec4(color,1.0);\",\n\n      \"#include <logdepthbuf_fragment>\",\n\n      \"}\",\n    ].join(\"\\n\");\n  },\n  getVertexShader: function () {\n    return [\n      \"varying vec2 vUv;\",\n      \"varying vec3 vecNormal;\",\n\n      \"#include <common>\",\n      \"#include <logdepthbuf_pars_vertex>\",\n\n      \"void main()\",\n      \"{\",\n      \"vUv =  uv;\",\n      \"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\",\n      \"vecNormal = (modelMatrix * vec4(normal, 0.0)).xyz;\",\n      \"gl_Position = projectionMatrix * mvPosition;\",\n\n      \"#include <logdepthbuf_vertex>\",\n\n      \"}\",\n    ].join(\"\\n\");\n  },\n};\n"]}